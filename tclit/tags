!_TAG_EXTRA_DESCRIPTION	anonymous	/Include tags for non-named objects like lambda/
!_TAG_EXTRA_DESCRIPTION	fileScope	/Include tags of file scope/
!_TAG_EXTRA_DESCRIPTION	pseudo	/Include pseudo tags/
!_TAG_EXTRA_DESCRIPTION	subparser	/Include tags generated by subparsers/
!_TAG_EXTRA_DESCRIPTION!Automake	canonicalizedName	/Include canonicalized object name like libctags_a/
!_TAG_EXTRA_DESCRIPTION!PkgConfig	guessedFromFileName	/the guessed package name of the .pc file/
!_TAG_FIELD_DESCRIPTION	epoch	/the last modified time of the input file (only for F\/file kind tag)/
!_TAG_FIELD_DESCRIPTION	file	/File-restricted scoping/
!_TAG_FIELD_DESCRIPTION	input	/input file/
!_TAG_FIELD_DESCRIPTION	name	/tag name/
!_TAG_FIELD_DESCRIPTION	pattern	/pattern/
!_TAG_FIELD_DESCRIPTION	typeref	/Type and name of a variable or typedef/
!_TAG_FIELD_DESCRIPTION!Asm	properties	/properties (req, vararg for parameters)/
!_TAG_FIELD_DESCRIPTION!C++	name	/aliased names/
!_TAG_FIELD_DESCRIPTION!XML	uri	/uri associated with name prefix/
!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_KIND_DESCRIPTION!Ada	K,taskspec	/task specifications/
!_TAG_KIND_DESCRIPTION!Ada	O,protectspec	/protected data specifications/
!_TAG_KIND_DESCRIPTION!Ada	P,packspec	/package specifications/
!_TAG_KIND_DESCRIPTION!Ada	R,subprogspec	/subprogram specifications/
!_TAG_KIND_DESCRIPTION!Ada	b,label	/labels/
!_TAG_KIND_DESCRIPTION!Ada	c,component	/record type components/
!_TAG_KIND_DESCRIPTION!Ada	e,entry	/task\/protected data entries/
!_TAG_KIND_DESCRIPTION!Ada	f,formal	/generic formal parameters/
!_TAG_KIND_DESCRIPTION!Ada	i,identifier	/loop\/declare identifiers/
!_TAG_KIND_DESCRIPTION!Ada	k,task	/tasks/
!_TAG_KIND_DESCRIPTION!Ada	l,literal	/enum type literals/
!_TAG_KIND_DESCRIPTION!Ada	n,constant	/constants/
!_TAG_KIND_DESCRIPTION!Ada	o,protected	/protected data/
!_TAG_KIND_DESCRIPTION!Ada	p,package	/packages/
!_TAG_KIND_DESCRIPTION!Ada	r,subprogram	/subprograms/
!_TAG_KIND_DESCRIPTION!Ada	t,type	/types/
!_TAG_KIND_DESCRIPTION!Ada	u,subtype	/subtypes/
!_TAG_KIND_DESCRIPTION!Ada	v,variable	/variables/
!_TAG_KIND_DESCRIPTION!Ada	x,exception	/user defined exceptions/
!_TAG_KIND_DESCRIPTION!Asm	d,define	/defines/
!_TAG_KIND_DESCRIPTION!Asm	l,label	/labels/
!_TAG_KIND_DESCRIPTION!Asm	m,macro	/macros/
!_TAG_KIND_DESCRIPTION!Asm	t,type	/types (structs and records)/
!_TAG_KIND_DESCRIPTION!Autoconf	c,condition	/automake conditions/
!_TAG_KIND_DESCRIPTION!Autoconf	d,definition	/definitions/
!_TAG_KIND_DESCRIPTION!Autoconf	e,optenable	/options specified with --enable-.../
!_TAG_KIND_DESCRIPTION!Autoconf	m,macro	/autoconf macros/
!_TAG_KIND_DESCRIPTION!Autoconf	p,package	/packages/
!_TAG_KIND_DESCRIPTION!Autoconf	s,subst	/substitution keys/
!_TAG_KIND_DESCRIPTION!Autoconf	t,template	/templates/
!_TAG_KIND_DESCRIPTION!Autoconf	w,optwith	/options specified with --with-.../
!_TAG_KIND_DESCRIPTION!Automake	D,data	/datum/
!_TAG_KIND_DESCRIPTION!Automake	L,library	/libraries/
!_TAG_KIND_DESCRIPTION!Automake	M,man	/manuals/
!_TAG_KIND_DESCRIPTION!Automake	P,program	/programs/
!_TAG_KIND_DESCRIPTION!Automake	S,script	/scripts/
!_TAG_KIND_DESCRIPTION!Automake	T,ltlibrary	/ltlibraries/
!_TAG_KIND_DESCRIPTION!Automake	c,condition	/conditions/
!_TAG_KIND_DESCRIPTION!Automake	d,directory	/directories/
!_TAG_KIND_DESCRIPTION!Automake	s,subdir	/subdirs/
!_TAG_KIND_DESCRIPTION!C	d,macro	/macro definitions/
!_TAG_KIND_DESCRIPTION!C	e,enumerator	/enumerators (values inside an enumeration)/
!_TAG_KIND_DESCRIPTION!C	f,function	/function definitions/
!_TAG_KIND_DESCRIPTION!C	g,enum	/enumeration names/
!_TAG_KIND_DESCRIPTION!C	h,header	/included header files/
!_TAG_KIND_DESCRIPTION!C	m,member	/struct, and union members/
!_TAG_KIND_DESCRIPTION!C	s,struct	/structure names/
!_TAG_KIND_DESCRIPTION!C	t,typedef	/typedefs/
!_TAG_KIND_DESCRIPTION!C	u,union	/union names/
!_TAG_KIND_DESCRIPTION!C	v,variable	/variable definitions/
!_TAG_KIND_DESCRIPTION!C#	E,event	/events/
!_TAG_KIND_DESCRIPTION!C#	c,class	/classes/
!_TAG_KIND_DESCRIPTION!C#	d,macro	/macro definitions/
!_TAG_KIND_DESCRIPTION!C#	e,enumerator	/enumerators (values inside an enumeration)/
!_TAG_KIND_DESCRIPTION!C#	f,field	/fields/
!_TAG_KIND_DESCRIPTION!C#	g,enum	/enumeration names/
!_TAG_KIND_DESCRIPTION!C#	i,interface	/interfaces/
!_TAG_KIND_DESCRIPTION!C#	m,method	/methods/
!_TAG_KIND_DESCRIPTION!C#	n,namespace	/namespaces/
!_TAG_KIND_DESCRIPTION!C#	p,property	/properties/
!_TAG_KIND_DESCRIPTION!C#	s,struct	/structure names/
!_TAG_KIND_DESCRIPTION!C#	t,typedef	/typedefs/
!_TAG_KIND_DESCRIPTION!C++	c,class	/classes/
!_TAG_KIND_DESCRIPTION!C++	d,macro	/macro definitions/
!_TAG_KIND_DESCRIPTION!C++	e,enumerator	/enumerators (values inside an enumeration)/
!_TAG_KIND_DESCRIPTION!C++	f,function	/function definitions/
!_TAG_KIND_DESCRIPTION!C++	g,enum	/enumeration names/
!_TAG_KIND_DESCRIPTION!C++	h,header	/included header files/
!_TAG_KIND_DESCRIPTION!C++	m,member	/class, struct, and union members/
!_TAG_KIND_DESCRIPTION!C++	n,namespace	/namespaces/
!_TAG_KIND_DESCRIPTION!C++	s,struct	/structure names/
!_TAG_KIND_DESCRIPTION!C++	t,typedef	/typedefs/
!_TAG_KIND_DESCRIPTION!C++	u,union	/union names/
!_TAG_KIND_DESCRIPTION!C++	v,variable	/variable definitions/
!_TAG_KIND_DESCRIPTION!CMake	D,option	/options specified with -D/
!_TAG_KIND_DESCRIPTION!CMake	f,function	/functions/
!_TAG_KIND_DESCRIPTION!CMake	m,macro	/macros/
!_TAG_KIND_DESCRIPTION!CMake	p,project	/projects/
!_TAG_KIND_DESCRIPTION!CMake	t,target	/targets/
!_TAG_KIND_DESCRIPTION!CMake	v,variable	/variable definitions/
!_TAG_KIND_DESCRIPTION!D	M,module	/modules/
!_TAG_KIND_DESCRIPTION!D	T,template	/templates/
!_TAG_KIND_DESCRIPTION!D	V,version	/version statements/
!_TAG_KIND_DESCRIPTION!D	X,mixin	/mixins/
!_TAG_KIND_DESCRIPTION!D	a,alias	/aliases/
!_TAG_KIND_DESCRIPTION!D	c,class	/classes/
!_TAG_KIND_DESCRIPTION!D	e,enumerator	/enumerators (values inside an enumeration)/
!_TAG_KIND_DESCRIPTION!D	f,function	/function definitions/
!_TAG_KIND_DESCRIPTION!D	g,enum	/enumeration names/
!_TAG_KIND_DESCRIPTION!D	i,interface	/interfaces/
!_TAG_KIND_DESCRIPTION!D	m,member	/class, struct, and union members/
!_TAG_KIND_DESCRIPTION!D	n,namespace	/namespaces/
!_TAG_KIND_DESCRIPTION!D	s,struct	/structure names/
!_TAG_KIND_DESCRIPTION!D	u,union	/union names/
!_TAG_KIND_DESCRIPTION!D	v,variable	/variable definitions/
!_TAG_KIND_DESCRIPTION!DosBatch	l,label	/labels/
!_TAG_KIND_DESCRIPTION!DosBatch	v,variable	/variables/
!_TAG_KIND_DESCRIPTION!HTML	C,stylesheet	/stylesheets/
!_TAG_KIND_DESCRIPTION!HTML	I,id	/identifiers/
!_TAG_KIND_DESCRIPTION!HTML	J,script	/scripts/
!_TAG_KIND_DESCRIPTION!HTML	a,anchor	/named anchors/
!_TAG_KIND_DESCRIPTION!HTML	c,class	/classes/
!_TAG_KIND_DESCRIPTION!HTML	h,heading1	/H1 headings/
!_TAG_KIND_DESCRIPTION!HTML	i,heading2	/H2 headings/
!_TAG_KIND_DESCRIPTION!HTML	j,heading3	/H3 headings/
!_TAG_KIND_DESCRIPTION!HTML	t,title	/titles/
!_TAG_KIND_DESCRIPTION!M4	I,macrofile	/macro files/
!_TAG_KIND_DESCRIPTION!M4	d,macro	/macros/
!_TAG_KIND_DESCRIPTION!Make	I,makefile	/makefiles/
!_TAG_KIND_DESCRIPTION!Make	m,macro	/macros/
!_TAG_KIND_DESCRIPTION!Make	t,target	/targets/
!_TAG_KIND_DESCRIPTION!Man	S,subsection	/sub sections/
!_TAG_KIND_DESCRIPTION!Man	s,section	/sections/
!_TAG_KIND_DESCRIPTION!Man	t,title	/titles/
!_TAG_KIND_DESCRIPTION!Markdown	S,subsection	/level 2 sections/
!_TAG_KIND_DESCRIPTION!Markdown	T,l4subsection	/level 4 sections/
!_TAG_KIND_DESCRIPTION!Markdown	c,chapter	/chapters/
!_TAG_KIND_DESCRIPTION!Markdown	h,hashtag	/hashtags/
!_TAG_KIND_DESCRIPTION!Markdown	n,footnote	/footnotes/
!_TAG_KIND_DESCRIPTION!Markdown	s,section	/sections/
!_TAG_KIND_DESCRIPTION!Markdown	t,subsubsection	/level 3 sections/
!_TAG_KIND_DESCRIPTION!Markdown	u,l5subsection	/level 5 sections/
!_TAG_KIND_DESCRIPTION!Pascal	f,function	/functions/
!_TAG_KIND_DESCRIPTION!Pascal	p,procedure	/procedures/
!_TAG_KIND_DESCRIPTION!PkgConfig	N,name	/display names/
!_TAG_KIND_DESCRIPTION!PkgConfig	p,pkg	/packages/
!_TAG_KIND_DESCRIPTION!PkgConfig	v,var	/variabels/
!_TAG_KIND_DESCRIPTION!PlistXML	k,key	/keys/
!_TAG_KIND_DESCRIPTION!RpmSpec	g,global	/global macros/
!_TAG_KIND_DESCRIPTION!RpmSpec	m,macro	/macros/
!_TAG_KIND_DESCRIPTION!RpmSpec	p,package	/packages/
!_TAG_KIND_DESCRIPTION!RpmSpec	p,patch	/patch files/
!_TAG_KIND_DESCRIPTION!RpmSpec	t,tag	/tags/
!_TAG_KIND_DESCRIPTION!SVG	d,def	/ids in defs tags/
!_TAG_KIND_DESCRIPTION!Sh	a,alias	/aliases/
!_TAG_KIND_DESCRIPTION!Sh	f,function	/functions/
!_TAG_KIND_DESCRIPTION!Sh	h,heredoc	/label for here document/
!_TAG_KIND_DESCRIPTION!Sh	s,script	/script files/
!_TAG_KIND_DESCRIPTION!Tcl	n,namespace	/namespaces/
!_TAG_KIND_DESCRIPTION!Tcl	p,procedure	/procedures/
!_TAG_KIND_DESCRIPTION!WindRes	a,accelerators	/accelerators/
!_TAG_KIND_DESCRIPTION!WindRes	b,bitmap	/bitmaps/
!_TAG_KIND_DESCRIPTION!WindRes	c,cursor	/cursors/
!_TAG_KIND_DESCRIPTION!WindRes	d,dialog	/dialogs/
!_TAG_KIND_DESCRIPTION!WindRes	f,font	/fonts/
!_TAG_KIND_DESCRIPTION!WindRes	i,icon	/icons/
!_TAG_KIND_DESCRIPTION!WindRes	m,menu	/menus/
!_TAG_KIND_DESCRIPTION!WindRes	v,version	/versions/
!_TAG_KIND_DESCRIPTION!XML	i,id	/id attributes/
!_TAG_KIND_DESCRIPTION!XML	n,nsprefix	/namespace prefixes/
!_TAG_KIND_DESCRIPTION!XML	r,root	/root elements/
!_TAG_KIND_DESCRIPTION!YACC	l,label	/labels/
!_TAG_KIND_DESCRIPTION!YACC	t,token	/tokens/
!_TAG_KIND_DESCRIPTION!Yaml	a,anchor	/anchors/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_OUTPUT_VERSION	0.0	/current.age/
!_TAG_PARSER_VERSION!Ada	0.0	/current.age/
!_TAG_PARSER_VERSION!Asm	1.0	/current.age/
!_TAG_PARSER_VERSION!Autoconf	0.0	/current.age/
!_TAG_PARSER_VERSION!Automake	1.1	/current.age/
!_TAG_PARSER_VERSION!C	1.1	/current.age/
!_TAG_PARSER_VERSION!C#	0.0	/current.age/
!_TAG_PARSER_VERSION!C++	1.1	/current.age/
!_TAG_PARSER_VERSION!CMake	0.0	/current.age/
!_TAG_PARSER_VERSION!D	0.0	/current.age/
!_TAG_PARSER_VERSION!DosBatch	0.0	/current.age/
!_TAG_PARSER_VERSION!HTML	0.0	/current.age/
!_TAG_PARSER_VERSION!M4	0.0	/current.age/
!_TAG_PARSER_VERSION!Make	0.0	/current.age/
!_TAG_PARSER_VERSION!Man	0.0	/current.age/
!_TAG_PARSER_VERSION!Markdown	1.1	/current.age/
!_TAG_PARSER_VERSION!Pascal	0.0	/current.age/
!_TAG_PARSER_VERSION!PkgConfig	0.0	/current.age/
!_TAG_PARSER_VERSION!PlistXML	0.0	/current.age/
!_TAG_PARSER_VERSION!RpmSpec	0.0	/current.age/
!_TAG_PARSER_VERSION!SVG	0.0	/current.age/
!_TAG_PARSER_VERSION!Sh	0.0	/current.age/
!_TAG_PARSER_VERSION!Tcl	0.0	/current.age/
!_TAG_PARSER_VERSION!WindRes	0.0	/current.age/
!_TAG_PARSER_VERSION!XML	0.0	/current.age/
!_TAG_PARSER_VERSION!YACC	0.0	/current.age/
!_TAG_PARSER_VERSION!Yaml	0.0	/current.age/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/home/yorick/repos/tcl/unchained/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	6.1.0	/v6.1.0/
!_TAG_ROLE_DESCRIPTION!Ada!package	subunit	/package name referenced in separate()/
!_TAG_ROLE_DESCRIPTION!Autoconf!optenable	cmdline	/specified in a configure command line/
!_TAG_ROLE_DESCRIPTION!Autoconf!optwith	cmdline	/specified in a configure command line/
!_TAG_ROLE_DESCRIPTION!Automake!condition	branched	/used for branching/
!_TAG_ROLE_DESCRIPTION!Automake!directory	data	/directory for DATA primary/
!_TAG_ROLE_DESCRIPTION!Automake!directory	library	/directory for LIBRARIES primary/
!_TAG_ROLE_DESCRIPTION!Automake!directory	ltlibrary	/directory for LTLIBRARIES primary/
!_TAG_ROLE_DESCRIPTION!Automake!directory	man	/directory for MANS primary/
!_TAG_ROLE_DESCRIPTION!Automake!directory	program	/directory for PROGRAMS primary/
!_TAG_ROLE_DESCRIPTION!Automake!directory	script	/directory for SCRIPTS primary/
!_TAG_ROLE_DESCRIPTION!C!function	foreigndecl	/declared in foreign languages/
!_TAG_ROLE_DESCRIPTION!C!header	local	/local header/
!_TAG_ROLE_DESCRIPTION!C!header	system	/system header/
!_TAG_ROLE_DESCRIPTION!C!macro	undef	/undefined/
!_TAG_ROLE_DESCRIPTION!C!struct	foreigndecl	/declared in foreign languages/
!_TAG_ROLE_DESCRIPTION!C++!header	local	/local header/
!_TAG_ROLE_DESCRIPTION!C++!header	system	/system header/
!_TAG_ROLE_DESCRIPTION!C++!macro	undef	/undefined/
!_TAG_ROLE_DESCRIPTION!HTML!class	attribute	/assigned as attributes/
!_TAG_ROLE_DESCRIPTION!HTML!script	extFile	/referenced as external files/
!_TAG_ROLE_DESCRIPTION!HTML!stylesheet	extFile	/referenced as external files/
!_TAG_ROLE_DESCRIPTION!M4!macro	undef	/undefined/
!_TAG_ROLE_DESCRIPTION!M4!macrofile	included	/included macro/
!_TAG_ROLE_DESCRIPTION!M4!macrofile	sincluded	/silently included macro/
!_TAG_ROLE_DESCRIPTION!Make!makefile	included	/included/
!_TAG_ROLE_DESCRIPTION!Make!makefile	optional	/optionally included/
!_TAG_ROLE_DESCRIPTION!PkgConfig!pkg	conflicted	/confliected/
!_TAG_ROLE_DESCRIPTION!PkgConfig!pkg	provided	/provided/
!_TAG_ROLE_DESCRIPTION!PkgConfig!pkg	required	/required/
!_TAG_ROLE_DESCRIPTION!RpmSpec!macro	undef	/undefined/
!_TAG_ROLE_DESCRIPTION!RpmSpec!patch	decl	/declared for applying later/
!_TAG_ROLE_DESCRIPTION!Sh!heredoc	endmarker	/end marker/
!_TAG_ROLE_DESCRIPTION!Sh!script	loaded	/loaded/
!_TAG_ROLE_DESCRIPTION!Yaml!anchor	alias	/alias/
$(BUILD)	compat/zlib/nintendods/Makefile	/^$(BUILD): lib$/;"	t
$(CAT32)	win/Makefile.in	/^$(CAT32): cat32.$(OBJEXT)$/;"	t
$(DTRACE_HDR)	unix/Makefile.in	/^$(DTRACE_HDR): $(DTRACE_SRC)$/;"	t
$(DTRACE_OBJ)	unix/Makefile.in	/^$(DTRACE_OBJ): $(DTRACE_SRC) $(TCL_OBJS)$/;"	t
$(GENERIC_DIR)/tclOOScript.h	unix/Makefile.in	/^$(GENERIC_DIR)\/tclOOScript.h: $(TOOL_DIR)\/tclOOScript.tcl$/;"	t
$(GENERIC_DIR)/tclOOScript.h	win/Makefile.in	/^$(GENERIC_DIR)\/tclOOScript.h: $(TOOL_DIR)\/tclOOScript.tcl$/;"	t
$(GENERIC_DIR)/tclOOStubInit.c	unix/Makefile.in	/^$(GENERIC_DIR)\/tclOOStubInit.c: $(GENERIC_DIR)\/tclOO.decls$/;"	t
$(GENERIC_DIR)/tclStubInit.c	unix/Makefile.in	/^$(GENERIC_DIR)\/tclStubInit.c: $(GENERIC_DIR)\/tcl.decls \\$/;"	t
$(GENERIC_DIR)/tclStubInit.c	win/Makefile.in	/^$(GENERIC_DIR)\/tclStubInit.c: $(GENERIC_DIR)\/tcl.decls \\$/;"	t
$(MAC_OSX_DIR)/configure	unix/Makefile.in	/^$(MAC_OSX_DIR)\/configure: $(MAC_OSX_DIR)\/configure.ac $(UNIX_DIR)\/configure$/;"	t
$(OUTPUT)	compat/zlib/nintendods/Makefile	/^$(OUTPUT)	:	$(OFILES)$/;"	t
$(SHAREDLIBV)	compat/zlib/Makefile.in	/^placebo $(SHAREDLIBV): $(PIC_OBJS) libz.a$/;"	t
$(STUB_LIB_OBJS)	unix/Makefile.in	/^$(TCL_OBJS) $(STUB_LIB_OBJS) $(TCLSH_OBJS) $(TCLTEST_OBJS) $(XTTEST_OBJS) $(TOMMATH_OBJS): @DTRA/;"	t
$(TCLSH)	win/Makefile.in	/^$(TCLSH): $(TCLSH_OBJS) @LIBRARIES@ $(TCL_STUB_LIB_FILE) tclsh.$(RES) ${TCL_ZIP_FILE}$/;"	t
$(TCLSH_OBJS)	unix/Makefile.in	/^$(TCL_OBJS) $(STUB_LIB_OBJS) $(TCLSH_OBJS) $(TCLTEST_OBJS) $(XTTEST_OBJS) $(TOMMATH_OBJS): @DTRA/;"	t
$(TCLTEST_OBJS)	unix/Makefile.in	/^$(TCL_OBJS) $(STUB_LIB_OBJS) $(TCLSH_OBJS) $(TCLTEST_OBJS) $(XTTEST_OBJS) $(TOMMATH_OBJS): @DTRA/;"	t
$(TCL_OBJS)	unix/Makefile.in	/^$(TCL_OBJS) $(STUB_LIB_OBJS) $(TCLSH_OBJS) $(TCLTEST_OBJS) $(XTTEST_OBJS) $(TOMMATH_OBJS): @DTRA/;"	t
$(TOMMATH_OBJS)	unix/Makefile.in	/^$(TCL_OBJS) $(STUB_LIB_OBJS) $(TCLSH_OBJS) $(TCLTEST_OBJS) $(XTTEST_OBJS) $(TOMMATH_OBJS): @DTRA/;"	t
$(TOP_DIR)/manifest.uuid	unix/Makefile.in	/^$(TOP_DIR)\/manifest.uuid:$/;"	t
$(TOP_DIR)/manifest.uuid	win/Makefile.in	/^$(TOP_DIR)\/manifest.uuid:$/;"	t
$(UNIX_DIR)/configure	unix/Makefile.in	/^$(UNIX_DIR)\/configure: $(UNIX_DIR)\/configure.ac $(UNIX_DIR)\/tcl.m4 \\$/;"	t
$(UNIX_DIR)/tclConfig.h.in	unix/Makefile.in	/^$(UNIX_DIR)\/tclConfig.h.in: $(MAC_OSX_DIR)\/configure$/;"	t
$(XTTEST_OBJS)	unix/Makefile.in	/^$(TCL_OBJS) $(STUB_LIB_OBJS) $(TCLSH_OBJS) $(TCLTEST_OBJS) $(XTTEST_OBJS) $(TOMMATH_OBJS): @DTRA/;"	t
$(ZLIB_LIB)	compat/zlib/contrib/delphi/zlibd32.mak	/^$(ZLIB_LIB): $(OBJ1) $(OBJ2)$/;"	t
$(ZLIB_LIB)	compat/zlib/contrib/pascal/zlibd32.mak	/^$(ZLIB_LIB): $(OBJ1) $(OBJ2)$/;"	t
$(ZLIB_LIB)	compat/zlib/watcom/watcom_f.mak	/^$(ZLIB_LIB): $(OBJS)$/;"	t
$(ZLIB_LIB)	compat/zlib/watcom/watcom_l.mak	/^$(ZLIB_LIB): $(OBJS)$/;"	t
$1	unix/tcl.m4	/^	AC_DEFINE($1, m4_default([$4],[1]), [Add the ]$1[ flag when building])$/;"	d
${DDE_DLL_FILE}	win/Makefile.in	/^${DDE_DLL_FILE}: ${TCL_STUB_LIB_FILE} ${DDE_OBJS}$/;"	t
${LIB_FILE}	unix/Makefile.in	/^${LIB_FILE}: ${STUB_LIB_FILE} ${OBJS} ${TCL_ZIP_FILE}$/;"	t
${NATIVE_TCLSH}	unix/Makefile.in	/^${NATIVE_TCLSH}:$/;"	t
${PROJECT}	macosx/GNUmakefile	/^${PROJECT}:$/;"	t
${REG_DLL_FILE}	win/Makefile.in	/^${REG_DLL_FILE}: ${TCL_STUB_LIB_FILE} ${REG_OBJS}$/;"	t
${STUB_LIB_FILE}	unix/Makefile.in	/^${STUB_LIB_FILE}: ${STUB_LIB_OBJS}$/;"	t
${TCLTEST_EXE}	unix/Makefile.in	/^${TCLTEST_EXE}: ${TCLTEST_OBJS} ${TCL_LIB_FILE} ${TCL_STUB_LIB_FILE} ${BUILD_DLTEST} ${TCL_ZIP_F/;"	t
${TCL_DLL_FILE}	win/Makefile.in	/^${TCL_DLL_FILE}: ${TCL_OBJS} tcl.$(RES) @ZLIB_DLL_FILE@ @TOMMATH_DLL_FILE@ ${TCL_ZIP_FILE}$/;"	t
${TCL_EXE}	unix/Makefile.in	/^${TCL_EXE}: ${TCLSH_OBJS} ${TCL_LIB_FILE} ${TCL_STUB_LIB_FILE} ${TCL_ZIP_FILE}$/;"	t
${TCL_LIB_FILE}	win/Makefile.in	/^${TCL_LIB_FILE}: ${TCL_OBJS} tclWinPanic.$(OBJEXT) ${DDE_OBJS} ${REG_OBJS}$/;"	t
${TCL_STUB_LIB_FILE}	win/Makefile.in	/^${TCL_STUB_LIB_FILE}: ${STUB_OBJS} ${DDE_OBJS} ${REG_OBJS}$/;"	t
${TCL_ZIP_FILE}	unix/Makefile.in	/^${TCL_ZIP_FILE}: ${ZIP_INSTALL_OBJS}$/;"	t
${TCL_ZIP_FILE}	win/Makefile.in	/^${TCL_ZIP_FILE}:  ${ZIP_INSTALL_OBJS} ${DDE_DLL_FILE} ${REG_DLL_FILE}$/;"	t
${TEST_DLL_FILE}	win/Makefile.in	/^${TEST_DLL_FILE}: ${TCL_STUB_LIB_FILE} ${TCLTEST_OBJS}$/;"	t
${TEST_EXE_FILE}	win/Makefile.in	/^${TEST_EXE_FILE}: ${TCL_STUB_LIB_FILE} ${TCLTEST_OBJS} tclTestMain.${OBJEXT}$/;"	t
${TOMMATH_DLL_FILE}	win/Makefile.in	/^${TOMMATH_DLL_FILE}: ${TCL_STUB_LIB_FILE}$/;"	t
${ZLIB_DLL_FILE}	win/Makefile.in	/^${ZLIB_DLL_FILE}: ${TCL_STUB_LIB_FILE}$/;"	t
${objdir}/Makefile	macosx/GNUmakefile	/^${objdir}\/Makefile: ${UNIX_DIR}\/Makefile.in ${UNIX_DIR}\/configure \\$/;"	t
${targets}	macosx/GNUmakefile	/^${targets}:$/;"	t
%-${PROJECT}	macosx/GNUmakefile	/^clean-${PROJECT}: %-${PROJECT}:$/;"	t
%-${PROJECT}	macosx/GNUmakefile	/^distclean-${PROJECT}: %-${PROJECT}: clean-${PROJECT}$/;"	t
%-${PROJECT}	macosx/GNUmakefile	/^test-${PROJECT}: %-${PROJECT}: build-${PROJECT}$/;"	t
%.${OBJEXT}	win/Makefile.in	/^%.${OBJEXT}: %.c$/;"	t
%.bin.o	compat/zlib/nintendods/Makefile	/^%.bin.o	:	%.bin$/;"	t
../../libz.a	compat/zlib/contrib/untgz/Makefile	/^..\/..\/libz.a:$/;"	t
.C.OBJ	compat/zlib/watcom/watcom_f.mak	/^.C.OBJ:$/;"	t
.C.OBJ	compat/zlib/watcom/watcom_l.mak	/^.C.OBJ:$/;"	t
.c.o	compat/zlib/contrib/minizip/Makefile	/^.c.o:$/;"	t
.c.o	unix/Makefile.in	/^.c.o:$/;"	t
.c.obj	compat/zlib/contrib/delphi/zlibd32.mak	/^.c.obj:$/;"	t
.c.obj	compat/zlib/contrib/pascal/zlibd32.mak	/^.c.obj:$/;"	t
.rc.$(RES)	win/Makefile.in	/^.rc.$(RES):$/;"	t
64-bit capacity: Data values larger than 2Gb	changes.md	/^## 64-bit capacity: Data values larger than 2Gb$/;"	s
64bit	unix/tcl.m4	/^    AC_ARG_ENABLE(64bit,$/;"	e
64bit	win/tcl.m4	/^    AC_ARG_ENABLE(64bit,[  --enable-64bit          enable 64bit support (where applicable)], [do/;"	e
64bit-vis	unix/tcl.m4	/^    AC_ARG_ENABLE(64bit-vis,$/;"	e
::http	tests/httpTest.tcl	/^namespace eval ::http {$/;"	n
::httpTest	tests/httpTest.tcl	/^namespace eval ::httpTest {$/;"	n
::httpTestScript	tests/httpTestScript.tcl	/^namespace eval ::httpTestScript {$/;"	n
::platform	library/platform/platform.tcl	/^namespace eval ::platform {}$/;"	n
::platform::shell	library/platform/shell.tcl	/^namespace eval ::platform::shell {}$/;"	n
::practcl	library/install.tcl	/^namespace eval ::practcl {}$/;"	n
::safe	library/safe.tcl	/^namespace eval ::safe {$/;"	n
::tcl	library/history.tcl	/^namespace eval ::tcl {$/;"	n
::tcl	library/opt/optparse.tcl	/^namespace eval ::tcl {$/;"	n
::tcl	library/word.tcl	/^namespace eval ::tcl {$/;"	n
::tcl::clock	library/clock.tcl	/^namespace eval ::tcl::clock \\$/;"	n
::tcl::clock	library/clock.tcl	/^namespace eval ::tcl::clock {$/;"	n
::tcl::clock	tools/makeTestCases.tcl	/^namespace eval ::tcl::clock {$/;"	n
::tcl::idna	library/cookiejar/idna.tcl	/^namespace eval ::tcl::idna {$/;"	n
::tcl::tm	library/tm.tcl	/^namespace eval ::tcl::tm {$/;"	n
::tcl::unsupported::icu	library/icu.tcl	/^namespace eval ::tcl::unsupported::icu {$/;"	n
::tclTestPerf	tests-perf/test-performance.tcl	/^namespace eval ::tclTestPerf {$/;"	n
::tclTestPerf-Chan	tests-perf/chan.perf.tcl	/^namespace eval ::tclTestPerf-Chan {$/;"	n
::tclTestPerf-File	tests-perf/file.perf.tcl	/^namespace eval ::tclTestPerf-File {$/;"	n
::tclTestPerf-List	tests-perf/list.perf.tcl	/^namespace eval ::tclTestPerf-List {$/;"	n
::tclTestPerf-TclClock	tests-perf/clock.perf.tcl	/^namespace eval ::tclTestPerf-TclClock {$/;"	n
::tclTestPerf-Timer-Event	tests-perf/timer-event.perf.tcl	/^namespace eval ::tclTestPerf-Timer-Event {$/;"	n
::tcltests	tests/tcltests.tcl	/^namespace eval ::tcltests {$/;"	n
<a id="build">3.</a> Compiling and installing Tcl	README.md	/^## <a id="build">3.<\/a> Compiling and installing Tcl$/;"	s	chapter:README:  Tcl
<a id="complangtcl">5.</a> Tcl newsgroup	README.md	/^## <a id="complangtcl">5.<\/a> Tcl newsgroup$/;"	s	chapter:README:  Tcl
<a id="devtools">4.</a> Development tools	README.md	/^## <a id="devtools">4.<\/a> Development tools$/;"	s	chapter:README:  Tcl
<a id="doc">2.</a> Documentation	README.md	/^## <a id="doc">2.<\/a> Documentation$/;"	s	chapter:README:  Tcl
<a id="doc.unix">2a.</a> Unix Documentation	README.md	/^### <a id="doc.unix">2a.<\/a> Unix Documentation$/;"	S	section:README:  Tcl""<a id="doc">2.</a> Documentation
<a id="doc.win">2b.</a> Windows Documentation	README.md	/^### <a id="doc.win">2b.<\/a> Windows Documentation$/;"	S	section:README:  Tcl""<a id="doc">2.</a> Documentation
<a id="email">7.</a> Mailing lists	README.md	/^## <a id="email">7.<\/a> Mailing lists$/;"	s	chapter:README:  Tcl
<a id="intro">1.</a> Introduction	README.md	/^## <a id="intro">1.<\/a> Introduction$/;"	s	chapter:README:  Tcl
<a id="support">8.</a> Support and Training	README.md	/^## <a id="support">8.<\/a> Support and Training$/;"	s	chapter:README:  Tcl
<a id="thanks">10.</a> Thank You	README.md	/^## <a id="thanks">10.<\/a> Thank You$/;"	s	chapter:README:  Tcl
<a id="watch">9.</a> Tracking Development	README.md	/^## <a id="watch">9.<\/a> Tracking Development$/;"	s	chapter:README:  Tcl
<a id="wiki">6.</a> Tcl'ers Wiki	README.md	/^## <a id="wiki">6.<\/a> Tcl'ers Wiki$/;"	s	chapter:README:  Tcl
ABI Laboratory	libtommath/README.md	/^### ABI Laboratory$/;"	S	section:libtommath""Build Status
ABSIZE	generic/regguts.h	/^#define	ABSIZE	/;"	d
ACCESSING VARIABLES DURING TRACES	doc/TraceVar.3	/^.SH "ACCESSING VARIABLES DURING TRACES"$/;"	s	title:Tcl_TraceVar
ACCESSPROC	doc/FileSystem.3	/^.SS ACCESSPROC$/;"	S	section:Filesystem""FILESYSTEM OPERATIONS
AC_FLAGS	unix/Makefile.in	/^AC_FLAGS		= @DEFS@$/;"	m
AC_FLAGS	unix/dltest/Makefile.in	/^AC_FLAGS =		@DEFS@$/;"	m
AC_FLAGS	win/Makefile.in	/^AC_FLAGS	= @EXTRA_CFLAGS@ @DEFS@$/;"	m
ADD_PAIR	generic/tclCmdIL.c	/^#define ADD_PAIR(/;"	d	file:
ADJUST_FPU_CONTROL_WORD	generic/tclStrToD.c	/^#  define ADJUST_FPU_CONTROL_WORD$/;"	d	file:
AFTER_CANCEL	generic/tclTimer.c	/^    enum afterSubCmdsEnum {AFTER_CANCEL, AFTER_IDLE, AFTER_INFO};$/;"	e	enum:Tcl_AfterObjCmd::afterSubCmdsEnum	file:
AFTER_IDLE	generic/tclTimer.c	/^    enum afterSubCmdsEnum {AFTER_CANCEL, AFTER_IDLE, AFTER_INFO};$/;"	e	enum:Tcl_AfterObjCmd::afterSubCmdsEnum	file:
AFTER_INFO	generic/tclTimer.c	/^    enum afterSubCmdsEnum {AFTER_CANCEL, AFTER_IDLE, AFTER_INFO};$/;"	e	enum:Tcl_AfterObjCmd::afterSubCmdsEnum	file:
AFTER_JMP	compat/zlib/contrib/gcc_gvmat64/gvmat64.S	/^#define AFTER_JMP /;"	d	file:
AF_INET6	compat/fake-rfc2553.h	/^#define AF_INET6 /;"	d
AF_INET6	unix/tclUnixPort.h	/^#   define AF_INET6	/;"	d
AHEAD	generic/regcomp.c	/^#define	AHEAD	/;"	d	file:
AI_CANONNAME	compat/fake-rfc2553.h	/^# define AI_CANONNAME	/;"	d
AI_NUMERICHOST	compat/fake-rfc2553.h	/^# define AI_NUMERICHOST	/;"	d
AI_PASSIVE	compat/fake-rfc2553.h	/^# define AI_PASSIVE	/;"	d
ALIAS_CMDV_PREALLOC	generic/tclInterp.c	/^#define ALIAS_CMDV_PREALLOC /;"	d	file:
ALLOC	compat/zlib/contrib/minizip/unzip.c	/^# define ALLOC(/;"	d	file:
ALLOC	compat/zlib/contrib/minizip/zip.c	/^# define ALLOC(/;"	d	file:
ALLOC_CHUNK	generic/tclOO.c	/^#define ALLOC_CHUNK /;"	d	file:
ALLOC_NOBJHIGH	generic/tclInt.h	/^#  define ALLOC_NOBJHIGH /;"	d
ALPHA_BITS	generic/tclUtf.c	/^#define ALPHA_BITS /;"	d	file:
AM_CPPFLAGS	compat/zlib/contrib/minizip/Makefile.am	/^AM_CPPFLAGS = -I$(zlib_top_srcdir)$/;"	m
AM_LDFLAGS	compat/zlib/contrib/minizip/Makefile.am	/^AM_LDFLAGS = -L$(zlib_top_builddir)$/;"	m
AND	generic/tclCompExpr.c	/^#define AND	/;"	d	file:
APPEND_FIELD	generic/tclTest.c	/^#define APPEND_FIELD(/;"	d	file:
APPEND_OP	compat/zlib/examples/gzlog.c	/^#define APPEND_OP /;"	d	file:
APPEND_STATUS_ADDINZIP	compat/zlib/contrib/minizip/zip.h	/^#define APPEND_STATUS_ADDINZIP /;"	d
APPEND_STATUS_CREATE	compat/zlib/contrib/minizip/zip.h	/^#define APPEND_STATUS_CREATE /;"	d
APPEND_STATUS_CREATEAFTER	compat/zlib/contrib/minizip/zip.h	/^#define APPEND_STATUS_CREATEAFTER /;"	d
APPLICATION PROGRAMMING INTERFACES	doc/StdChannels.3	/^.SS "APPLICATION PROGRAMMING INTERFACES"$/;"	S	section:Standard Channels""DESCRIPTION
APPL_DOS	win/tclWinPipe.c	/^#define APPL_DOS	/;"	d	file:
APPL_NONE	win/tclWinPipe.c	/^#define APPL_NONE	/;"	d	file:
APPL_WIN32	win/tclWinPipe.c	/^#define APPL_WIN32	/;"	d	file:
APPL_WIN3X	win/tclWinPipe.c	/^#define APPL_WIN3X	/;"	d	file:
APP_CC_SWITCHES	unix/Makefile.in	/^APP_CC_SWITCHES = $(STUB_CC_SWITCHES) @EXTRA_APP_CC_SWITCHES@$/;"	m
AR	compat/zlib/Makefile.in	/^AR=ar$/;"	m
AR	compat/zlib/contrib/delphi/zlibd32.mak	/^AR = tlib$/;"	m
AR	compat/zlib/contrib/pascal/zlibd32.mak	/^AR = tlib$/;"	m
AR	unix/Makefile.in	/^AR			= @AR@$/;"	m
AR	win/Makefile.in	/^AR		= @AR@$/;"	m
AR	win/configure.ac	/^AC_SUBST(AR)$/;"	s
ARCH	compat/zlib/nintendods/Makefile	/^ARCH	:=	-mthumb -mthumb-interwork$/;"	m
ARCH	win/vctool.bat	/^set ARCH=%VSCMD_ARG_TGT_ARCH%$/;"	v
ARCV	generic/regcomp.c	/^#define	ARCV(/;"	d	file:
AREGTYPE	compat/zlib/contrib/untgz/untgz.c	/^#define AREGTYPE /;"	d	file:
ARFLAGS	compat/zlib/Makefile.in	/^ARFLAGS=rc$/;"	m
ARGUMENT DESCRIPTOR ENTRIES	doc/ParseArgs.3	/^.SS "ARGUMENT DESCRIPTOR ENTRIES"$/;"	S	section:Tcl_ParseArgsObjv""DESCRIPTION
ARGUMENTS	doc/Access.3	/^.SH ARGUMENTS$/;"	s	title:Tcl_Access
ARGUMENTS	doc/AddErrInfo.3	/^.SH ARGUMENTS$/;"	s	title:Tcl_AddErrorInfo
ARGUMENTS	doc/Alloc.3	/^.SH ARGUMENTS$/;"	s	title:Tcl_Alloc
ARGUMENTS	doc/AllowExc.3	/^.SH ARGUMENTS$/;"	s	title:Tcl_AllowExceptions
ARGUMENTS	doc/AppInit.3	/^.SH ARGUMENTS$/;"	s	title:Tcl_AppInit
ARGUMENTS	doc/AssocData.3	/^.SH ARGUMENTS$/;"	s	title:Tcl_SetAssocData
ARGUMENTS	doc/Async.3	/^.SH ARGUMENTS$/;"	s	title:Tcl_AsyncCreate
ARGUMENTS	doc/BackgdErr.3	/^.SH ARGUMENTS$/;"	s	title:Tcl_BackgroundError
ARGUMENTS	doc/BoolObj.3	/^.SH ARGUMENTS$/;"	s	title:Tcl_BooleanObj
ARGUMENTS	doc/ByteArrObj.3	/^.SH ARGUMENTS$/;"	s	title:Tcl_ByteArrayObj
ARGUMENTS	doc/CallDel.3	/^.SH ARGUMENTS$/;"	s	title:Tcl_CallWhenDeleted
ARGUMENTS	doc/Cancel.3	/^.SH ARGUMENTS$/;"	s	title:Tcl_Cancel
ARGUMENTS	doc/ChnlStack.3	/^.SH ARGUMENTS$/;"	s	title:Tcl_StackChannel
ARGUMENTS	doc/Class.3	/^.SH ARGUMENTS$/;"	s	title:Tcl_Class
ARGUMENTS	doc/CmdCmplt.3	/^.SH ARGUMENTS$/;"	s	title:Tcl_CommandComplete
ARGUMENTS	doc/Concat.3	/^.SH ARGUMENTS$/;"	s	title:Tcl_Concat
ARGUMENTS	doc/CrtAlias.3	/^.SH ARGUMENTS$/;"	s	title:Tcl_CreateAlias
ARGUMENTS	doc/CrtChannel.3	/^.SH ARGUMENTS$/;"	s	title:Tcl_CreateChannel
ARGUMENTS	doc/CrtChnlHdlr.3	/^.SH ARGUMENTS$/;"	s	title:Tcl_CreateChannelHandler
ARGUMENTS	doc/CrtCloseHdlr.3	/^.SH ARGUMENTS$/;"	s	title:Tcl_CreateCloseHandler
ARGUMENTS	doc/CrtCommand.3	/^.SH ARGUMENTS$/;"	s	title:Tcl_CreateCommand
ARGUMENTS	doc/CrtFileHdlr.3	/^.SH ARGUMENTS$/;"	s	title:Tcl_CreateFileHandler
ARGUMENTS	doc/CrtInterp.3	/^.SH ARGUMENTS$/;"	s	title:Tcl_CreateInterp
ARGUMENTS	doc/CrtObjCmd.3	/^.SH ARGUMENTS$/;"	s	title:Tcl_CreateObjCommand
ARGUMENTS	doc/CrtTimerHdlr.3	/^.SH ARGUMENTS$/;"	s	title:Tcl_CreateTimerHandler
ARGUMENTS	doc/CrtTrace.3	/^.SH ARGUMENTS$/;"	s	title:Tcl_CreateTrace
ARGUMENTS	doc/DString.3	/^.SH ARGUMENTS$/;"	s	title:Tcl_DString
ARGUMENTS	doc/DetachPids.3	/^.SH ARGUMENTS$/;"	s	title:Tcl_DetachPids
ARGUMENTS	doc/DictObj.3	/^.SH ARGUMENTS$/;"	s	title:Tcl_DictObj
ARGUMENTS	doc/DoOneEvent.3	/^.SH ARGUMENTS$/;"	s	title:Tcl_DoOneEvent
ARGUMENTS	doc/DoWhenIdle.3	/^.SH ARGUMENTS$/;"	s	title:Tcl_DoWhenIdle
ARGUMENTS	doc/DoubleObj.3	/^.SH ARGUMENTS$/;"	s	title:Tcl_DoubleObj
ARGUMENTS	doc/DumpActiveMemory.3	/^.SH ARGUMENTS$/;"	s	title:Tcl_DumpActiveMemory
ARGUMENTS	doc/Encoding.3	/^.SH ARGUMENTS$/;"	s	title:Tcl_GetEncoding
ARGUMENTS	doc/Ensemble.3	/^.SH ARGUMENTS$/;"	s	title:Tcl_Ensemble
ARGUMENTS	doc/Environment.3	/^.SH ARGUMENTS$/;"	s	title:Tcl_PutEnv
ARGUMENTS	doc/Eval.3	/^.SH ARGUMENTS$/;"	s	title:Tcl_Eval
ARGUMENTS	doc/Exit.3	/^.SH ARGUMENTS$/;"	s	title:Tcl_Exit
ARGUMENTS	doc/ExprLong.3	/^.SH ARGUMENTS$/;"	s	title:Tcl_ExprLong
ARGUMENTS	doc/ExprLongObj.3	/^.SH ARGUMENTS$/;"	s	title:Tcl_ExprLongObj
ARGUMENTS	doc/FileSystem.3	/^.SH ARGUMENTS$/;"	s	title:Filesystem
ARGUMENTS	doc/FindExec.3	/^.SH ARGUMENTS$/;"	s	title:Tcl_FindExecutable
ARGUMENTS	doc/GetCwd.3	/^.SH ARGUMENTS$/;"	s	title:Tcl_GetCwd
ARGUMENTS	doc/GetIndex.3	/^.SH ARGUMENTS$/;"	s	title:Tcl_GetIndexFromObj
ARGUMENTS	doc/GetInt.3	/^.SH ARGUMENTS$/;"	s	title:Tcl_GetInt
ARGUMENTS	doc/GetOpnFl.3	/^.SH ARGUMENTS$/;"	s	title:Tcl_GetOpenFile
ARGUMENTS	doc/GetStdChan.3	/^.SH ARGUMENTS$/;"	s	title:Tcl_GetStdChannel
ARGUMENTS	doc/GetTime.3	/^.SH ARGUMENTS$/;"	s	title:Tcl_GetTime
ARGUMENTS	doc/GetVersion.3	/^.SH ARGUMENTS$/;"	s	title:Tcl_GetVersion
ARGUMENTS	doc/Hash.3	/^.SH ARGUMENTS$/;"	s	title:Tcl_Hash
ARGUMENTS	doc/Init.3	/^.SH ARGUMENTS$/;"	s	title:Tcl_Init
ARGUMENTS	doc/InitStubs.3	/^.SH ARGUMENTS$/;"	s	title:Tcl_InitStubs
ARGUMENTS	doc/IntObj.3	/^.SH ARGUMENTS$/;"	s	title:Tcl_IntObj
ARGUMENTS	doc/Limit.3	/^.SH ARGUMENTS$/;"	s	title:Tcl_LimitCheck
ARGUMENTS	doc/LinkVar.3	/^.SH ARGUMENTS$/;"	s	title:Tcl_LinkVar
ARGUMENTS	doc/ListObj.3	/^.SH ARGUMENTS$/;"	s	title:Tcl_ListObj
ARGUMENTS	doc/Load.3	/^.SH ARGUMENTS$/;"	s	title:Load
ARGUMENTS	doc/Method.3	/^.SH ARGUMENTS$/;"	s	title:Tcl_Method
ARGUMENTS	doc/NRE.3	/^.SH ARGUMENTS$/;"	s	title:NRE
ARGUMENTS	doc/Namespace.3	/^.SH ARGUMENTS$/;"	s	title:Tcl_Namespace
ARGUMENTS	doc/Notifier.3	/^.SH ARGUMENTS$/;"	s	title:Notifier
ARGUMENTS	doc/Number.3	/^.SH ARGUMENTS$/;"	s	title:Tcl_GetNumber
ARGUMENTS	doc/OOInitStubs.3	/^.SH ARGUMENTS$/;"	s	title:Tcl_OOInitStubs
ARGUMENTS	doc/Object.3	/^.SH ARGUMENTS$/;"	s	title:Tcl_Obj
ARGUMENTS	doc/ObjectType.3	/^.SH ARGUMENTS$/;"	s	title:Tcl_ObjType
ARGUMENTS	doc/OpenFileChnl.3	/^.SH ARGUMENTS$/;"	s	title:Tcl_OpenFileChannel
ARGUMENTS	doc/OpenTcp.3	/^.SH ARGUMENTS$/;"	s	title:Tcl_OpenTcpClient
ARGUMENTS	doc/Panic.3	/^.SH ARGUMENTS$/;"	s	title:Tcl_Panic
ARGUMENTS	doc/ParseArgs.3	/^.SH ARGUMENTS$/;"	s	title:Tcl_ParseArgsObjv
ARGUMENTS	doc/ParseCmd.3	/^.SH ARGUMENTS$/;"	s	title:Tcl_ParseCommand
ARGUMENTS	doc/PkgRequire.3	/^.SH ARGUMENTS$/;"	s	title:Tcl_PkgRequire
ARGUMENTS	doc/Preserve.3	/^.SH ARGUMENTS$/;"	s	title:Tcl_Preserve
ARGUMENTS	doc/PrintDbl.3	/^.SH ARGUMENTS$/;"	s	title:Tcl_PrintDouble
ARGUMENTS	doc/RecEvalObj.3	/^.SH ARGUMENTS$/;"	s	title:Tcl_RecordAndEvalObj
ARGUMENTS	doc/RecordEval.3	/^.SH ARGUMENTS$/;"	s	title:Tcl_RecordAndEval
ARGUMENTS	doc/RegConfig.3	/^.SH ARGUMENTS$/;"	s	title:Tcl_RegisterConfig
ARGUMENTS	doc/RegExp.3	/^.SH ARGUMENTS$/;"	s	title:Tcl_RegExpMatch
ARGUMENTS	doc/SaveInterpState.3	/^.SH ARGUMENTS$/;"	s	title:Tcl_SaveInterpState
ARGUMENTS	doc/SetChanErr.3	/^.SH ARGUMENTS$/;"	s	title:Tcl_SetChannelError
ARGUMENTS	doc/SetErrno.3	/^.SH ARGUMENTS$/;"	s	title:Tcl_SetErrno
ARGUMENTS	doc/SetRecLmt.3	/^.SH ARGUMENTS$/;"	s	title:Tcl_SetRecursionLimit
ARGUMENTS	doc/SetResult.3	/^.SH ARGUMENTS$/;"	s	title:Tcl_SetResult
ARGUMENTS	doc/SetVar.3	/^.SH ARGUMENTS$/;"	s	title:Tcl_SetVar
ARGUMENTS	doc/Signal.3	/^.SH ARGUMENTS$/;"	s	title:Tcl_SignalId
ARGUMENTS	doc/Sleep.3	/^.SH ARGUMENTS$/;"	s	title:Tcl_Sleep
ARGUMENTS	doc/SourceRCFile.3	/^.SH ARGUMENTS$/;"	s	title:Tcl_SourceRCFile
ARGUMENTS	doc/SplitList.3	/^.SH ARGUMENTS$/;"	s	title:Tcl_SplitList
ARGUMENTS	doc/SplitPath.3	/^.SH ARGUMENTS$/;"	s	title:Tcl_SplitPath
ARGUMENTS	doc/StaticLibrary.3	/^.SH ARGUMENTS$/;"	s	title:Tcl_StaticLibrary
ARGUMENTS	doc/StrMatch.3	/^.SH ARGUMENTS$/;"	s	title:Tcl_StringMatch
ARGUMENTS	doc/StringObj.3	/^.SH ARGUMENTS$/;"	s	title:Tcl_StringObj
ARGUMENTS	doc/SubstObj.3	/^.SH ARGUMENTS$/;"	s	title:Tcl_SubstObj
ARGUMENTS	doc/TclZlib.3	/^.SH ARGUMENTS$/;"	s	title:TclZlib
ARGUMENTS	doc/Tcl_Main.3	/^.SH ARGUMENTS$/;"	s	title:Tcl_Main
ARGUMENTS	doc/Thread.3	/^.SH ARGUMENTS$/;"	s	title:Threads
ARGUMENTS	doc/ToUpper.3	/^.SH ARGUMENTS$/;"	s	title:Tcl_UtfToUpper
ARGUMENTS	doc/TraceCmd.3	/^.SH ARGUMENTS$/;"	s	title:Tcl_TraceCommand
ARGUMENTS	doc/TraceVar.3	/^.SH ARGUMENTS$/;"	s	title:Tcl_TraceVar
ARGUMENTS	doc/Translate.3	/^.SH ARGUMENTS$/;"	s	title:Tcl_TranslateFileName
ARGUMENTS	doc/UniCharIsAlpha.3	/^.SH ARGUMENTS$/;"	s	title:Tcl_UniCharIsAlpha
ARGUMENTS	doc/UpVar.3	/^.SH ARGUMENTS$/;"	s	title:Tcl_UpVar
ARGUMENTS	doc/Utf.3	/^.SH ARGUMENTS$/;"	s	title:Utf
ARGUMENTS	doc/WrongNumArgs.3	/^.SH ARGUMENTS$/;"	s	title:Tcl_WrongNumArgs
ARGUMENTS	doc/zipfs.3	/^.SH ARGUMENTS$/;"	s	title:Tclzipfs
ARM	libtommath/bn_s_mp_rand_platform.c	/^#define ARM$/;"	d	file:
ARMCRC32	compat/zlib/crc32.c	/^#  define ARMCRC32$/;"	d	file:
ASCII	generic/tclCmdIL.c	/^	ASCII, DICTIONARY, INTEGER, REAL$/;"	e	enum:Tcl_LsearchObjCmd::datatypes	file:
ASFLAGS	compat/zlib/nintendods/Makefile	/^ASFLAGS	:=	$(ARCH) -march=armv5te -mtune=arm946e-s$/;"	m
ASLCLIENT_DECL	macosx/tclMacOSXNotify.c	/^#define ASLCLIENT_DECL	/;"	d	file:
ASLCLIENT_DECL	macosx/tclMacOSXNotify.c	/^#define ASLCLIENT_DECL$/;"	d	file:
ASSEM_1BYTE	generic/tclAssembly.c	/^    ASSEM_1BYTE,		\/* Fixed arity, 1-byte instruction *\/$/;"	e	enum:__anone89463850103	file:
ASSEM_BEGIN_CATCH	generic/tclAssembly.c	/^    ASSEM_BEGIN_CATCH,		\/* Begin catch: one 4-byte jump offset to be$/;"	e	enum:__anone89463850103	file:
ASSEM_BOOL	generic/tclAssembly.c	/^    ASSEM_BOOL,			\/* One Boolean operand *\/$/;"	e	enum:__anone89463850103	file:
ASSEM_BOOL_LVT4	generic/tclAssembly.c	/^    ASSEM_BOOL_LVT4,		\/* One Boolean, one 4-byte LVT ref. *\/$/;"	e	enum:__anone89463850103	file:
ASSEM_CLOCK_READ	generic/tclAssembly.c	/^    ASSEM_CLOCK_READ,		\/* 1-byte unsigned-integer case number, in the$/;"	e	enum:__anone89463850103	file:
ASSEM_CONCAT1	generic/tclAssembly.c	/^    ASSEM_CONCAT1,		\/* 1-byte unsigned-integer operand count, must$/;"	e	enum:__anone89463850103	file:
ASSEM_DICT_GET	generic/tclAssembly.c	/^    ASSEM_DICT_GET,		\/* 'dict get' and related - consumes N+1$/;"	e	enum:__anone89463850103	file:
ASSEM_DICT_GET_DEF	generic/tclAssembly.c	/^    ASSEM_DICT_GET_DEF		\/* 'dict getwithdefault' - consumes N+2$/;"	e	enum:__anone89463850103	file:
ASSEM_DICT_SET	generic/tclAssembly.c	/^    ASSEM_DICT_SET,		\/* specifies key count and LVT index, consumes$/;"	e	enum:__anone89463850103	file:
ASSEM_DICT_UNSET	generic/tclAssembly.c	/^    ASSEM_DICT_UNSET,		\/* specifies key count and LVT index, consumes$/;"	e	enum:__anone89463850103	file:
ASSEM_END_CATCH	generic/tclAssembly.c	/^    ASSEM_END_CATCH,		\/* End catch. No args. Exception range popped$/;"	e	enum:__anone89463850103	file:
ASSEM_EVAL	generic/tclAssembly.c	/^    ASSEM_EVAL,			\/* 'eval' - evaluate a constant script (by$/;"	e	enum:__anone89463850103	file:
ASSEM_INDEX	generic/tclAssembly.c	/^    ASSEM_INDEX,		\/* 4 byte operand, integer or end-integer *\/$/;"	e	enum:__anone89463850103	file:
ASSEM_INVOKE	generic/tclAssembly.c	/^    ASSEM_INVOKE,		\/* 1- or 4-byte operand count, must be$/;"	e	enum:__anone89463850103	file:
ASSEM_JUMP	generic/tclAssembly.c	/^    ASSEM_JUMP,			\/* Jump instructions *\/$/;"	e	enum:__anone89463850103	file:
ASSEM_JUMP4	generic/tclAssembly.c	/^    ASSEM_JUMP4,		\/* Jump instructions forcing a 4-byte offset *\/$/;"	e	enum:__anone89463850103	file:
ASSEM_JUMPTABLE	generic/tclAssembly.c	/^    ASSEM_JUMPTABLE,		\/* Jumptable (switch -exact) *\/$/;"	e	enum:__anone89463850103	file:
ASSEM_LABEL	generic/tclAssembly.c	/^    ASSEM_LABEL,		\/* The assembly directive that defines a$/;"	e	enum:__anone89463850103	file:
ASSEM_LINDEX_MULTI	generic/tclAssembly.c	/^    ASSEM_LINDEX_MULTI,		\/* 4-byte operand count, must be strictly$/;"	e	enum:__anone89463850103	file:
ASSEM_LIST	generic/tclAssembly.c	/^    ASSEM_LIST,			\/* 4-byte operand count, must be nonnegative,$/;"	e	enum:__anone89463850103	file:
ASSEM_LSET_FLAT	generic/tclAssembly.c	/^    ASSEM_LSET_FLAT,		\/* 4-byte operand count, must be >= 3,$/;"	e	enum:__anone89463850103	file:
ASSEM_LVT	generic/tclAssembly.c	/^    ASSEM_LVT,			\/* One operand that references a local$/;"	e	enum:__anone89463850103	file:
ASSEM_LVT1	generic/tclAssembly.c	/^    ASSEM_LVT1,			\/* One 1-byte operand that references a local$/;"	e	enum:__anone89463850103	file:
ASSEM_LVT1_SINT1	generic/tclAssembly.c	/^    ASSEM_LVT1_SINT1,		\/* One 1-byte operand that references a local$/;"	e	enum:__anone89463850103	file:
ASSEM_LVT4	generic/tclAssembly.c	/^    ASSEM_LVT4,			\/* One 4-byte operand that references a local$/;"	e	enum:__anone89463850103	file:
ASSEM_OVER	generic/tclAssembly.c	/^    ASSEM_OVER,			\/* OVER: 4-byte operand count, consumes N+1,$/;"	e	enum:__anone89463850103	file:
ASSEM_PUSH	generic/tclAssembly.c	/^    ASSEM_PUSH,			\/* one literal operand *\/$/;"	e	enum:__anone89463850103	file:
ASSEM_REGEXP	generic/tclAssembly.c	/^    ASSEM_REGEXP,		\/* One Boolean operand, but weird mapping to$/;"	e	enum:__anone89463850103	file:
ASSEM_REVERSE	generic/tclAssembly.c	/^    ASSEM_REVERSE,		\/* REVERSE: 4-byte operand count, consumes N,$/;"	e	enum:__anone89463850103	file:
ASSEM_SINT1	generic/tclAssembly.c	/^    ASSEM_SINT1,		\/* One 1-byte signed-integer operand$/;"	e	enum:__anone89463850103	file:
ASSEM_SINT4_LVT4	generic/tclAssembly.c	/^    ASSEM_SINT4_LVT4,		\/* Signed 4-byte integer operand followed by$/;"	e	enum:__anone89463850103	file:
ASSERT	generic/tclAlloc.c	/^#define	ASSERT(/;"	d	file:
ASSOC_KEY	generic/tclConfig.c	/^#define ASSOC_KEY	/;"	d	file:
ASYNC	generic/tclZlib.c	/^    ASYNC = 0x01,		\/* Set if this is an asynchronous channel. *\/$/;"	e	enum:ZlibChannelDataFlags	file:
ASYNC_CHECK_COUNT	generic/tclExecute.c	/^#   define ASYNC_CHECK_COUNT	/;"	d	file:
ATEOS	generic/regc_lex.c	/^#define	ATEOS(/;"	d	file:
AUTHOR	compat/zlib/contrib/minizip/miniunzip.1	/^.SH AUTHOR$/;"	s	title:miniunzip
AUTHOR	compat/zlib/contrib/minizip/minizip.1	/^.SH AUTHOR$/;"	s	title:minizip
AUTHORS AND LICENSE	compat/zlib/zlib.3	/^.SH AUTHORS AND LICENSE$/;"	s	title:ZLIB
AX_CC_FOR_BUILD	unix/tcl.m4	/^AC_DEFUN([AX_CC_FOR_BUILD],[# Put a plausible default for CC_FOR_BUILD in Makefile.$/;"	m
AX_CC_FOR_BUILD	win/tcl.m4	/^AC_DEFUN([AX_CC_FOR_BUILD],$/;"	m
A_CLEAR_READ	generic/tclIOGT.c	/^#define A_CLEAR_READ	/;"	d	file:
A_CREATE_READ	generic/tclIOGT.c	/^#define A_CREATE_READ	/;"	d	file:
A_CREATE_WRITE	generic/tclIOGT.c	/^#define A_CREATE_WRITE	/;"	d	file:
A_DELETE_READ	generic/tclIOGT.c	/^#define A_DELETE_READ	/;"	d	file:
A_DELETE_WRITE	generic/tclIOGT.c	/^#define A_DELETE_WRITE	/;"	d	file:
A_FLUSH_READ	generic/tclIOGT.c	/^#define A_FLUSH_READ	/;"	d	file:
A_FLUSH_WRITE	generic/tclIOGT.c	/^#define A_FLUSH_WRITE	/;"	d	file:
A_QUERY_MAXREAD	generic/tclIOGT.c	/^#define A_QUERY_MAXREAD	/;"	d	file:
A_READ	generic/tclIOGT.c	/^#define A_READ	/;"	d	file:
A_WRITE	generic/tclIOGT.c	/^#define A_WRITE	/;"	d	file:
Accept	tests/httpd11.tcl	/^proc Accept {chan addr port} {$/;"	p
AcceptAbsolutePath	library/tcltest/tcltest.tcl	/^    proc AcceptAbsolutePath { path } {$/;"	p	namespace:::tcltest
AcceptAll	library/tcltest/tcltest.tcl	/^    proc AcceptAll {value} {$/;"	p	namespace:::tcltest
AcceptBoolean	library/tcltest/tcltest.tcl	/^    proc AcceptBoolean { boolean } {$/;"	p	namespace:::tcltest
AcceptCallback	generic/tclIOCmd.c	/^} AcceptCallback;$/;"	t	typeref:struct:__anon5b8cc1910108	file:
AcceptCallbackProc	generic/tclIOCmd.c	/^AcceptCallbackProc($/;"	f	typeref:typename:void	file:
AcceptCallbackProc	generic/tclIOCmd.c	/^static Tcl_TcpAcceptProc	AcceptCallbackProc;$/;"	v	typeref:typename:Tcl_TcpAcceptProc	file:
AcceptDirectory	library/tcltest/tcltest.tcl	/^    proc AcceptDirectory { directory } {$/;"	p	namespace:::tcltest
AcceptInteger	library/tcltest/tcltest.tcl	/^    proc AcceptInteger { level } {$/;"	p	namespace:::tcltest
AcceptList	library/tcltest/tcltest.tcl	/^    proc AcceptList { list } {$/;"	p	namespace:::tcltest
AcceptPattern	library/tcltest/tcltest.tcl	/^    proc AcceptPattern { pattern } {$/;"	p	namespace:::tcltest
AcceptReadable	library/tcltest/tcltest.tcl	/^    proc AcceptReadable { path } {$/;"	p	namespace:::tcltest
AcceptScript	library/tcltest/tcltest.tcl	/^    proc AcceptScript { script } {$/;"	p	namespace:::tcltest
AccumulateDecimalDigit	generic/tclStrToD.c	/^AccumulateDecimalDigit($/;"	f	typeref:typename:int	file:
AccumulateSample	win/tclWinTime.c	/^AccumulateSample($/;"	f	typeref:typename:long long	file:
ActiveCommandTrace	generic/tclInt.h	/^typedef struct ActiveCommandTrace {$/;"	s
ActiveCommandTrace	generic/tclInt.h	/^} ActiveCommandTrace;$/;"	t	typeref:struct:ActiveCommandTrace
ActiveInterpTrace	generic/tclInt.h	/^typedef struct ActiveInterpTrace {$/;"	s
ActiveInterpTrace	generic/tclInt.h	/^} ActiveInterpTrace;$/;"	t	typeref:struct:ActiveInterpTrace
ActiveVarTrace	generic/tclInt.h	/^typedef struct ActiveVarTrace {$/;"	s
ActiveVarTrace	generic/tclInt.h	/^} ActiveVarTrace;$/;"	t	typeref:struct:ActiveVarTrace
Add	compat/zlib/contrib/dotzlib/DotZLib/CodecBase.cs	/^        public abstract void Add(byte[] data, int offset, int count);$/;"	m	class:DotZLib.CodecBase
Add	compat/zlib/contrib/dotzlib/DotZLib/CodecBase.cs	/^        public void Add(byte[] data)$/;"	m	class:DotZLib.CodecBase
Add	compat/zlib/contrib/dotzlib/DotZLib/Deflater.cs	/^        public override void Add(byte[] data, int offset, int count)$/;"	m	class:DotZLib.Deflater
Add	compat/zlib/contrib/dotzlib/DotZLib/DotZLib.cs	/^        void Add(byte[] data);$/;"	m	interface:DotZLib.Codec
Add	compat/zlib/contrib/dotzlib/DotZLib/DotZLib.cs	/^        void Add(byte[] data, int offset, int count);$/;"	m	interface:DotZLib.Codec
Add	compat/zlib/contrib/dotzlib/DotZLib/Inflater.cs	/^        public override void Add(byte[] data, int offset, int count)$/;"	m	class:DotZLib.Inflater
AddBasicBlockRangeToErrorInfo	generic/tclAssembly.c	/^AddBasicBlockRangeToErrorInfo($/;"	f	typeref:typename:void	file:
AddClassFiltersToCallContext	generic/tclOOCall.c	/^AddClassFiltersToCallContext($/;"	f	typeref:typename:void	file:
AddClassMethodNames	generic/tclOOCall.c	/^AddClassMethodNames($/;"	f	typeref:typename:void	file:
AddConstructionFinalizer	generic/tclOOBasic.c	/^AddConstructionFinalizer($/;"	f	typeref:typename:Tcl_Object *	file:
AddDays	library/clockclassic.tcl	/^proc AddDays { days clockval timezone changeover } {$/;"	p
AddDefinitionNamespaceToChain	generic/tclOOCall.c	/^AddDefinitionNamespaceToChain($/;"	f	typeref:typename:void	file:
AddInstancePrivateToCallContext	generic/tclOOCall.c	/^AddInstancePrivateToCallContext($/;"	f	typeref:typename:int	file:
AddLocalLiteralEntry	generic/tclLiteral.c	/^AddLocalLiteralEntry($/;"	f	typeref:typename:size_t	file:
AddMethodToCallChain	generic/tclOOCall.c	/^AddMethodToCallChain($/;"	f	typeref:typename:void	file:
AddMonths	library/clockclassic.tcl	/^proc AddMonths { months clockval timezone changeover } {$/;"	p
AddPrivateMethodNames	generic/tclOOCall.c	/^AddPrivateMethodNames($/;"	f	typeref:typename:void	file:
AddPrivatesFromClassChainToCallContext	generic/tclOOCall.c	/^AddPrivatesFromClassChainToCallContext($/;"	f	typeref:typename:int	file:
AddRef	generic/tclOOInt.h	/^#define AddRef(/;"	d
AddRequirementsToDString	generic/tclPkg.c	/^AddRequirementsToDString($/;"	f	typeref:typename:void	file:
AddRequirementsToResult	generic/tclPkg.c	/^AddRequirementsToResult($/;"	f	typeref:typename:void	file:
AddSimpleChainToCallContext	generic/tclOOCall.c	/^AddSimpleChainToCallContext($/;"	f	typeref:typename:int	file:
AddSimpleClassChainToCallContext	generic/tclOOCall.c	/^AddSimpleClassChainToCallContext($/;"	f	typeref:typename:int	file:
AddSimpleClassDefineNamespaces	generic/tclOOCall.c	/^AddSimpleClassDefineNamespaces($/;"	f	typeref:typename:void	file:
AddSimpleDefineNamespaces	generic/tclOOCall.c	/^AddSimpleDefineNamespaces($/;"	f	typeref:typename:void	file:
AddSocketInfoFd	win/tclWinSock.c	/^AddSocketInfoFd($/;"	f	typeref:typename:void	file:
AddStandardMethodName	generic/tclOOCall.c	/^AddStandardMethodName($/;"	f	typeref:typename:void	file:
AddSubDirs	library/safe.tcl	/^proc ::safe::AddSubDirs {pathList} {$/;"	p	namespace:::safe
Add_Data	compat/zlib/contrib/ada/zlib.adb	/^      procedure Add_Data (Data : in Stream_Element_Array) is$/;"	r	subprogram:Translate_GZip	file:
Add_Data	compat/zlib/contrib/ada/zlib.adb	/^      procedure Add_Data (Data : in Stream_Element_Array);$/;"	R	subprogram:Translate_GZip	file:
AddrLength	generic/tclOptimize.c	/^#define AddrLength(/;"	d	file:
AdjustRange	generic/tclStrToD.c	/^AdjustRange($/;"	f	typeref:typename:int	file:
AdlerChecksum	compat/zlib/contrib/dotzlib/DotZLib/ChecksumImpl.cs	/^        public AdlerChecksum() : base() {}$/;"	m	class:DotZLib.AdlerChecksum
AdlerChecksum	compat/zlib/contrib/dotzlib/DotZLib/ChecksumImpl.cs	/^        public AdlerChecksum(uint initialValue) : base(initialValue) {}$/;"	m	class:DotZLib.AdlerChecksum
AdlerChecksum	compat/zlib/contrib/dotzlib/DotZLib/ChecksumImpl.cs	/^    public sealed class AdlerChecksum : ChecksumGeneratorBase$/;"	c	namespace:DotZLib
Adler_Data	compat/zlib/contrib/dotzlib/DotZLib/UnitTests.cs	/^        public void Adler_Data()$/;"	m	class:DotZLibTests.ChecksumTests
Adler_Null	compat/zlib/contrib/dotzlib/DotZLib/UnitTests.cs	/^        public void Adler_Null()$/;"	m	class:DotZLibTests.ChecksumTests
AdvanceJumps	generic/tclOptimize.c	/^AdvanceJumps($/;"	f	typeref:typename:void	file:
AfterAssocData	generic/tclTimer.c	/^typedef struct AfterAssocData {$/;"	s	file:
AfterAssocData	generic/tclTimer.c	/^} AfterAssocData;$/;"	t	typeref:struct:AfterAssocData	file:
AfterCleanupProc	generic/tclTimer.c	/^AfterCleanupProc($/;"	f	typeref:typename:void	file:
AfterDelay	generic/tclTimer.c	/^AfterDelay($/;"	f	typeref:typename:int	file:
AfterInfo	generic/tclTimer.c	/^typedef struct AfterInfo {$/;"	s	file:
AfterInfo	generic/tclTimer.c	/^} AfterInfo;$/;"	t	typeref:struct:AfterInfo	file:
AfterNRDestructor	generic/tclOOBasic.c	/^AfterNRDestructor($/;"	f	typeref:typename:int	file:
AfterNRDestructor	generic/tclOOBasic.c	/^static Tcl_NRPostProc	AfterNRDestructor;$/;"	v	typeref:typename:Tcl_NRPostProc	file:
AfterProc	generic/tclTimer.c	/^AfterProc($/;"	f	typeref:typename:void	file:
AlarmHandler	unix/tclUnixTest.c	/^AlarmHandler($/;"	f	typeref:typename:void	file:
AlertSingleThread	unix/tclUnixNotfy.c	/^AlertSingleThread($/;"	f	typeref:typename:void	file:
Alias	generic/tclInterp.c	/^} Alias;$/;"	t	typeref:struct:__anon913711770108	file:
AliasCreate	generic/tclInterp.c	/^AliasCreate($/;"	f	typeref:typename:int	file:
AliasDelete	generic/tclInterp.c	/^AliasDelete($/;"	f	typeref:typename:int	file:
AliasDescribe	generic/tclInterp.c	/^AliasDescribe($/;"	f	typeref:typename:int	file:
AliasEncodingSystem	library/safe.tcl	/^proc ::safe::AliasEncodingSystem {child args} {$/;"	p	namespace:::safe
AliasExeName	library/safe.tcl	/^proc ::safe::AliasExeName {child} {$/;"	p	namespace:::safe
AliasFileSubcommand	library/safe.tcl	/^proc ::safe::AliasFileSubcommand {child subcommand name} {$/;"	p	namespace:::safe
AliasGlob	library/safe.tcl	/^proc ::safe::AliasGlob {child args} {$/;"	p	namespace:::safe
AliasList	generic/tclInterp.c	/^AliasList($/;"	f	typeref:typename:int	file:
AliasLoad	library/safe.tcl	/^proc ::safe::AliasLoad {child file args} {$/;"	p	namespace:::safe
AliasNRCmd	generic/tclInterp.c	/^AliasNRCmd($/;"	f	typeref:typename:int	file:
AliasNRCmd	generic/tclInterp.c	/^static Tcl_ObjCmdProc	AliasNRCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
AliasObjCmdDeleteProc	generic/tclInterp.c	/^AliasObjCmdDeleteProc($/;"	f	typeref:typename:void	file:
AliasObjCmdDeleteProc	generic/tclInterp.c	/^static Tcl_CmdDeleteProc AliasObjCmdDeleteProc;$/;"	v	typeref:typename:Tcl_CmdDeleteProc	file:
AliasSource	library/safe.tcl	/^proc ::safe::AliasSource {child args} {$/;"	p	namespace:::safe
AllocArrayEntry	generic/tclHash.c	/^AllocArrayEntry($/;"	f	typeref:typename:Tcl_HashEntry *	file:
AllocBB	generic/tclAssembly.c	/^AllocBB($/;"	f	typeref:typename:BasicBlock *	file:
AllocCache	generic/tclInt.h	/^typedef struct AllocCache {$/;"	s
AllocCache	generic/tclInt.h	/^} AllocCache;$/;"	t	typeref:struct:AllocCache
AllocChainEntry	generic/tclDictObj.c	/^AllocChainEntry($/;"	f	typeref:typename:Tcl_HashEntry *	file:
AllocChainEntry	generic/tclDictObj.c	/^static Tcl_AllocHashEntryProc	AllocChainEntry;$/;"	v	typeref:typename:Tcl_AllocHashEntryProc	file:
AllocChannelBuffer	generic/tclIO.c	/^AllocChannelBuffer($/;"	f	typeref:typename:ChannelBuffer *	file:
AllocMutex	unix/tclUnixThrd.c	/^} AllocMutex;$/;"	t	typeref:struct:__anon099381c20108	file:
AllocObjEntry	generic/tclObj.c	/^AllocObjEntry($/;"	f	typeref:typename:Tcl_HashEntry *	file:
AllocObject	generic/tclOO.c	/^AllocObject($/;"	f	typeref:typename:Object *	file:
AllocProcedureMethodRecord	generic/tclOOMethod.c	/^AllocProcedureMethodRecord($/;"	f	typeref:typename:ProcedureMethod *	file:
AllocStringEntry	generic/tclHash.c	/^AllocStringEntry($/;"	f	typeref:typename:Tcl_HashEntry *	file:
AllocTokenInChain	generic/tclClockFmt.c	/^#define AllocTokenInChain(/;"	d	file:
AllocVarEntry	generic/tclVar.c	/^AllocVarEntry($/;"	f	typeref:typename:Tcl_HashEntry *	file:
AllocVars	generic/regcustom.h	/^#define AllocVars(/;"	d
AllocVars	generic/regguts.h	/^#define AllocVars(/;"	d
AllocateConsoleHandleInfo	win/tclWinConsole.c	/^AllocateConsoleHandleInfo($/;"	f	typeref:typename:ConsoleHandleInfo *	file:
AllocateZipChannel	generic/tclZipfs.c	/^AllocateZipChannel($/;"	f	typeref:typename:ZipChannel *	file:
AllocateZipEntry	generic/tclZipfs.c	/^AllocateZipEntry(void)$/;"	f	typeref:typename:ZipEntry *	file:
AllocateZipFile	generic/tclZipfs.c	/^AllocateZipFile($/;"	f	typeref:typename:ZipFile *	file:
AnonymousLocal	generic/tclCompile.h	/^#define AnonymousLocal(/;"	d
AppVeyor	libtommath/README.md	/^### AppVeyor$/;"	S	section:libtommath""Build Status
AppendByteArray	generic/tclZlib.c	/^AppendByteArray($/;"	f	typeref:typename:void	file:
AppendEnvironment	win/tclWinInit.c	/^AppendEnvironment($/;"	f	typeref:typename:void	file:
AppendLocals	generic/tclVar.c	/^AppendLocals($/;"	f	typeref:typename:void	file:
AppendPath	generic/tclPathObj.c	/^AppendPath($/;"	f	typeref:typename:Tcl_Obj *	file:
AppendPrintfToObjVA	generic/tclStringObj.c	/^AppendPrintfToObjVA($/;"	f	typeref:typename:void	file:
AppendSystemError	win/tclWinReg.c	/^AppendSystemError($/;"	f	typeref:typename:void	file:
AppendUnicodeToUnicodeRep	generic/tclStringObj.c	/^AppendUnicodeToUnicodeRep($/;"	f	typeref:typename:void	file:
AppendUnicodeToUtfRep	generic/tclStringObj.c	/^AppendUnicodeToUtfRep($/;"	f	typeref:typename:void	file:
AppendUtfToUnicodeRep	generic/tclStringObj.c	/^AppendUtfToUnicodeRep($/;"	f	typeref:typename:void	file:
AppendUtfToUtfRep	generic/tclStringObj.c	/^AppendUtfToUtfRep($/;"	f	typeref:typename:void	file:
AppendWithPrefix	generic/tclZipfs.c	/^AppendWithPrefix($/;"	f	typeref:typename:void	file:
ApplicationType	win/tclWinPipe.c	/^ApplicationType($/;"	f	typeref:typename:int	file:
ApplyExtraData	generic/tclProc.c	/^} ApplyExtraData;$/;"	t	typeref:struct:__anon0627b8d90108	file:
ApplyNR2	generic/tclProc.c	/^ApplyNR2($/;"	f	typeref:typename:int	file:
ApplyNR2	generic/tclProc.c	/^static Tcl_NRPostProc ApplyNR2;$/;"	v	typeref:typename:Tcl_NRPostProc	file:
ApproximateLog10	generic/tclStrToD.c	/^ApproximateLog10($/;"	f	typeref:typename:int	file:
ArgIndices	generic/tclIORChan.c	/^    enum ArgIndices {$/;"	g	function:TclChanCreateObjCmd	file:
ArgIndices	generic/tclIORChan.c	/^    enum ArgIndices {$/;"	g	function:TclChanPostEventObjCmd	file:
ArgIndices	generic/tclIORTrans.c	/^    enum ArgIndices {$/;"	g	function:TclChanPopObjCmd	file:
ArgIndices	generic/tclIORTrans.c	/^    enum ArgIndices {$/;"	g	function:TclChanPushObjCmd	file:
ArgumentBCEnter	generic/tclExecute.c	/^ArgumentBCEnter($/;"	f	typeref:typename:void	file:
ArithRound	generic/tclArithSeries.c	/^ArithRound($/;"	f	typeref:typename:double	file:
ArithSeries	generic/tclArithSeries.c	/^} ArithSeries;$/;"	t	typeref:struct:__anond76bba880108	file:
ArithSeriesDbl	generic/tclArithSeries.c	/^} ArithSeriesDbl;$/;"	t	typeref:struct:__anond76bba880308	file:
ArithSeriesGetElements	generic/tclArithSeries.c	/^ArithSeriesGetElements($/;"	f	typeref:typename:int
ArithSeriesGetElements	generic/tclArithSeries.c	/^static Tcl_ObjInterfaceListAllProc	ArithSeriesGetElements;$/;"	v	typeref:typename:Tcl_ObjInterfaceListAllProc	file:
ArithSeriesGetInternalRep	generic/tclArithSeries.c	/^ArithSeriesGetInternalRep($/;"	f	typeref:typename:ArithSeries *	file:
ArithSeriesInOperation	generic/tclArithSeries.c	/^ArithSeriesInOperation($/;"	f	typeref:typename:int	file:
ArithSeriesInOperation	generic/tclArithSeries.c	/^static Tcl_ObjInterfaceListContainsProc	ArithSeriesInOperation;$/;"	v	typeref:typename:Tcl_ObjInterfaceListContainsProc	file:
ArithSeriesIndexDbl	generic/tclArithSeries.c	/^ArithSeriesIndexDbl($/;"	f	typeref:typename:double	file:
ArithSeriesIndexInt	generic/tclArithSeries.c	/^ArithSeriesIndexInt($/;"	f	typeref:typename:Tcl_WideInt	file:
ArithSeriesInt	generic/tclArithSeries.c	/^} ArithSeriesInt;$/;"	t	typeref:struct:__anond76bba880208	file:
ArithSeriesLenDbl	generic/tclArithSeries.c	/^ArithSeriesLenDbl($/;"	f	typeref:typename:Tcl_WideInt	file:
ArithSeriesLenInt	generic/tclArithSeries.c	/^ArithSeriesLenInt($/;"	f	typeref:typename:Tcl_WideInt	file:
ArithSeriesObjIndex	generic/tclArithSeries.c	/^ArithSeriesObjIndex($/;"	f	typeref:typename:int
ArithSeriesObjIndex	generic/tclArithSeries.c	/^static Tcl_ObjInterfaceListIndexProc	ArithSeriesObjIndex;$/;"	v	typeref:typename:Tcl_ObjInterfaceListIndexProc	file:
ArithSeriesObjLength	generic/tclArithSeries.c	/^int ArithSeriesObjLength(TCL_UNUSED(Tcl_Interp *),$/;"	f	typeref:typename:int
ArithSeriesObjLength	generic/tclArithSeries.c	/^static Tcl_ObjInterfaceListLengthProc	ArithSeriesObjLength;$/;"	v	typeref:typename:Tcl_ObjInterfaceListLengthProc	file:
ArithSeriesObjRange	generic/tclArithSeries.c	/^ArithSeriesObjRange($/;"	f	typeref:typename:int
ArithSeriesObjRange	generic/tclArithSeries.c	/^static Tcl_ObjInterfaceListRangeProc	ArithSeriesObjRange;$/;"	v	typeref:typename:Tcl_ObjInterfaceListRangeProc	file:
ArithSeriesObjReverse	generic/tclArithSeries.c	/^ArithSeriesObjReverse($/;"	f	typeref:typename:int
ArithSeriesObjReverse	generic/tclArithSeries.c	/^static Tcl_ObjInterfaceListReverseProc	ArithSeriesObjReverse;$/;"	v	typeref:typename:Tcl_ObjInterfaceListReverseProc	file:
ArithSeriesObjStep	generic/tclArithSeries.c	/^ArithSeriesObjStep($/;"	f	typeref:typename:int	file:
ArrayAnyMoreCmd	generic/tclVar.c	/^ArrayAnyMoreCmd($/;"	f	typeref:typename:int	file:
ArrayDefault	library/tcltest/tcltest.tcl	/^    proc ArrayDefault {varName value} {$/;"	p	namespace:::tcltest
ArrayDefaultCmd	generic/tclVar.c	/^ArrayDefaultCmd($/;"	f	typeref:typename:int	file:
ArrayDefaultCmd	generic/tclVar.c	/^static Tcl_ObjCmdProc	ArrayDefaultCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
ArrayDoneSearch	generic/tclVar.c	/^ArrayDoneSearch($/;"	f	typeref:typename:void	file:
ArrayDoneSearchCmd	generic/tclVar.c	/^ArrayDoneSearchCmd($/;"	f	typeref:typename:int	file:
ArrayExistsCmd	generic/tclVar.c	/^ArrayExistsCmd($/;"	f	typeref:typename:int	file:
ArrayForLoopCallback	generic/tclVar.c	/^ArrayForLoopCallback($/;"	f	typeref:typename:int	file:
ArrayForLoopCallback	generic/tclVar.c	/^static Tcl_NRPostProc   ArrayForLoopCallback;$/;"	v	typeref:typename:Tcl_NRPostProc	file:
ArrayForNRCmd	generic/tclVar.c	/^ArrayForNRCmd($/;"	f	typeref:typename:int	file:
ArrayForNRCmd	generic/tclVar.c	/^static Tcl_ObjCmdProc	ArrayForNRCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
ArrayForObjCmd	generic/tclVar.c	/^ArrayForObjCmd($/;"	f	typeref:typename:int	file:
ArrayGetCmd	generic/tclVar.c	/^ArrayGetCmd($/;"	f	typeref:typename:int	file:
ArrayNamesCmd	generic/tclVar.c	/^ArrayNamesCmd($/;"	f	typeref:typename:int	file:
ArrayNextElementCmd	generic/tclVar.c	/^ArrayNextElementCmd($/;"	f	typeref:typename:int	file:
ArrayObjNext	generic/tclVar.c	/^ArrayObjNext($/;"	f	typeref:typename:int	file:
ArrayPopulateSearch	generic/tclVar.c	/^ArrayPopulateSearch($/;"	f	typeref:typename:void	file:
ArraySearch	generic/tclVar.c	/^typedef struct ArraySearch {$/;"	s	file:
ArraySearch	generic/tclVar.c	/^} ArraySearch;$/;"	t	typeref:struct:ArraySearch	file:
ArraySetCmd	generic/tclVar.c	/^ArraySetCmd($/;"	f	typeref:typename:int	file:
ArraySizeCmd	generic/tclVar.c	/^ArraySizeCmd($/;"	f	typeref:typename:int	file:
ArrayStartSearchCmd	generic/tclVar.c	/^ArrayStartSearchCmd($/;"	f	typeref:typename:int	file:
ArrayStatsCmd	generic/tclVar.c	/^ArrayStatsCmd($/;"	f	typeref:typename:int	file:
ArrayUnsetCmd	generic/tclVar.c	/^ArrayUnsetCmd($/;"	f	typeref:typename:int	file:
ArrayVarHashTable	generic/tclVar.c	/^typedef struct ArrayVarHashTable {$/;"	s	file:
ArrayVarHashTable	generic/tclVar.c	/^} ArrayVarHashTable;$/;"	t	typeref:struct:ArrayVarHashTable	file:
AssembleOneLine	generic/tclAssembly.c	/^AssembleOneLine($/;"	f	typeref:typename:int	file:
AssemblyEnv	generic/tclAssembly.c	/^typedef struct AssemblyEnv {$/;"	s	file:
AssemblyEnv	generic/tclAssembly.c	/^} AssemblyEnv;$/;"	t	typeref:struct:AssemblyEnv	file:
Assert	compat/zlib/zutil.h	/^#  define Assert(/;"	d
AssignBaseIso8601Year	library/clockclassic.tcl	/^proc AssignBaseIso8601Year {date baseTime timeZone changeover} {$/;"	p
AssignBaseJulianDay	library/clockclassic.tcl	/^proc AssignBaseJulianDay { date baseTime timeZone changeover } {$/;"	p
AssignBaseMonth	library/clockclassic.tcl	/^proc AssignBaseMonth {date baseTime timezone changeover} {$/;"	p
AssignBaseWeek	library/clockclassic.tcl	/^proc AssignBaseWeek {date baseTime timeZone changeover} {$/;"	p
AssignBaseYear	library/clockclassic.tcl	/^proc AssignBaseYear { date baseTime timezone changeover } {$/;"	p
AssocData	generic/tclInt.h	/^typedef struct AssocData {$/;"	s
AssocData	generic/tclInt.h	/^} AssocData;$/;"	t	typeref:struct:AssocData
AsyncHandler	generic/tclAsync.c	/^typedef struct AsyncHandler {$/;"	s	file:
AsyncHandler	generic/tclAsync.c	/^} AsyncHandler;$/;"	t	typeref:struct:AsyncHandler	file:
AsyncHandlerProc	generic/tclTest.c	/^AsyncHandlerProc($/;"	f	typeref:typename:int	file:
AsyncThreadProc	generic/tclTest.c	/^AsyncThreadProc($/;"	f	typeref:typename:Tcl_ThreadCreateType	file:
AsyncTransaction	library/http/http.tcl	/^proc http::AsyncTransaction {token} {$/;"	p	namespace:http
AtForkChild	macosx/tclMacOSXNotify.c	/^AtForkChild(void)$/;"	f	typeref:typename:void	file:
AtForkChild	unix/tclUnixNotfy.c	/^AtForkChild(void)$/;"	f	typeref:typename:void	file:
AtForkParent	macosx/tclMacOSXNotify.c	/^AtForkParent(void)$/;"	f	typeref:typename:void	file:
AtForkPrepare	macosx/tclMacOSXNotify.c	/^AtForkPrepare(void)$/;"	f	typeref:typename:void	file:
Auto	compat/zlib/contrib/ada/zlib.ads	/^   type Header_Type is (None, Auto, Default, GZip);$/;"	l	type:Header_Type	file:
AuxData	generic/tclCompile.h	/^typedef struct AuxData {$/;"	s
AuxData	generic/tclCompile.h	/^} AuxData;$/;"	t	typeref:struct:AuxData
AuxDataDupProc	generic/tclCompile.h	/^typedef void *	(AuxDataDupProc) (void *clientData);$/;"	t	typeref:typename:void * ()(void * clientData)
AuxDataFreeProc	generic/tclCompile.h	/^typedef void	(AuxDataFreeProc) (void *clientData);$/;"	t	typeref:typename:void ()(void * clientData)
AuxDataPrintProc	generic/tclCompile.h	/^typedef void	(AuxDataPrintProc) (void *clientData,$/;"	t	typeref:typename:void ()(void * clientData,Tcl_Obj * appendObj,struct ByteCode * codePtr,TCL_HASH_TYPE pcOffset)
AuxDataType	generic/tclCompile.h	/^typedef struct AuxDataType {$/;"	s
AuxDataType	generic/tclCompile.h	/^} AuxDataType;$/;"	t	typeref:struct:AuxDataType
Avail_In	compat/zlib/contrib/ada/zlib-thin.adb	/^   function Avail_In (Strm : in Z_Stream) return UInt is$/;"	r	package:ZLib.Thin	file:
Avail_In	compat/zlib/contrib/ada/zlib-thin.ads	/^   function Avail_In (Strm : in Z_Stream) return UInt;$/;"	R
Avail_Out	compat/zlib/contrib/ada/zlib-thin.adb	/^   function Avail_Out (Strm : in Z_Stream) return UInt is$/;"	r	package:ZLib.Thin	file:
Avail_Out	compat/zlib/contrib/ada/zlib-thin.ads	/^   function Avail_Out (Strm : in Z_Stream) return UInt;$/;"	R
B0	generic/regguts.h	/^#define	B0(/;"	d
B1	generic/regguts.h	/^#define	B1(/;"	d
B2	generic/regguts.h	/^#define	B2(/;"	d
B3	generic/regguts.h	/^#define	B3(/;"	d
B64Digits	generic/tclBinary.c	/^static const char B64Digits[65] = {$/;"	v	typeref:typename:const char[65]	file:
BACKR	generic/regguts.h	/^#define	BACKR	/;"	d
BACKREF	generic/regcomp.c	/^#define	BACKREF	/;"	d	file:
BACKWARD COMPATIBILITY NOTE	doc/OOInitStubs.3	/^.SH "BACKWARD COMPATIBILITY NOTE"$/;"	s	title:Tcl_OOInitStubs
BAD	compat/zlib/contrib/infback9/inflate9.h	/^    BAD         \/* got a data error -- remain here until reset *\/$/;"	e	enum:__anonf28101a00103
BAD	compat/zlib/inflate.h	/^    BAD,        \/* got a data error -- remain here until reset *\/$/;"	e	enum:__anon6bf0a2910103
BADNAMESPACE	generic/tclVar.c	/^static const char BADNAMESPACE[] =	"parent namespace doesn't exist";$/;"	v	typeref:typename:const char[]	file:
BAIL	compat/zlib/examples/gzlog.c	/^#   define BAIL(/;"	d	file:
BAREWORD	generic/tclCompExpr.c	/^#define BAREWORD	/;"	d	file:
BASE	compat/zlib/adler32.c	/^#define BASE /;"	d	file:
BBAdjustStackDepth	generic/tclAssembly.c	/^BBAdjustStackDepth($/;"	f	typeref:typename:void	file:
BBCS_CAUGHT	generic/tclAssembly.c	/^    BBCS_CAUGHT			\/* Block is within a catch context and$/;"	e	enum:BasicBlockCatchState	file:
BBCS_INCATCH	generic/tclAssembly.c	/^    BBCS_INCATCH,		\/* Block is within a catch context *\/$/;"	e	enum:BasicBlockCatchState	file:
BBCS_NONE	generic/tclAssembly.c	/^    BBCS_NONE,			\/* Block is outside of any catch *\/$/;"	e	enum:BasicBlockCatchState	file:
BBCS_UNKNOWN	generic/tclAssembly.c	/^    BBCS_UNKNOWN = 0,		\/* Catch context has not yet been identified *\/$/;"	e	enum:BasicBlockCatchState	file:
BBEmitInst1or4	generic/tclAssembly.c	/^BBEmitInst1or4($/;"	f	typeref:typename:void	file:
BBEmitInstInt1	generic/tclAssembly.c	/^BBEmitInstInt1($/;"	f	typeref:typename:void	file:
BBEmitInstInt4	generic/tclAssembly.c	/^BBEmitInstInt4($/;"	f	typeref:typename:void	file:
BBEmitOpcode	generic/tclAssembly.c	/^BBEmitOpcode($/;"	f	typeref:typename:void	file:
BBUpdateStackReqs	generic/tclAssembly.c	/^BBUpdateStackReqs($/;"	f	typeref:typename:void	file:
BB_BEGINCATCH	generic/tclAssembly.c	/^    BB_BEGINCATCH = (1 << 4),	\/* Block ends with a 'beginCatch' instruction,$/;"	e	enum:BasicBlockFlags	file:
BB_ENDCATCH	generic/tclAssembly.c	/^    BB_ENDCATCH = (1 << 5)	\/* Block ends with an 'endCatch' instruction,$/;"	e	enum:BasicBlockFlags	file:
BB_FALLTHRU	generic/tclAssembly.c	/^    BB_FALLTHRU = (1 << 1),	\/* Control may pass from this block to a$/;"	e	enum:BasicBlockFlags	file:
BB_JUMP1	generic/tclAssembly.c	/^    BB_JUMP1 = (1 << 2),	\/* Basic block ends with a 1-byte-offset jump$/;"	e	enum:BasicBlockFlags	file:
BB_JUMPTABLE	generic/tclAssembly.c	/^    BB_JUMPTABLE = (1 << 3),	\/* Basic block ends with a jump table *\/$/;"	e	enum:BasicBlockFlags	file:
BB_VISITED	generic/tclAssembly.c	/^    BB_VISITED = (1 << 0),	\/* Block has been visited in the current$/;"	e	enum:BasicBlockFlags	file:
BEFORE_JMP	compat/zlib/contrib/gcc_gvmat64/gvmat64.S	/^#define BEFORE_JMP /;"	d	file:
BEHIND	generic/regcomp.c	/^#define	BEHIND	/;"	d	file:
BETWEEN	compat/zlib/examples/gznorm.c	/^        BETWEEN,        \/\/ between gzip members (must end in this state)$/;"	e	enum:gzip_normalize::__anon5bfe4c340103	file:
BG_FLUSH_SCHEDULED	generic/tclIO.h	/^#define BG_FLUSH_SCHEDULED	/;"	d
BIGBUFSIZE	compat/zlib/contrib/iostream3/zfstream.cc	/^#define BIGBUFSIZE /;"	d	file:
BIGDATA_BYTEARRAY	generic/tclTestObj.c	/^	   BIGDATA_STRING, BIGDATA_BYTEARRAY, BIGDATA_LIST, BIGDATA_DICT$/;"	e	enum:TestbigdataCmd::options	file:
BIGDATA_DICT	generic/tclTestObj.c	/^	   BIGDATA_STRING, BIGDATA_BYTEARRAY, BIGDATA_LIST, BIGDATA_DICT$/;"	e	enum:TestbigdataCmd::options	file:
BIGDATA_LIST	generic/tclTestObj.c	/^	   BIGDATA_STRING, BIGDATA_BYTEARRAY, BIGDATA_LIST, BIGDATA_DICT$/;"	e	enum:TestbigdataCmd::options	file:
BIGDATA_STRING	generic/tclTestObj.c	/^	   BIGDATA_STRING, BIGDATA_BYTEARRAY, BIGDATA_LIST, BIGDATA_DICT$/;"	e	enum:TestbigdataCmd::options	file:
BIGNUM_DIV10	generic/tclTestObj.c	/^	BIGNUM_SET, BIGNUM_GET, BIGNUM_MULT10, BIGNUM_DIV10, BIGNUM_ISEVEN,$/;"	e	enum:TestbignumobjCmd::options	file:
BIGNUM_GET	generic/tclTestObj.c	/^	BIGNUM_SET, BIGNUM_GET, BIGNUM_MULT10, BIGNUM_DIV10, BIGNUM_ISEVEN,$/;"	e	enum:TestbignumobjCmd::options	file:
BIGNUM_ISEVEN	generic/tclTestObj.c	/^	BIGNUM_SET, BIGNUM_GET, BIGNUM_MULT10, BIGNUM_DIV10, BIGNUM_ISEVEN,$/;"	e	enum:TestbignumobjCmd::options	file:
BIGNUM_MULT10	generic/tclTestObj.c	/^	BIGNUM_SET, BIGNUM_GET, BIGNUM_MULT10, BIGNUM_DIV10, BIGNUM_ISEVEN,$/;"	e	enum:TestbignumobjCmd::options	file:
BIGNUM_RADIXSIZE	generic/tclTestObj.c	/^	BIGNUM_RADIXSIZE$/;"	e	enum:TestbignumobjCmd::options	file:
BIGNUM_SET	generic/tclTestObj.c	/^	BIGNUM_SET, BIGNUM_GET, BIGNUM_MULT10, BIGNUM_DIV10, BIGNUM_ISEVEN,$/;"	e	enum:TestbignumobjCmd::options	file:
BIG_RESULT	generic/tclExecute.c	/^#define BIG_RESULT(/;"	d	file:
BINARY	generic/tclCompExpr.c	/^#define BINARY	/;"	d	file:
BINARY	generic/tclStrToD.c	/^	ZERO_O, ZERO_B, ZERO_D, BINARY,$/;"	e	enum:TclParseNumber::State	file:
BINARY_ALL	generic/tclBinary.c	/^#define BINARY_ALL /;"	d	file:
BINARY_MINUS	generic/tclCompExpr.c	/^#define BINARY_MINUS	/;"	d	file:
BINARY_NOCOUNT	generic/tclBinary.c	/^#define BINARY_NOCOUNT /;"	d	file:
BINARY_PLUS	generic/tclCompExpr.c	/^#define BINARY_PLUS	/;"	d	file:
BINARY_SCAN_MAX_CACHE	generic/tclBinary.c	/^#define BINARY_SCAN_MAX_CACHE	/;"	d	file:
BINARY_SIGNED	generic/tclBinary.c	/^#define BINARY_SIGNED /;"	d	file:
BINARY_TYPECAST	generic/tclBasic.c	/^#define BINARY_TYPECAST(/;"	d	file:
BINARY_UNSIGNED	generic/tclBinary.c	/^#define BINARY_UNSIGNED /;"	d	file:
BIND	unix/tclUnixSock.c	/^    enum { LOOKUP, SOCKET, BIND, LISTEN } howfar = LOOKUP;$/;"	e	enum:Tcl_OpenTcpServerEx::__anon07b4e8c00203	file:
BINDIR	macosx/GNUmakefile	/^BINDIR			?= ${PREFIX}\/bin$/;"	m
BINFILES	compat/zlib/nintendods/Makefile	/^BINFILES	:=	$(foreach dir,$(DATA),$(notdir $(wildcard $(dir)\/*.*)))$/;"	m
BINMODE	unix/tclUnixFCmd.c	/^#define BINMODE /;"	d	file:
BINMODE	unix/tclUnixFCmd.c	/^#define BINMODE$/;"	d	file:
BIN_INSTALL_DIR	unix/Makefile.in	/^BIN_INSTALL_DIR		= $(INSTALL_ROOT)$(bindir)$/;"	m
BIN_INSTALL_DIR	win/Makefile.in	/^BIN_INSTALL_DIR		= $(INSTALL_ROOT)$(bindir)$/;"	m
BITS	compat/zlib/contrib/infback9/infback9.c	/^#define BITS(/;"	d	file:
BITS	compat/zlib/infback.c	/^#define BITS(/;"	d	file:
BITS	compat/zlib/inflate.c	/^#define BITS(/;"	d	file:
BIT_AND	generic/tclCompExpr.c	/^#define BIT_AND	/;"	d	file:
BIT_NOT	generic/tclCompExpr.c	/^#define BIT_NOT	/;"	d	file:
BIT_OR	generic/tclCompExpr.c	/^#define BIT_OR	/;"	d	file:
BIT_XOR	generic/tclCompExpr.c	/^#define BIT_XOR	/;"	d	file:
BLETCH	generic/tclStrToD.c	/^#define BLETCH	/;"	d	file:
BLKTYPE	compat/zlib/contrib/untgz/untgz.c	/^#define BLKTYPE /;"	d	file:
BLOCK	compat/zlib/examples/gznorm.c	/^        BLOCK,          \/\/ reading deflate blocks$/;"	e	enum:gzip_normalize::__anon5bfe4c340103	file:
BLOCKMODEPROC	doc/CrtChannel.3	/^.SS BLOCKMODEPROC$/;"	S	section:Tcl_CreateChannel""TCL_CHANNELTYPE
BLOCKSIZE	compat/zlib/contrib/untgz/untgz.c	/^#define BLOCKSIZE /;"	d	file:
BLOCK_END	generic/tclAlloc.c	/^#define BLOCK_END(/;"	d	file:
BL_CODES	compat/zlib/deflate.h	/^#define BL_CODES /;"	d
BN_CUTOFFS_C	libtommath/tommath_class.h	/^#   define BN_CUTOFFS_C$/;"	d
BN_CUTOFFS_C	libtommath/tommath_superclass.h	/^#   define BN_CUTOFFS_C$/;"	d
BN_DEPRECATED_C	libtommath/tommath_class.h	/^#   define BN_DEPRECATED_C$/;"	d
BN_FAST_MP_INVMOD_C	libtommath/tommath_class.h	/^#   define BN_FAST_MP_INVMOD_C$/;"	d
BN_FAST_MP_MONTGOMERY_REDUCE_C	libtommath/tommath_class.h	/^#   define BN_FAST_MP_MONTGOMERY_REDUCE_C$/;"	d
BN_FAST_S_MP_MUL_DIGS_C	libtommath/tommath_class.h	/^#   define BN_FAST_S_MP_MUL_DIGS_C$/;"	d
BN_FAST_S_MP_MUL_HIGH_DIGS_C	libtommath/tommath_class.h	/^#   define BN_FAST_S_MP_MUL_HIGH_DIGS_C$/;"	d
BN_FAST_S_MP_SQR_C	libtommath/tommath_class.h	/^#   define BN_FAST_S_MP_SQR_C$/;"	d
BN_H_	libtommath/tommath.h	/^#define BN_H_$/;"	d
BN_MP_2EXPT_C	libtommath/tommath_class.h	/^#   define BN_MP_2EXPT_C$/;"	d
BN_MP_ABS_C	libtommath/tommath_class.h	/^#   define BN_MP_ABS_C$/;"	d
BN_MP_ADDMOD_C	libtommath/tommath_class.h	/^#   define BN_MP_ADDMOD_C$/;"	d
BN_MP_ADDMOD_C	libtommath/tommath_superclass.h	/^#   define BN_MP_ADDMOD_C$/;"	d
BN_MP_ADD_C	libtommath/tommath_class.h	/^#   define BN_MP_ADD_C$/;"	d
BN_MP_ADD_D_C	libtommath/tommath_class.h	/^#   define BN_MP_ADD_D_C$/;"	d
BN_MP_AND_C	libtommath/tommath_class.h	/^#   define BN_MP_AND_C$/;"	d
BN_MP_BALANCE_MUL_C	libtommath/tommath_class.h	/^#   define BN_MP_BALANCE_MUL_C$/;"	d
BN_MP_CLAMP_C	libtommath/tommath_class.h	/^#   define BN_MP_CLAMP_C$/;"	d
BN_MP_CLEAR_C	libtommath/tommath_class.h	/^#   define BN_MP_CLEAR_C$/;"	d
BN_MP_CLEAR_MULTI_C	libtommath/tommath_class.h	/^#   define BN_MP_CLEAR_MULTI_C$/;"	d
BN_MP_CLEAR_MULTI_C	libtommath/tommath_superclass.h	/^#   define BN_MP_CLEAR_MULTI_C$/;"	d
BN_MP_CMP_C	libtommath/tommath_class.h	/^#   define BN_MP_CMP_C$/;"	d
BN_MP_CMP_D_C	libtommath/tommath_class.h	/^#   define BN_MP_CMP_D_C$/;"	d
BN_MP_CMP_MAG_C	libtommath/tommath_class.h	/^#   define BN_MP_CMP_MAG_C$/;"	d
BN_MP_CNT_LSB_C	libtommath/tommath_class.h	/^#   define BN_MP_CNT_LSB_C$/;"	d
BN_MP_COMPLEMENT_C	libtommath/tommath_class.h	/^#   define BN_MP_COMPLEMENT_C$/;"	d
BN_MP_COPY_C	libtommath/tommath_class.h	/^#   define BN_MP_COPY_C$/;"	d
BN_MP_COUNT_BITS_C	libtommath/tommath_class.h	/^#   define BN_MP_COUNT_BITS_C$/;"	d
BN_MP_DECR_C	libtommath/tommath_class.h	/^#   define BN_MP_DECR_C$/;"	d
BN_MP_DIV_2D_C	libtommath/tommath_class.h	/^#   define BN_MP_DIV_2D_C$/;"	d
BN_MP_DIV_2_C	libtommath/tommath_class.h	/^#   define BN_MP_DIV_2_C$/;"	d
BN_MP_DIV_3_C	libtommath/tommath_class.h	/^#   define BN_MP_DIV_3_C$/;"	d
BN_MP_DIV_C	libtommath/tommath_class.h	/^#   define BN_MP_DIV_C$/;"	d
BN_MP_DIV_D_C	libtommath/tommath_class.h	/^#   define BN_MP_DIV_D_C$/;"	d
BN_MP_DIV_SMALL	libtommath/tommath_superclass.h	/^#   define BN_MP_DIV_SMALL /;"	d
BN_MP_DR_IS_MODULUS_C	libtommath/tommath_class.h	/^#   define BN_MP_DR_IS_MODULUS_C$/;"	d
BN_MP_DR_REDUCE_C	libtommath/tommath_class.h	/^#   define BN_MP_DR_REDUCE_C$/;"	d
BN_MP_DR_SETUP_C	libtommath/tommath_class.h	/^#   define BN_MP_DR_SETUP_C$/;"	d
BN_MP_ERROR_TO_STRING_C	libtommath/tommath_class.h	/^#   define BN_MP_ERROR_TO_STRING_C$/;"	d
BN_MP_ERROR_TO_STRING_C	libtommath/tommath_superclass.h	/^#   define BN_MP_ERROR_TO_STRING_C$/;"	d
BN_MP_EXCH_C	libtommath/tommath_class.h	/^#   define BN_MP_EXCH_C$/;"	d
BN_MP_EXPORT_C	libtommath/tommath_class.h	/^#   define BN_MP_EXPORT_C$/;"	d
BN_MP_EXPTMOD_C	libtommath/tommath_class.h	/^#   define BN_MP_EXPTMOD_C$/;"	d
BN_MP_EXPTMOD_C	libtommath/tommath_superclass.h	/^#   define BN_MP_EXPTMOD_C$/;"	d
BN_MP_EXPTMOD_FAST_C	libtommath/tommath_class.h	/^#   define BN_MP_EXPTMOD_FAST_C$/;"	d
BN_MP_EXPT_D_C	libtommath/tommath_class.h	/^#   define BN_MP_EXPT_D_C$/;"	d
BN_MP_EXPT_D_EX_C	libtommath/tommath_class.h	/^#   define BN_MP_EXPT_D_EX_C$/;"	d
BN_MP_EXPT_N_C	libtommath/tommath_class.h	/^#   define BN_MP_EXPT_N_C$/;"	d
BN_MP_EXPT_U32_C	libtommath/tommath_class.h	/^#   define BN_MP_EXPT_U32_C$/;"	d
BN_MP_EXTEUCLID_C	libtommath/tommath_class.h	/^#   define BN_MP_EXTEUCLID_C$/;"	d
BN_MP_FREAD_C	libtommath/tommath_class.h	/^#   define BN_MP_FREAD_C$/;"	d
BN_MP_FREAD_C	libtommath/tommath_superclass.h	/^#   define BN_MP_FREAD_C$/;"	d
BN_MP_FROM_SBIN_C	libtommath/tommath_class.h	/^#   define BN_MP_FROM_SBIN_C$/;"	d
BN_MP_FROM_SBIN_C	libtommath/tommath_superclass.h	/^#   define BN_MP_FROM_SBIN_C$/;"	d
BN_MP_FROM_UBIN_C	libtommath/tommath_class.h	/^#   define BN_MP_FROM_UBIN_C$/;"	d
BN_MP_FWRITE_C	libtommath/tommath_class.h	/^#   define BN_MP_FWRITE_C$/;"	d
BN_MP_FWRITE_C	libtommath/tommath_superclass.h	/^#   define BN_MP_FWRITE_C$/;"	d
BN_MP_GCD_C	libtommath/tommath_class.h	/^#   define BN_MP_GCD_C$/;"	d
BN_MP_GCD_C	libtommath/tommath_superclass.h	/^#   define BN_MP_GCD_C$/;"	d
BN_MP_GET_BIT_C	libtommath/tommath_class.h	/^#   define BN_MP_GET_BIT_C$/;"	d
BN_MP_GET_DOUBLE_C	libtommath/tommath_class.h	/^#   define BN_MP_GET_DOUBLE_C$/;"	d
BN_MP_GET_I32_C	libtommath/tommath_class.h	/^#   define BN_MP_GET_I32_C$/;"	d
BN_MP_GET_I64_C	libtommath/tommath_class.h	/^#   define BN_MP_GET_I64_C$/;"	d
BN_MP_GET_INT_C	libtommath/tommath_class.h	/^#   define BN_MP_GET_INT_C$/;"	d
BN_MP_GET_LL_C	libtommath/tommath_class.h	/^#   define BN_MP_GET_LL_C$/;"	d
BN_MP_GET_LONG_C	libtommath/tommath_class.h	/^#   define BN_MP_GET_LONG_C$/;"	d
BN_MP_GET_LONG_LONG_C	libtommath/tommath_class.h	/^#   define BN_MP_GET_LONG_LONG_C$/;"	d
BN_MP_GET_L_C	libtommath/tommath_class.h	/^#   define BN_MP_GET_L_C$/;"	d
BN_MP_GET_MAG_U32_C	libtommath/tommath_class.h	/^#   define BN_MP_GET_MAG_U32_C$/;"	d
BN_MP_GET_MAG_U64_C	libtommath/tommath_class.h	/^#   define BN_MP_GET_MAG_U64_C$/;"	d
BN_MP_GET_MAG_ULL_C	libtommath/tommath_class.h	/^#   define BN_MP_GET_MAG_ULL_C$/;"	d
BN_MP_GET_MAG_UL_C	libtommath/tommath_class.h	/^#   define BN_MP_GET_MAG_UL_C$/;"	d
BN_MP_GROW_C	libtommath/tommath_class.h	/^#   define BN_MP_GROW_C$/;"	d
BN_MP_IMPORT_C	libtommath/tommath_class.h	/^#   define BN_MP_IMPORT_C$/;"	d
BN_MP_INCR_C	libtommath/tommath_class.h	/^#   define BN_MP_INCR_C$/;"	d
BN_MP_INCR_C	libtommath/tommath_superclass.h	/^#   define BN_MP_INCR_C$/;"	d
BN_MP_INIT_C	libtommath/tommath_class.h	/^#   define BN_MP_INIT_C$/;"	d
BN_MP_INIT_COPY_C	libtommath/tommath_class.h	/^#   define BN_MP_INIT_COPY_C$/;"	d
BN_MP_INIT_I32_C	libtommath/tommath_class.h	/^#   define BN_MP_INIT_I32_C$/;"	d
BN_MP_INIT_I64_C	libtommath/tommath_class.h	/^#   define BN_MP_INIT_I64_C$/;"	d
BN_MP_INIT_LL_C	libtommath/tommath_class.h	/^#   define BN_MP_INIT_LL_C$/;"	d
BN_MP_INIT_L_C	libtommath/tommath_class.h	/^#   define BN_MP_INIT_L_C$/;"	d
BN_MP_INIT_MULTI_C	libtommath/tommath_class.h	/^#   define BN_MP_INIT_MULTI_C$/;"	d
BN_MP_INIT_MULTI_C	libtommath/tommath_superclass.h	/^#   define BN_MP_INIT_MULTI_C$/;"	d
BN_MP_INIT_SET_C	libtommath/tommath_class.h	/^#   define BN_MP_INIT_SET_C$/;"	d
BN_MP_INIT_SET_INT_C	libtommath/tommath_class.h	/^#   define BN_MP_INIT_SET_INT_C$/;"	d
BN_MP_INIT_SIZE_C	libtommath/tommath_class.h	/^#   define BN_MP_INIT_SIZE_C$/;"	d
BN_MP_INIT_U32_C	libtommath/tommath_class.h	/^#   define BN_MP_INIT_U32_C$/;"	d
BN_MP_INIT_U64_C	libtommath/tommath_class.h	/^#   define BN_MP_INIT_U64_C$/;"	d
BN_MP_INIT_ULL_C	libtommath/tommath_class.h	/^#   define BN_MP_INIT_ULL_C$/;"	d
BN_MP_INIT_UL_C	libtommath/tommath_class.h	/^#   define BN_MP_INIT_UL_C$/;"	d
BN_MP_INVMOD_C	libtommath/tommath_class.h	/^#   define BN_MP_INVMOD_C$/;"	d
BN_MP_INVMOD_C	libtommath/tommath_superclass.h	/^#   define BN_MP_INVMOD_C$/;"	d
BN_MP_INVMOD_SLOW_C	libtommath/tommath_class.h	/^#   define BN_MP_INVMOD_SLOW_C$/;"	d
BN_MP_ISEVEN_C	libtommath/tommath_class.h	/^#   define BN_MP_ISEVEN_C$/;"	d
BN_MP_ISEVEN_C	libtommath/tommath_superclass.h	/^#   define BN_MP_ISEVEN_C$/;"	d
BN_MP_ISODD_C	libtommath/tommath_class.h	/^#   define BN_MP_ISODD_C$/;"	d
BN_MP_ISODD_C	libtommath/tommath_superclass.h	/^#   define BN_MP_ISODD_C$/;"	d
BN_MP_IS_SQUARE_C	libtommath/tommath_class.h	/^#   define BN_MP_IS_SQUARE_C$/;"	d
BN_MP_JACOBI_C	libtommath/tommath_class.h	/^#   define BN_MP_JACOBI_C$/;"	d
BN_MP_KARATSUBA_MUL_C	libtommath/tommath_class.h	/^#   define BN_MP_KARATSUBA_MUL_C$/;"	d
BN_MP_KARATSUBA_SQR_C	libtommath/tommath_class.h	/^#   define BN_MP_KARATSUBA_SQR_C$/;"	d
BN_MP_KRONECKER_C	libtommath/tommath_class.h	/^#   define BN_MP_KRONECKER_C$/;"	d
BN_MP_LCM_C	libtommath/tommath_class.h	/^#   define BN_MP_LCM_C$/;"	d
BN_MP_LCM_C	libtommath/tommath_superclass.h	/^#   define BN_MP_LCM_C$/;"	d
BN_MP_LOG_N_C	libtommath/tommath_class.h	/^#   define BN_MP_LOG_N_C$/;"	d
BN_MP_LOG_U32_C	libtommath/tommath_class.h	/^#   define BN_MP_LOG_U32_C$/;"	d
BN_MP_LSHD_C	libtommath/tommath_class.h	/^#   define BN_MP_LSHD_C$/;"	d
BN_MP_MOD_2D_C	libtommath/tommath_class.h	/^#   define BN_MP_MOD_2D_C$/;"	d
BN_MP_MOD_C	libtommath/tommath_class.h	/^#   define BN_MP_MOD_C$/;"	d
BN_MP_MOD_C	libtommath/tommath_superclass.h	/^#   define BN_MP_MOD_C$/;"	d
BN_MP_MOD_D_C	libtommath/tommath_class.h	/^#   define BN_MP_MOD_D_C$/;"	d
BN_MP_MOD_D_C	libtommath/tommath_superclass.h	/^#   define BN_MP_MOD_D_C$/;"	d
BN_MP_MONTGOMERY_CALC_NORMALIZATION_C	libtommath/tommath_class.h	/^#   define BN_MP_MONTGOMERY_CALC_NORMALIZATION_C$/;"	d
BN_MP_MONTGOMERY_REDUCE_C	libtommath/tommath_class.h	/^#   define BN_MP_MONTGOMERY_REDUCE_C$/;"	d
BN_MP_MONTGOMERY_SETUP_C	libtommath/tommath_class.h	/^#   define BN_MP_MONTGOMERY_SETUP_C$/;"	d
BN_MP_MULMOD_C	libtommath/tommath_class.h	/^#   define BN_MP_MULMOD_C$/;"	d
BN_MP_MULMOD_C	libtommath/tommath_superclass.h	/^#   define BN_MP_MULMOD_C$/;"	d
BN_MP_MUL_2D_C	libtommath/tommath_class.h	/^#   define BN_MP_MUL_2D_C$/;"	d
BN_MP_MUL_2_C	libtommath/tommath_class.h	/^#   define BN_MP_MUL_2_C$/;"	d
BN_MP_MUL_C	libtommath/tommath_class.h	/^#   define BN_MP_MUL_C$/;"	d
BN_MP_MUL_D_C	libtommath/tommath_class.h	/^#   define BN_MP_MUL_D_C$/;"	d
BN_MP_NEG_C	libtommath/tommath_class.h	/^#   define BN_MP_NEG_C$/;"	d
BN_MP_NEG_C	libtommath/tommath_superclass.h	/^#   define BN_MP_NEG_C$/;"	d
BN_MP_N_ROOT_C	libtommath/tommath_class.h	/^#   define BN_MP_N_ROOT_C$/;"	d
BN_MP_N_ROOT_EX_C	libtommath/tommath_class.h	/^#   define BN_MP_N_ROOT_EX_C$/;"	d
BN_MP_OR_C	libtommath/tommath_class.h	/^#   define BN_MP_OR_C$/;"	d
BN_MP_PACK_C	libtommath/tommath_class.h	/^#   define BN_MP_PACK_C$/;"	d
BN_MP_PACK_COUNT_C	libtommath/tommath_class.h	/^#   define BN_MP_PACK_COUNT_C$/;"	d
BN_MP_PRIME_FERMAT_C	libtommath/tommath_class.h	/^#   define BN_MP_PRIME_FERMAT_C$/;"	d
BN_MP_PRIME_FROBENIUS_UNDERWOOD_C	libtommath/tommath_class.h	/^#   define BN_MP_PRIME_FROBENIUS_UNDERWOOD_C$/;"	d
BN_MP_PRIME_FROBENIUS_UNDERWOOD_C	libtommath/tommath_superclass.h	/^#   define BN_MP_PRIME_FROBENIUS_UNDERWOOD_C$/;"	d
BN_MP_PRIME_IS_DIVISIBLE_C	libtommath/tommath_class.h	/^#   define BN_MP_PRIME_IS_DIVISIBLE_C$/;"	d
BN_MP_PRIME_IS_PRIME_C	libtommath/tommath_class.h	/^#   define BN_MP_PRIME_IS_PRIME_C$/;"	d
BN_MP_PRIME_IS_PRIME_C	libtommath/tommath_superclass.h	/^#   define BN_MP_PRIME_IS_PRIME_C$/;"	d
BN_MP_PRIME_MILLER_RABIN_C	libtommath/tommath_class.h	/^#   define BN_MP_PRIME_MILLER_RABIN_C$/;"	d
BN_MP_PRIME_NEXT_PRIME_C	libtommath/tommath_class.h	/^#   define BN_MP_PRIME_NEXT_PRIME_C$/;"	d
BN_MP_PRIME_RABIN_MILLER_TRIALS_C	libtommath/tommath_class.h	/^#   define BN_MP_PRIME_RABIN_MILLER_TRIALS_C$/;"	d
BN_MP_PRIME_RABIN_MILLER_TRIALS_C	libtommath/tommath_superclass.h	/^#   define BN_MP_PRIME_RABIN_MILLER_TRIALS_C$/;"	d
BN_MP_PRIME_RANDOM_EX_C	libtommath/tommath_class.h	/^#   define BN_MP_PRIME_RANDOM_EX_C$/;"	d
BN_MP_PRIME_RAND_C	libtommath/tommath_class.h	/^#   define BN_MP_PRIME_RAND_C$/;"	d
BN_MP_PRIME_RAND_C	libtommath/tommath_superclass.h	/^#   define BN_MP_PRIME_RAND_C$/;"	d
BN_MP_PRIME_STRONG_LUCAS_SELFRIDGE_C	libtommath/tommath_class.h	/^#   define BN_MP_PRIME_STRONG_LUCAS_SELFRIDGE_C$/;"	d
BN_MP_RADIX_SIZE_C	libtommath/tommath_class.h	/^#   define BN_MP_RADIX_SIZE_C$/;"	d
BN_MP_RADIX_SIZE_C	libtommath/tommath_superclass.h	/^#   define BN_MP_RADIX_SIZE_C$/;"	d
BN_MP_RADIX_SMAP_C	libtommath/tommath_class.h	/^#   define BN_MP_RADIX_SMAP_C$/;"	d
BN_MP_RADIX_SMAP_C	libtommath/tommath_superclass.h	/^#   define BN_MP_RADIX_SMAP_C$/;"	d
BN_MP_RAND_C	libtommath/tommath_class.h	/^#   define BN_MP_RAND_C$/;"	d
BN_MP_RAND_C	libtommath/tommath_superclass.h	/^#   define BN_MP_RAND_C$/;"	d
BN_MP_RAND_DIGIT_C	libtommath/tommath_class.h	/^#   define BN_MP_RAND_DIGIT_C$/;"	d
BN_MP_RAND_SOURCE_C	libtommath/tommath_class.h	/^#   define BN_MP_RAND_SOURCE_C$/;"	d
BN_MP_READ_RADIX_C	libtommath/tommath_class.h	/^#   define BN_MP_READ_RADIX_C$/;"	d
BN_MP_READ_SIGNED_BIN_C	libtommath/tommath_class.h	/^#   define BN_MP_READ_SIGNED_BIN_C$/;"	d
BN_MP_READ_UNSIGNED_BIN_C	libtommath/tommath_class.h	/^#   define BN_MP_READ_UNSIGNED_BIN_C$/;"	d
BN_MP_REDUCE_2K_C	libtommath/tommath_class.h	/^#   define BN_MP_REDUCE_2K_C$/;"	d
BN_MP_REDUCE_2K_L_C	libtommath/tommath_class.h	/^#   define BN_MP_REDUCE_2K_L_C$/;"	d
BN_MP_REDUCE_2K_L_C	libtommath/tommath_superclass.h	/^#   define BN_MP_REDUCE_2K_L_C$/;"	d
BN_MP_REDUCE_2K_SETUP_C	libtommath/tommath_class.h	/^#   define BN_MP_REDUCE_2K_SETUP_C$/;"	d
BN_MP_REDUCE_2K_SETUP_L_C	libtommath/tommath_class.h	/^#   define BN_MP_REDUCE_2K_SETUP_L_C$/;"	d
BN_MP_REDUCE_C	libtommath/tommath_class.h	/^#   define BN_MP_REDUCE_C$/;"	d
BN_MP_REDUCE_C	libtommath/tommath_superclass.h	/^#   define BN_MP_REDUCE_C$/;"	d
BN_MP_REDUCE_IS_2K_C	libtommath/tommath_class.h	/^#   define BN_MP_REDUCE_IS_2K_C$/;"	d
BN_MP_REDUCE_IS_2K_L_C	libtommath/tommath_class.h	/^#   define BN_MP_REDUCE_IS_2K_L_C$/;"	d
BN_MP_REDUCE_SETUP_C	libtommath/tommath_class.h	/^#   define BN_MP_REDUCE_SETUP_C$/;"	d
BN_MP_ROOT_N_C	libtommath/tommath_class.h	/^#   define BN_MP_ROOT_N_C$/;"	d
BN_MP_ROOT_U32_C	libtommath/tommath_class.h	/^#   define BN_MP_ROOT_U32_C$/;"	d
BN_MP_ROOT_U32_C	libtommath/tommath_superclass.h	/^#   define BN_MP_ROOT_U32_C$/;"	d
BN_MP_RSHD_C	libtommath/tommath_class.h	/^#   define BN_MP_RSHD_C$/;"	d
BN_MP_SBIN_SIZE_C	libtommath/tommath_class.h	/^#   define BN_MP_SBIN_SIZE_C$/;"	d
BN_MP_SBIN_SIZE_C	libtommath/tommath_superclass.h	/^#   define BN_MP_SBIN_SIZE_C$/;"	d
BN_MP_SET_C	libtommath/tommath_class.h	/^#   define BN_MP_SET_C$/;"	d
BN_MP_SET_DOUBLE_C	libtommath/tommath_class.h	/^#   define BN_MP_SET_DOUBLE_C$/;"	d
BN_MP_SET_I32_C	libtommath/tommath_class.h	/^#   define BN_MP_SET_I32_C$/;"	d
BN_MP_SET_I64_C	libtommath/tommath_class.h	/^#   define BN_MP_SET_I64_C$/;"	d
BN_MP_SET_INT_C	libtommath/tommath_class.h	/^#   define BN_MP_SET_INT_C$/;"	d
BN_MP_SET_INT_C	libtommath/tommath_superclass.h	/^#   define BN_MP_SET_INT_C$/;"	d
BN_MP_SET_LL_C	libtommath/tommath_class.h	/^#   define BN_MP_SET_LL_C$/;"	d
BN_MP_SET_LONG_C	libtommath/tommath_class.h	/^#   define BN_MP_SET_LONG_C$/;"	d
BN_MP_SET_LONG_LONG_C	libtommath/tommath_class.h	/^#   define BN_MP_SET_LONG_LONG_C$/;"	d
BN_MP_SET_L_C	libtommath/tommath_class.h	/^#   define BN_MP_SET_L_C$/;"	d
BN_MP_SET_L_C	libtommath/tommath_superclass.h	/^#   define BN_MP_SET_L_C$/;"	d
BN_MP_SET_U32_C	libtommath/tommath_class.h	/^#   define BN_MP_SET_U32_C$/;"	d
BN_MP_SET_U64_C	libtommath/tommath_class.h	/^#   define BN_MP_SET_U64_C$/;"	d
BN_MP_SET_ULL_C	libtommath/tommath_class.h	/^#   define BN_MP_SET_ULL_C$/;"	d
BN_MP_SET_UL_C	libtommath/tommath_class.h	/^#   define BN_MP_SET_UL_C$/;"	d
BN_MP_SET_UL_C	libtommath/tommath_superclass.h	/^#   define BN_MP_SET_UL_C$/;"	d
BN_MP_SHRINK_C	libtommath/tommath_class.h	/^#   define BN_MP_SHRINK_C$/;"	d
BN_MP_SHRINK_C	libtommath/tommath_superclass.h	/^#   define BN_MP_SHRINK_C$/;"	d
BN_MP_SIGNED_BIN_SIZE_C	libtommath/tommath_class.h	/^#   define BN_MP_SIGNED_BIN_SIZE_C$/;"	d
BN_MP_SIGNED_RSH_C	libtommath/tommath_class.h	/^#   define BN_MP_SIGNED_RSH_C$/;"	d
BN_MP_SQRMOD_C	libtommath/tommath_class.h	/^#   define BN_MP_SQRMOD_C$/;"	d
BN_MP_SQRTMOD_PRIME_C	libtommath/tommath_class.h	/^#   define BN_MP_SQRTMOD_PRIME_C$/;"	d
BN_MP_SQRT_C	libtommath/tommath_class.h	/^#   define BN_MP_SQRT_C$/;"	d
BN_MP_SQR_C	libtommath/tommath_class.h	/^#   define BN_MP_SQR_C$/;"	d
BN_MP_SUBMOD_C	libtommath/tommath_class.h	/^#   define BN_MP_SUBMOD_C$/;"	d
BN_MP_SUB_C	libtommath/tommath_class.h	/^#   define BN_MP_SUB_C$/;"	d
BN_MP_SUB_D_C	libtommath/tommath_class.h	/^#   define BN_MP_SUB_D_C$/;"	d
BN_MP_TC_AND_C	libtommath/tommath_class.h	/^#   define BN_MP_TC_AND_C$/;"	d
BN_MP_TC_DIV_2D_C	libtommath/tommath_class.h	/^#   define BN_MP_TC_DIV_2D_C$/;"	d
BN_MP_TC_OR_C	libtommath/tommath_class.h	/^#   define BN_MP_TC_OR_C$/;"	d
BN_MP_TC_XOR_C	libtommath/tommath_class.h	/^#   define BN_MP_TC_XOR_C$/;"	d
BN_MP_TOOM_MUL_C	libtommath/tommath_class.h	/^#   define BN_MP_TOOM_MUL_C$/;"	d
BN_MP_TOOM_SQR_C	libtommath/tommath_class.h	/^#   define BN_MP_TOOM_SQR_C$/;"	d
BN_MP_TORADIX_C	libtommath/tommath_class.h	/^#   define BN_MP_TORADIX_C$/;"	d
BN_MP_TORADIX_N_C	libtommath/tommath_class.h	/^#   define BN_MP_TORADIX_N_C$/;"	d
BN_MP_TO_RADIX_C	libtommath/tommath_class.h	/^#   define BN_MP_TO_RADIX_C$/;"	d
BN_MP_TO_RADIX_C	libtommath/tommath_superclass.h	/^#   define BN_MP_TO_RADIX_C$/;"	d
BN_MP_TO_SBIN_C	libtommath/tommath_class.h	/^#   define BN_MP_TO_SBIN_C$/;"	d
BN_MP_TO_SBIN_C	libtommath/tommath_superclass.h	/^#   define BN_MP_TO_SBIN_C$/;"	d
BN_MP_TO_SIGNED_BIN_C	libtommath/tommath_class.h	/^#   define BN_MP_TO_SIGNED_BIN_C$/;"	d
BN_MP_TO_SIGNED_BIN_N_C	libtommath/tommath_class.h	/^#   define BN_MP_TO_SIGNED_BIN_N_C$/;"	d
BN_MP_TO_UBIN_C	libtommath/tommath_class.h	/^#   define BN_MP_TO_UBIN_C$/;"	d
BN_MP_TO_UNSIGNED_BIN_C	libtommath/tommath_class.h	/^#   define BN_MP_TO_UNSIGNED_BIN_C$/;"	d
BN_MP_TO_UNSIGNED_BIN_C	libtommath/tommath_superclass.h	/^#   define BN_MP_TO_UNSIGNED_BIN_C$/;"	d
BN_MP_TO_UNSIGNED_BIN_N_C	libtommath/tommath_class.h	/^#   define BN_MP_TO_UNSIGNED_BIN_N_C$/;"	d
BN_MP_UBIN_SIZE_C	libtommath/tommath_class.h	/^#   define BN_MP_UBIN_SIZE_C$/;"	d
BN_MP_UNPACK_C	libtommath/tommath_class.h	/^#   define BN_MP_UNPACK_C$/;"	d
BN_MP_UNSIGNED_BIN_SIZE_C	libtommath/tommath_class.h	/^#   define BN_MP_UNSIGNED_BIN_SIZE_C$/;"	d
BN_MP_UNSIGNED_BIN_SIZE_C	libtommath/tommath_superclass.h	/^#   define BN_MP_UNSIGNED_BIN_SIZE_C$/;"	d
BN_MP_XOR_C	libtommath/tommath_class.h	/^#   define BN_MP_XOR_C$/;"	d
BN_MP_ZERO_C	libtommath/tommath_class.h	/^#   define BN_MP_ZERO_C$/;"	d
BN_PRIME_TAB_C	libtommath/tommath_class.h	/^#   define BN_PRIME_TAB_C$/;"	d
BN_PRIME_TAB_C	libtommath/tommath_superclass.h	/^#   define BN_PRIME_TAB_C$/;"	d
BN_S_MP_ADD_C	libtommath/tommath_class.h	/^#   define BN_S_MP_ADD_C$/;"	d
BN_S_MP_BALANCE_MUL_C	libtommath/tommath_class.h	/^#   define BN_S_MP_BALANCE_MUL_C$/;"	d
BN_S_MP_DIV_3_C	libtommath/tommath_class.h	/^#   define BN_S_MP_DIV_3_C$/;"	d
BN_S_MP_EXPTMOD_C	libtommath/tommath_class.h	/^#   define BN_S_MP_EXPTMOD_C$/;"	d
BN_S_MP_EXPTMOD_FAST_C	libtommath/tommath_class.h	/^#   define BN_S_MP_EXPTMOD_FAST_C$/;"	d
BN_S_MP_GET_BIT_C	libtommath/tommath_class.h	/^#   define BN_S_MP_GET_BIT_C$/;"	d
BN_S_MP_INVMOD_FAST_C	libtommath/tommath_class.h	/^#   define BN_S_MP_INVMOD_FAST_C$/;"	d
BN_S_MP_INVMOD_SLOW_C	libtommath/tommath_class.h	/^#   define BN_S_MP_INVMOD_SLOW_C$/;"	d
BN_S_MP_KARATSUBA_MUL_C	libtommath/tommath_class.h	/^#   define BN_S_MP_KARATSUBA_MUL_C$/;"	d
BN_S_MP_KARATSUBA_SQR_C	libtommath/tommath_class.h	/^#   define BN_S_MP_KARATSUBA_SQR_C$/;"	d
BN_S_MP_LOG_2EXPT_C	libtommath/tommath_class.h	/^#   define BN_S_MP_LOG_2EXPT_C$/;"	d
BN_S_MP_LOG_C	libtommath/tommath_class.h	/^#   define BN_S_MP_LOG_C$/;"	d
BN_S_MP_LOG_D_C	libtommath/tommath_class.h	/^#   define BN_S_MP_LOG_D_C$/;"	d
BN_S_MP_MONTGOMERY_REDUCE_FAST_C	libtommath/tommath_class.h	/^#   define BN_S_MP_MONTGOMERY_REDUCE_FAST_C$/;"	d
BN_S_MP_MUL_DIGS_C	libtommath/tommath_class.h	/^#   define BN_S_MP_MUL_DIGS_C$/;"	d
BN_S_MP_MUL_DIGS_FAST_C	libtommath/tommath_class.h	/^#   define BN_S_MP_MUL_DIGS_FAST_C$/;"	d
BN_S_MP_MUL_HIGH_DIGS_C	libtommath/tommath_class.h	/^#   define BN_S_MP_MUL_HIGH_DIGS_C$/;"	d
BN_S_MP_MUL_HIGH_DIGS_FAST_C	libtommath/tommath_class.h	/^#   define BN_S_MP_MUL_HIGH_DIGS_FAST_C$/;"	d
BN_S_MP_MUL_SI_C	libtommath/tommath_class.h	/^#   define BN_S_MP_MUL_SI_C$/;"	d
BN_S_MP_PRIME_IS_DIVISIBLE_C	libtommath/tommath_class.h	/^#   define BN_S_MP_PRIME_IS_DIVISIBLE_C$/;"	d
BN_S_MP_PRIME_RANDOM_EX_C	libtommath/tommath_class.h	/^#   define BN_S_MP_PRIME_RANDOM_EX_C$/;"	d
BN_S_MP_RAND_CB_C	libtommath/tommath_class.h	/^#   define BN_S_MP_RAND_CB_C$/;"	d
BN_S_MP_RAND_JENKINS_C	libtommath/tommath_class.h	/^#   define BN_S_MP_RAND_JENKINS_C$/;"	d
BN_S_MP_RAND_JENKINS_C	libtommath/tommath_superclass.h	/^#   define BN_S_MP_RAND_JENKINS_C$/;"	d
BN_S_MP_RAND_JENKINS_INIT_C	libtommath/tommath_class.h	/^#   define BN_S_MP_RAND_JENKINS_INIT_C$/;"	d
BN_S_MP_RAND_PLATFORM_C	libtommath/tommath_class.h	/^#   define BN_S_MP_RAND_PLATFORM_C$/;"	d
BN_S_MP_RAND_PLATFORM_C	libtommath/tommath_superclass.h	/^#   define BN_S_MP_RAND_PLATFORM_C$/;"	d
BN_S_MP_RAND_SOURCE_C	libtommath/tommath_class.h	/^#   define BN_S_MP_RAND_SOURCE_C$/;"	d
BN_S_MP_REVERSE_C	libtommath/tommath_class.h	/^#   define BN_S_MP_REVERSE_C$/;"	d
BN_S_MP_REVERSE_C	libtommath/tommath_superclass.h	/^#   define BN_S_MP_REVERSE_C$/;"	d
BN_S_MP_SQR_C	libtommath/tommath_class.h	/^#   define BN_S_MP_SQR_C$/;"	d
BN_S_MP_SQR_FAST_C	libtommath/tommath_class.h	/^#   define BN_S_MP_SQR_FAST_C$/;"	d
BN_S_MP_SUB_C	libtommath/tommath_class.h	/^#   define BN_S_MP_SUB_C$/;"	d
BN_S_MP_TOOM_MUL_C	libtommath/tommath_class.h	/^#   define BN_S_MP_TOOM_MUL_C$/;"	d
BN_S_MP_TOOM_SQR_C	libtommath/tommath_class.h	/^#   define BN_S_MP_TOOM_SQR_C$/;"	d
BN_S_READ_ARC4RANDOM_C	libtommath/bn_s_mp_rand_platform.c	/^#define BN_S_READ_ARC4RANDOM_C$/;"	d	file:
BN_S_READ_GETRANDOM_C	libtommath/bn_s_mp_rand_platform.c	/^#define BN_S_READ_GETRANDOM_C$/;"	d	file:
BN_S_READ_LTM_RNG	libtommath/bn_s_mp_rand_platform.c	/^#define BN_S_READ_LTM_RNG$/;"	d	file:
BN_S_READ_URANDOM_C	libtommath/bn_s_mp_rand_platform.c	/^#define BN_S_READ_URANDOM_C$/;"	d	file:
BN_S_READ_WINCSP_C	libtommath/bn_s_mp_rand_platform.c	/^#define BN_S_READ_WINCSP_C$/;"	d	file:
BN_TCL_H_	generic/tclTomMath.h	/^#define BN_TCL_H_$/;"	d
BODY	compat/zlib/examples/gzlog.c	/^#define BODY /;"	d	file:
BODY	generic/tclCompile.h	/^#define BODY(/;"	d
BODY_OFFSET	generic/tclCkalloc.c	/^#define BODY_OFFSET /;"	d	file:
BOOLEAN	generic/tclCompExpr.c	/^#define BOOLEAN	/;"	d	file:
BRACED	generic/tclCompExpr.c	/^#define BRACED	/;"	d	file:
BSET	generic/regguts.h	/^#define	BSET(/;"	d
BSearch	library/clockclassic.tcl	/^proc BSearch { list key } {$/;"	p
BUFFER_PADDING	generic/tclIO.h	/^#define BUFFER_PADDING	/;"	d
BUFFER_SIZE_LIMIT	generic/tclZlib.c	/^#define BUFFER_SIZE_LIMIT	/;"	d	file:
BUFLEN	compat/zlib/test/minigzip.c	/^#define BUFLEN /;"	d	file:
BUFREADCOMMENT	compat/zlib/contrib/minizip/unzip.c	/^#define BUFREADCOMMENT /;"	d	file:
BUFREADCOMMENT	compat/zlib/contrib/minizip/zip.c	/^#define BUFREADCOMMENT /;"	d	file:
BUF_ERROR	compat/zlib/contrib/ada/zlib.adb	/^       BUF_ERROR,$/;"	l	type:Return_Code_Enum	file:
BUGS	doc/DoWhenIdle.3	/^.SH BUGS$/;"	s	title:Tcl_DoWhenIdle
BUGS	doc/TraceVar.3	/^.SH BUGS$/;"	s	title:Tcl_TraceVar
BUILD	compat/zlib/nintendods/Makefile	/^BUILD		:=	build$/;"	m
BUILDFIXED	compat/zlib/inflate.c	/^#    define BUILDFIXED$/;"	d	file:
BUILDING_MIXINS	generic/tclOOCall.c	/^    BUILDING_MIXINS = 0x400000,$/;"	e	enum:CallChainFlags	file:
BUILD_DIR	macosx/GNUmakefile	/^BUILD_DIR		?= ${CURDIR}\/..\/..\/build$/;"	m
BUILD_DIR	unix/Makefile.in	/^BUILD_DIR		= @builddir@$/;"	m
BUILD_DIR	unix/dltest/Makefile.in	/^BUILD_DIR =		@builddir@$/;"	m
BUILD_DIR	win/Makefile.in	/^BUILD_DIR		= @builddir@$/;"	m
BUILD_DLTEST	unix/Makefile.in	/^BUILD_DLTEST		= @BUILD_DLTEST@$/;"	m
BUILD_DLTEST	unix/configure.ac	/^AC_SUBST(BUILD_DLTEST)$/;"	s
BUILD_HTML	unix/Makefile.in	/^BUILD_HTML = \\$/;"	m
BUILD_SHARED_LIBS	libtommath/CMakeLists.txt	/^option(BUILD_SHARED_LIBS "Build shared library and only the shared library if \\"ON\\", default /;"	D
BUILD_STYLE	macosx/GNUmakefile	/^BUILD_STYLE		=$/;"	m
BUILD_TARGET	macosx/GNUmakefile	/^BUILD_TARGET		:= all tcltest$/;"	m
BUILD_TCLSH	unix/tcl.m4	/^    AC_SUBST(BUILD_TCLSH)$/;"	s
BUILD_TCLSH	win/tcl.m4	/^    AC_SUBST(BUILD_TCLSH)$/;"	s
BUILD_TESTING	libtommath/CMakeLists.txt	/^option(BUILD_TESTING "" OFF)$/;"	D
BUILTIN_PACKAGE_LIST	unix/Makefile.in	/^BUILTIN_PACKAGE_LIST = cookiejar http opt msgcat registry dde tcltest platform$/;"	m
BULK_ARC_OP_USE_SORT	generic/regc_nfa.c	/^#define BULK_ARC_OP_USE_SORT(/;"	d	file:
BUSY_STATE	compat/zlib/deflate.h	/^#define BUSY_STATE /;"	d
BUSY_STATE	generic/tclIO.c	/^#define BUSY_STATE(/;"	d	file:
BYE	compat/zlib/examples/gznorm.c	/^#define BYE(/;"	d	file:
BYTBITS	generic/regguts.h	/^#define	BYTBITS	/;"	d
BYTEARRAY_MAX_LEN	generic/tclBinary.c	/^#define BYTEARRAY_MAX_LEN /;"	d	file:
BYTEARRAY_SIZE	generic/tclBinary.c	/^#define BYTEARRAY_SIZE(/;"	d	file:
BYTEBITS	compat/zlib/contrib/infback9/infback9.c	/^#define BYTEBITS(/;"	d	file:
BYTEBITS	compat/zlib/infback.c	/^#define BYTEBITS(/;"	d	file:
BYTEBITS	compat/zlib/inflate.c	/^#define BYTEBITS(/;"	d	file:
BYTMASK	generic/regguts.h	/^#define	BYTMASK	/;"	d
BYTTAB	generic/regguts.h	/^#define	BYTTAB	/;"	d
Back	compat/zlib/contrib/ada/zlib-streams.ads	/^      Back       : Stream_Access;$/;"	c	type:Stream_Type	file:
BadEnsembleSubcommand	generic/tclBasic.c	/^BadEnsembleSubcommand($/;"	f	typeref:typename:int	file:
BadEnsembleSubcommand	generic/tclBasic.c	/^static Tcl_ObjCmdProc	BadEnsembleSubcommand;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
BadSubcommand	library/safe.tcl	/^proc ::safe::BadSubcommand {child command subcommand args} {$/;"	p	namespace:::safe
BasicBlock	generic/tclAssembly.c	/^typedef struct BasicBlock {$/;"	s	file:
BasicBlock	generic/tclAssembly.c	/^} BasicBlock;$/;"	t	typeref:struct:BasicBlock	file:
BasicBlockCatchState	generic/tclAssembly.c	/^typedef enum BasicBlockCatchState {$/;"	g	file:
BasicBlockCatchState	generic/tclAssembly.c	/^} BasicBlockCatchState;$/;"	t	typeref:enum:BasicBlockCatchState	file:
BasicBlockFlags	generic/tclAssembly.c	/^enum BasicBlockFlags {$/;"	g	file:
BeginCountPerfCounter	compat/zlib/contrib/testzlib/testzlib.c	/^void BeginCountPerfCounter(LARGE_INTEGER * pbeginTime64,BOOL fComputeTimeQueryPerf)$/;"	f	typeref:typename:void
BeginCountRdtsc	compat/zlib/contrib/testzlib/testzlib.c	/^void BeginCountRdtsc(LARGE_INTEGER * pbeginTime64)$/;"	f	typeref:typename:void
Best	compat/zlib/contrib/dotzlib/DotZLib/DotZLib.cs	/^        Best = 9,$/;"	e	enum:DotZLib.CompressLevel	file:
Best_Compression	compat/zlib/contrib/ada/zlib.ads	/^   Best_Compression    : constant Compression_Level := 9;$/;"	n	packspec:ZLib
Best_Speed	compat/zlib/contrib/ada/zlib.ads	/^   Best_Speed          : constant Compression_Level := 1;$/;"	n	packspec:ZLib
BetterLog10	generic/tclStrToD.c	/^BetterLog10($/;"	f	typeref:typename:int	file:
BgError	generic/tclEvent.c	/^typedef struct BgError {$/;"	s	file:
BgError	generic/tclEvent.c	/^} BgError;$/;"	t	typeref:struct:BgError	file:
BgErrorDeleteProc	generic/tclEvent.c	/^BgErrorDeleteProc($/;"	f	typeref:typename:void	file:
BignumToBiasedFrExp	generic/tclStrToD.c	/^BignumToBiasedFrExp($/;"	f	typeref:typename:double	file:
BinaryDecode64	generic/tclBinary.c	/^BinaryDecode64($/;"	f	typeref:typename:int	file:
BinaryDecode64	generic/tclBinary.c	/^static Tcl_ObjCmdProc	BinaryDecode64;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
BinaryDecodeHex	generic/tclBinary.c	/^BinaryDecodeHex($/;"	f	typeref:typename:int	file:
BinaryDecodeHex	generic/tclBinary.c	/^static Tcl_ObjCmdProc	BinaryDecodeHex;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
BinaryDecodeUu	generic/tclBinary.c	/^BinaryDecodeUu($/;"	f	typeref:typename:int	file:
BinaryDecodeUu	generic/tclBinary.c	/^static Tcl_ObjCmdProc	BinaryDecodeUu;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
BinaryEncode64	generic/tclBinary.c	/^BinaryEncode64($/;"	f	typeref:typename:int	file:
BinaryEncode64	generic/tclBinary.c	/^static Tcl_ObjCmdProc	BinaryEncode64;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
BinaryEncodeHex	generic/tclBinary.c	/^BinaryEncodeHex($/;"	f	typeref:typename:int	file:
BinaryEncodeHex	generic/tclBinary.c	/^static Tcl_ObjCmdProc	BinaryEncodeHex;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
BinaryEncodeUu	generic/tclBinary.c	/^BinaryEncodeUu($/;"	f	typeref:typename:int	file:
BinaryEncodeUu	generic/tclBinary.c	/^static Tcl_ObjCmdProc	BinaryEncodeUu;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
BinaryFormatCmd	generic/tclBinary.c	/^BinaryFormatCmd($/;"	f	typeref:typename:int	file:
BinaryFormatCmd	generic/tclBinary.c	/^static Tcl_ObjCmdProc	BinaryFormatCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
BinaryProc	generic/tclEncoding.c	/^BinaryProc($/;"	f	typeref:typename:int	file:
BinaryProc	generic/tclEncoding.c	/^static Tcl_EncodingConvertProc	BinaryProc;$/;"	v	typeref:typename:Tcl_EncodingConvertProc	file:
BinaryScanCmd	generic/tclBinary.c	/^BinaryScanCmd($/;"	f	typeref:typename:int	file:
BinaryScanCmd	generic/tclBinary.c	/^static Tcl_ObjCmdProc	BinaryScanCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
Block	compat/zlib/contrib/dotzlib/DotZLib/DotZLib.cs	/^        None,  Partial,  Sync,  Full,  Finish,  Block$/;"	e	enum:DotZLib.FlushTypes	file:
Block	generic/tclThreadAlloc.c	/^typedef union Block {$/;"	u	file:
Block	generic/tclThreadAlloc.c	/^} Block;$/;"	t	typeref:union:Block	file:
Block2Ptr	generic/tclThreadAlloc.c	/^Block2Ptr($/;"	f	typeref:typename:void *	file:
BlockPutGet	compat/zlib/contrib/dotzlib/DotZLib/UnitTests.cs	/^        public void BlockPutGet()$/;"	m	class:DotZLibTests.CircBufferTests
Block_Flush	compat/zlib/contrib/ada/zlib.ads	/^   Block_Flush   : constant Flush_Mode := 5;$/;"	n	packspec:ZLib	file:
Block_Flush	compat/zlib/contrib/ada/zlib.ads	/^   Block_Flush   : constant Flush_Mode;$/;"	n	packspec:ZLib
Block_Size	compat/zlib/contrib/ada/buffer_demo.adb	/^         Block_Size : constant := 4;$/;"	n	identifier:Decompress	file:
BogusCreate	generic/tclHash.c	/^BogusCreate($/;"	f	typeref:typename:Tcl_HashEntry *	file:
BogusFind	generic/tclHash.c	/^BogusFind($/;"	f	typeref:typename:Tcl_HashEntry *	file:
BroadcastIdx	win/tclWinReg.c	/^	BroadcastIdx, DeleteIdx, GetIdx, KeysIdx, SetIdx, TypeIdx, ValuesIdx$/;"	e	enum:RegistryObjCmd::SubCmdIdx	file:
BroadcastValue	win/tclWinReg.c	/^BroadcastValue($/;"	f	typeref:typename:int	file:
Bucket	generic/tclThreadAlloc.c	/^} Bucket;$/;"	t	typeref:struct:__anone59fb5e80408	file:
Buf_size	compat/zlib/deflate.h	/^#define Buf_size /;"	d
Buff_Diff	compat/zlib/contrib/ada/mtest.adb	/^         Buff_Diff   : Stream_Element_Offset := Buffer'Last - Buffer_First;$/;"	v	subprogram:Read_Buffer	file:
Buffer	compat/zlib/contrib/ada/mtest.adb	/^      Buffer : Stream_Element_Array (1 .. 100_000);$/;"	v	task:Test_Task	file:
Buffer	compat/zlib/contrib/ada/read.adb	/^               Buffer : Stream_Element_Array (1 .. 1024);$/;"	v	anon:declare	file:
Buffer	compat/zlib/contrib/ada/test.adb	/^      Buffer : Stream_Element_Array (1 .. Buffer_Size);$/;"	v	subprogram:Copy_Streams	file:
Buffer	compat/zlib/contrib/ada/test.adb	/^      Buffer : Stream_Element_Array := (1 .. 77 => 16#20#) & 10;$/;"	v	subprogram:Generate_File	file:
Buffer	compat/zlib/contrib/ada/zlib-streams.adb	/^      Buffer : Stream_Element_Array (1 .. Stream.Buffer_Size);$/;"	v	subprogram:Flush	file:
Buffer	compat/zlib/contrib/ada/zlib-streams.ads	/^      Buffer     : Buffer_Access;$/;"	c	type:Stream_Type	file:
Buffer	compat/zlib/contrib/ada/zlib.adb	/^      Buffer   : Stream_Element_Array (1 .. Buffer_Size);$/;"	v	subprogram:Write	file:
Buffer_Access	compat/zlib/contrib/ada/zlib-streams.ads	/^   type Buffer_Access is access all Stream_Element_Array;$/;"	t	packspec:ZLib.Streams	file:
Buffer_Count	compat/zlib/contrib/ada/test.adb	/^      Buffer_Count : constant Count := File_Size \/ Buffer'Length;$/;"	n	subprogram:Generate_File	file:
Buffer_Demo	compat/zlib/contrib/ada/buffer_demo.adb	/^procedure Buffer_Demo is$/;"	r
Buffer_First	compat/zlib/contrib/ada/mtest.adb	/^      Buffer_First  : Stream_Element_Offset;$/;"	v	task:Test_Task	file:
Buffer_Size	compat/zlib/contrib/ada/zlib-streams.ads	/^      Buffer_Size : Stream_Element_Offset;$/;"	c	type:Stream_Type	file:
Buffer_Subtype	compat/zlib/contrib/ada/zlib-streams.adb	/^      subtype Buffer_Subtype is Stream_Element_Array (1 .. Read_Buffer_Size);$/;"	u	subprogram:Create	file:
Build Status	libtommath/README.md	/^## Build Status$/;"	s	chapter:libtommath
BuildCharSet	generic/tclScan.c	/^BuildCharSet($/;"	f	typeref:typename:const char *	file:
BuildCmdLineBypassBS	win/tclWinPipe.c	/^BuildCmdLineBypassBS($/;"	f	typeref:typename:const char *	file:
BuildCommandLine	win/tclWinPipe.c	/^BuildCommandLine($/;"	f	typeref:typename:void	file:
BuildEnsembleConfig	generic/tclEnsemble.c	/^BuildEnsembleConfig($/;"	f	typeref:typename:void	file:
BuildExceptionRanges	generic/tclAssembly.c	/^BuildExceptionRanges($/;"	f	typeref:typename:int	file:
BuildProcessStatusObj	generic/tclProcess.c	/^BuildProcessStatusObj($/;"	f	typeref:typename:Tcl_Obj *
BuildPropertyList	generic/tclOODefineCmds.c	/^BuildPropertyList($/;"	f	typeref:typename:int	file:
Building and Installing	libtommath/README.md	/^## Building and Installing$/;"	s	chapter:libtommath
Buildroot	unix/tcl.spec	/^Buildroot:     \/var\/tmp\/%{name}%{version}$/;"	t
BuiltinBinaryFunc	generic/tclBasic.c	/^typedef double (BuiltinBinaryFunc)(double x, double y);$/;"	t	typeref:typename:double ()(double x,double y)	file:
BuiltinFuncDef	generic/tclBasic.c	/^} BuiltinFuncDef;$/;"	t	typeref:struct:__anon6e1456070408	file:
BuiltinFuncTable	generic/tclBasic.c	/^static const BuiltinFuncDef BuiltinFuncTable[] = {$/;"	v	typeref:typename:const BuiltinFuncDef[]	file:
BuiltinUnaryFunc	generic/tclBasic.c	/^typedef double (BuiltinUnaryFunc)(double x);$/;"	t	typeref:typename:double ()(double x)	file:
BumpCmdRefEpochs	generic/tclResolve.c	/^BumpCmdRefEpochs($/;"	f	typeref:typename:void	file:
BumpEpochIfNecessary	generic/tclEnsemble.c	/^BumpEpochIfNecessary($/;"	f	typeref:typename:void	file:
BumpGlobalEpoch	generic/tclOODefineCmds.c	/^BumpGlobalEpoch($/;"	f	typeref:typename:void	file:
BumpInstanceEpoch	generic/tclOODefineCmds.c	/^BumpInstanceEpoch($/;"	f	typeref:typename:void	file:
BumpUp	generic/tclStrToD.c	/^BumpUp($/;"	f	typeref:typename:char *	file:
Byte	compat/zlib/zconf.h	/^#  define Byte                  z_Byte$/;"	d
Byte	compat/zlib/zconf.h	/^typedef unsigned char  Byte;  \/* 8 bits *\/$/;"	t	typeref:typename:unsigned char
Byte	compat/zlib/zconf.h.in	/^#  define Byte                  z_Byte$/;"	d	file:
Byte	compat/zlib/zconf.h.in	/^typedef unsigned char  Byte;  \/* 8 bits *\/$/;"	t	typeref:typename:unsigned char	file:
ByteArray	generic/tclBinary.c	/^} ByteArray;$/;"	t	typeref:struct:__anon8c3fe00a0108	file:
ByteCode	generic/tclCompile.h	/^typedef struct ByteCode {$/;"	s
ByteCode	generic/tclCompile.h	/^} ByteCode;$/;"	t	typeref:struct:ByteCode
ByteCodeGetInternalRep	generic/tclCompile.h	/^#define ByteCodeGetInternalRep(/;"	d
ByteCodeSetInternalRep	generic/tclCompile.h	/^#define ByteCodeSetInternalRep(/;"	d
ByteCodeStats	generic/tclInt.h	/^typedef struct ByteCodeStats {$/;"	s
ByteCodeStats	generic/tclInt.h	/^} ByteCodeStats;$/;"	t	typeref:struct:ByteCodeStats
BytecodeMightThrow	generic/tclAssembly.c	/^BytecodeMightThrow($/;"	f	typeref:typename:int	file:
Bytef	compat/zlib/zconf.h	/^   typedef Byte  FAR Bytef;$/;"	t	typeref:typename:Byte FAR
Bytef	compat/zlib/zconf.h	/^#  define Bytef                 z_Bytef$/;"	d
Bytef	compat/zlib/zconf.h	/^#  define Bytef /;"	d
Bytef	compat/zlib/zconf.h.in	/^   typedef Byte  FAR Bytef;$/;"	t	typeref:typename:Byte FAR	file:
Bytef	compat/zlib/zconf.h.in	/^#  define Bytef                 z_Bytef$/;"	d	file:
Bytef	compat/zlib/zconf.h.in	/^#  define Bytef /;"	d	file:
BytesLeft	generic/tclIO.c	/^#define BytesLeft(/;"	d	file:
C89	libtommath/CMakeLists.txt	/^set(C89 False CACHE BOOL "(Usually maintained automatically) Enable when the library is in c89 m/;"	v
CA	generic/regc_nfa.c	/^#define CA(/;"	d	file:
CACHE_STACK_INFO	generic/tclExecute.c	/^#define CACHE_STACK_INFO(/;"	d	file:
CALLBACK TIMING	doc/TraceVar.3	/^.SH "CALLBACK TIMING"$/;"	s	title:Tcl_TraceVar
CALLING COMMANDS DURING TRACES	doc/TraceCmd.3	/^.SH "CALLING COMMANDS DURING TRACES"$/;"	s	title:Tcl_TraceCommand
CALL_CHAIN_STATIC_SIZE	generic/tclOOInt.h	/^#define CALL_CHAIN_STATIC_SIZE /;"	d
CANCELED	generic/tclInt.h	/^#define CANCELED	/;"	d
CANCEL_REQUESTED	generic/regc_nfa.c	/^#define CANCEL_REQUESTED(/;"	d	file:
CANNOTCALL	generic/tclStubCall.c	/^static const char CANNOTCALL[] = "Cannot call %s from stubbed extension\\n";$/;"	v	typeref:typename:const char[]	file:
CANNOTFIND	generic/tclStubCall.c	/^static const char CANNOTFIND[] = "Cannot find %s: %s\\n";$/;"	v	typeref:typename:const char[]	file:
CAP	generic/regguts.h	/^#define	CAP	/;"	d
CASESENSITIVITY	compat/zlib/contrib/minizip/miniunz.c	/^#define CASESENSITIVITY /;"	d	file:
CASESENSITIVITYDEFAULTVALUE	compat/zlib/contrib/minizip/unzip.c	/^#define CASESENSITIVITYDEFAULTVALUE /;"	d	file:
CASESENSITIVITYDEFAULT_NO	compat/zlib/contrib/minizip/unzip.c	/^#    define CASESENSITIVITYDEFAULT_NO$/;"	d	file:
CAT32	win/Makefile.in	/^CAT32			= cat32$(EXEEXT)$/;"	m
CATCH_EXCEPTION_RANGE	generic/tclCompile.h	/^    CATCH_EXCEPTION_RANGE	\/* Exception's range is controlled by a catch$/;"	e	enum:__anone79d5a530103
CBF_FAIL_POKES	win/tclWinDde.c	/^#   define CBF_FAIL_POKES /;"	d	file:
CC	compat/zlib/Makefile.in	/^CC=cc$/;"	m
CC	compat/zlib/contrib/delphi/zlibd32.mak	/^CC = bcc32$/;"	m
CC	compat/zlib/contrib/minizip/Makefile	/^CC?=cc$/;"	m
CC	compat/zlib/contrib/pascal/zlibd32.mak	/^CC = bcc32$/;"	m
CC	compat/zlib/contrib/untgz/Makefile	/^CC=cc$/;"	m
CC	compat/zlib/watcom/watcom_f.mak	/^CC       = wcc386$/;"	m
CC	compat/zlib/watcom/watcom_l.mak	/^CC       = wcc$/;"	m
CC	unix/Makefile.in	/^CC			= @CC@$/;"	m
CC	unix/dltest/Makefile.in	/^CC = @CC@$/;"	m
CC	win/Makefile.in	/^CC		= @CC@$/;"	m
CCLASS	generic/regcomp.c	/^#define	CCLASS	/;"	d	file:
CC_ALNUM	generic/regc_locale.c	/^	CC_ALNUM, CC_ALPHA, CC_ASCII, CC_BLANK, CC_CNTRL, CC_DIGIT, CC_GRAPH,$/;"	e	enum:cclass::classes	file:
CC_ALPHA	generic/regc_locale.c	/^	CC_ALNUM, CC_ALPHA, CC_ASCII, CC_BLANK, CC_CNTRL, CC_DIGIT, CC_GRAPH,$/;"	e	enum:cclass::classes	file:
CC_ASCII	generic/regc_locale.c	/^	CC_ALNUM, CC_ALPHA, CC_ASCII, CC_BLANK, CC_CNTRL, CC_DIGIT, CC_GRAPH,$/;"	e	enum:cclass::classes	file:
CC_BLANK	generic/regc_locale.c	/^	CC_ALNUM, CC_ALPHA, CC_ASCII, CC_BLANK, CC_CNTRL, CC_DIGIT, CC_GRAPH,$/;"	e	enum:cclass::classes	file:
CC_CNTRL	generic/regc_locale.c	/^	CC_ALNUM, CC_ALPHA, CC_ASCII, CC_BLANK, CC_CNTRL, CC_DIGIT, CC_GRAPH,$/;"	e	enum:cclass::classes	file:
CC_DIGIT	generic/regc_locale.c	/^	CC_ALNUM, CC_ALPHA, CC_ASCII, CC_BLANK, CC_CNTRL, CC_DIGIT, CC_GRAPH,$/;"	e	enum:cclass::classes	file:
CC_EXENAME	win/Makefile.in	/^CC_EXENAME = @CC_EXENAME@$/;"	m
CC_EXENAME	win/configure.ac	/^AC_SUBST(CC_EXENAME)$/;"	s
CC_FOR_BUILD	unix/tcl.m4	/^    AC_SUBST(CC_FOR_BUILD)$/;"	s
CC_FOR_BUILD	win/tcl.m4	/^AC_SUBST(CC_FOR_BUILD)$/;"	s
CC_GRAPH	generic/regc_locale.c	/^	CC_ALNUM, CC_ALPHA, CC_ASCII, CC_BLANK, CC_CNTRL, CC_DIGIT, CC_GRAPH,$/;"	e	enum:cclass::classes	file:
CC_LOWER	generic/regc_locale.c	/^	CC_LOWER, CC_PRINT, CC_PUNCT, CC_SPACE, CC_UPPER, CC_XDIGIT$/;"	e	enum:cclass::classes	file:
CC_NULL	generic/regc_locale.c	/^	CC_NULL = -1,$/;"	e	enum:cclass::classes	file:
CC_OBJNAME	win/Makefile.in	/^CC_OBJNAME = @CC_OBJNAME@$/;"	m
CC_OBJNAME	win/configure.ac	/^AC_SUBST(CC_OBJNAME)$/;"	s
CC_PRINT	generic/regc_locale.c	/^	CC_LOWER, CC_PRINT, CC_PUNCT, CC_SPACE, CC_UPPER, CC_XDIGIT$/;"	e	enum:cclass::classes	file:
CC_PUNCT	generic/regc_locale.c	/^	CC_LOWER, CC_PRINT, CC_PUNCT, CC_SPACE, CC_UPPER, CC_XDIGIT$/;"	e	enum:cclass::classes	file:
CC_SEARCH_FLAGS	unix/Makefile.in	/^CC_SEARCH_FLAGS	= @CC_SEARCH_FLAGS@$/;"	m
CC_SEARCH_FLAGS	unix/tcl.m4	/^    AC_SUBST(CC_SEARCH_FLAGS)$/;"	s
CC_SPACE	generic/regc_locale.c	/^	CC_LOWER, CC_PRINT, CC_PUNCT, CC_SPACE, CC_UPPER, CC_XDIGIT$/;"	e	enum:cclass::classes	file:
CC_SWITCHES	unix/Makefile.in	/^CC_SWITCHES = $(STUB_CC_SWITCHES) -DBUILD_tcl$/;"	m
CC_SWITCHES	unix/dltest/Makefile.in	/^CC_SWITCHES = $(CFLAGS) -I${SRC_DIR}\/..\/..\/generic \\$/;"	m
CC_SWITCHES	win/Makefile.in	/^CC_SWITCHES = -I"${BUILD_DIR}" -I"${GENERIC_DIR_NATIVE}" -I"${TOMMATH_DIR_NATIVE}" \\$/;"	m
CC_UPPER	generic/regc_locale.c	/^	CC_LOWER, CC_PRINT, CC_PUNCT, CC_SPACE, CC_UPPER, CC_XDIGIT$/;"	e	enum:cclass::classes	file:
CC_XDIGIT	generic/regc_locale.c	/^	CC_LOWER, CC_PRINT, CC_PUNCT, CC_SPACE, CC_UPPER, CC_XDIGIT$/;"	e	enum:cclass::classes	file:
CCheck	compat/zlib/contrib/delphi/ZLib.pas	/^function CCheck(code: Integer): Integer;$/;"	f	typeref:typename:Integer
CDEND	generic/regguts.h	/^#define	CDEND(/;"	d
CDataAvail	compat/zlib/contrib/dotzlib/DotZLib/UnitTests.cs	/^        public void CDataAvail(byte[] data, int startIndex, int count)$/;"	m	class:DotZLibTests.DeflateInflateTests
CENTRALDIRINVALID	compat/zlib/contrib/minizip/unzip.c	/^#define CENTRALDIRINVALID /;"	d	file:
CENTRALHEADERMAGIC	compat/zlib/contrib/minizip/zip.c	/^#define CENTRALHEADERMAGIC /;"	d	file:
CENTRAL_COMMENTLEN	generic/tclZipfs.c	/^    CENTRAL_COMMENTLEN = 20,	\/\/ ZipCentral.commentLength$/;"	e	enum:ZipCentralSignatureOffsets	file:
CENTRAL_COMPLEN	generic/tclZipfs.c	/^    CENTRAL_COMPLEN = 20,	\/\/ CentralHeader.compressedLength$/;"	e	enum:ZipCentralHeaderOffsets	file:
CENTRAL_COMPMETH	generic/tclZipfs.c	/^    CENTRAL_COMPMETH = 10,	\/\/ CentralHeader.compressionMethod$/;"	e	enum:ZipCentralHeaderOffsets	file:
CENTRAL_CRC32	generic/tclZipfs.c	/^    CENTRAL_CRC32 = 16,		\/\/ CentralHeader.crc32$/;"	e	enum:ZipCentralHeaderOffsets	file:
CENTRAL_DIRSIZE	generic/tclZipfs.c	/^    CENTRAL_DIRSIZE = 12,	\/\/ ZipCentral.directorySize$/;"	e	enum:ZipCentralSignatureOffsets	file:
CENTRAL_DIRSTART	generic/tclZipfs.c	/^    CENTRAL_DIRSTART = 16,	\/\/ ZipCentral.directoryStart$/;"	e	enum:ZipCentralSignatureOffsets	file:
CENTRAL_DISKDIR	generic/tclZipfs.c	/^    CENTRAL_DISKDIR = 6,	\/\/ ZipCentral.diskDirectory$/;"	e	enum:ZipCentralSignatureOffsets	file:
CENTRAL_DISKFILE	generic/tclZipfs.c	/^    CENTRAL_DISKFILE = 34,	\/\/ CentralHeader.diskFile$/;"	e	enum:ZipCentralHeaderOffsets	file:
CENTRAL_DISKNO	generic/tclZipfs.c	/^    CENTRAL_DISKNO = 4,		\/\/ ZipCentral.diskNumber$/;"	e	enum:ZipCentralSignatureOffsets	file:
CENTRAL_EATTR	generic/tclZipfs.c	/^    CENTRAL_EATTR = 38,		\/\/ CentralHeader.externalAttributes$/;"	e	enum:ZipCentralHeaderOffsets	file:
CENTRAL_END_LEN	generic/tclZipfs.c	/^    CENTRAL_END_LEN = 22	\/\/ sizeof(ZipCentral)$/;"	e	enum:ZipCentralSignatureOffsets	file:
CENTRAL_END_SIG	generic/tclZipfs.c	/^    CENTRAL_END_SIG = 0,	\/\/ ZipCentral.endSignature$/;"	e	enum:ZipCentralSignatureOffsets	file:
CENTRAL_ENTS	generic/tclZipfs.c	/^    CENTRAL_ENTS = 8,		\/\/ ZipCentral.diskEntries$/;"	e	enum:ZipCentralSignatureOffsets	file:
CENTRAL_EXTRALEN	generic/tclZipfs.c	/^    CENTRAL_EXTRALEN = 30,	\/\/ CentralHeader.extraDataLength$/;"	e	enum:ZipCentralHeaderOffsets	file:
CENTRAL_FCOMMENTLEN	generic/tclZipfs.c	/^    CENTRAL_FCOMMENTLEN = 32,	\/\/ CentralHeader.commentLength$/;"	e	enum:ZipCentralHeaderOffsets	file:
CENTRAL_FLAGS	generic/tclZipfs.c	/^    CENTRAL_FLAGS = 8,		\/\/ CentralHeader.flags$/;"	e	enum:ZipCentralHeaderOffsets	file:
CENTRAL_HEADER_LEN	generic/tclZipfs.c	/^    CENTRAL_HEADER_LEN = 46	\/\/ sizeof(CentralHeader)$/;"	e	enum:ZipCentralHeaderOffsets	file:
CENTRAL_IATTR	generic/tclZipfs.c	/^    CENTRAL_IATTR = 36,		\/\/ CentralHeader.interalAttributes$/;"	e	enum:ZipCentralHeaderOffsets	file:
CENTRAL_LOCALHDR	generic/tclZipfs.c	/^    CENTRAL_LOCALHDR = 42,	\/\/ CentralHeader.localHeader$/;"	e	enum:ZipCentralHeaderOffsets	file:
CENTRAL_MDATE	generic/tclZipfs.c	/^    CENTRAL_MDATE = 14,		\/\/ CentralHeader.modifiedDate$/;"	e	enum:ZipCentralHeaderOffsets	file:
CENTRAL_MTIME	generic/tclZipfs.c	/^    CENTRAL_MTIME = 12,		\/\/ CentralHeader.modifiedTime$/;"	e	enum:ZipCentralHeaderOffsets	file:
CENTRAL_PATHLEN	generic/tclZipfs.c	/^    CENTRAL_PATHLEN = 28,	\/\/ CentralHeader.pathLength$/;"	e	enum:ZipCentralHeaderOffsets	file:
CENTRAL_SIG	generic/tclZipfs.c	/^    CENTRAL_SIG = 0,		\/\/ CentralHeader.signature$/;"	e	enum:ZipCentralHeaderOffsets	file:
CENTRAL_TOTALENTS	generic/tclZipfs.c	/^    CENTRAL_TOTALENTS = 10,	\/\/ ZipCentral.totalEntries$/;"	e	enum:ZipCentralSignatureOffsets	file:
CENTRAL_UNCOMPLEN	generic/tclZipfs.c	/^    CENTRAL_UNCOMPLEN = 24,	\/\/ CentralHeader.uncompressedLength$/;"	e	enum:ZipCentralHeaderOffsets	file:
CENTRAL_VERSION	generic/tclZipfs.c	/^    CENTRAL_VERSION = 6,	\/\/ CentralHeader.version$/;"	e	enum:ZipCentralHeaderOffsets	file:
CENTRAL_VERSIONMADE	generic/tclZipfs.c	/^    CENTRAL_VERSIONMADE = 4,	\/\/ CentralHeader.versionMade$/;"	e	enum:ZipCentralHeaderOffsets	file:
CERR	generic/regc_color.c	/^#define	CERR(/;"	d	file:
CFBundleDevelopmentRegion	macosx/Tcl-Info.plist.in	/^	<key>CFBundleDevelopmentRegion<\/key>$/;"	k
CFBundleDevelopmentRegion	macosx/Tclsh-Info.plist.in	/^	<key>CFBundleDevelopmentRegion<\/key>$/;"	k
CFBundleExecutable	macosx/Tcl-Info.plist.in	/^	<key>CFBundleExecutable<\/key>$/;"	k
CFBundleExecutable	macosx/Tclsh-Info.plist.in	/^	<key>CFBundleExecutable<\/key>$/;"	k
CFBundleGetInfoString	macosx/Tcl-Info.plist.in	/^	<key>CFBundleGetInfoString<\/key>$/;"	k
CFBundleGetInfoString	macosx/Tclsh-Info.plist.in	/^	<key>CFBundleGetInfoString<\/key>$/;"	k
CFBundleIdentifier	macosx/Tcl-Info.plist.in	/^	<key>CFBundleIdentifier<\/key>$/;"	k
CFBundleIdentifier	macosx/Tclsh-Info.plist.in	/^	<key>CFBundleIdentifier<\/key>$/;"	k
CFBundleInfoDictionaryVersion	macosx/Tcl-Info.plist.in	/^	<key>CFBundleInfoDictionaryVersion<\/key>$/;"	k
CFBundleInfoDictionaryVersion	macosx/Tclsh-Info.plist.in	/^	<key>CFBundleInfoDictionaryVersion<\/key>$/;"	k
CFBundleName	macosx/Tcl-Info.plist.in	/^	<key>CFBundleName<\/key>$/;"	k
CFBundleName	macosx/Tclsh-Info.plist.in	/^	<key>CFBundleName<\/key>$/;"	k
CFBundlePackageType	macosx/Tcl-Info.plist.in	/^	<key>CFBundlePackageType<\/key>$/;"	k
CFBundlePackageType	macosx/Tclsh-Info.plist.in	/^	<key>CFBundlePackageType<\/key>$/;"	k
CFBundleShortVersionString	macosx/Tcl-Info.plist.in	/^	<key>CFBundleShortVersionString<\/key>$/;"	k
CFBundleShortVersionString	macosx/Tclsh-Info.plist.in	/^	<key>CFBundleShortVersionString<\/key>$/;"	k
CFBundleSignature	macosx/Tcl-Info.plist.in	/^	<key>CFBundleSignature<\/key>$/;"	k
CFBundleSignature	macosx/Tclsh-Info.plist.in	/^	<key>CFBundleSignature<\/key>$/;"	k
CFBundleVersion	macosx/Tcl-Info.plist.in	/^	<key>CFBundleVersion<\/key>$/;"	k
CFBundleVersion	macosx/Tclsh-Info.plist.in	/^	<key>CFBundleVersion<\/key>$/;"	k
CFG_64	generic/tclPkgConfig.c	/^#  define CFG_64	/;"	d	file:
CFG_COMPILE_DEBUG	generic/tclPkgConfig.c	/^#  define CFG_COMPILE_DEBUG	/;"	d	file:
CFG_COMPILE_STATS	generic/tclPkgConfig.c	/^#  define CFG_COMPILE_STATS	/;"	d	file:
CFG_DEBUG	generic/tclPkgConfig.c	/^#  define CFG_DEBUG	/;"	d	file:
CFG_GET	generic/tclConfig.c	/^	CFG_GET, CFG_LIST$/;"	e	enum:QueryConfigObjCmd::subcmds	file:
CFG_LIST	generic/tclConfig.c	/^	CFG_GET, CFG_LIST$/;"	e	enum:QueryConfigObjCmd::subcmds	file:
CFG_MEMDEBUG	generic/tclPkgConfig.c	/^#  define CFG_MEMDEBUG	/;"	d	file:
CFG_OPTIMIZED	generic/tclPkgConfig.c	/^#  define CFG_OPTIMIZED	/;"	d	file:
CFG_PROFILED	generic/tclPkgConfig.c	/^#  define CFG_PROFILED	/;"	d	file:
CFG_TCL_SHARED_LIB_SUFFIX	unix/configure.ac	/^AC_SUBST(CFG_TCL_SHARED_LIB_SUFFIX)$/;"	s
CFG_TCL_SHARED_LIB_SUFFIX	win/configure.ac	/^AC_SUBST(CFG_TCL_SHARED_LIB_SUFFIX)$/;"	s
CFG_TCL_UNSHARED_LIB_SUFFIX	unix/configure.ac	/^AC_SUBST(CFG_TCL_UNSHARED_LIB_SUFFIX)$/;"	s
CFG_TCL_UNSHARED_LIB_SUFFIX	win/configure.ac	/^AC_SUBST(CFG_TCL_UNSHARED_LIB_SUFFIX)$/;"	s
CFG_THREADED	generic/tclPkgConfig.c	/^#  define  CFG_THREADED	/;"	d	file:
CFILES	compat/zlib/nintendods/Makefile	/^CFILES		:=	$(foreach dir,$(SOURCES),$(notdir $(wildcard $(dir)\/*.c)))$/;"	m
CFLAGS	compat/zlib/Makefile.in	/^CFLAGS=-O$/;"	m
CFLAGS	compat/zlib/contrib/delphi/zlibd32.mak	/^CFLAGS = -a -d -k- -O2 $(LOC)$/;"	m
CFLAGS	compat/zlib/contrib/minizip/Makefile	/^CFLAGS := $(CFLAGS) -O -I..\/..$/;"	m
CFLAGS	compat/zlib/contrib/pascal/zlibd32.mak	/^CFLAGS = -a -d -k- -O2 $(LOC)$/;"	m
CFLAGS	compat/zlib/contrib/puff/Makefile	/^CFLAGS=-O$/;"	m
CFLAGS	compat/zlib/contrib/untgz/Makefile	/^CFLAGS=-g$/;"	m
CFLAGS	compat/zlib/nintendods/Makefile	/^CFLAGS	:=	-Wall -O2\\$/;"	m
CFLAGS	compat/zlib/watcom/watcom_f.mak	/^CFLAGS   = -zq -mf -3r -fp3 -s -bt=dos -oilrtfm -fr=nul -wx$/;"	m
CFLAGS	compat/zlib/watcom/watcom_l.mak	/^CFLAGS   = -zq -ml -s -bt=dos -oilrtfm -fr=nul -wx$/;"	m
CFLAGS	unix/Makefile.in	/^CFLAGS			= @CFLAGS_DEFAULT@ @CFLAGS@$/;"	m
CFLAGS	unix/dltest/Makefile.in	/^CFLAGS			= @CFLAGS_DEFAULT@ @CFLAGS@ -Wall -Wextra -Wc++-compat -Wconversion -Werror$/;"	m
CFLAGS	unix/tcl.m4	/^    AC_SUBST(CFLAGS)$/;"	s
CFLAGS	win/Makefile.in	/^CFLAGS =		@CFLAGS@ @CFLAGS_DEFAULT@ -DMP_FIXED_CUTOFFS -D__USE_MINGW_ANSI_STDIO=0$/;"	m
CFLAGS_DEBUG	unix/Makefile.in	/^CFLAGS_DEBUG		= @CFLAGS_DEBUG@$/;"	m
CFLAGS_DEBUG	unix/dltest/Makefile.in	/^CFLAGS_DEBUG		= @CFLAGS_DEBUG@$/;"	m
CFLAGS_DEBUG	unix/tcl.m4	/^    AC_SUBST(CFLAGS_DEBUG)$/;"	s
CFLAGS_DEBUG	win/Makefile.in	/^CFLAGS_DEBUG    = @CFLAGS_DEBUG@$/;"	m
CFLAGS_DEBUG	win/tcl.m4	/^    AC_SUBST(CFLAGS_DEBUG)$/;"	s
CFLAGS_DEFAULT	unix/tcl.m4	/^    AC_SUBST(CFLAGS_DEFAULT)$/;"	s
CFLAGS_DEFAULT	win/configure.ac	/^AC_SUBST(CFLAGS_DEFAULT)$/;"	s
CFLAGS_DEFAULT	win/tcl.m4	/^    AC_SUBST(CFLAGS_DEFAULT)$/;"	s
CFLAGS_NOLTO	unix/tcl.m4	/^    AC_SUBST(CFLAGS_NOLTO)$/;"	s
CFLAGS_NOLTO	win/tcl.m4	/^    AC_SUBST(CFLAGS_NOLTO)$/;"	s
CFLAGS_OPTIMIZE	unix/Makefile.in	/^CFLAGS_OPTIMIZE		= @CFLAGS_OPTIMIZE@$/;"	m
CFLAGS_OPTIMIZE	unix/dltest/Makefile.in	/^CFLAGS_OPTIMIZE		= @CFLAGS_OPTIMIZE@$/;"	m
CFLAGS_OPTIMIZE	unix/tcl.m4	/^    AC_SUBST(CFLAGS_OPTIMIZE)$/;"	s
CFLAGS_OPTIMIZE	win/Makefile.in	/^CFLAGS_OPTIMIZE	= @CFLAGS_OPTIMIZE@$/;"	m
CFLAGS_OPTIMIZE	win/tcl.m4	/^    AC_SUBST(CFLAGS_OPTIMIZE)$/;"	s
CFLAGS_WARNING	unix/Makefile.in	/^CFLAGS_WARNING		= @CFLAGS_WARNING@$/;"	m
CFLAGS_WARNING	unix/tcl.m4	/^    AC_SUBST(CFLAGS_WARNING)$/;"	s
CFLAGS_WARNING	win/Makefile.in	/^CFLAGS_WARNING = @CFLAGS_WARNING@$/;"	m
CFLAGS_WARNING	win/tcl.m4	/^    AC_SUBST(CFLAGS_WARNING)$/;"	s
CFMTT_PROC	generic/tclDate.h	/^   CFMTT_PROC$/;"	e	enum:_CLCKTOK_TYPE
CFWord	generic/tclInt.h	/^typedef struct CFWord {$/;"	s
CFWord	generic/tclInt.h	/^} CFWord;$/;"	t	typeref:struct:CFWord
CFWordBC	generic/tclInt.h	/^typedef struct CFWordBC {$/;"	s
CFWordBC	generic/tclInt.h	/^} CFWordBC;$/;"	t	typeref:struct:CFWordBC
CF_TIMEINTERVAL_FOREVER	macosx/tclMacOSXNotify.c	/^#define CF_TIMEINTERVAL_FOREVER /;"	d	file:
CHAN	generic/tclIORChan.c	/^	CHAN = 1,$/;"	e	enum:TclChanPostEventObjCmd::ArgIndices	file:
CHAN	generic/tclIORTrans.c	/^	CHAN = 1$/;"	e	enum:TclChanPopObjCmd::ArgIndices	file:
CHAN	generic/tclIORTrans.c	/^	CHAN = 1,$/;"	e	enum:TclChanPushObjCmd::ArgIndices	file:
CHANNELBUFFER_DEFAULT_SIZE	generic/tclIO.h	/^#define CHANNELBUFFER_DEFAULT_SIZE	/;"	d
CHANNELBUFFER_HEADER_SIZE	generic/tclIO.h	/^#define CHANNELBUFFER_HEADER_SIZE	/;"	d
CHANNEL_ASYNC	generic/tclIOGT.c	/^#define CHANNEL_ASYNC /;"	d	file:
CHANNEL_BLOCKED	generic/tclIO.h	/^#define CHANNEL_BLOCKED	/;"	d
CHANNEL_CLOSED	generic/tclIO.h	/^#define CHANNEL_CLOSED	/;"	d
CHANNEL_CLOSEDWRITE	generic/tclIO.h	/^#define CHANNEL_CLOSEDWRITE	/;"	d
CHANNEL_DEAD	generic/tclIO.h	/^#define CHANNEL_DEAD	/;"	d
CHANNEL_ENCODING_ERROR	generic/tclIO.h	/^#define CHANNEL_ENCODING_ERROR	/;"	d
CHANNEL_EOF	generic/tclIO.h	/^#define CHANNEL_EOF	/;"	d
CHANNEL_INCLOSE	generic/tclIO.h	/^#define CHANNEL_INCLOSE	/;"	d
CHANNEL_LINEBUFFERED	generic/tclIO.h	/^#define CHANNEL_LINEBUFFERED	/;"	d
CHANNEL_NEED_MORE_DATA	generic/tclIO.h	/^#define CHANNEL_NEED_MORE_DATA	/;"	d
CHANNEL_NONBLOCKING	generic/tclIO.h	/^#define CHANNEL_NONBLOCKING	/;"	d
CHANNEL_RAW_MODE	generic/tclIO.h	/^#define CHANNEL_RAW_MODE	/;"	d
CHANNEL_STICKY_EOF	generic/tclIO.h	/^#define CHANNEL_STICKY_EOF	/;"	d
CHANNEL_UNBUFFERED	generic/tclIO.h	/^#define CHANNEL_UNBUFFERED	/;"	d
CHARACTER CLASSES	doc/UniCharIsAlpha.3	/^.SH "CHARACTER CLASSES"$/;"	s	title:Tcl_UniCharIsAlpha
CHAR_TYPE	generic/tclParse.h	/^#define CHAR_TYPE(/;"	d
CHDIRPROC	doc/FileSystem.3	/^.SS CHDIRPROC$/;"	S	section:Filesystem""FILESYSTEM EFFICIENCY
CHECK	compat/zlib/inflate.h	/^    CHECK,      \/* i: waiting for 32-bit check value *\/$/;"	e	enum:__anon6bf0a2910103
CHECK	library/platform/shell.tcl	/^proc ::platform::shell::CHECK {shell} {$/;"	p	namespace:::platform::shell
CHECK_ERR	compat/zlib/contrib/pascal/example.pas	/^procedure CHECK_ERR(err: Integer; msg: String);$/;"	p
CHECK_ERR	compat/zlib/test/example.c	/^#define CHECK_ERR(/;"	d	file:
CHECK_ISOLATEDSURROGATE	generic/tclEncoding.c	/^#define CHECK_ISOLATEDSURROGATE /;"	d	file:
CHECK_STACK	generic/tclExecute.c	/^#define CHECK_STACK(/;"	d	file:
CHOP	compat/zlib/adler32.c	/^#  define CHOP(/;"	d	file:
CHR	generic/regcustom.h	/^#define	CHR(/;"	d
CHRBITS	generic/regcustom.h	/^#define	CHRBITS	/;"	d
CHRTYPE	compat/zlib/contrib/untgz/untgz.c	/^#define CHRTYPE /;"	d	file:
CHR_MAX	generic/regcustom.h	/^#define	CHR_MAX	0x10FFFF	\/* CHR_MAX-/;"	d
CHR_MIN	generic/regcustom.h	/^#define	CHR_MIN	/;"	d
CHUNK	compat/zlib/contrib/blast/blast.c	/^#define CHUNK /;"	d	file:
CHUNK	compat/zlib/examples/gzappend.c	/^#define CHUNK (1U << LGCHUNK)/;"	d	file:
CHUNK	compat/zlib/examples/gzjoin.c	/^#define CHUNK /;"	d	file:
CHUNK	compat/zlib/examples/gznorm.c	/^#define CHUNK /;"	d	file:
CHUNK	compat/zlib/examples/zpipe.c	/^#define CHUNK /;"	d	file:
CHUNK	compat/zlib/examples/zran.c	/^#define CHUNK /;"	d	file:
CHUNK	win/nmakehlp.c	/^#define CHUNK	/;"	d	file:
CISERR	generic/regc_color.c	/^#define	CISERR(/;"	d	file:
CLANG_ASSERT	generic/tclInt.h	/^#define CLANG_ASSERT(/;"	d
CLCKTOK_TYPE	generic/tclDate.h	/^} CLCKTOK_TYPE;$/;"	t	typeref:enum:_CLCKTOK_TYPE
CLC_ADD_DAYS	generic/tclClock.c	/^	CLC_ADD_DAYS,	CLC_ADD_WEEKDAYS,$/;"	e	enum:ClockAddObjCmd::unitInd	file:
CLC_ADD_HOURS	generic/tclClock.c	/^	CLC_ADD_HOURS,	CLC_ADD_MINUTES,    CLC_ADD_SECONDS$/;"	e	enum:ClockAddObjCmd::unitInd	file:
CLC_ADD_MINUTES	generic/tclClock.c	/^	CLC_ADD_HOURS,	CLC_ADD_MINUTES,    CLC_ADD_SECONDS$/;"	e	enum:ClockAddObjCmd::unitInd	file:
CLC_ADD_MONTHS	generic/tclClock.c	/^	CLC_ADD_YEARS,	CLC_ADD_MONTHS,	    CLC_ADD_WEEK,   CLC_ADD_WEEKS,$/;"	e	enum:ClockAddObjCmd::unitInd	file:
CLC_ADD_SECONDS	generic/tclClock.c	/^	CLC_ADD_HOURS,	CLC_ADD_MINUTES,    CLC_ADD_SECONDS$/;"	e	enum:ClockAddObjCmd::unitInd	file:
CLC_ADD_WEEK	generic/tclClock.c	/^	CLC_ADD_YEARS,	CLC_ADD_MONTHS,	    CLC_ADD_WEEK,   CLC_ADD_WEEKS,$/;"	e	enum:ClockAddObjCmd::unitInd	file:
CLC_ADD_WEEKDAYS	generic/tclClock.c	/^	CLC_ADD_DAYS,	CLC_ADD_WEEKDAYS,$/;"	e	enum:ClockAddObjCmd::unitInd	file:
CLC_ADD_WEEKS	generic/tclClock.c	/^	CLC_ADD_YEARS,	CLC_ADD_MONTHS,	    CLC_ADD_WEEK,   CLC_ADD_WEEKS,$/;"	e	enum:ClockAddObjCmd::unitInd	file:
CLC_ADD_YEARS	generic/tclClock.c	/^	CLC_ADD_YEARS,	CLC_ADD_MONTHS,	    CLC_ADD_WEEK,   CLC_ADD_WEEKS,$/;"	e	enum:ClockAddObjCmd::unitInd	file:
CLC_ARGS_BASE	generic/tclClock.c	/^	CLC_ARGS_BASE, CLC_ARGS_FORMAT, CLC_ARGS_GMT, CLC_ARGS_LOCALE,$/;"	e	enum:ClockParseFmtScnArgs::optionInd	file:
CLC_ARGS_FORMAT	generic/tclClock.c	/^	CLC_ARGS_BASE, CLC_ARGS_FORMAT, CLC_ARGS_GMT, CLC_ARGS_LOCALE,$/;"	e	enum:ClockParseFmtScnArgs::optionInd	file:
CLC_ARGS_GMT	generic/tclClock.c	/^	CLC_ARGS_BASE, CLC_ARGS_FORMAT, CLC_ARGS_GMT, CLC_ARGS_LOCALE,$/;"	e	enum:ClockParseFmtScnArgs::optionInd	file:
CLC_ARGS_LOCALE	generic/tclClock.c	/^	CLC_ARGS_BASE, CLC_ARGS_FORMAT, CLC_ARGS_GMT, CLC_ARGS_LOCALE,$/;"	e	enum:ClockParseFmtScnArgs::optionInd	file:
CLC_ARGS_TIMEZONE	generic/tclClock.c	/^	CLC_ARGS_TIMEZONE, CLC_ARGS_VALIDATE$/;"	e	enum:ClockParseFmtScnArgs::optionInd	file:
CLC_ARGS_VALIDATE	generic/tclClock.c	/^	CLC_ARGS_TIMEZONE, CLC_ARGS_VALIDATE$/;"	e	enum:ClockParseFmtScnArgs::optionInd	file:
CLC_OP_ADD	generic/tclClock.c	/^    CLC_OP_ADD			\/* Doing [clock add] *\/$/;"	e	enum:ClockOperation	file:
CLC_OP_FMT	generic/tclClock.c	/^    CLC_OP_FMT = 0,		\/* Doing [clock format] *\/$/;"	e	enum:ClockOperation	file:
CLC_OP_SCN	generic/tclClock.c	/^    CLC_OP_SCN,			\/* Doing [clock scan] *\/$/;"	e	enum:ClockOperation	file:
CLEAR_BITS	macosx/tclMacOSXNotify.c	/^#define CLEAR_BITS(/;"	d	file:
CLEAR_BITS	unix/tclUnixChan.c	/^#define CLEAR_BITS(/;"	d	file:
CLEAR_BITS	unix/tclUnixSock.c	/^#define CLEAR_BITS(/;"	d	file:
CLEAR_BITS	win/tclWinSock.c	/^#define CLEAR_BITS(/;"	d	file:
CLEAR_FLAG	win/tclWinChan.c	/^#define CLEAR_FLAG(/;"	d	file:
CLEAR_HASH	compat/zlib/deflate.c	/^#define CLEAR_HASH(/;"	d	file:
CLFMT_CALC	generic/tclDate.h	/^    CLFMT_CALC = (1 << 5),$/;"	e	enum:ClockFormatTokenMapFlags
CLFMT_DECR	generic/tclDate.h	/^    CLFMT_DECR = (1 << 4),$/;"	e	enum:ClockFormatTokenMapFlags
CLFMT_INCR	generic/tclDate.h	/^    CLFMT_INCR = (1 << 3),$/;"	e	enum:ClockFormatTokenMapFlags
CLFMT_LOCALE_INDX	generic/tclDate.h	/^    CLFMT_LOCALE_INDX = (1 << 8)$/;"	e	enum:ClockFormatTokenMapFlags
CLF_ASSEMBLE_DATE	generic/tclDate.h	/^    CLF_ASSEMBLE_DATE = 1 << 28,\/* assemble year, month, etc. using julianDay *\/$/;"	e	enum:DateInfoFlags
CLF_ASSEMBLE_JULIANDAY	generic/tclDate.h	/^    CLF_ASSEMBLE_JULIANDAY = 1 << 29,$/;"	e	enum:DateInfoFlags
CLF_ASSEMBLE_SECONDS	generic/tclDate.h	/^    CLF_ASSEMBLE_SECONDS = 1 << 30$/;"	e	enum:DateInfoFlags
CLF_CENTURY	generic/tclDate.h	/^    CLF_CENTURY = 1 << 6,$/;"	e	enum:DateInfoFlags
CLF_CTZ	generic/tclDate.h	/^    CLF_CTZ = (1 << 4)$/;"	e	enum:TclDateFieldsFlags
CLF_DATE	generic/tclDate.h	/^    CLF_DATE = (CLF_JULIANDAY | CLF_DAYOFMONTH | CLF_DAYOFYEAR$/;"	e	enum:DateInfoFlags
CLF_DAYOFMONTH	generic/tclDate.h	/^    CLF_DAYOFMONTH = 1 << 7,$/;"	e	enum:DateInfoFlags
CLF_DAYOFWEEK	generic/tclDate.h	/^    CLF_DAYOFWEEK = 1 << 11,$/;"	e	enum:DateInfoFlags
CLF_DAYOFYEAR	generic/tclDate.h	/^    CLF_DAYOFYEAR = 1 << 8,$/;"	e	enum:DateInfoFlags
CLF_EXTENDED	generic/tclDate.h	/^    CLF_EXTENDED = (1 << 4),$/;"	e	enum:ClockFmtScnCmdArgsFlags
CLF_HAVEDATE	generic/tclDate.h	/^    CLF_HAVEDATE = (CLF_DAYOFMONTH | CLF_MONTH | CLF_YEAR),$/;"	e	enum:DateInfoFlags
CLF_ISO8601CENTURY	generic/tclDate.h	/^    CLF_ISO8601CENTURY = 1 << 14,$/;"	e	enum:DateInfoFlags
CLF_ISO8601WEEK	generic/tclDate.h	/^    CLF_ISO8601WEEK = 1 << 13,$/;"	e	enum:DateInfoFlags
CLF_ISO8601YEAR	generic/tclDate.h	/^    CLF_ISO8601YEAR = 1 << 12,$/;"	e	enum:DateInfoFlags
CLF_JULIANDAY	generic/tclDate.h	/^    CLF_JULIANDAY = 1 << 3,$/;"	e	enum:DateInfoFlags
CLF_LOCALE_USED	generic/tclDate.h	/^    CLF_LOCALE_USED = (1 << 15)$/;"	e	enum:ClockFmtScnCmdArgsFlags
CLF_LOCALSEC	generic/tclDate.h	/^    CLF_LOCALSEC = 1 << 2,$/;"	e	enum:DateInfoFlags
CLF_MONTH	generic/tclDate.h	/^    CLF_MONTH = 1 << 9,$/;"	e	enum:DateInfoFlags
CLF_OPTIONAL	generic/tclDate.h	/^    CLF_OPTIONAL = 1 << 0,	\/* token is non mandatory *\/$/;"	e	enum:DateInfoFlags
CLF_ORDINALMONTH	generic/tclDate.h	/^    CLF_ORDINALMONTH = 1 << 18,$/;"	e	enum:DateInfoFlags
CLF_POSIXSEC	generic/tclDate.h	/^    CLF_POSIXSEC = 1 << 1,$/;"	e	enum:DateInfoFlags
CLF_RELCONV	generic/tclDate.h	/^    CLF_RELCONV = 1 << 17,$/;"	e	enum:DateInfoFlags
CLF_SIGNED	generic/tclDate.h	/^    CLF_SIGNED = 1 << 15,$/;"	e	enum:DateInfoFlags
CLF_STRICT	generic/tclDate.h	/^    CLF_STRICT = (1 << 8),$/;"	e	enum:ClockFmtScnCmdArgsFlags
CLF_TIME	generic/tclDate.h	/^    CLF_TIME = 1 << 4,$/;"	e	enum:DateInfoFlags
CLF_VALIDATE	generic/tclDate.h	/^    CLF_VALIDATE = (CLF_VALIDATE_S1|CLF_VALIDATE_S2),$/;"	e	enum:ClockFmtScnCmdArgsFlags
CLF_VALIDATE_S1	generic/tclDate.h	/^    CLF_VALIDATE_S1 = (1 << 0),$/;"	e	enum:ClockFmtScnCmdArgsFlags
CLF_VALIDATE_S2	generic/tclDate.h	/^    CLF_VALIDATE_S2 = (1 << 1),$/;"	e	enum:ClockFmtScnCmdArgsFlags
CLF_YEAR	generic/tclDate.h	/^    CLF_YEAR = 1 << 10,$/;"	e	enum:DateInfoFlags
CLF_ZONE	generic/tclDate.h	/^    CLF_ZONE = 1 << 5,$/;"	e	enum:DateInfoFlags
CLICKS_MICROS	generic/tclClock.c	/^	CLICKS_MILLIS, CLICKS_MICROS, CLICKS_NATIVE$/;"	e	enum:ClockClicksObjCmd::ClicksSwitch	file:
CLICKS_MICROS	generic/tclClockClassic.c	/^	CLICKS_MILLIS, CLICKS_MICROS, CLICKS_NATIVE$/;"	e	enum:ClockClicksObjCmd::ClicksSwitch	file:
CLICKS_MILLIS	generic/tclClock.c	/^	CLICKS_MILLIS, CLICKS_MICROS, CLICKS_NATIVE$/;"	e	enum:ClockClicksObjCmd::ClicksSwitch	file:
CLICKS_MILLIS	generic/tclClockClassic.c	/^	CLICKS_MILLIS, CLICKS_MICROS, CLICKS_NATIVE$/;"	e	enum:ClockClicksObjCmd::ClicksSwitch	file:
CLICKS_NATIVE	generic/tclClock.c	/^	CLICKS_MILLIS, CLICKS_MICROS, CLICKS_NATIVE$/;"	e	enum:ClockClicksObjCmd::ClicksSwitch	file:
CLICKS_NATIVE	generic/tclClockClassic.c	/^	CLICKS_MILLIS, CLICKS_MICROS, CLICKS_NATIVE$/;"	e	enum:ClockClicksObjCmd::ClicksSwitch	file:
CLL_END	generic/tclInt.h	/^#define CLL_END	/;"	d
CLOCK_CENTURY_SWITCH	generic/tclClock.c	/^	CLOCK_YEAR_CENTURY, CLOCK_CENTURY_SWITCH,$/;"	e	enum:ClockConfigureObjCmd::optionInd	file:
CLOCK_CLEAR_CACHE	generic/tclClock.c	/^	CLOCK_DEFAULT_LOCALE, CLOCK_CLEAR_CACHE, CLOCK_CURRENT_LOCALE,$/;"	e	enum:ClockConfigureObjCmd::optionInd	file:
CLOCK_CURRENT_LOCALE	generic/tclClock.c	/^	CLOCK_DEFAULT_LOCALE, CLOCK_CLEAR_CACHE, CLOCK_CURRENT_LOCALE,$/;"	e	enum:ClockConfigureObjCmd::optionInd	file:
CLOCK_DEFAULT_LOCALE	generic/tclClock.c	/^	CLOCK_DEFAULT_LOCALE, CLOCK_CLEAR_CACHE, CLOCK_CURRENT_LOCALE,$/;"	e	enum:ClockConfigureObjCmd::optionInd	file:
CLOCK_FMT_SCN_STORAGE_GC_SIZE	generic/tclDate.h	/^# define CLOCK_FMT_SCN_STORAGE_GC_SIZE /;"	d
CLOCK_FORMAT_FORMAT	generic/tclClockClassic.c	/^	CLOCK_FORMAT_FORMAT,	CLOCK_FORMAT_GMT,	CLOCK_FORMAT_LOCALE,$/;"	e	enum:ClockParseformatargsObjCmd::optionInd	file:
CLOCK_FORMAT_GMT	generic/tclClockClassic.c	/^	CLOCK_FORMAT_FORMAT,	CLOCK_FORMAT_GMT,	CLOCK_FORMAT_LOCALE,$/;"	e	enum:ClockParseformatargsObjCmd::optionInd	file:
CLOCK_FORMAT_LOCALE	generic/tclClockClassic.c	/^	CLOCK_FORMAT_FORMAT,	CLOCK_FORMAT_GMT,	CLOCK_FORMAT_LOCALE,$/;"	e	enum:ClockParseformatargsObjCmd::optionInd	file:
CLOCK_FORMAT_TIMEZONE	generic/tclClockClassic.c	/^	CLOCK_FORMAT_TIMEZONE$/;"	e	enum:ClockParseformatargsObjCmd::optionInd	file:
CLOCK_INIT_COMPLETE	generic/tclClock.c	/^	CLOCK_INIT_COMPLETE,  CLOCK_SETUP_TZ, CLOCK_SYSTEM_TZ$/;"	e	enum:ClockConfigureObjCmd::optionInd	file:
CLOCK_LITERAL_ARRAY	generic/tclDate.h	/^#define CLOCK_LITERAL_ARRAY(/;"	d
CLOCK_LOCALE_LITERAL_ARRAY	generic/tclDate.h	/^#define CLOCK_LOCALE_LITERAL_ARRAY(/;"	d
CLOCK_MAX_JDN	generic/tclClock.c	/^	CLOCK_MIN_YEAR, CLOCK_MAX_YEAR, CLOCK_MAX_JDN, CLOCK_VALIDATE,$/;"	e	enum:ClockConfigureObjCmd::optionInd	file:
CLOCK_MAX_YEAR	generic/tclClock.c	/^	CLOCK_MIN_YEAR, CLOCK_MAX_YEAR, CLOCK_MAX_JDN, CLOCK_VALIDATE,$/;"	e	enum:ClockConfigureObjCmd::optionInd	file:
CLOCK_MIN_TOK_CHAIN_BLOCK_SIZE	generic/tclDate.h	/^#define CLOCK_MIN_TOK_CHAIN_BLOCK_SIZE /;"	d
CLOCK_MIN_YEAR	generic/tclClock.c	/^	CLOCK_MIN_YEAR, CLOCK_MAX_YEAR, CLOCK_MAX_JDN, CLOCK_VALIDATE,$/;"	e	enum:ClockConfigureObjCmd::optionInd	file:
CLOCK_SETUP_TZ	generic/tclClock.c	/^	CLOCK_INIT_COMPLETE,  CLOCK_SETUP_TZ, CLOCK_SYSTEM_TZ$/;"	e	enum:ClockConfigureObjCmd::optionInd	file:
CLOCK_SYSTEM_TZ	generic/tclClock.c	/^	CLOCK_INIT_COMPLETE,  CLOCK_SETUP_TZ, CLOCK_SYSTEM_TZ$/;"	e	enum:ClockConfigureObjCmd::optionInd	file:
CLOCK_VALIDATE	generic/tclClock.c	/^	CLOCK_MIN_YEAR, CLOCK_MAX_YEAR, CLOCK_MAX_JDN, CLOCK_VALIDATE,$/;"	e	enum:ClockConfigureObjCmd::optionInd	file:
CLOCK_YEAR_CENTURY	generic/tclClock.c	/^	CLOCK_YEAR_CENTURY, CLOCK_CENTURY_SWITCH,$/;"	e	enum:ClockConfigureObjCmd::optionInd	file:
CLOSE2PROC	doc/CrtChannel.3	/^.SS "CLOSE2PROC"$/;"	S	section:Tcl_CreateChannel""TCL_CHANNELTYPE
CLOSE_DEFAULT	unix/tclUnixChan.c	/^    CLOSE_DEFAULT,$/;"	e	enum:CloseModeBits	file:
CLOSE_DISCARD	unix/tclUnixChan.c	/^    CLOSE_DISCARD$/;"	e	enum:CloseModeBits	file:
CLOSE_DRAIN	unix/tclUnixChan.c	/^    CLOSE_DRAIN,$/;"	e	enum:CloseModeBits	file:
CLOSE_NOTIFIER_LOG	macosx/tclMacOSXNotify.c	/^#define CLOSE_NOTIFIER_LOG /;"	d	file:
CLOSE_NOTIFIER_LOG	macosx/tclMacOSXNotify.c	/^#define CLOSE_NOTIFIER_LOG$/;"	d	file:
CLOSE_PAREN	generic/tclCompExpr.c	/^#define CLOSE_PAREN	/;"	d	file:
CLOSE_PUNCTUATION	generic/tclUniData.c	/^    CLOSE_PUNCTUATION,$/;"	e	enum:__anon910316cb0103	file:
CL_ESCAPE	win/tclWinPipe.c	/^    enum {CL_ESCAPE = 1, CL_QUOTE = 2, CL_UNPAIRED = 4};$/;"	e	enum:BuildCommandLine::__anon3385f2d20403	file:
CL_QUOTE	win/tclWinPipe.c	/^    enum {CL_ESCAPE = 1, CL_QUOTE = 2, CL_UNPAIRED = 4};$/;"	e	enum:BuildCommandLine::__anon3385f2d20403	file:
CL_UNPAIRED	win/tclWinPipe.c	/^    enum {CL_ESCAPE = 1, CL_QUOTE = 2, CL_UNPAIRED = 4};$/;"	e	enum:BuildCommandLine::__anon3385f2d20403	file:
CMAKE_ALLOW_LOOSE_LOOP_CONSTRUCTS	compat/zlib/CMakeLists.txt	/^set(CMAKE_ALLOW_LOOSE_LOOP_CONSTRUCTS ON)$/;"	v
CMAKE_BUILD_TYPE	libtommath/CMakeLists.txt	/^  set(CMAKE_BUILD_TYPE "Release")$/;"	v
CMAKE_C_COMPILER_LAUNCHER	libtommath/CMakeLists.txt	/^    set(CMAKE_C_COMPILER_LAUNCHER ${CCACHE})$/;"	v
CMAKE_C_FLAGS_DEBUG	libtommath/CMakeLists.txt	/^    set(CMAKE_C_FLAGS_DEBUG "-O1 ${CMAKE_C_FLAGS_DEBUG}")$/;"	v
CMAKE_C_FLAGS_DEBUG	libtommath/CMakeLists.txt	/^    set(CMAKE_C_FLAGS_DEBUG "-g3")$/;"	v
CMAKE_C_FLAGS_MINSIZEREL	libtommath/CMakeLists.txt	/^    set(CMAKE_C_FLAGS_MINSIZEREL "-Os")$/;"	v
CMAKE_C_FLAGS_RELEASE	libtommath/CMakeLists.txt	/^    set(CMAKE_C_FLAGS_RELEASE "-O3 -funroll-loops -fomit-frame-pointer")$/;"	v
CMAKE_C_FLAGS_RELWITHDEBINFO	libtommath/CMakeLists.txt	/^    set(CMAKE_C_FLAGS_RELWITHDEBINFO "-g3 -O2")$/;"	v
CMAKE_DEBUG_POSTFIX	compat/zlib/CMakeLists.txt	/^    set(CMAKE_DEBUG_POSTFIX "d")$/;"	v
CMAKE_INSTALL_PKGCONFIGDIR	libtommath/CMakeLists.txt	/^    set(CMAKE_INSTALL_PKGCONFIGDIR "${CMAKE_INSTALL_LIBDIR}\/pkgconfig" CACHE PATH "Folder where/;"	v
CMAKE_RC_COMPILER	compat/zlib/CMakeLists.txt	/^        set(CMAKE_RC_COMPILER windres.exe)$/;"	v
CMAKE_REQUIRED_DEFINITIONS	compat/zlib/CMakeLists.txt	/^set(CMAKE_REQUIRED_DEFINITIONS -D_LARGEFILE64_SOURCE=1)$/;"	v
CMAKE_REQUIRED_DEFINITIONS	compat/zlib/CMakeLists.txt	/^set(CMAKE_REQUIRED_DEFINITIONS) # clear variable$/;"	v
CMD	generic/tclIORChan.c	/^	CMD = 2$/;"	e	enum:TclChanCreateObjCmd::ArgIndices	file:
CMD	generic/tclIORTrans.c	/^	CMD = 2$/;"	e	enum:TclChanPushObjCmd::ArgIndices	file:
CMDINFO_CALL	generic/tclTest.c	/^	CMDINFO_CALL, CMDINFO_CALL2, CMDINFO_CREATE,$/;"	e	enum:TestcmdinfoObjCmd::options	file:
CMDINFO_CALL2	generic/tclTest.c	/^	CMDINFO_CALL, CMDINFO_CALL2, CMDINFO_CREATE,$/;"	e	enum:TestcmdinfoObjCmd::options	file:
CMDINFO_CREATE	generic/tclTest.c	/^	CMDINFO_CALL, CMDINFO_CALL2, CMDINFO_CREATE,$/;"	e	enum:TestcmdinfoObjCmd::options	file:
CMDINFO_DELETE	generic/tclTest.c	/^	CMDINFO_DELETE, CMDINFO_GET, CMDINFO_MODIFY$/;"	e	enum:TestcmdinfoObjCmd::options	file:
CMDINFO_GET	generic/tclTest.c	/^	CMDINFO_DELETE, CMDINFO_GET, CMDINFO_MODIFY$/;"	e	enum:TestcmdinfoObjCmd::options	file:
CMDINFO_MODIFY	generic/tclTest.c	/^	CMDINFO_DELETE, CMDINFO_GET, CMDINFO_MODIFY$/;"	e	enum:TestcmdinfoObjCmd::options	file:
CMD_ADLER	generic/tclZlib.c	/^	CMD_ADLER, CMD_COMPRESS, CMD_CRC, CMD_DECOMPRESS, CMD_DEFLATE,$/;"	e	enum:ZlibCmd::zlibCommands	file:
CMD_COMPILES_EXPANDED	generic/tclInt.h	/^#define CMD_COMPILES_EXPANDED	/;"	d
CMD_COMPRESS	generic/tclZlib.c	/^	CMD_ADLER, CMD_COMPRESS, CMD_CRC, CMD_DECOMPRESS, CMD_DEFLATE,$/;"	e	enum:ZlibCmd::zlibCommands	file:
CMD_CRC	generic/tclZlib.c	/^	CMD_ADLER, CMD_COMPRESS, CMD_CRC, CMD_DECOMPRESS, CMD_DEFLATE,$/;"	e	enum:ZlibCmd::zlibCommands	file:
CMD_DEAD	generic/tclInt.h	/^#define CMD_DEAD	/;"	d
CMD_DECOMPRESS	generic/tclZlib.c	/^	CMD_ADLER, CMD_COMPRESS, CMD_CRC, CMD_DECOMPRESS, CMD_DEFLATE,$/;"	e	enum:ZlibCmd::zlibCommands	file:
CMD_DEFLATE	generic/tclZlib.c	/^	CMD_ADLER, CMD_COMPRESS, CMD_CRC, CMD_DECOMPRESS, CMD_DEFLATE,$/;"	e	enum:ZlibCmd::zlibCommands	file:
CMD_DYING	generic/tclInt.h	/^#define CMD_DYING	/;"	d
CMD_GUNZIP	generic/tclZlib.c	/^	CMD_GUNZIP, CMD_GZIP, CMD_INFLATE, CMD_PUSH, CMD_STREAM$/;"	e	enum:ZlibCmd::zlibCommands	file:
CMD_GZIP	generic/tclZlib.c	/^	CMD_GUNZIP, CMD_GZIP, CMD_INFLATE, CMD_PUSH, CMD_STREAM$/;"	e	enum:ZlibCmd::zlibCommands	file:
CMD_HAS_EXEC_TRACES	generic/tclInt.h	/^#define CMD_HAS_EXEC_TRACES	/;"	d
CMD_INFLATE	generic/tclZlib.c	/^	CMD_GUNZIP, CMD_GZIP, CMD_INFLATE, CMD_PUSH, CMD_STREAM$/;"	e	enum:ZlibCmd::zlibCommands	file:
CMD_IS_SAFE	generic/tclBasic.c	/^#define CMD_IS_SAFE /;"	d	file:
CMD_PUSH	generic/tclZlib.c	/^	CMD_GUNZIP, CMD_GZIP, CMD_INFLATE, CMD_PUSH, CMD_STREAM$/;"	e	enum:ZlibCmd::zlibCommands	file:
CMD_REDEF_IN_PROGRESS	generic/tclInt.h	/^#define CMD_REDEF_IN_PROGRESS	/;"	d
CMD_STREAM	generic/tclZlib.c	/^	CMD_GUNZIP, CMD_GZIP, CMD_INFLATE, CMD_PUSH, CMD_STREAM$/;"	e	enum:ZlibCmd::zlibCommands	file:
CMD_TRACE_ACTIVE	generic/tclInt.h	/^#define CMD_TRACE_ACTIVE	/;"	d
CMD_VIA_RESOLVER	generic/tclInt.h	/^#define CMD_VIA_RESOLVER	/;"	d
CMMAGIC	generic/regguts.h	/^#define	CMMAGIC	/;"	d
CNFA_NOPROGRESS	generic/regguts.h	/^#define CNFA_NOPROGRESS	/;"	d
CNOERR	generic/regcomp.c	/^#define	CNOERR(/;"	d	file:
CODELENS	compat/zlib/inflate.h	/^        CODELENS,   \/* i: waiting for length\/lit and distance code lengths *\/$/;"	e	enum:__anon6bf0a2910103
CODES	compat/zlib/contrib/infback9/inftree9.h	/^    CODES,$/;"	e	enum:__anon80eb2aca0203
CODES	compat/zlib/inftrees.h	/^    CODES,$/;"	e	enum:__anon78703c4e0203
COLLEL	generic/regcomp.c	/^#define	COLLEL	/;"	d	file:
COLON	generic/tclCompExpr.c	/^#define COLON	/;"	d	file:
COLORED	generic/regcomp.c	/^#define	COLORED(/;"	d	file:
COLORLESS	generic/regguts.h	/^#define	COLORLESS	/;"	d
COMBINE	generic/regguts.h	/^#define	COMBINE(/;"	d
COMBINING_SPACING_MARK	generic/tclUniData.c	/^    COMBINING_SPACING_MARK,$/;"	e	enum:__anon910316cb0103	file:
COMMA	generic/tclCompExpr.c	/^#define COMMA	/;"	d	file:
COMMENT	compat/zlib/inflate.h	/^    COMMENT,    \/* i: waiting for end of comment (gzip) *\/$/;"	e	enum:__anon6bf0a2910103
COMMENT	generic/tclCompExpr.c	/^#define COMMENT	/;"	d	file:
COMMENT_STATE	compat/zlib/deflate.h	/^#define COMMENT_STATE /;"	d
COMPAT	generic/tclUtil.c	/^#define COMPAT /;"	d	file:
COMPATIBLE	generic/regcomp.c	/^#define	COMPATIBLE	/;"	d	file:
COMPAT_DIR	unix/Makefile.in	/^COMPAT_DIR		= $(TOP_DIR)\/compat$/;"	m
COMPAT_DIR	win/Makefile.in	/^COMPAT_DIR		= $(TOP_DIR)\/compat$/;"	m
COMPAT_OBJS	unix/Makefile.in	/^COMPAT_OBJS		= @LIBOBJS@$/;"	m
COMPILEENV_INIT_AUX_DATA_SIZE	generic/tclCompile.h	/^#define COMPILEENV_INIT_AUX_DATA_SIZE /;"	d
COMPILEENV_INIT_CMD_MAP_SIZE	generic/tclCompile.h	/^#define COMPILEENV_INIT_CMD_MAP_SIZE /;"	d
COMPILEENV_INIT_CODE_BYTES	generic/tclCompile.h	/^#define COMPILEENV_INIT_CODE_BYTES /;"	d
COMPILEENV_INIT_EXCEPT_RANGES	generic/tclCompile.h	/^#define COMPILEENV_INIT_EXCEPT_RANGES /;"	d
COMPILEENV_INIT_NUM_OBJECTS	generic/tclCompile.h	/^#define COMPILEENV_INIT_NUM_OBJECTS /;"	d
COMPILEHDR	unix/Makefile.in	/^COMPILEHDR	= $(GENERIC_DIR)\/tclCompile.h$/;"	m
COMPILE_DEBUG_FLAGS	win/Makefile.in	/^COMPILE_DEBUG_FLAGS =$/;"	m
COMPILE_LTO	libtommath/CMakeLists.txt	/^option(COMPILE_LTO "Build with LTO enabled")$/;"	D
COMPRESS_OP	compat/zlib/examples/gzlog.c	/^#define COMPRESS_OP /;"	d	file:
CONCAT_TRIM_SET	generic/tclStringTrim.h	/^#define CONCAT_TRIM_SET /;"	d
CONCAT_WS_SIZE	generic/tclUtil.c	/^#define CONCAT_WS_SIZE /;"	d	file:
COND_DEMOS	compat/zlib/contrib/minizip/configure.ac	/^AM_CONDITIONAL([COND_DEMOS], [test "$enable_demos" = yes])$/;"	c
CONFIGURE_ARGS	macosx/GNUmakefile	/^CONFIGURE_ARGS		=$/;"	m
CONFIG_INSTALL_DIR	libtommath/CMakeLists.txt	/^set(CONFIG_INSTALL_DIR "${CMAKE_INSTALL_LIBDIR}\/cmake\/${PROJECT_NAME}")$/;"	v
CONFIG_INSTALL_DIR	unix/Makefile.in	/^CONFIG_INSTALL_DIR	= $(INSTALL_ROOT)$(libdir)$/;"	m
CONF_MAP	generic/tclEnsemble.c	/^    CONF_MAP, CONF_NAMESPACE, CONF_PARAM, CONF_PREFIX, CONF_SUBCMDS,$/;"	e	enum:EnsConfigOpts	file:
CONF_NAMESPACE	generic/tclEnsemble.c	/^    CONF_MAP, CONF_NAMESPACE, CONF_PARAM, CONF_PREFIX, CONF_SUBCMDS,$/;"	e	enum:EnsConfigOpts	file:
CONF_PARAM	generic/tclEnsemble.c	/^    CONF_MAP, CONF_NAMESPACE, CONF_PARAM, CONF_PREFIX, CONF_SUBCMDS,$/;"	e	enum:EnsConfigOpts	file:
CONF_PREFIX	generic/tclEnsemble.c	/^    CONF_MAP, CONF_NAMESPACE, CONF_PARAM, CONF_PREFIX, CONF_SUBCMDS,$/;"	e	enum:EnsConfigOpts	file:
CONF_SUBCMDS	generic/tclEnsemble.c	/^    CONF_MAP, CONF_NAMESPACE, CONF_PARAM, CONF_PREFIX, CONF_SUBCMDS,$/;"	e	enum:EnsConfigOpts	file:
CONF_UNKNOWN	generic/tclEnsemble.c	/^    CONF_UNKNOWN$/;"	e	enum:EnsConfigOpts	file:
CONNECTOR_PUNCTUATION	generic/tclUniData.c	/^    CONNECTOR_PUNCTUATION,$/;"	e	enum:__anon910316cb0103	file:
CONSOLE_ASYNC	win/tclWinConsole.c	/^#define CONSOLE_ASYNC /;"	d	file:
CONSOLE_BUFFER_SIZE	win/tclWinConsole.c	/^#define CONSOLE_BUFFER_SIZE /;"	d	file:
CONSOLE_DATA_AWAITED	win/tclWinConsole.c	/^#define CONSOLE_DATA_AWAITED /;"	d	file:
CONSOLE_EVENT_QUEUED	win/tclWinConsole.c	/^#define CONSOLE_EVENT_QUEUED /;"	d	file:
CONSOLE_READ_OPS	win/tclWinConsole.c	/^#define CONSOLE_READ_OPS /;"	d	file:
CONSTRUCTOR	generic/tclOOInt.h	/^    CONSTRUCTOR = 0x08,		\/* This is a constructor. *\/$/;"	e	enum:TclOOCallChainFlags
CONTROL	generic/tclUniData.c	/^    CONTROL,$/;"	e	enum:__anon910316cb0103	file:
CONTROL_BITS	generic/tclUtf.c	/^#define CONTROL_BITS /;"	d	file:
CONTTYPE	compat/zlib/contrib/untgz/untgz.c	/^#define CONTTYPE /;"	d	file:
CONVERT_ANY	generic/tclUtil.c	/^#define CONVERT_ANY	/;"	d	file:
CONVERT_BRACE	generic/tclUtil.c	/^#define CONVERT_BRACE	/;"	d	file:
CONVERT_ESCAPE	generic/tclUtil.c	/^#define CONVERT_ESCAPE	/;"	d	file:
CONVERT_MASK	generic/tclUtil.c	/^#define CONVERT_MASK	/;"	d	file:
CONVERT_NONE	generic/tclUtil.c	/^#define CONVERT_NONE	/;"	d	file:
COPY	compat/zlib/gzguts.h	/^#define COPY /;"	d
COPY	compat/zlib/inflate.h	/^        COPY,       \/* i\/o: waiting for input or output to copy stored block *\/$/;"	e	enum:__anon6bf0a2910103
COPY	win/Makefile.in	/^COPY		= cp$/;"	m
COPYDIRECTORYPROC	doc/FileSystem.3	/^.SS COPYDIRECTORYPROC$/;"	S	section:Filesystem""FILESYSTEM EFFICIENCY
COPYFILEPROC	doc/FileSystem.3	/^.SS COPYFILEPROC$/;"	S	section:Filesystem""FILESYSTEM EFFICIENCY
COPYFILE_ACL	macosx/tclMacOSXFCmd.c	/^#define COPYFILE_ACL	/;"	d	file:
COPYFILE_NOFOLLOW_SRC	macosx/tclMacOSXFCmd.c	/^#define COPYFILE_NOFOLLOW_SRC	/;"	d	file:
COPYFILE_XATTR	macosx/tclMacOSXFCmd.c	/^#define COPYFILE_XATTR	/;"	d	file:
COPYRIGHT	doc/NRE.3	/^.SH COPYRIGHT$/;"	s	title:NRE
COPY_	compat/zlib/inflate.h	/^        COPY_,      \/* i\/o: same as COPY below, but only first time in *\/$/;"	e	enum:__anon6bf0a2910103
COROUTINE_ARGUMENTS_ARBITRARY	generic/tclBasic.c	/^#define COROUTINE_ARGUMENTS_ARBITRARY	/;"	d	file:
COROUTINE_ARGUMENTS_SINGLE_OPTIONAL	generic/tclBasic.c	/^#define COROUTINE_ARGUMENTS_SINGLE_OPTIONAL	/;"	d	file:
CORO_ACTIVATE_YIELD	generic/tclBasic.c	/^#define CORO_ACTIVATE_YIELD	/;"	d	file:
CORO_ACTIVATE_YIELDM	generic/tclBasic.c	/^#define CORO_ACTIVATE_YIELDM	/;"	d	file:
CORO_STACK_INITIAL_SIZE	generic/tclBasic.c	/^#define CORO_STACK_INITIAL_SIZE /;"	d	file:
COR_IS_SUSPENDED	generic/tclInt.h	/^#define COR_IS_SUSPENDED(/;"	d
CPACK_ARCHIVE_COMPONENT_INSTALL	libtommath/CMakeLists.txt	/^    set(CPACK_ARCHIVE_COMPONENT_INSTALL ON)$/;"	v
CPACK_COMPONENTS_ALL	libtommath/CMakeLists.txt	/^    set(CPACK_COMPONENTS_ALL Libraries)$/;"	v
CPACK_DEBIAN_DEBUGINFO_PACKAGE	libtommath/CMakeLists.txt	/^set(CPACK_DEBIAN_DEBUGINFO_PACKAGE ON)$/;"	v
CPACK_DEBIAN_FILE_NAME	libtommath/CMakeLists.txt	/^set(CPACK_DEBIAN_FILE_NAME DEB-DEFAULT)$/;"	v
CPACK_DEBIAN_LIBRARIES_PACKAGE_NAME	libtommath/CMakeLists.txt	/^    set(CPACK_DEBIAN_LIBRARIES_PACKAGE_NAME "${PROJECT_NAME}${PACKAGE_NAME_SUFFIX}-dev")$/;"	v
CPACK_DEBIAN_PACKAGE_DEPENDS	libtommath/CMakeLists.txt	/^    set(CPACK_DEBIAN_PACKAGE_DEPENDS ${LTM_DEBIAN_SHARED_PACKAGE_NAME})$/;"	v
CPACK_DEBIAN_PACKAGE_NAME	libtommath/CMakeLists.txt	/^    set(CPACK_DEBIAN_PACKAGE_NAME "${LTM_DEBIAN_SHARED_PACKAGE_NAME}")$/;"	v
CPACK_DEBIAN_PACKAGE_RELEASE	libtommath/CMakeLists.txt	/^set(CPACK_DEBIAN_PACKAGE_RELEASE ${PACKAGE_RELEASE_VERSION})$/;"	v
CPACK_DEBIAN_PACKAGE_SECTION	libtommath/CMakeLists.txt	/^    set(CPACK_DEBIAN_PACKAGE_SECTION "devel")$/;"	v
CPACK_DEBIAN_PACKAGE_SECTION	libtommath/CMakeLists.txt	/^    set(CPACK_DEBIAN_PACKAGE_SECTION "libs")$/;"	v
CPACK_DEBIAN_PACKAGE_SHLIBDEPS	libtommath/CMakeLists.txt	/^set(CPACK_DEBIAN_PACKAGE_SHLIBDEPS ON)$/;"	v
CPACK_DEB_COMPONENT_INSTALL	libtommath/CMakeLists.txt	/^    set(CPACK_DEB_COMPONENT_INSTALL ON)$/;"	v
CPACK_FREEBSD_PACKAGE_CATEGORIES	libtommath/CMakeLists.txt	/^set(CPACK_FREEBSD_PACKAGE_CATEGORIES "math")$/;"	v
CPACK_FREEBSD_PACKAGE_MAINTAINER	libtommath/CMakeLists.txt	/^set(CPACK_FREEBSD_PACKAGE_MAINTAINER "gahr@FreeBSD.org")$/;"	v
CPACK_FREEBSD_PACKAGE_ORIGIN	libtommath/CMakeLists.txt	/^set(CPACK_FREEBSD_PACKAGE_ORIGIN "math\/libtommath")$/;"	v
CPACK_GENERATOR	libtommath/CMakeLists.txt	/^set(CPACK_GENERATOR TGZ STGZ)$/;"	v
CPACK_PACKAGE_CONTACT	libtommath/CMakeLists.txt	/^set(CPACK_PACKAGE_CONTACT "libtom@googlegroups.com")$/;"	v
CPACK_PACKAGE_DESCRIPTION_SUMMARY	libtommath/CMakeLists.txt	/^set(CPACK_PACKAGE_DESCRIPTION_SUMMARY "LibTomMath")$/;"	v
CPACK_PACKAGE_DIRECTORY	libtommath/CMakeLists.txt	/^set(CPACK_PACKAGE_DIRECTORY ${CMAKE_BINARY_DIR}\/packages\/${DISTRO_PACK_PATH})$/;"	v
CPACK_PACKAGE_FILE_NAME	libtommath/CMakeLists.txt	/^set(CPACK_PACKAGE_FILE_NAME ${CPACK_PACKAGE_NAME}-${PACKAGE_NAME_TRAILER})$/;"	v
CPACK_PACKAGE_NAME	libtommath/CMakeLists.txt	/^    set(CPACK_PACKAGE_NAME "${PROJECT_NAME}${PROJECT_VERSION_MAJOR}")$/;"	v
CPACK_PACKAGE_NAME	libtommath/CMakeLists.txt	/^    set(CPACK_PACKAGE_NAME "${PROJECT_NAME}-devel")$/;"	v
CPACK_PACKAGE_VENDOR	libtommath/CMakeLists.txt	/^set(CPACK_PACKAGE_VENDOR "libtom projects")$/;"	v
CPACK_PACKAGE_VERSION	libtommath/CMakeLists.txt	/^set(CPACK_PACKAGE_VERSION ${PROJECT_VERSION})$/;"	v
CPACK_RESOURCE_FILE_LICENSE	libtommath/CMakeLists.txt	/^set(CPACK_RESOURCE_FILE_LICENSE "${PROJECT_SOURCE_DIR}\/LICENSE")$/;"	v
CPACK_RPM_PACKAGE_ARCHITECTURE	libtommath/CMakeLists.txt	/^set(CPACK_RPM_PACKAGE_ARCHITECTURE ${MACHINE_ARCH})$/;"	v
CPACK_RPM_PACKAGE_LICENSE	libtommath/CMakeLists.txt	/^set(CPACK_RPM_PACKAGE_LICENSE "The Unlicense")$/;"	v
CPACK_RPM_PACKAGE_NAME	libtommath/CMakeLists.txt	/^set(CPACK_RPM_PACKAGE_NAME "${CPACK_PACKAGE_NAME}-${PROJECT_VERSION}")$/;"	v
CPACK_RPM_PACKAGE_RELEASE	libtommath/CMakeLists.txt	/^set(CPACK_RPM_PACKAGE_RELEASE ${PACKAGE_RELEASE_VERSION})$/;"	v
CPP	compat/zlib/Makefile.in	/^CPP=$(CC) -E$/;"	m
CPPFILES	compat/zlib/nintendods/Makefile	/^CPPFILES	:=	$(foreach dir,$(SOURCES),$(notdir $(wildcard $(dir)\/*.cpp)))$/;"	m
CPPFLAGS	win/Makefile.in	/^CPPFLAGS	= @CPPFLAGS@$/;"	m
CPPROG	macosx/GNUmakefile	/^export CPPROG		:= cp -p$/;"	m
CP_UTF8	unix/tclUnixPort.h	/^#   define CP_UTF8 /;"	d
CRC	compat/zlib/contrib/ada/zlib.ads	/^      CRC         : Unsigned_32;$/;"	v	packspec:ZLib	file:
CRC2	compat/zlib/inflate.c	/^#  define CRC2(/;"	d	file:
CRC32	compat/zlib/contrib/ada/zlib.adb	/^   function CRC32$/;"	r	package:ZLib	file:
CRC32	compat/zlib/contrib/ada/zlib.adb	/^   procedure CRC32$/;"	r	package:ZLib	file:
CRC32	compat/zlib/contrib/ada/zlib.ads	/^   function CRC32$/;"	R	packspec:ZLib
CRC32	compat/zlib/contrib/ada/zlib.ads	/^   procedure CRC32$/;"	R	packspec:ZLib
CRC32	compat/zlib/contrib/minizip/crypt.h	/^#define CRC32(/;"	d
CRC32Checksum	compat/zlib/contrib/dotzlib/DotZLib/ChecksumImpl.cs	/^        public CRC32Checksum() : base() {}$/;"	m	class:DotZLib.CRC32Checksum
CRC32Checksum	compat/zlib/contrib/dotzlib/DotZLib/ChecksumImpl.cs	/^        public CRC32Checksum(uint initialValue) : base(initialValue) {}$/;"	m	class:DotZLib.CRC32Checksum
CRC32Checksum	compat/zlib/contrib/dotzlib/DotZLib/ChecksumImpl.cs	/^    public sealed class CRC32Checksum : ChecksumGeneratorBase$/;"	c	namespace:DotZLib
CRC32_Data	compat/zlib/contrib/dotzlib/DotZLib/UnitTests.cs	/^        public void CRC32_Data()$/;"	m	class:DotZLibTests.ChecksumTests
CRC32_Null	compat/zlib/contrib/dotzlib/DotZLib/UnitTests.cs	/^        public void CRC32_Null()$/;"	m	class:DotZLibTests.ChecksumTests
CRC4	compat/zlib/inflate.c	/^#  define CRC4(/;"	d	file:
CRC_LOCALHEADER_OFFSET	compat/zlib/contrib/minizip/zip.c	/^#define CRC_LOCALHEADER_OFFSET /;"	d	file:
CREATEDIRECTORYPROC	doc/FileSystem.3	/^.SS CREATEDIRECTORYPROC$/;"	S	section:Filesystem""FILESYSTEM OPERATIONS
CREATEINTERNALREPPROC	doc/FileSystem.3	/^.SS CREATEINTERNALREPPROC$/;"	S	section:Filesystem""FILESYSTEM INFRASTRUCTURE
CREATING A NEW EVENT SOURCE	doc/Notifier.3	/^.SH "CREATING A NEW EVENT SOURCE"$/;"	s	title:Notifier
CREATING A NEW NOTIFIER	doc/Notifier.3	/^.SH "CREATING A NEW NOTIFIER"$/;"	s	title:Notifier
CRTIMPORT	generic/tcl.h	/^#           define CRTIMPORT /;"	d
CRTSCTS	unix/tclUnixChan.c	/^#	define CRTSCTS /;"	d	file:
CRT_CMD	generic/tclEnsemble.c	/^    CRT_CMD, CRT_MAP, CRT_PARAM, CRT_PREFIX, CRT_SUBCMDS, CRT_UNKNOWN$/;"	e	enum:EnsCreateOpts	file:
CRT_MAP	generic/tclEnsemble.c	/^    CRT_CMD, CRT_MAP, CRT_PARAM, CRT_PREFIX, CRT_SUBCMDS, CRT_UNKNOWN$/;"	e	enum:EnsCreateOpts	file:
CRT_PARAM	generic/tclEnsemble.c	/^    CRT_CMD, CRT_MAP, CRT_PARAM, CRT_PREFIX, CRT_SUBCMDS, CRT_UNKNOWN$/;"	e	enum:EnsCreateOpts	file:
CRT_PREFIX	generic/tclEnsemble.c	/^    CRT_CMD, CRT_MAP, CRT_PARAM, CRT_PREFIX, CRT_SUBCMDS, CRT_UNKNOWN$/;"	e	enum:EnsCreateOpts	file:
CRT_SUBCMDS	generic/tclEnsemble.c	/^    CRT_CMD, CRT_MAP, CRT_PARAM, CRT_PREFIX, CRT_SUBCMDS, CRT_UNKNOWN$/;"	e	enum:EnsCreateOpts	file:
CRT_UNKNOWN	generic/tclEnsemble.c	/^    CRT_CMD, CRT_MAP, CRT_PARAM, CRT_PREFIX, CRT_SUBCMDS, CRT_UNKNOWN$/;"	e	enum:EnsCreateOpts	file:
CSS	tools/tcltk-man2html-utils.tcl	/^proc CSS {{level ""}} {$/;"	p
CTOKT_CHAR	generic/tclDate.h	/^   CTOKT_INT = 1, CTOKT_WIDE, CTOKT_PARSER, CTOKT_SPACE, CTOKT_WORD, CTOKT_CHAR,$/;"	e	enum:_CLCKTOK_TYPE
CTOKT_INT	generic/tclDate.h	/^   CTOKT_INT = 1, CTOKT_WIDE, CTOKT_PARSER, CTOKT_SPACE, CTOKT_WORD, CTOKT_CHAR,$/;"	e	enum:_CLCKTOK_TYPE
CTOKT_PARSER	generic/tclDate.h	/^   CTOKT_INT = 1, CTOKT_WIDE, CTOKT_PARSER, CTOKT_SPACE, CTOKT_WORD, CTOKT_CHAR,$/;"	e	enum:_CLCKTOK_TYPE
CTOKT_SPACE	generic/tclDate.h	/^   CTOKT_INT = 1, CTOKT_WIDE, CTOKT_PARSER, CTOKT_SPACE, CTOKT_WORD, CTOKT_CHAR,$/;"	e	enum:_CLCKTOK_TYPE
CTOKT_WIDE	generic/tclDate.h	/^   CTOKT_INT = 1, CTOKT_WIDE, CTOKT_PARSER, CTOKT_SPACE, CTOKT_WORD, CTOKT_CHAR,$/;"	e	enum:_CLCKTOK_TYPE
CTOKT_WORD	generic/tclDate.h	/^   CTOKT_INT = 1, CTOKT_WIDE, CTOKT_PARSER, CTOKT_SPACE, CTOKT_WORD, CTOKT_CHAR,$/;"	e	enum:_CLCKTOK_TYPE
CURRENCY_SYMBOL	generic/tclUniData.c	/^    CURRENCY_SYMBOL,$/;"	e	enum:__anon910316cb0103	file:
CURR_DEPTH	generic/tclExecute.c	/^#define CURR_DEPTH	/;"	d	file:
CXXFLAGS	compat/zlib/nintendods/Makefile	/^CXXFLAGS	:= $(CFLAGS) -fno-rtti -fno-exceptions$/;"	m
CYGPATH	win/Makefile.in	/^CYGPATH			= @CYGPATH@$/;"	m
CYGPATH	win/configure.ac	/^AC_SUBST(CYGPATH)$/;"	s
CYGWIN_OBJS	unix/Makefile.in	/^CYGWIN_OBJS = tclWinError.o$/;"	m
CYGWIN_SRCS	unix/Makefile.in	/^CYGWIN_SRCS = \\$/;"	m
C_SOURCE	compat/zlib/watcom/watcom_f.mak	/^C_SOURCE =  adler32.c  compress.c crc32.c   deflate.c    &$/;"	m
C_SOURCE	compat/zlib/watcom/watcom_l.mak	/^C_SOURCE =  adler32.c  compress.c crc32.c   deflate.c    &$/;"	m
Cache	generic/tclThreadAlloc.c	/^typedef struct Cache {$/;"	s	file:
Cache	generic/tclThreadAlloc.c	/^} Cache;$/;"	t	typeref:struct:Cache	file:
CalculateJumpRelocations	generic/tclAssembly.c	/^CalculateJumpRelocations($/;"	f	typeref:typename:int	file:
CalibrationThread	win/tclWinTime.c	/^CalibrationThread($/;"	f	typeref:typename:DWORD WINAPI	file:
CallChain	generic/tclOOInt.h	/^struct CallChain {$/;"	s
CallChain	generic/tclOOInt.h	/^typedef struct CallChain CallChain;$/;"	t	typeref:struct:CallChain
CallChainFlags	generic/tclOOCall.c	/^enum CallChainFlags {$/;"	g	file:
CallCommandTraces	generic/tclBasic.c	/^CallCommandTraces($/;"	f	typeref:typename:char *	file:
CallContext	generic/tclOOInt.h	/^struct CallContext {$/;"	s
CallContext	generic/tclOOInt.h	/^typedef struct CallContext CallContext;$/;"	t	typeref:struct:CallContext
CallFrame	generic/tclInt.h	/^typedef struct CallFrame {$/;"	s
CallFrame	generic/tclInt.h	/^} CallFrame;$/;"	t	typeref:struct:CallFrame
CallScriptLimitCallback	generic/tclInterp.c	/^CallScriptLimitCallback($/;"	f	typeref:typename:void	file:
CallTraceFunction	generic/tclTrace.c	/^CallTraceFunction($/;"	f	typeref:typename:int	file:
CanRead	compat/zlib/contrib/dotzlib/DotZLib/GZipStream.cs	/^        public override bool CanRead$/;"	p	class:DotZLib.GZipStream
CanSeek	compat/zlib/contrib/dotzlib/DotZLib/GZipStream.cs	/^        public override bool CanSeek$/;"	p	class:DotZLib.GZipStream
CanWrite	compat/zlib/contrib/dotzlib/DotZLib/GZipStream.cs	/^        public override bool CanWrite$/;"	p	class:DotZLib.GZipStream
CancelEvalProc	generic/tclBasic.c	/^CancelEvalProc($/;"	f	typeref:typename:int	file:
CancelInfo	generic/tclBasic.c	/^} CancelInfo;$/;"	t	typeref:struct:__anon6e1456070108	file:
CancelReadPipeline	library/http/http.tcl	/^proc http::CancelReadPipeline {name1 connId op} {$/;"	p	namespace:http
CancelWritePipeline	library/http/http.tcl	/^proc http::CancelWritePipeline {name1 connId op} {$/;"	p	namespace:http
CannotSetAttribute	win/tclWinFCmd.c	/^CannotSetAttribute($/;"	f	typeref:typename:int	file:
CastOutPowersOf2	generic/tclStrToD.c	/^CastOutPowersOf2($/;"	f	typeref:typename:void	file:
CatchObjCmdCallback	generic/tclCmdAH.c	/^CatchObjCmdCallback($/;"	f	typeref:typename:int	file:
CatchObjCmdCallback	generic/tclCmdAH.c	/^static Tcl_NRPostProc	CatchObjCmdCallback;$/;"	v	typeref:typename:Tcl_NRPostProc	file:
Cdtor	unix/tclLoadAix.c	/^} Cdtor, *CdtorPtr;$/;"	t	typeref:struct:__anonb87ae84e0208	file:
CdtorPtr	unix/tclLoadAix.c	/^} Cdtor, *CdtorPtr;$/;"	t	typeref:struct:__anonb87ae84e0208 *	file:
ChainBuilder	generic/tclOOCall.c	/^typedef struct ChainBuilder {$/;"	s	file:
ChainBuilder	generic/tclOOCall.c	/^} ChainBuilder;$/;"	t	typeref:struct:ChainBuilder	file:
ChainEntry	generic/tclDictObj.c	/^typedef struct ChainEntry {$/;"	s	file:
ChainEntry	generic/tclDictObj.c	/^} ChainEntry;$/;"	t	typeref:struct:ChainEntry	file:
ChanClose	generic/tclIO.c	/^ChanClose($/;"	f	typeref:typename:int	file:
ChanGetInternalRep	generic/tclIO.c	/^#define ChanGetInternalRep(/;"	d	file:
ChanIsBinaryCmd	generic/tclIOCmd.c	/^ChanIsBinaryCmd($/;"	f	typeref:typename:int	file:
ChanPendingObjCmd	generic/tclIOCmd.c	/^ChanPendingObjCmd($/;"	f	typeref:typename:int	file:
ChanPendingObjCmd	generic/tclIOCmd.c	/^static Tcl_ObjCmdProc		ChanPendingObjCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
ChanPipeObjCmd	generic/tclIOCmd.c	/^ChanPipeObjCmd($/;"	f	typeref:typename:int	file:
ChanRead	generic/tclIO.c	/^ChanRead($/;"	f	typeref:typename:int	file:
ChanSeek	generic/tclIO.c	/^ChanSeek($/;"	f	typeref:typename:Tcl_WideInt	file:
ChanSetInternalRep	generic/tclIO.c	/^#define ChanSetInternalRep(/;"	d	file:
ChanThreadAction	generic/tclIO.c	/^ChanThreadAction($/;"	f	typeref:typename:void	file:
ChanTruncateObjCmd	generic/tclIOCmd.c	/^ChanTruncateObjCmd($/;"	f	typeref:typename:int	file:
ChanTruncateObjCmd	generic/tclIOCmd.c	/^static Tcl_ObjCmdProc		ChanTruncateObjCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
ChanWatch	generic/tclIO.c	/^ChanWatch($/;"	f	typeref:typename:void	file:
ChanWrite	generic/tclIO.c	/^ChanWrite($/;"	f	typeref:typename:int	file:
ChangeCurrentLocale	library/clock.tcl	/^proc ::tcl::clock::ChangeCurrentLocale {args} {$/;"	p	namespace:::tcl::clock
ChangeCurrentLocale	library/clockclassic.tcl	/^proc ChangeCurrentLocale {args} {$/;"	p
Channel	generic/tclIO.h	/^typedef struct Channel {$/;"	s
Channel	generic/tclIO.h	/^} Channel;$/;"	t	typeref:struct:Channel
ChannelBuffer	generic/tclIO.h	/^typedef struct ChannelBuffer {$/;"	s
ChannelBuffer	generic/tclIO.h	/^} ChannelBuffer;$/;"	t	typeref:struct:ChannelBuffer
ChannelFree	generic/tclIO.c	/^ChannelFree($/;"	f	typeref:typename:void	file:
ChannelHandler	generic/tclIO.c	/^typedef struct ChannelHandler {$/;"	s	file:
ChannelHandler	generic/tclIO.c	/^} ChannelHandler;$/;"	t	typeref:struct:ChannelHandler	file:
ChannelState	generic/tclIO.h	/^typedef struct ChannelState {$/;"	s
ChannelState	generic/tclIO.h	/^} ChannelState;$/;"	t	typeref:struct:ChannelState
ChannelTimerProc	generic/tclIO.c	/^ChannelTimerProc($/;"	f	typeref:typename:void	file:
CharInSet	generic/tclScan.c	/^CharInSet($/;"	f	typeref:typename:int	file:
CharSet	generic/tclScan.c	/^} CharSet;$/;"	t	typeref:struct:__anon0c1044aa0208	file:
CheckAccess	generic/tclCmdAH.c	/^CheckAccess($/;"	f	typeref:typename:int	file:
CheckAllRequirements	generic/tclPkg.c	/^CheckAllRequirements($/;"	f	typeref:typename:int	file:
CheckChannelErrors	generic/tclIO.c	/^CheckChannelErrors($/;"	f	typeref:typename:int	file:
CheckDoubleResult	generic/tclBasic.c	/^CheckDoubleResult($/;"	f	typeref:typename:int	file:
CheckEmptyStringResult	generic/tclInt.h	/^enum CheckEmptyStringResult {$/;"	g
CheckEof	library/http/http.tcl	/^proc http::CheckEof {sock} {$/;"	p	namespace:http
CheckFileName	library/safe.tcl	/^proc ::safe::CheckFileName {child file} {$/;"	p	namespace:::safe
CheckForCompilerFeature	win/nmakehlp.c	/^CheckForCompilerFeature($/;"	f	typeref:typename:int	file:
CheckForDeadChannel	generic/tclIO.c	/^CheckForDeadChannel($/;"	f	typeref:typename:int	file:
CheckForLinkerFeature	win/nmakehlp.c	/^CheckForLinkerFeature($/;"	f	typeref:typename:int	file:
CheckForStdChannelsBeingClosed	generic/tclIO.c	/^CheckForStdChannelsBeingClosed($/;"	f	typeref:typename:void	file:
CheckForThrowInWrongContext	generic/tclAssembly.c	/^CheckForThrowInWrongContext($/;"	f	typeref:typename:int	file:
CheckForUnclosedCatches	generic/tclAssembly.c	/^CheckForUnclosedCatches($/;"	f	typeref:typename:int	file:
CheckIfVarUnset	generic/tclTestObj.c	/^CheckIfVarUnset($/;"	f	typeref:typename:int	file:
CheckInterp	library/safe.tcl	/^proc ::safe::CheckInterp {child} {$/;"	p	namespace:::safe
CheckJumpTableLabels	generic/tclAssembly.c	/^CheckJumpTableLabels($/;"	f	typeref:typename:int	file:
CheckNamespaceQualifiers	generic/tclAssembly.c	/^CheckNamespaceQualifiers($/;"	f	typeref:typename:int	file:
CheckNonNegative	generic/tclAssembly.c	/^CheckNonNegative($/;"	f	typeref:typename:int	file:
CheckNonThrowingBlock	generic/tclAssembly.c	/^CheckNonThrowingBlock($/;"	f	typeref:typename:int	file:
CheckOneByte	generic/tclAssembly.c	/^CheckOneByte($/;"	f	typeref:typename:int	file:
CheckRequirement	generic/tclPkg.c	/^CheckRequirement($/;"	f	typeref:typename:int	file:
CheckSignedOneByte	generic/tclAssembly.c	/^CheckSignedOneByte($/;"	f	typeref:typename:int	file:
CheckStack	generic/tclAssembly.c	/^CheckStack($/;"	f	typeref:typename:int	file:
CheckStrictlyPositive	generic/tclAssembly.c	/^CheckStrictlyPositive($/;"	f	typeref:typename:int	file:
CheckVersionAndConvert	generic/tclPkg.c	/^CheckVersionAndConvert($/;"	f	typeref:typename:int	file:
Check_Error	compat/zlib/contrib/ada/zlib.adb	/^   procedure Check_Error (Stream : in Z_Stream; Code : in Thin.Int) is$/;"	r	package:ZLib	file:
Check_Error	compat/zlib/contrib/ada/zlib.adb	/^   procedure Check_Error (Stream : in Z_Stream; Code : in Thin.Int);$/;"	R	package:ZLib	file:
Check_Version	compat/zlib/contrib/ada/zlib.adb	/^      procedure Check_Version is$/;"	r	subprogram:Inflate_Init	file:
Check_Version	compat/zlib/contrib/ada/zlib.adb	/^      procedure Check_Version;$/;"	R	subprogram:Inflate_Init	file:
CheckmemCmd	generic/tclCkalloc.c	/^CheckmemCmd($/;"	f	typeref:typename:int	file:
Checksum	compat/zlib/contrib/dotzlib/DotZLib/CodecBase.cs	/^        public uint Checksum { get { return _checksum; } }$/;"	p	class:DotZLib.CodecBase
Checksum	compat/zlib/contrib/dotzlib/DotZLib/DotZLib.cs	/^        uint Checksum { get; }$/;"	p	interface:DotZLib.Codec
ChecksumGenerator	compat/zlib/contrib/dotzlib/DotZLib/DotZLib.cs	/^    public interface ChecksumGenerator$/;"	i	namespace:DotZLib
ChecksumGeneratorBase	compat/zlib/contrib/dotzlib/DotZLib/ChecksumImpl.cs	/^        public ChecksumGeneratorBase()$/;"	m	class:DotZLib.ChecksumGeneratorBase
ChecksumGeneratorBase	compat/zlib/contrib/dotzlib/DotZLib/ChecksumImpl.cs	/^        public ChecksumGeneratorBase(uint initialValue)$/;"	m	class:DotZLib.ChecksumGeneratorBase
ChecksumGeneratorBase	compat/zlib/contrib/dotzlib/DotZLib/ChecksumImpl.cs	/^    public abstract class ChecksumGeneratorBase : ChecksumGenerator$/;"	c	namespace:DotZLib
ChecksumTests	compat/zlib/contrib/dotzlib/DotZLib/UnitTests.cs	/^    public class ChecksumTests$/;"	c	namespace:DotZLibTests
Child	generic/tclInterp.c	/^} Child;$/;"	t	typeref:struct:__anon913711770208	file:
ChildBgerror	generic/tclInterp.c	/^ChildBgerror($/;"	f	typeref:typename:int	file:
ChildCommandLimitCmd	generic/tclInterp.c	/^ChildCommandLimitCmd($/;"	f	typeref:typename:int	file:
ChildCreate	generic/tclInterp.c	/^ChildCreate($/;"	f	typeref:typename:Tcl_Interp *	file:
ChildDebugCmd	generic/tclInterp.c	/^ChildDebugCmd($/;"	f	typeref:typename:int	file:
ChildEval	generic/tclInterp.c	/^ChildEval($/;"	f	typeref:typename:int	file:
ChildExpose	generic/tclInterp.c	/^ChildExpose($/;"	f	typeref:typename:int	file:
ChildHidden	generic/tclInterp.c	/^ChildHidden($/;"	f	typeref:typename:int	file:
ChildHide	generic/tclInterp.c	/^ChildHide($/;"	f	typeref:typename:int	file:
ChildInvokeHidden	generic/tclInterp.c	/^ChildInvokeHidden($/;"	f	typeref:typename:int	file:
ChildMarkTrusted	generic/tclInterp.c	/^ChildMarkTrusted($/;"	f	typeref:typename:int	file:
ChildObjCmdDeleteProc	generic/tclInterp.c	/^ChildObjCmdDeleteProc($/;"	f	typeref:typename:void	file:
ChildObjCmdDeleteProc	generic/tclInterp.c	/^static Tcl_CmdDeleteProc	ChildObjCmdDeleteProc;$/;"	v	typeref:typename:Tcl_CmdDeleteProc	file:
ChildRecursionLimit	generic/tclInterp.c	/^ChildRecursionLimit($/;"	f	typeref:typename:int	file:
ChildTimeLimitCmd	generic/tclInterp.c	/^ChildTimeLimitCmd($/;"	f	typeref:typename:int	file:
CircBufferTests	compat/zlib/contrib/dotzlib/DotZLib/UnitTests.cs	/^    public class CircBufferTests$/;"	c	namespace:DotZLibTests
CircularBuffer	compat/zlib/contrib/dotzlib/DotZLib/CircularBuffer.cs	/^	internal class CircularBuffer$/;"	c	namespace:DotZLib
CircularBuffer	compat/zlib/contrib/dotzlib/DotZLib/CircularBuffer.cs	/^        public CircularBuffer(int capacity)$/;"	m	class:DotZLib.CircularBuffer
Claim	generic/tclIOUtil.c	/^Claim(void)$/;"	f	typeref:typename:void	file:
Class	generic/tclOOInt.h	/^#define Class	TclOOClass$/;"	d
Class	generic/tclOOInt.h	/^struct Class {$/;"	s
Class	generic/tclOOInt.h	/^typedef struct Class Class;$/;"	t	typeref:struct:Class
ClassFilter_Get	generic/tclOODefineCmds.c	/^ClassFilter_Get($/;"	f	typeref:typename:int	file:
ClassFilter_Set	generic/tclOODefineCmds.c	/^ClassFilter_Set($/;"	f	typeref:typename:int	file:
ClassList	generic/tclOOInt.h	/^typedef LIST_STATIC(Class *) ClassList;$/;"	t
ClassMixin_Get	generic/tclOODefineCmds.c	/^ClassMixin_Get($/;"	f	typeref:typename:int	file:
ClassMixin_Set	generic/tclOODefineCmds.c	/^ClassMixin_Set($/;"	f	typeref:typename:int	file:
ClassSuper_Get	generic/tclOODefineCmds.c	/^ClassSuper_Get($/;"	f	typeref:typename:int	file:
ClassSuper_Set	generic/tclOODefineCmds.c	/^ClassSuper_Set($/;"	f	typeref:typename:int	file:
ClassVars_Get	generic/tclOODefineCmds.c	/^ClassVars_Get($/;"	f	typeref:typename:int	file:
ClassVars_Set	generic/tclOODefineCmds.c	/^ClassVars_Set($/;"	f	typeref:typename:int	file:
ClassifyDouble	generic/tclBasic.c	/^ClassifyDouble($/;"	f	typeref:typename:int	file:
CleanRefChannelInstance	generic/tclIORChan.c	/^CleanRefChannelInstance($/;"	f	typeref:typename:void	file:
CleanUp	compat/zlib/contrib/dotzlib/DotZLib/CodecBase.cs	/^        private void CleanUp(bool isDisposing)$/;"	m	class:DotZLib.CodecBase	file:
CleanUp	compat/zlib/contrib/dotzlib/DotZLib/CodecBase.cs	/^        protected abstract void CleanUp();$/;"	m	class:DotZLib.CodecBase
CleanUp	compat/zlib/contrib/dotzlib/DotZLib/Deflater.cs	/^        protected override void CleanUp() { deflateEnd(ref _ztream); }$/;"	m	class:DotZLib.Deflater
CleanUp	compat/zlib/contrib/dotzlib/DotZLib/Inflater.cs	/^        protected override void CleanUp() { inflateEnd(ref _ztream); }$/;"	m	class:DotZLib.Inflater
CleanupByteCode	generic/tclCompile.c	/^CleanupByteCode($/;"	f	typeref:typename:void	file:
CleanupChannelHandlers	generic/tclIO.c	/^CleanupChannelHandlers($/;"	f	typeref:typename:void	file:
CleanupMount	generic/tclZipfs.c	/^CleanupMount($/;"	f	typeref:typename:void	file:
CleanupTestSetassocdataTests	generic/tclTest.c	/^CleanupTestSetassocdataTests($/;"	f	typeref:typename:void	file:
CleanupTimerHandler	generic/tclIO.c	/^CleanupTimerHandler($/;"	f	typeref:typename:void	file:
CleanupVar	generic/tclVar.c	/^CleanupVar($/;"	f	typeref:typename:void	file:
ClearCaches	library/clock.tcl	/^proc ::tcl::clock::ClearCaches {} {$/;"	p	namespace:::tcl::clock
ClearCaches	library/clockclassic.tcl	/^proc ClearCaches {} {$/;"	p
ClearHash	generic/tclUtil.c	/^ClearHash($/;"	f	typeref:typename:void	file:
ClearTable	generic/tclEnsemble.c	/^ClearTable($/;"	f	typeref:typename:void	file:
ClicksSwitch	generic/tclClock.c	/^    enum ClicksSwitch {$/;"	g	function:ClockClicksObjCmd	file:
ClicksSwitch	generic/tclClockClassic.c	/^    enum ClicksSwitch {$/;"	g	function:ClockClicksObjCmd	file:
ClientData	generic/tcl.h	/^typedef void *ClientData;$/;"	t	typeref:typename:void *
ClockAddObjCmd	generic/tclClock.c	/^ClockAddObjCmd($/;"	f	typeref:typename:int
ClockAddObjCmd	generic/tclClock.c	/^static Tcl_ObjCmdProc	ClockAddObjCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
ClockCacheableDateFieldsSize	generic/tclDate.h	/^#define ClockCacheableDateFieldsSize /;"	d
ClockCalcRelTime	generic/tclClock.c	/^ClockCalcRelTime($/;"	f	typeref:typename:int
ClockClicksObjCmd	generic/tclClock.c	/^ClockClicksObjCmd($/;"	f	typeref:typename:int
ClockClicksObjCmd	generic/tclClock.c	/^static Tcl_ObjCmdProc	ClockClicksObjCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
ClockClicksObjCmd	generic/tclClockClassic.c	/^ClockClicksObjCmd($/;"	f	typeref:typename:int	file:
ClockClicksObjCmd	generic/tclClockClassic.c	/^static Tcl_ObjCmdProc ClockClicksObjCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
ClockClientData	generic/tclClockClassic.c	/^} ClockClientData;$/;"	t	typeref:struct:__anondf8925f30108	file:
ClockClientData	generic/tclDate.h	/^typedef struct ClockClientData ClockClientData;$/;"	t	typeref:struct:ClockClientData
ClockClientData	generic/tclDate.h	/^typedef struct ClockClientData {$/;"	s
ClockClientData	generic/tclDate.h	/^} ClockClientData;$/;"	t	typeref:struct:ClockClientData
ClockCommand	generic/tclClock.c	/^struct ClockCommand {$/;"	s	file:
ClockCommand	generic/tclClockClassic.c	/^struct ClockCommand {$/;"	s	file:
ClockConfigureClear	generic/tclClock.c	/^ClockConfigureClear($/;"	f	typeref:typename:void	file:
ClockConfigureObjCmd	generic/tclClock.c	/^ClockConfigureObjCmd($/;"	f	typeref:typename:int	file:
ClockConfigureObjCmd	generic/tclClock.c	/^static Tcl_ObjCmdProc	ClockConfigureObjCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
ClockConvertlocaltoutcObjCmd	generic/tclClock.c	/^ClockConvertlocaltoutcObjCmd($/;"	f	typeref:typename:int	file:
ClockConvertlocaltoutcObjCmd	generic/tclClock.c	/^static Tcl_ObjCmdProc	ClockConvertlocaltoutcObjCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
ClockConvertlocaltoutcObjCmd	generic/tclClockClassic.c	/^ClockConvertlocaltoutcObjCmd($/;"	f	typeref:typename:int	file:
ClockConvertlocaltoutcObjCmd	generic/tclClockClassic.c	/^static Tcl_ObjCmdProc ClockConvertlocaltoutcObjCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
ClockDefaultCenturySwitch	generic/tclDate.h	/^#define ClockDefaultCenturySwitch /;"	d
ClockDefaultYearCentury	generic/tclDate.h	/^#define ClockDefaultYearCentury /;"	d
ClockDeleteCmdProc	generic/tclClock.c	/^ClockDeleteCmdProc($/;"	f	typeref:typename:void	file:
ClockDeleteCmdProc	generic/tclClockClassic.c	/^ClockDeleteCmdProc($/;"	f	typeref:typename:void	file:
ClockExtractJDAndSODFromSeconds	generic/tclDate.h	/^#define ClockExtractJDAndSODFromSeconds(/;"	d
ClockFinalize	generic/tclClock.c	/^ClockFinalize($/;"	f	typeref:typename:void	file:
ClockFmtObjType	generic/tclClockFmt.c	/^static const Tcl_ObjType ClockFmtObjType = {$/;"	v	typeref:typename:const Tcl_ObjType	file:
ClockFmtObj_DupInternalRep	generic/tclClockFmt.c	/^ClockFmtObj_DupInternalRep($/;"	f	typeref:typename:void	file:
ClockFmtObj_FreeInternalRep	generic/tclClockFmt.c	/^ClockFmtObj_FreeInternalRep($/;"	f	typeref:typename:void	file:
ClockFmtObj_SetFromAny	generic/tclClockFmt.c	/^ClockFmtObj_SetFromAny($/;"	f	typeref:typename:int	file:
ClockFmtObj_UpdateString	generic/tclClockFmt.c	/^ClockFmtObj_UpdateString($/;"	f	typeref:typename:void	file:
ClockFmtScnCmdArgs	generic/tclDate.h	/^typedef struct ClockFmtScnCmdArgs {$/;"	s
ClockFmtScnCmdArgs	generic/tclDate.h	/^} ClockFmtScnCmdArgs;$/;"	t	typeref:struct:ClockFmtScnCmdArgs
ClockFmtScnCmdArgsFlags	generic/tclDate.h	/^enum ClockFmtScnCmdArgsFlags {$/;"	g
ClockFmtScnStorage	generic/tclDate.h	/^struct ClockFmtScnStorage {$/;"	s
ClockFmtScnStorage	generic/tclDate.h	/^typedef struct ClockFmtScnStorage ClockFmtScnStorage;$/;"	t	typeref:struct:ClockFmtScnStorage
ClockFmtScnStorageAllocProc	generic/tclClockFmt.c	/^ClockFmtScnStorageAllocProc($/;"	f	typeref:typename:Tcl_HashEntry *	file:
ClockFmtScnStorageDelete	generic/tclClockFmt.c	/^ClockFmtScnStorageDelete($/;"	f	typeref:typename:void	file:
ClockFmtScnStorageFreeProc	generic/tclClockFmt.c	/^ClockFmtScnStorageFreeProc($/;"	f	typeref:typename:void	file:
ClockFmtScnStorageGC_In	generic/tclClockFmt.c	/^ClockFmtScnStorageGC_In($/;"	f	typeref:typename:void	file:
ClockFmtScnStorageHashKeyType	generic/tclClockFmt.c	/^static const Tcl_HashKeyType ClockFmtScnStorageHashKeyType = {$/;"	v	typeref:typename:const Tcl_HashKeyType	file:
ClockFmtScnStorage_GC	generic/tclClockFmt.c	/^static struct ClockFmtScnStorage_GC {$/;"	s	file:
ClockFmtScnStorage_GC	generic/tclClockFmt.c	/^} ClockFmtScnStorage_GC = {NULL, NULL, 0};$/;"	v	typeref:struct:ClockFmtScnStorage_GC
ClockFmtScnStorage_GC_Out	generic/tclClockFmt.c	/^ClockFmtScnStorage_GC_Out($/;"	f	typeref:typename:void	file:
ClockFmtToken_AMPM_Proc	generic/tclClockFmt.c	/^ClockFmtToken_AMPM_Proc($/;"	f	typeref:typename:int	file:
ClockFmtToken_HourAMPM_Proc	generic/tclClockFmt.c	/^ClockFmtToken_HourAMPM_Proc($/;"	f	typeref:typename:int	file:
ClockFmtToken_JDN_Proc	generic/tclClockFmt.c	/^ClockFmtToken_JDN_Proc($/;"	f	typeref:typename:int	file:
ClockFmtToken_LocaleERAYear_Proc	generic/tclClockFmt.c	/^ClockFmtToken_LocaleERAYear_Proc($/;"	f	typeref:typename:int	file:
ClockFmtToken_LocaleERA_Proc	generic/tclClockFmt.c	/^ClockFmtToken_LocaleERA_Proc($/;"	f	typeref:typename:int	file:
ClockFmtToken_StarDate_Proc	generic/tclClockFmt.c	/^ClockFmtToken_StarDate_Proc($/;"	f	typeref:typename:int	file:
ClockFmtToken_TimeZone_Proc	generic/tclClockFmt.c	/^ClockFmtToken_TimeZone_Proc($/;"	f	typeref:typename:int	file:
ClockFmtToken_WeekOfYear_Proc	generic/tclClockFmt.c	/^ClockFmtToken_WeekOfYear_Proc($/;"	f	typeref:typename:int	file:
ClockFormat	generic/tclClockFmt.c	/^ClockFormat($/;"	f	typeref:typename:int
ClockFormatNumericTimeZone	generic/tclClock.c	/^ClockFormatNumericTimeZone($/;"	f	typeref:typename:Tcl_Obj *
ClockFormatObjCmd	generic/tclClock.c	/^ClockFormatObjCmd($/;"	f	typeref:typename:int
ClockFormatObjCmd	generic/tclClock.c	/^static Tcl_ObjCmdProc	ClockFormatObjCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
ClockFormatToken	generic/tclDate.h	/^struct ClockFormatToken {$/;"	s
ClockFormatToken	generic/tclDate.h	/^typedef struct ClockFormatToken ClockFormatToken;$/;"	t	typeref:struct:ClockFormatToken
ClockFormatTokenMap	generic/tclDate.h	/^typedef struct ClockFormatTokenMap {$/;"	s
ClockFormatTokenMap	generic/tclDate.h	/^} ClockFormatTokenMap;$/;"	t	typeref:struct:ClockFormatTokenMap
ClockFormatTokenMapFlags	generic/tclDate.h	/^enum ClockFormatTokenMapFlags {$/;"	g
ClockFormatTokenProc	generic/tclDate.h	/^typedef int ClockFormatTokenProc($/;"	t	typeref:typename:int ()(ClockFmtScnCmdArgs * opts,DateFormat * dateFmt,ClockFormatToken * tok,int * val)
ClockFreeScan	generic/tclClock.c	/^ClockFreeScan($/;"	f	typeref:typename:int
ClockFrmObjGetLocFmtKey	generic/tclClockFmt.c	/^ClockFrmObjGetLocFmtKey($/;"	f	typeref:typename:Tcl_Obj *
ClockFrmScnClearCaches	generic/tclClockFmt.c	/^ClockFrmScnClearCaches(void)$/;"	f	typeref:typename:void
ClockFrmScnFinalize	generic/tclClockFmt.c	/^ClockFrmScnFinalize(void)$/;"	f	typeref:typename:void
ClockGetCurrentLocale	generic/tclClock.c	/^ClockGetCurrentLocale($/;"	f	typeref:typename:Tcl_Obj *	file:
ClockGetDateFields	generic/tclClock.c	/^ClockGetDateFields($/;"	f	typeref:typename:int
ClockGetOrParseFmtFormat	generic/tclClockFmt.c	/^ClockGetOrParseFmtFormat($/;"	f	typeref:typename:ClockFmtScnStorage *
ClockGetOrParseScanFormat	generic/tclClockFmt.c	/^ClockGetOrParseScanFormat($/;"	f	typeref:typename:ClockFmtScnStorage *
ClockGetSystemLocale	generic/tclClock.c	/^ClockGetSystemLocale($/;"	f	typeref:typename:Tcl_Obj *	file:
ClockGetSystemTimeZone	generic/tclClock.c	/^ClockGetSystemTimeZone($/;"	f	typeref:typename:Tcl_Obj *	file:
ClockGetTZData	generic/tclClock.c	/^ClockGetTZData($/;"	f	typeref:typename:Tcl_Obj *	file:
ClockGetdatefieldsObjCmd	generic/tclClock.c	/^ClockGetdatefieldsObjCmd($/;"	f	typeref:typename:int
ClockGetdatefieldsObjCmd	generic/tclClock.c	/^static Tcl_ObjCmdProc	ClockGetdatefieldsObjCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
ClockGetdatefieldsObjCmd	generic/tclClockClassic.c	/^ClockGetdatefieldsObjCmd($/;"	f	typeref:typename:int	file:
ClockGetdatefieldsObjCmd	generic/tclClockClassic.c	/^static Tcl_ObjCmdProc ClockGetdatefieldsObjCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
ClockGetenvObjCmd	generic/tclClock.c	/^ClockGetenvObjCmd($/;"	f	typeref:typename:int
ClockGetenvObjCmd	generic/tclClock.c	/^static Tcl_ObjCmdProc	ClockGetenvObjCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
ClockGetenvObjCmd	generic/tclClockClassic.c	/^ClockGetenvObjCmd($/;"	f	typeref:typename:int	file:
ClockGetenvObjCmd	generic/tclClockClassic.c	/^static Tcl_ObjCmdProc ClockGetenvObjCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
ClockGetjuliandayfromerayearmonthdayObjCmd	generic/tclClock.c	/^ClockGetjuliandayfromerayearmonthdayObjCmd($/;"	f	typeref:typename:int	file:
ClockGetjuliandayfromerayearmonthdayObjCmd	generic/tclClock.c	/^static Tcl_ObjCmdProc	ClockGetjuliandayfromerayearmonthdayObjCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
ClockGetjuliandayfromerayearmonthdayObjCmd	generic/tclClockClassic.c	/^ClockGetjuliandayfromerayearmonthdayObjCmd($/;"	f	typeref:typename:int	file:
ClockGetjuliandayfromerayearmonthdayObjCmd	generic/tclClockClassic.c	/^static Tcl_ObjCmdProc ClockGetjuliandayfromerayearmonthdayObjCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
ClockGetjuliandayfromerayearweekdayObjCmd	generic/tclClock.c	/^ClockGetjuliandayfromerayearweekdayObjCmd($/;"	f	typeref:typename:int	file:
ClockGetjuliandayfromerayearweekdayObjCmd	generic/tclClock.c	/^static Tcl_ObjCmdProc	ClockGetjuliandayfromerayearweekdayObjCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
ClockGetjuliandayfromerayearweekdayObjCmd	generic/tclClockClassic.c	/^ClockGetjuliandayfromerayearweekdayObjCmd($/;"	f	typeref:typename:int	file:
ClockGetjuliandayfromerayearweekdayObjCmd	generic/tclClockClassic.c	/^static Tcl_ObjCmdProc ClockGetjuliandayfromerayearweekdayObjCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
ClockInitDateInfo	generic/tclDate.h	/^ClockInitDateInfo($/;"	f	typeref:typename:void
ClockInitFmtScnArgs	generic/tclClock.c	/^ClockInitFmtScnArgs($/;"	f	typeref:typename:void	file:
ClockLastTZOffs	generic/tclDate.h	/^typedef struct ClockLastTZOffs {$/;"	s
ClockLastTZOffs	generic/tclDate.h	/^} ClockLastTZOffs;$/;"	t	typeref:struct:ClockLastTZOffs
ClockLiteral	generic/tclClockClassic.c	/^typedef enum ClockLiteral {$/;"	g	file:
ClockLiteral	generic/tclClockClassic.c	/^} ClockLiteral;$/;"	t	typeref:enum:ClockLiteral	file:
ClockLiteral	generic/tclDate.h	/^typedef enum ClockLiteral {$/;"	g
ClockLiteral	generic/tclDate.h	/^} ClockLiteral;$/;"	t	typeref:enum:ClockLiteral
ClockLocalizeFormat	generic/tclClockFmt.c	/^ClockLocalizeFormat($/;"	f	typeref:typename:Tcl_Obj *
ClockMCDict	generic/tclClock.c	/^ClockMCDict($/;"	f	typeref:typename:Tcl_Obj *
ClockMCGet	generic/tclClock.c	/^ClockMCGet($/;"	f	typeref:typename:Tcl_Obj *
ClockMCGetIdx	generic/tclClock.c	/^ClockMCGetIdx($/;"	f	typeref:typename:MODULE_SCOPE Tcl_Obj *
ClockMCGetListIdxTree	generic/tclClockFmt.c	/^ClockMCGetListIdxTree($/;"	f	typeref:typename:TclStrIdxTree *	file:
ClockMCGetMultiListIdxTree	generic/tclClockFmt.c	/^ClockMCGetMultiListIdxTree($/;"	f	typeref:typename:TclStrIdxTree *	file:
ClockMCSetIdx	generic/tclClock.c	/^ClockMCSetIdx($/;"	f	typeref:typename:int
ClockMicrosecondsObjCmd	generic/tclClock.c	/^ClockMicrosecondsObjCmd($/;"	f	typeref:typename:int
ClockMicrosecondsObjCmd	generic/tclClock.c	/^static Tcl_ObjCmdProc	ClockMicrosecondsObjCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
ClockMicrosecondsObjCmd	generic/tclClockClassic.c	/^ClockMicrosecondsObjCmd($/;"	f	typeref:typename:int	file:
ClockMicrosecondsObjCmd	generic/tclClockClassic.c	/^static Tcl_ObjCmdProc ClockMicrosecondsObjCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
ClockMillisecondsObjCmd	generic/tclClock.c	/^ClockMillisecondsObjCmd($/;"	f	typeref:typename:int
ClockMillisecondsObjCmd	generic/tclClock.c	/^static Tcl_ObjCmdProc	ClockMillisecondsObjCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
ClockMillisecondsObjCmd	generic/tclClockClassic.c	/^ClockMillisecondsObjCmd($/;"	f	typeref:typename:int	file:
ClockMillisecondsObjCmd	generic/tclClockClassic.c	/^static Tcl_ObjCmdProc ClockMillisecondsObjCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
ClockMsgCtLiteral	generic/tclDate.h	/^typedef enum ClockMsgCtLiteral {$/;"	g
ClockMsgCtLiteral	generic/tclDate.h	/^} ClockMsgCtLiteral;$/;"	t	typeref:enum:ClockMsgCtLiteral
ClockOperation	generic/tclClock.c	/^typedef enum ClockOperation {$/;"	g	file:
ClockOperation	generic/tclClock.c	/^} ClockOperation;$/;"	t	typeref:enum:ClockOperation	file:
ClockParseFmtScnArgs	generic/tclClock.c	/^ClockParseFmtScnArgs($/;"	f	typeref:typename:int	file:
ClockParseformatargsObjCmd	generic/tclClockClassic.c	/^ClockParseformatargsObjCmd($/;"	f	typeref:typename:int	file:
ClockParseformatargsObjCmd	generic/tclClockClassic.c	/^static Tcl_ObjCmdProc ClockParseformatargsObjCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
ClockSafeCatchCmd	generic/tclClock.c	/^ClockSafeCatchCmd($/;"	f	typeref:typename:int
ClockSafeCatchCmd	generic/tclClock.c	/^static Tcl_ObjCmdProc	ClockSafeCatchCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
ClockScan	generic/tclClockFmt.c	/^ClockScan($/;"	f	typeref:typename:int
ClockScanCommit	generic/tclClock.c	/^ClockScanCommit($/;"	f	typeref:typename:int	file:
ClockScanObjCmd	generic/tclClock.c	/^ClockScanObjCmd($/;"	f	typeref:typename:int
ClockScanObjCmd	generic/tclClock.c	/^static Tcl_ObjCmdProc	ClockScanObjCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
ClockScanToken	generic/tclDate.h	/^struct ClockScanToken {$/;"	s
ClockScanToken	generic/tclDate.h	/^typedef struct ClockScanToken ClockScanToken;$/;"	t	typeref:struct:ClockScanToken
ClockScanTokenMap	generic/tclDate.h	/^typedef struct ClockScanTokenMap {$/;"	s
ClockScanTokenMap	generic/tclDate.h	/^} ClockScanTokenMap;$/;"	t	typeref:struct:ClockScanTokenMap
ClockScanTokenProc	generic/tclDate.h	/^typedef int ClockScanTokenProc($/;"	t	typeref:typename:int ()(ClockFmtScnCmdArgs * opts,DateInfo * info,ClockScanToken * tok)
ClockScnToken_DayOfWeek_Proc	generic/tclClockFmt.c	/^ClockScnToken_DayOfWeek_Proc($/;"	f	typeref:typename:int	file:
ClockScnToken_JDN_Proc	generic/tclClockFmt.c	/^ClockScnToken_JDN_Proc($/;"	f	typeref:typename:int	file:
ClockScnToken_LocaleERA_Proc	generic/tclClockFmt.c	/^ClockScnToken_LocaleERA_Proc($/;"	f	typeref:typename:int	file:
ClockScnToken_LocaleListMatcher_Proc	generic/tclClockFmt.c	/^ClockScnToken_LocaleListMatcher_Proc($/;"	f	typeref:typename:int	file:
ClockScnToken_Month_Proc	generic/tclClockFmt.c	/^ClockScnToken_Month_Proc($/;"	f	typeref:typename:int	file:
ClockScnToken_StarDate_Proc	generic/tclClockFmt.c	/^ClockScnToken_StarDate_Proc($/;"	f	typeref:typename:int	file:
ClockScnToken_TimeZone_Proc	generic/tclClockFmt.c	/^ClockScnToken_TimeZone_Proc($/;"	f	typeref:typename:int	file:
ClockScnToken_amPmInd_Proc	generic/tclClockFmt.c	/^ClockScnToken_amPmInd_Proc($/;"	f	typeref:typename:int	file:
ClockSecondsObjCmd	generic/tclClock.c	/^ClockSecondsObjCmd($/;"	f	typeref:typename:int
ClockSecondsObjCmd	generic/tclClock.c	/^static Tcl_ObjCmdProc	ClockSecondsObjCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
ClockSecondsObjCmd	generic/tclClockClassic.c	/^ClockSecondsObjCmd($/;"	f	typeref:typename:int	file:
ClockSecondsObjCmd	generic/tclClockClassic.c	/^static Tcl_ObjCmdProc ClockSecondsObjCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
ClockSetupTimeZone	generic/tclClock.c	/^ClockSetupTimeZone($/;"	f	typeref:typename:Tcl_Obj *
ClockStrIdxTreeSearch	generic/tclClockFmt.c	/^ClockStrIdxTreeSearch($/;"	f	typeref:typename:int	file:
ClockTzStatic	generic/tclClock.c	/^typedef struct ClockTzStatic {$/;"	s	file:
ClockTzStatic	generic/tclClock.c	/^} ClockTzStatic;$/;"	t	typeref:struct:ClockTzStatic	file:
ClockValidDate	generic/tclClock.c	/^ClockValidDate($/;"	f	typeref:typename:int	file:
ClockWeekdaysOffs	generic/tclClock.c	/^ClockWeekdaysOffs($/;"	f	typeref:typename:int	file:
Clock_itoaw	generic/tclClockFmt.c	/^Clock_itoaw($/;"	f	typeref:typename:char *	file:
Clock_str2int	generic/tclClockFmt.c	/^Clock_str2int($/;"	f	typeref:typename:int	file:
Clock_str2int_no	generic/tclClockFmt.c	/^Clock_str2int_no($/;"	f	typeref:typename:void	file:
Clock_str2wideInt	generic/tclClockFmt.c	/^Clock_str2wideInt($/;"	f	typeref:typename:int	file:
Clock_str2wideInt_no	generic/tclClockFmt.c	/^Clock_str2wideInt_no($/;"	f	typeref:typename:void	file:
Clock_witoaw	generic/tclClockFmt.c	/^Clock_witoaw($/;"	f	typeref:typename:char *	file:
CloneClassMethod	generic/tclOO.c	/^CloneClassMethod($/;"	f	typeref:typename:int	file:
CloneForwardMethod	generic/tclOOMethod.c	/^CloneForwardMethod($/;"	f	typeref:typename:int	file:
CloneObjectMethod	generic/tclOO.c	/^CloneObjectMethod($/;"	f	typeref:typename:int	file:
CloneProcedureMethod	generic/tclOOMethod.c	/^CloneProcedureMethod($/;"	f	typeref:typename:int	file:
Close	compat/zlib/contrib/ada/zlib-streams.adb	/^   procedure Close (Stream : in out Stream_Type) is$/;"	r	package:ZLib.Streams	file:
Close	compat/zlib/contrib/ada/zlib-streams.ads	/^   procedure Close (Stream : in out Stream_Type);$/;"	R	packspec:ZLib.Streams
Close	compat/zlib/contrib/ada/zlib.adb	/^   procedure Close$/;"	r	package:ZLib	file:
Close	compat/zlib/contrib/ada/zlib.ads	/^   procedure Close$/;"	R	packspec:ZLib
CloseCallback	generic/tclIO.c	/^typedef struct CloseCallback {$/;"	s	file:
CloseCallback	generic/tclIO.c	/^} CloseCallback;$/;"	t	typeref:struct:CloseCallback	file:
CloseChannel	generic/tclIO.c	/^CloseChannel($/;"	f	typeref:typename:int	file:
CloseChannelPart	generic/tclIO.c	/^CloseChannelPart($/;"	f	typeref:typename:int	file:
CloseModeBits	unix/tclUnixChan.c	/^enum CloseModeBits {$/;"	g	file:
CloseQueuedQueries	library/http/http.tcl	/^proc http::CloseQueuedQueries {connId {token {}}} {$/;"	p	namespace:http
CloseSocket	library/http/http.tcl	/^proc http::CloseSocket {s {token {}}} {$/;"	p	namespace:http
CloseWrite	generic/tclIO.c	/^CloseWrite($/;"	f	typeref:typename:int	file:
CmdDelProc0	generic/tclTest.c	/^CmdDelProc0($/;"	f	typeref:typename:void	file:
CmdDelProc1	generic/tclTest.c	/^CmdDelProc1($/;"	f	typeref:typename:void	file:
CmdDelProc2	generic/tclTest.c	/^CmdDelProc2($/;"	f	typeref:typename:void	file:
CmdFrame	generic/tclInt.h	/^typedef struct CmdFrame {$/;"	s
CmdFrame	generic/tclInt.h	/^} CmdFrame;$/;"	t	typeref:struct:CmdFrame
CmdInfo	generic/tclBasic.c	/^} CmdInfo;$/;"	t	typeref:struct:__anon6e1456070208	file:
CmdLocation	generic/tclCompile.h	/^} CmdLocation;$/;"	t	typeref:struct:__anone79d5a530308
CmdProc0	generic/tclTest.c	/^CmdProc0($/;"	f	typeref:typename:int	file:
CmdProc1	generic/tclTest.c	/^CmdProc1($/;"	f	typeref:typename:int	file:
CmdProc1	generic/tclTest.c	/^static Tcl_CmdProc	CmdProc1;$/;"	v	typeref:typename:Tcl_CmdProc	file:
CmdProc2	generic/tclTest.c	/^CmdProc2($/;"	f	typeref:typename:int	file:
CmdProc2	generic/tclTest.c	/^static Tcl_CmdProc	CmdProc2;$/;"	v	typeref:typename:Tcl_CmdProc	file:
CmdTable	generic/tclTestProcBodyObj.c	/^} CmdTable;$/;"	t	typeref:struct:__anon88dcedc20108	file:
CmdTraceDeleteProc	generic/tclTest.c	/^CmdTraceDeleteProc($/;"	f	typeref:typename:void	file:
CmdTraceProc	generic/tclTest.c	/^CmdTraceProc($/;"	f	typeref:typename:void	file:
CmdWrapperInfo	generic/tclBasic.c	/^} CmdWrapperInfo;$/;"	t	typeref:struct:__anon6e1456070808	file:
CmpStr	generic/tclOOCall.c	/^CmpStr($/;"	f	typeref:typename:int	file:
Code	compat/zlib/contrib/ada/zlib.adb	/^      Code : Thin.Int;$/;"	v	subprogram:Close	file:
Code	compat/zlib/contrib/ada/zlib.adb	/^      Code : Thin.Int;$/;"	v	subprogram:Translate_Auto	file:
Code	compat/zlib/deflate.h	/^#define Code /;"	d
CodeRange	generic/tclAssembly.c	/^typedef struct CodeRange {$/;"	s	file:
CodeRange	generic/tclAssembly.c	/^} CodeRange;$/;"	t	typeref:struct:CodeRange	file:
Codec	compat/zlib/contrib/dotzlib/DotZLib/DotZLib.cs	/^    public interface Codec$/;"	i	namespace:DotZLib
CodecBase	compat/zlib/contrib/dotzlib/DotZLib/CodecBase.cs	/^		public CodecBase()$/;"	m	class:DotZLib.CodecBase
CodecBase	compat/zlib/contrib/dotzlib/DotZLib/CodecBase.cs	/^	public abstract class CodecBase : Codec, IDisposable$/;"	c	namespace:DotZLib
CombineDwords	win/tclWinChan.c	/^CombineDwords($/;"	f	typeref:typename:ULONGLONG	file:
CombinedTraceVarInfo	generic/tclTrace.c	/^} CombinedTraceVarInfo;$/;"	t	typeref:struct:__anonfe0b53740208	file:
Command	generic/tclInt.h	/^typedef struct Command {$/;"	s
Command	generic/tclInt.h	/^} Command;$/;"	t	typeref:struct:Command
CommandComplete	generic/tclParse.c	/^CommandComplete($/;"	f	typeref:typename:int	file:
CommandDeleted	unix/dltest/pkgua.c	/^CommandDeleted(void *clientData)$/;"	f	typeref:typename:void	file:
CommandObjTraceDeleted	generic/tclTrace.c	/^CommandObjTraceDeleted($/;"	f	typeref:typename:void	file:
CommandTrace	generic/tclInt.h	/^typedef struct CommandTrace {$/;"	s
CommandTrace	generic/tclInt.h	/^} CommandTrace;$/;"	t	typeref:struct:CommandTrace
CommonGetsCleanup	generic/tclIO.c	/^CommonGetsCleanup($/;"	f	typeref:typename:void	file:
Compare	compat/zlib/contrib/ada/mtest.adb	/^         procedure Compare (Item : in Stream_Element_Array) is$/;"	r	subprogram:Further	file:
Compare	compat/zlib/contrib/ada/mtest.adb	/^         procedure Compare (Item : in Stream_Element_Array);$/;"	R	subprogram:Further	file:
CompareArrayKeys	generic/tclHash.c	/^CompareArrayKeys($/;"	f	typeref:typename:int	file:
CompareExtension	library/package.tcl	/^proc tcl::Pkg::CompareExtension {fileName {ext {}}} {$/;"	p	namespace:tcl::Pkg
CompareVarKeys	generic/tclVar.c	/^CompareVarKeys($/;"	f	typeref:typename:int	file:
CompareVersions	generic/tclPkg.c	/^CompareVersions($/;"	f	typeref:typename:int	file:
Compare_Files	compat/zlib/contrib/ada/test.adb	/^   procedure Compare_Files (Left, Right : String) is$/;"	r	subprogram:Test	file:
Compare_Files	compat/zlib/contrib/ada/test.adb	/^   procedure Compare_Files (Left, Right : String);$/;"	R	subprogram:Test	file:
Compare_First	compat/zlib/contrib/ada/mtest.adb	/^      Compare_First : Stream_Element_Offset;$/;"	v	task:Test_Task	file:
Compare_Streams	compat/zlib/contrib/ada/test.adb	/^   procedure Compare_Streams$/;"	R	subprogram:Test	file:
Compare_Streams	compat/zlib/contrib/ada/test.adb	/^   procedure Compare_Streams$/;"	r	subprogram:Test	file:
Compare_Write	compat/zlib/contrib/ada/mtest.adb	/^         procedure Compare_Write is new ZLib.Write (Write => Compare);$/;"	r	subprogram:Further	file:
CompileAssembleObj	generic/tclAssembly.c	/^CompileAssembleObj($/;"	f	typeref:typename:ByteCode *	file:
CompileAssociativeBinaryOpCmd	generic/tclCompCmdsSZ.c	/^CompileAssociativeBinaryOpCmd($/;"	f	typeref:typename:int	file:
CompileBasicNArgCommand	generic/tclEnsemble.c	/^CompileBasicNArgCommand($/;"	f	typeref:typename:int	file:
CompileCmdCompileProc	generic/tclCompile.c	/^CompileCmdCompileProc($/;"	f	typeref:typename:int	file:
CompileCmdLiteral	generic/tclCompile.c	/^CompileCmdLiteral($/;"	f	typeref:typename:void	file:
CompileCommandTokens	generic/tclCompile.c	/^CompileCommandTokens($/;"	f	typeref:typename:int	file:
CompileComparisonOpCmd	generic/tclCompCmdsSZ.c	/^CompileComparisonOpCmd($/;"	f	typeref:typename:int	file:
CompileDictEachCmd	generic/tclCompCmds.c	/^CompileDictEachCmd($/;"	f	typeref:typename:int
CompileEachloopCmd	generic/tclCompCmds.c	/^CompileEachloopCmd($/;"	f	typeref:typename:int	file:
CompileEmbeddedScript	generic/tclAssembly.c	/^CompileEmbeddedScript($/;"	f	typeref:typename:void	file:
CompileEnv	generic/tclCompile.h	/^typedef struct CompileEnv {$/;"	s
CompileEnv	generic/tclCompile.h	/^} CompileEnv;$/;"	t	typeref:struct:CompileEnv
CompileExpanded	generic/tclCompile.c	/^CompileExpanded($/;"	f	typeref:typename:void	file:
CompileExprObj	generic/tclExecute.c	/^CompileExprObj($/;"	f	typeref:typename:ByteCode *	file:
CompileExprTree	generic/tclCompExpr.c	/^CompileExprTree($/;"	f	typeref:typename:void	file:
CompileHookProc	generic/tclInt.h	/^typedef int (CompileHookProc)(Tcl_Interp *interp,$/;"	t	typeref:typename:int ()(Tcl_Interp * interp,struct CompileEnv * compEnvPtr,void * clientData)
CompileProc	generic/tclInt.h	/^typedef int (CompileProc)(Tcl_Interp *interp, Tcl_Parse *parsePtr,$/;"	t	typeref:typename:int ()(Tcl_Interp * interp,Tcl_Parse * parsePtr,struct Command * cmdPtr,struct CompileEnv * compEnvPtr)
CompileRegexp	generic/tclRegexp.c	/^CompileRegexp($/;"	f	typeref:typename:TclRegexp *	file:
CompileReturnInternal	generic/tclCompCmdsGR.c	/^CompileReturnInternal($/;"	f	typeref:typename:void	file:
CompileStrictlyBinaryOpCmd	generic/tclCompCmdsSZ.c	/^CompileStrictlyBinaryOpCmd($/;"	f	typeref:typename:int	file:
CompileSubstObj	generic/tclCompile.c	/^CompileSubstObj($/;"	f	typeref:typename:ByteCode *	file:
CompileToInvokedCommand	generic/tclEnsemble.c	/^CompileToInvokedCommand($/;"	f	typeref:typename:void	file:
CompileTokens	generic/tclCompile.h	/^#define CompileTokens(/;"	d
CompileUnaryOpCmd	generic/tclCompCmdsSZ.c	/^CompileUnaryOpCmd($/;"	f	typeref:typename:int	file:
CompileWord	generic/tclCompile.h	/^#define CompileWord(/;"	d
CompiledLocal	generic/tclInt.h	/^typedef struct CompiledLocal {$/;"	s
CompiledLocal	generic/tclInt.h	/^} CompiledLocal;$/;"	t	typeref:struct:CompiledLocal
Compress	compat/zlib/contrib/ada/buffer_demo.adb	/^      Compress : declare$/;"	i	anon:declare	file:
CompressBuf	compat/zlib/contrib/delphi/ZLib.pas	/^procedure CompressBuf(const InBuf: Pointer; InBytes: Integer;$/;"	p
CompressLevel	compat/zlib/contrib/dotzlib/DotZLib/DotZLib.cs	/^    public enum CompressLevel : int$/;"	g	namespace:DotZLib
Compressed_Data	compat/zlib/contrib/ada/buffer_demo.adb	/^      Compressed_Data : Stream_Element_Array (1 .. Text'Length);$/;"	v	anon:declare	file:
Compression	compat/zlib/contrib/ada/zlib.ads	/^      Compression : Boolean;$/;"	v	packspec:ZLib	file:
Compression_Level	compat/zlib/contrib/ada/zlib.ads	/^   type Compression_Level is new Integer range -1 .. 9;$/;"	t	packspec:ZLib
Compression_Method	compat/zlib/contrib/ada/zlib.ads	/^   type Compression_Method is new Integer range 8 .. 8;$/;"	t	packspec:ZLib	file:
Compression_Method	compat/zlib/contrib/ada/zlib.ads	/^   type Compression_Method is private;$/;"	t	packspec:ZLib
Compressor	compat/zlib/contrib/ada/buffer_demo.adb	/^         Compressor : Filter_Type;$/;"	v	identifier:Compress	file:
ComputeNameInArchive	generic/tclZipfs.c	/^ComputeNameInArchive($/;"	f	typeref:typename:const char *	file:
ComputeScale	generic/tclStrToD.c	/^ComputeScale($/;"	f	typeref:typename:void	file:
ConfigDictDeleteProc	generic/tclConfig.c	/^ConfigDictDeleteProc($/;"	f	typeref:typename:void	file:
ConfigDictDeleteProc	generic/tclConfig.c	/^static Tcl_InterpDeleteProc	ConfigDictDeleteProc;$/;"	v	typeref:typename:Tcl_InterpDeleteProc	file:
Configurable_ClassReadableProps_Get	generic/tclOODefineCmds.c	/^Configurable_ClassReadableProps_Get($/;"	f	typeref:typename:int	file:
Configurable_ClassReadableProps_Set	generic/tclOODefineCmds.c	/^Configurable_ClassReadableProps_Set($/;"	f	typeref:typename:int	file:
Configurable_ClassWritableProps_Get	generic/tclOODefineCmds.c	/^Configurable_ClassWritableProps_Get($/;"	f	typeref:typename:int	file:
Configurable_ClassWritableProps_Set	generic/tclOODefineCmds.c	/^Configurable_ClassWritableProps_Set($/;"	f	typeref:typename:int	file:
Configurable_Getter	generic/tclOOProp.c	/^Configurable_Getter($/;"	f	typeref:typename:int	file:
Configurable_ObjectReadableProps_Get	generic/tclOODefineCmds.c	/^Configurable_ObjectReadableProps_Get($/;"	f	typeref:typename:int	file:
Configurable_ObjectReadableProps_Set	generic/tclOODefineCmds.c	/^Configurable_ObjectReadableProps_Set($/;"	f	typeref:typename:int	file:
Configurable_ObjectWritableProps_Get	generic/tclOODefineCmds.c	/^Configurable_ObjectWritableProps_Get($/;"	f	typeref:typename:int	file:
Configurable_ObjectWritableProps_Set	generic/tclOODefineCmds.c	/^Configurable_ObjectWritableProps_Set($/;"	f	typeref:typename:int	file:
Configurable_Setter	generic/tclOOProp.c	/^Configurable_Setter($/;"	f	typeref:typename:int	file:
ConfigureNewSocket	library/http/http.tcl	/^proc http::ConfigureNewSocket {token sockOld DoLater} {$/;"	p	namespace:http
Connect	library/http/http.tcl	/^proc http::Connect {token proto phost srvurl} {$/;"	p	namespace:http
Connected	library/http/http.tcl	/^proc http::Connected {token proto phost srvurl} {$/;"	p	namespace:http
ConsoleBlockModeProc	win/tclWinConsole.c	/^ConsoleBlockModeProc($/;"	f	typeref:typename:int	file:
ConsoleChannelInfo	win/tclWinConsole.c	/^typedef struct ConsoleChannelInfo {$/;"	s	file:
ConsoleChannelInfo	win/tclWinConsole.c	/^} ConsoleChannelInfo;$/;"	t	typeref:struct:ConsoleChannelInfo	file:
ConsoleCheckProc	win/tclWinConsole.c	/^ConsoleCheckProc($/;"	f	typeref:typename:void	file:
ConsoleCloseProc	win/tclWinConsole.c	/^ConsoleCloseProc($/;"	f	typeref:typename:int	file:
ConsoleDataAvailable	win/tclWinConsole.c	/^ ConsoleDataAvailable($/;"	f	typeref:typename:int	file:
ConsoleEvent	win/tclWinConsole.c	/^} ConsoleEvent;$/;"	t	typeref:struct:__anonf117b5370108	file:
ConsoleEventProc	win/tclWinConsole.c	/^ConsoleEventProc($/;"	f	typeref:typename:int	file:
ConsoleExitHandler	win/tclWinConsole.c	/^ConsoleExitHandler($/;"	f	typeref:typename:void	file:
ConsoleGetHandleProc	win/tclWinConsole.c	/^ConsoleGetHandleProc($/;"	f	typeref:typename:int	file:
ConsoleGetOptionProc	win/tclWinConsole.c	/^ConsoleGetOptionProc($/;"	f	typeref:typename:int	file:
ConsoleHandleInfo	win/tclWinConsole.c	/^typedef struct ConsoleHandleInfo {$/;"	s	file:
ConsoleHandleInfo	win/tclWinConsole.c	/^} ConsoleHandleInfo;$/;"	t	typeref:struct:ConsoleHandleInfo	file:
ConsoleInit	win/tclWinConsole.c	/^ConsoleInit(void)$/;"	f	typeref:typename:void	file:
ConsoleInputProc	win/tclWinConsole.c	/^ConsoleInputProc($/;"	f	typeref:typename:int	file:
ConsoleOutputProc	win/tclWinConsole.c	/^ConsoleOutputProc($/;"	f	typeref:typename:int	file:
ConsoleReaderThread	win/tclWinConsole.c	/^ConsoleReaderThread($/;"	f	typeref:typename:DWORD WINAPI	file:
ConsoleSetOptionProc	win/tclWinConsole.c	/^ConsoleSetOptionProc($/;"	f	typeref:typename:int	file:
ConsoleSetupProc	win/tclWinConsole.c	/^ConsoleSetupProc($/;"	f	typeref:typename:void
ConsoleThreadActionProc	win/tclWinConsole.c	/^ConsoleThreadActionProc($/;"	f	typeref:typename:void	file:
ConsoleWatchProc	win/tclWinConsole.c	/^ConsoleWatchProc($/;"	f	typeref:typename:void	file:
ConsoleWriterThread	win/tclWinConsole.c	/^ConsoleWriterThread($/;"	f	typeref:typename:DWORD WINAPI	file:
ConstructorErrorHandler	generic/tclOOMethod.c	/^ConstructorErrorHandler($/;"	f	typeref:typename:void	file:
ConstructorErrorHandler	generic/tclOOMethod.c	/^static ProcErrorProc	ConstructorErrorHandler;$/;"	v	typeref:typename:ProcErrorProc	file:
ContLineLoc	generic/tclInt.h	/^typedef struct ContLineLoc {$/;"	s
ContLineLoc	generic/tclInt.h	/^} ContLineLoc;$/;"	t	typeref:struct:ContLineLoc
ContainsMountPoint	generic/tclZipfs.c	/^ContainsMountPoint($/;"	f	typeref:typename:int	file:
Contents	README.md	/^## Contents$/;"	s	chapter:README:  Tcl
ContextObjectContainsConstant	generic/tclVar.c	/^ContextObjectContainsConstant($/;"	f	typeref:typename:int	file:
Continuous	compat/zlib/contrib/ada/read.adb	/^   Continuous  : constant Boolean          := False;$/;"	n	subprogram:Read	file:
Continuous	compat/zlib/contrib/ada/test.adb	/^   Continuous  : constant Boolean := False;$/;"	n	subprogram:Test	file:
Control	tests/httpd11.tcl	/^proc Control {chan} {$/;"	p
Conversation	win/tclWinDde.c	/^typedef struct Conversation {$/;"	s	file:
Conversation	win/tclWinDde.c	/^} Conversation;$/;"	t	typeref:struct:Conversation	file:
ConvertDWORD	win/tclWinReg.c	/^ConvertDWORD($/;"	f	typeref:typename:DWORD	file:
ConvertError	generic/tclZlib.c	/^ConvertError($/;"	f	typeref:typename:void	file:
ConvertErrorToList	generic/tclZlib.c	/^ConvertErrorToList($/;"	f	typeref:typename:Tcl_Obj *	file:
ConvertFileNameFormat	win/tclWinFCmd.c	/^ConvertFileNameFormat($/;"	f	typeref:typename:int	file:
ConvertLegacyTimeZone	library/clockclassic.tcl	/^proc ConvertLegacyTimeZone { tzname } {$/;"	p
ConvertLocalToUTC	generic/tclClock.c	/^ConvertLocalToUTC($/;"	f	typeref:typename:int	file:
ConvertLocalToUTC	generic/tclClockClassic.c	/^ConvertLocalToUTC($/;"	f	typeref:typename:int	file:
ConvertLocalToUTCUsingC	generic/tclClock.c	/^ConvertLocalToUTCUsingC($/;"	f	typeref:typename:int	file:
ConvertLocalToUTCUsingC	generic/tclClockClassic.c	/^ConvertLocalToUTCUsingC($/;"	f	typeref:typename:int	file:
ConvertLocalToUTCUsingTable	generic/tclClock.c	/^ConvertLocalToUTCUsingTable($/;"	f	typeref:typename:int	file:
ConvertLocalToUTCUsingTable	generic/tclClockClassic.c	/^ConvertLocalToUTCUsingTable($/;"	f	typeref:typename:int	file:
ConvertLocale	library/msgcat/msgcat.tcl	/^proc msgcat::mcutil::ConvertLocale {value} {$/;"	p	namespace:msgcat::mcutil
ConvertTreeToTokens	generic/tclCompExpr.c	/^ConvertTreeToTokens($/;"	f	typeref:typename:void	file:
ConvertUTCToLocal	generic/tclClock.c	/^ConvertUTCToLocal($/;"	f	typeref:typename:int
ConvertUTCToLocal	generic/tclClockClassic.c	/^ConvertUTCToLocal($/;"	f	typeref:typename:int	file:
ConvertUTCToLocalUsingC	generic/tclClock.c	/^ConvertUTCToLocalUsingC($/;"	f	typeref:typename:int	file:
ConvertUTCToLocalUsingC	generic/tclClockClassic.c	/^ConvertUTCToLocalUsingC($/;"	f	typeref:typename:int	file:
ConvertUTCToLocalUsingTable	generic/tclClock.c	/^ConvertUTCToLocalUsingTable($/;"	f	typeref:typename:int	file:
ConvertUTCToLocalUsingTable	generic/tclClockClassic.c	/^ConvertUTCToLocalUsingTable($/;"	f	typeref:typename:int	file:
ConvertZeroEffectToNOP	generic/tclOptimize.c	/^ConvertZeroEffectToNOP($/;"	f	typeref:typename:void	file:
CopyArray	unix/tclUnixCompat.c	/^CopyArray($/;"	f	typeref:typename:int	file:
CopyCallback	generic/tclExecute.c	/^CopyCallback($/;"	f	typeref:typename:int	file:
CopyCallback	generic/tclExecute.c	/^static Tcl_NRPostProc	CopyCallback;$/;"	v	typeref:typename:Tcl_NRPostProc	file:
CopyData	generic/tclIO.c	/^CopyData($/;"	f	typeref:typename:int	file:
CopyDecrRefCount	generic/tclIO.c	/^CopyDecrRefCount($/;"	f	typeref:typename:void	file:
CopyDirectory	library/init.tcl	/^proc tcl::CopyDirectory {action src dest} {$/;"	p	namespace:tcl
CopyEventProc	generic/tclIO.c	/^CopyEventProc($/;"	f	typeref:typename:void	file:
CopyFileAtts	unix/tclUnixFCmd.c	/^CopyFileAtts($/;"	f	typeref:typename:int	file:
CopyGrp	unix/tclUnixCompat.c	/^CopyGrp($/;"	f	typeref:typename:int	file:
CopyHostent	unix/tclUnixCompat.c	/^CopyHostent($/;"	f	typeref:typename:int	file:
CopyImageFile	generic/tclZipfs.c	/^CopyImageFile($/;"	f	typeref:typename:int	file:
CopyNumber	generic/tclBinary.c	/^CopyNumber($/;"	f	typeref:typename:void	file:
CopyPwd	unix/tclUnixCompat.c	/^CopyPwd($/;"	f	typeref:typename:int	file:
CopyRenameOneFile	generic/tclFCmd.c	/^CopyRenameOneFile($/;"	f	typeref:typename:int	file:
CopyState	generic/tclIO.c	/^typedef struct CopyState {$/;"	s	file:
CopyState	generic/tclIO.c	/^} CopyState;$/;"	t	typeref:struct:CopyState	file:
CopyString	unix/tclUnixCompat.c	/^CopyString($/;"	f	typeref:typename:int	file:
Copy_Streams	compat/zlib/contrib/ada/test.adb	/^   procedure Copy_Streams$/;"	R	subprogram:Test	file:
Copy_Streams	compat/zlib/contrib/ada/test.adb	/^   procedure Copy_Streams$/;"	r	subprogram:Test	file:
CorContext	generic/tclInt.h	/^typedef struct CorContext {$/;"	s
CorContext	generic/tclInt.h	/^} CorContext;$/;"	t	typeref:struct:CorContext
CoroTypeObjCmd	generic/tclBasic.c	/^CoroTypeObjCmd($/;"	f	typeref:typename:int	file:
CoroTypeObjCmd	generic/tclBasic.c	/^static Tcl_ObjCmdProc CoroTypeObjCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
CoroutineData	generic/tclInt.h	/^typedef struct CoroutineData {$/;"	s
CoroutineData	generic/tclInt.h	/^} CoroutineData;$/;"	t	typeref:struct:CoroutineData
Count	compat/zlib/contrib/ada/zlib.ads	/^   subtype Count is Ada.Streams.Stream_Element_Count;$/;"	u	packspec:ZLib
CountSlashes	generic/tclZipfs.c	/^CountSlashes($/;"	f	typeref:typename:size_t	file:
Count_IO	compat/zlib/contrib/ada/test.adb	/^      package Count_IO is new Integer_IO (ZLib.Count);$/;"	P	subprogram:Print_Statistic	file:
Create	compat/zlib/contrib/ada/zlib-streams.adb	/^   procedure Create$/;"	r	package:ZLib.Streams	file:
Create	compat/zlib/contrib/ada/zlib-streams.ads	/^   procedure Create$/;"	R	packspec:ZLib.Streams
Create	compat/zlib/contrib/delphi/ZLib.pas	/^    constructor Create(CompressionLevel: TCompressionLevel; Dest: TStream);$/;"	p
Create	compat/zlib/contrib/delphi/ZLib.pas	/^    constructor Create(Source: TStream);$/;"	p
Create	compat/zlib/contrib/delphi/ZLib.pas	/^    constructor Create(Strm: TStream);$/;"	p
Create	library/package.tcl	/^proc ::tcl::Pkg::Create {args} {$/;"	p	namespace:::tcl::Pkg
CreateChainEntry	generic/tclDictObj.c	/^CreateChainEntry($/;"	f	typeref:typename:Tcl_HashEntry *	file:
CreateChildEntry	generic/tclNamesp.c	/^CreateChildEntry($/;"	f	typeref:typename:Tcl_HashEntry *	file:
CreateCmdInNS	generic/tclOO.c	/^CreateCmdInNS($/;"	f	typeref:typename:void	file:
CreateHashEntry	generic/tclHash.c	/^CreateHashEntry($/;"	f	typeref:typename:Tcl_HashEntry *	file:
CreateMirrorJumpTable	generic/tclAssembly.c	/^CreateMirrorJumpTable($/;"	f	typeref:typename:int	file:
CreateScriptRecord	generic/tclIO.c	/^CreateScriptRecord($/;"	f	typeref:typename:void	file:
CreateToken	library/http/http.tcl	/^proc http::CreateToken {url args} {$/;"	p	namespace:http
CreatedCommandProc	generic/tclTest.c	/^CreatedCommandProc($/;"	f	typeref:typename:int	file:
CreatedCommandProc	generic/tclTest.c	/^static Tcl_CmdProc	CreatedCommandProc;$/;"	v	typeref:typename:Tcl_CmdProc	file:
CreatedCommandProc2	generic/tclTest.c	/^CreatedCommandProc2($/;"	f	typeref:typename:int	file:
CreatedCommandProc2	generic/tclTest.c	/^static Tcl_CmdProc	CreatedCommandProc2;$/;"	v	typeref:typename:Tcl_CmdProc	file:
Curr_Dur	compat/zlib/contrib/ada/test.adb	/^      Curr_Dur : Duration := Clock - Time_Stamp;$/;"	v	subprogram:Print_Statistic	file:
CurrentOffset	generic/tclCompile.h	/^#define CurrentOffset(/;"	d
CurrentlyInvoked	generic/tclOOBasic.c	/^#define CurrentlyInvoked(/;"	d	file:
CutChannel	generic/tclIO.c	/^CutChannel($/;"	f	typeref:typename:void	file:
D	compat/zlib/contrib/ada/zlib.adb	/^         D : Unsigned_32 := Data;$/;"	v	subprogram:Put_32	file:
DANGLINGELEMENT	generic/tclVar.c	/^static const char DANGLINGELEMENT[] =$/;"	v	typeref:typename:const char[]	file:
DANGLINGVAR	generic/tclVar.c	/^static const char DANGLINGVAR[] =$/;"	v	typeref:typename:const char[]	file:
DASH_PUNCTUATION	generic/tclUniData.c	/^    DASH_PUNCTUATION,$/;"	e	enum:__anon910316cb0103	file:
DATA	compat/zlib/nintendods/Makefile	/^DATA		:=	data$/;"	m
DATA_ERROR	compat/zlib/contrib/ada/zlib.adb	/^       DATA_ERROR,$/;"	l	type:Return_Code_Enum	file:
DCM	generic/tclOO.c	/^#define DCM(/;"	d	file:
DCheck	compat/zlib/contrib/delphi/ZLib.pas	/^function DCheck(code: Integer): Integer;$/;"	f	typeref:typename:Integer
DDEDOTVER	win/Makefile.in	/^DDEDOTVER		= @TCL_DDE_MAJOR_VERSION@.@TCL_DDE_MINOR_VERSION@$/;"	m
DDEVER	win/Makefile.in	/^DDEVER			= @TCL_DDE_MAJOR_VERSION@@TCL_DDE_MINOR_VERSION@$/;"	m
DDE_DLL_FILE	win/Makefile.in	/^DDE_DLL_FILE		= tcl9dde$(DDEVER)${DLLSUFFIX}$/;"	m
DDE_EVAL	win/tclWinDde.c	/^	DDE_EVAL$/;"	e	enum:DdeObjCmd::DdeSubcommands	file:
DDE_EXECUTE	win/tclWinDde.c	/^	DDE_SERVERNAME, DDE_EXECUTE, DDE_POKE, DDE_REQUEST, DDE_SERVICES,$/;"	e	enum:DdeObjCmd::DdeSubcommands	file:
DDE_EXEC_ASYNC	win/tclWinDde.c	/^	DDE_EXEC_ASYNC, DDE_EXEC_BINARY$/;"	e	enum:DdeObjCmd::DdeExecOptions	file:
DDE_EXEC_BINARY	win/tclWinDde.c	/^	DDE_EXEC_ASYNC, DDE_EXEC_BINARY$/;"	e	enum:DdeObjCmd::DdeExecOptions	file:
DDE_FLAG_ASYNC	win/tclWinDde.c	/^#define DDE_FLAG_ASYNC /;"	d	file:
DDE_FLAG_BINARY	win/tclWinDde.c	/^#define DDE_FLAG_BINARY /;"	d	file:
DDE_FLAG_FORCE	win/tclWinDde.c	/^#define DDE_FLAG_FORCE /;"	d	file:
DDE_LIB_FILE	win/Makefile.in	/^DDE_LIB_FILE		= @LIBPREFIX@tcldde$(DDEVER)${DLLSUFFIX}${LIBSUFFIX}$/;"	m
DDE_OBJS	win/Makefile.in	/^DDE_OBJS = tclWinDde.$(OBJEXT)$/;"	m
DDE_POKE	win/tclWinDde.c	/^	DDE_SERVERNAME, DDE_EXECUTE, DDE_POKE, DDE_REQUEST, DDE_SERVICES,$/;"	e	enum:DdeObjCmd::DdeSubcommands	file:
DDE_REQUEST	win/tclWinDde.c	/^	DDE_SERVERNAME, DDE_EXECUTE, DDE_POKE, DDE_REQUEST, DDE_SERVICES,$/;"	e	enum:DdeObjCmd::DdeSubcommands	file:
DDE_SERVERNAME	win/tclWinDde.c	/^	DDE_SERVERNAME, DDE_EXECUTE, DDE_POKE, DDE_REQUEST, DDE_SERVICES,$/;"	e	enum:DdeObjCmd::DdeSubcommands	file:
DDE_SERVERNAME_EXACT	win/tclWinDde.c	/^	DDE_SERVERNAME_EXACT, DDE_SERVERNAME_HANDLER, DDE_SERVERNAME_LAST,$/;"	e	enum:DdeObjCmd::DdeSrvOptions	file:
DDE_SERVERNAME_HANDLER	win/tclWinDde.c	/^	DDE_SERVERNAME_EXACT, DDE_SERVERNAME_HANDLER, DDE_SERVERNAME_LAST,$/;"	e	enum:DdeObjCmd::DdeSrvOptions	file:
DDE_SERVERNAME_LAST	win/tclWinDde.c	/^	DDE_SERVERNAME_EXACT, DDE_SERVERNAME_HANDLER, DDE_SERVERNAME_LAST,$/;"	e	enum:DdeObjCmd::DdeSrvOptions	file:
DDE_SERVICES	win/tclWinDde.c	/^	DDE_SERVERNAME, DDE_EXECUTE, DDE_POKE, DDE_REQUEST, DDE_SERVICES,$/;"	e	enum:DdeObjCmd::DdeSubcommands	file:
DDataAvail	compat/zlib/contrib/dotzlib/DotZLib/UnitTests.cs	/^        private void DDataAvail(byte[] data, int startIndex, int count)$/;"	m	class:DotZLibTests.DeflateInflateTests	file:
DEBUGGING DIFFICULT MEMORY CORRUPTION PROBLEMS	doc/TCL_MEM_DEBUG.3	/^.SH "DEBUGGING DIFFICULT MEMORY CORRUPTION PROBLEMS"$/;"	s	title:TCL_MEM_DEBUG
DEBUG_PRINT	generic/tclAssembly.c	/^#define DEBUG_PRINT	/;"	d	file:
DEBUG_PRINT	generic/tclAssembly.c	/^#define DEBUG_PRINT(/;"	d	file:
DEBUG_TYPE_FRAME	generic/tclInterp.c	/^	DEBUG_TYPE_FRAME$/;"	e	enum:ChildDebugCmd::DebugTypes	file:
DECACHE_STACK_INFO	generic/tclExecute.c	/^#define DECACHE_STACK_INFO(/;"	d	file:
DECIMAL	generic/tclStrToD.c	/^	HEXADECIMAL, OCTAL, DECIMAL,$/;"	e	enum:TclParseNumber::State	file:
DECIMAL_DIGIT_NUMBER	generic/tclUniData.c	/^    DECIMAL_DIGIT_NUMBER,$/;"	e	enum:__anon910316cb0103	file:
DEFAULT_BUFFER_SIZE	generic/tclZlib.c	/^#define DEFAULT_BUFFER_SIZE	/;"	d	file:
DEFAULT_COPY_BLOCK_SIZE	unix/tclUnixFCmd.c	/^#define DEFAULT_COPY_BLOCK_SIZE /;"	d	file:
DEFAULT_PRIMARY_PROMPT	generic/tclMain.c	/^static const char DEFAULT_PRIMARY_PROMPT[] = "% ";$/;"	v	typeref:typename:const char[]	file:
DEFAULT_TEMP_DIR_PREFIX	unix/tclUnixFCmd.c	/^#define DEFAULT_TEMP_DIR_PREFIX	/;"	d	file:
DEFAULT_TEMP_DIR_PREFIX	win/tclWinFCmd.c	/^#define DEFAULT_TEMP_DIR_PREFIX	/;"	d	file:
DEFAULT_WRITE_MAX_SIZE	generic/tclZipfs.c	/^#define DEFAULT_WRITE_MAX_SIZE	/;"	d	file:
DEFINE_CHAIN_STATIC_SIZE	generic/tclOOCall.c	/^#define DEFINE_CHAIN_STATIC_SIZE /;"	d	file:
DEFINE_FOR_CLASS	generic/tclOOCall.c	/^    DEFINE_FOR_CLASS = 0x2000000$/;"	e	enum:CallChainFlags	file:
DEFINITE_PROTECTED	generic/tclOOCall.c	/^    DEFINITE_PROTECTED = 0x100000,$/;"	e	enum:CallChainFlags	file:
DEFINITE_PUBLIC	generic/tclOOCall.c	/^    DEFINITE_PUBLIC = 0x200000,$/;"	e	enum:CallChainFlags	file:
DEFLATE_H	compat/zlib/deflate.h	/^#define DEFLATE_H$/;"	d
DEF_MEM_LEVEL	compat/zlib/contrib/minizip/zip.c	/^#  define DEF_MEM_LEVEL /;"	d	file:
DEF_MEM_LEVEL	compat/zlib/contrib/minizip/zip.h	/^#    define DEF_MEM_LEVEL /;"	d
DEF_MEM_LEVEL	compat/zlib/gzguts.h	/^#  define DEF_MEM_LEVEL /;"	d
DEF_MEM_LEVEL	compat/zlib/zutil.h	/^#  define DEF_MEM_LEVEL /;"	d
DEF_WBITS	compat/zlib/zutil.h	/^#  define DEF_WBITS /;"	d
DELAY	tests/httpTestScript.tcl	/^proc httpTestScript::DELAY {t} {$/;"	p	namespace:httpTestScript
DELETED	generic/tclInt.h	/^#define DELETED	/;"	d
DELETEFILEPROC	doc/FileSystem.3	/^.SS DELETEFILEPROC$/;"	S	section:Filesystem""FILESYSTEM OPERATIONS
DEPARG	win/configure.ac	/^AC_SUBST(DEPARG)$/;"	s
DEPENDS	compat/zlib/nintendods/Makefile	/^DEPENDS	:=	$(OFILES:.o=.d)$/;"	m
DEPEND_SWITCHES	unix/Makefile.in	/^DEPEND_SWITCHES	= ${CFLAGS} -I${SHQ_UNIX_DIR} \\$/;"	m
DEPRECATED INTERFACES	doc/SetResult.3	/^.SH "DEPRECATED INTERFACES"$/;"	s	title:Tcl_SetResult
DEPSDIR	compat/zlib/nintendods/Makefile	/^export DEPSDIR	:=	$(CURDIR)\/$(BUILD)$/;"	m
DESCRIPTION	compat/zlib/contrib/minizip/miniunzip.1	/^.SH DESCRIPTION$/;"	s	title:miniunzip
DESCRIPTION	compat/zlib/contrib/minizip/minizip.1	/^.SH DESCRIPTION$/;"	s	title:minizip
DESCRIPTION	compat/zlib/zlib.3	/^.SH DESCRIPTION$/;"	s	title:ZLIB
DESCRIPTION	doc/Access.3	/^.SH DESCRIPTION$/;"	s	title:Tcl_Access
DESCRIPTION	doc/AddErrInfo.3	/^.SH DESCRIPTION$/;"	s	title:Tcl_AddErrorInfo
DESCRIPTION	doc/Alloc.3	/^.SH DESCRIPTION$/;"	s	title:Tcl_Alloc
DESCRIPTION	doc/AllowExc.3	/^.SH DESCRIPTION$/;"	s	title:Tcl_AllowExceptions
DESCRIPTION	doc/AppInit.3	/^.SH DESCRIPTION$/;"	s	title:Tcl_AppInit
DESCRIPTION	doc/AssocData.3	/^.SH DESCRIPTION$/;"	s	title:Tcl_SetAssocData
DESCRIPTION	doc/Async.3	/^.SH DESCRIPTION$/;"	s	title:Tcl_AsyncCreate
DESCRIPTION	doc/BackgdErr.3	/^.SH DESCRIPTION$/;"	s	title:Tcl_BackgroundError
DESCRIPTION	doc/BoolObj.3	/^.SH DESCRIPTION$/;"	s	title:Tcl_BooleanObj
DESCRIPTION	doc/ByteArrObj.3	/^.SH DESCRIPTION$/;"	s	title:Tcl_ByteArrayObj
DESCRIPTION	doc/CallDel.3	/^.SH DESCRIPTION$/;"	s	title:Tcl_CallWhenDeleted
DESCRIPTION	doc/Cancel.3	/^.SH DESCRIPTION$/;"	s	title:Tcl_Cancel
DESCRIPTION	doc/ChnlStack.3	/^.SH DESCRIPTION$/;"	s	title:Tcl_StackChannel
DESCRIPTION	doc/Class.3	/^.SH DESCRIPTION$/;"	s	title:Tcl_Class
DESCRIPTION	doc/CmdCmplt.3	/^.SH DESCRIPTION$/;"	s	title:Tcl_CommandComplete
DESCRIPTION	doc/Concat.3	/^.SH DESCRIPTION$/;"	s	title:Tcl_Concat
DESCRIPTION	doc/CrtAlias.3	/^.SH DESCRIPTION$/;"	s	title:Tcl_CreateAlias
DESCRIPTION	doc/CrtChannel.3	/^.SH DESCRIPTION$/;"	s	title:Tcl_CreateChannel
DESCRIPTION	doc/CrtChnlHdlr.3	/^.SH DESCRIPTION$/;"	s	title:Tcl_CreateChannelHandler
DESCRIPTION	doc/CrtCloseHdlr.3	/^.SH DESCRIPTION$/;"	s	title:Tcl_CreateCloseHandler
DESCRIPTION	doc/CrtCommand.3	/^.SH DESCRIPTION$/;"	s	title:Tcl_CreateCommand
DESCRIPTION	doc/CrtFileHdlr.3	/^.SH DESCRIPTION$/;"	s	title:Tcl_CreateFileHandler
DESCRIPTION	doc/CrtInterp.3	/^.SH DESCRIPTION$/;"	s	title:Tcl_CreateInterp
DESCRIPTION	doc/CrtObjCmd.3	/^.SH DESCRIPTION$/;"	s	title:Tcl_CreateObjCommand
DESCRIPTION	doc/CrtTimerHdlr.3	/^.SH DESCRIPTION$/;"	s	title:Tcl_CreateTimerHandler
DESCRIPTION	doc/CrtTrace.3	/^.SH DESCRIPTION$/;"	s	title:Tcl_CreateTrace
DESCRIPTION	doc/DString.3	/^.SH DESCRIPTION$/;"	s	title:Tcl_DString
DESCRIPTION	doc/DetachPids.3	/^.SH DESCRIPTION$/;"	s	title:Tcl_DetachPids
DESCRIPTION	doc/DictObj.3	/^.SH DESCRIPTION$/;"	s	title:Tcl_DictObj
DESCRIPTION	doc/DoOneEvent.3	/^.SH DESCRIPTION$/;"	s	title:Tcl_DoOneEvent
DESCRIPTION	doc/DoWhenIdle.3	/^.SH DESCRIPTION$/;"	s	title:Tcl_DoWhenIdle
DESCRIPTION	doc/DoubleObj.3	/^.SH DESCRIPTION$/;"	s	title:Tcl_DoubleObj
DESCRIPTION	doc/DumpActiveMemory.3	/^.SH DESCRIPTION$/;"	s	title:Tcl_DumpActiveMemory
DESCRIPTION	doc/Encoding.3	/^.SH DESCRIPTION$/;"	s	title:Tcl_GetEncoding
DESCRIPTION	doc/Ensemble.3	/^.SH DESCRIPTION$/;"	s	title:Tcl_Ensemble
DESCRIPTION	doc/Environment.3	/^.SH DESCRIPTION$/;"	s	title:Tcl_PutEnv
DESCRIPTION	doc/Eval.3	/^.SH DESCRIPTION$/;"	s	title:Tcl_Eval
DESCRIPTION	doc/Exit.3	/^.SH DESCRIPTION$/;"	s	title:Tcl_Exit
DESCRIPTION	doc/ExprLong.3	/^.SH DESCRIPTION$/;"	s	title:Tcl_ExprLong
DESCRIPTION	doc/ExprLongObj.3	/^.SH DESCRIPTION$/;"	s	title:Tcl_ExprLongObj
DESCRIPTION	doc/FileSystem.3	/^.SH DESCRIPTION$/;"	s	title:Filesystem
DESCRIPTION	doc/FindExec.3	/^.SH DESCRIPTION$/;"	s	title:Tcl_FindExecutable
DESCRIPTION	doc/GetCwd.3	/^.SH DESCRIPTION$/;"	s	title:Tcl_GetCwd
DESCRIPTION	doc/GetHostName.3	/^.SH DESCRIPTION$/;"	s	title:Tcl_GetHostName
DESCRIPTION	doc/GetIndex.3	/^.SH DESCRIPTION$/;"	s	title:Tcl_GetIndexFromObj
DESCRIPTION	doc/GetInt.3	/^.SH DESCRIPTION$/;"	s	title:Tcl_GetInt
DESCRIPTION	doc/GetOpnFl.3	/^.SH DESCRIPTION$/;"	s	title:Tcl_GetOpenFile
DESCRIPTION	doc/GetStdChan.3	/^.SH DESCRIPTION$/;"	s	title:Tcl_GetStdChannel
DESCRIPTION	doc/GetTime.3	/^.SH DESCRIPTION$/;"	s	title:Tcl_GetTime
DESCRIPTION	doc/GetVersion.3	/^.SH DESCRIPTION$/;"	s	title:Tcl_GetVersion
DESCRIPTION	doc/Hash.3	/^.SH DESCRIPTION$/;"	s	title:Tcl_Hash
DESCRIPTION	doc/Init.3	/^.SH DESCRIPTION$/;"	s	title:Tcl_Init
DESCRIPTION	doc/InitStubs.3	/^.SH DESCRIPTION$/;"	s	title:Tcl_InitStubs
DESCRIPTION	doc/InitSubSyst.3	/^.SH DESCRIPTION$/;"	s	title:Tcl_InitSubsystems
DESCRIPTION	doc/IntObj.3	/^.SH DESCRIPTION$/;"	s	title:Tcl_IntObj
DESCRIPTION	doc/Limit.3	/^.SH DESCRIPTION$/;"	s	title:Tcl_LimitCheck
DESCRIPTION	doc/LinkVar.3	/^.SH DESCRIPTION$/;"	s	title:Tcl_LinkVar
DESCRIPTION	doc/ListObj.3	/^.SH DESCRIPTION$/;"	s	title:Tcl_ListObj
DESCRIPTION	doc/Load.3	/^.SH DESCRIPTION$/;"	s	title:Load
DESCRIPTION	doc/Method.3	/^.SH DESCRIPTION$/;"	s	title:Tcl_Method
DESCRIPTION	doc/NRE.3	/^.SH DESCRIPTION$/;"	s	title:NRE
DESCRIPTION	doc/Namespace.3	/^.SH DESCRIPTION$/;"	s	title:Tcl_Namespace
DESCRIPTION	doc/Number.3	/^.SH DESCRIPTION$/;"	s	title:Tcl_GetNumber
DESCRIPTION	doc/OOInitStubs.3	/^.SH DESCRIPTION$/;"	s	title:Tcl_OOInitStubs
DESCRIPTION	doc/ObjectType.3	/^.SH DESCRIPTION$/;"	s	title:Tcl_ObjType
DESCRIPTION	doc/OpenFileChnl.3	/^.SH DESCRIPTION$/;"	s	title:Tcl_OpenFileChannel
DESCRIPTION	doc/OpenTcp.3	/^.SH DESCRIPTION$/;"	s	title:Tcl_OpenTcpClient
DESCRIPTION	doc/Panic.3	/^.SH DESCRIPTION$/;"	s	title:Tcl_Panic
DESCRIPTION	doc/ParseArgs.3	/^.SH DESCRIPTION$/;"	s	title:Tcl_ParseArgsObjv
DESCRIPTION	doc/ParseCmd.3	/^.SH DESCRIPTION$/;"	s	title:Tcl_ParseCommand
DESCRIPTION	doc/PkgRequire.3	/^.SH DESCRIPTION$/;"	s	title:Tcl_PkgRequire
DESCRIPTION	doc/Preserve.3	/^.SH DESCRIPTION$/;"	s	title:Tcl_Preserve
DESCRIPTION	doc/PrintDbl.3	/^.SH DESCRIPTION$/;"	s	title:Tcl_PrintDouble
DESCRIPTION	doc/RecEvalObj.3	/^.SH DESCRIPTION$/;"	s	title:Tcl_RecordAndEvalObj
DESCRIPTION	doc/RecordEval.3	/^.SH DESCRIPTION$/;"	s	title:Tcl_RecordAndEval
DESCRIPTION	doc/RegConfig.3	/^.SH DESCRIPTION$/;"	s	title:Tcl_RegisterConfig
DESCRIPTION	doc/RegExp.3	/^.SH DESCRIPTION$/;"	s	title:Tcl_RegExpMatch
DESCRIPTION	doc/SaveInterpState.3	/^.SH DESCRIPTION$/;"	s	title:Tcl_SaveInterpState
DESCRIPTION	doc/SetChanErr.3	/^.SH DESCRIPTION$/;"	s	title:Tcl_SetChannelError
DESCRIPTION	doc/SetErrno.3	/^.SH DESCRIPTION$/;"	s	title:Tcl_SetErrno
DESCRIPTION	doc/SetRecLmt.3	/^.SH DESCRIPTION$/;"	s	title:Tcl_SetRecursionLimit
DESCRIPTION	doc/SetResult.3	/^.SH DESCRIPTION$/;"	s	title:Tcl_SetResult
DESCRIPTION	doc/SetVar.3	/^.SH DESCRIPTION$/;"	s	title:Tcl_SetVar
DESCRIPTION	doc/Signal.3	/^.SH DESCRIPTION$/;"	s	title:Tcl_SignalId
DESCRIPTION	doc/Sleep.3	/^.SH DESCRIPTION$/;"	s	title:Tcl_Sleep
DESCRIPTION	doc/SourceRCFile.3	/^.SH DESCRIPTION$/;"	s	title:Tcl_SourceRCFile
DESCRIPTION	doc/SplitList.3	/^.SH DESCRIPTION$/;"	s	title:Tcl_SplitList
DESCRIPTION	doc/SplitPath.3	/^.SH DESCRIPTION$/;"	s	title:Tcl_SplitPath
DESCRIPTION	doc/StaticLibrary.3	/^.SH DESCRIPTION$/;"	s	title:Tcl_StaticLibrary
DESCRIPTION	doc/StdChannels.3	/^.SH DESCRIPTION$/;"	s	title:Standard Channels
DESCRIPTION	doc/StrMatch.3	/^.SH DESCRIPTION$/;"	s	title:Tcl_StringMatch
DESCRIPTION	doc/StringObj.3	/^.SH DESCRIPTION$/;"	s	title:Tcl_StringObj
DESCRIPTION	doc/SubstObj.3	/^.SH DESCRIPTION$/;"	s	title:Tcl_SubstObj
DESCRIPTION	doc/TCL_MEM_DEBUG.3	/^.SH DESCRIPTION$/;"	s	title:TCL_MEM_DEBUG
DESCRIPTION	doc/TclZlib.3	/^.SH DESCRIPTION$/;"	s	title:TclZlib
DESCRIPTION	doc/Tcl_Main.3	/^.SH DESCRIPTION$/;"	s	title:Tcl_Main
DESCRIPTION	doc/Thread.3	/^.SH DESCRIPTION$/;"	s	title:Threads
DESCRIPTION	doc/ToUpper.3	/^.SH DESCRIPTION$/;"	s	title:Tcl_UtfToUpper
DESCRIPTION	doc/TraceCmd.3	/^.SH DESCRIPTION$/;"	s	title:Tcl_TraceCommand
DESCRIPTION	doc/TraceVar.3	/^.SH DESCRIPTION$/;"	s	title:Tcl_TraceVar
DESCRIPTION	doc/Translate.3	/^.SH DESCRIPTION$/;"	s	title:Tcl_TranslateFileName
DESCRIPTION	doc/UniCharIsAlpha.3	/^.SH DESCRIPTION$/;"	s	title:Tcl_UniCharIsAlpha
DESCRIPTION	doc/UpVar.3	/^.SH DESCRIPTION$/;"	s	title:Tcl_UpVar
DESCRIPTION	doc/Utf.3	/^.SH DESCRIPTION$/;"	s	title:Utf
DESCRIPTION	doc/WrongNumArgs.3	/^.SH DESCRIPTION$/;"	s	title:Tcl_WrongNumArgs
DESCRIPTION	doc/tclsh.1	/^.SH DESCRIPTION$/;"	s	title:tclsh
DESCRIPTION	doc/zipfs.3	/^.SH DESCRIPTION$/;"	s	title:Tclzipfs
DESTDIR	macosx/GNUmakefile	/^DESTDIR			?=$/;"	m
DESTRUCTOR	generic/tclOOInt.h	/^    DESTRUCTOR = 0x10,		\/* This is a destructor. *\/$/;"	e	enum:TclOOCallChainFlags
DESTRUCTOR_CALLED	generic/tclOOInt.h	/^    DESTRUCTOR_CALLED = 2,	\/* Indicates that evaluation of destructor$/;"	e	enum:ObjectFlags
DICT	compat/zlib/examples/gzlog.c	/^#define DICT /;"	d	file:
DICT	compat/zlib/inflate.h	/^    DICT,       \/* waiting for inflateSetDictionary() call *\/$/;"	e	enum:__anon6bf0a2910103
DICTID	compat/zlib/inflate.h	/^    DICTID,     \/* i: waiting for dictionary check value *\/$/;"	e	enum:__anon6bf0a2910103
DICTIONARY	generic/tclCmdIL.c	/^	ASCII, DICTIONARY, INTEGER, REAL$/;"	e	enum:Tcl_LsearchObjCmd::datatypes	file:
DICT_PATH_CREATE	generic/tclInt.h	/^#define DICT_PATH_CREATE	/;"	d
DICT_PATH_EXISTS	generic/tclInt.h	/^#define DICT_PATH_EXISTS	/;"	d
DICT_PATH_NON_EXISTENT	generic/tclInt.h	/^#define DICT_PATH_NON_EXISTENT	/;"	d
DICT_PATH_READ	generic/tclInt.h	/^#define DICT_PATH_READ	/;"	d
DICT_PATH_UPDATE	generic/tclInt.h	/^#define DICT_PATH_UPDATE	/;"	d
DICT_TO_SET	generic/tclZlib.c	/^    DICT_TO_SET = 0x1		\/* If we need to set a compression dictionary$/;"	e	enum:ZlibStreamHandleFlags	file:
DIGIT	generic/regcomp.c	/^#define	DIGIT	/;"	d	file:
DIGIT	libtommath/tommath.h	/^#define DIGIT(m, k) (MP_DEPRECATED_PRAGMA("DIGIT /;"	d
DIGITVAL	generic/regcustom.h	/^#define	DIGITVAL(/;"	d
DIGIT_BIT	libtommath/tommath.h	/^#define DIGIT_BIT   (MP_DEPRECATED_PRAGMA("DIGIT_BIT macro is deprecated, MP_DIGIT_BIT instead")/;"	d
DIGIT_BITS	generic/tclUtf.c	/^#define DIGIT_BITS /;"	d	file:
DIGIT_GROUP	generic/tclStrToD.c	/^#define DIGIT_GROUP	/;"	d	file:
DIR	library/platform/shell.tcl	/^proc ::platform::shell::DIR {} {$/;"	p	namespace:::platform::shell
DIRTYPE	compat/zlib/contrib/untgz/untgz.c	/^#define DIRTYPE /;"	d	file:
DISABLE_ASL	macosx/tclMacOSXNotify.c	/^#define DISABLE_ASL /;"	d	file:
DISABLE_ASL	macosx/tclMacOSXNotify.c	/^#define DISABLE_ASL$/;"	d	file:
DISAS_CLASS_CONSTRUCTOR	generic/tclDisassemble.c	/^	DISAS_CLASS_CONSTRUCTOR, DISAS_CLASS_DESTRUCTOR,$/;"	e	enum:Tcl_DisassembleObjCmd::Types	file:
DISAS_CLASS_DESTRUCTOR	generic/tclDisassemble.c	/^	DISAS_CLASS_CONSTRUCTOR, DISAS_CLASS_DESTRUCTOR,$/;"	e	enum:Tcl_DisassembleObjCmd::Types	file:
DISAS_CLASS_METHOD	generic/tclDisassemble.c	/^	DISAS_LAMBDA, DISAS_CLASS_METHOD, DISAS_OBJECT_METHOD, DISAS_PROC,$/;"	e	enum:Tcl_DisassembleObjCmd::Types	file:
DISAS_LAMBDA	generic/tclDisassemble.c	/^	DISAS_LAMBDA, DISAS_CLASS_METHOD, DISAS_OBJECT_METHOD, DISAS_PROC,$/;"	e	enum:Tcl_DisassembleObjCmd::Types	file:
DISAS_OBJECT_METHOD	generic/tclDisassemble.c	/^	DISAS_LAMBDA, DISAS_CLASS_METHOD, DISAS_OBJECT_METHOD, DISAS_PROC,$/;"	e	enum:Tcl_DisassembleObjCmd::Types	file:
DISAS_PROC	generic/tclDisassemble.c	/^	DISAS_LAMBDA, DISAS_CLASS_METHOD, DISAS_OBJECT_METHOD, DISAS_PROC,$/;"	e	enum:Tcl_DisassembleObjCmd::Types	file:
DISAS_SCRIPT	generic/tclDisassemble.c	/^	DISAS_SCRIPT$/;"	e	enum:Tcl_DisassembleObjCmd::Types	file:
DIST	compat/zlib/inflate.h	/^            DIST,       \/* i: waiting for distance code *\/$/;"	e	enum:__anon6bf0a2910103
DISTDIR	unix/Makefile.in	/^DISTDIR	 = $(DISTROOT)\/$(DISTNAME)$/;"	m
DISTEXT	compat/zlib/inflate.h	/^            DISTEXT,    \/* i: waiting for distance extra bits *\/$/;"	e	enum:__anon6bf0a2910103
DISTNAME	unix/Makefile.in	/^DISTNAME = tcl${VERSION}${PATCH_LEVEL}$/;"	m
DISTROOT	unix/Makefile.in	/^DISTROOT = \/tmp\/dist$/;"	m
DISTRO_PACK_PATH	libtommath/CMakeLists.txt	/^        set(DISTRO_PACK_PATH ${LINUX_DISTRO}\/${LINUX_DISTRO_CODENAME}\/)$/;"	v
DISTRO_PACK_PATH	libtommath/CMakeLists.txt	/^        set(DISTRO_PACK_PATH ${LINUX_DISTRO}\/${LINUX_DISTRO_VERSION}\/)$/;"	v
DISTRO_PACK_PATH	libtommath/CMakeLists.txt	/^    set(DISTRO_PACK_PATH ${CMAKE_SYSTEM_NAME}\/)$/;"	v
DISTS	compat/zlib/contrib/infback9/inftree9.h	/^    DISTS$/;"	e	enum:__anon80eb2aca0203
DISTS	compat/zlib/inftrees.h	/^    DISTS$/;"	e	enum:__anon78703c4e0203
DIST_CODE_LEN	compat/zlib/trees.c	/^#define DIST_CODE_LEN /;"	d	file:
DIST_INSTALL_DATA	unix/Makefile.in	/^DIST_INSTALL_DATA   = $(INSTALL) -p -m 644$/;"	m
DIST_INSTALL_SCRIPT	unix/Makefile.in	/^DIST_INSTALL_SCRIPT = $(INSTALL) -p -m 755$/;"	m
DIVIDE	generic/tclCompExpr.c	/^#define DIVIDE	/;"	d	file:
DIVIDED_BY_ZERO	generic/tclExecute.c	/^#define DIVIDED_BY_ZERO	/;"	d	file:
DLLEXPORT	generic/tcl.h	/^#       define DLLEXPORT$/;"	d
DLLIMPORT	generic/tcl.h	/^#       define DLLIMPORT$/;"	d
DLLNAME	generic/tclIcu.c	/^#  define DLLNAME /;"	d	file:
DLLSUFFIX	win/Makefile.in	/^DLLSUFFIX		= @DLLSUFFIX@$/;"	m
DLLSUFFIX	win/configure.ac	/^AC_SUBST(DLLSUFFIX)$/;"	s
DLL_INSTALL_DIR	unix/Makefile.in	/^DLL_INSTALL_DIR		= @DLL_INSTALL_DIR@$/;"	m
DLL_INSTALL_DIR	unix/tcl.m4	/^    AC_SUBST(DLL_INSTALL_DIR)$/;"	s
DLTEST_DIR	unix/Makefile.in	/^DLTEST_DIR		= @TCL_SRC_DIR@\/unix\/dltest$/;"	m
DLTEST_LD	unix/configure.ac	/^AC_SUBST(DLTEST_LD)$/;"	s
DLTEST_LD	unix/dltest/Makefile.in	/^DLTEST_LD =		@DLTEST_LD@$/;"	m
DLTEST_SUFFIX	unix/configure.ac	/^AC_SUBST(DLTEST_SUFFIX)$/;"	s
DLTEST_SUFFIX	unix/dltest/Makefile.in	/^DLTEST_SUFFIX =		@DLTEST_SUFFIX@$/;"	m
DLTEST_TARGETS	unix/Makefile.in	/^DLTEST_TARGETS		= dltest.marker$/;"	m
DL_LIBS	unix/tcl.m4	/^    AC_SUBST(DL_LIBS)$/;"	s
DL_LIBS	win/tcl.m4	/^    AC_SUBST(DL_LIBS)$/;"	s
DL_OBJS	unix/tcl.m4	/^    AC_SUBST(DL_OBJS)$/;"	s
DL_SRCS	unix/Makefile.in	/^DL_SRCS = \\$/;"	m
DO1	compat/zlib/adler32.c	/^#define DO1(/;"	d	file:
DO16	compat/zlib/adler32.c	/^#define DO16(/;"	d	file:
DO2	compat/zlib/adler32.c	/^#define DO2(/;"	d	file:
DO4	compat/zlib/adler32.c	/^#define DO4(/;"	d	file:
DO8	compat/zlib/adler32.c	/^#define DO8(/;"	d	file:
DOBJPUT	generic/tclCmdAH.c	/^#define DOBJPUT(/;"	d	file:
DONE	compat/zlib/contrib/infback9/inflate9.h	/^    DONE,       \/* finished check, done -- remain here until reset *\/$/;"	e	enum:__anonf28101a00103
DONE	compat/zlib/inflate.h	/^    DONE,       \/* finished check, done -- remain here until reset *\/$/;"	e	enum:__anon6bf0a2910103
DONT_COMPILE_CMDS_INLINE	generic/tclInt.h	/^#define DONT_COMPILE_CMDS_INLINE	/;"	d
DONT_DELETE	generic/tclOOInt.h	/^    DONT_DELETE = 0x20000,	\/* Inhibit deletion of this object. Used$/;"	e	enum:ObjectFlags
DOTREE_F	unix/tclUnixFCmd.c	/^#define DOTREE_F	/;"	d	file:
DOTREE_F	win/tclWinFCmd.c	/^#define DOTREE_F	/;"	d	file:
DOTREE_LINK	win/tclWinFCmd.c	/^#define DOTREE_LINK	/;"	d	file:
DOTREE_POSTD	unix/tclUnixFCmd.c	/^#define DOTREE_POSTD	/;"	d	file:
DOTREE_POSTD	win/tclWinFCmd.c	/^#define DOTREE_POSTD	/;"	d	file:
DOTREE_PRED	unix/tclUnixFCmd.c	/^#define DOTREE_PRED	/;"	d	file:
DOTREE_PRED	win/tclWinFCmd.c	/^#define DOTREE_PRED	/;"	d	file:
DOTVER	win/Makefile.in	/^DOTVER			= @TCL_MAJOR_VERSION@.@TCL_MINOR_VERSION@$/;"	m
DOUBLE_RESULT	generic/tclExecute.c	/^#define DOUBLE_RESULT(/;"	d	file:
DO_MAKE	macosx/GNUmakefile	/^DO_MAKE			= +${MAKE} -C "${OBJ_DIR}" ${target} ${MAKE_ARGS_V} ${MAKE_ARGS} ${EXTRA_MAKE_ARGS}$/;"	m
DROPBITS	compat/zlib/contrib/infback9/infback9.c	/^#define DROPBITS(/;"	d	file:
DROPBITS	compat/zlib/infback.c	/^#define DROPBITS(/;"	d	file:
DROPBITS	compat/zlib/inflate.c	/^#define DROPBITS(/;"	d	file:
DSIZE	compat/zlib/examples/gzappend.c	/^#define DSIZE /;"	d	file:
DSTMODE	generic/tclDate.c	/^} DSTMODE;$/;"	t	typeref:enum:_DSTMODE	file:
DSTMODE	generic/tclDateClassic.c	/^} DSTMODE;$/;"	t	typeref:enum:_DSTMODE	file:
DSTmaybe	generic/tclDate.c	/^    DSTon, DSToff, DSTmaybe$/;"	e	enum:_DSTMODE	file:
DSTmaybe	generic/tclDateClassic.c	/^    DSTon, DSToff, DSTmaybe$/;"	e	enum:_DSTMODE	file:
DSToff	generic/tclDate.c	/^    DSTon, DSToff, DSTmaybe$/;"	e	enum:_DSTMODE	file:
DSToff	generic/tclDateClassic.c	/^    DSTon, DSToff, DSTmaybe$/;"	e	enum:_DSTMODE	file:
DSTon	generic/tclDate.c	/^    DSTon, DSToff, DSTmaybe$/;"	e	enum:_DSTMODE	file:
DSTon	generic/tclDateClassic.c	/^    DSTon, DSToff, DSTmaybe$/;"	e	enum:_DSTMODE	file:
DTRACE	unix/Makefile.in	/^DTRACE			= @DTRACE@$/;"	m
DTRACE_HDR	unix/Makefile.in	/^DTRACE_HDR = tclDTrace.h$/;"	m
DTRACE_HDR	unix/configure.ac	/^AC_SUBST(DTRACE_HDR)$/;"	s
DTRACE_OBJ	unix/Makefile.in	/^DTRACE_OBJ = tclDTrace.o$/;"	m
DTRACE_OBJ	unix/configure.ac	/^AC_SUBST(DTRACE_OBJ)$/;"	s
DTRACE_SRC	unix/Makefile.in	/^DTRACE_SRC = $(GENERIC_DIR)\/tclDTrace.d$/;"	m
DTRACE_SRC	unix/configure.ac	/^AC_SUBST(DTRACE_SRC)$/;"	s
DTraceCmdReturn	generic/tclBasic.c	/^#   define DTraceCmdReturn	/;"	d	file:
DTraceCmdReturn	generic/tclBasic.c	/^DTraceCmdReturn($/;"	f	typeref:typename:int	file:
DTraceCmdReturn	generic/tclBasic.c	/^static Tcl_NRPostProc	DTraceCmdReturn;$/;"	v	typeref:typename:Tcl_NRPostProc	file:
DTraceObjCmd	generic/tclBasic.c	/^DTraceObjCmd($/;"	f	typeref:typename:int	file:
DTraceObjCmd	generic/tclBasic.c	/^static Tcl_ObjCmdProc	DTraceObjCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
DUMMY_REPARSE_BUFFER	win/tclWinFile.c	/^} DUMMY_REPARSE_BUFFER;$/;"	t	typeref:struct:__anon1c302b040508	file:
DUPINF	generic/regguts.h	/^#define	DUPINF	/;"	d
DUPINTERNALREPPROC	doc/FileSystem.3	/^.SS DUPINTERNALREPPROC$/;"	S	section:Filesystem""FILESYSTEM INFRASTRUCTURE
DUPLICATE	generic/tclOOInt.h	/^#define DUPLICATE(/;"	d
DUPMAX	generic/regguts.h	/^#define	DUPMAX	/;"	d
DUPTRAVERSE_MAX_DEPTH	generic/regc_nfa.c	/^#define DUPTRAVERSE_MAX_DEPTH /;"	d	file:
DWORD_PTR	win/tclWinPort.h	/^typedef DWORD DWORD_PTR;$/;"	t	typeref:typename:DWORD
DYLIB_INSTALL_DIR	unix/Makefile.in	/^DYLIB_INSTALL_DIR	= $(libdir)$/;"	m
DYNAMIC_CRC_TABLE	compat/zlib/crc32.c	/^#    define DYNAMIC_CRC_TABLE$/;"	d	file:
DYN_TREES	compat/zlib/zutil.h	/^#define DYN_TREES /;"	d
D_CODES	compat/zlib/deflate.h	/^#define D_CODES /;"	d
Dad	compat/zlib/deflate.h	/^#define Dad /;"	d
DataAvailable	compat/zlib/contrib/dotzlib/DotZLib/CodecBase.cs	/^        public event DataAvailableHandler DataAvailable;$/;"	E	class:DotZLib.CodecBase
DataAvailable	compat/zlib/contrib/dotzlib/DotZLib/DotZLib.cs	/^        event DataAvailableHandler DataAvailable;$/;"	E	interface:DotZLib.Codec
DataAvailableHandler	compat/zlib/contrib/dotzlib/DotZLib/DotZLib.cs	/^    public delegate void DataAvailableHandler(byte[] data, int startIndex, int count);$/;"	m	namespace:DotZLib
DataBuffer	win/tclWinFile.c	/^	    BYTE DataBuffer[1];$/;"	m	struct:_REPARSE_DATA_BUFFER::__anon1c302b04010a::__anon1c302b040408	typeref:typename:BYTE[1]	file:
Data_First	compat/zlib/contrib/ada/zlib.adb	/^         Data_First : Stream_Element_Offset renames Filter.Offset;$/;"	v	subprogram:Add_Data	file:
Data_In	compat/zlib/contrib/ada/test.adb	/^   procedure Data_In$/;"	R	subprogram:Test	file:
Data_In	compat/zlib/contrib/ada/test.adb	/^   procedure Data_In$/;"	r	subprogram:Test	file:
Data_In	compat/zlib/contrib/ada/zlib.ads	/^      with procedure Data_In$/;"	f	subprogspec:Close	file:
Data_Last	compat/zlib/contrib/ada/zlib.adb	/^         Data_Last  : Stream_Element_Offset;$/;"	v	subprogram:Add_Data	file:
Data_Len	compat/zlib/contrib/ada/zlib.adb	/^         Data_Len   : Stream_Element_Offset; --  -1$/;"	v	subprogram:Add_Data	file:
Data_Out	compat/zlib/contrib/ada/test.adb	/^   procedure Data_Out (Item : in Stream_Element_Array) is$/;"	r	subprogram:Test	file:
Data_Out	compat/zlib/contrib/ada/test.adb	/^   procedure Data_Out (Item : in Stream_Element_Array);$/;"	R	subprogram:Test	file:
Data_Out	compat/zlib/contrib/ada/zlib.ads	/^      with procedure Data_Out$/;"	f	subprogspec:Generic_Translate	file:
DateFormat	generic/tclDate.h	/^typedef struct DateFormat {$/;"	s
DateFormat	generic/tclDate.h	/^} DateFormat;$/;"	t	typeref:struct:DateFormat
DateInfo	generic/tclDate.h	/^typedef struct DateInfo {$/;"	s
DateInfo	generic/tclDate.h	/^} DateInfo;$/;"	t	typeref:struct:DateInfo
DateInfo	generic/tclDateClassic.c	/^typedef struct DateInfo {$/;"	s	file:
DateInfo	generic/tclDateClassic.c	/^} DateInfo;$/;"	t	typeref:struct:DateInfo	file:
DateInfoFlags	generic/tclDate.h	/^enum DateInfoFlags {$/;"	g
DdeClientWindowProc	win/tclWinDde.c	/^DdeClientWindowProc($/;"	f	typeref:typename:LRESULT CALLBACK	file:
DdeCreateClient	win/tclWinDde.c	/^DdeCreateClient($/;"	f	typeref:typename:int	file:
DdeEnumServices	win/tclWinDde.c	/^} DdeEnumServices;$/;"	t	typeref:struct:__anone96dc6f10108	file:
DdeEnumWindowsCallback	win/tclWinDde.c	/^DdeEnumWindowsCallback($/;"	f	typeref:typename:BOOL CALLBACK	file:
DdeExecOptions	win/tclWinDde.c	/^    enum DdeExecOptions {$/;"	g	function:DdeObjCmd	file:
DdeExitProc	win/tclWinDde.c	/^DdeExitProc($/;"	f	typeref:typename:void	file:
DdeGetRegistrationPtr	win/tclWinDde.c	/^DdeGetRegistrationPtr($/;"	f	typeref:typename:RegisteredInterp *	file:
DdeGetServicesList	win/tclWinDde.c	/^DdeGetServicesList($/;"	f	typeref:typename:int	file:
DdeObjCmd	win/tclWinDde.c	/^DdeObjCmd($/;"	f	typeref:typename:int	file:
DdeServerProc	win/tclWinDde.c	/^DdeServerProc($/;"	f	typeref:typename:HDDEDATA CALLBACK	file:
DdeServicesOnAck	win/tclWinDde.c	/^DdeServicesOnAck($/;"	f	typeref:typename:LRESULT	file:
DdeSetServerName	win/tclWinDde.c	/^DdeSetServerName($/;"	f	typeref:typename:const WCHAR *	file:
DdeSrvOptions	win/tclWinDde.c	/^    enum DdeSrvOptions {$/;"	g	function:DdeObjCmd	file:
DdeSubcommands	win/tclWinDde.c	/^    enum DdeSubcommands {$/;"	g	function:DdeObjCmd	file:
Dde_Init	win/tclWinDde.c	/^Dde_Init($/;"	f	typeref:typename:int
Dde_SafeInit	win/tclWinDde.c	/^Dde_SafeInit($/;"	f	typeref:typename:int
DebugTypes	generic/tclInterp.c	/^    enum DebugTypes {$/;"	g	function:ChildDebugCmd	file:
DeclaredClassMethod	generic/tclOOInt.h	/^struct DeclaredClassMethod {$/;"	s
DeclaredClassMethod	generic/tclOOInt.h	/^typedef struct DeclaredClassMethod DeclaredClassMethod;$/;"	t	typeref:struct:DeclaredClassMethod
DeclaredSlot	generic/tclOODefineCmds.c	/^typedef struct DeclaredSlot {$/;"	s	file:
DeclaredSlot	generic/tclOODefineCmds.c	/^} DeclaredSlot;$/;"	t	typeref:struct:DeclaredSlot	file:
Decode	generic/tclDisassemble.c	/^#define Decode(/;"	d	file:
DecodeCryptHeader	generic/tclZipfs.c	/^DecodeCryptHeader($/;"	f	typeref:typename:int	file:
DecodeEventMask	generic/tclIORChan.c	/^DecodeEventMask($/;"	f	typeref:typename:Tcl_Obj *	file:
DecodeEventMask	generic/tclIORTrans.c	/^DecodeEventMask($/;"	f	typeref:typename:Tcl_Obj *	file:
DecodeZipEntryText	generic/tclZipfs.c	/^DecodeZipEntryText($/;"	f	typeref:typename:char *	file:
Decompress	compat/zlib/contrib/ada/buffer_demo.adb	/^      Decompress : declare$/;"	i	anon:declare	file:
DecompressBuf	compat/zlib/contrib/delphi/ZLib.pas	/^procedure DecompressBuf(const InBuf: Pointer; InBytes: Integer;$/;"	p
DecompressToUserBuf	compat/zlib/contrib/delphi/ZLib.pas	/^procedure DecompressToUserBuf(const InBuf: Pointer; InBytes: Integer;$/;"	p
Decompressor	compat/zlib/contrib/ada/buffer_demo.adb	/^         Decompressor : Filter_Type;$/;"	v	identifier:Decompress	file:
DecrRefsPostClassConstructor	generic/tclOOBasic.c	/^DecrRefsPostClassConstructor($/;"	f	typeref:typename:int	file:
DecrRefsPostClassConstructor	generic/tclOOBasic.c	/^static Tcl_NRPostProc	DecrRefsPostClassConstructor;$/;"	v	typeref:typename:Tcl_NRPostProc	file:
Default	compat/zlib/contrib/ada/zlib.ads	/^   type Header_Type is (None, Auto, Default, GZip);$/;"	l	type:Header_Type	file:
Default	compat/zlib/contrib/dotzlib/DotZLib/DotZLib.cs	/^        Default = -1,$/;"	e	enum:DotZLib.CompressLevel	file:
Default	library/tcltest/tcltest.tcl	/^    proc Default {varName value {verify AcceptAll}} {$/;"	p	namespace:::tcltest
DefaultTempDir	unix/tclUnixFCmd.c	/^DefaultTempDir(void)$/;"	f	typeref:typename:const char *	file:
DefaultUnknown	library/msgcat/msgcat.tcl	/^proc msgcat::DefaultUnknown {locale src args} {$/;"	p	namespace:msgcat
Default_Buffer_Size	compat/zlib/contrib/ada/zlib.ads	/^   Default_Buffer_Size : constant := 4096;$/;"	n	packspec:ZLib
Default_Compression	compat/zlib/contrib/ada/zlib.ads	/^   Default_Compression : constant Compression_Level := -1;$/;"	n	packspec:ZLib
Default_Memory_Level	compat/zlib/contrib/ada/zlib.ads	/^   Default_Memory_Level : constant Memory_Level_Type := 8;$/;"	n	packspec:ZLib
Default_Strategy	compat/zlib/contrib/ada/zlib.ads	/^   Default_Strategy : constant Strategy_Type := 0;$/;"	n	packspec:ZLib	file:
Default_Strategy	compat/zlib/contrib/ada/zlib.ads	/^   Default_Strategy : constant Strategy_Type;$/;"	n	packspec:ZLib
Default_Window_Bits	compat/zlib/contrib/ada/zlib.ads	/^   Default_Window_Bits  : constant Window_Bits_Type  := 15;$/;"	n	packspec:ZLib
Defaults	library/tm.tcl	/^proc ::tcl::tm::Defaults {} {$/;"	p	namespace:::tcl::tm
DefineChain	generic/tclOOCall.c	/^typedef struct DefineChain {$/;"	s	file:
DefineChain	generic/tclOOCall.c	/^} DefineChain;$/;"	t	typeref:struct:DefineChain	file:
DefineEntry	generic/tclOOCall.c	/^typedef struct DefineEntry {$/;"	s	file:
DefineEntry	generic/tclOOCall.c	/^} DefineEntry;$/;"	t	typeref:struct:DefineEntry	file:
DefineLabel	generic/tclAssembly.c	/^DefineLabel($/;"	f	typeref:typename:int	file:
DefineLineInformation	generic/tclCompile.h	/^#define DefineLineInformation /;"	d
DefineTargetAddress	generic/tclOptimize.c	/^#define DefineTargetAddress(/;"	d	file:
Deflate	compat/zlib/contrib/ada/mtest.adb	/^      Deflate : Filter_Type;$/;"	v	task:Test_Task	file:
Deflate	compat/zlib/contrib/ada/zlib-thin.ads	/^   function Deflate (strm : Z_Streamp; flush : Int) return Int;$/;"	R
Deflate	generic/tclZlib.c	/^Deflate($/;"	f	typeref:typename:int	file:
DeflateEnd	compat/zlib/contrib/ada/zlib-thin.ads	/^   function DeflateEnd (strm : Z_Streamp) return Int;$/;"	R
DeflateInflateTests	compat/zlib/contrib/dotzlib/DotZLib/UnitTests.cs	/^    public class DeflateInflateTests$/;"	c	namespace:DotZLibTests
Deflate_Compress	compat/zlib/contrib/dotzlib/DotZLib/UnitTests.cs	/^        public void Deflate_Compress()$/;"	m	class:DotZLibTests.DeflateInflateTests
Deflate_Init	compat/zlib/contrib/ada/zlib-thin.adb	/^   function Deflate_Init$/;"	r	package:ZLib.Thin	file:
Deflate_Init	compat/zlib/contrib/ada/zlib-thin.ads	/^   function Deflate_Init$/;"	R
Deflate_Init	compat/zlib/contrib/ada/zlib.adb	/^   procedure Deflate_Init$/;"	r	package:ZLib	file:
Deflate_Init	compat/zlib/contrib/ada/zlib.ads	/^   procedure Deflate_Init$/;"	R	packspec:ZLib
Deflate_Init	compat/zlib/contrib/dotzlib/DotZLib/UnitTests.cs	/^        public void Deflate_Init()$/;"	m	class:DotZLibTests.DeflateInflateTests
Deflated	compat/zlib/contrib/ada/zlib.ads	/^   Deflated : constant Compression_Method := 8;$/;"	n	packspec:ZLib	file:
Deflated	compat/zlib/contrib/ada/zlib.ads	/^   Deflated : constant Compression_Method;$/;"	n	packspec:ZLib
Deflater	compat/zlib/contrib/dotzlib/DotZLib/Deflater.cs	/^		public Deflater(CompressLevel level) : base()$/;"	m	class:DotZLib.Deflater
Deflater	compat/zlib/contrib/dotzlib/DotZLib/Deflater.cs	/^	public sealed class Deflater : CodecBase$/;"	c	namespace:DotZLib
DelCallbackProc	generic/tclTest.c	/^DelCallbackProc($/;"	f	typeref:typename:void	file:
DelCmd	generic/tclTest.c	/^} DelCmd;$/;"	t	typeref:struct:__anon0e9396a50108	file:
DelCmdProc	generic/tclTest.c	/^DelCmdProc($/;"	f	typeref:typename:int	file:
DelCmdProc	generic/tclTest.c	/^static Tcl_CmdProc	DelCmdProc;$/;"	v	typeref:typename:Tcl_CmdProc	file:
DelDeleteProc	generic/tclTest.c	/^DelDeleteProc($/;"	f	typeref:typename:void	file:
DeleteArray	generic/tclVar.c	/^DeleteArray($/;"	f	typeref:typename:void	file:
DeleteArrayVar	generic/tclVar.c	/^DeleteArrayVar($/;"	f	typeref:typename:void	file:
DeleteChainEntry	generic/tclDictObj.c	/^DeleteChainEntry($/;"	f	typeref:typename:int	file:
DeleteChainTable	generic/tclDictObj.c	/^DeleteChainTable($/;"	f	typeref:typename:void	file:
DeleteChannelTable	generic/tclIO.c	/^DeleteChannelTable($/;"	f	typeref:typename:void	file:
DeleteCmd	win/tclWinReg.c	/^DeleteCmd($/;"	f	typeref:typename:void	file:
DeleteCoroutine	generic/tclBasic.c	/^DeleteCoroutine($/;"	f	typeref:typename:void	file:
DeleteDict	generic/tclDictObj.c	/^DeleteDict($/;"	f	typeref:typename:void	file:
DeleteEnsembleConfig	generic/tclEnsemble.c	/^DeleteEnsembleConfig($/;"	f	typeref:typename:void	file:
DeleteExecStack	generic/tclExecute.c	/^DeleteExecStack($/;"	f	typeref:typename:void	file:
DeleteForwardMethod	generic/tclOOMethod.c	/^DeleteForwardMethod($/;"	f	typeref:typename:void	file:
DeleteHistoryObjs	generic/tclHistory.c	/^DeleteHistoryObjs($/;"	f	typeref:typename:void	file:
DeleteHistoryObjs	generic/tclHistory.c	/^static Tcl_InterpDeleteProc DeleteHistoryObjs;$/;"	v	typeref:typename:Tcl_InterpDeleteProc	file:
DeleteIdx	win/tclWinReg.c	/^	BroadcastIdx, DeleteIdx, GetIdx, KeysIdx, SetIdx, TypeIdx, ValuesIdx$/;"	e	enum:RegistryObjCmd::SubCmdIdx	file:
DeleteImportedCmd	generic/tclNamesp.c	/^DeleteImportedCmd($/;"	f	typeref:typename:void	file:
DeleteInterpProc	generic/tclBasic.c	/^DeleteInterpProc($/;"	f	typeref:typename:void	file:
DeleteInterpProc	generic/tclBasic.c	/^static Tcl_FreeProc	DeleteInterpProc;$/;"	v	typeref:typename:Tcl_FreeProc	file:
DeleteKey	win/tclWinReg.c	/^DeleteKey($/;"	f	typeref:typename:int	file:
DeleteMirrorJumpTable	generic/tclAssembly.c	/^DeleteMirrorJumpTable($/;"	f	typeref:typename:void	file:
DeleteOpCmdClientData	generic/tclBasic.c	/^DeleteOpCmdClientData($/;"	f	typeref:typename:void	file:
DeleteProc	win/tclWinDde.c	/^DeleteProc($/;"	f	typeref:typename:void	file:
DeleteProcedureMethod	generic/tclOOMethod.c	/^DeleteProcedureMethod($/;"	f	typeref:typename:void	file:
DeleteProcedureMethodRecord	generic/tclOOMethod.c	/^DeleteProcedureMethodRecord($/;"	f	typeref:typename:void	file:
DeleteReflectedChannelMap	generic/tclIORChan.c	/^DeleteReflectedChannelMap($/;"	f	typeref:typename:void	file:
DeleteReflectedChannelMap	generic/tclIORChan.c	/^static Tcl_InterpDeleteProc	DeleteReflectedChannelMap;$/;"	v	typeref:typename:Tcl_InterpDeleteProc	file:
DeleteReflectedTransformMap	generic/tclIORTrans.c	/^DeleteReflectedTransformMap($/;"	f	typeref:typename:void	file:
DeleteScanNumberCache	generic/tclBinary.c	/^DeleteScanNumberCache($/;"	f	typeref:typename:void	file:
DeleteScriptLimitCallback	generic/tclInterp.c	/^DeleteScriptLimitCallback($/;"	f	typeref:typename:void	file:
DeleteScriptRecord	generic/tclIO.c	/^DeleteScriptRecord($/;"	f	typeref:typename:void	file:
DeleteSearches	generic/tclVar.c	/^DeleteSearches($/;"	f	typeref:typename:void	file:
DeleteThreadReflectedChannelMap	generic/tclIORChan.c	/^DeleteThreadReflectedChannelMap($/;"	f	typeref:typename:void	file:
DeleteThreadReflectedChannelMap	generic/tclIORChan.c	/^static Tcl_ExitProc	DeleteThreadReflectedChannelMap;$/;"	v	typeref:typename:Tcl_ExitProc	file:
DeleteThreadReflectedTransformMap	generic/tclIORTrans.c	/^DeleteThreadReflectedTransformMap($/;"	f	typeref:typename:void	file:
DeleteTimerHandler	generic/tclIO.c	/^DeleteTimerHandler($/;"	f	typeref:typename:void	file:
DeleteValue	win/tclWinReg.c	/^DeleteValue($/;"	f	typeref:typename:int	file:
DeletedHelpersNamespace	generic/tclOO.c	/^DeletedHelpersNamespace($/;"	f	typeref:typename:void	file:
Density	compat/zlib/contrib/ada/test.adb	/^      Density : constant Count := 30; --  from 0 to Buffer'Length - 2;$/;"	n	subprogram:Generate_File	file:
DescribeMounted	generic/tclZipfs.c	/^DescribeMounted($/;"	f	typeref:typename:int	file:
Destroy	compat/zlib/contrib/delphi/ZLib.pas	/^    destructor Destroy; override;$/;"	p
Destructing	generic/tclOO.c	/^#define Destructing(/;"	d	file:
DestructorErrorHandler	generic/tclOOMethod.c	/^DestructorErrorHandler($/;"	f	typeref:typename:void	file:
DestructorErrorHandler	generic/tclOOMethod.c	/^static ProcErrorProc	DestructorErrorHandler;$/;"	v	typeref:typename:ProcErrorProc	file:
DetachChannel	generic/tclIO.c	/^DetachChannel($/;"	f	typeref:typename:int	file:
Detached	generic/tclPipe.c	/^typedef struct Detached {$/;"	s	file:
Detached	generic/tclPipe.c	/^} Detached;$/;"	t	typeref:struct:Detached	file:
DetailsCloner	generic/tclOOProp.c	/^DetailsCloner($/;"	f	typeref:typename:int	file:
DetailsDeleter	generic/tclOOProp.c	/^DetailsDeleter($/;"	f	typeref:typename:void	file:
DetectEncoding	generic/tclIcu.c	/^DetectEncoding($/;"	f	typeref:typename:int	file:
DetectableEncodings	generic/tclIcu.c	/^DetectableEncodings($/;"	f	typeref:typename:int	file:
DetermineGreedySearchLen	generic/tclClockFmt.c	/^DetermineGreedySearchLen($/;"	f	typeref:typename:void	file:
DeterminePosixDSTTime	library/clock.tcl	/^proc ::tcl::clock::DeterminePosixDSTTime { z bound y } {$/;"	p	namespace:::tcl::clock
DeterminePosixDSTTime	library/clockclassic.tcl	/^proc DeterminePosixDSTTime { z bound y } {$/;"	p
DetokPath	library/safe.tcl	/^proc ::safe::DetokPath {child tokenPath} {$/;"	p	namespace:::safe
Dict	generic/tclDictObj.c	/^typedef struct Dict {$/;"	s	file:
Dict	generic/tclDictObj.c	/^} Dict;$/;"	t	typeref:struct:Dict	file:
DictAppendCmd	generic/tclDictObj.c	/^DictAppendCmd($/;"	f	typeref:typename:int	file:
DictAppendCmd	generic/tclDictObj.c	/^static Tcl_ObjCmdProc		DictAppendCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
DictAsListLength	generic/tclDictObj.c	/^DictAsListLength($/;"	f	typeref:typename:int	file:
DictAsListLength	generic/tclDictObj.c	/^static Tcl_ObjInterfaceListLengthProc	DictAsListLength;$/;"	v	typeref:typename:Tcl_ObjInterfaceListLengthProc	file:
DictCreateCmd	generic/tclDictObj.c	/^DictCreateCmd($/;"	f	typeref:typename:int	file:
DictCreateCmd	generic/tclDictObj.c	/^static Tcl_ObjCmdProc		DictCreateCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
DictExistsCmd	generic/tclDictObj.c	/^DictExistsCmd($/;"	f	typeref:typename:int	file:
DictExistsCmd	generic/tclDictObj.c	/^static Tcl_ObjCmdProc		DictExistsCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
DictFilterCmd	generic/tclDictObj.c	/^DictFilterCmd($/;"	f	typeref:typename:int	file:
DictFilterCmd	generic/tclDictObj.c	/^static Tcl_ObjCmdProc		DictFilterCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
DictForLoopCallback	generic/tclDictObj.c	/^DictForLoopCallback($/;"	f	typeref:typename:int	file:
DictForLoopCallback	generic/tclDictObj.c	/^static Tcl_NRPostProc		DictForLoopCallback;$/;"	v	typeref:typename:Tcl_NRPostProc	file:
DictForNRCmd	generic/tclDictObj.c	/^DictForNRCmd($/;"	f	typeref:typename:int	file:
DictForNRCmd	generic/tclDictObj.c	/^static Tcl_ObjCmdProc		DictForNRCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
DictGetCmd	generic/tclDictObj.c	/^DictGetCmd($/;"	f	typeref:typename:int	file:
DictGetCmd	generic/tclDictObj.c	/^static Tcl_ObjCmdProc		DictGetCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
DictGetDefCmd	generic/tclDictObj.c	/^DictGetDefCmd($/;"	f	typeref:typename:int	file:
DictGetDefCmd	generic/tclDictObj.c	/^static Tcl_ObjCmdProc		DictGetDefCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
DictGetInternalRep	generic/tclDictObj.c	/^#define DictGetInternalRep(/;"	d	file:
DictIncrCmd	generic/tclDictObj.c	/^DictIncrCmd($/;"	f	typeref:typename:int	file:
DictIncrCmd	generic/tclDictObj.c	/^static Tcl_ObjCmdProc		DictIncrCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
DictInfoCmd	generic/tclDictObj.c	/^DictInfoCmd($/;"	f	typeref:typename:int	file:
DictInfoCmd	generic/tclDictObj.c	/^static Tcl_ObjCmdProc		DictInfoCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
DictKeysCmd	generic/tclDictObj.c	/^DictKeysCmd($/;"	f	typeref:typename:int	file:
DictKeysCmd	generic/tclDictObj.c	/^static Tcl_ObjCmdProc		DictKeysCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
DictLappendCmd	generic/tclDictObj.c	/^DictLappendCmd($/;"	f	typeref:typename:int	file:
DictLappendCmd	generic/tclDictObj.c	/^static Tcl_ObjCmdProc		DictLappendCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
DictMapLoopCallback	generic/tclDictObj.c	/^DictMapLoopCallback($/;"	f	typeref:typename:int	file:
DictMapLoopCallback	generic/tclDictObj.c	/^static Tcl_NRPostProc		DictMapLoopCallback;$/;"	v	typeref:typename:Tcl_NRPostProc	file:
DictMapNRCmd	generic/tclDictObj.c	/^DictMapNRCmd($/;"	f	typeref:typename:int	file:
DictMapNRCmd	generic/tclDictObj.c	/^static Tcl_ObjCmdProc		DictMapNRCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
DictMapStorage	generic/tclDictObj.c	/^} DictMapStorage;$/;"	t	typeref:struct:__anond8412d640108	file:
DictMergeCmd	generic/tclDictObj.c	/^DictMergeCmd($/;"	f	typeref:typename:int	file:
DictMergeCmd	generic/tclDictObj.c	/^static Tcl_ObjCmdProc		DictMergeCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
DictRemoveCmd	generic/tclDictObj.c	/^DictRemoveCmd($/;"	f	typeref:typename:int	file:
DictRemoveCmd	generic/tclDictObj.c	/^static Tcl_ObjCmdProc		DictRemoveCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
DictReplaceCmd	generic/tclDictObj.c	/^DictReplaceCmd($/;"	f	typeref:typename:int	file:
DictReplaceCmd	generic/tclDictObj.c	/^static Tcl_ObjCmdProc		DictReplaceCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
DictSetCmd	generic/tclDictObj.c	/^DictSetCmd($/;"	f	typeref:typename:int	file:
DictSetCmd	generic/tclDictObj.c	/^static Tcl_ObjCmdProc		DictSetCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
DictSetInternalRep	generic/tclDictObj.c	/^#define DictSetInternalRep(/;"	d	file:
DictSizeCmd	generic/tclDictObj.c	/^DictSizeCmd($/;"	f	typeref:typename:int	file:
DictSizeCmd	generic/tclDictObj.c	/^static Tcl_ObjCmdProc		DictSizeCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
DictUnsetCmd	generic/tclDictObj.c	/^DictUnsetCmd($/;"	f	typeref:typename:int	file:
DictUnsetCmd	generic/tclDictObj.c	/^static Tcl_ObjCmdProc		DictUnsetCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
DictUpdateCmd	generic/tclDictObj.c	/^DictUpdateCmd($/;"	f	typeref:typename:int	file:
DictUpdateCmd	generic/tclDictObj.c	/^static Tcl_ObjCmdProc		DictUpdateCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
DictUpdateInfo	generic/tclCompile.h	/^} DictUpdateInfo;$/;"	t	typeref:struct:__anone79d5a530708
DictValuesCmd	generic/tclDictObj.c	/^DictValuesCmd($/;"	f	typeref:typename:int	file:
DictValuesCmd	generic/tclDictObj.c	/^static Tcl_ObjCmdProc		DictValuesCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
DictWasSet	generic/tclZlib.c	/^#define DictWasSet(/;"	d	file:
DictWithCmd	generic/tclDictObj.c	/^DictWithCmd($/;"	f	typeref:typename:int	file:
DictWithCmd	generic/tclDictObj.c	/^static Tcl_ObjCmdProc		DictWithCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
DictionaryCompare	generic/tclCmdIL.c	/^DictionaryCompare($/;"	f	typeref:typename:int	file:
DirInAccessPath	library/safe.tcl	/^proc ::safe::DirInAccessPath {child dir} {$/;"	p	namespace:::safe
DisassembleByteCodeAsDicts	generic/tclDisassemble.c	/^DisassembleByteCodeAsDicts($/;"	f	typeref:typename:Tcl_Obj *	file:
DisassembleByteCodeObj	generic/tclDisassemble.c	/^DisassembleByteCodeObj($/;"	f	typeref:typename:Tcl_Obj *	file:
DisassembleDictUpdateInfo	generic/tclCompCmds.c	/^DisassembleDictUpdateInfo($/;"	f	typeref:typename:void	file:
DisassembleDictUpdateInfo	generic/tclCompCmds.c	/^static AuxDataPrintProc	DisassembleDictUpdateInfo;$/;"	v	typeref:typename:AuxDataPrintProc	file:
DisassembleForeachInfo	generic/tclCompCmds.c	/^DisassembleForeachInfo($/;"	f	typeref:typename:void	file:
DisassembleForeachInfo	generic/tclCompCmds.c	/^static AuxDataPrintProc	DisassembleForeachInfo;$/;"	v	typeref:typename:AuxDataPrintProc	file:
DisassembleJumptableInfo	generic/tclCompCmdsSZ.c	/^DisassembleJumptableInfo($/;"	f	typeref:typename:void	file:
DisassembleJumptableInfo	generic/tclCompCmdsSZ.c	/^static AuxDataPrintProc	DisassembleJumptableInfo;$/;"	v	typeref:typename:AuxDataPrintProc	file:
DisassembleNewForeachInfo	generic/tclCompCmds.c	/^DisassembleNewForeachInfo($/;"	f	typeref:typename:void	file:
DisassembleNewForeachInfo	generic/tclCompCmds.c	/^static AuxDataPrintProc	DisassembleNewForeachInfo;$/;"	v	typeref:typename:AuxDataPrintProc	file:
DiscardInputQueued	generic/tclIO.c	/^DiscardInputQueued($/;"	f	typeref:typename:void	file:
DiscardOutputQueued	generic/tclIO.c	/^DiscardOutputQueued($/;"	f	typeref:typename:void	file:
Disclaim	generic/tclIOUtil.c	/^Disclaim(void)$/;"	f	typeref:typename:void	file:
Dispatch	generic/tclBasic.c	/^Dispatch($/;"	f	typeref:typename:int	file:
Dispatch	generic/tclBasic.c	/^static Tcl_NRPostProc	Dispatch;$/;"	v	typeref:typename:Tcl_NRPostProc	file:
Display64BitsSize	compat/zlib/contrib/minizip/miniunz.c	/^static void Display64BitsSize(ZPOS64_T n, int size_char) {$/;"	f	typeref:typename:void	file:
Dispose	compat/zlib/contrib/dotzlib/DotZLib/CodecBase.cs	/^        public void Dispose()$/;"	m	class:DotZLib.CodecBase
Dispose	compat/zlib/contrib/dotzlib/DotZLib/GZipStream.cs	/^        public void Dispose()$/;"	m	class:DotZLib.GZipStream
DisposeTraceResult	generic/tclTrace.c	/^DisposeTraceResult($/;"	f	typeref:typename:void	file:
DivertFindSymbol	generic/tclIOUtil.c	/^DivertFindSymbol($/;"	f	typeref:typename:void *	file:
DivertUnloadFile	generic/tclIOUtil.c	/^DivertUnloadFile($/;"	f	typeref:typename:void	file:
DllMain	win/tclWin32Dll.c	/^DllMain($/;"	f	typeref:typename:BOOL APIENTRY
DoCopyFile	unix/tclUnixFCmd.c	/^DoCopyFile($/;"	f	typeref:typename:int	file:
DoCopyFile	win/tclWinFCmd.c	/^DoCopyFile($/;"	f	typeref:typename:int	file:
DoCreateDirectory	unix/tclUnixFCmd.c	/^DoCreateDirectory($/;"	f	typeref:typename:int	file:
DoCreateDirectory	win/tclWinFCmd.c	/^DoCreateDirectory($/;"	f	typeref:typename:int	file:
DoGlob	generic/tclFileName.c	/^DoGlob($/;"	f	typeref:typename:int	file:
DoImport	generic/tclNamesp.c	/^DoImport($/;"	f	typeref:typename:int	file:
DoRead	generic/tclIO.c	/^DoRead($/;"	f	typeref:typename:Tcl_Size	file:
DoReadChars	generic/tclIO.c	/^DoReadChars($/;"	f	typeref:typename:Tcl_Size	file:
DoRemoveDirectory	unix/tclUnixFCmd.c	/^DoRemoveDirectory($/;"	f	typeref:typename:int	file:
DoRemoveDirectory	win/tclWinFCmd.c	/^DoRemoveDirectory($/;"	f	typeref:typename:int	file:
DoRemoveJustDirectory	win/tclWinFCmd.c	/^DoRemoveJustDirectory($/;"	f	typeref:typename:int	file:
DoRenameFile	unix/tclUnixFCmd.c	/^DoRenameFile($/;"	f	typeref:typename:int	file:
DoRenameFile	win/tclWinFCmd.c	/^DoRenameFile($/;"	f	typeref:typename:int	file:
Done	compat/zlib/contrib/ada/zlib.adb	/^      Done : Flate_End_Function;$/;"	c	type:Flate_Type	file:
DoneRequest	library/http/http.tcl	/^proc http::DoneRequest {token} {$/;"	p	namespace:http
DosTimeDate	generic/tclZipfs.c	/^DosTimeDate($/;"	f	typeref:typename:time_t	file:
DotZLib	compat/zlib/contrib/dotzlib/DotZLib/ChecksumImpl.cs	/^namespace DotZLib$/;"	n
DotZLib	compat/zlib/contrib/dotzlib/DotZLib/CircularBuffer.cs	/^namespace DotZLib$/;"	n
DotZLib	compat/zlib/contrib/dotzlib/DotZLib/CodecBase.cs	/^namespace DotZLib$/;"	n
DotZLib	compat/zlib/contrib/dotzlib/DotZLib/Deflater.cs	/^namespace DotZLib$/;"	n
DotZLib	compat/zlib/contrib/dotzlib/DotZLib/DotZLib.cs	/^namespace DotZLib$/;"	n
DotZLib	compat/zlib/contrib/dotzlib/DotZLib/GZipStream.cs	/^namespace DotZLib$/;"	n
DotZLib	compat/zlib/contrib/dotzlib/DotZLib/Inflater.cs	/^namespace DotZLib$/;"	n
DotZLibTests	compat/zlib/contrib/dotzlib/DotZLib/UnitTests.cs	/^namespace DotZLibTests$/;"	n
Double	generic/tclStrToD.c	/^typedef union Double {$/;"	u	file:
Double	generic/tclStrToD.c	/^} Double;$/;"	t	typeref:union:Double	file:
DoubleToExpAndSig	generic/tclStrToD.c	/^DoubleToExpAndSig($/;"	f	typeref:typename:void	file:
Dummy	compat/zlib/contrib/ada/mtest.adb	/^   Dummy : Character;$/;"	v	subprogram:MTest	file:
DupArithSeriesInternalRep	generic/tclArithSeries.c	/^DupArithSeriesInternalRep($/;"	f	typeref:typename:void	file:
DupAssembleCodeInternalRep	generic/tclAssembly.c	/^DupAssembleCodeInternalRep($/;"	f	typeref:typename:void	file:
DupAssembleCodeInternalRep	generic/tclAssembly.c	/^static Tcl_DupInternalRepProc	DupAssembleCodeInternalRep;$/;"	v	typeref:typename:Tcl_DupInternalRepProc	file:
DupBignum	generic/tclObj.c	/^DupBignum($/;"	f	typeref:typename:void	file:
DupBlock	generic/tclPkg.c	/^#define DupBlock(/;"	d	file:
DupByteCodeInternalRep	generic/tclCompile.c	/^DupByteCodeInternalRep($/;"	f	typeref:typename:void	file:
DupChannelInternalRep	generic/tclIO.c	/^DupChannelInternalRep($/;"	f	typeref:typename:void	file:
DupCmdNameInternalRep	generic/tclObj.c	/^DupCmdNameInternalRep($/;"	f	typeref:typename:void	file:
DupDictInternalRep	generic/tclDictObj.c	/^DupDictInternalRep($/;"	f	typeref:typename:void	file:
DupDictInternalRep	generic/tclDictObj.c	/^static Tcl_DupInternalRepProc	DupDictInternalRep;$/;"	v	typeref:typename:Tcl_DupInternalRepProc	file:
DupDictUpdateInfo	generic/tclCompCmds.c	/^DupDictUpdateInfo($/;"	f	typeref:typename:void *	file:
DupDictUpdateInfo	generic/tclCompCmds.c	/^static AuxDataDupProc	DupDictUpdateInfo;$/;"	v	typeref:typename:AuxDataDupProc	file:
DupEncodingInternalRep	generic/tclEncoding.c	/^DupEncodingInternalRep($/;"	f	typeref:typename:void	file:
DupEncodingInternalRep	generic/tclEncoding.c	/^static Tcl_DupInternalRepProc	DupEncodingInternalRep;$/;"	v	typeref:typename:Tcl_DupInternalRepProc	file:
DupEnsembleCmdRep	generic/tclEnsemble.c	/^DupEnsembleCmdRep($/;"	f	typeref:typename:void	file:
DupExprCodeInternalRep	generic/tclExecute.c	/^DupExprCodeInternalRep($/;"	f	typeref:typename:void	file:
DupForeachInfo	generic/tclCompCmds.c	/^DupForeachInfo($/;"	f	typeref:typename:void *	file:
DupForeachInfo	generic/tclCompCmds.c	/^static AuxDataDupProc	DupForeachInfo;$/;"	v	typeref:typename:AuxDataDupProc	file:
DupFsPathInternalRep	generic/tclPathObj.c	/^DupFsPathInternalRep($/;"	f	typeref:typename:void	file:
DupIndex	generic/tclIndexObj.c	/^DupIndex($/;"	f	typeref:typename:void	file:
DupJumptableInfo	generic/tclCompCmdsSZ.c	/^DupJumptableInfo($/;"	f	typeref:typename:void *	file:
DupJumptableInfo	generic/tclCompCmdsSZ.c	/^static AuxDataDupProc	DupJumptableInfo;$/;"	v	typeref:typename:AuxDataDupProc	file:
DupLStringRep	generic/tclTestABSList.c	/^DupLStringRep(Tcl_Obj *srcPtr, Tcl_Obj *copyPtr)$/;"	f	typeref:typename:void	file:
DupLStringRep	generic/tclTestABSList.c	/^static Tcl_DupInternalRepProc DupLStringRep;$/;"	v	typeref:typename:Tcl_DupInternalRepProc	file:
DupLambdaInternalRep	generic/tclProc.c	/^DupLambdaInternalRep($/;"	f	typeref:typename:void	file:
DupLgenSeriesRep	generic/tclTestABSList.c	/^DupLgenSeriesRep($/;"	f	typeref:typename:void	file:
DupListInternalRep	generic/tclListObj.c	/^DupListInternalRep($/;"	f	typeref:typename:void	file:
DupLocalVarName	generic/tclVar.c	/^DupLocalVarName($/;"	f	typeref:typename:void	file:
DupLocalVarName	generic/tclVar.c	/^static Tcl_DupInternalRepProc	DupLocalVarName;$/;"	v	typeref:typename:Tcl_DupInternalRepProc	file:
DupMethodNameRep	generic/tclOOCall.c	/^DupMethodNameRep($/;"	f	typeref:typename:void	file:
DupNsNameInternalRep	generic/tclNamesp.c	/^DupNsNameInternalRep($/;"	f	typeref:typename:void	file:
DupParsedVarName	generic/tclVar.c	/^DupParsedVarName($/;"	f	typeref:typename:void	file:
DupParsedVarName	generic/tclVar.c	/^static Tcl_DupInternalRepProc	DupParsedVarName;$/;"	v	typeref:typename:Tcl_DupInternalRepProc	file:
DupProperByteArrayInternalRep	generic/tclBinary.c	/^DupProperByteArrayInternalRep($/;"	f	typeref:typename:void	file:
DupRegexpInternalRep	generic/tclRegexp.c	/^DupRegexpInternalRep($/;"	f	typeref:typename:void	file:
DupString	generic/tclPkg.c	/^#define DupString(/;"	d	file:
DupStringInternalRep	generic/tclStringObj.c	/^DupStringInternalRep($/;"	f	typeref:typename:void	file:
DupTestIndexHexInternalRep	generic/tclTestObjInterface.c	/^DupTestIndexHexInternalRep($/;"	f	typeref:typename:void	file:
DupTestListIntegerInternalRep	generic/tclTestObjInterfaceInteger.c	/^static void DupTestListIntegerInternalRep(Tcl_Obj *srcPtr, Tcl_Obj *copyPtr) {$/;"	f	typeref:typename:void	file:
Duplex	compat/zlib/contrib/ada/zlib-streams.ads	/^   type Stream_Mode is (In_Stream, Out_Stream, Duplex);$/;"	l	type:Stream_Mode	file:
During	generic/tclCmdMZ.c	/^During($/;"	f	typeref:typename:Tcl_Obj *	file:
DyldOFIErrorMsg	unix/tclLoadDyld.c	/^DyldOFIErrorMsg($/;"	f	typeref:typename:const char *	file:
EADDRINUSE	win/tclWinPort.h	/^#   define EADDRINUSE	/;"	d
EADDRNOTAVAIL	win/tclWinPort.h	/^#   define EADDRNOTAVAIL /;"	d
EAFNOSUPPORT	win/tclWinPort.h	/^#   define EAFNOSUPPORT	/;"	d
EAGAIN	generic/tclIO.h	/^#   define EAGAIN /;"	d
EAI_FAMILY	compat/fake-rfc2553.h	/^# define EAI_FAMILY	/;"	d
EAI_MEMORY	compat/fake-rfc2553.h	/^# define EAI_MEMORY	/;"	d
EAI_NODATA	compat/fake-rfc2553.h	/^# define EAI_NODATA	/;"	d
EAI_NONAME	compat/fake-rfc2553.h	/^# define EAI_NONAME	/;"	d
EAI_SERVICE	compat/fake-rfc2553.h	/^# define EAI_SERVICE /;"	d
EAI_SYSTEM	compat/fake-rfc2553.h	/^# define EAI_SYSTEM	/;"	d
EALREADY	win/tclWinPort.h	/^#   define EALREADY	/;"	d
EAT	generic/regcomp.c	/^#define	EAT(/;"	d	file:
EBADMSG	win/tclWinPort.h	/^#   define EBADMSG	/;"	d
ECANCELED	win/tclWinPort.h	/^#   define ECANCELED	/;"	d
ECL	generic/tclCompile.h	/^} ECL;$/;"	t	typeref:struct:__anone79d5a530408
ECLASS	generic/regcomp.c	/^#define	ECLASS	/;"	d	file:
ECONNABORTED	win/tclWinPort.h	/^#   define ECONNABORTED	/;"	d
ECONNREFUSED	win/tclWinPort.h	/^#   define ECONNREFUSED	/;"	d
ECONNRESET	win/tclWinPort.h	/^#   define ECONNRESET	/;"	d
ECRGetInternalRep	generic/tclEnsemble.c	/^#define ECRGetInternalRep(/;"	d	file:
ECRSetInternalRep	generic/tclEnsemble.c	/^#define ECRSetInternalRep(/;"	d	file:
EDESTADDRREQ	win/tclWinPort.h	/^#   define EDESTADDRREQ	/;"	d
EDQUOT	win/tclWinPort.h	/^#   define EDQUOT	/;"	d
EHOSTDOWN	win/tclWinPort.h	/^#   define EHOSTDOWN	/;"	d
EHOSTUNREACH	win/tclWinPort.h	/^#   define EHOSTUNREACH	/;"	d
EIDRM	win/tclWinPort.h	/^#   define EIDRM	/;"	d
EINPROGRESS	win/tclWinPort.h	/^#   define EINPROGRESS	/;"	d
EINVAL	generic/tclIORChan.c	/^#define EINVAL	/;"	d	file:
EINVAL	generic/tclIORTrans.c	/^#define EINVAL	/;"	d	file:
EISCONN	win/tclWinPort.h	/^#   define EISCONN	/;"	d
ELLIPSIFY	generic/tclOOMethod.c	/^#define ELLIPSIFY(/;"	d	file:
ELOOP	win/tclWinPort.h	/^#   define ELOOP	/;"	d
EMPTY	generic/regcomp.c	/^#define	EMPTY	/;"	d	file:
EMPTY	generic/tclCompExpr.c	/^#define EMPTY	/;"	d	file:
EMPTYARC	generic/regcomp.c	/^#define	EMPTYARC(/;"	d	file:
EMSGSIZE	win/tclWinPort.h	/^#   define EMSGSIZE	/;"	d
ENABLE_ASL	macosx/tclMacOSXNotify.c	/^#define ENABLE_ASL /;"	d	file:
ENABLE_ASL	macosx/tclMacOSXNotify.c	/^#define ENABLE_ASL$/;"	d	file:
ENABLE_CCACHE	libtommath/CMakeLists.txt	/^    option(ENABLE_CCACHE "Enable ccache." ON)$/;"	D
ENABLE_LIST_ASSERTS	generic/tclListObj.c	/^#  define ENABLE_LIST_ASSERTS /;"	d	file:
ENABLING MEMORY DEBUGGING	doc/TCL_MEM_DEBUG.3	/^.SH "ENABLING MEMORY DEBUGGING"$/;"	s	title:TCL_MEM_DEBUG
ENCLOSING_MARK	generic/tclUniData.c	/^    ENCLOSING_MARK,$/;"	e	enum:__anon910316cb0103	file:
ENCODING FILES	doc/Encoding.3	/^.SH "ENCODING FILES"$/;"	s	title:Tcl_GetEncoding
ENCODING_DOUBLEBYTE	generic/tclEncoding.c	/^#define ENCODING_DOUBLEBYTE	/;"	d	file:
ENCODING_ERROR	generic/tclEvent.c	/^static const char ENCODING_ERROR[] = "\\n\\t(encoding error in stderr)";$/;"	v	typeref:typename:const char[]	file:
ENCODING_ERROR	generic/tclMain.c	/^static const char ENCODING_ERROR[] = "\\n\\t(encoding error in stderr)";$/;"	v	typeref:typename:const char[]	file:
ENCODING_ESCAPE	generic/tclEncoding.c	/^#define ENCODING_ESCAPE	/;"	d	file:
ENCODING_INPUT	generic/tclEncoding.c	/^    ENCODING_INPUT = 0x400	\/* For UTF-8\/CESU-8 encoding, means$/;"	e	enum:InternalEncodingFlags	file:
ENCODING_LINESIZE	generic/tclIO.c	/^#define ENCODING_LINESIZE /;"	d	file:
ENCODING_MULTIBYTE	generic/tclEncoding.c	/^#define ENCODING_MULTIBYTE	/;"	d	file:
ENCODING_PROFILE_GET	generic/tclInt.h	/^#define ENCODING_PROFILE_GET(/;"	d
ENCODING_PROFILE_MASK	generic/tclInt.h	/^#define ENCODING_PROFILE_MASK /;"	d
ENCODING_PROFILE_SET	generic/tclInt.h	/^#define ENCODING_PROFILE_SET(/;"	d
ENCODING_SINGLEBYTE	generic/tclEncoding.c	/^#define ENCODING_SINGLEBYTE	/;"	d	file:
ENCODING_UTF	generic/tclEncoding.c	/^    ENCODING_UTF = 0x200,	\/* For UTF-8 encoding, allow 4-byte output$/;"	e	enum:InternalEncodingFlags	file:
ENC_CREATE	generic/tclTest.c	/^	ENC_CREATE, ENC_DELETE, ENC_NULLENGTH, ENC_EXTTOUTF, ENC_UTFTOEXT$/;"	e	enum:TestencodingObjCmd::options	file:
ENC_DELETE	generic/tclTest.c	/^	ENC_CREATE, ENC_DELETE, ENC_NULLENGTH, ENC_EXTTOUTF, ENC_UTFTOEXT$/;"	e	enum:TestencodingObjCmd::options	file:
ENC_EXTTOUTF	generic/tclTest.c	/^	ENC_CREATE, ENC_DELETE, ENC_NULLENGTH, ENC_EXTTOUTF, ENC_UTFTOEXT$/;"	e	enum:TestencodingObjCmd::options	file:
ENC_NULLENGTH	generic/tclTest.c	/^	ENC_CREATE, ENC_DELETE, ENC_NULLENGTH, ENC_EXTTOUTF, ENC_UTFTOEXT$/;"	e	enum:TestencodingObjCmd::options	file:
ENC_UTFTOEXT	generic/tclTest.c	/^	ENC_CREATE, ENC_DELETE, ENC_NULLENGTH, ENC_EXTTOUTF, ENC_UTFTOEXT$/;"	e	enum:TestencodingObjCmd::options	file:
END	generic/regcomp.c	/^#define	END	/;"	d	file:
END	generic/tclCompExpr.c	/^#define END	/;"	d	file:
ENDHEADERMAGIC	compat/zlib/contrib/minizip/zip.c	/^#define ENDHEADERMAGIC /;"	d	file:
ENDOF	generic/regc_lex.c	/^#define	ENDOF(/;"	d	file:
END_BLOCK	compat/zlib/trees.c	/^#define END_BLOCK /;"	d	file:
END_OF_TIME	generic/tclDate.c	/^#define END_OF_TIME	/;"	d	file:
END_OF_TIME	generic/tclDateClassic.c	/^#define END_OF_TIME	/;"	d	file:
ENETDOWN	win/tclWinPort.h	/^#   define ENETDOWN	/;"	d
ENETRESET	win/tclWinPort.h	/^#   define ENETRESET	/;"	d
ENETUNREACH	win/tclWinPort.h	/^#   define ENETUNREACH	/;"	d
ENOBUFS	win/tclWinPort.h	/^#   define ENOBUFS	/;"	d
ENODATA	win/tclWinPort.h	/^#   define ENODATA	/;"	d
ENOLINK	win/tclWinPort.h	/^#   define ENOLINK	/;"	d
ENOMSG	win/tclWinPort.h	/^#   define ENOMSG	/;"	d
ENOPROTOOPT	win/tclWinPort.h	/^#   define ENOPROTOOPT	/;"	d
ENOSR	win/tclWinPort.h	/^#   define ENOSR	/;"	d
ENOSTR	win/tclWinPort.h	/^#   define ENOSTR	/;"	d
ENOTCONN	win/tclWinPort.h	/^#   define ENOTCONN	/;"	d
ENOTEMPTY	win/tclWinPort.h	/^#   define ENOTEMPTY	/;"	d
ENOTRECOVERABLE	win/tclWinPort.h	/^#   define ENOTRECOVERABLE	/;"	d
ENOTSOCK	win/tclWinPort.h	/^#   define ENOTSOCK	/;"	d
ENOTSUP	win/tclWinPort.h	/^#   define ENOTSUP	/;"	d
ENOUGH	compat/zlib/contrib/infback9/inftree9.h	/^#define ENOUGH (ENOUGH_LENS+ENOUGH_/;"	d
ENOUGH	compat/zlib/inftrees.h	/^#define ENOUGH (ENOUGH_LENS+ENOUGH_/;"	d
ENOUGH_DISTS	compat/zlib/contrib/infback9/inftree9.h	/^#define ENOUGH_DISTS /;"	d
ENOUGH_DISTS	compat/zlib/inftrees.h	/^#define ENOUGH_DISTS /;"	d
ENOUGH_LENS	compat/zlib/contrib/infback9/inftree9.h	/^#define ENOUGH_LENS /;"	d
ENOUGH_LENS	compat/zlib/inftrees.h	/^#define ENOUGH_LENS /;"	d
ENSEMBLE PROPERTIES	doc/Ensemble.3	/^.SS "ENSEMBLE PROPERTIES"$/;"	S	section:Tcl_Ensemble""DESCRIPTION
ENSEMBLE_COMPILE	generic/tclInt.h	/^#define ENSEMBLE_COMPILE /;"	d
ENSEMBLE_DEAD	generic/tclInt.h	/^#define ENSEMBLE_DEAD	/;"	d
ENS_CONFIG	generic/tclEnsemble.c	/^    ENS_CONFIG, ENS_CREATE, ENS_EXISTS$/;"	e	enum:EnsSubcmds	file:
ENS_CREATE	generic/tclEnsemble.c	/^    ENS_CONFIG, ENS_CREATE, ENS_EXISTS$/;"	e	enum:EnsSubcmds	file:
ENS_EXISTS	generic/tclEnsemble.c	/^    ENS_CONFIG, ENS_CREATE, ENS_EXISTS$/;"	e	enum:EnsSubcmds	file:
ENV_FLAGS	unix/Makefile.in	/^ENV_FLAGS =$/;"	m
EOF	compat/zlib/configure	/^    cat > $test.c <<EOF$/;"	h
EOF	compat/zlib/configure	/^    cat >$test.c <<EOF$/;"	h
EOF	compat/zlib/configure	/^  cat > $test.c << EOF$/;"	h
EOF	compat/zlib/configure	/^  cat > $test.c <<EOF$/;"	h
EOF	compat/zlib/configure	/^  cat >$test.c <<EOF$/;"	h
EOF	compat/zlib/configure	/^cat > $test.c << EOF$/;"	h
EOF	compat/zlib/configure	/^cat > $test.c <<EOF$/;"	h
EOF	unix/installManPage	/^	-*) cat <<EOF$/;"	h
EOK	generic/tclIORChan.c	/^#define EOK	/;"	d	file:
EOK	generic/tclIORTrans.c	/^#define EOK	/;"	d	file:
EOL	compat/zlib/contrib/ada/buffer_demo.adb	/^   EOL  : Character renames ASCII.LF;$/;"	v	subprogram:Buffer_Demo	file:
EOPNOTSUPP	win/tclWinPort.h	/^#   define EOPNOTSUPP	/;"	d
EOS	generic/regcomp.c	/^#define	EOS	/;"	d	file:
EOTHER	win/tclWinPort.h	/^#   define EOTHER	/;"	d
EOVERFLOW	unix/tclUnixPort.h	/^#	define EOVERFLOW	/;"	d
EOVERFLOW	win/tclWinPort.h	/^#   define EOVERFLOW	/;"	d
EOWNERDEAD	win/tclWinPort.h	/^#   define EOWNERDEAD	/;"	d
EPFNOSUPPORT	win/tclWinPort.h	/^#   define EPFNOSUPPORT	/;"	d
EPOCH	generic/tclDate.c	/^#define EPOCH	/;"	d	file:
EPOCH	generic/tclDateClassic.c	/^#define EPOCH	/;"	d	file:
EPROTO	win/tclWinPort.h	/^#   define EPROTO	/;"	d
EPROTONOSUPPORT	win/tclWinPort.h	/^#   define EPROTONOSUPPORT /;"	d
EPROTOTYPE	win/tclWinPort.h	/^#   define EPROTOTYPE	/;"	d
EQUAL	compat/zlib/deflate.c	/^#define EQUAL /;"	d	file:
EQUAL	generic/tclCompExpr.c	/^#define EQUAL	/;"	d	file:
EREMOTE	win/tclWinPort.h	/^#   define EREMOTE	/;"	d
ERR	generic/regcomp.c	/^#define	ERR(e)	VERR(/;"	d	file:
ERR	generic/regexec.c	/^#define	ERR(e)	VERR(/;"	d	file:
ERRNO	compat/zlib/contrib/ada/zlib.adb	/^       ERRNO,$/;"	l	type:Return_Code_Enum	file:
ERROR RETURNS	doc/TraceVar.3	/^.SH "ERROR RETURNS"$/;"	s	title:Tcl_TraceVar
ERROR_OFFSET	unix/tclUnixChan.c	/^#define ERROR_OFFSET	/;"	d	file:
ERR_ALREADY_LOGGED	generic/tclInt.h	/^#define ERR_ALREADY_LOGGED	/;"	d
ERR_LEGACY_COPY	generic/tclInt.h	/^#define ERR_LEGACY_COPY	/;"	d
ERR_MSG	compat/zlib/zutil.h	/^#define ERR_MSG(/;"	d
ERR_RETURN	compat/zlib/zutil.h	/^#define ERR_RETURN(/;"	d
ESHUTDOWN	win/tclWinPort.h	/^#   define ESHUTDOWN	/;"	d
ESOCKTNOSUPPORT	win/tclWinPort.h	/^#   define ESOCKTNOSUPPORT /;"	d
ESTALE	win/tclWinPort.h	/^#   define ESTALE	/;"	d
ETIME	win/tclWinPort.h	/^#   define ETIME	/;"	d
ETIMEDOUT	win/tclWinPort.h	/^#   define ETIMEDOUT	/;"	d
ETOOMANYREFS	win/tclWinPort.h	/^#   define ETOOMANYREFS	/;"	d
ETXTBSY	win/tclWinPort.h	/^#   define ETXTBSY	/;"	d
EUC_ENCODINGS	tools/encoding/Makefile	/^EUC_ENCODINGS = euc-cn.txt euc-kr.txt euc-jp.txt$/;"	m
EUSERS	win/tclWinPort.h	/^#   define EUSERS	/;"	d
EVENT	generic/tclIORChan.c	/^	EVENT = 2$/;"	e	enum:TclChanPostEventObjCmd::ArgIndices	file:
EVENT_READ	generic/tclIORChan.c	/^    EVENT_READ, EVENT_WRITE$/;"	e	enum:__anon92d8dd290303	file:
EVENT_WRITE	generic/tclIORChan.c	/^    EVENT_READ, EVENT_WRITE$/;"	e	enum:__anon92d8dd290303	file:
EWOULDBLOCK	generic/tclIO.h	/^#   define EWOULDBLOCK /;"	d
EWOULDBLOCK	win/tclWinPort.h	/^#   define EWOULDBLOCK	/;"	d
EXACT	generic/tclCmdIL.c	/^	EXACT, GLOB, REGEXP, SORTED$/;"	e	enum:Tcl_LsearchObjCmd::modes	file:
EXAMPLE	doc/DictObj.3	/^.SH EXAMPLE$/;"	s	title:Tcl_DictObj
EXAMPLE	doc/NRE.3	/^.SH EXAMPLE$/;"	s	title:NRE
EXAMPLE	doc/Thread.3	/^.SH EXAMPLE$/;"	s	title:Threads
EXAMPLE FILESYSTEM DEFINITION	doc/FileSystem.3	/^.SS "EXAMPLE FILESYSTEM DEFINITION"$/;"	S	section:Filesystem""THE VIRTUAL FILESYSTEM API
EXAMPLE OF THE LIFETIME OF A VALUE	doc/Object.3	/^.SH "EXAMPLE OF THE LIFETIME OF A VALUE"$/;"	s	title:Tcl_Obj
EXCEPTION_DISPOSITION	win/tcl.m4	/^	AC_DEFINE(EXCEPTION_DISPOSITION, int,$/;"	d
EXCESS	compat/zlib/examples/fitblk.c	/^#define EXCESS /;"	d	file:
EXE	compat/zlib/Makefile.in	/^EXE=$/;"	m
EXEC_IGNORESTDERR	generic/tclIOCmd.c	/^	EXEC_IGNORESTDERR, EXEC_KEEPNEWLINE, EXEC_LAST$/;"	e	enum:Tcl_ExecObjCmd::execOptionsEnum	file:
EXEC_KEEPNEWLINE	generic/tclIOCmd.c	/^	EXEC_IGNORESTDERR, EXEC_KEEPNEWLINE, EXEC_LAST$/;"	e	enum:Tcl_ExecObjCmd::execOptionsEnum	file:
EXEC_LAST	generic/tclIOCmd.c	/^	EXEC_IGNORESTDERR, EXEC_KEEPNEWLINE, EXEC_LAST$/;"	e	enum:Tcl_ExecObjCmd::execOptionsEnum	file:
EXEEXT	win/Makefile.in	/^EXEEXT		= @EXEEXT@$/;"	m
EXEEXT_FOR_BUILD	unix/tcl.m4	/^    AC_SUBST(EXEEXT_FOR_BUILD)])dnl$/;"	s
EXEEXT_FOR_BUILD	win/tcl.m4	/^AC_SUBST(EXEEXT_FOR_BUILD)])dnl$/;"	s
EXESUFFIX	win/Makefile.in	/^EXESUFFIX		= @EXESUFFIX@$/;"	m
EXESUFFIX	win/configure.ac	/^AC_SUBST(EXESUFFIX)$/;"	s
EXE_SUFFIX	unix/Makefile.in	/^EXE_SUFFIX		= @EXEEXT@$/;"	m
EXISTS	generic/tclVar.c	/^static const char EXISTS[] =		"variable already exists";$/;"	v	typeref:typename:const char[]	file:
EXIT_ERR	compat/zlib/contrib/pascal/example.pas	/^procedure EXIT_ERR(const msg: String);$/;"	p
EXIT_SUCCESS	generic/tclDate.c	/^#      define EXIT_SUCCESS /;"	d	file:
EXIT_SUCCESS	generic/tclDate.c	/^#    define EXIT_SUCCESS /;"	d	file:
EXIT_SUCCESS	generic/tclDateClassic.c	/^#      define EXIT_SUCCESS /;"	d	file:
EXIT_SUCCESS	generic/tclDateClassic.c	/^#    define EXIT_SUCCESS /;"	d	file:
EXLEN	compat/zlib/inflate.h	/^    EXLEN,      \/* i: waiting for extra length (gzip) *\/$/;"	e	enum:__anon6bf0a2910103
EXPAND_OF	generic/tclIndexObj.c	/^#define EXPAND_OF(/;"	d	file:
EXPON	generic/tclCompExpr.c	/^#define EXPON	/;"	d	file:
EXPONENT	generic/tclStrToD.c	/^	EXPONENT_START, EXPONENT_SIGNUM, EXPONENT,$/;"	e	enum:TclParseNumber::State	file:
EXPONENT_BIAS	generic/tclStrToD.c	/^#define EXPONENT_BIAS	/;"	d	file:
EXPONENT_OF_ZERO	generic/tclExecute.c	/^#define EXPONENT_OF_ZERO	/;"	d	file:
EXPONENT_SIGNUM	generic/tclStrToD.c	/^	EXPONENT_START, EXPONENT_SIGNUM, EXPONENT,$/;"	e	enum:TclParseNumber::State	file:
EXPONENT_START	generic/tclStrToD.c	/^	EXPONENT_START, EXPONENT_SIGNUM, EXPONENT,$/;"	e	enum:TclParseNumber::State	file:
EXP_MASK	generic/tclStrToD.c	/^#define EXP_MASK	/;"	d	file:
EXP_SHIFT	generic/tclStrToD.c	/^#define EXP_SHIFT	/;"	d	file:
EXTERN	generic/tcl.h	/^#   define EXTERN /;"	d
EXTERNAL EVENT LOOPS	doc/Notifier.3	/^.SH "EXTERNAL EVENT LOOPS"$/;"	s	title:Notifier
EXTRA	compat/zlib/examples/gzlog.c	/^#define EXTRA /;"	d	file:
EXTRA	compat/zlib/inflate.h	/^    EXTRA,      \/* i: waiting for extra bytes (gzip) *\/$/;"	e	enum:__anon6bf0a2910103
EXTRA_APP_CC_SWITCHES	unix/configure.ac	/^AC_SUBST(EXTRA_APP_CC_SWITCHES)$/;"	s
EXTRA_BUILD_HTML	unix/configure.ac	/^AC_SUBST(EXTRA_BUILD_HTML)$/;"	s
EXTRA_CC_SWITCHES	unix/configure.ac	/^AC_SUBST(EXTRA_CC_SWITCHES)$/;"	s
EXTRA_CFLAGS	win/configure.ac	/^AC_SUBST(EXTRA_CFLAGS)$/;"	s
EXTRA_CONFIGURE_ARGS	macosx/GNUmakefile	/^EXTRA_CONFIGURE_ARGS	?=$/;"	m
EXTRA_INSTALL	unix/configure.ac	/^AC_SUBST(EXTRA_INSTALL)$/;"	s
EXTRA_INSTALL_BINARIES	unix/configure.ac	/^AC_SUBST(EXTRA_INSTALL_BINARIES)$/;"	s
EXTRA_MAKE_ARGS	macosx/GNUmakefile	/^EXTRA_MAKE_ARGS		?=$/;"	m
EXTRA_PROGRAMS	compat/zlib/contrib/minizip/Makefile.am	/^EXTRA_PROGRAMS = miniunzip minizip$/;"	m
EXTRA_STATE	compat/zlib/deflate.h	/^#define EXTRA_STATE /;"	d
EXTRA_TCLSH_LIBS	unix/configure.ac	/^AC_SUBST(EXTRA_TCLSH_LIBS)$/;"	s
EachloopCmd	generic/tclCmdAH.c	/^EachloopCmd($/;"	f	typeref:typename:int	file:
Emit14Inst	generic/tclCompile.h	/^#define Emit14Inst(/;"	d
EncodeCmdLocMap	generic/tclCompile.c	/^EncodeCmdLocMap($/;"	f	typeref:typename:unsigned char *	file:
EncodeEventMask	generic/tclIORChan.c	/^EncodeEventMask($/;"	f	typeref:typename:int	file:
Encoding	generic/tclEncoding.c	/^} Encoding;$/;"	t	typeref:struct:__anondb7a8e8c0108	file:
EncodingConvertParseOptions	generic/tclCmdAH.c	/^EncodingConvertParseOptions($/;"	f	typeref:typename:int	file:
EncodingConvertfromObjCmd	generic/tclCmdAH.c	/^EncodingConvertfromObjCmd($/;"	f	typeref:typename:int
EncodingConvertfromObjCmd	generic/tclCmdAH.c	/^static Tcl_ObjCmdProc	EncodingConvertfromObjCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
EncodingConverttoObjCmd	generic/tclCmdAH.c	/^EncodingConverttoObjCmd($/;"	f	typeref:typename:int
EncodingConverttoObjCmd	generic/tclCmdAH.c	/^static Tcl_ObjCmdProc	EncodingConverttoObjCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
EncodingDirsObjCmd	generic/tclCmdAH.c	/^EncodingDirsObjCmd($/;"	f	typeref:typename:int
EncodingDirsObjCmd	generic/tclCmdAH.c	/^static Tcl_ObjCmdProc	EncodingDirsObjCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
EncodingFreeProc	generic/tclTest.c	/^EncodingFreeProc($/;"	f	typeref:typename:void	file:
EncodingFromUtfProc	generic/tclTest.c	/^EncodingFromUtfProc($/;"	f	typeref:typename:int	file:
EncodingGetInternalRep	generic/tclEncoding.c	/^#define EncodingGetInternalRep(/;"	d	file:
EncodingNamesObjCmd	generic/tclCmdAH.c	/^EncodingNamesObjCmd($/;"	f	typeref:typename:int
EncodingNamesObjCmd	generic/tclCmdAH.c	/^static Tcl_ObjCmdProc	EncodingNamesObjCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
EncodingProfilesObjCmd	generic/tclCmdAH.c	/^EncodingProfilesObjCmd($/;"	f	typeref:typename:int
EncodingProfilesObjCmd	generic/tclCmdAH.c	/^static Tcl_ObjCmdProc	EncodingProfilesObjCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
EncodingSetInternalRep	generic/tclEncoding.c	/^#define EncodingSetInternalRep(/;"	d	file:
EncodingSystemObjCmd	generic/tclCmdAH.c	/^EncodingSystemObjCmd($/;"	f	typeref:typename:int
EncodingSystemObjCmd	generic/tclCmdAH.c	/^static Tcl_ObjCmdProc	EncodingSystemObjCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
EncodingToUtfProc	generic/tclTest.c	/^EncodingToUtfProc($/;"	f	typeref:typename:int	file:
EnsConfigOpts	generic/tclEnsemble.c	/^enum EnsConfigOpts {$/;"	g	file:
EnsCreateOpts	generic/tclEnsemble.c	/^enum EnsCreateOpts {$/;"	g	file:
EnsSubcmds	generic/tclEnsemble.c	/^enum EnsSubcmds {$/;"	g	file:
EnsembleCmdRep	generic/tclEnsemble.c	/^} EnsembleCmdRep;$/;"	t	typeref:struct:__anonb2501df00108	file:
EnsembleConfig	generic/tclInt.h	/^typedef struct EnsembleConfig {$/;"	s
EnsembleConfig	generic/tclInt.h	/^} EnsembleConfig;$/;"	t	typeref:struct:EnsembleConfig
EnsembleImplMap	generic/tclInt.h	/^} EnsembleImplMap;$/;"	t	typeref:struct:__anon1eb6b3550708
EnsembleUnknownCallback	generic/tclEnsemble.c	/^EnsembleUnknownCallback($/;"	f	typeref:typename:int	file:
EnterCmdExtentData	generic/tclCompile.c	/^EnterCmdExtentData($/;"	f	typeref:typename:void	file:
EnterCmdStartData	generic/tclCompile.c	/^EnterCmdStartData($/;"	f	typeref:typename:void	file:
EnterCmdWordData	generic/tclCompile.c	/^EnterCmdWordData($/;"	f	typeref:typename:void	file:
EnterLocale	library/clock.tcl	/^proc ::tcl::clock::EnterLocale { locale } {$/;"	p	namespace:::tcl::clock
EnterLocale	library/clockclassic.tcl	/^proc EnterLocale { locale } {$/;"	p
EnvHasLVT	generic/tclCompile.h	/^#define EnvHasLVT(/;"	d
EnvTraceProc	generic/tclEnv.c	/^EnvTraceProc($/;"	f	typeref:typename:char *	file:
EqualDouble	generic/tclLink.c	/^EqualDouble($/;"	f	typeref:typename:int	file:
Err	win/nmakehlp.c	/^pipeinfo Err = {INVALID_HANDLE_VALUE, ""};$/;"	v	typeref:typename:pipeinfo
ErrArg	generic/tclCmdIL.c	/^     NoneArg, NumericArg, RangeKeywordArg, ErrArg, LastArg = 8$/;"	e	enum:__anond5eb1cce0503	file:
ErrAssocData	generic/tclEvent.c	/^} ErrAssocData;$/;"	t	typeref:struct:__anon850510a70108	file:
ErrnoReturn	generic/tclIORChan.c	/^ErrnoReturn($/;"	f	typeref:typename:int	file:
Error	unix/tclLoadAix.c	/^#define Error(/;"	d	file:
ErrorCodeRead	generic/tclNamesp.c	/^ErrorCodeRead($/;"	f	typeref:typename:char *	file:
ErrorInfoRead	generic/tclNamesp.c	/^ErrorInfoRead($/;"	f	typeref:typename:char *	file:
ErrorMaxElementsExceeded	generic/tclTestObjInterfaceInteger.c	/^static int ErrorMaxElementsExceeded(Tcl_Interp *interp) {$/;"	f	typeref:typename:int	file:
Error_Message	compat/zlib/contrib/ada/zlib.adb	/^            Error_Message : constant String$/;"	n	anon:declare	file:
EscapeEncodingData	generic/tclEncoding.c	/^} EscapeEncodingData;$/;"	t	typeref:struct:__anondb7a8e8c0408	file:
EscapeFreeProc	generic/tclEncoding.c	/^EscapeFreeProc($/;"	f	typeref:typename:void	file:
EscapeFreeProc	generic/tclEncoding.c	/^static Tcl_EncodingFreeProc	EscapeFreeProc;$/;"	v	typeref:typename:Tcl_EncodingFreeProc	file:
EscapeFromUtfProc	generic/tclEncoding.c	/^EscapeFromUtfProc($/;"	f	typeref:typename:int	file:
EscapeFromUtfProc	generic/tclEncoding.c	/^static Tcl_EncodingConvertProc	EscapeFromUtfProc;$/;"	v	typeref:typename:Tcl_EncodingConvertProc	file:
EscapeSubTable	generic/tclEncoding.c	/^} EscapeSubTable;$/;"	t	typeref:struct:__anondb7a8e8c0308	file:
EscapeToUtfProc	generic/tclEncoding.c	/^EscapeToUtfProc($/;"	f	typeref:typename:int	file:
EscapeToUtfProc	generic/tclEncoding.c	/^static Tcl_EncodingConvertProc	EscapeToUtfProc;$/;"	v	typeref:typename:Tcl_EncodingConvertProc	file:
EstablishErrorCodeTraces	generic/tclNamesp.c	/^EstablishErrorCodeTraces($/;"	f	typeref:typename:char *	file:
EstablishErrorInfoTraces	generic/tclNamesp.c	/^EstablishErrorInfoTraces($/;"	f	typeref:typename:char *	file:
EstimateTokenCount	generic/tclClockFmt.c	/^EstimateTokenCount($/;"	f	typeref:typename:unsigned	file:
EvalCmdErrMsg	generic/tclCmdAH.c	/^EvalCmdErrMsg($/;"	f	typeref:typename:int	file:
EvalCmdErrMsg	generic/tclCmdAH.c	/^static Tcl_NRPostProc	EvalCmdErrMsg;$/;"	v	typeref:typename:Tcl_NRPostProc	file:
EvalFileCallback	generic/tclIOUtil.c	/^EvalFileCallback($/;"	f	typeref:typename:int	file:
EvalFileCallback	generic/tclIOUtil.c	/^static Tcl_NRPostProc	EvalFileCallback;$/;"	v	typeref:typename:Tcl_NRPostProc	file:
EvalObjvCore	generic/tclBasic.c	/^EvalObjvCore($/;"	f	typeref:typename:int	file:
EvalObjvCore	generic/tclBasic.c	/^static Tcl_NRPostProc	EvalObjvCore;$/;"	v	typeref:typename:Tcl_NRPostProc	file:
EvalStatsCmd	generic/tclExecute.c	/^EvalStatsCmd($/;"	f	typeref:typename:int	file:
EvalStatsCmd	generic/tclExecute.c	/^static Tcl_ObjCmdProc EvalStatsCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
Event	library/http/http.tcl	/^proc http::Event {sock token} {$/;"	p	namespace:http
EventGateway	library/http/http.tcl	/^proc http::EventGateway {sock token} {$/;"	p	namespace:http
EventOption	generic/tclIORChan.c	/^} EventOption;$/;"	t	typeref:enum:__anon92d8dd290303	file:
EventScriptRecord	generic/tclIO.h	/^typedef struct EventScriptRecord {$/;"	s
EventScriptRecord	generic/tclIO.h	/^} EventScriptRecord;$/;"	t	typeref:struct:EventScriptRecord
EventSource	generic/tclNotify.c	/^typedef struct EventSource {$/;"	s	file:
EventSource	generic/tclNotify.c	/^} EventSource;$/;"	t	typeref:struct:EventSource	file:
ExceptionAux	generic/tclCompile.h	/^typedef struct ExceptionAux {$/;"	s
ExceptionAux	generic/tclCompile.h	/^} ExceptionAux;$/;"	t	typeref:struct:ExceptionAux
ExceptionRange	generic/tclCompile.h	/^} ExceptionRange;$/;"	t	typeref:struct:__anone79d5a530208
ExceptionRangeEnds	generic/tclCompile.h	/^#define ExceptionRangeEnds(/;"	d
ExceptionRangeStarts	generic/tclCompile.h	/^#define ExceptionRangeStarts(/;"	d
ExceptionRangeTarget	generic/tclCompile.h	/^#define ExceptionRangeTarget(/;"	d
ExceptionRangeType	generic/tclCompile.h	/^} ExceptionRangeType;$/;"	t	typeref:enum:__anone79d5a530103
ExecConstantExprTree	generic/tclCompExpr.c	/^ExecConstantExprTree($/;"	f	typeref:typename:int	file:
ExecEnv	generic/tclInt.h	/^typedef struct ExecEnv {$/;"	s
ExecEnv	generic/tclInt.h	/^} ExecEnv;$/;"	t	typeref:struct:ExecEnv
ExecStack	generic/tclInt.h	/^typedef struct ExecStack {$/;"	s
ExecStack	generic/tclInt.h	/^} ExecStack;$/;"	t	typeref:struct:ExecStack
ExecuteCallback	generic/tclIOGT.c	/^ExecuteCallback($/;"	f	typeref:typename:int	file:
ExecuteExtendedBinaryMathOp	generic/tclExecute.c	/^ExecuteExtendedBinaryMathOp($/;"	f	typeref:typename:Tcl_Obj *	file:
ExecuteExtendedUnaryMathOp	generic/tclExecute.c	/^ExecuteExtendedUnaryMathOp($/;"	f	typeref:typename:Tcl_Obj *	file:
ExecuteRemoteObject	win/tclWinDde.c	/^ExecuteRemoteObject($/;"	f	typeref:typename:Tcl_Obj *	file:
ExitHandler	generic/tclEvent.c	/^typedef struct ExitHandler {$/;"	s	file:
ExitHandler	generic/tclEvent.c	/^} ExitHandler;$/;"	t	typeref:struct:ExitHandler	file:
ExitProcEven	generic/tclTest.c	/^ExitProcEven($/;"	f	typeref:typename:void	file:
ExitProcOdd	generic/tclTest.c	/^ExitProcOdd($/;"	f	typeref:typename:void	file:
Exp64Index	generic/tclExecute.c	/^static const unsigned short Exp64Index[] = {$/;"	v	typeref:typename:const unsigned short[]	file:
Exp64IndexSize	generic/tclExecute.c	/^static const size_t Exp64IndexSize =$/;"	v	typeref:typename:const size_t	file:
Exp64Value	generic/tclExecute.c	/^static const Tcl_WideInt Exp64Value[] = {$/;"	v	typeref:typename:const Tcl_WideInt[]	file:
Exp64ValueSize	generic/tclExecute.c	/^static const size_t Exp64ValueSize = sizeof(Exp64Value) \/ sizeof(Tcl_WideInt);$/;"	v	typeref:typename:const size_t	file:
ExpandLocalLiteralArray	generic/tclLiteral.c	/^ExpandLocalLiteralArray($/;"	f	typeref:typename:void	file:
ExpandRequested	generic/tclCompile.c	/^ExpandRequested($/;"	f	typeref:typename:int	file:
Export	unix/tclLoadAix.c	/^} Export, *ExportPtr;$/;"	t	typeref:struct:__anonb87ae84e0108	file:
ExportMode	generic/tclOODefineCmds.c	/^    enum ExportMode {$/;"	g	function:TclOODefineMethodObjCmd	file:
ExportPtr	unix/tclLoadAix.c	/^} Export, *ExportPtr;$/;"	t	typeref:struct:__anonb87ae84e0108 *	file:
ExprAbsFunc	generic/tclBasic.c	/^ExprAbsFunc($/;"	f	typeref:typename:int	file:
ExprAbsFunc	generic/tclBasic.c	/^static Tcl_ObjCmdProc	ExprAbsFunc;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
ExprBinaryFunc	generic/tclBasic.c	/^ExprBinaryFunc($/;"	f	typeref:typename:int	file:
ExprBinaryFunc	generic/tclBasic.c	/^static Tcl_ObjCmdProc	ExprBinaryFunc;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
ExprBoolFunc	generic/tclBasic.c	/^ExprBoolFunc($/;"	f	typeref:typename:int	file:
ExprBoolFunc	generic/tclBasic.c	/^static Tcl_ObjCmdProc	ExprBoolFunc;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
ExprCallback	generic/tclCmdAH.c	/^ExprCallback($/;"	f	typeref:typename:int	file:
ExprCallback	generic/tclCmdAH.c	/^static Tcl_NRPostProc	ExprCallback;$/;"	v	typeref:typename:Tcl_NRPostProc	file:
ExprCeilFunc	generic/tclBasic.c	/^ExprCeilFunc($/;"	f	typeref:typename:int	file:
ExprCeilFunc	generic/tclBasic.c	/^static Tcl_ObjCmdProc	ExprCeilFunc;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
ExprDoubleFunc	generic/tclBasic.c	/^ExprDoubleFunc($/;"	f	typeref:typename:int	file:
ExprDoubleFunc	generic/tclBasic.c	/^static Tcl_ObjCmdProc	ExprDoubleFunc;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
ExprFloorFunc	generic/tclBasic.c	/^ExprFloorFunc($/;"	f	typeref:typename:int	file:
ExprFloorFunc	generic/tclBasic.c	/^static Tcl_ObjCmdProc	ExprFloorFunc;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
ExprIntFunc	generic/tclBasic.c	/^ExprIntFunc($/;"	f	typeref:typename:int	file:
ExprIntFunc	generic/tclBasic.c	/^static Tcl_ObjCmdProc	ExprIntFunc;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
ExprIsFiniteFunc	generic/tclBasic.c	/^ExprIsFiniteFunc($/;"	f	typeref:typename:int	file:
ExprIsFiniteFunc	generic/tclBasic.c	/^static Tcl_ObjCmdProc	ExprIsFiniteFunc;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
ExprIsInfinityFunc	generic/tclBasic.c	/^ExprIsInfinityFunc($/;"	f	typeref:typename:int	file:
ExprIsInfinityFunc	generic/tclBasic.c	/^static Tcl_ObjCmdProc	ExprIsInfinityFunc;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
ExprIsNaNFunc	generic/tclBasic.c	/^ExprIsNaNFunc($/;"	f	typeref:typename:int	file:
ExprIsNaNFunc	generic/tclBasic.c	/^static Tcl_ObjCmdProc	ExprIsNaNFunc;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
ExprIsNormalFunc	generic/tclBasic.c	/^ExprIsNormalFunc($/;"	f	typeref:typename:int	file:
ExprIsNormalFunc	generic/tclBasic.c	/^static Tcl_ObjCmdProc	ExprIsNormalFunc;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
ExprIsSubnormalFunc	generic/tclBasic.c	/^ExprIsSubnormalFunc($/;"	f	typeref:typename:int	file:
ExprIsSubnormalFunc	generic/tclBasic.c	/^static Tcl_ObjCmdProc	ExprIsSubnormalFunc;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
ExprIsUnorderedFunc	generic/tclBasic.c	/^ExprIsUnorderedFunc($/;"	f	typeref:typename:int	file:
ExprIsUnorderedFunc	generic/tclBasic.c	/^static Tcl_ObjCmdProc	ExprIsUnorderedFunc;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
ExprIsqrtFunc	generic/tclBasic.c	/^ExprIsqrtFunc($/;"	f	typeref:typename:int	file:
ExprIsqrtFunc	generic/tclBasic.c	/^static Tcl_ObjCmdProc	ExprIsqrtFunc;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
ExprMatch	compat/zlib/contrib/untgz/untgz.c	/^int ExprMatch (char *string,char *expr)$/;"	f	typeref:typename:int
ExprMaxFunc	generic/tclBasic.c	/^ExprMaxFunc($/;"	f	typeref:typename:int	file:
ExprMaxFunc	generic/tclBasic.c	/^static Tcl_ObjCmdProc	ExprMaxFunc;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
ExprMaxMinFunc	generic/tclBasic.c	/^ExprMaxMinFunc($/;"	f	typeref:typename:int	file:
ExprMinFunc	generic/tclBasic.c	/^ExprMinFunc($/;"	f	typeref:typename:int	file:
ExprMinFunc	generic/tclBasic.c	/^static Tcl_ObjCmdProc	ExprMinFunc;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
ExprObjCallback	generic/tclExecute.c	/^ExprObjCallback($/;"	f	typeref:typename:int	file:
ExprObjCallback	generic/tclExecute.c	/^static Tcl_NRPostProc	ExprObjCallback;$/;"	v	typeref:typename:Tcl_NRPostProc	file:
ExprRandFunc	generic/tclBasic.c	/^ExprRandFunc($/;"	f	typeref:typename:int	file:
ExprRandFunc	generic/tclBasic.c	/^static Tcl_ObjCmdProc	ExprRandFunc;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
ExprRoundFunc	generic/tclBasic.c	/^ExprRoundFunc($/;"	f	typeref:typename:int	file:
ExprRoundFunc	generic/tclBasic.c	/^static Tcl_ObjCmdProc	ExprRoundFunc;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
ExprSqrtFunc	generic/tclBasic.c	/^ExprSqrtFunc($/;"	f	typeref:typename:int	file:
ExprSqrtFunc	generic/tclBasic.c	/^static Tcl_ObjCmdProc	ExprSqrtFunc;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
ExprSrandFunc	generic/tclBasic.c	/^ExprSrandFunc($/;"	f	typeref:typename:int	file:
ExprSrandFunc	generic/tclBasic.c	/^static Tcl_ObjCmdProc	ExprSrandFunc;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
ExprUnaryFunc	generic/tclBasic.c	/^ExprUnaryFunc($/;"	f	typeref:typename:int	file:
ExprUnaryFunc	generic/tclBasic.c	/^static Tcl_ObjCmdProc	ExprUnaryFunc;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
ExprWideFunc	generic/tclBasic.c	/^ExprWideFunc($/;"	f	typeref:typename:int	file:
ExprWideFunc	generic/tclBasic.c	/^static Tcl_ObjCmdProc	ExprWideFunc;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
ExtCmdLoc	generic/tclCompile.h	/^} ExtCmdLoc;$/;"	t	typeref:struct:__anone79d5a530508
ExtendStringRepWithUnicode	generic/tclStringObj.c	/^ExtendStringRepWithUnicode($/;"	f	typeref:typename:Tcl_Size	file:
ExtendUnicodeRepWithString	generic/tclStringObj.c	/^ExtendUnicodeRepWithString($/;"	f	typeref:typename:void	file:
ExtraFrameInfo	generic/tclInt.h	/^} ExtraFrameInfo;$/;"	t	typeref:struct:__anon1eb6b3550608
ExtraFrameInfoField	generic/tclInt.h	/^} ExtraFrameInfoField;$/;"	t	typeref:struct:__anon1eb6b3550508
ExtractHeader	generic/tclZlib.c	/^ExtractHeader($/;"	f	typeref:typename:void	file:
ExtractWinRoot	generic/tclFileName.c	/^ExtractWinRoot($/;"	f	typeref:typename:const char *	file:
FAILINDEX	generic/tclCmdAH.c	/^    enum convertfromOptions { PROFILE, FAILINDEX } optIndex;$/;"	e	enum:EncodingConvertParseOptions::convertfromOptions	file:
FAILW	generic/regc_lex.c	/^#define	FAILW(/;"	d	file:
FALSE	generic/tclCkalloc.c	/^#define FALSE	/;"	d	file:
FAR	compat/zlib/zconf.h	/^#      define FAR /;"	d
FAR	compat/zlib/zconf.h	/^#  define FAR$/;"	d
FAR	compat/zlib/zconf.h.in	/^#      define FAR /;"	d	file:
FAR	compat/zlib/zconf.h.in	/^#  define FAR$/;"	d	file:
FDEBUG	generic/regguts.h	/^#define	FDEBUG(/;"	d
FD_CLOEXEC	unix/tclUnixPort.h	/^#   define FD_CLOEXEC	/;"	d
FD_SETSIZE	unix/tclUnixPort.h	/^#	define FD_SETSIZE	/;"	d
FEWCOLORS	generic/regexec.c	/^#define	FEWCOLORS	/;"	d	file:
FEWSTATES	generic/regexec.c	/^#define	FEWSTATES	/;"	d	file:
FIELD	generic/tclIcu.c	/^#define FIELD(/;"	d	file:
FIFOTYPE	compat/zlib/contrib/untgz/untgz.c	/^#define FIFOTYPE /;"	d	file:
FILEATTRSGETPROC	doc/FileSystem.3	/^.SS FILEATTRSGETPROC$/;"	S	section:Filesystem""FILESYSTEM OPERATIONS
FILEATTRSSETPROC	doc/FileSystem.3	/^.SS FILEATTRSSETPROC$/;"	S	section:Filesystem""FILESYSTEM OPERATIONS
FILEATTRSTRINGSPROC	doc/FileSystem.3	/^.SS FILEATTRSTRINGSPROC$/;"	S	section:Filesystem""FILESYSTEM OPERATIONS
FILESYSTEM EFFICIENCY	doc/FileSystem.3	/^.SH "FILESYSTEM EFFICIENCY"$/;"	s	title:Filesystem
FILESYSTEM INFRASTRUCTURE	doc/FileSystem.3	/^.SH "FILESYSTEM INFRASTRUCTURE"$/;"	s	title:Filesystem
FILESYSTEM OPERATIONS	doc/FileSystem.3	/^.SH "FILESYSTEM OPERATIONS"$/;"	s	title:Filesystem
FILESYSTEMPATHTYPEPROC	doc/FileSystem.3	/^.SS FILESYSTEMPATHTYPEPROC$/;"	S	section:Filesystem""FILESYSTEM OPERATIONS
FILESYSTEMSEPARATORPROC	doc/FileSystem.3	/^.SS FILESYSTEMSEPARATORPROC$/;"	S	section:Filesystem""FILESYSTEM OPERATIONS
FILE_APPEND	win/tclWinChan.c	/^#define FILE_APPEND	/;"	d	file:
FILE_ASYNC	win/tclWinChan.c	/^#define FILE_ASYNC	/;"	d	file:
FILE_ATTRIBUTE_REPARSE_POINT	win/tclWinInt.h	/^#define FILE_ATTRIBUTE_REPARSE_POINT /;"	d
FILE_FLAG_OPEN_REPARSE_POINT	win/tclWinFile.c	/^#  define FILE_FLAG_OPEN_REPARSE_POINT	/;"	d	file:
FILE_PENDING	win/tclWinChan.c	/^#define FILE_PENDING	/;"	d	file:
FILE_SPECIAL_ACCESS	win/tclWinFile.c	/^#  define FILE_SPECIAL_ACCESS	/;"	d	file:
FILE_TYPE_CONSOLE	win/tclWinChan.c	/^#define FILE_TYPE_CONSOLE /;"	d	file:
FILE_TYPE_SERIAL	win/tclWinChan.c	/^#define FILE_TYPE_SERIAL /;"	d	file:
FILTER_HANDLING	generic/tclOOInt.h	/^    FILTER_HANDLING = 0x2000,	\/* Flag set when the object is processing a$/;"	e	enum:ObjectFlags
FILTER_KEYS	generic/tclDictObj.c	/^	FILTER_KEYS, FILTER_SCRIPT, FILTER_VALUES$/;"	e	enum:DictFilterCmd::FilterTypes	file:
FILTER_SCRIPT	generic/tclDictObj.c	/^	FILTER_KEYS, FILTER_SCRIPT, FILTER_VALUES$/;"	e	enum:DictFilterCmd::FilterTypes	file:
FILTER_VALUES	generic/tclDictObj.c	/^	FILTER_KEYS, FILTER_SCRIPT, FILTER_VALUES$/;"	e	enum:DictFilterCmd::FilterTypes	file:
FINAL_QUOTE_PUNCTUATION	generic/tclUniData.c	/^    FINAL_QUOTE_PUNCTUATION,$/;"	e	enum:__anon910316cb0103	file:
FINISH_STATE	compat/zlib/deflate.h	/^#define FINISH_STATE /;"	d
FIXJUMP1	generic/tclCompCmdsSZ.c	/^#define FIXJUMP1(/;"	d	file:
FIXJUMP4	generic/tclCompCmdsSZ.c	/^#define FIXJUMP4(/;"	d	file:
FIXLCODES	compat/zlib/contrib/puff/puff.c	/^#define FIXLCODES /;"	d	file:
FLAG	generic/tclIORChan.c	/^#define FLAG(/;"	d	file:
FLAG	generic/tclIORTrans.c	/^#define FLAG(/;"	d	file:
FLAG BITS	doc/Cancel.3	/^.SS "FLAG BITS"$/;"	S	section:Tcl_Cancel""DESCRIPTION
FLAG BITS	doc/Eval.3	/^.SH "FLAG BITS"$/;"	s	title:Tcl_Eval
FLAGS	compat/zlib/inflate.h	/^    FLAGS,      \/* i: waiting for method and flags (gzip) *\/$/;"	e	enum:__anon6bf0a2910103
FLAG_LOCALHEADER_OFFSET	compat/zlib/contrib/minizip/zip.c	/^#define FLAG_LOCALHEADER_OFFSET /;"	d	file:
FLT_MAX	unix/tclUnixPort.h	/^#	define FLT_MAX	/;"	d
FLT_MIN	unix/tclUnixPort.h	/^#	define FLT_MIN	/;"	d
FLUSHCODE	compat/zlib/examples/gun.c	/^#define FLUSHCODE(/;"	d	file:
FLUSHPROC	doc/CrtChannel.3	/^.SS FLUSHPROC$/;"	S	section:Tcl_CreateChannel""TCL_CHANNELTYPE
FLUSH_BLOCK	compat/zlib/deflate.c	/^#define FLUSH_BLOCK(/;"	d	file:
FLUSH_BLOCK_ONLY	compat/zlib/deflate.c	/^#define FLUSH_BLOCK_ONLY(/;"	d	file:
FLUSH_DELAY	generic/tclIOGT.c	/^#define FLUSH_DELAY	/;"	d	file:
FLUSH_DISCARD	generic/tclIORTrans.c	/^#define FLUSH_DISCARD	/;"	d	file:
FLUSH_WRITE	generic/tclIORTrans.c	/^#define FLUSH_WRITE	/;"	d	file:
FMT_COMPRESS	generic/tclZlib.c	/^	FMT_COMPRESS, FMT_DECOMPRESS, FMT_DEFLATE, FMT_GUNZIP, FMT_GZIP,$/;"	e	enum:ZlibPushSubcmd::zlibFormats	file:
FMT_COMPRESS	generic/tclZlib.c	/^	FMT_COMPRESS, FMT_DECOMPRESS, FMT_DEFLATE, FMT_GUNZIP, FMT_GZIP,$/;"	e	enum:ZlibStreamSubcmd::zlibFormats	file:
FMT_DECOMPRESS	generic/tclZlib.c	/^	FMT_COMPRESS, FMT_DECOMPRESS, FMT_DEFLATE, FMT_GUNZIP, FMT_GZIP,$/;"	e	enum:ZlibPushSubcmd::zlibFormats	file:
FMT_DECOMPRESS	generic/tclZlib.c	/^	FMT_COMPRESS, FMT_DECOMPRESS, FMT_DEFLATE, FMT_GUNZIP, FMT_GZIP,$/;"	e	enum:ZlibStreamSubcmd::zlibFormats	file:
FMT_DEFLATE	generic/tclZlib.c	/^	FMT_COMPRESS, FMT_DECOMPRESS, FMT_DEFLATE, FMT_GUNZIP, FMT_GZIP,$/;"	e	enum:ZlibPushSubcmd::zlibFormats	file:
FMT_DEFLATE	generic/tclZlib.c	/^	FMT_COMPRESS, FMT_DECOMPRESS, FMT_DEFLATE, FMT_GUNZIP, FMT_GZIP,$/;"	e	enum:ZlibStreamSubcmd::zlibFormats	file:
FMT_GUNZIP	generic/tclZlib.c	/^	FMT_COMPRESS, FMT_DECOMPRESS, FMT_DEFLATE, FMT_GUNZIP, FMT_GZIP,$/;"	e	enum:ZlibPushSubcmd::zlibFormats	file:
FMT_GUNZIP	generic/tclZlib.c	/^	FMT_COMPRESS, FMT_DECOMPRESS, FMT_DEFLATE, FMT_GUNZIP, FMT_GZIP,$/;"	e	enum:ZlibStreamSubcmd::zlibFormats	file:
FMT_GZIP	generic/tclZlib.c	/^	FMT_COMPRESS, FMT_DECOMPRESS, FMT_DEFLATE, FMT_GUNZIP, FMT_GZIP,$/;"	e	enum:ZlibPushSubcmd::zlibFormats	file:
FMT_GZIP	generic/tclZlib.c	/^	FMT_COMPRESS, FMT_DECOMPRESS, FMT_DEFLATE, FMT_GUNZIP, FMT_GZIP,$/;"	e	enum:ZlibStreamSubcmd::zlibFormats	file:
FMT_INFLATE	generic/tclZlib.c	/^	FMT_INFLATE$/;"	e	enum:ZlibPushSubcmd::zlibFormats	file:
FMT_INFLATE	generic/tclZlib.c	/^	FMT_INFLATE$/;"	e	enum:ZlibStreamSubcmd::zlibFormats	file:
FOPEN_FUNC	compat/zlib/contrib/minizip/ioapi.c	/^#define FOPEN_FUNC(/;"	d	file:
FOPEN_FUNC	compat/zlib/contrib/minizip/miniunz.c	/^#define FOPEN_FUNC(/;"	d	file:
FOPEN_FUNC	compat/zlib/contrib/minizip/minizip.c	/^#define FOPEN_FUNC(/;"	d	file:
FORCE_UNKNOWN	generic/tclOOInt.h	/^    FORCE_UNKNOWN = 0x10000,	\/* States that we are *really* looking up the$/;"	e	enum:ObjectFlags
FOREACH	generic/tclOOInt.h	/^#define FOREACH(/;"	d
FOREACH_COMMAND_TRACE	generic/tclTrace.c	/^#define FOREACH_COMMAND_TRACE(/;"	d	file:
FOREACH_HASH	generic/tclOOInt.h	/^#define FOREACH_HASH(/;"	d
FOREACH_HASH_DECLS	generic/tclOOInt.h	/^#define FOREACH_HASH_DECLS /;"	d
FOREACH_HASH_VALUE	generic/tclOOInt.h	/^#define FOREACH_HASH_VALUE(/;"	d
FOREACH_STRUCT	generic/tclOOInt.h	/^#define FOREACH_STRUCT(/;"	d
FOREACH_VAR_TRACE	generic/tclTrace.c	/^#define FOREACH_VAR_TRACE(/;"	d	file:
FORMAT	generic/tclUniData.c	/^    FORMAT,$/;"	e	enum:__anon910316cb0103	file:
FOUR_CENTURIES	generic/tclClockClassic.c	/^#define FOUR_CENTURIES	/;"	d	file:
FOUR_CENTURIES	generic/tclDate.h	/^#define FOUR_CENTURIES	/;"	d
FOUR_YEARS	generic/tclClockClassic.c	/^#define FOUR_YEARS	/;"	d	file:
FOUR_YEARS	generic/tclDate.h	/^#define FOUR_YEARS	/;"	d
FPU_IEEE_ROUNDING	generic/tclStrToD.c	/^#  define FPU_IEEE_ROUNDING	/;"	d	file:
FP_PRECISION	generic/tclStrToD.c	/^#define FP_PRECISION	/;"	d	file:
FRACTION	generic/tclStrToD.c	/^	LEADING_RADIX_POINT, FRACTION,$/;"	e	enum:TclParseNumber::State	file:
FRAME_IS_LAMBDA	generic/tclInt.h	/^#define FRAME_IS_LAMBDA /;"	d
FRAME_IS_METHOD	generic/tclInt.h	/^#define FRAME_IS_METHOD	/;"	d
FRAME_IS_OO_DEFINE	generic/tclInt.h	/^#define FRAME_IS_OO_DEFINE /;"	d
FRAME_IS_PRIVATE_DEFINE	generic/tclInt.h	/^#define FRAME_IS_PRIVATE_DEFINE /;"	d
FRAME_IS_PROC	generic/tclInt.h	/^#define FRAME_IS_PROC	/;"	d
FREE	generic/regcustom.h	/^#define	FREE(/;"	d
FREE	generic/regguts.h	/^#define	FREE(/;"	d
FREECOL	generic/regguts.h	/^#define	FREECOL	/;"	d
FREEDREFCOUNTFILLER	generic/tclObj.c	/^#define FREEDREFCOUNTFILLER /;"	d	file:
FREEINTERNALREPPROC	doc/FileSystem.3	/^.SS FREEINTERNALREPPROC$/;"	S	section:Filesystem""FILESYSTEM INFRASTRUCTURE
FREESTATE	generic/regguts.h	/^#define	FREESTATE	/;"	d
FS API FUNCTIONS	doc/FileSystem.3	/^.SS "FS API FUNCTIONS"$/;"	S	section:Filesystem""DESCRIPTION
FSCTL_DELETE_REPARSE_POINT	win/tclWinFile.c	/^#  define FSCTL_DELETE_REPARSE_POINT /;"	d	file:
FSCTL_GET_REPARSE_POINT	win/tclWinFile.c	/^#  define FSCTL_GET_REPARSE_POINT /;"	d	file:
FSCTL_SET_REPARSE_POINT	win/tclWinFile.c	/^#  define FSCTL_SET_REPARSE_POINT /;"	d	file:
FSEEKO_FUNC	compat/zlib/contrib/minizip/ioapi.c	/^#define FSEEKO_FUNC(/;"	d	file:
FSEEKO_FUNC	compat/zlib/contrib/minizip/miniunz.c	/^#define FSEEKO_FUNC(/;"	d	file:
FSEEKO_FUNC	compat/zlib/contrib/minizip/minizip.c	/^#define FSEEKO_FUNC(/;"	d	file:
FSHDR	unix/Makefile.in	/^FSHDR		= $(GENERIC_DIR)\/tclFileSystem.h$/;"	m
FTELLO_FUNC	compat/zlib/contrib/minizip/ioapi.c	/^#define FTELLO_FUNC(/;"	d	file:
FTELLO_FUNC	compat/zlib/contrib/minizip/miniunz.c	/^#define FTELLO_FUNC(/;"	d	file:
FTELLO_FUNC	compat/zlib/contrib/minizip/minizip.c	/^#define FTELLO_FUNC(/;"	d	file:
FUNCTION	generic/tclCompExpr.c	/^#define FUNCTION	/;"	d	file:
F_OK	compat/zlib/contrib/untgz/untgz.c	/^#    define F_OK /;"	d	file:
F_OK	unix/tclUnixPort.h	/^#   define F_OK	/;"	d
F_OK	win/tclWinPort.h	/^#    define F_OK /;"	d
F_OPEN	compat/zlib/zutil.h	/^#  define F_OPEN(/;"	d
Fastest	compat/zlib/contrib/dotzlib/DotZLib/DotZLib.cs	/^        Fastest = 1$/;"	e	enum:DotZLib.CompressLevel	file:
FcopyCommand	generic/tclIOCmd.c	/^    enum { FcopySize, FcopyCommand };$/;"	e	enum:Tcl_FcopyObjCmd::__anon5b8cc1910303	file:
FcopySize	generic/tclIOCmd.c	/^    enum { FcopySize, FcopyCommand };$/;"	e	enum:Tcl_FcopyObjCmd::__anon5b8cc1910303	file:
FetchEraField	generic/tclClock.c	/^FetchEraField($/;"	f	typeref:typename:int	file:
FetchEraField	generic/tclClockClassic.c	/^FetchEraField($/;"	f	typeref:typename:int	file:
FetchIntField	generic/tclClock.c	/^FetchIntField($/;"	f	typeref:typename:int	file:
FetchIntField	generic/tclClockClassic.c	/^FetchIntField($/;"	f	typeref:typename:int	file:
FileAttrAccessTimeCmd	generic/tclCmdAH.c	/^FileAttrAccessTimeCmd($/;"	f	typeref:typename:int	file:
FileAttrAccessTimeCmd	generic/tclCmdAH.c	/^static Tcl_ObjCmdProc FileAttrAccessTimeCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
FileAttrIsDirectoryCmd	generic/tclCmdAH.c	/^FileAttrIsDirectoryCmd($/;"	f	typeref:typename:int	file:
FileAttrIsDirectoryCmd	generic/tclCmdAH.c	/^static Tcl_ObjCmdProc FileAttrIsDirectoryCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
FileAttrIsExecutableCmd	generic/tclCmdAH.c	/^FileAttrIsExecutableCmd($/;"	f	typeref:typename:int	file:
FileAttrIsExecutableCmd	generic/tclCmdAH.c	/^static Tcl_ObjCmdProc FileAttrIsExecutableCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
FileAttrIsExistingCmd	generic/tclCmdAH.c	/^FileAttrIsExistingCmd($/;"	f	typeref:typename:int	file:
FileAttrIsExistingCmd	generic/tclCmdAH.c	/^static Tcl_ObjCmdProc FileAttrIsExistingCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
FileAttrIsFileCmd	generic/tclCmdAH.c	/^FileAttrIsFileCmd($/;"	f	typeref:typename:int	file:
FileAttrIsFileCmd	generic/tclCmdAH.c	/^static Tcl_ObjCmdProc FileAttrIsFileCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
FileAttrIsOwnedCmd	generic/tclCmdAH.c	/^FileAttrIsOwnedCmd($/;"	f	typeref:typename:int	file:
FileAttrIsOwnedCmd	generic/tclCmdAH.c	/^static Tcl_ObjCmdProc FileAttrIsOwnedCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
FileAttrIsReadableCmd	generic/tclCmdAH.c	/^FileAttrIsReadableCmd($/;"	f	typeref:typename:int	file:
FileAttrIsReadableCmd	generic/tclCmdAH.c	/^static Tcl_ObjCmdProc FileAttrIsReadableCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
FileAttrIsWritableCmd	generic/tclCmdAH.c	/^FileAttrIsWritableCmd($/;"	f	typeref:typename:int	file:
FileAttrIsWritableCmd	generic/tclCmdAH.c	/^static Tcl_ObjCmdProc FileAttrIsWritableCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
FileAttrLinkStatCmd	generic/tclCmdAH.c	/^FileAttrLinkStatCmd($/;"	f	typeref:typename:int	file:
FileAttrLinkStatCmd	generic/tclCmdAH.c	/^static Tcl_ObjCmdProc FileAttrLinkStatCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
FileAttrModifyTimeCmd	generic/tclCmdAH.c	/^FileAttrModifyTimeCmd($/;"	f	typeref:typename:int	file:
FileAttrModifyTimeCmd	generic/tclCmdAH.c	/^static Tcl_ObjCmdProc FileAttrModifyTimeCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
FileAttrSizeCmd	generic/tclCmdAH.c	/^FileAttrSizeCmd($/;"	f	typeref:typename:int	file:
FileAttrSizeCmd	generic/tclCmdAH.c	/^static Tcl_ObjCmdProc FileAttrSizeCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
FileAttrStatCmd	generic/tclCmdAH.c	/^FileAttrStatCmd($/;"	f	typeref:typename:int	file:
FileAttrStatCmd	generic/tclCmdAH.c	/^static Tcl_ObjCmdProc FileAttrStatCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
FileAttrTypeCmd	generic/tclCmdAH.c	/^FileAttrTypeCmd($/;"	f	typeref:typename:int	file:
FileAttrTypeCmd	generic/tclCmdAH.c	/^static Tcl_ObjCmdProc FileAttrTypeCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
FileBasename	generic/tclFCmd.c	/^FileBasename($/;"	f	typeref:typename:Tcl_Obj *	file:
FileBlockModeProc	unix/tclUnixChan.c	/^FileBlockModeProc($/;"	f	typeref:typename:int	file:
FileBlockProc	win/tclWinChan.c	/^FileBlockProc($/;"	f	typeref:typename:int	file:
FileChannelExitHandler	win/tclWinChan.c	/^FileChannelExitHandler($/;"	f	typeref:typename:void	file:
FileCheckProc	win/tclWinChan.c	/^FileCheckProc($/;"	f	typeref:typename:void	file:
FileCloseProc	unix/tclUnixChan.c	/^FileCloseProc($/;"	f	typeref:typename:int	file:
FileCloseProc	win/tclWinChan.c	/^FileCloseProc($/;"	f	typeref:typename:int	file:
FileCopyRename	generic/tclFCmd.c	/^FileCopyRename($/;"	f	typeref:typename:int	file:
FileEvent	win/tclWinChan.c	/^} FileEvent;$/;"	t	typeref:struct:__anon1518b6be0208	file:
FileEventProc	win/tclWinChan.c	/^FileEventProc($/;"	f	typeref:typename:int	file:
FileExists	win/nmakehlp.c	/^BOOL FileExists(LPCTSTR szPath)$/;"	f	typeref:typename:BOOL
FileForRedirect	generic/tclPipe.c	/^FileForRedirect($/;"	f	typeref:typename:TclFile	file:
FileForceOption	generic/tclFCmd.c	/^FileForceOption($/;"	f	typeref:typename:int	file:
FileGetHandleProc	unix/tclUnixChan.c	/^FileGetHandleProc($/;"	f	typeref:typename:int	file:
FileGetHandleProc	win/tclWinChan.c	/^FileGetHandleProc($/;"	f	typeref:typename:int	file:
FileGetOptionProc	unix/tclUnixChan.c	/^FileGetOptionProc($/;"	f	typeref:typename:int	file:
FileGetOptionProc	win/tclWinChan.c	/^FileGetOptionProc($/;"	f	typeref:typename:int	file:
FileGetType	win/tclWinChan.c	/^FileGetType($/;"	f	typeref:typename:DWORD
FileHandler	macosx/tclMacOSXNotify.c	/^typedef struct FileHandler {$/;"	s	file:
FileHandler	macosx/tclMacOSXNotify.c	/^} FileHandler;$/;"	t	typeref:struct:FileHandler	file:
FileHandler	unix/tclEpollNotfy.c	/^typedef struct FileHandler {$/;"	s	file:
FileHandler	unix/tclEpollNotfy.c	/^} FileHandler;$/;"	t	typeref:struct:FileHandler	file:
FileHandler	unix/tclKqueueNotfy.c	/^typedef struct FileHandler {$/;"	s	file:
FileHandler	unix/tclKqueueNotfy.c	/^} FileHandler;$/;"	t	typeref:struct:FileHandler	file:
FileHandler	unix/tclSelectNotfy.c	/^typedef struct FileHandler {$/;"	s	file:
FileHandler	unix/tclSelectNotfy.c	/^} FileHandler;$/;"	t	typeref:struct:FileHandler	file:
FileHandler	unix/tclXtNotify.c	/^typedef struct FileHandler {$/;"	s	file:
FileHandler	unix/tclXtNotify.c	/^} FileHandler;$/;"	t	typeref:struct:FileHandler	file:
FileHandlerEvent	macosx/tclMacOSXNotify.c	/^} FileHandlerEvent;$/;"	t	typeref:struct:__anon0dc3d9d70108	file:
FileHandlerEvent	unix/tclEpollNotfy.c	/^} FileHandlerEvent;$/;"	t	typeref:struct:__anona96b9a380108	file:
FileHandlerEvent	unix/tclKqueueNotfy.c	/^} FileHandlerEvent;$/;"	t	typeref:struct:__anon43415cec0108	file:
FileHandlerEvent	unix/tclSelectNotfy.c	/^} FileHandlerEvent;$/;"	t	typeref:struct:__anon69aa703c0208	file:
FileHandlerEvent	unix/tclXtNotify.c	/^} FileHandlerEvent;$/;"	t	typeref:struct:__anon7b9136110208	file:
FileHandlerEventProc	macosx/tclMacOSXNotify.c	/^FileHandlerEventProc($/;"	f	typeref:typename:int	file:
FileHandlerEventProc	unix/tclUnixNotfy.c	/^FileHandlerEventProc($/;"	f	typeref:typename:int	file:
FileInAccessPath	library/safe.tcl	/^proc ::safe::FileInAccessPath {child file} {$/;"	p	namespace:::safe
FileInfo	win/tclWinChan.c	/^typedef struct FileInfo {$/;"	s	file:
FileInfo	win/tclWinChan.c	/^} FileInfo;$/;"	t	typeref:struct:FileInfo	file:
FileInit	win/tclWinChan.c	/^FileInit(void)$/;"	f	typeref:typename:ThreadSpecificData *	file:
FileInputProc	unix/tclUnixChan.c	/^FileInputProc($/;"	f	typeref:typename:int	file:
FileInputProc	win/tclWinChan.c	/^FileInputProc($/;"	f	typeref:typename:int	file:
FileOutputProc	unix/tclUnixChan.c	/^FileOutputProc($/;"	f	typeref:typename:int	file:
FileOutputProc	win/tclWinChan.c	/^FileOutputProc($/;"	f	typeref:typename:int	file:
FileSetupProc	win/tclWinChan.c	/^FileSetupProc($/;"	f	typeref:typename:void
FileState	unix/tclUnixChan.c	/^} FileState;$/;"	t	typeref:struct:__anone1e2a72a0108	file:
FileThreadActionProc	win/tclWinChan.c	/^FileThreadActionProc($/;"	f	typeref:typename:void	file:
FileTruncateProc	unix/tclUnixChan.c	/^FileTruncateProc($/;"	f	typeref:typename:int	file:
FileTruncateProc	win/tclWinChan.c	/^FileTruncateProc($/;"	f	typeref:typename:int	file:
FileWatchNotifyChannelWrapper	unix/tclUnixChan.c	/^FileWatchNotifyChannelWrapper($/;"	f	typeref:typename:void	file:
FileWatchProc	unix/tclUnixChan.c	/^FileWatchProc($/;"	f	typeref:typename:void	file:
FileWatchProc	win/tclWinChan.c	/^FileWatchProc($/;"	f	typeref:typename:void	file:
FileWideSeekProc	unix/tclUnixChan.c	/^FileWideSeekProc($/;"	f	typeref:typename:long long	file:
FileWideSeekProc	win/tclWinChan.c	/^FileWideSeekProc($/;"	f	typeref:typename:long long	file:
File_Back	compat/zlib/contrib/ada/test.adb	/^   File_Back : File_Type;$/;"	v	subprogram:Test	file:
File_In	compat/zlib/contrib/ada/test.adb	/^   File_In   : File_Type;$/;"	v	subprogram:Test	file:
File_Out	compat/zlib/contrib/ada/test.adb	/^   File_Out  : File_Type;$/;"	v	subprogram:Test	file:
File_Size	compat/zlib/contrib/ada/read.adb	/^   File_Size   : Stream_Element_Offset := 100_000;$/;"	v	subprogram:Read	file:
File_Size	compat/zlib/contrib/ada/test.adb	/^   File_Size   : Count   := 100_000;$/;"	v	subprogram:Test	file:
File_Z	compat/zlib/contrib/ada/test.adb	/^   File_Z    : ZLib.Streams.Stream_Type;$/;"	v	subprogram:Test	file:
Filesystem	doc/FileSystem.3	/^.TH Filesystem 3 8.4 Tcl "Tcl Library Procedures"$/;"	t
FilesystemRecord	generic/tclIOUtil.c	/^typedef struct FilesystemRecord {$/;"	s	file:
FilesystemRecord	generic/tclIOUtil.c	/^} FilesystemRecord;$/;"	t	typeref:struct:FilesystemRecord	file:
FilesystemSeparatorCmd	generic/tclCmdAH.c	/^FilesystemSeparatorCmd($/;"	f	typeref:typename:int	file:
FilesystemSeparatorCmd	generic/tclCmdAH.c	/^static Tcl_ObjCmdProc FilesystemSeparatorCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
FilesystemVolumesCmd	generic/tclCmdAH.c	/^FilesystemVolumesCmd($/;"	f	typeref:typename:int	file:
FilesystemVolumesCmd	generic/tclCmdAH.c	/^static Tcl_ObjCmdProc FilesystemVolumesCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
FillEncodingFileMap	generic/tclEncoding.c	/^FillEncodingFileMap(void)$/;"	f	typeref:typename:void	file:
FillFilesExisted	library/tcltest/tcltest.tcl	/^    proc FillFilesExisted {} {$/;"	p	namespace:::tcltest
FillInJumpOffsets	generic/tclAssembly.c	/^FillInJumpOffsets($/;"	f	typeref:typename:void	file:
FillUnicodeRep	generic/tclStringObj.c	/^FillUnicodeRep($/;"	f	typeref:typename:void	file:
Fill_Buffer	compat/zlib/contrib/ada/test.adb	/^      procedure Fill_Buffer (J, D : in Count) is$/;"	r	subprogram:Generate_File	file:
Fill_Buffer	compat/zlib/contrib/ada/test.adb	/^      procedure Fill_Buffer (J, D : in Count);$/;"	R	subprogram:Generate_File	file:
Filter	compat/zlib/contrib/ada/read.adb	/^   Filter     : ZLib.Filter_Type;$/;"	v	subprogram:Read	file:
Filter	compat/zlib/contrib/ada/test.adb	/^   Filter : ZLib.Filter_Type;$/;"	v	subprogram:Test	file:
FilterInputBytes	generic/tclIO.c	/^FilterInputBytes($/;"	f	typeref:typename:int	file:
FilterList	generic/tclOOInt.h	/^typedef LIST_STATIC(Tcl_Obj *) FilterList;$/;"	t
FilterTypes	generic/tclDictObj.c	/^    enum FilterTypes {$/;"	g	function:DictFilterCmd	file:
Filter_Type	compat/zlib/contrib/ada/zlib.ads	/^   type Filter_Type is tagged limited private;$/;"	t	packspec:ZLib
Filter_Type	compat/zlib/contrib/ada/zlib.ads	/^   type Filter_Type is tagged limited record$/;"	t	packspec:ZLib	file:
Filtered	compat/zlib/contrib/ada/zlib.ads	/^   Filtered         : constant Strategy_Type := 1;$/;"	n	packspec:ZLib	file:
Filtered	compat/zlib/contrib/ada/zlib.ads	/^   Filtered         : constant Strategy_Type;$/;"	n	packspec:ZLib
FinalizeAlloc	generic/tclOO.c	/^FinalizeAlloc($/;"	f	typeref:typename:int	file:
FinalizeAlloc	generic/tclOO.c	/^static Tcl_NRPostProc	FinalizeAlloc;$/;"	v	typeref:typename:Tcl_NRPostProc	file:
FinalizeConditionEvent	win/tclWinThrd.c	/^FinalizeConditionEvent($/;"	f	typeref:typename:void	file:
FinalizeConstruction	generic/tclOOBasic.c	/^FinalizeConstruction($/;"	f	typeref:typename:int	file:
FinalizeConstruction	generic/tclOOBasic.c	/^static Tcl_NRPostProc	FinalizeConstruction;$/;"	v	typeref:typename:Tcl_NRPostProc	file:
FinalizeDictUpdate	generic/tclDictObj.c	/^FinalizeDictUpdate($/;"	f	typeref:typename:int	file:
FinalizeDictUpdate	generic/tclDictObj.c	/^static Tcl_NRPostProc		FinalizeDictUpdate;$/;"	v	typeref:typename:Tcl_NRPostProc	file:
FinalizeDictWith	generic/tclDictObj.c	/^FinalizeDictWith($/;"	f	typeref:typename:int	file:
FinalizeDictWith	generic/tclDictObj.c	/^static Tcl_NRPostProc		FinalizeDictWith;$/;"	v	typeref:typename:Tcl_NRPostProc	file:
FinalizeEval	generic/tclOOBasic.c	/^FinalizeEval($/;"	f	typeref:typename:int	file:
FinalizeEval	generic/tclOOBasic.c	/^static Tcl_NRPostProc	FinalizeEval;$/;"	v	typeref:typename:Tcl_NRPostProc	file:
FinalizeForwardCall	generic/tclOOMethod.c	/^FinalizeForwardCall($/;"	f	typeref:typename:int	file:
FinalizeForwardCall	generic/tclOOMethod.c	/^static Tcl_NRPostProc	FinalizeForwardCall;$/;"	v	typeref:typename:Tcl_NRPostProc	file:
FinalizeIOCmdTSD	generic/tclIOCmd.c	/^FinalizeIOCmdTSD($/;"	f	typeref:typename:void	file:
FinalizeIOCmdTSD	generic/tclIOCmd.c	/^static Tcl_ExitProc		FinalizeIOCmdTSD;$/;"	v	typeref:typename:Tcl_ExitProc	file:
FinalizeMethodRefs	generic/tclOOCall.c	/^FinalizeMethodRefs($/;"	f	typeref:typename:int	file:
FinalizeMethodRefs	generic/tclOOCall.c	/^static Tcl_NRPostProc	FinalizeMethodRefs;$/;"	v	typeref:typename:Tcl_NRPostProc	file:
FinalizeNext	generic/tclOO.c	/^FinalizeNext($/;"	f	typeref:typename:int	file:
FinalizeNext	generic/tclOO.c	/^static Tcl_NRPostProc	FinalizeNext;$/;"	v	typeref:typename:Tcl_NRPostProc	file:
FinalizeOONext	generic/tclExecute.c	/^FinalizeOONext($/;"	f	typeref:typename:int	file:
FinalizeOONext	generic/tclExecute.c	/^static Tcl_NRPostProc	FinalizeOONext;$/;"	v	typeref:typename:Tcl_NRPostProc	file:
FinalizeOONextFilter	generic/tclExecute.c	/^FinalizeOONextFilter($/;"	f	typeref:typename:int	file:
FinalizeOONextFilter	generic/tclExecute.c	/^static Tcl_NRPostProc	FinalizeOONextFilter;$/;"	v	typeref:typename:Tcl_NRPostProc	file:
FinalizeObjectCall	generic/tclOO.c	/^FinalizeObjectCall($/;"	f	typeref:typename:int	file:
FinalizeObjectCall	generic/tclOO.c	/^static Tcl_NRPostProc	FinalizeObjectCall;$/;"	v	typeref:typename:Tcl_NRPostProc	file:
FinalizePMCall	generic/tclOOMethod.c	/^FinalizePMCall($/;"	f	typeref:typename:int	file:
FinalizePMCall	generic/tclOOMethod.c	/^static Tcl_NRPostProc	FinalizePMCall;$/;"	v	typeref:typename:Tcl_NRPostProc	file:
FinalizeRegexp	generic/tclRegexp.c	/^FinalizeRegexp($/;"	f	typeref:typename:void	file:
FinalizeThread	generic/tclEvent.c	/^FinalizeThread($/;"	f	typeref:typename:void
FindChildEntry	generic/tclNamesp.c	/^FindChildEntry($/;"	f	typeref:typename:Tcl_HashEntry *	file:
FindClassProps	generic/tclOOProp.c	/^FindClassProps($/;"	f	typeref:typename:void	file:
FindCommand	generic/tclOODefineCmds.c	/^FindCommand($/;"	f	typeref:typename:Tcl_Command	file:
FindConsoleInfo	win/tclWinConsole.c	/^FindConsoleInfo($/;"	f	typeref:typename:ConsoleHandleInfo *	file:
FindElement	generic/tclUtil.c	/^FindElement($/;"	f	typeref:typename:int	file:
FindFDInList	win/tclWinSock.c	/^FindFDInList($/;"	f	typeref:typename:int	file:
FindHashEntry	generic/tclHash.c	/^FindHashEntry($/;"	f	typeref:typename:Tcl_HashEntry *	file:
FindLocalVar	generic/tclAssembly.c	/^FindLocalVar($/;"	f	typeref:typename:size_t	file:
FindObjectProps	generic/tclOOProp.c	/^FindObjectProps($/;"	f	typeref:typename:void	file:
FindOrCreateFmtScnStorage	generic/tclClockFmt.c	/^FindOrCreateFmtScnStorage($/;"	f	typeref:typename:ClockFmtScnStorage *	file:
FindPackage	generic/tclPkg.c	/^FindPackage($/;"	f	typeref:typename:Package *	file:
FindSplitPos	generic/tclPathObj.c	/^FindSplitPos($/;"	f	typeref:typename:Tcl_Size	file:
FindSymbol	unix/tclLoadDl.c	/^FindSymbol($/;"	f	typeref:typename:void *	file:
FindSymbol	unix/tclLoadDyld.c	/^FindSymbol($/;"	f	typeref:typename:void *	file:
FindSymbol	unix/tclLoadNext.c	/^FindSymbol($/;"	f	typeref:typename:void *	file:
FindSymbol	unix/tclLoadOSF.c	/^FindSymbol($/;"	f	typeref:typename:void *	file:
FindSymbol	unix/tclLoadShl.c	/^FindSymbol($/;"	f	typeref:typename:void *	file:
FindSymbol	win/tclWinLoad.c	/^FindSymbol($/;"	f	typeref:typename:void *	file:
FindTokenBegin	generic/tclClockFmt.c	/^FindTokenBegin($/;"	f	typeref:typename:const char *	file:
FindWordEnd	generic/tclClockFmt.c	/^FindWordEnd($/;"	f	typeref:typename:const char *	file:
Finish	compat/zlib/contrib/ada/zlib.ads	/^   Finish        : constant Flush_Mode := 4;$/;"	n	packspec:ZLib	file:
Finish	compat/zlib/contrib/ada/zlib.ads	/^   Finish        : constant Flush_Mode;$/;"	n	packspec:ZLib
Finish	compat/zlib/contrib/dotzlib/DotZLib/CodecBase.cs	/^        public abstract void Finish();$/;"	m	class:DotZLib.CodecBase
Finish	compat/zlib/contrib/dotzlib/DotZLib/Deflater.cs	/^        public override void Finish()$/;"	m	class:DotZLib.Deflater
Finish	compat/zlib/contrib/dotzlib/DotZLib/DotZLib.cs	/^        None,  Partial,  Sync,  Full,  Finish,  Block$/;"	e	enum:DotZLib.FlushTypes	file:
Finish	compat/zlib/contrib/dotzlib/DotZLib/DotZLib.cs	/^        void Finish();$/;"	m	interface:DotZLib.Codec
Finish	compat/zlib/contrib/dotzlib/DotZLib/Inflater.cs	/^        public override void Finish()$/;"	m	class:DotZLib.Inflater
Finish	library/http/http.tcl	/^proc http::Finish {token {errormsg ""} {skipCB 0}} {$/;"	p	namespace:http
FinishAssembly	generic/tclAssembly.c	/^FinishAssembly($/;"	f	typeref:typename:int	file:
FirstChildEntry	generic/tclNamesp.c	/^FirstChildEntry($/;"	f	typeref:typename:Tcl_HashEntry *	file:
FixLevelCode	generic/tclIO.c	/^FixLevelCode($/;"	f	typeref:typename:Tcl_Obj *	file:
Flags	win/tclWinFile.c	/^	    ULONG Flags;$/;"	m	struct:_REPARSE_DATA_BUFFER::__anon1c302b04010a::__anon1c302b040208	typeref:typename:ULONG	file:
Flate	compat/zlib/contrib/ada/zlib.adb	/^   Flate : constant array (Boolean) of Flate_Type$/;"	n	package:ZLib	file:
Flate_End_Function	compat/zlib/contrib/ada/zlib.adb	/^   type Flate_End_Function is access$/;"	t	package:ZLib	file:
Flate_Step_Function	compat/zlib/contrib/ada/zlib.adb	/^   type Flate_Step_Function is access$/;"	t	package:ZLib	file:
Flate_Type	compat/zlib/contrib/ada/zlib.adb	/^   type Flate_Type is record$/;"	t	package:ZLib	file:
FloatClassifyObjCmd	generic/tclBasic.c	/^FloatClassifyObjCmd($/;"	f	typeref:typename:int	file:
FloatClassifyObjCmd	generic/tclBasic.c	/^static Tcl_ObjCmdProc	FloatClassifyObjCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
Flush	compat/zlib/contrib/ada/zlib-streams.adb	/^   procedure Flush$/;"	r	package:ZLib.Streams	file:
Flush	compat/zlib/contrib/ada/zlib-streams.ads	/^   procedure Flush$/;"	R	packspec:ZLib.Streams
Flush	compat/zlib/contrib/ada/zlib.adb	/^     function (Strm : in Thin.Z_Streamp; Flush : in Thin.Int) return Thin.Int;$/;"	v	package:ZLib	file:
Flush	compat/zlib/contrib/ada/zlib.adb	/^   procedure Flush$/;"	r	package:ZLib	file:
Flush	compat/zlib/contrib/ada/zlib.ads	/^   procedure Flush$/;"	R	packspec:ZLib
Flush	compat/zlib/contrib/dotzlib/DotZLib/GZipStream.cs	/^        public override void Flush()$/;"	m	class:DotZLib.GZipStream
FlushChannel	generic/tclIO.c	/^FlushChannel($/;"	f	typeref:typename:int	file:
FlushTypes	compat/zlib/contrib/dotzlib/DotZLib/DotZLib.cs	/^    internal enum FlushTypes$/;"	g	namespace:DotZLib
Flush_Finish	compat/zlib/contrib/ada/zlib.adb	/^   Flush_Finish : constant array (Boolean) of Flush_Mode$/;"	n	package:ZLib	file:
Flush_Mode	compat/zlib/contrib/ada/zlib.ads	/^   type Flush_Mode is new Integer range 0 .. 5;$/;"	t	packspec:ZLib	file:
Flush_Mode	compat/zlib/contrib/ada/zlib.ads	/^   type Flush_Mode is private;$/;"	t	packspec:ZLib
FmtETokenMap	generic/tclClockFmt.c	/^static const ClockFormatTokenMap FmtETokenMap[] = {$/;"	v	typeref:typename:const ClockFormatTokenMap[]	file:
FmtETokenMapAliasIndex	generic/tclClockFmt.c	/^static const char *FmtETokenMapAliasIndex[2] = {$/;"	v	typeref:typename:const char * [2]	file:
FmtETokenMapIndex	generic/tclClockFmt.c	/^static const char *FmtETokenMapIndex = "EJjys";$/;"	v	typeref:typename:const char *	file:
FmtOTokenMap	generic/tclClockFmt.c	/^static const ClockFormatTokenMap FmtOTokenMap[] = {$/;"	v	typeref:typename:const ClockFormatTokenMap[]	file:
FmtOTokenMapAliasIndex	generic/tclClockFmt.c	/^static const char *FmtOTokenMapAliasIndex[2] = {$/;"	v	typeref:typename:const char * [2]	file:
FmtOTokenMapIndex	generic/tclClockFmt.c	/^static const char *FmtOTokenMapIndex = "dmyHIMSuw";$/;"	v	typeref:typename:const char *	file:
FmtSTokenMap	generic/tclClockFmt.c	/^static const ClockFormatTokenMap FmtSTokenMap[] = {$/;"	v	typeref:typename:const ClockFormatTokenMap[]	file:
FmtSTokenMapAliasIndex	generic/tclClockFmt.c	/^static const char *FmtSTokenMapAliasIndex[2] = {$/;"	v	typeref:typename:const char * [2]	file:
FmtSTokenMapIndex	generic/tclClockFmt.c	/^static const char *FmtSTokenMapIndex =$/;"	v	typeref:typename:const char *	file:
FmtScn4HashEntry	generic/tclClockFmt.c	/^FmtScn4HashEntry($/;"	f	typeref:typename:ClockFmtScnStorage *	file:
FmtScnHashTable	generic/tclClockFmt.c	/^static Tcl_HashTable FmtScnHashTable;$/;"	v	typeref:typename:Tcl_HashTable	file:
FmtWordTokenMap	generic/tclClockFmt.c	/^static const ClockFormatTokenMap FmtWordTokenMap = {$/;"	v	typeref:typename:const ClockFormatTokenMap	file:
FollowPossibleLink	generic/tclStrIdxTree.c	/^FollowPossibleLink($/;"	f	typeref:typename:Tcl_Obj *	file:
Footer	compat/zlib/contrib/ada/zlib.adb	/^            Footer : Footer_Array;$/;"	v	anon:declare	file:
Footer_Array	compat/zlib/contrib/ada/zlib.adb	/^   subtype Footer_Array is Stream_Element_Array (1 .. 8);$/;"	u	package:ZLib	file:
ForCondCallback	generic/tclCmdAH.c	/^ForCondCallback($/;"	f	typeref:typename:int	file:
ForCondCallback	generic/tclCmdAH.c	/^static Tcl_NRPostProc	ForCondCallback;$/;"	v	typeref:typename:Tcl_NRPostProc	file:
ForIterData	generic/tclInt.h	/^typedef struct ForIterData {$/;"	s
ForIterData	generic/tclInt.h	/^} ForIterData;$/;"	t	typeref:struct:ForIterData
ForNextCallback	generic/tclCmdAH.c	/^ForNextCallback($/;"	f	typeref:typename:int	file:
ForNextCallback	generic/tclCmdAH.c	/^static Tcl_NRPostProc	ForNextCallback;$/;"	v	typeref:typename:Tcl_NRPostProc	file:
ForPostNextCallback	generic/tclCmdAH.c	/^ForPostNextCallback($/;"	f	typeref:typename:int	file:
ForPostNextCallback	generic/tclCmdAH.c	/^static Tcl_NRPostProc	ForPostNextCallback;$/;"	v	typeref:typename:Tcl_NRPostProc	file:
ForSetupCallback	generic/tclCmdAH.c	/^ForSetupCallback($/;"	f	typeref:typename:int	file:
ForSetupCallback	generic/tclCmdAH.c	/^static Tcl_NRPostProc	ForSetupCallback;$/;"	v	typeref:typename:Tcl_NRPostProc	file:
ForeachAssignments	generic/tclCmdAH.c	/^ForeachAssignments($/;"	f	typeref:typename:int	file:
ForeachCleanup	generic/tclCmdAH.c	/^ForeachCleanup($/;"	f	typeref:typename:void	file:
ForeachInfo	generic/tclCompile.h	/^typedef struct ForeachInfo {$/;"	s
ForeachInfo	generic/tclCompile.h	/^} ForeachInfo;$/;"	t	typeref:struct:ForeachInfo
ForeachLoopStep	generic/tclCmdAH.c	/^ForeachLoopStep($/;"	f	typeref:typename:int	file:
ForeachLoopStep	generic/tclCmdAH.c	/^static Tcl_NRPostProc	ForeachLoopStep;$/;"	v	typeref:typename:Tcl_NRPostProc	file:
ForeachState	generic/tclCmdAH.c	/^struct ForeachState {$/;"	s	file:
ForeachVarList	generic/tclCompile.h	/^typedef struct ForeachVarList {$/;"	s
ForeachVarList	generic/tclCompile.h	/^} ForeachVarList;$/;"	t	typeref:struct:ForeachVarList
ForgetSyncObject	generic/tclThread.c	/^ForgetSyncObject($/;"	f	typeref:typename:void	file:
FormatInfAndNaN	generic/tclStrToD.c	/^FormatInfAndNaN($/;"	f	typeref:typename:char *	file:
FormatInstruction	generic/tclDisassemble.c	/^FormatInstruction($/;"	f	typeref:typename:int	file:
FormatNumber	generic/tclBinary.c	/^FormatNumber($/;"	f	typeref:typename:int	file:
FormatNumericTimeZone	library/clockclassic.tcl	/^proc FormatNumericTimeZone { z } {$/;"	p
FormatStarDate	library/clockclassic.tcl	/^proc FormatStarDate { date } {$/;"	p
FormatZero	generic/tclStrToD.c	/^FormatZero($/;"	f	typeref:typename:char *	file:
ForwardMethod	generic/tclOOInt.h	/^struct ForwardMethod {$/;"	s
ForwardMethod	generic/tclOOInt.h	/^typedef struct ForwardMethod ForwardMethod;$/;"	t	typeref:struct:ForwardMethod
ForwardOpToHandlerThread	generic/tclIORChan.c	/^ForwardOpToHandlerThread($/;"	f	typeref:typename:void	file:
ForwardOpToOwnerThread	generic/tclIORTrans.c	/^ForwardOpToOwnerThread($/;"	f	typeref:typename:void	file:
ForwardParam	generic/tclIORChan.c	/^typedef union ForwardParam {$/;"	u	file:
ForwardParam	generic/tclIORChan.c	/^} ForwardParam;$/;"	t	typeref:union:ForwardParam	file:
ForwardParam	generic/tclIORTrans.c	/^typedef union ForwardParam {$/;"	u	file:
ForwardParam	generic/tclIORTrans.c	/^} ForwardParam;$/;"	t	typeref:union:ForwardParam	file:
ForwardParamBase	generic/tclIORChan.c	/^} ForwardParamBase;$/;"	t	typeref:struct:__anon92d8dd290608	file:
ForwardParamBase	generic/tclIORTrans.c	/^} ForwardParamBase;$/;"	t	typeref:struct:__anon21e740770608	file:
ForwardParamBlock	generic/tclIORChan.c	/^struct ForwardParamBlock {$/;"	s	file:
ForwardParamGetOpt	generic/tclIORChan.c	/^struct ForwardParamGetOpt {$/;"	s	file:
ForwardParamInput	generic/tclIORChan.c	/^struct ForwardParamInput {$/;"	s	file:
ForwardParamLimit	generic/tclIORTrans.c	/^struct ForwardParamLimit {$/;"	s	file:
ForwardParamOutput	generic/tclIORChan.c	/^struct ForwardParamOutput {$/;"	s	file:
ForwardParamSeek	generic/tclIORChan.c	/^struct ForwardParamSeek {$/;"	s	file:
ForwardParamSetOpt	generic/tclIORChan.c	/^struct ForwardParamSetOpt {$/;"	s	file:
ForwardParamTransform	generic/tclIORTrans.c	/^struct ForwardParamTransform {$/;"	s	file:
ForwardParamTruncate	generic/tclIORChan.c	/^struct ForwardParamTruncate {$/;"	s	file:
ForwardParamWatch	generic/tclIORChan.c	/^struct ForwardParamWatch {$/;"	s	file:
ForwardProc	generic/tclIORChan.c	/^ForwardProc($/;"	f	typeref:typename:int	file:
ForwardProc	generic/tclIORTrans.c	/^ForwardProc($/;"	f	typeref:typename:int	file:
ForwardSetDynamicError	generic/tclIORChan.c	/^#define ForwardSetDynamicError(/;"	d	file:
ForwardSetDynamicError	generic/tclIORTrans.c	/^#define ForwardSetDynamicError(/;"	d	file:
ForwardSetObjError	generic/tclIORChan.c	/^ForwardSetObjError($/;"	f	typeref:typename:void	file:
ForwardSetObjError	generic/tclIORTrans.c	/^ForwardSetObjError($/;"	f	typeref:typename:void	file:
ForwardSetStaticError	generic/tclIORChan.c	/^#define ForwardSetStaticError(/;"	d	file:
ForwardSetStaticError	generic/tclIORTrans.c	/^#define ForwardSetStaticError(/;"	d	file:
ForwardedBlock	generic/tclIORChan.c	/^    ForwardedBlock,$/;"	e	enum:__anon92d8dd290503	file:
ForwardedClear	generic/tclIORTrans.c	/^    ForwardedClear,$/;"	e	enum:__anon21e740770503	file:
ForwardedClose	generic/tclIORChan.c	/^    ForwardedClose,$/;"	e	enum:__anon92d8dd290503	file:
ForwardedClose	generic/tclIORTrans.c	/^    ForwardedClose,$/;"	e	enum:__anon21e740770503	file:
ForwardedDrain	generic/tclIORTrans.c	/^    ForwardedDrain,$/;"	e	enum:__anon21e740770503	file:
ForwardedFlush	generic/tclIORTrans.c	/^    ForwardedFlush,$/;"	e	enum:__anon21e740770503	file:
ForwardedGetOpt	generic/tclIORChan.c	/^    ForwardedGetOpt,$/;"	e	enum:__anon92d8dd290503	file:
ForwardedGetOptAll	generic/tclIORChan.c	/^    ForwardedGetOptAll,$/;"	e	enum:__anon92d8dd290503	file:
ForwardedInput	generic/tclIORChan.c	/^    ForwardedInput,$/;"	e	enum:__anon92d8dd290503	file:
ForwardedInput	generic/tclIORTrans.c	/^    ForwardedInput,$/;"	e	enum:__anon21e740770503	file:
ForwardedLimit	generic/tclIORTrans.c	/^    ForwardedLimit,$/;"	e	enum:__anon21e740770503	file:
ForwardedOperation	generic/tclIORChan.c	/^} ForwardedOperation;$/;"	t	typeref:enum:__anon92d8dd290503	file:
ForwardedOperation	generic/tclIORTrans.c	/^} ForwardedOperation;$/;"	t	typeref:enum:__anon21e740770503	file:
ForwardedOutput	generic/tclIORChan.c	/^    ForwardedOutput,$/;"	e	enum:__anon92d8dd290503	file:
ForwardedOutput	generic/tclIORTrans.c	/^    ForwardedOutput$/;"	e	enum:__anon21e740770503	file:
ForwardedSeek	generic/tclIORChan.c	/^    ForwardedSeek,$/;"	e	enum:__anon92d8dd290503	file:
ForwardedSetOpt	generic/tclIORChan.c	/^    ForwardedSetOpt,$/;"	e	enum:__anon92d8dd290503	file:
ForwardedTruncate	generic/tclIORChan.c	/^    ForwardedTruncate$/;"	e	enum:__anon92d8dd290503	file:
ForwardedWatch	generic/tclIORChan.c	/^    ForwardedWatch,$/;"	e	enum:__anon92d8dd290503	file:
ForwardingEvent	generic/tclIORChan.c	/^} ForwardingEvent;$/;"	t	typeref:struct:__anon92d8dd290708	file:
ForwardingEvent	generic/tclIORTrans.c	/^} ForwardingEvent;$/;"	t	typeref:struct:__anon21e740770708	file:
ForwardingResult	generic/tclIORChan.c	/^struct ForwardingResult {$/;"	s	file:
ForwardingResult	generic/tclIORChan.c	/^typedef struct ForwardingResult ForwardingResult;$/;"	t	typeref:struct:ForwardingResult	file:
ForwardingResult	generic/tclIORTrans.c	/^struct ForwardingResult {$/;"	s	file:
ForwardingResult	generic/tclIORTrans.c	/^typedef struct ForwardingResult ForwardingResult;$/;"	t	typeref:struct:ForwardingResult	file:
Foundation	generic/tclOOInt.h	/^struct Foundation {$/;"	s
Foundation	generic/tclOOInt.h	/^typedef struct Foundation Foundation;$/;"	t	typeref:struct:Foundation
Free	compat/zlib/contrib/ada/zlib-streams.adb	/^      procedure Free is new Ada.Unchecked_Deallocation$/;"	r	subprogram:Close	file:
Free	compat/zlib/contrib/ada/zlib.adb	/^   procedure Free is new Ada.Unchecked_Deallocation$/;"	r	package:ZLib	file:
FreeAfterPtr	generic/tclTimer.c	/^FreeAfterPtr($/;"	f	typeref:typename:void	file:
FreeArithSeriesInternalRep	generic/tclArithSeries.c	/^FreeArithSeriesInternalRep($/;"	f	typeref:typename:void	file:
FreeAssembleCodeInternalRep	generic/tclAssembly.c	/^FreeAssembleCodeInternalRep($/;"	f	typeref:typename:void	file:
FreeAssembleCodeInternalRep	generic/tclAssembly.c	/^static Tcl_FreeInternalRepProc	FreeAssembleCodeInternalRep;$/;"	v	typeref:typename:Tcl_FreeInternalRepProc	file:
FreeAssemblyEnv	generic/tclAssembly.c	/^FreeAssemblyEnv($/;"	f	typeref:typename:void	file:
FreeBignum	generic/tclObj.c	/^FreeBignum($/;"	f	typeref:typename:void	file:
FreeBinaryEncoding	generic/tclIO.c	/^FreeBinaryEncoding(void)$/;"	f	typeref:typename:void	file:
FreeByteCodeInternalRep	generic/tclCompile.c	/^FreeByteCodeInternalRep($/;"	f	typeref:typename:void	file:
FreeChannelInternalRep	generic/tclIO.c	/^FreeChannelInternalRep($/;"	f	typeref:typename:void	file:
FreeChannelState	generic/tclIO.c	/^FreeChannelState($/;"	f	typeref:typename:void	file:
FreeCmdNameInternalRep	generic/tclObj.c	/^FreeCmdNameInternalRep($/;"	f	typeref:typename:void	file:
FreeDictInternalRep	generic/tclDictObj.c	/^FreeDictInternalRep($/;"	f	typeref:typename:void	file:
FreeDictInternalRep	generic/tclDictObj.c	/^static Tcl_FreeInternalRepProc	FreeDictInternalRep;$/;"	v	typeref:typename:Tcl_FreeInternalRepProc	file:
FreeDictUpdateInfo	generic/tclCompCmds.c	/^FreeDictUpdateInfo($/;"	f	typeref:typename:void	file:
FreeDictUpdateInfo	generic/tclCompCmds.c	/^static AuxDataFreeProc	FreeDictUpdateInfo;$/;"	v	typeref:typename:AuxDataFreeProc	file:
FreeER	generic/tclEnsemble.c	/^FreeER($/;"	f	typeref:typename:int	file:
FreeER	generic/tclEnsemble.c	/^static Tcl_NRPostProc	FreeER;$/;"	v	typeref:typename:Tcl_NRPostProc	file:
FreeElements	generic/tclArithSeries.c	/^FreeElements($/;"	f	typeref:typename:void	file:
FreeEncoding	generic/tclEncoding.c	/^FreeEncoding($/;"	f	typeref:typename:void	file:
FreeEncodingInternalRep	generic/tclEncoding.c	/^FreeEncodingInternalRep($/;"	f	typeref:typename:void	file:
FreeEncodingInternalRep	generic/tclEncoding.c	/^static Tcl_FreeInternalRepProc	FreeEncodingInternalRep;$/;"	v	typeref:typename:Tcl_FreeInternalRepProc	file:
FreeEnsembleCmdRep	generic/tclEnsemble.c	/^FreeEnsembleCmdRep($/;"	f	typeref:typename:void	file:
FreeExprCodeInternalRep	generic/tclExecute.c	/^FreeExprCodeInternalRep($/;"	f	typeref:typename:void	file:
FreeForeachInfo	generic/tclCompCmds.c	/^FreeForeachInfo($/;"	f	typeref:typename:void	file:
FreeForeachInfo	generic/tclCompCmds.c	/^static AuxDataFreeProc	FreeForeachInfo;$/;"	v	typeref:typename:AuxDataFreeProc	file:
FreeFsPathInternalRep	generic/tclPathObj.c	/^FreeFsPathInternalRep($/;"	f	typeref:typename:void	file:
FreeGrBuf	unix/tclUnixCompat.c	/^FreeGrBuf($/;"	f	typeref:typename:void	file:
FreeIndex	generic/tclIndexObj.c	/^FreeIndex($/;"	f	typeref:typename:void	file:
FreeJumptableInfo	generic/tclCompCmdsSZ.c	/^FreeJumptableInfo($/;"	f	typeref:typename:void	file:
FreeJumptableInfo	generic/tclCompCmdsSZ.c	/^static AuxDataFreeProc	FreeJumptableInfo;$/;"	v	typeref:typename:AuxDataFreeProc	file:
FreeLambdaInternalRep	generic/tclProc.c	/^FreeLambdaInternalRep($/;"	f	typeref:typename:void	file:
FreeLgenInternalRep	generic/tclTestABSList.c	/^FreeLgenInternalRep(Tcl_Obj *objPtr)$/;"	f	typeref:typename:void	file:
FreeListInternalRep	generic/tclListObj.c	/^FreeListInternalRep($/;"	f	typeref:typename:void	file:
FreeLocalVarName	generic/tclVar.c	/^FreeLocalVarName($/;"	f	typeref:typename:void	file:
FreeLocalVarName	generic/tclVar.c	/^static Tcl_FreeInternalRepProc	FreeLocalVarName;$/;"	v	typeref:typename:Tcl_FreeInternalRepProc	file:
FreeMainInterp	generic/tclMain.c	/^FreeMainInterp($/;"	f	typeref:typename:void	file:
FreeMethodNameRep	generic/tclOOCall.c	/^FreeMethodNameRep($/;"	f	typeref:typename:void	file:
FreeNsNameInternalRep	generic/tclNamesp.c	/^FreeNsNameInternalRep($/;"	f	typeref:typename:void	file:
FreeParsedVarName	generic/tclVar.c	/^FreeParsedVarName($/;"	f	typeref:typename:void	file:
FreeParsedVarName	generic/tclVar.c	/^static Tcl_FreeInternalRepProc	FreeParsedVarName;$/;"	v	typeref:typename:Tcl_FreeInternalRepProc	file:
FreeProcessGlobalValue	generic/tclUtil.c	/^FreeProcessGlobalValue($/;"	f	typeref:typename:void	file:
FreeProcessInfo	generic/tclProcess.c	/^FreeProcessInfo($/;"	f	typeref:typename:void
FreeProperByteArrayInternalRep	generic/tclBinary.c	/^FreeProperByteArrayInternalRep($/;"	f	typeref:typename:void	file:
FreePwBuf	unix/tclUnixCompat.c	/^FreePwBuf($/;"	f	typeref:typename:void	file:
FreeReceivedError	generic/tclIORChan.c	/^#define FreeReceivedError(/;"	d	file:
FreeReceivedError	generic/tclIORTrans.c	/^#define FreeReceivedError(/;"	d	file:
FreeReflectedChannel	generic/tclIORChan.c	/^FreeReflectedChannel($/;"	f	typeref:typename:void	file:
FreeReflectedChannel	generic/tclIORChan.c	/^static Tcl_FreeProc	FreeReflectedChannel;$/;"	v	typeref:typename:Tcl_FreeProc	file:
FreeReflectedTransform	generic/tclIORTrans.c	/^FreeReflectedTransform($/;"	f	typeref:typename:void	file:
FreeReflectedTransform	generic/tclIORTrans.c	/^static Tcl_FreeProc	FreeReflectedTransform;$/;"	v	typeref:typename:Tcl_FreeProc	file:
FreeReflectedTransformArgs	generic/tclIORTrans.c	/^FreeReflectedTransformArgs($/;"	f	typeref:typename:void	file:
FreeRegexp	generic/tclRegexp.c	/^FreeRegexp($/;"	f	typeref:typename:void	file:
FreeRegexpInternalRep	generic/tclRegexp.c	/^FreeRegexpInternalRep($/;"	f	typeref:typename:void	file:
FreeScan	library/clockclassic.tcl	/^proc FreeScan { string base timezone locale } {$/;"	p
FreeStringInternalRep	generic/tclStringObj.c	/^FreeStringInternalRep($/;"	f	typeref:typename:void	file:
FreeSubstCodeInternalRep	generic/tclCompile.c	/^FreeSubstCodeInternalRep($/;"	f	typeref:typename:void	file:
FreeTestIndexHexInternalRep	generic/tclTestObjInterface.c	/^FreeTestIndexHexInternalRep(Tcl_Obj *objPtr)$/;"	f	typeref:typename:void	file:
FreeTestListIntegerInternalRep	generic/tclTestObjInterfaceInteger.c	/^static void FreeTestListIntegerInternalRep(Tcl_Obj *listPtr) {$/;"	f	typeref:typename:void	file:
FreeThreadHash	generic/tclUtil.c	/^FreeThreadHash($/;"	f	typeref:typename:void	file:
FreeVarEntry	generic/tclVar.c	/^FreeVarEntry($/;"	f	typeref:typename:void	file:
FreeVars	generic/regcustom.h	/^#define FreeVars(/;"	d
FreeVars	generic/regguts.h	/^#define FreeVars(/;"	d
Freq	compat/zlib/deflate.h	/^#define Freq /;"	d
FrmResultAllocate	generic/tclClockFmt.c	/^FrmResultAllocate($/;"	f	typeref:typename:int	file:
FrmResultIsAllocated	generic/tclClockFmt.c	/^#define FrmResultIsAllocated(/;"	d	file:
FromCTime	win/tclWinFile.c	/^FromCTime($/;"	f	typeref:typename:void	file:
FsAddMountsToGlobResult	generic/tclIOUtil.c	/^FsAddMountsToGlobResult($/;"	f	typeref:typename:void	file:
FsGetFirstFilesystem	generic/tclIOUtil.c	/^FsGetFirstFilesystem(void)$/;"	f	typeref:typename:FilesystemRecord *	file:
FsListMounts	generic/tclIOUtil.c	/^FsListMounts($/;"	f	typeref:typename:Tcl_Obj *	file:
FsPath	generic/tclPathObj.c	/^} FsPath;$/;"	t	typeref:struct:__anoneca7f3ad0108	file:
FsRecacheFilesystemList	generic/tclIOUtil.c	/^FsRecacheFilesystemList(void)$/;"	f	typeref:typename:void	file:
FsThrExitProc	generic/tclIOUtil.c	/^FsThrExitProc($/;"	f	typeref:typename:void	file:
FsUpdateCwd	generic/tclIOUtil.c	/^FsUpdateCwd($/;"	f	typeref:typename:void	file:
Full	compat/zlib/contrib/dotzlib/DotZLib/DotZLib.cs	/^        None,  Partial,  Sync,  Full,  Finish,  Block$/;"	e	enum:DotZLib.FlushTypes	file:
Full_Flush	compat/zlib/contrib/ada/zlib.ads	/^   Full_Flush    : constant Flush_Mode := 3;$/;"	n	packspec:ZLib	file:
Full_Flush	compat/zlib/contrib/ada/zlib.ads	/^   Full_Flush    : constant Flush_Mode;$/;"	n	packspec:ZLib
FunctionNotAvailableError	generic/tclIcu.c	/^FunctionNotAvailableError($/;"	f	typeref:typename:int	file:
Further	compat/zlib/contrib/ada/mtest.adb	/^      procedure Further (Item : in Stream_Element_Array) is$/;"	r	task:Test_Task	file:
Further	compat/zlib/contrib/ada/mtest.adb	/^      procedure Further (Item : in Stream_Element_Array);$/;"	R	task:Test_Task	file:
GDB	unix/Makefile.in	/^GDB			= gdb$/;"	m
GDB	win/Makefile.in	/^GDB		= gdb$/;"	m
GENERAL_ARITHMETIC_ERROR	generic/tclExecute.c	/^#define GENERAL_ARITHMETIC_ERROR /;"	d	file:
GENERIC_DIR	unix/Makefile.in	/^GENERIC_DIR		= $(TOP_DIR)\/generic$/;"	m
GENERIC_DIR	win/Makefile.in	/^GENERIC_DIR		= $(TOP_DIR)\/generic$/;"	m
GENERIC_DIR_NATIVE	win/Makefile.in	/^GENERIC_DIR_NATIVE	= $(shell $(CYGPATH) '$(GENERIC_DIR)')$/;"	m
GENERIC_HDRS	unix/Makefile.in	/^GENERIC_HDRS = \\$/;"	m
GENERIC_OBJS	unix/Makefile.in	/^GENERIC_OBJS = regcomp.o regexec.o regfree.o regerror.o tclAlloc.o \\$/;"	m
GENERIC_OBJS	win/Makefile.in	/^GENERIC_OBJS = \\$/;"	m
GENERIC_SRCS	unix/Makefile.in	/^GENERIC_SRCS = \\$/;"	m
GEQ	generic/tclCompExpr.c	/^#define GEQ	/;"	d	file:
GET	tests/httpTestScript.tcl	/^proc httpTestScript::GET {uriCode args} {$/;"	p	namespace:httpTestScript
GETCACHE	generic/tclThreadAlloc.c	/^# define GETCACHE(/;"	d	file:
GETCOLOR	generic/regguts.h	/^#define	GETCOLOR(/;"	d
GETCWDPROC	doc/FileSystem.3	/^.SS GETCWDPROC$/;"	S	section:Filesystem""FILESYSTEM EFFICIENCY
GETHANDLEPROC	doc/CrtChannel.3	/^.SS GETHANDLEPROC$/;"	S	section:Tcl_CreateChannel""TCL_CHANNELTYPE
GETOPTIONPROC	doc/CrtChannel.3	/^.SS GETOPTIONPROC$/;"	S	section:Tcl_CreateChannel""TCL_CHANNELTYPE
GETREADQUEUE	unix/tclUnixChan.c	/^#	define GETREADQUEUE(/;"	d	file:
GETTOD_NOT_DECLARED	unix/configure.ac	/^    AC_DEFINE(GETTOD_NOT_DECLARED, 1, [Is gettimeofday() actually declared in <sys\/time.h>?])$/;"	d
GETWRITEQUEUE	unix/tclUnixChan.c	/^#	define GETWRITEQUEUE(/;"	d	file:
GET_BYTEARRAY	generic/tclBinary.c	/^#define GET_BYTEARRAY(/;"	d	file:
GET_DARWIN_RELEASE	unix/tclUnixInit.c	/^#define GET_DARWIN_RELEASE /;"	d	file:
GET_MODULE_HANDLE_EX_FLAG_FROM_ADDRESS	unix/tclUnixPort.h	/^#   define GET_MODULE_HANDLE_EX_FLAG_FROM_ADDRESS /;"	d
GET_STRING	generic/tclStringRep.h	/^#define GET_STRING(/;"	d
GLOB	generic/tclCmdIL.c	/^	EXACT, GLOB, REGEXP, SORTED$/;"	e	enum:Tcl_LsearchObjCmd::modes	file:
GLOB_DIR	generic/tclFileName.c	/^	GLOB_DIR, GLOB_JOIN, GLOB_NOCOMPLAIN, GLOB_PATH, GLOB_TAILS,$/;"	e	enum:Tcl_GlobObjCmd::globOptionsEnum	file:
GLOB_JOIN	generic/tclFileName.c	/^	GLOB_DIR, GLOB_JOIN, GLOB_NOCOMPLAIN, GLOB_PATH, GLOB_TAILS,$/;"	e	enum:Tcl_GlobObjCmd::globOptionsEnum	file:
GLOB_LAST	generic/tclFileName.c	/^	GLOB_TYPE, GLOB_LAST$/;"	e	enum:Tcl_GlobObjCmd::globOptionsEnum	file:
GLOB_NOCOMPLAIN	generic/tclFileName.c	/^	GLOB_DIR, GLOB_JOIN, GLOB_NOCOMPLAIN, GLOB_PATH, GLOB_TAILS,$/;"	e	enum:Tcl_GlobObjCmd::globOptionsEnum	file:
GLOB_PATH	generic/tclFileName.c	/^	GLOB_DIR, GLOB_JOIN, GLOB_NOCOMPLAIN, GLOB_PATH, GLOB_TAILS,$/;"	e	enum:Tcl_GlobObjCmd::globOptionsEnum	file:
GLOB_TAILS	generic/tclFileName.c	/^	GLOB_DIR, GLOB_JOIN, GLOB_NOCOMPLAIN, GLOB_PATH, GLOB_TAILS,$/;"	e	enum:Tcl_GlobObjCmd::globOptionsEnum	file:
GLOB_TYPE	generic/tclFileName.c	/^	GLOB_TYPE, GLOB_LAST$/;"	e	enum:Tcl_GlobObjCmd::globOptionsEnum	file:
GNUTYPE_DUMPDIR	compat/zlib/contrib/untgz/untgz.c	/^#define GNUTYPE_DUMPDIR /;"	d	file:
GNUTYPE_LONGLINK	compat/zlib/contrib/untgz/untgz.c	/^#define GNUTYPE_LONGLINK /;"	d	file:
GNUTYPE_LONGNAME	compat/zlib/contrib/untgz/untgz.c	/^#define GNUTYPE_LONGNAME /;"	d	file:
GNUTYPE_MULTIVOL	compat/zlib/contrib/untgz/untgz.c	/^#define GNUTYPE_MULTIVOL /;"	d	file:
GNUTYPE_NAMES	compat/zlib/contrib/untgz/untgz.c	/^#define GNUTYPE_NAMES /;"	d	file:
GNUTYPE_SPARSE	compat/zlib/contrib/untgz/untgz.c	/^#define GNUTYPE_SPARSE /;"	d	file:
GNUTYPE_VOLHDR	compat/zlib/contrib/untgz/untgz.c	/^#define GNUTYPE_VOLHDR /;"	d	file:
GOT_BITS	unix/tclUnixSock.c	/^#define GOT_BITS(/;"	d	file:
GOT_BITS	win/tclWinSock.c	/^#define GOT_BITS(/;"	d	file:
GPNCache	generic/tclOOProp.c	/^typedef struct GPNCache {$/;"	s	file:
GPNCache	generic/tclOOProp.c	/^} GPNCache;$/;"	t	typeref:struct:GPNCache	file:
GPNFlags	generic/tclOOProp.c	/^enum GPNFlags {$/;"	g	file:
GPN_FALLING_BACK	generic/tclOOProp.c	/^    GPN_FALLING_BACK = 2	\/* Are we doing a recursive call to determine$/;"	e	enum:GPNFlags	file:
GPN_WRITABLE	generic/tclOOProp.c	/^    GPN_WRITABLE = 1,		\/* Are we looking for a writable property? *\/$/;"	e	enum:GPNFlags	file:
GRAPH_BITS	generic/tclUtf.c	/^#define GRAPH_BITS /;"	d	file:
GREATER	generic/tclCompExpr.c	/^#define GREATER	/;"	d	file:
GREGORIAN_CHANGE_DATE	generic/tclDate.h	/^#define GREGORIAN_CHANGE_DATE	/;"	d
GT_OFF	compat/zlib/gzguts.h	/^#define GT_OFF(/;"	d
GUARD ZONES	doc/TCL_MEM_DEBUG.3	/^.SH "GUARD ZONES"$/;"	s	title:TCL_MEM_DEBUG
GUARD_VALUE	generic/tclCkalloc.c	/^#define GUARD_VALUE /;"	d	file:
GUESSED_BLOCK_SIZE	generic/tclFileName.c	/^#define GUESSED_BLOCK_SIZE	/;"	d	file:
GUNZIP	compat/zlib/inflate.h	/^#  define GUNZIP$/;"	d
GUTSMAGIC	generic/regguts.h	/^#define	GUTSMAGIC	/;"	d
GZBUFSIZE	compat/zlib/gzguts.h	/^#define GZBUFSIZE /;"	d
GZIP	compat/zlib/deflate.h	/^#  define GZIP$/;"	d
GZIP	compat/zlib/examples/zran.c	/^#define GZIP /;"	d	file:
GZIP	compat/zlib/gzguts.h	/^#define GZIP /;"	d
GZIP OPTIONS DICTIONARY	doc/TclZlib.3	/^.SH "GZIP OPTIONS DICTIONARY"$/;"	s	title:TclZlib
GZIP_STATE	compat/zlib/deflate.h	/^#  define GZIP_STATE /;"	d
GZLOG_H	compat/zlib/examples/gzlog.h	/^#define GZLOG_H$/;"	d
GZ_APPEND	compat/zlib/gzguts.h	/^#define GZ_APPEND /;"	d
GZ_NONE	compat/zlib/gzguts.h	/^#define GZ_NONE /;"	d
GZ_READ	compat/zlib/gzguts.h	/^#define GZ_READ /;"	d
GZ_SUFFIX	compat/zlib/test/minigzip.c	/^#  define GZ_SUFFIX /;"	d	file:
GZ_WRITE	compat/zlib/gzguts.h	/^#define GZ_WRITE /;"	d
GZip	compat/zlib/contrib/ada/zlib.ads	/^   type Header_Type is (None, Auto, Default, GZip);$/;"	l	type:Header_Type	file:
GZipStream	compat/zlib/contrib/dotzlib/DotZLib/GZipStream.cs	/^		public GZipStream(string fileName, CompressLevel level)$/;"	m	class:DotZLib.GZipStream
GZipStream	compat/zlib/contrib/dotzlib/DotZLib/GZipStream.cs	/^	public class GZipStream : Stream, IDisposable$/;"	c	namespace:DotZLib
GZipStream	compat/zlib/contrib/dotzlib/DotZLib/GZipStream.cs	/^        public GZipStream(string fileName)$/;"	m	class:DotZLib.GZipStream
GZipStreamTests	compat/zlib/contrib/dotzlib/DotZLib/UnitTests.cs	/^    public class GZipStreamTests$/;"	c	namespace:DotZLibTests
GZipStream_WriteRead	compat/zlib/contrib/dotzlib/DotZLib/UnitTests.cs	/^        public void GZipStream_WriteRead()$/;"	m	class:DotZLibTests.GZipStreamTests
Gen	compat/zlib/contrib/ada/mtest.adb	/^      Gen : Random_Elements.Generator;$/;"	v	task:Test_Task	file:
Gen	compat/zlib/contrib/ada/read.adb	/^   Gen : Random_Elements.Generator;$/;"	v	subprogram:Read	file:
Gen	compat/zlib/contrib/ada/test.adb	/^      Gen    : Random_Elements.Generator;$/;"	v	subprogram:Generate_File	file:
GenerateErrorInfo	generic/tclOODefineCmds.c	/^GenerateErrorInfo($/;"	f	typeref:typename:void	file:
GenerateHeader	generic/tclZlib.c	/^GenerateHeader($/;"	f	typeref:typename:int	file:
Generate_File	compat/zlib/contrib/ada/test.adb	/^   procedure Generate_File is$/;"	r	subprogram:Test	file:
Generate_File	compat/zlib/contrib/ada/test.adb	/^   procedure Generate_File;$/;"	R	subprogram:Test	file:
GenericReparseBuffer	win/tclWinFile.c	/^	} GenericReparseBuffer;$/;"	m	union:_REPARSE_DATA_BUFFER::__anon1c302b04010a	typeref:struct:_REPARSE_DATA_BUFFER::__anon1c302b04010a::__anon1c302b040408	file:
Generic_Translate	compat/zlib/contrib/ada/zlib.adb	/^   procedure Generic_Translate$/;"	r	package:ZLib	file:
Generic_Translate	compat/zlib/contrib/ada/zlib.ads	/^   procedure Generic_Translate$/;"	R	packspec:ZLib
Get	compat/zlib/contrib/dotzlib/DotZLib/CircularBuffer.cs	/^        public int Get()$/;"	m	class:DotZLib.CircularBuffer
Get	compat/zlib/contrib/dotzlib/DotZLib/CircularBuffer.cs	/^        public int Get(byte[] destination, int offset, int count)$/;"	m	class:DotZLib.CircularBuffer
Get	generic/tclZipfs.c	/^#define Get(/;"	d	file:
GetAfterEvent	generic/tclTimer.c	/^GetAfterEvent($/;"	f	typeref:typename:AfterInfo *	file:
GetAllClassProperties	generic/tclOOProp.c	/^GetAllClassProperties($/;"	f	typeref:typename:Tcl_Obj *	file:
GetBignumFromObj	generic/tclObj.c	/^GetBignumFromObj($/;"	f	typeref:typename:int	file:
GetBinaryEncoding	generic/tclIO.c	/^GetBinaryEncoding(void)$/;"	f	typeref:typename:Tcl_Encoding	file:
GetBlocks	generic/tclThreadAlloc.c	/^GetBlocks($/;"	f	typeref:typename:int	file:
GetBooleanOperand	generic/tclAssembly.c	/^GetBooleanOperand($/;"	f	typeref:typename:int	file:
GetCache	generic/tclThreadAlloc.c	/^GetCache(void)$/;"	f	typeref:typename:Cache *	file:
GetCaseType	generic/tclUniData.c	/^#define GetCaseType(/;"	d	file:
GetCategory	generic/tclUniData.c	/^#define GetCategory(/;"	d	file:
GetChannelTable	generic/tclIO.c	/^GetChannelTable($/;"	f	typeref:typename:Tcl_HashTable *	file:
GetCharLength	generic/tclStringObj.c	/^GetCharLength($/;"	f	typeref:typename:int
GetClassInOuterContext	generic/tclOODefineCmds.c	/^GetClassInOuterContext($/;"	f	typeref:typename:Class *	file:
GetCmdLocEncodingSize	generic/tclCompile.c	/^GetCmdLocEncodingSize($/;"	f	typeref:typename:int	file:
GetCompressionRate	compat/zlib/contrib/delphi/ZLib.pas	/^    function GetCompressionRate: Single;$/;"	f	typeref:typename:Single
GetConfigDict	generic/tclConfig.c	/^GetConfigDict($/;"	f	typeref:typename:Tcl_Obj *	file:
GetCoroutineFromObj	generic/tclBasic.c	/^GetCoroutineFromObj($/;"	f	typeref:typename:CoroutineData *	file:
GetDelta	generic/tclUniData.c	/^#define GetDelta(/;"	d	file:
GetDictFromObj	generic/tclDictObj.c	/^GetDictFromObj($/;"	f	typeref:typename:Dict *	file:
GetDouble	generic/tclLink.c	/^GetDouble($/;"	f	typeref:typename:int	file:
GetEndOffsetFromObj	generic/tclUtil.c	/^GetEndOffsetFromObj($/;"	f	typeref:typename:int	file:
GetEnsembleFromCommand	generic/tclEnsemble.c	/^GetEnsembleFromCommand($/;"	f	typeref:typename:EnsembleConfig *	file:
GetExceptRangeForPc	generic/tclExecute.c	/^GetExceptRangeForPc($/;"	f	typeref:typename:ExceptionRange *	file:
GetExtension	generic/tclPathObj.c	/^GetExtension($/;"	f	typeref:typename:Tcl_Obj *	file:
GetFd	unix/tclUnixPipe.c	/^#define GetFd(/;"	d	file:
GetFd	unix/tclUnixTest.c	/^#define GetFd(/;"	d	file:
GetFormatSpec	generic/tclBinary.c	/^GetFormatSpec($/;"	f	typeref:typename:int	file:
GetFoundation	generic/tclOO.c	/^#define GetFoundation(/;"	d	file:
GetFrameInfoValueProc	generic/tclInt.h	/^typedef Tcl_Obj * (GetFrameInfoValueProc)(void *clientData);$/;"	t	typeref:typename:Tcl_Obj * ()(void * clientData)
GetGregorianEraYearDay	generic/tclClock.c	/^GetGregorianEraYearDay($/;"	f	typeref:typename:void	file:
GetGregorianEraYearDay	generic/tclClockClassic.c	/^GetGregorianEraYearDay($/;"	f	typeref:typename:void	file:
GetGroupAttribute	unix/tclUnixFCmd.c	/^GetGroupAttribute($/;"	f	typeref:typename:int	file:
GetIdx	win/tclWinReg.c	/^	BroadcastIdx, DeleteIdx, GetIdx, KeysIdx, SetIdx, TypeIdx, ValuesIdx$/;"	e	enum:RegistryObjCmd::SubCmdIdx	file:
GetIndexFromObjList	generic/tclIndexObj.c	/^GetIndexFromObjList($/;"	f	typeref:typename:int
GetInput	generic/tclIO.c	/^GetInput($/;"	f	typeref:typename:int	file:
GetInt	generic/tclLink.c	/^GetInt($/;"	f	typeref:typename:int	file:
GetIntegerOperand	generic/tclAssembly.c	/^GetIntegerOperand($/;"	f	typeref:typename:int	file:
GetInterp	generic/tclInterp.c	/^GetInterp($/;"	f	typeref:typename:Tcl_Interp *	file:
GetInterp2	generic/tclInterp.c	/^GetInterp2($/;"	f	typeref:typename:Tcl_Interp *	file:
GetInvalidDoubleFromObj	generic/tclLink.c	/^GetInvalidDoubleFromObj($/;"	f	typeref:typename:int	file:
GetInvalidIntFromObj	generic/tclLink.c	/^GetInvalidIntFromObj($/;"	f	typeref:typename:int	file:
GetJulianDayFromEraYearDay	generic/tclClock.c	/^GetJulianDayFromEraYearDay($/;"	f	typeref:typename:void
GetJulianDayFromEraYearDay	library/clock.tcl	/^proc ::tcl::clock::GetJulianDayFromEraYearDay {date changeover} {$/;"	p	namespace:::tcl::clock
GetJulianDayFromEraYearDay	library/clockclassic.tcl	/^proc GetJulianDayFromEraYearDay {date changeover} {$/;"	p
GetJulianDayFromEraYearMonthDay	generic/tclClock.c	/^GetJulianDayFromEraYearMonthDay($/;"	f	typeref:typename:void
GetJulianDayFromEraYearMonthDay	generic/tclClockClassic.c	/^GetJulianDayFromEraYearMonthDay($/;"	f	typeref:typename:void	file:
GetJulianDayFromEraYearMonthWeekDay	library/clock.tcl	/^proc ::tcl::clock::GetJulianDayFromEraYearMonthWeekDay {date changeover} {$/;"	p	namespace:::tcl::clock
GetJulianDayFromEraYearMonthWeekDay	library/clockclassic.tcl	/^proc GetJulianDayFromEraYearMonthWeekDay {date changeover} {$/;"	p
GetJulianDayFromEraYearWeekDay	generic/tclClock.c	/^GetJulianDayFromEraYearWeekDay($/;"	f	typeref:typename:void
GetJulianDayFromEraYearWeekDay	generic/tclClockClassic.c	/^GetJulianDayFromEraYearWeekDay($/;"	f	typeref:typename:void	file:
GetKeyNames	win/tclWinReg.c	/^GetKeyNames($/;"	f	typeref:typename:int	file:
GetKeys	generic/tclResult.c	/^GetKeys(void)$/;"	f	typeref:typename:Tcl_Obj **	file:
GetListIndexOperand	generic/tclAssembly.c	/^GetListIndexOperand($/;"	f	typeref:typename:int	file:
GetLocaleEra	library/clockclassic.tcl	/^proc GetLocaleEra { date etable } {$/;"	p
GetLocationInformation	generic/tclDisassemble.c	/^GetLocationInformation($/;"	f	typeref:typename:void	file:
GetModeFromPermString	unix/tclUnixFCmd.c	/^GetModeFromPermString($/;"	f	typeref:typename:int	file:
GetMonthDay	generic/tclClock.c	/^GetMonthDay($/;"	f	typeref:typename:void	file:
GetMonthDay	generic/tclClockClassic.c	/^GetMonthDay($/;"	f	typeref:typename:void	file:
GetMsecSincePerfCounter	compat/zlib/contrib/testzlib/testzlib.c	/^DWORD GetMsecSincePerfCounter(LARGE_INTEGER beginTime64,BOOL fComputeTimeQueryPerf)$/;"	f	typeref:typename:DWORD
GetNamespaceFromObj	generic/tclNamesp.c	/^GetNamespaceFromObj($/;"	f	typeref:typename:int	file:
GetNamespaceInOuterContext	generic/tclOODefineCmds.c	/^GetNamespaceInOuterContext($/;"	f	typeref:typename:Tcl_Namespace *	file:
GetNextOperand	generic/tclAssembly.c	/^GetNextOperand($/;"	f	typeref:typename:int	file:
GetNumberFromObj	generic/tclExecute.c	/^#define GetNumberFromObj(/;"	d	file:
GetOSTypeFromObj	macosx/tclMacOSXFCmd.c	/^GetOSTypeFromObj($/;"	f	typeref:typename:int	file:
GetOpcodeName	generic/tclExecute.c	/^GetOpcodeName($/;"	f	typeref:typename:const char *	file:
GetOwnerAttribute	unix/tclUnixFCmd.c	/^GetOwnerAttribute($/;"	f	typeref:typename:int	file:
GetPermissionsAttribute	unix/tclUnixFCmd.c	/^GetPermissionsAttribute($/;"	f	typeref:typename:int	file:
GetPropertyName	generic/tclOOProp.c	/^GetPropertyName($/;"	f	typeref:typename:Tcl_Obj *	file:
GetRange	generic/tclStringObj.c	/^GetRange(tclObjTypeInterfaceArgsStringRange) {$/;"	f	typeref:typename:int
GetReflectedChannelMap	generic/tclIORChan.c	/^GetReflectedChannelMap($/;"	f	typeref:typename:ReflectedChannelMap *	file:
GetReflectedTransformMap	generic/tclIORTrans.c	/^GetReflectedTransformMap($/;"	f	typeref:typename:ReflectedTransformMap *	file:
GetResRdtsc	compat/zlib/contrib/testzlib/testzlib.c	/^LARGE_INTEGER GetResRdtsc(LARGE_INTEGER beginTime64,BOOL fComputeTimeQueryPerf)$/;"	f	typeref:typename:LARGE_INTEGER
GetSrcInfoForPc	generic/tclExecute.c	/^GetSrcInfoForPc($/;"	f	typeref:typename:const char *	file:
GetStatBuf	generic/tclCmdAH.c	/^GetStatBuf($/;"	f	typeref:typename:int	file:
GetSystemLocale	library/clock.tcl	/^proc ::tcl::clock::GetSystemLocale {} {$/;"	p	namespace:::tcl::clock
GetSystemTimeZone	library/clock.tcl	/^proc ::tcl::clock::GetSystemTimeZone {} {$/;"	p	namespace:::tcl::clock
GetSystemTimeZone	library/clockclassic.tcl	/^proc GetSystemTimeZone {} {$/;"	p
GetTableEncoding	generic/tclEncoding.c	/^GetTableEncoding($/;"	f	typeref:typename:Encoding *	file:
GetThreadHash	generic/tclUtil.c	/^GetThreadHash($/;"	f	typeref:typename:Tcl_HashTable *	file:
GetThreadReflectedChannelMap	generic/tclIORChan.c	/^GetThreadReflectedChannelMap(void)$/;"	f	typeref:typename:ReflectedChannelMap *	file:
GetThreadReflectedTransformMap	generic/tclIORTrans.c	/^GetThreadReflectedTransformMap(void)$/;"	f	typeref:typename:ReflectedTransformMap *	file:
GetTime	unix/tclUnixTime.c	/^GetTime($/;"	f	typeref:typename:void	file:
GetTime	win/tclWinTime.c	/^GetTime($/;"	f	typeref:typename:void	file:
GetTimesObjCmd	generic/tclTest.c	/^GetTimesObjCmd($/;"	f	typeref:typename:int	file:
GetTimesObjCmd	generic/tclTest.c	/^static Tcl_ObjCmdProc	GetTimesObjCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
GetType	win/tclWinReg.c	/^GetType($/;"	f	typeref:typename:int	file:
GetTypeFromMode	generic/tclCmdAH.c	/^GetTypeFromMode($/;"	f	typeref:typename:const char *	file:
GetTypeFromMode	unix/tclUnixChan.c	/^GetTypeFromMode($/;"	f	typeref:typename:const char *	file:
GetUWide	generic/tclLink.c	/^GetUWide($/;"	f	typeref:typename:int	file:
GetUniCharInfo	generic/tclUniData.c	/^# define GetUniCharInfo(/;"	d	file:
GetUnixFileAttributes	unix/tclUnixFCmd.c	/^GetUnixFileAttributes($/;"	f	typeref:typename:int	file:
GetValue	win/tclWinReg.c	/^GetValue($/;"	f	typeref:typename:int	file:
GetValueNames	win/tclWinReg.c	/^GetValueNames($/;"	f	typeref:typename:int	file:
GetVarPtr	generic/tclTestObj.c	/^GetVarPtr($/;"	f	typeref:typename:Tcl_Obj **	file:
GetVariableIndex	generic/tclTestObj.c	/^GetVariableIndex($/;"	f	typeref:typename:int	file:
GetVersionFromFile	win/nmakehlp.c	/^GetVersionFromFile($/;"	f	typeref:typename:const char *	file:
GetWide	generic/tclLink.c	/^GetWide($/;"	f	typeref:typename:int	file:
GetWideForIndex	generic/tclUtil.c	/^GetWideForIndex($/;"	f	typeref:typename:int	file:
GetWinFileAttributes	win/tclWinFCmd.c	/^GetWinFileAttributes($/;"	f	typeref:typename:int	file:
GetWinFileLongName	win/tclWinFCmd.c	/^GetWinFileLongName($/;"	f	typeref:typename:int	file:
GetWinFileShortName	win/tclWinFCmd.c	/^GetWinFileShortName($/;"	f	typeref:typename:int	file:
GetYearWeekDay	generic/tclClock.c	/^GetYearWeekDay($/;"	f	typeref:typename:void	file:
GetYearWeekDay	generic/tclClockClassic.c	/^GetYearWeekDay($/;"	f	typeref:typename:void	file:
GetsState	generic/tclIO.c	/^typedef struct GetsState {$/;"	s	file:
GetsState	generic/tclIO.c	/^} GetsState;$/;"	t	typeref:struct:GetsState	file:
GetterType	generic/tclOOProp.c	/^static const Tcl_MethodType GetterType = {$/;"	v	typeref:typename:const Tcl_MethodType	file:
GotFlag	generic/tclIO.c	/^#define GotFlag(/;"	d	file:
GotLiteral	generic/tclCompCmdsSZ.c	/^#define GotLiteral(/;"	d	file:
Group	unix/tcl.spec	/^Group:         Development\/Languages$/;"	t
GrowEvaluationStack	generic/tclExecute.c	/^GrowEvaluationStack($/;"	f	typeref:typename:Tcl_Obj **	file:
GrowStringBuffer	generic/tclStringObj.c	/^GrowStringBuffer($/;"	f	typeref:typename:void	file:
GrowUnicodeBuffer	generic/tclStringObj.c	/^GrowUnicodeBuffer($/;"	f	typeref:typename:void	file:
GuessWindowsTimeZone	library/clock.tcl	/^proc ::tcl::clock::GuessWindowsTimeZone {} {$/;"	p	namespace:::tcl::clock
GuessWindowsTimeZone	library/clockclassic.tcl	/^proc GuessWindowsTimeZone {} {$/;"	p
GzipHeader	generic/tclZlib.c	/^} GzipHeader;$/;"	t	typeref:struct:__anon1d0b6d960108	file:
HANDLERPROC	doc/CrtChannel.3	/^.SS HANDLERPROC$/;"	S	section:Tcl_CreateChannel""TCL_CHANNELTYPE
HAS	generic/tclIORChan.c	/^#define HAS(/;"	d	file:
HAS	generic/tclIORTrans.c	/^#define HAS(/;"	d	file:
HASH	generic/regexec.c	/^#define	HASH(/;"	d	file:
HASLACONS	generic/regguts.h	/^#define	HASLACONS	/;"	d
HAS_PRIVATE_METHODS	generic/tclOOInt.h	/^    HAS_PRIVATE_METHODS = 0x40000$/;"	e	enum:ObjectFlags
HAVE	generic/regc_lex.c	/^#define	HAVE(/;"	d	file:
HAVE_CAST_TO_UNION	unix/tcl.m4	/^	AC_DEFINE(HAVE_CAST_TO_UNION, 1,$/;"	d
HAVE_CAST_TO_UNION	win/tcl.m4	/^	    AC_DEFINE(HAVE_CAST_TO_UNION, 1,$/;"	d
HAVE_COREFOUNDATION	unix/tcl.m4	/^		    AC_DEFINE(HAVE_COREFOUNDATION, 1,$/;"	d
HAVE_CPUID	unix/configure.ac	/^    AC_DEFINE(HAVE_CPUID, 1, [Is the cpuid instruction usable?])$/;"	d
HAVE_DECL_PTHREAD_MUTEX_RECURSIVE	unix/tclUnixThrd.c	/^#define HAVE_DECL_PTHREAD_MUTEX_RECURSIVE /;"	d	file:
HAVE_DIR64	unix/tcl.m4	/^	    AC_DEFINE(HAVE_DIR64, 1, [Is 'DIR64' in <sys\/types.h>?])$/;"	d
HAVE_EVENTFD	unix/configure.ac	/^	    [AC_DEFINE(HAVE_EVENTFD, [1], [Is eventfd(2) supported?])]);;$/;"	d
HAVE_FTS	unix/configure.ac	/^    AC_DEFINE(HAVE_FTS, 1, [Do we have fts functions?])$/;"	d
HAVE_GETGRGID_R	unix/tcl.m4	/^	AC_DEFINE(HAVE_GETGRGID_R, 1,$/;"	d
HAVE_GETGRGID_R_4	unix/tcl.m4	/^	    AC_DEFINE(HAVE_GETGRGID_R_4, 1,$/;"	d
HAVE_GETGRGID_R_5	unix/tcl.m4	/^	AC_DEFINE(HAVE_GETGRGID_R_5, 1,$/;"	d
HAVE_GETGRNAM_R	unix/tcl.m4	/^	AC_DEFINE(HAVE_GETGRNAM_R, 1,$/;"	d
HAVE_GETGRNAM_R_4	unix/tcl.m4	/^	    AC_DEFINE(HAVE_GETGRNAM_R_4, 1,$/;"	d
HAVE_GETGRNAM_R_5	unix/tcl.m4	/^	AC_DEFINE(HAVE_GETGRNAM_R_5, 1,$/;"	d
HAVE_GETHOSTBYADDR_R	unix/tcl.m4	/^	AC_DEFINE(HAVE_GETHOSTBYADDR_R, 1,$/;"	d
HAVE_GETHOSTBYADDR_R_7	unix/tcl.m4	/^	AC_DEFINE(HAVE_GETHOSTBYADDR_R_7, 1,$/;"	d
HAVE_GETHOSTBYADDR_R_8	unix/tcl.m4	/^	    AC_DEFINE(HAVE_GETHOSTBYADDR_R_8, 1,$/;"	d
HAVE_GETHOSTBYNAME_R	unix/tcl.m4	/^	AC_DEFINE(HAVE_GETHOSTBYNAME_R, 1,$/;"	d
HAVE_GETHOSTBYNAME_R_3	unix/tcl.m4	/^		AC_DEFINE(HAVE_GETHOSTBYNAME_R_3, 1,$/;"	d
HAVE_GETHOSTBYNAME_R_5	unix/tcl.m4	/^	    AC_DEFINE(HAVE_GETHOSTBYNAME_R_5, 1,$/;"	d
HAVE_GETHOSTBYNAME_R_6	unix/tcl.m4	/^	AC_DEFINE(HAVE_GETHOSTBYNAME_R_6, 1,$/;"	d
HAVE_GETPWNAM_R	unix/tcl.m4	/^	AC_DEFINE(HAVE_GETPWNAM_R, 1,$/;"	d
HAVE_GETPWNAM_R_4	unix/tcl.m4	/^	    AC_DEFINE(HAVE_GETPWNAM_R_4, 1,$/;"	d
HAVE_GETPWNAM_R_5	unix/tcl.m4	/^	AC_DEFINE(HAVE_GETPWNAM_R_5, 1,$/;"	d
HAVE_GETPWUID_R	unix/tcl.m4	/^	AC_DEFINE(HAVE_GETPWUID_R, 1,$/;"	d
HAVE_GETPWUID_R_4	unix/tcl.m4	/^	    AC_DEFINE(HAVE_GETPWUID_R_4, 1,$/;"	d
HAVE_GETPWUID_R_5	unix/tcl.m4	/^	AC_DEFINE(HAVE_GETPWUID_R_5, 1,$/;"	d
HAVE_HIDDEN	unix/tcl.m4	/^	AC_DEFINE(HAVE_HIDDEN, [1], [Compiler support for module scope symbols])$/;"	d
HAVE_INTRIN_H	win/configure.ac	/^    AC_DEFINE(HAVE_INTRIN_H, 1,$/;"	d
HAVE_LANGINFO	unix/tcl.m4	/^	    AC_DEFINE(HAVE_LANGINFO, 1, [Do we have nl_langinfo()?])$/;"	d
HAVE_MEMCPY	compat/zlib/zutil.h	/^#  define HAVE_MEMCPY$/;"	d
HAVE_MKTIME	generic/tclClock.c	/^#define HAVE_MKTIME /;"	d	file:
HAVE_MKTIME	generic/tclClockClassic.c	/^#define HAVE_MKTIME /;"	d	file:
HAVE_MTSAFE_GETHOSTBYADDR	unix/configure.ac	/^    AC_DEFINE(HAVE_MTSAFE_GETHOSTBYADDR, 1,$/;"	d
HAVE_MTSAFE_GETHOSTBYNAME	unix/configure.ac	/^    AC_DEFINE(HAVE_MTSAFE_GETHOSTBYNAME, 1,$/;"	d
HAVE_NET_ERRNO_H	unix/tcl.m4	/^	AC_DEFINE(HAVE_NET_ERRNO_H, 1, [Do we have <net\/errno.h>?])])$/;"	d
HAVE_NO_FINDEX_ENUMS	win/configure.ac	/^    AC_DEFINE(HAVE_NO_FINDEX_ENUMS, 1,$/;"	d
HAVE_NO_SEH	win/tcl.m4	/^	    AC_DEFINE(HAVE_NO_SEH, 1,$/;"	d
HAVE_OPTION	win/tclWinSock.c	/^#define HAVE_OPTION(/;"	d	file:
HAVE_PSELECT	unix/configure.ac	/^    AC_DEFINE(HAVE_PSELECT, 1, [Should we use pselect()?])$/;"	d
HAVE_PUTENV_THAT_COPIES	unix/configure.ac	/^    AC_DEFINE(HAVE_PUTENV_THAT_COPIES, 1,$/;"	d
HAVE_PUTENV_THAT_COPIES	unix/tclUnixPort.h	/^#	    define HAVE_PUTENV_THAT_COPIES	/;"	d
HAVE_PUTENV_THAT_COPIES	win/tclWinPort.h	/^#   define HAVE_PUTENV_THAT_COPIES /;"	d
HAVE_SIGNED_CHAR	unix/configure.ac	/^    AC_DEFINE(HAVE_SIGNED_CHAR, 1, [Are characters signed?])$/;"	d
HAVE_STDBOOL_H	unix/tcl.m4	/^    AC_CHECK_HEADER(stdbool.h, [AC_DEFINE(HAVE_STDBOOL_H, 1, [Do we have <stdbool.h>?])],)$/;"	d
HAVE_STDBOOL_H	win/tcl.m4	/^	AC_CHECK_HEADER(stdbool.h, [AC_DEFINE(HAVE_STDBOOL_H, 1, [Do we have <stdbool.h>?])],)$/;"	d
HAVE_STRUCT_DIRENT64	unix/tcl.m4	/^	    AC_DEFINE(HAVE_STRUCT_DIRENT64, 1, [Is 'struct dirent64' in <sys\/types.h>?])$/;"	d
HAVE_SYS_SELECT_H	unix/configure.ac	/^	AC_DEFINE(HAVE_SYS_SELECT_H, 1, [Should we include <sys\/select.h>?])$/;"	d
HAVE_TIMEZONE_VAR	unix/tcl.m4	/^	    AC_DEFINE(HAVE_TIMEZONE_VAR, 1, [Should we use the global timezone variable?])$/;"	d
HAVE_TIMEZONE_VAR	unix/tcl.m4	/^	AC_DEFINE(HAVE_TIMEZONE_VAR, 1, [Should we use the global timezone variable?])$/;"	d
HAVE_TM_GMTOFF	unix/tcl.m4	/^	AC_DEFINE(HAVE_TM_GMTOFF, 1, [Should we use the tm_gmtoff field of struct tm?])$/;"	d
HAVE_TM_TZADJ	unix/tcl.m4	/^	AC_DEFINE(HAVE_TM_TZADJ, 1, [Should we use the tm_tzadj field of struct tm?])$/;"	d
HAVE_TYPE_OFF64_T	unix/tcl.m4	/^	    AC_DEFINE(HAVE_TYPE_OFF64_T, 1, [Is off64_t in <sys\/types.h>?])$/;"	d
HAVE_UNISTD_H	compat/zlib/contrib/minizip/configure.ac	/^AC_SUBST([HAVE_UNISTD_H], [0])$/;"	s
HAVE_VSNPRINTF	compat/zlib/gzguts.h	/^#    define HAVE_VSNPRINTF$/;"	d
HAVE_WEAK_IMPORT	unix/configure.ac	/^	    AC_DEFINE(HAVE_WEAK_IMPORT, 1, [Is weak import available?])$/;"	d
HAVE_WSPIAPI_H	win/configure.ac	/^    AC_DEFINE(HAVE_WSPIAPI_H, 1,$/;"	d
HAVE_ZLIB	unix/configure.ac	/^AC_DEFINE(HAVE_ZLIB, 1, [Is there an installed zlib?])$/;"	d
HAVE_ZLIB	win/configure.ac	/^AC_DEFINE(HAVE_ZLIB, 1, [Is there an installed zlib?])$/;"	d
HCRC	compat/zlib/inflate.h	/^    HCRC,       \/* i: waiting for header crc (gzip) *\/$/;"	e	enum:__anon6bf0a2910103
HCRC_STATE	compat/zlib/deflate.h	/^#define HCRC_STATE /;"	d
HCRC_UPDATE	compat/zlib/deflate.c	/^#define HCRC_UPDATE(/;"	d	file:
HEAD	compat/zlib/examples/gzlog.c	/^#define HEAD /;"	d	file:
HEAD	compat/zlib/examples/gznorm.c	/^        HEAD,           \/\/ reading a gzip header$/;"	e	enum:gzip_normalize::__anon5bfe4c340103	file:
HEAD	compat/zlib/inflate.h	/^    HEAD = 16180,   \/* i: waiting for magic header *\/$/;"	e	enum:__anon6bf0a2910103
HEAD	tests/httpTestScript.tcl	/^proc httpTestScript::HEAD {uriCode args} {$/;"	p	namespace:httpTestScript
HEADERS	libtommath/sources.cmake	/^set(HEADERS$/;"	v
HEAP_SIZE	compat/zlib/deflate.h	/^#define HEAP_SIZE /;"	d
HEXADECIMAL	generic/tclStrToD.c	/^	HEXADECIMAL, OCTAL, DECIMAL,$/;"	e	enum:TclParseNumber::State	file:
HIDDEN_BIT	generic/tclStrToD.c	/^#define HIDDEN_BIT	/;"	d	file:
HIGH_GUARD_SIZE	generic/tclCkalloc.c	/^#define HIGH_GUARD_SIZE /;"	d	file:
HIGH_SURROGATE	generic/tclEncoding.c	/^#define HIGH_SURROGATE(/;"	d	file:
HISTORY_OBJS_KEY	generic/tclHistory.c	/^#define HISTORY_OBJS_KEY	/;"	d	file:
HIT	generic/regexec.c	/^#define	HIT(/;"	d	file:
HI_ORDER_SIG_MASK	generic/tclStrToD.c	/^#define HI_ORDER_SIG_MASK /;"	d	file:
HMODULE	unix/tclUnixPort.h	/^#   define HMODULE /;"	d
HOST_CC	unix/Makefile.in	/^HOST_CC			= @CC_FOR_BUILD@$/;"	m
HOST_CC	win/Makefile.in	/^HOST_CC		        = @CC_FOR_BUILD@$/;"	m
HOST_EXEEXT	unix/Makefile.in	/^HOST_EXEEXT		= @EXEEXT_FOR_BUILD@$/;"	m
HOST_EXEEXT	win/Makefile.in	/^HOST_EXEEXT             = @EXEEXT_FOR_BUILD@$/;"	m
HOST_OBJEXT	unix/Makefile.in	/^HOST_OBJEXT		= @OBJEXT_FOR_BUILD@$/;"	m
HOST_OBJEXT	win/Makefile.in	/^HOST_OBJEXT             = @OBJEXT_FOR_BUILD@$/;"	m
HOUR	generic/tclDate.c	/^#define HOUR(/;"	d	file:
HOUR	generic/tclDateClassic.c	/^#define HOUR(/;"	d	file:
HTML_DIR	unix/Makefile.in	/^HTML_DIR		= @HTML_DIR@$/;"	m
HTML_DIR	unix/configure.ac	/^AC_SUBST(HTML_DIR)$/;"	s
HTML_INSTALL_DIR	unix/Makefile.in	/^HTML_INSTALL_DIR	= $(INSTALL_ROOT)$(HTML_DIR)$/;"	m
HTML_INSTALL_DIR	win/Makefile.in	/^HTML_INSTALL_DIR=$(ROOT_DIR)\/html$/;"	m
HandleBgErrors	generic/tclEvent.c	/^HandleBgErrors($/;"	f	typeref:typename:void	file:
HandleStruct	generic/tclPreserve.c	/^} HandleStruct;$/;"	t	typeref:struct:__anone9498b710208	file:
Handlers	generic/tclCmdMZ.c	/^    enum Handlers {$/;"	g	function:TclNRTryObjCmd	file:
HasConsole	win/tclWinPipe.c	/^HasConsole(void)$/;"	f	typeref:typename:BOOL	file:
HasDebugInfo	compat/zlib/contrib/dotzlib/DotZLib/DotZLib.cs	/^        public bool HasDebugInfo { get { return 0 != (_flags & 0x100); } }$/;"	p	class:DotZLib.Info
HasLocalVars	generic/tclVar.c	/^#define HasLocalVars(/;"	d	file:
HasVolumePrefix	generic/tclZipfs.c	/^HasVolumePrefix($/;"	f	typeref:typename:int	file:
HashArrayKey	generic/tclHash.c	/^HashArrayKey($/;"	f	typeref:typename:size_t	file:
HashEntry4FmtScn	generic/tclClockFmt.c	/^HashEntry4FmtScn($/;"	f	typeref:typename:Tcl_HashEntry *	file:
HashString	generic/tclLiteral.c	/^HashString($/;"	f	typeref:typename:size_t	file:
HashVarFree	generic/tclTest.c	/^HashVarFree($/;"	f	typeref:typename:void	file:
HaveDictToSet	generic/tclZlib.c	/^#define HaveDictToSet(/;"	d	file:
HaveFlag	generic/tclZlib.c	/^HaveFlag($/;"	f	typeref:typename:int	file:
HaveOpt	generic/tclIO.c	/^#define HaveOpt(/;"	d	file:
Header	compat/zlib/contrib/ada/read.adb	/^   Header      : constant ZLib.Header_Type := ZLib.Default;$/;"	n	subprogram:Read	file:
Header	compat/zlib/contrib/ada/test.adb	/^   Header      : constant ZLib.Header_Type := ZLib.Default;$/;"	n	subprogram:Test	file:
Header	compat/zlib/contrib/ada/zlib.ads	/^      Header      : Header_Type;$/;"	v	packspec:ZLib	file:
Header_Type	compat/zlib/contrib/ada/zlib.ads	/^   type Header_Type is (None, Auto, Default, GZip);$/;"	t	packspec:ZLib
HeresPackage1	tests/auto0/auto1/package1.tcl	/^proc HeresPackage1 {args} {$/;"	p
HeresPackage2	tests/auto0/auto2/package2.tcl	/^proc HeresPackage2 {args} {$/;"	p
HexDigits	generic/tclBinary.c	/^static const char HexDigits[16] = {$/;"	v	typeref:typename:const char[16]	file:
HistAdd	library/history.tcl	/^proc ::tcl::HistAdd {event {exec {}}} {$/;"	p	namespace:::tcl
HistChange	library/history.tcl	/^proc ::tcl::HistChange {newValue {event 0}} {$/;"	p	namespace:::tcl
HistClear	library/history.tcl	/^proc ::tcl::HistClear {} {$/;"	p	namespace:::tcl
HistEvent	library/history.tcl	/^proc ::tcl::HistEvent {{event -1}} {$/;"	p	namespace:::tcl
HistIndex	library/history.tcl	/^proc ::tcl::HistIndex {event} {$/;"	p	namespace:::tcl
HistInfo	library/history.tcl	/^proc ::tcl::HistInfo {{count {}}} {$/;"	p	namespace:::tcl
HistKeep	library/history.tcl	/^proc ::tcl::HistKeep {{count {}}} {$/;"	p	namespace:::tcl
HistNextID	library/history.tcl	/^proc ::tcl::HistNextID {} {$/;"	p	namespace:::tcl
HistRedo	library/history.tcl	/^proc ::tcl::HistRedo {{event -1}} {$/;"	p	namespace:::tcl
HistoryObjs	generic/tclHistory.c	/^} HistoryObjs;$/;"	t	typeref:struct:__anon7c22d3770108	file:
Huffman_Only	compat/zlib/contrib/ada/zlib.ads	/^   Huffman_Only     : constant Strategy_Type := 2;$/;"	n	packspec:ZLib	file:
Huffman_Only	compat/zlib/contrib/ada/zlib.ads	/^   Huffman_Only     : constant Strategy_Type;$/;"	n	packspec:ZLib
I	compat/zlib/contrib/ada/buffer_demo.adb	/^         I : Stream_Element_Offset;$/;"	v	identifier:Compress	file:
ICUIN_SYM	generic/tclIcu.c	/^#define ICUIN_SYM(/;"	d	file:
ICUUC_SYM	generic/tclIcu.c	/^#define ICUUC_SYM(/;"	d	file:
IDNAdecode	library/cookiejar/idna.tcl	/^    proc IDNAdecode hostname {$/;"	p	namespace:::::tcl::idna
IDNAencode	library/cookiejar/idna.tcl	/^    proc IDNAencode hostname {$/;"	p	namespace:::::tcl::idna
IDR_VERSION1	compat/zlib/contrib/vstudio/vc10/zlib.rc	/^IDR_VERSION1	VERSIONINFO	MOVEABLE IMPURE LOADONCALL DISCARDABLE$/;"	v
IDR_VERSION1	compat/zlib/contrib/vstudio/vc11/zlib.rc	/^IDR_VERSION1	VERSIONINFO	MOVEABLE IMPURE LOADONCALL DISCARDABLE$/;"	v
IDR_VERSION1	compat/zlib/contrib/vstudio/vc12/zlib.rc	/^IDR_VERSION1	VERSIONINFO	MOVEABLE IMPURE LOADONCALL DISCARDABLE$/;"	v
IDR_VERSION1	compat/zlib/contrib/vstudio/vc14/zlib.rc	/^IDR_VERSION1	VERSIONINFO	MOVEABLE IMPURE LOADONCALL DISCARDABLE$/;"	v
IDR_VERSION1	compat/zlib/contrib/vstudio/vc17/zlib.rc	/^IDR_VERSION1	VERSIONINFO	MOVEABLE IMPURE LOADONCALL DISCARDABLE$/;"	v
IDR_VERSION1	compat/zlib/contrib/vstudio/vc9/zlib.rc	/^IDR_VERSION1	VERSIONINFO	MOVEABLE IMPURE LOADONCALL DISCARDABLE$/;"	v
ID_COMMIT	generic/tclBasic.c	/^	ID_COMMIT, ID_COMPILER, ID_PATCHLEVEL, ID_VERSION, ID_OTHER$/;"	e	enum:buildInfoObjCmd2::Identifiers	file:
ID_COMPILER	generic/tclBasic.c	/^	ID_COMMIT, ID_COMPILER, ID_PATCHLEVEL, ID_VERSION, ID_OTHER$/;"	e	enum:buildInfoObjCmd2::Identifiers	file:
ID_OTHER	generic/tclBasic.c	/^	ID_COMMIT, ID_COMPILER, ID_PATCHLEVEL, ID_VERSION, ID_OTHER$/;"	e	enum:buildInfoObjCmd2::Identifiers	file:
ID_PATCHLEVEL	generic/tclBasic.c	/^	ID_COMMIT, ID_COMPILER, ID_PATCHLEVEL, ID_VERSION, ID_OTHER$/;"	e	enum:buildInfoObjCmd2::Identifiers	file:
ID_VERSION	generic/tclBasic.c	/^	ID_COMMIT, ID_COMPILER, ID_PATCHLEVEL, ID_VERSION, ID_OTHER$/;"	e	enum:buildInfoObjCmd2::Identifiers	file:
IEEE_FLOATING_POINT	generic/tclBasic.c	/^#   define IEEE_FLOATING_POINT$/;"	d	file:
IEEE_FLOATING_POINT	generic/tclExecute.c	/^#define IEEE_FLOATING_POINT$/;"	d	file:
IEEE_FLOATING_POINT	generic/tclStrToD.c	/^#   define IEEE_FLOATING_POINT$/;"	d	file:
IMPLIES	generic/tclIORChan.c	/^#define IMPLIES(/;"	d	file:
IMPLIES	generic/tclIORTrans.c	/^#define IMPLIES(/;"	d	file:
IN6_ARE_ADDR_EQUAL	win/tclWinSock.c	/^#define IN6_ARE_ADDR_EQUAL /;"	d	file:
IN6_IS_ADDR_LOOPBACK	compat/fake-rfc2553.h	/^# define IN6_IS_ADDR_LOOPBACK(/;"	d
INCLUDE	compat/zlib/nintendods/Makefile	/^export INCLUDE	:=	$(foreach dir,$(INCLUDES),-I$(CURDIR)\/$(dir)) \\$/;"	m
INCLUDECRYPTINGCODE_IFCRYPTALLOWED	compat/zlib/contrib/minizip/zip.c	/^#define INCLUDECRYPTINGCODE_IFCRYPTALLOWED$/;"	d	file:
INCLUDES	compat/zlib/nintendods/Makefile	/^INCLUDES	:=	include$/;"	m
INCLUDE_INSTALL_DIR	unix/Makefile.in	/^INCLUDE_INSTALL_DIR	= $(INSTALL_ROOT)$(includedir)$/;"	m
INCLUDE_INSTALL_DIR	win/Makefile.in	/^INCLUDE_INSTALL_DIR	= $(INSTALL_ROOT)$(includedir)$/;"	m
INCLUDE_INSTALL_DIR_NATIVE	win/Makefile.in	/^INCLUDE_INSTALL_DIR_NATIVE	= $(shell $(CYGPATH) '$(INCLUDE_INSTALL_DIR)')$/;"	m
INCL_WINSOCK_API_TYPEDEFS	win/tclWinPort.h	/^#   define INCL_WINSOCK_API_TYPEDEFS /;"	d
INCOMPATIBLE	generic/regcomp.c	/^#define	INCOMPATIBLE	/;"	d	file:
INCOMPLETE	generic/tclCompExpr.c	/^#define INCOMPLETE	/;"	d	file:
INCON	generic/regc_lex.c	/^#define	INCON(/;"	d	file:
INCREMENT	generic/tclIOGT.c	/^#define INCREMENT	/;"	d	file:
INF	generic/regcomp.c	/^#define	INF	/;"	d	file:
INFLATEPRIME	compat/zlib/examples/zran.c	/^#  define INFLATEPRIME /;"	d	file:
INHERITED_ACE	win/tclWinTest.c	/^#define INHERITED_ACE /;"	d	file:
INITBITS	compat/zlib/contrib/infback9/infback9.c	/^#define INITBITS(/;"	d	file:
INITBITS	compat/zlib/infback.c	/^#define INITBITS(/;"	d	file:
INITBITS	compat/zlib/inflate.c	/^#define INITBITS(/;"	d	file:
INITFILENAME	unix/tclAppInit.c	/^#define INITFILENAME /;"	d	file:
INITIAL	generic/tclStrToD.c	/^	INITIAL, SIGNUM, ZERO, ZERO_X,$/;"	e	enum:TclParseNumber::State	file:
INITIALIZATION	doc/Thread.3	/^.SS INITIALIZATION$/;"	S	section:Threads""DESCRIPTION
INITIALIZATION OF TCL STANDARD CHANNELS	doc/StdChannels.3	/^.SH "INITIALIZATION OF TCL STANDARD CHANNELS"$/;"	s	title:Standard Channels
INITIAL_QUOTE_PUNCTUATION	generic/tclUniData.c	/^    INITIAL_QUOTE_PUNCTUATION,$/;"	e	enum:__anon910316cb0103	file:
INITIAL_SIZE	generic/tclPreserve.c	/^#define INITIAL_SIZE	/;"	d	file:
INIT_EXPORT_PATTERNS	generic/tclNamesp.c	/^#define INIT_EXPORT_PATTERNS /;"	d	file:
INIT_STATE	compat/zlib/deflate.h	/^#define INIT_STATE /;"	d
INPUTPROC	doc/CrtChannel.3	/^.SS INPUTPROC$/;"	S	section:Tcl_CreateChannel""TCL_CHANNELTYPE
INPUT_BUFFER_SIZE	win/tclWinConsole.c	/^#define INPUT_BUFFER_SIZE /;"	d	file:
INPUT_SAW_CR	generic/tclIO.h	/^#define INPUT_SAW_CR	/;"	d
INSERT_STRING	compat/zlib/deflate.c	/^#define INSERT_STRING(/;"	d	file:
INSIST	generic/regcomp.c	/^#define INSIST(/;"	d	file:
INSTALL	unix/Makefile.in	/^INSTALL			= $(SHELL) $(SHQ_UNIX_DIR)\/install-sh -c$/;"	m
INSTALLDIR	win/buildall.vc.bat	/^if "%INSTALLDIR%" == "" set INSTALLDIR=C:\\Program Files\\Tcl$/;"	v
INSTALL_BASE_TARGETS	unix/Makefile.in	/^INSTALL_BASE_TARGETS = install-binaries $(INSTALL_LIBRARIES) $(INSTALL_MSGS) $(INSTALL_TZDATA)$/;"	m
INSTALL_BASE_TARGETS	win/Makefile.in	/^INSTALL_BASE_TARGETS = install-binaries $(INSTALL_LIBRARIES) $(INSTALL_MSGS) $(INSTALL_TZDATA)$/;"	m
INSTALL_BIN_DIR	compat/zlib/CMakeLists.txt	/^set(INSTALL_BIN_DIR "${CMAKE_INSTALL_PREFIX}\/bin" CACHE PATH "Installation directory for execut/;"	v
INSTALL_DATA	unix/Makefile.in	/^INSTALL_DATA		= ${INSTALL} -m 644$/;"	m
INSTALL_DATA_DIR	unix/Makefile.in	/^INSTALL_DATA_DIR	= ${INSTALL} -d -m 755$/;"	m
INSTALL_DEV_TARGETS	unix/Makefile.in	/^INSTALL_DEV_TARGETS = install-headers$/;"	m
INSTALL_DEV_TARGETS	win/Makefile.in	/^INSTALL_DEV_TARGETS = install-headers$/;"	m
INSTALL_DOC_TARGETS	unix/Makefile.in	/^INSTALL_DOC_TARGETS = install-doc$/;"	m
INSTALL_DOC_TARGETS	win/Makefile.in	/^INSTALL_DOC_TARGETS = install-doc$/;"	m
INSTALL_EXTRA_TARGETS	unix/Makefile.in	/^INSTALL_EXTRA_TARGETS = @EXTRA_INSTALL@$/;"	m
INSTALL_EXTRA_TARGETS	win/Makefile.in	/^INSTALL_EXTRA_TARGETS =$/;"	m
INSTALL_INC_DIR	compat/zlib/CMakeLists.txt	/^set(INSTALL_INC_DIR "${CMAKE_INSTALL_PREFIX}\/include" CACHE PATH "Installation directory for he/;"	v
INSTALL_LIB	unix/tcl.m4	/^    AC_SUBST(INSTALL_LIB)$/;"	s
INSTALL_LIBRARIES	unix/Makefile.in	/^INSTALL_LIBRARIES	= @INSTALL_LIBRARIES@$/;"	m
INSTALL_LIBRARIES	unix/configure.ac	/^AC_SUBST(INSTALL_LIBRARIES)$/;"	s
INSTALL_LIBRARIES	win/Makefile.in	/^INSTALL_LIBRARIES       = @INSTALL_LIBRARIES@$/;"	m
INSTALL_LIBRARIES	win/configure.ac	/^AC_SUBST(INSTALL_LIBRARIES)$/;"	s
INSTALL_LIBRARY	unix/Makefile.in	/^INSTALL_LIBRARY		= ${INSTALL}$/;"	m
INSTALL_LIB_DIR	compat/zlib/CMakeLists.txt	/^set(INSTALL_LIB_DIR "${CMAKE_INSTALL_PREFIX}\/lib" CACHE PATH "Installation directory for librar/;"	v
INSTALL_MANPAGES	macosx/GNUmakefile	/^INSTALL_MANPAGES	?=$/;"	m
INSTALL_MAN_DIR	compat/zlib/CMakeLists.txt	/^set(INSTALL_MAN_DIR "${CMAKE_INSTALL_PREFIX}\/share\/man" CACHE PATH "Installation directory for/;"	v
INSTALL_MSGS	unix/Makefile.in	/^INSTALL_MSGS		= @INSTALL_MSGS@$/;"	m
INSTALL_MSGS	unix/configure.ac	/^AC_SUBST(INSTALL_MSGS)$/;"	s
INSTALL_MSGS	win/Makefile.in	/^INSTALL_MSGS            = @INSTALL_MSGS@$/;"	m
INSTALL_MSGS	win/configure.ac	/^AC_SUBST(INSTALL_MSGS)$/;"	s
INSTALL_PACKAGE_TARGETS	unix/Makefile.in	/^INSTALL_PACKAGE_TARGETS = install-packages$/;"	m
INSTALL_PACKAGE_TARGETS	win/Makefile.in	/^INSTALL_PACKAGE_TARGETS = install-packages$/;"	m
INSTALL_PATH	macosx/GNUmakefile	/^INSTALL_PATH		?= \/Library\/Frameworks$/;"	m
INSTALL_PKGCONFIG_DIR	compat/zlib/CMakeLists.txt	/^set(INSTALL_PKGCONFIG_DIR "${CMAKE_INSTALL_PREFIX}\/share\/pkgconfig" CACHE PATH "Installation d/;"	v
INSTALL_PROGRAM	unix/Makefile.in	/^INSTALL_PROGRAM		= ${INSTALL}$/;"	m
INSTALL_ROOT	macosx/GNUmakefile	/^INSTALL_ROOT		?= ${DESTDIR}$/;"	m
INSTALL_ROOT	unix/Makefile.in	/^INSTALL_ROOT		= $(DESTDIR)$/;"	m
INSTALL_ROOT	win/Makefile.in	/^INSTALL_ROOT	=$/;"	m
INSTALL_STRIP_LIBRARY	unix/Makefile.in	/^INSTALL_STRIP_LIBRARY	= strip -x$/;"	m
INSTALL_STRIP_PROGRAM	unix/Makefile.in	/^INSTALL_STRIP_PROGRAM	= strip$/;"	m
INSTALL_STUB_LIB	unix/tcl.m4	/^    AC_SUBST(INSTALL_STUB_LIB)$/;"	s
INSTALL_TARGET	macosx/GNUmakefile	/^INSTALL_TARGET		:= install$/;"	m
INSTALL_TARGETS	macosx/GNUmakefile	/^INSTALL_TARGETS		= install-binaries install-headers install-libraries$/;"	m
INSTALL_TARGETS	unix/Makefile.in	/^INSTALL_TARGETS = $(INSTALL_BASE_TARGETS) $(INSTALL_DOC_TARGETS) $(INSTALL_DEV_TARGETS) \\$/;"	m
INSTALL_TARGETS	win/Makefile.in	/^INSTALL_TARGETS = $(INSTALL_BASE_TARGETS) $(INSTALL_DOC_TARGETS) $(INSTALL_DEV_TARGETS) \\$/;"	m
INSTALL_TZDATA	unix/Makefile.in	/^INSTALL_TZDATA		= @INSTALL_TZDATA@$/;"	m
INSTALL_TZDATA	unix/configure.ac	/^AC_SUBST(INSTALL_TZDATA)$/;"	s
INSTROOT	win/vctool.bat	/^    set INSTROOT=%TCLINSTALLROOT%\\%grandParentTail%\\%ARCH%$/;"	v
INSTROOT	win/vctool.bat	/^    set INSTROOT=%driveLetter%\\Tcl\\%grandParentTail%\\%ARCH%$/;"	v
INST_ADD	generic/tclCompile.h	/^    INST_ADD,$/;"	e	enum:TclInstruction
INST_APPEND_ARRAY1	generic/tclCompile.h	/^    INST_APPEND_ARRAY1,$/;"	e	enum:TclInstruction
INST_APPEND_ARRAY4	generic/tclCompile.h	/^    INST_APPEND_ARRAY4,$/;"	e	enum:TclInstruction
INST_APPEND_ARRAY_STK	generic/tclCompile.h	/^    INST_APPEND_ARRAY_STK,$/;"	e	enum:TclInstruction
INST_APPEND_SCALAR1	generic/tclCompile.h	/^    INST_APPEND_SCALAR1,$/;"	e	enum:TclInstruction
INST_APPEND_SCALAR4	generic/tclCompile.h	/^    INST_APPEND_SCALAR4,$/;"	e	enum:TclInstruction
INST_APPEND_STK	generic/tclCompile.h	/^    INST_APPEND_STK,$/;"	e	enum:TclInstruction
INST_ARRAY_EXISTS_IMM	generic/tclCompile.h	/^    INST_ARRAY_EXISTS_IMM,$/;"	e	enum:TclInstruction
INST_ARRAY_EXISTS_STK	generic/tclCompile.h	/^    INST_ARRAY_EXISTS_STK,$/;"	e	enum:TclInstruction
INST_ARRAY_MAKE_IMM	generic/tclCompile.h	/^    INST_ARRAY_MAKE_IMM,$/;"	e	enum:TclInstruction
INST_ARRAY_MAKE_STK	generic/tclCompile.h	/^    INST_ARRAY_MAKE_STK,$/;"	e	enum:TclInstruction
INST_BEGIN_CATCH4	generic/tclCompile.h	/^    INST_BEGIN_CATCH4,$/;"	e	enum:TclInstruction
INST_BITAND	generic/tclCompile.h	/^    INST_BITAND,$/;"	e	enum:TclInstruction
INST_BITNOT	generic/tclCompile.h	/^    INST_BITNOT,$/;"	e	enum:TclInstruction
INST_BITOR	generic/tclCompile.h	/^    INST_BITOR,$/;"	e	enum:TclInstruction
INST_BITXOR	generic/tclCompile.h	/^    INST_BITXOR,$/;"	e	enum:TclInstruction
INST_BREAK	generic/tclCompile.h	/^    INST_BREAK,$/;"	e	enum:TclInstruction
INST_CLOCK_READ	generic/tclCompile.h	/^    INST_CLOCK_READ,$/;"	e	enum:TclInstruction
INST_CONCAT_STK	generic/tclCompile.h	/^    INST_CONCAT_STK,$/;"	e	enum:TclInstruction
INST_CONST_IMM	generic/tclCompile.h	/^    INST_CONST_IMM,$/;"	e	enum:TclInstruction
INST_CONST_STK	generic/tclCompile.h	/^    INST_CONST_STK,$/;"	e	enum:TclInstruction
INST_CONTINUE	generic/tclCompile.h	/^    INST_CONTINUE,$/;"	e	enum:TclInstruction
INST_COROUTINE_NAME	generic/tclCompile.h	/^    INST_COROUTINE_NAME,$/;"	e	enum:TclInstruction
INST_DICT_APPEND	generic/tclCompile.h	/^    INST_DICT_APPEND,$/;"	e	enum:TclInstruction
INST_DICT_EXISTS	generic/tclCompile.h	/^    INST_DICT_EXISTS,$/;"	e	enum:TclInstruction
INST_DICT_EXPAND	generic/tclCompile.h	/^    INST_DICT_EXPAND,$/;"	e	enum:TclInstruction
INST_DICT_FIRST	generic/tclCompile.h	/^    INST_DICT_FIRST,$/;"	e	enum:TclInstruction
INST_DICT_GET	generic/tclCompile.h	/^    INST_DICT_GET,$/;"	e	enum:TclInstruction
INST_DICT_GET_DEF	generic/tclCompile.h	/^    INST_DICT_GET_DEF,$/;"	e	enum:TclInstruction
INST_DICT_INCR_IMM	generic/tclCompile.h	/^    INST_DICT_INCR_IMM,$/;"	e	enum:TclInstruction
INST_DICT_LAPPEND	generic/tclCompile.h	/^    INST_DICT_LAPPEND,$/;"	e	enum:TclInstruction
INST_DICT_NEXT	generic/tclCompile.h	/^    INST_DICT_NEXT,$/;"	e	enum:TclInstruction
INST_DICT_RECOMBINE_IMM	generic/tclCompile.h	/^    INST_DICT_RECOMBINE_IMM,$/;"	e	enum:TclInstruction
INST_DICT_RECOMBINE_STK	generic/tclCompile.h	/^    INST_DICT_RECOMBINE_STK,$/;"	e	enum:TclInstruction
INST_DICT_SET	generic/tclCompile.h	/^    INST_DICT_SET,$/;"	e	enum:TclInstruction
INST_DICT_UNSET	generic/tclCompile.h	/^    INST_DICT_UNSET,$/;"	e	enum:TclInstruction
INST_DICT_UPDATE_END	generic/tclCompile.h	/^    INST_DICT_UPDATE_END,$/;"	e	enum:TclInstruction
INST_DICT_UPDATE_START	generic/tclCompile.h	/^    INST_DICT_UPDATE_START,$/;"	e	enum:TclInstruction
INST_DICT_VERIFY	generic/tclCompile.h	/^    INST_DICT_VERIFY,$/;"	e	enum:TclInstruction
INST_DIV	generic/tclCompile.h	/^    INST_DIV,$/;"	e	enum:TclInstruction
INST_DONE	generic/tclCompile.h	/^    INST_DONE = 0,$/;"	e	enum:TclInstruction
INST_DUP	generic/tclCompile.h	/^    INST_DUP,$/;"	e	enum:TclInstruction
INST_END_CATCH	generic/tclCompile.h	/^    INST_END_CATCH,$/;"	e	enum:TclInstruction
INST_EQ	generic/tclCompile.h	/^    INST_EQ,$/;"	e	enum:TclInstruction
INST_EVAL_STK	generic/tclCompile.h	/^    INST_EVAL_STK,$/;"	e	enum:TclInstruction
INST_EXIST_ARRAY	generic/tclCompile.h	/^    INST_EXIST_ARRAY,$/;"	e	enum:TclInstruction
INST_EXIST_ARRAY_STK	generic/tclCompile.h	/^    INST_EXIST_ARRAY_STK,$/;"	e	enum:TclInstruction
INST_EXIST_SCALAR	generic/tclCompile.h	/^    INST_EXIST_SCALAR,$/;"	e	enum:TclInstruction
INST_EXIST_STK	generic/tclCompile.h	/^    INST_EXIST_STK,$/;"	e	enum:TclInstruction
INST_EXPAND_DROP	generic/tclCompile.h	/^    INST_EXPAND_DROP,$/;"	e	enum:TclInstruction
INST_EXPAND_START	generic/tclCompile.h	/^    INST_EXPAND_START,$/;"	e	enum:TclInstruction
INST_EXPAND_STKTOP	generic/tclCompile.h	/^    INST_EXPAND_STKTOP,$/;"	e	enum:TclInstruction
INST_EXPON	generic/tclCompile.h	/^    INST_EXPON,$/;"	e	enum:TclInstruction
INST_EXPR_STK	generic/tclCompile.h	/^    INST_EXPR_STK,$/;"	e	enum:TclInstruction
INST_FOREACH_END	generic/tclCompile.h	/^    INST_FOREACH_END,$/;"	e	enum:TclInstruction
INST_FOREACH_START	generic/tclCompile.h	/^    INST_FOREACH_START,$/;"	e	enum:TclInstruction
INST_FOREACH_STEP	generic/tclCompile.h	/^    INST_FOREACH_STEP,$/;"	e	enum:TclInstruction
INST_GE	generic/tclCompile.h	/^    INST_GE,$/;"	e	enum:TclInstruction
INST_GT	generic/tclCompile.h	/^    INST_GT,$/;"	e	enum:TclInstruction
INST_INCR_ARRAY1	generic/tclCompile.h	/^    INST_INCR_ARRAY1,$/;"	e	enum:TclInstruction
INST_INCR_ARRAY1_IMM	generic/tclCompile.h	/^    INST_INCR_ARRAY1_IMM,$/;"	e	enum:TclInstruction
INST_INCR_ARRAY_STK	generic/tclCompile.h	/^    INST_INCR_ARRAY_STK,$/;"	e	enum:TclInstruction
INST_INCR_ARRAY_STK_IMM	generic/tclCompile.h	/^    INST_INCR_ARRAY_STK_IMM,$/;"	e	enum:TclInstruction
INST_INCR_SCALAR1	generic/tclCompile.h	/^    INST_INCR_SCALAR1,$/;"	e	enum:TclInstruction
INST_INCR_SCALAR1_IMM	generic/tclCompile.h	/^    INST_INCR_SCALAR1_IMM,$/;"	e	enum:TclInstruction
INST_INCR_SCALAR_STK	generic/tclCompile.h	/^    INST_INCR_SCALAR_STK,$/;"	e	enum:TclInstruction
INST_INCR_SCALAR_STK_IMM	generic/tclCompile.h	/^    INST_INCR_SCALAR_STK_IMM,$/;"	e	enum:TclInstruction
INST_INCR_STK	generic/tclCompile.h	/^    INST_INCR_STK,$/;"	e	enum:TclInstruction
INST_INCR_STK_IMM	generic/tclCompile.h	/^    INST_INCR_STK_IMM,$/;"	e	enum:TclInstruction
INST_INFO_LEVEL_ARGS	generic/tclCompile.h	/^    INST_INFO_LEVEL_ARGS,$/;"	e	enum:TclInstruction
INST_INFO_LEVEL_NUM	generic/tclCompile.h	/^    INST_INFO_LEVEL_NUM,$/;"	e	enum:TclInstruction
INST_INVOKE_EXPANDED	generic/tclCompile.h	/^    INST_INVOKE_EXPANDED,$/;"	e	enum:TclInstruction
INST_INVOKE_REPLACE	generic/tclCompile.h	/^    INST_INVOKE_REPLACE,$/;"	e	enum:TclInstruction
INST_INVOKE_STK1	generic/tclCompile.h	/^    INST_INVOKE_STK1,$/;"	e	enum:TclInstruction
INST_INVOKE_STK4	generic/tclCompile.h	/^    INST_INVOKE_STK4,$/;"	e	enum:TclInstruction
INST_JUMP1	generic/tclCompile.h	/^    INST_JUMP1,$/;"	e	enum:TclInstruction
INST_JUMP4	generic/tclCompile.h	/^    INST_JUMP4,$/;"	e	enum:TclInstruction
INST_JUMP_FALSE1	generic/tclCompile.h	/^    INST_JUMP_FALSE1,$/;"	e	enum:TclInstruction
INST_JUMP_FALSE4	generic/tclCompile.h	/^    INST_JUMP_FALSE4,$/;"	e	enum:TclInstruction
INST_JUMP_TABLE	generic/tclCompile.h	/^    INST_JUMP_TABLE,$/;"	e	enum:TclInstruction
INST_JUMP_TRUE1	generic/tclCompile.h	/^    INST_JUMP_TRUE1,$/;"	e	enum:TclInstruction
INST_JUMP_TRUE4	generic/tclCompile.h	/^    INST_JUMP_TRUE4,$/;"	e	enum:TclInstruction
INST_LAPPEND_ARRAY1	generic/tclCompile.h	/^    INST_LAPPEND_ARRAY1,$/;"	e	enum:TclInstruction
INST_LAPPEND_ARRAY4	generic/tclCompile.h	/^    INST_LAPPEND_ARRAY4,$/;"	e	enum:TclInstruction
INST_LAPPEND_ARRAY_STK	generic/tclCompile.h	/^    INST_LAPPEND_ARRAY_STK,$/;"	e	enum:TclInstruction
INST_LAPPEND_LIST	generic/tclCompile.h	/^    INST_LAPPEND_LIST,$/;"	e	enum:TclInstruction
INST_LAPPEND_LIST_ARRAY	generic/tclCompile.h	/^    INST_LAPPEND_LIST_ARRAY,$/;"	e	enum:TclInstruction
INST_LAPPEND_LIST_ARRAY_STK	generic/tclCompile.h	/^    INST_LAPPEND_LIST_ARRAY_STK,$/;"	e	enum:TclInstruction
INST_LAPPEND_LIST_STK	generic/tclCompile.h	/^    INST_LAPPEND_LIST_STK,$/;"	e	enum:TclInstruction
INST_LAPPEND_SCALAR1	generic/tclCompile.h	/^    INST_LAPPEND_SCALAR1,$/;"	e	enum:TclInstruction
INST_LAPPEND_SCALAR4	generic/tclCompile.h	/^    INST_LAPPEND_SCALAR4,$/;"	e	enum:TclInstruction
INST_LAPPEND_STK	generic/tclCompile.h	/^    INST_LAPPEND_STK,$/;"	e	enum:TclInstruction
INST_LE	generic/tclCompile.h	/^    INST_LE,$/;"	e	enum:TclInstruction
INST_LIST	generic/tclCompile.h	/^    INST_LIST,$/;"	e	enum:TclInstruction
INST_LIST_CONCAT	generic/tclCompile.h	/^    INST_LIST_CONCAT,$/;"	e	enum:TclInstruction
INST_LIST_IN	generic/tclCompile.h	/^    INST_LIST_IN,$/;"	e	enum:TclInstruction
INST_LIST_INDEX	generic/tclCompile.h	/^    INST_LIST_INDEX,$/;"	e	enum:TclInstruction
INST_LIST_INDEX_IMM	generic/tclCompile.h	/^    INST_LIST_INDEX_IMM,$/;"	e	enum:TclInstruction
INST_LIST_INDEX_MULTI	generic/tclCompile.h	/^    INST_LIST_INDEX_MULTI,$/;"	e	enum:TclInstruction
INST_LIST_LENGTH	generic/tclCompile.h	/^    INST_LIST_LENGTH,$/;"	e	enum:TclInstruction
INST_LIST_NOT_IN	generic/tclCompile.h	/^    INST_LIST_NOT_IN,$/;"	e	enum:TclInstruction
INST_LIST_RANGE_IMM	generic/tclCompile.h	/^    INST_LIST_RANGE_IMM,$/;"	e	enum:TclInstruction
INST_LMAP_COLLECT	generic/tclCompile.h	/^    INST_LMAP_COLLECT,$/;"	e	enum:TclInstruction
INST_LNOT	generic/tclCompile.h	/^    INST_LNOT,$/;"	e	enum:TclInstruction
INST_LOAD_ARRAY1	generic/tclCompile.h	/^    INST_LOAD_ARRAY1,$/;"	e	enum:TclInstruction
INST_LOAD_ARRAY4	generic/tclCompile.h	/^    INST_LOAD_ARRAY4,$/;"	e	enum:TclInstruction
INST_LOAD_ARRAY_STK	generic/tclCompile.h	/^    INST_LOAD_ARRAY_STK,$/;"	e	enum:TclInstruction
INST_LOAD_SCALAR1	generic/tclCompile.h	/^    INST_LOAD_SCALAR1,$/;"	e	enum:TclInstruction
INST_LOAD_SCALAR4	generic/tclCompile.h	/^    INST_LOAD_SCALAR4,$/;"	e	enum:TclInstruction
INST_LOAD_SCALAR_STK	generic/tclCompile.h	/^    INST_LOAD_SCALAR_STK,$/;"	e	enum:TclInstruction
INST_LOAD_STK	generic/tclCompile.h	/^    INST_LOAD_STK,$/;"	e	enum:TclInstruction
INST_LREPLACE4	generic/tclCompile.h	/^    INST_LREPLACE4,$/;"	e	enum:TclInstruction
INST_LSET_FLAT	generic/tclCompile.h	/^    INST_LSET_FLAT,$/;"	e	enum:TclInstruction
INST_LSET_LIST	generic/tclCompile.h	/^    INST_LSET_LIST,$/;"	e	enum:TclInstruction
INST_LSHIFT	generic/tclCompile.h	/^    INST_LSHIFT,$/;"	e	enum:TclInstruction
INST_LT	generic/tclCompile.h	/^    INST_LT,$/;"	e	enum:TclInstruction
INST_MOD	generic/tclCompile.h	/^    INST_MOD,$/;"	e	enum:TclInstruction
INST_MULT	generic/tclCompile.h	/^    INST_MULT,$/;"	e	enum:TclInstruction
INST_NEQ	generic/tclCompile.h	/^    INST_NEQ,$/;"	e	enum:TclInstruction
INST_NOP	generic/tclCompile.h	/^    INST_NOP,$/;"	e	enum:TclInstruction
INST_NSUPVAR	generic/tclCompile.h	/^    INST_NSUPVAR,$/;"	e	enum:TclInstruction
INST_NS_CURRENT	generic/tclCompile.h	/^    INST_NS_CURRENT,$/;"	e	enum:TclInstruction
INST_NUM_TYPE	generic/tclCompile.h	/^    INST_NUM_TYPE,$/;"	e	enum:TclInstruction
INST_ORIGIN_COMMAND	generic/tclCompile.h	/^    INST_ORIGIN_COMMAND,$/;"	e	enum:TclInstruction
INST_OVER	generic/tclCompile.h	/^    INST_OVER,$/;"	e	enum:TclInstruction
INST_POP	generic/tclCompile.h	/^    INST_POP,$/;"	e	enum:TclInstruction
INST_PUSH1	generic/tclCompile.h	/^    INST_PUSH1,$/;"	e	enum:TclInstruction
INST_PUSH4	generic/tclCompile.h	/^    INST_PUSH4,$/;"	e	enum:TclInstruction
INST_PUSH_RESULT	generic/tclCompile.h	/^    INST_PUSH_RESULT,$/;"	e	enum:TclInstruction
INST_PUSH_RETURN_CODE	generic/tclCompile.h	/^    INST_PUSH_RETURN_CODE,$/;"	e	enum:TclInstruction
INST_PUSH_RETURN_OPTIONS	generic/tclCompile.h	/^    INST_PUSH_RETURN_OPTIONS,$/;"	e	enum:TclInstruction
INST_REGEXP	generic/tclCompile.h	/^    INST_REGEXP,$/;"	e	enum:TclInstruction
INST_RESOLVE_COMMAND	generic/tclCompile.h	/^    INST_RESOLVE_COMMAND,$/;"	e	enum:TclInstruction
INST_RETURN_CODE_BRANCH	generic/tclCompile.h	/^    INST_RETURN_CODE_BRANCH,$/;"	e	enum:TclInstruction
INST_RETURN_IMM	generic/tclCompile.h	/^    INST_RETURN_IMM,$/;"	e	enum:TclInstruction
INST_RETURN_STK	generic/tclCompile.h	/^    INST_RETURN_STK,$/;"	e	enum:TclInstruction
INST_REVERSE	generic/tclCompile.h	/^    INST_REVERSE,$/;"	e	enum:TclInstruction
INST_RSHIFT	generic/tclCompile.h	/^    INST_RSHIFT,$/;"	e	enum:TclInstruction
INST_START_CMD	generic/tclCompile.h	/^    INST_START_CMD,$/;"	e	enum:TclInstruction
INST_STORE_ARRAY1	generic/tclCompile.h	/^    INST_STORE_ARRAY1,$/;"	e	enum:TclInstruction
INST_STORE_ARRAY4	generic/tclCompile.h	/^    INST_STORE_ARRAY4,$/;"	e	enum:TclInstruction
INST_STORE_ARRAY_STK	generic/tclCompile.h	/^    INST_STORE_ARRAY_STK,$/;"	e	enum:TclInstruction
INST_STORE_SCALAR1	generic/tclCompile.h	/^    INST_STORE_SCALAR1,$/;"	e	enum:TclInstruction
INST_STORE_SCALAR4	generic/tclCompile.h	/^    INST_STORE_SCALAR4,$/;"	e	enum:TclInstruction
INST_STORE_SCALAR_STK	generic/tclCompile.h	/^    INST_STORE_SCALAR_STK,$/;"	e	enum:TclInstruction
INST_STORE_STK	generic/tclCompile.h	/^    INST_STORE_STK,$/;"	e	enum:TclInstruction
INST_STR_CLASS	generic/tclCompile.h	/^    INST_STR_CLASS,$/;"	e	enum:TclInstruction
INST_STR_CMP	generic/tclCompile.h	/^    INST_STR_CMP,$/;"	e	enum:TclInstruction
INST_STR_CONCAT1	generic/tclCompile.h	/^    INST_STR_CONCAT1,$/;"	e	enum:TclInstruction
INST_STR_EQ	generic/tclCompile.h	/^    INST_STR_EQ,$/;"	e	enum:TclInstruction
INST_STR_FIND	generic/tclCompile.h	/^    INST_STR_FIND,$/;"	e	enum:TclInstruction
INST_STR_FIND_LAST	generic/tclCompile.h	/^    INST_STR_FIND_LAST,$/;"	e	enum:TclInstruction
INST_STR_GE	generic/tclCompile.h	/^    INST_STR_GE,$/;"	e	enum:TclInstruction
INST_STR_GT	generic/tclCompile.h	/^    INST_STR_GT,$/;"	e	enum:TclInstruction
INST_STR_INDEX	generic/tclCompile.h	/^    INST_STR_INDEX,$/;"	e	enum:TclInstruction
INST_STR_LE	generic/tclCompile.h	/^    INST_STR_LE,$/;"	e	enum:TclInstruction
INST_STR_LEN	generic/tclCompile.h	/^    INST_STR_LEN,$/;"	e	enum:TclInstruction
INST_STR_LOWER	generic/tclCompile.h	/^    INST_STR_LOWER,$/;"	e	enum:TclInstruction
INST_STR_LT	generic/tclCompile.h	/^    INST_STR_LT,$/;"	e	enum:TclInstruction
INST_STR_MAP	generic/tclCompile.h	/^    INST_STR_MAP,$/;"	e	enum:TclInstruction
INST_STR_MATCH	generic/tclCompile.h	/^    INST_STR_MATCH,$/;"	e	enum:TclInstruction
INST_STR_NEQ	generic/tclCompile.h	/^    INST_STR_NEQ,$/;"	e	enum:TclInstruction
INST_STR_RANGE	generic/tclCompile.h	/^    INST_STR_RANGE,$/;"	e	enum:TclInstruction
INST_STR_RANGE_IMM	generic/tclCompile.h	/^    INST_STR_RANGE_IMM,$/;"	e	enum:TclInstruction
INST_STR_REPLACE	generic/tclCompile.h	/^    INST_STR_REPLACE,$/;"	e	enum:TclInstruction
INST_STR_TITLE	generic/tclCompile.h	/^    INST_STR_TITLE,$/;"	e	enum:TclInstruction
INST_STR_TRIM	generic/tclCompile.h	/^    INST_STR_TRIM,$/;"	e	enum:TclInstruction
INST_STR_TRIM_LEFT	generic/tclCompile.h	/^    INST_STR_TRIM_LEFT,$/;"	e	enum:TclInstruction
INST_STR_TRIM_RIGHT	generic/tclCompile.h	/^    INST_STR_TRIM_RIGHT,$/;"	e	enum:TclInstruction
INST_STR_UPPER	generic/tclCompile.h	/^    INST_STR_UPPER,$/;"	e	enum:TclInstruction
INST_SUB	generic/tclCompile.h	/^    INST_SUB,$/;"	e	enum:TclInstruction
INST_SYNTAX	generic/tclCompile.h	/^    INST_SYNTAX,$/;"	e	enum:TclInstruction
INST_TAILCALL	generic/tclCompile.h	/^    INST_TAILCALL,$/;"	e	enum:TclInstruction
INST_TCLOO_CLASS	generic/tclCompile.h	/^    INST_TCLOO_CLASS,$/;"	e	enum:TclInstruction
INST_TCLOO_IS_OBJECT	generic/tclCompile.h	/^    INST_TCLOO_IS_OBJECT,$/;"	e	enum:TclInstruction
INST_TCLOO_NEXT	generic/tclCompile.h	/^    INST_TCLOO_NEXT,$/;"	e	enum:TclInstruction
INST_TCLOO_NEXT_CLASS	generic/tclCompile.h	/^    INST_TCLOO_NEXT_CLASS,$/;"	e	enum:TclInstruction
INST_TCLOO_NS	generic/tclCompile.h	/^    INST_TCLOO_NS,$/;"	e	enum:TclInstruction
INST_TCLOO_SELF	generic/tclCompile.h	/^    INST_TCLOO_SELF,$/;"	e	enum:TclInstruction
INST_TRY_CVT_TO_BOOLEAN	generic/tclCompile.h	/^    INST_TRY_CVT_TO_BOOLEAN,$/;"	e	enum:TclInstruction
INST_TRY_CVT_TO_NUMERIC	generic/tclCompile.h	/^    INST_TRY_CVT_TO_NUMERIC,$/;"	e	enum:TclInstruction
INST_UMINUS	generic/tclCompile.h	/^    INST_UMINUS,$/;"	e	enum:TclInstruction
INST_UNSET_ARRAY	generic/tclCompile.h	/^    INST_UNSET_ARRAY,$/;"	e	enum:TclInstruction
INST_UNSET_ARRAY_STK	generic/tclCompile.h	/^    INST_UNSET_ARRAY_STK,$/;"	e	enum:TclInstruction
INST_UNSET_SCALAR	generic/tclCompile.h	/^    INST_UNSET_SCALAR,$/;"	e	enum:TclInstruction
INST_UNSET_STK	generic/tclCompile.h	/^    INST_UNSET_STK,$/;"	e	enum:TclInstruction
INST_UPLUS	generic/tclCompile.h	/^    INST_UPLUS,$/;"	e	enum:TclInstruction
INST_UPVAR	generic/tclCompile.h	/^    INST_UPVAR,$/;"	e	enum:TclInstruction
INST_VARIABLE	generic/tclCompile.h	/^    INST_VARIABLE,$/;"	e	enum:TclInstruction
INST_YIELD	generic/tclCompile.h	/^    INST_YIELD,$/;"	e	enum:TclInstruction
INST_YIELD_TO_INVOKE	generic/tclCompile.h	/^    INST_YIELD_TO_INVOKE,$/;"	e	enum:TclInstruction
INT2PTR	generic/tclInt.h	/^#   define INT2PTR(/;"	d
INTEGER	generic/tclCmdIL.c	/^	ASCII, DICTIONARY, INTEGER, REAL$/;"	e	enum:Tcl_LsearchObjCmd::datatypes	file:
INTERIM_HACK_NAME	generic/tclBasic.c	/^#define INTERIM_HACK_NAME /;"	d	file:
INTERNALTONORMALIZEDPROC	doc/FileSystem.3	/^.SS INTERNALTONORMALIZEDPROC$/;"	S	section:Filesystem""FILESYSTEM INFRASTRUCTURE
INTERPRETERS AND MEMORY MANAGEMENT	doc/CrtInterp.3	/^.SH "INTERPRETERS AND MEMORY MANAGEMENT"$/;"	s	title:Tcl_CreateInterp
INTERP_ALTERNATE_WRONG_ARGS	generic/tclInt.h	/^#define INTERP_ALTERNATE_WRONG_ARGS	/;"	d
INTERP_DEBUG_FRAME	generic/tclInt.h	/^#define INTERP_DEBUG_FRAME	/;"	d
INTERP_INFO	generic/tclInterp.c	/^#define INTERP_INFO(/;"	d	file:
INTERP_STACK_INITIAL_SIZE	generic/tclBasic.c	/^#define INTERP_STACK_INITIAL_SIZE /;"	d	file:
INTERP_TRACE_IN_PROGRESS	generic/tclInt.h	/^#define INTERP_TRACE_IN_PROGRESS	/;"	d
INTERVAL_TIMER	win/tclWinNotify.c	/^#define INTERVAL_TIMER	/;"	d	file:
INTNUM	generic/tclGetDate.y	/^INTNUM	: tUNUMBER {$/;"	l	typeref:typename:Number
INTOCON	generic/regc_lex.c	/^#define	INTOCON(/;"	d	file:
INTRODUCTION	doc/Encoding.3	/^.SH INTRODUCTION$/;"	s	title:Tcl_GetEncoding
INTRODUCTION	doc/InitStubs.3	/^.SH INTRODUCTION$/;"	s	title:Tcl_InitStubs
INTRODUCTION	doc/Notifier.3	/^.SH INTRODUCTION$/;"	s	title:Notifier
INTRODUCTION	doc/Object.3	/^.SH INTRODUCTION$/;"	s	title:Tcl_Obj
INTRODUCTION	doc/Thread.3	/^.SH INTRODUCTION$/;"	s	title:Threads
INUSE	generic/regguts.h	/^#define	INUSE	/;"	d
INVALID	generic/tclCompExpr.c	/^#define INVALID	/;"	d	file:
INVALID_FILE_ATTRIBUTES	win/nmakehlp.c	/^    #define INVALID_FILE_ATTRIBUTES /;"	d	file:
INVALID_FILE_ATTRIBUTES	win/tclWinFile.c	/^#define INVALID_FILE_ATTRIBUTES	/;"	d	file:
INVALID_HANDLE_VALUE	compat/zlib/contrib/minizip/iowin32.c	/^#define INVALID_HANDLE_VALUE /;"	d	file:
INVALID_SET_FILE_POINTER	compat/zlib/contrib/minizip/iowin32.c	/^#define INVALID_SET_FILE_POINTER /;"	d	file:
INVALID_SET_FILE_POINTER	win/tclWinPort.h	/^#define INVALID_SET_FILE_POINTER /;"	d
INVARIANT	generic/tclListObj.c	/^#define INVARIANT(/;"	d	file:
INVOKE	generic/tclCompCmdsSZ.c	/^#define INVOKE(/;"	d	file:
IN_HEADER	generic/tclZlib.c	/^    IN_HEADER = 0x02,		\/* Set if the inHeader field has been$/;"	e	enum:ZlibChannelDataFlags	file:
IN_LIST	generic/tclCompExpr.c	/^#define IN_LIST	/;"	d	file:
IN_LIST	generic/tclOOCall.c	/^    IN_LIST = 1,		\/* Seen an implementation. *\/$/;"	e	enum:NameTableValues	file:
IOHDR	unix/Makefile.in	/^IOHDR		= $(GENERIC_DIR)\/tclIO.h$/;"	m
IOWIN32_USING_WINRT_API	compat/zlib/contrib/minizip/iowin32.c	/^#define IOWIN32_USING_WINRT_API /;"	d	file:
IO_REPARSE_TAG_DFS	win/tclWinFile.c	/^#  define IO_REPARSE_TAG_DFS	/;"	d	file:
IO_REPARSE_TAG_HSM	win/tclWinFile.c	/^#  define IO_REPARSE_TAG_HSM	/;"	d	file:
IO_REPARSE_TAG_MOUNT_POINT	win/tclWinFile.c	/^#  define IO_REPARSE_TAG_MOUNT_POINT	/;"	d	file:
IO_REPARSE_TAG_NSS	win/tclWinFile.c	/^#  define IO_REPARSE_TAG_NSS	/;"	d	file:
IO_REPARSE_TAG_NSSRECOVER	win/tclWinFile.c	/^#  define IO_REPARSE_TAG_NSSRECOVER	/;"	d	file:
IO_REPARSE_TAG_RESERVED_ONE	win/tclWinFile.c	/^#  define IO_REPARSE_TAG_RESERVED_ONE	/;"	d	file:
IO_REPARSE_TAG_RESERVED_RANGE	win/tclWinFile.c	/^#  define IO_REPARSE_TAG_RESERVED_RANGE	/;"	d	file:
IO_REPARSE_TAG_RESERVED_ZERO	win/tclWinFile.c	/^#  define IO_REPARSE_TAG_RESERVED_ZERO	/;"	d	file:
IO_REPARSE_TAG_SIS	win/tclWinFile.c	/^#  define IO_REPARSE_TAG_SIS	/;"	d	file:
IO_REPARSE_TAG_SYMBOLIC_LINK	win/tclWinFile.c	/^#  define IO_REPARSE_TAG_SYMBOLIC_LINK	/;"	d	file:
IO_REPARSE_TAG_VALID_VALUES	win/tclWinFile.c	/^#  define IO_REPARSE_TAG_VALID_VALUES	/;"	d	file:
IPos	compat/zlib/deflate.h	/^typedef unsigned IPos;$/;"	t	typeref:typename:unsigned
IPv6AddressNeedsNumericRendering	unix/tclUnixSock.c	/^IPv6AddressNeedsNumericRendering($/;"	f	typeref:typename:int	file:
ISARRAY	generic/tclVar.c	/^static const char ISARRAY[] =		"variable is array";$/;"	v	typeref:typename:const char[]	file:
ISARRAYELEMENT	generic/tclVar.c	/^static const char ISARRAYELEMENT[] =$/;"	v	typeref:typename:const char[]	file:
ISBSET	generic/regguts.h	/^#define	ISBSET(/;"	d
ISCONST	generic/tclVar.c	/^static const char ISCONST[] =		"variable is a constant";$/;"	v	typeref:typename:const char[]	file:
ISDIGIT	generic/tclStubLib.c	/^#define ISDIGIT(/;"	d	file:
ISERR	generic/regcomp.c	/^#define	ISERR()	VISERR(/;"	d	file:
ISERR	generic/regexec.c	/^#define	ISERR()	VISERR(/;"	d	file:
ISSPECIAL	compat/zlib/contrib/untgz/untgz.c	/^#define ISSPECIAL(/;"	d	file:
IS_ITCLPRIVATE	generic/tclOOCall.c	/^#define IS_ITCLPRIVATE(/;"	d	file:
IS_PRIVATE	generic/tclOOCall.c	/^#define IS_PRIVATE(/;"	d	file:
IS_PUBLIC	generic/tclOOCall.c	/^#define IS_PUBLIC(/;"	d	file:
IS_UNEXPORTED	generic/tclOOCall.c	/^#define IS_UNEXPORTED(/;"	d	file:
IcuConverterAliasesObjCmd	generic/tclIcu.c	/^IcuConverterAliasesObjCmd($/;"	f	typeref:typename:int	file:
IcuConverterNamesObjCmd	generic/tclIcu.c	/^IcuConverterNamesObjCmd($/;"	f	typeref:typename:int	file:
IcuDetectObjCmd	generic/tclIcu.c	/^IcuDetectObjCmd($/;"	f	typeref:typename:int	file:
IcuError	generic/tclIcu.c	/^IcuError($/;"	f	typeref:typename:int	file:
IcuFindSymbol	generic/tclIcu.c	/^IcuFindSymbol($/;"	f	typeref:typename:void *	file:
Identifiers	generic/tclBasic.c	/^    enum Identifiers {$/;"	g	function:buildInfoObjCmd2	file:
IdleHandler	generic/tclTimer.c	/^typedef struct IdleHandler {$/;"	s	file:
IdleHandler	generic/tclTimer.c	/^} IdleHandler;$/;"	t	typeref:struct:IdleHandler	file:
IfConditionCallback	generic/tclCmdIL.c	/^IfConditionCallback($/;"	f	typeref:typename:int	file:
IfConditionCallback	generic/tclCmdIL.c	/^static Tcl_NRPostProc	IfConditionCallback;$/;"	v	typeref:typename:Tcl_NRPostProc	file:
IllegalExprOperandType	generic/tclExecute.c	/^IllegalExprOperandType($/;"	f	typeref:typename:void	file:
ImplementClassProperty	generic/tclOOProp.c	/^ImplementClassProperty($/;"	f	typeref:typename:void
ImplementObjectProperty	generic/tclOOProp.c	/^ImplementObjectProperty($/;"	f	typeref:typename:void
ImportRef	generic/tclInt.h	/^typedef struct ImportRef {$/;"	s
ImportRef	generic/tclInt.h	/^} ImportRef;$/;"	t	typeref:struct:ImportRef
Important Note	.github/ISSUE_TEMPLATE.md	/^Important Note$/;"	c
Important Note	.github/PULL_REQUEST_TEMPLATE.md	/^Important Note$/;"	c
ImportedCmdData	generic/tclInt.h	/^typedef struct ImportedCmdData {$/;"	s
ImportedCmdData	generic/tclInt.h	/^} ImportedCmdData;$/;"	t	typeref:struct:ImportedCmdData
InRange	generic/tclLink.c	/^#define InRange(/;"	d	file:
In_Buffer	compat/zlib/contrib/ada/zlib.adb	/^      In_Buffer  : Stream_Element_Array$/;"	v	subprogram:Generic_Translate	file:
In_File_Name	compat/zlib/contrib/ada/test.adb	/^   In_File_Name  : constant String := "testzlib.in";$/;"	n	subprogram:Test	file:
In_First	compat/zlib/contrib/ada/zlib.adb	/^      In_First   : Stream_Element_Offset;$/;"	v	subprogram:Generic_Translate	file:
In_First	compat/zlib/contrib/ada/zlib.adb	/^      In_First : Stream_Element_Offset := Item'First;$/;"	v	subprogram:Write	file:
In_Last	compat/zlib/contrib/ada/zlib.adb	/^      In_Last    : Stream_Element_Offset;$/;"	v	subprogram:Generic_Translate	file:
In_Last	compat/zlib/contrib/ada/zlib.adb	/^      In_Last    : Stream_Element_Offset;$/;"	v	subprogram:Read	file:
In_Last	compat/zlib/contrib/ada/zlib.adb	/^      In_Last  : Stream_Element_Offset;$/;"	v	subprogram:Write	file:
In_Stream	compat/zlib/contrib/ada/zlib-streams.ads	/^   type Stream_Mode is (In_Stream, Out_Stream, Duplex);$/;"	l	type:Stream_Mode	file:
Incompatibilities in C public interface	changes.md	/^## Incompatibilities in C public interface$/;"	s
IndexRep	generic/tclIndexObj.c	/^} IndexRep;$/;"	t	typeref:struct:__anon02ea70180108	file:
IndexRep	generic/tclTestObj.c	/^    struct IndexRep {$/;"	s	function:TestindexobjCmd	file:
IndexTailVarIfKnown	generic/tclCompCmdsGR.c	/^IndexTailVarIfKnown($/;"	f	typeref:typename:int	file:
Inflate	compat/zlib/contrib/ada/mtest.adb	/^      Inflate : Filter_Type;$/;"	v	task:Test_Task	file:
Inflate	compat/zlib/contrib/ada/zlib-thin.ads	/^   function Inflate (strm : Z_Streamp; flush : Int) return Int;$/;"	R
InflateEnd	compat/zlib/contrib/ada/zlib-thin.ads	/^   function InflateEnd (strm : Z_Streamp) return Int;$/;"	R
Inflate_Expand	compat/zlib/contrib/dotzlib/DotZLib/UnitTests.cs	/^        public void Inflate_Expand()$/;"	m	class:DotZLibTests.DeflateInflateTests
Inflate_Init	compat/zlib/contrib/ada/zlib-thin.adb	/^   function Inflate_Init (strm : Z_Streamp; windowBits : Int) return Int is$/;"	r	package:ZLib.Thin	file:
Inflate_Init	compat/zlib/contrib/ada/zlib-thin.ads	/^   function Inflate_Init (strm : Z_Streamp; windowBits : Int) return Int;$/;"	R
Inflate_Init	compat/zlib/contrib/ada/zlib.adb	/^   procedure Inflate_Init$/;"	r	package:ZLib	file:
Inflate_Init	compat/zlib/contrib/ada/zlib.ads	/^   procedure Inflate_Init$/;"	R	packspec:ZLib
Inflate_Init	compat/zlib/contrib/dotzlib/DotZLib/UnitTests.cs	/^        public void Inflate_Init()$/;"	m	class:DotZLibTests.DeflateInflateTests
Inflater	compat/zlib/contrib/dotzlib/DotZLib/Inflater.cs	/^        public Inflater() : base()$/;"	m	class:DotZLib.Inflater
Inflater	compat/zlib/contrib/dotzlib/DotZLib/Inflater.cs	/^    public class Inflater : CodecBase$/;"	c	namespace:DotZLib
Info	compat/zlib/contrib/dotzlib/DotZLib/DotZLib.cs	/^        public Info()$/;"	m	class:DotZLib.Info
Info	compat/zlib/contrib/dotzlib/DotZLib/DotZLib.cs	/^    public class Info$/;"	c	namespace:DotZLib
InfoArgsCmd	generic/tclCmdIL.c	/^InfoArgsCmd($/;"	f	typeref:typename:int	file:
InfoArgsCmd	generic/tclCmdIL.c	/^static Tcl_ObjCmdProc	InfoArgsCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
InfoBodyCmd	generic/tclCmdIL.c	/^InfoBodyCmd($/;"	f	typeref:typename:int	file:
InfoBodyCmd	generic/tclCmdIL.c	/^static Tcl_ObjCmdProc	InfoBodyCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
InfoClassCallCmd	generic/tclOOInfo.c	/^InfoClassCallCmd($/;"	f	typeref:typename:int	file:
InfoClassCallCmd	generic/tclOOInfo.c	/^static Tcl_ObjCmdProc InfoClassCallCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
InfoClassConstrCmd	generic/tclOOInfo.c	/^InfoClassConstrCmd($/;"	f	typeref:typename:int	file:
InfoClassConstrCmd	generic/tclOOInfo.c	/^static Tcl_ObjCmdProc InfoClassConstrCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
InfoClassDefnCmd	generic/tclOOInfo.c	/^InfoClassDefnCmd($/;"	f	typeref:typename:int	file:
InfoClassDefnCmd	generic/tclOOInfo.c	/^static Tcl_ObjCmdProc InfoClassDefnCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
InfoClassDefnNsCmd	generic/tclOOInfo.c	/^InfoClassDefnNsCmd($/;"	f	typeref:typename:int	file:
InfoClassDefnNsCmd	generic/tclOOInfo.c	/^static Tcl_ObjCmdProc InfoClassDefnNsCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
InfoClassDestrCmd	generic/tclOOInfo.c	/^InfoClassDestrCmd($/;"	f	typeref:typename:int	file:
InfoClassDestrCmd	generic/tclOOInfo.c	/^static Tcl_ObjCmdProc InfoClassDestrCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
InfoClassFiltersCmd	generic/tclOOInfo.c	/^InfoClassFiltersCmd($/;"	f	typeref:typename:int	file:
InfoClassFiltersCmd	generic/tclOOInfo.c	/^static Tcl_ObjCmdProc InfoClassFiltersCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
InfoClassForwardCmd	generic/tclOOInfo.c	/^InfoClassForwardCmd($/;"	f	typeref:typename:int	file:
InfoClassForwardCmd	generic/tclOOInfo.c	/^static Tcl_ObjCmdProc InfoClassForwardCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
InfoClassInstancesCmd	generic/tclOOInfo.c	/^InfoClassInstancesCmd($/;"	f	typeref:typename:int	file:
InfoClassInstancesCmd	generic/tclOOInfo.c	/^static Tcl_ObjCmdProc InfoClassInstancesCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
InfoClassMethodTypeCmd	generic/tclOOInfo.c	/^InfoClassMethodTypeCmd($/;"	f	typeref:typename:int	file:
InfoClassMethodTypeCmd	generic/tclOOInfo.c	/^static Tcl_ObjCmdProc InfoClassMethodTypeCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
InfoClassMethodsCmd	generic/tclOOInfo.c	/^InfoClassMethodsCmd($/;"	f	typeref:typename:int	file:
InfoClassMethodsCmd	generic/tclOOInfo.c	/^static Tcl_ObjCmdProc InfoClassMethodsCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
InfoClassMixinsCmd	generic/tclOOInfo.c	/^InfoClassMixinsCmd($/;"	f	typeref:typename:int	file:
InfoClassMixinsCmd	generic/tclOOInfo.c	/^static Tcl_ObjCmdProc InfoClassMixinsCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
InfoClassSubsCmd	generic/tclOOInfo.c	/^InfoClassSubsCmd($/;"	f	typeref:typename:int	file:
InfoClassSubsCmd	generic/tclOOInfo.c	/^static Tcl_ObjCmdProc InfoClassSubsCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
InfoClassSupersCmd	generic/tclOOInfo.c	/^InfoClassSupersCmd($/;"	f	typeref:typename:int	file:
InfoClassSupersCmd	generic/tclOOInfo.c	/^static Tcl_ObjCmdProc InfoClassSupersCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
InfoClassVariablesCmd	generic/tclOOInfo.c	/^InfoClassVariablesCmd($/;"	f	typeref:typename:int	file:
InfoClassVariablesCmd	generic/tclOOInfo.c	/^static Tcl_ObjCmdProc InfoClassVariablesCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
InfoCmdCountCmd	generic/tclCmdIL.c	/^InfoCmdCountCmd($/;"	f	typeref:typename:int	file:
InfoCmdCountCmd	generic/tclCmdIL.c	/^static Tcl_ObjCmdProc	InfoCmdCountCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
InfoCmdTypeCmd	generic/tclCmdIL.c	/^InfoCmdTypeCmd($/;"	f	typeref:typename:int	file:
InfoCmdTypeCmd	generic/tclCmdIL.c	/^static Tcl_ObjCmdProc	InfoCmdTypeCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
InfoCommandsCmd	generic/tclCmdIL.c	/^InfoCommandsCmd($/;"	f	typeref:typename:int	file:
InfoCommandsCmd	generic/tclCmdIL.c	/^static Tcl_ObjCmdProc	InfoCommandsCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
InfoCompleteCmd	generic/tclCmdIL.c	/^InfoCompleteCmd($/;"	f	typeref:typename:int	file:
InfoCompleteCmd	generic/tclCmdIL.c	/^static Tcl_ObjCmdProc	InfoCompleteCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
InfoDefaultCmd	generic/tclCmdIL.c	/^InfoDefaultCmd($/;"	f	typeref:typename:int	file:
InfoDefaultCmd	generic/tclCmdIL.c	/^static Tcl_ObjCmdProc	InfoDefaultCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
InfoErrorStackCmd	generic/tclCmdIL.c	/^InfoErrorStackCmd($/;"	f	typeref:typename:int	file:
InfoErrorStackCmd	generic/tclCmdIL.c	/^static Tcl_ObjCmdProc	InfoErrorStackCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
InfoFrameCmd	generic/tclCmdIL.c	/^InfoFrameCmd($/;"	f	typeref:typename:int	file:
InfoFrameCmd	generic/tclCmdIL.c	/^static Tcl_ObjCmdProc	InfoFrameCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
InfoFunctionsCmd	generic/tclCmdIL.c	/^InfoFunctionsCmd($/;"	f	typeref:typename:int	file:
InfoFunctionsCmd	generic/tclCmdIL.c	/^static Tcl_ObjCmdProc	InfoFunctionsCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
InfoHostnameCmd	generic/tclCmdIL.c	/^InfoHostnameCmd($/;"	f	typeref:typename:int	file:
InfoHostnameCmd	generic/tclCmdIL.c	/^static Tcl_ObjCmdProc	InfoHostnameCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
InfoLevelCmd	generic/tclCmdIL.c	/^InfoLevelCmd($/;"	f	typeref:typename:int	file:
InfoLevelCmd	generic/tclCmdIL.c	/^static Tcl_ObjCmdProc	InfoLevelCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
InfoLibraryCmd	generic/tclCmdIL.c	/^InfoLibraryCmd($/;"	f	typeref:typename:int	file:
InfoLibraryCmd	generic/tclCmdIL.c	/^static Tcl_ObjCmdProc	InfoLibraryCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
InfoLoadedCmd	generic/tclCmdIL.c	/^InfoLoadedCmd($/;"	f	typeref:typename:int	file:
InfoLoadedCmd	generic/tclCmdIL.c	/^static Tcl_ObjCmdProc	InfoLoadedCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
InfoNameOfExecutableCmd	generic/tclCmdIL.c	/^InfoNameOfExecutableCmd($/;"	f	typeref:typename:int	file:
InfoNameOfExecutableCmd	generic/tclCmdIL.c	/^static Tcl_ObjCmdProc	InfoNameOfExecutableCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
InfoObjectCallCmd	generic/tclOOInfo.c	/^InfoObjectCallCmd($/;"	f	typeref:typename:int	file:
InfoObjectCallCmd	generic/tclOOInfo.c	/^static Tcl_ObjCmdProc InfoObjectCallCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
InfoObjectClassCmd	generic/tclOOInfo.c	/^InfoObjectClassCmd($/;"	f	typeref:typename:int	file:
InfoObjectClassCmd	generic/tclOOInfo.c	/^static Tcl_ObjCmdProc InfoObjectClassCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
InfoObjectDefnCmd	generic/tclOOInfo.c	/^InfoObjectDefnCmd($/;"	f	typeref:typename:int	file:
InfoObjectDefnCmd	generic/tclOOInfo.c	/^static Tcl_ObjCmdProc InfoObjectDefnCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
InfoObjectFiltersCmd	generic/tclOOInfo.c	/^InfoObjectFiltersCmd($/;"	f	typeref:typename:int	file:
InfoObjectFiltersCmd	generic/tclOOInfo.c	/^static Tcl_ObjCmdProc InfoObjectFiltersCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
InfoObjectForwardCmd	generic/tclOOInfo.c	/^InfoObjectForwardCmd($/;"	f	typeref:typename:int	file:
InfoObjectForwardCmd	generic/tclOOInfo.c	/^static Tcl_ObjCmdProc InfoObjectForwardCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
InfoObjectIdCmd	generic/tclOOInfo.c	/^InfoObjectIdCmd($/;"	f	typeref:typename:int	file:
InfoObjectIdCmd	generic/tclOOInfo.c	/^static Tcl_ObjCmdProc InfoObjectIdCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
InfoObjectIsACmd	generic/tclOOInfo.c	/^InfoObjectIsACmd($/;"	f	typeref:typename:int	file:
InfoObjectIsACmd	generic/tclOOInfo.c	/^static Tcl_ObjCmdProc InfoObjectIsACmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
InfoObjectMethodTypeCmd	generic/tclOOInfo.c	/^InfoObjectMethodTypeCmd($/;"	f	typeref:typename:int	file:
InfoObjectMethodTypeCmd	generic/tclOOInfo.c	/^static Tcl_ObjCmdProc InfoObjectMethodTypeCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
InfoObjectMethodsCmd	generic/tclOOInfo.c	/^InfoObjectMethodsCmd($/;"	f	typeref:typename:int	file:
InfoObjectMethodsCmd	generic/tclOOInfo.c	/^static Tcl_ObjCmdProc InfoObjectMethodsCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
InfoObjectMixinsCmd	generic/tclOOInfo.c	/^InfoObjectMixinsCmd($/;"	f	typeref:typename:int	file:
InfoObjectMixinsCmd	generic/tclOOInfo.c	/^static Tcl_ObjCmdProc InfoObjectMixinsCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
InfoObjectNsCmd	generic/tclOOInfo.c	/^InfoObjectNsCmd($/;"	f	typeref:typename:int	file:
InfoObjectNsCmd	generic/tclOOInfo.c	/^static Tcl_ObjCmdProc InfoObjectNsCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
InfoObjectVariablesCmd	generic/tclOOInfo.c	/^InfoObjectVariablesCmd($/;"	f	typeref:typename:int	file:
InfoObjectVariablesCmd	generic/tclOOInfo.c	/^static Tcl_ObjCmdProc InfoObjectVariablesCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
InfoObjectVarsCmd	generic/tclOOInfo.c	/^InfoObjectVarsCmd($/;"	f	typeref:typename:int	file:
InfoObjectVarsCmd	generic/tclOOInfo.c	/^static Tcl_ObjCmdProc InfoObjectVarsCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
InfoPatchLevelCmd	generic/tclCmdIL.c	/^InfoPatchLevelCmd($/;"	f	typeref:typename:int	file:
InfoPatchLevelCmd	generic/tclCmdIL.c	/^static Tcl_ObjCmdProc	InfoPatchLevelCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
InfoProcsCmd	generic/tclCmdIL.c	/^InfoProcsCmd($/;"	f	typeref:typename:int	file:
InfoProcsCmd	generic/tclCmdIL.c	/^static Tcl_ObjCmdProc	InfoProcsCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
InfoScriptCmd	generic/tclCmdIL.c	/^InfoScriptCmd($/;"	f	typeref:typename:int	file:
InfoScriptCmd	generic/tclCmdIL.c	/^static Tcl_ObjCmdProc	InfoScriptCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
InfoSharedlibCmd	generic/tclCmdIL.c	/^InfoSharedlibCmd($/;"	f	typeref:typename:int	file:
InfoSharedlibCmd	generic/tclCmdIL.c	/^static Tcl_ObjCmdProc	InfoSharedlibCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
InfoTclVersionCmd	generic/tclCmdIL.c	/^InfoTclVersionCmd($/;"	f	typeref:typename:int	file:
InfoTclVersionCmd	generic/tclCmdIL.c	/^static Tcl_ObjCmdProc	InfoTclVersionCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
InfoTests	compat/zlib/contrib/dotzlib/DotZLib/UnitTests.cs	/^    public class InfoTests$/;"	c	namespace:DotZLibTests
Info_Version	compat/zlib/contrib/dotzlib/DotZLib/UnitTests.cs	/^        public void Info_Version()$/;"	m	class:DotZLibTests.InfoTests
InheritLimitsFromParent	generic/tclInterp.c	/^InheritLimitsFromParent($/;"	f	typeref:typename:void	file:
Init	library/icu.tcl	/^    proc Init {} {$/;"	p	namespace:::::tcl::unsupported::icu
InitArgsAndLocals	generic/tclProc.c	/^InitArgsAndLocals($/;"	f	typeref:typename:int	file:
InitByteCodeExecution	generic/tclExecute.c	/^InitByteCodeExecution($/;"	f	typeref:typename:void	file:
InitCallChain	generic/tclOOCall.c	/^InitCallChain($/;"	f	typeref:typename:void	file:
InitChainTable	generic/tclDictObj.c	/^InitChainTable($/;"	f	typeref:typename:void	file:
InitClassPath	generic/tclOO.c	/^InitClassPath($/;"	f	typeref:typename:void	file:
InitClassSystemRoots	generic/tclOO.c	/^InitClassSystemRoots($/;"	f	typeref:typename:void	file:
InitCmdFrame	generic/tclOOMethod.c	/^InitCmdFrame($/;"	f	typeref:typename:void	file:
InitDLLDirectoryName	win/tclWinLoad.c	/^InitDLLDirectoryName(void)$/;"	f	typeref:typename:int	file:
InitDefineContext	generic/tclOODefineCmds.c	/^InitDefineContext($/;"	f	typeref:typename:int	file:
InitEnsembleFromOptions	generic/tclEnsemble.c	/^InitEnsembleFromOptions($/;"	f	typeref:typename:Tcl_Command	file:
InitEnsembleRewrite	generic/tclOOMethod.c	/^InitEnsembleRewrite($/;"	f	typeref:typename:Tcl_Obj **	file:
InitFoundation	generic/tclOO.c	/^InitFoundation($/;"	f	typeref:typename:int	file:
InitLocalCache	generic/tclProc.c	/^InitLocalCache($/;"	f	typeref:typename:void	file:
InitMacLocaleInfoVar	unix/tclUnixInit.c	/^InitMacLocaleInfoVar($/;"	f	typeref:typename:void	file:
InitNotifier	unix/tclXtNotify.c	/^InitNotifier(void)$/;"	f	typeref:typename:void
InitProcessInfo	generic/tclProcess.c	/^InitProcessInfo($/;"	f	typeref:typename:void
InitReadableChannel	generic/tclZipfs.c	/^InitReadableChannel($/;"	f	typeref:typename:int	file:
InitResolvedLocals	generic/tclProc.c	/^InitResolvedLocals($/;"	f	typeref:typename:void	file:
InitSocketWindowClass	win/tclWinSock.c	/^InitSocketWindowClass(void)$/;"	f	typeref:typename:void	file:
InitTimer	generic/tclTimer.c	/^InitTimer(void)$/;"	f	typeref:typename:ThreadSpecificData *	file:
InitWritableChannel	generic/tclZipfs.c	/^InitWritableChannel($/;"	f	typeref:typename:int	file:
Init_Filter	compat/zlib/contrib/ada/zlib-streams.adb	/^      procedure Init_Filter$/;"	R	subprogram:Create	file:
Init_Filter	compat/zlib/contrib/ada/zlib-streams.adb	/^      procedure Init_Filter$/;"	r	subprogram:Create	file:
Init_Random	compat/zlib/contrib/ada/read.adb	/^   Init_Random : constant := 8;$/;"	n	subprogram:Read	file:
Init_Random	compat/zlib/contrib/ada/test.adb	/^   Init_Random : constant := 10;$/;"	n	subprogram:Test	file:
Initialize	library/clock.tcl	/^proc ::tcl::clock::Initialize {} {$/;"	p	namespace:::tcl::clock
Initialize	library/clockclassic.tcl	/^proc Initialize {} {$/;"	p
Initialize	win/tclWinDde.c	/^Initialize(void)$/;"	f	typeref:typename:void	file:
InitializeDefaultLibraryDir	win/tclWinInit.c	/^InitializeDefaultLibraryDir($/;"	f	typeref:typename:void	file:
InitializeDefaultLibraryDir	win/tclWinInit.c	/^static TclInitProcessGlobalValueProc	InitializeDefaultLibraryDir;$/;"	v	typeref:typename:TclInitProcessGlobalValueProc	file:
InitializeEncodingSearchPath	generic/tclEncoding.c	/^InitializeEncodingSearchPath($/;"	f	typeref:typename:void	file:
InitializeEncodingSearchPath	generic/tclEncoding.c	/^static TclInitProcessGlobalValueProc InitializeEncodingSearchPath;$/;"	v	typeref:typename:TclInitProcessGlobalValueProc	file:
InitializeHostName	unix/tclUnixSock.c	/^InitializeHostName($/;"	f	typeref:typename:void	file:
InitializeHostName	unix/tclUnixSock.c	/^static TclInitProcessGlobalValueProc InitializeHostName;$/;"	v	typeref:typename:TclInitProcessGlobalValueProc	file:
InitializeHostName	win/tclWinSock.c	/^InitializeHostName($/;"	f	typeref:typename:void
InitializeHostName	win/tclWinSock.c	/^static TclInitProcessGlobalValueProc InitializeHostName;$/;"	v	typeref:typename:TclInitProcessGlobalValueProc	file:
InitializeSourceLibraryDir	win/tclWinInit.c	/^InitializeSourceLibraryDir($/;"	f	typeref:typename:void	file:
InitializeSourceLibraryDir	win/tclWinInit.c	/^static TclInitProcessGlobalValueProc	InitializeSourceLibraryDir;$/;"	v	typeref:typename:TclInitProcessGlobalValueProc	file:
InjectHandler	generic/tclBasic.c	/^InjectHandler($/;"	f	typeref:typename:int	file:
InjectHandler	generic/tclBasic.c	/^static Tcl_NRPostProc InjectHandler;$/;"	v	typeref:typename:Tcl_NRPostProc	file:
InjectHandlerPostCall	generic/tclBasic.c	/^InjectHandlerPostCall($/;"	f	typeref:typename:int	file:
InjectHandlerPostCall	generic/tclBasic.c	/^static Tcl_NRPostProc InjectHandlerPostCall;$/;"	v	typeref:typename:Tcl_NRPostProc	file:
InsertPoint	generic/tclIO.c	/^#define InsertPoint(/;"	d	file:
InstLength	generic/tclOptimize.c	/^#define InstLength(/;"	d	file:
InstNameGetInternalRep	generic/tclDisassemble.c	/^#define InstNameGetInternalRep(/;"	d	file:
InstNameSetInternalRep	generic/tclDisassemble.c	/^#define InstNameSetInternalRep(/;"	d	file:
InstOperandType	generic/tclCompile.h	/^typedef enum InstOperandType {$/;"	g
InstOperandType	generic/tclCompile.h	/^} InstOperandType;$/;"	t	typeref:enum:InstOperandType
InstStringClassType	generic/tclCompile.h	/^typedef enum InstStringClassType {$/;"	g
InstStringClassType	generic/tclCompile.h	/^} InstStringClassType;$/;"	t	typeref:enum:InstStringClassType
InstallPrivateVariableMapping	generic/tclOODefineCmds.c	/^InstallPrivateVariableMapping($/;"	f	typeref:typename:void	file:
InstallStandardVariableMapping	generic/tclOODefineCmds.c	/^InstallStandardVariableMapping($/;"	f	typeref:typename:void	file:
InstructionDesc	generic/tclCompile.h	/^typedef struct InstructionDesc {$/;"	s
InstructionDesc	generic/tclCompile.h	/^} InstructionDesc;$/;"	t	typeref:struct:InstructionDesc
IntFieldAt	generic/tclClockFmt.c	/^#define IntFieldAt(/;"	d	file:
InteractiveState	generic/tclMain.c	/^} InteractiveState;$/;"	t	typeref:struct:__anonfdf182ea0308	file:
InternalEncodingFlags	generic/tclEncoding.c	/^enum InternalEncodingFlags {$/;"	g	file:
Internationalization of text	changes.md	/^## Internationalization of text$/;"	s
Interp	generic/tclInt.h	/^typedef struct Interp {$/;"	s
Interp	generic/tclInt.h	/^} Interp;$/;"	t	typeref:struct:Interp
InterpCmdResolver	generic/tclTest.c	/^InterpCmdResolver($/;"	f	typeref:typename:int	file:
InterpCompiledVarResolver	generic/tclTest.c	/^InterpCompiledVarResolver($/;"	f	typeref:typename:int	file:
InterpCompiledVarResolver	generic/tclTest.c	/^static Tcl_ResolveCompiledVarProc	InterpCompiledVarResolver;$/;"	v	typeref:typename:Tcl_ResolveCompiledVarProc	file:
InterpCreate	library/safe.tcl	/^proc ::safe::InterpCreate {$/;"	p	namespace:::safe
InterpInfo	generic/tclInterp.c	/^} InterpInfo;$/;"	t	typeref:struct:__anon913711770408	file:
InterpInfoDeleteProc	generic/tclInterp.c	/^InterpInfoDeleteProc($/;"	f	typeref:typename:void	file:
InterpInfoDeleteProc	generic/tclInterp.c	/^static Tcl_InterpDeleteProc InterpInfoDeleteProc;$/;"	v	typeref:typename:Tcl_InterpDeleteProc	file:
InterpInit	library/safe.tcl	/^proc ::safe::InterpInit {$/;"	p	namespace:::safe
InterpLibrary	generic/tclLoad.c	/^typedef struct InterpLibrary {$/;"	s	file:
InterpLibrary	generic/tclLoad.c	/^} InterpLibrary;$/;"	t	typeref:struct:InterpLibrary	file:
InterpNested	library/safe.tcl	/^proc ::safe::InterpNested {} {$/;"	p	namespace:::safe
InterpProcNR2	generic/tclProc.c	/^InterpProcNR2($/;"	f	typeref:typename:int	file:
InterpProcNR2	generic/tclProc.c	/^static Tcl_NRPostProc InterpProcNR2;$/;"	v	typeref:typename:Tcl_NRPostProc	file:
InterpSetConfig	library/safe.tcl	/^proc ::safe::InterpSetConfig {child access_path staticsok nestedok deletehook autoPath withAutoP/;"	p	namespace:::safe
InterpState	generic/tclClock.c	/^    } InterpState;$/;"	t	function:ClockSafeCatchCmd	typeref:struct:ClockSafeCatchCmd::__anond46bc7710208	file:
InterpState	generic/tclResult.c	/^} InterpState;$/;"	t	typeref:struct:__anon298490c40108	file:
InterpStatics	library/safe.tcl	/^proc ::safe::InterpStatics {} {$/;"	p	namespace:::safe
InterpVarResolver	generic/tclTest.c	/^InterpVarResolver($/;"	f	typeref:typename:int	file:
InterpretHMS	library/clockclassic.tcl	/^proc InterpretHMS { date } {$/;"	p
InterpretHMSP	library/clockclassic.tcl	/^proc InterpretHMSP { date } {$/;"	p
InterpretTwoDigitYear	library/clockclassic.tcl	/^proc InterpretTwoDigitYear { date baseTime$/;"	p
Invalid	generic/tclUtf.c	/^Invalid($/;"	f	typeref:typename:int	file:
InvalidateDictChain	generic/tclDictObj.c	/^InvalidateDictChain($/;"	f	typeref:typename:void	file:
Invoke	library/msgcat/msgcat.tcl	/^proc msgcat::Invoke {index arglist {ns ""} {resultname ""} {failerror 0}} {$/;"	p	namespace:msgcat
InvokeExitHandlers	generic/tclEvent.c	/^InvokeExitHandlers(void)$/;"	f	typeref:typename:void	file:
InvokeForwardMethod	generic/tclOOMethod.c	/^InvokeForwardMethod($/;"	f	typeref:typename:int	file:
InvokeImportedNRCmd	generic/tclNamesp.c	/^InvokeImportedNRCmd($/;"	f	typeref:typename:int	file:
InvokeImportedNRCmd	generic/tclNamesp.c	/^static Tcl_ObjCmdProc	InvokeImportedNRCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
InvokeProcedureMethod	generic/tclOOMethod.c	/^InvokeProcedureMethod($/;"	f	typeref:typename:int	file:
InvokeStringCommand	generic/tclBasic.c	/^InvokeStringCommand($/;"	f	typeref:typename:int
InvokeStringCommand	generic/tclBasic.c	/^static Tcl_ObjCmdProc	InvokeStringCommand;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
InvokeTclMethod	generic/tclIORChan.c	/^InvokeTclMethod($/;"	f	typeref:typename:int	file:
InvokeTclMethod	generic/tclIORTrans.c	/^InvokeTclMethod($/;"	f	typeref:typename:int	file:
IsACats	generic/tclOOInfo.c	/^    enum IsACats {$/;"	g	function:InfoObjectIsACmd	file:
IsBufferEmpty	generic/tclIO.c	/^#define IsBufferEmpty(/;"	d	file:
IsBufferFull	generic/tclIO.c	/^#define IsBufferFull(/;"	d	file:
IsBufferOverflowing	generic/tclIO.c	/^#define IsBufferOverflowing(/;"	d	file:
IsBufferReady	generic/tclIO.c	/^#define IsBufferReady(/;"	d	file:
IsClass	generic/tclOOInfo.c	/^	IsClass, IsMetaclass, IsMixin, IsObject, IsType$/;"	e	enum:InfoObjectIsACmd::IsACats	file:
IsCompactibleCompileEnv	generic/tclCompile.c	/^IsCompactibleCompileEnv($/;"	f	typeref:typename:int	file:
IsCryptHeaderValid	generic/tclZipfs.c	/^IsCryptHeaderValid($/;"	f	typeref:typename:int	file:
IsErroringNaNType	generic/tclExecute.c	/^#define IsErroringNaNType(/;"	d	file:
IsGregorianLeapYear	generic/tclClock.c	/^IsGregorianLeapYear($/;"	f	typeref:typename:int
IsGregorianLeapYear	generic/tclClockClassic.c	/^IsGregorianLeapYear($/;"	f	typeref:typename:int	file:
IsGregorianLeapYear	library/clock.tcl	/^proc ::tcl::clock::IsGregorianLeapYear { date } {$/;"	p	namespace:::tcl::clock
IsGregorianLeapYear	library/clockclassic.tcl	/^proc IsGregorianLeapYear { date } {$/;"	p
IsIn	win/nmakehlp.c	/^IsIn($/;"	f	typeref:typename:int	file:
IsLeapYear	generic/tclDate.c	/^#define IsLeapYear(/;"	d	file:
IsLeapYear	generic/tclDateClassic.c	/^#define IsLeapYear(/;"	d	file:
IsLink	generic/tclStrIdxTree.c	/^IsLink($/;"	f	typeref:typename:int	file:
IsMetaclass	generic/tclOOInfo.c	/^	IsClass, IsMetaclass, IsMixin, IsObject, IsType$/;"	e	enum:InfoObjectIsACmd::IsACats	file:
IsMixin	generic/tclOOInfo.c	/^	IsClass, IsMetaclass, IsMixin, IsObject, IsType$/;"	e	enum:InfoObjectIsACmd::IsACats	file:
IsObject	generic/tclOOInfo.c	/^	IsClass, IsMetaclass, IsMixin, IsObject, IsType$/;"	e	enum:InfoObjectIsACmd::IsACats	file:
IsOperator	generic/tclCompExpr.c	/^#define IsOperator(/;"	d	file:
IsPasswordValid	generic/tclZipfs.c	/^IsPasswordValid($/;"	f	typeref:typename:int	file:
IsPerfCounterAvailable	win/tclWinTime.c	/^IsPerfCounterAvailable(void)$/;"	f	typeref:typename:int	file:
IsPrivateDefine	generic/tclOODefineCmds.c	/^IsPrivateDefine($/;"	f	typeref:typename:int	file:
IsRawStream	generic/tclZlib.c	/^#define IsRawStream(/;"	d	file:
IsReparseTagValid	win/tclWinFile.c	/^#  define IsReparseTagValid(/;"	d	file:
IsRoot	generic/tclOO.c	/^#define IsRoot(/;"	d	file:
IsRootClass	generic/tclOO.c	/^#define IsRootClass(/;"	d	file:
IsRootObject	generic/tclOO.c	/^#define IsRootObject(/;"	d	file:
IsSeparatorOrNull	generic/tclPathObj.c	/^IsSeparatorOrNull($/;"	f	typeref:typename:int	file:
IsShared	generic/tclIO.c	/^IsShared($/;"	f	typeref:typename:int	file:
IsSpecial	generic/tclLink.c	/^IsSpecial($/;"	f	typeref:typename:int	file:
IsStatic	generic/tclLoad.c	/^IsStatic($/;"	f	typeref:typename:int	file:
IsStillValid	generic/tclOOCall.c	/^IsStillValid($/;"	f	typeref:typename:int	file:
IsTargetAddress	generic/tclOptimize.c	/^#define IsTargetAddress(/;"	d	file:
IsTimeNative	unix/tclUnixTime.c	/^IsTimeNative(void)$/;"	f	typeref:typename:int	file:
IsTimeNative	win/tclWinTime.c	/^IsTimeNative(void)$/;"	f	typeref:typename:int	file:
IsType	generic/tclOOInfo.c	/^	IsClass, IsMetaclass, IsMixin, IsObject, IsType$/;"	e	enum:InfoObjectIsACmd::IsACats	file:
Is_Open	compat/zlib/contrib/ada/zlib-streams.adb	/^   function Is_Open (Stream : Stream_Type) return Boolean is$/;"	r	package:ZLib.Streams	file:
Is_Open	compat/zlib/contrib/ada/zlib-streams.ads	/^   function Is_Open (Stream : Stream_Type) return Boolean;$/;"	R	packspec:ZLib.Streams
Is_Open	compat/zlib/contrib/ada/zlib.adb	/^   function Is_Open (Filter : in Filter_Type) return Boolean is$/;"	r	package:ZLib	file:
Is_Open	compat/zlib/contrib/ada/zlib.ads	/^   function Is_Open (Filter : in Filter_Type) return Boolean;$/;"	R	packspec:ZLib
Iso88591FromUtfProc	generic/tclEncoding.c	/^Iso88591FromUtfProc($/;"	f	typeref:typename:int	file:
Iso88591FromUtfProc	generic/tclEncoding.c	/^static Tcl_EncodingConvertProc	Iso88591FromUtfProc;$/;"	v	typeref:typename:Tcl_EncodingConvertProc	file:
Iso88591ToUtfProc	generic/tclEncoding.c	/^Iso88591ToUtfProc($/;"	f	typeref:typename:int	file:
Iso88591ToUtfProc	generic/tclEncoding.c	/^static Tcl_EncodingConvertProc	Iso88591ToUtfProc;$/;"	v	typeref:typename:Tcl_EncodingConvertProc	file:
IssueSwitchChainedTests	generic/tclCompCmdsSZ.c	/^IssueSwitchChainedTests($/;"	f	typeref:typename:void	file:
IssueSwitchJumpTable	generic/tclCompCmdsSZ.c	/^IssueSwitchJumpTable($/;"	f	typeref:typename:void	file:
IssueTryClausesFinallyInstructions	generic/tclCompCmdsSZ.c	/^IssueTryClausesFinallyInstructions($/;"	f	typeref:typename:int	file:
IssueTryClausesInstructions	generic/tclCompCmdsSZ.c	/^IssueTryClausesInstructions($/;"	f	typeref:typename:int	file:
IssueTryFinallyInstructions	generic/tclCompCmdsSZ.c	/^IssueTryFinallyInstructions($/;"	f	typeref:typename:int	file:
Item_First	compat/zlib/contrib/ada/zlib.adb	/^      Item_First : Ada.Streams.Stream_Element_Offset := Item'First;$/;"	v	subprogram:Read	file:
JDAY_1_JAN_1_CE_GREGORIAN	generic/tclClockClassic.c	/^#define JDAY_1_JAN_1_CE_GREGORIAN	/;"	d	file:
JDAY_1_JAN_1_CE_GREGORIAN	generic/tclDate.h	/^#define JDAY_1_JAN_1_CE_GREGORIAN	/;"	d
JDAY_1_JAN_1_CE_JULIAN	generic/tclClockClassic.c	/^#define JDAY_1_JAN_1_CE_JULIAN	/;"	d	file:
JDAY_1_JAN_1_CE_JULIAN	generic/tclDate.h	/^#define JDAY_1_JAN_1_CE_JULIAN	/;"	d
JDN_MAX_PRECBOUND	generic/tclClockFmt.c	/^#define JDN_MAX_PRECBOUND /;"	d	file:
JDN_MAX_PRECISION	generic/tclClockFmt.c	/^#define JDN_MAX_PRECISION /;"	d	file:
JOIN	generic/tcl.h	/^#  define JOIN(a,b) JOIN1/;"	d
JOIN	generic/tclInt.h	/^#  define JOIN(a,b) JOIN1/;"	d
JOIN1	generic/tcl.h	/^#  define JOIN1(/;"	d
JOIN1	generic/tclInt.h	/^#  define JOIN1(/;"	d
JULIAN_DAY_POSIX_EPOCH	generic/tclClockClassic.c	/^#define JULIAN_DAY_POSIX_EPOCH	/;"	d	file:
JULIAN_DAY_POSIX_EPOCH	generic/tclDate.h	/^#define JULIAN_DAY_POSIX_EPOCH	/;"	d
JULIAN_SEC_POSIX_EPOCH	generic/tclClockClassic.c	/^#define JULIAN_SEC_POSIX_EPOCH	/;"	d	file:
JULIAN_SEC_POSIX_EPOCH	generic/tclDate.h	/^#define JULIAN_SEC_POSIX_EPOCH	/;"	d
JUMP1	generic/tclCompCmdsSZ.c	/^#define JUMP1(/;"	d	file:
JUMP4	generic/tclCompCmdsSZ.c	/^#define JUMP4(/;"	d	file:
JUMPFIXUP_INIT_ENTRIES	generic/tclCompile.h	/^#define JUMPFIXUP_INIT_ENTRIES	/;"	d
JUMPTABLEINFO	generic/tclCompile.h	/^#define JUMPTABLEINFO(/;"	d
JUMP_PEEPHOLE_F	generic/tclExecute.c	/^#define JUMP_PEEPHOLE_F(/;"	d	file:
JUMP_PEEPHOLE_V	generic/tclExecute.c	/^#define JUMP_PEEPHOLE_V(/;"	d	file:
JoinableThread	generic/tclThreadJoin.c	/^typedef struct JoinableThread {$/;"	s	file:
JoinableThread	generic/tclThreadJoin.c	/^} JoinableThread;$/;"	t	typeref:struct:JoinableThread	file:
JumpFixup	generic/tclCompile.h	/^typedef struct JumpFixup {$/;"	s
JumpFixup	generic/tclCompile.h	/^} JumpFixup;$/;"	t	typeref:struct:JumpFixup
JumpFixupArray	generic/tclCompile.h	/^typedef struct JumpFixupArray {$/;"	s
JumpFixupArray	generic/tclCompile.h	/^} JumpFixupArray;$/;"	t	typeref:struct:JumpFixupArray
JumpList	generic/tclCompExpr.c	/^typedef struct JumpList {$/;"	s	file:
JumpList	generic/tclCompExpr.c	/^} JumpList;$/;"	t	typeref:struct:JumpList	file:
JumptableInfo	generic/tclCompile.h	/^typedef struct JumptableInfo {$/;"	s
JumptableInfo	generic/tclCompile.h	/^} JumptableInfo;$/;"	t	typeref:struct:JumptableInfo
KARATSUBA_MUL_CUTOFF	libtommath/bn_cutoffs.c	/^int KARATSUBA_MUL_CUTOFF = MP_DEFAULT_KARATSUBA_MUL_CUTOFF,$/;"	v	typeref:typename:int
KARATSUBA_SQR_CUTOFF	libtommath/bn_cutoffs.c	/^    KARATSUBA_SQR_CUTOFF = MP_DEFAULT_KARATSUBA_SQR_CUTOFF,$/;"	v	typeref:typename:int
KEEPALIVE	tests/httpTestScript.tcl	/^proc httpTestScript::KEEPALIVE {b} {$/;"	p	namespace:httpTestScript
KEYWORDS	doc/Access.3	/^.SH KEYWORDS$/;"	s	title:Tcl_Access
KEYWORDS	doc/AddErrInfo.3	/^.SH KEYWORDS$/;"	s	title:Tcl_AddErrorInfo
KEYWORDS	doc/Alloc.3	/^.SH KEYWORDS$/;"	s	title:Tcl_Alloc
KEYWORDS	doc/AllowExc.3	/^.SH KEYWORDS$/;"	s	title:Tcl_AllowExceptions
KEYWORDS	doc/AppInit.3	/^.SH KEYWORDS$/;"	s	title:Tcl_AppInit
KEYWORDS	doc/AssocData.3	/^.SH KEYWORDS$/;"	s	title:Tcl_SetAssocData
KEYWORDS	doc/Async.3	/^.SH KEYWORDS$/;"	s	title:Tcl_AsyncCreate
KEYWORDS	doc/BackgdErr.3	/^.SH KEYWORDS$/;"	s	title:Tcl_BackgroundError
KEYWORDS	doc/BoolObj.3	/^.SH KEYWORDS$/;"	s	title:Tcl_BooleanObj
KEYWORDS	doc/ByteArrObj.3	/^.SH KEYWORDS$/;"	s	title:Tcl_ByteArrayObj
KEYWORDS	doc/CallDel.3	/^.SH KEYWORDS$/;"	s	title:Tcl_CallWhenDeleted
KEYWORDS	doc/Cancel.3	/^.SH KEYWORDS$/;"	s	title:Tcl_Cancel
KEYWORDS	doc/ChnlStack.3	/^.SH KEYWORDS$/;"	s	title:Tcl_StackChannel
KEYWORDS	doc/Class.3	/^.SH KEYWORDS$/;"	s	title:Tcl_Class
KEYWORDS	doc/CmdCmplt.3	/^.SH KEYWORDS$/;"	s	title:Tcl_CommandComplete
KEYWORDS	doc/Concat.3	/^.SH KEYWORDS$/;"	s	title:Tcl_Concat
KEYWORDS	doc/CrtAlias.3	/^.SH KEYWORDS$/;"	s	title:Tcl_CreateAlias
KEYWORDS	doc/CrtChannel.3	/^.SH KEYWORDS$/;"	s	title:Tcl_CreateChannel
KEYWORDS	doc/CrtChnlHdlr.3	/^.SH KEYWORDS$/;"	s	title:Tcl_CreateChannelHandler
KEYWORDS	doc/CrtCloseHdlr.3	/^.SH KEYWORDS$/;"	s	title:Tcl_CreateCloseHandler
KEYWORDS	doc/CrtCommand.3	/^.SH KEYWORDS$/;"	s	title:Tcl_CreateCommand
KEYWORDS	doc/CrtFileHdlr.3	/^.SH KEYWORDS$/;"	s	title:Tcl_CreateFileHandler
KEYWORDS	doc/CrtInterp.3	/^.SH KEYWORDS$/;"	s	title:Tcl_CreateInterp
KEYWORDS	doc/CrtObjCmd.3	/^.SH KEYWORDS$/;"	s	title:Tcl_CreateObjCommand
KEYWORDS	doc/CrtTimerHdlr.3	/^.SH KEYWORDS$/;"	s	title:Tcl_CreateTimerHandler
KEYWORDS	doc/CrtTrace.3	/^.SH KEYWORDS$/;"	s	title:Tcl_CreateTrace
KEYWORDS	doc/DString.3	/^.SH KEYWORDS$/;"	s	title:Tcl_DString
KEYWORDS	doc/DetachPids.3	/^.SH KEYWORDS$/;"	s	title:Tcl_DetachPids
KEYWORDS	doc/DictObj.3	/^.SH KEYWORDS$/;"	s	title:Tcl_DictObj
KEYWORDS	doc/DoOneEvent.3	/^.SH KEYWORDS$/;"	s	title:Tcl_DoOneEvent
KEYWORDS	doc/DoWhenIdle.3	/^.SH KEYWORDS$/;"	s	title:Tcl_DoWhenIdle
KEYWORDS	doc/DoubleObj.3	/^.SH KEYWORDS$/;"	s	title:Tcl_DoubleObj
KEYWORDS	doc/DumpActiveMemory.3	/^.SH KEYWORDS$/;"	s	title:Tcl_DumpActiveMemory
KEYWORDS	doc/Encoding.3	/^.SH KEYWORDS$/;"	s	title:Tcl_GetEncoding
KEYWORDS	doc/Ensemble.3	/^.SH KEYWORDS$/;"	s	title:Tcl_Ensemble
KEYWORDS	doc/Environment.3	/^.SH KEYWORDS$/;"	s	title:Tcl_PutEnv
KEYWORDS	doc/Eval.3	/^.SH KEYWORDS$/;"	s	title:Tcl_Eval
KEYWORDS	doc/Exit.3	/^.SH KEYWORDS$/;"	s	title:Tcl_Exit
KEYWORDS	doc/ExprLong.3	/^.SH KEYWORDS$/;"	s	title:Tcl_ExprLong
KEYWORDS	doc/ExprLongObj.3	/^.SH KEYWORDS$/;"	s	title:Tcl_ExprLongObj
KEYWORDS	doc/FileSystem.3	/^.SH KEYWORDS$/;"	s	title:Filesystem
KEYWORDS	doc/FindExec.3	/^.SH KEYWORDS$/;"	s	title:Tcl_FindExecutable
KEYWORDS	doc/GetCwd.3	/^.SH KEYWORDS$/;"	s	title:Tcl_GetCwd
KEYWORDS	doc/GetHostName.3	/^.SH KEYWORDS$/;"	s	title:Tcl_GetHostName
KEYWORDS	doc/GetIndex.3	/^.SH KEYWORDS$/;"	s	title:Tcl_GetIndexFromObj
KEYWORDS	doc/GetInt.3	/^.SH KEYWORDS$/;"	s	title:Tcl_GetInt
KEYWORDS	doc/GetOpnFl.3	/^.SH KEYWORDS$/;"	s	title:Tcl_GetOpenFile
KEYWORDS	doc/GetStdChan.3	/^.SH KEYWORDS$/;"	s	title:Tcl_GetStdChannel
KEYWORDS	doc/GetTime.3	/^.SH KEYWORDS$/;"	s	title:Tcl_GetTime
KEYWORDS	doc/GetVersion.3	/^.SH KEYWORDS$/;"	s	title:Tcl_GetVersion
KEYWORDS	doc/Hash.3	/^.SH KEYWORDS$/;"	s	title:Tcl_Hash
KEYWORDS	doc/Init.3	/^.SH KEYWORDS$/;"	s	title:Tcl_Init
KEYWORDS	doc/InitStubs.3	/^.SH KEYWORDS$/;"	s	title:Tcl_InitStubs
KEYWORDS	doc/InitSubSyst.3	/^.SH KEYWORDS$/;"	s	title:Tcl_InitSubsystems
KEYWORDS	doc/IntObj.3	/^.SH KEYWORDS$/;"	s	title:Tcl_IntObj
KEYWORDS	doc/Limit.3	/^.SH KEYWORDS$/;"	s	title:Tcl_LimitCheck
KEYWORDS	doc/LinkVar.3	/^.SH KEYWORDS$/;"	s	title:Tcl_LinkVar
KEYWORDS	doc/ListObj.3	/^.SH KEYWORDS$/;"	s	title:Tcl_ListObj
KEYWORDS	doc/Load.3	/^.SH KEYWORDS$/;"	s	title:Load
KEYWORDS	doc/Method.3	/^.SH KEYWORDS$/;"	s	title:Tcl_Method
KEYWORDS	doc/NRE.3	/^.SH KEYWORDS$/;"	s	title:NRE
KEYWORDS	doc/Namespace.3	/^.SH KEYWORDS$/;"	s	title:Tcl_Namespace
KEYWORDS	doc/Notifier.3	/^.SH KEYWORDS$/;"	s	title:Notifier
KEYWORDS	doc/Number.3	/^.SH KEYWORDS$/;"	s	title:Tcl_GetNumber
KEYWORDS	doc/OOInitStubs.3	/^.SH KEYWORDS$/;"	s	title:Tcl_OOInitStubs
KEYWORDS	doc/Object.3	/^.SH KEYWORDS$/;"	s	title:Tcl_Obj
KEYWORDS	doc/ObjectType.3	/^.SH KEYWORDS$/;"	s	title:Tcl_ObjType
KEYWORDS	doc/OpenFileChnl.3	/^.SH KEYWORDS$/;"	s	title:Tcl_OpenFileChannel
KEYWORDS	doc/OpenTcp.3	/^.SH KEYWORDS$/;"	s	title:Tcl_OpenTcpClient
KEYWORDS	doc/Panic.3	/^.SH KEYWORDS$/;"	s	title:Tcl_Panic
KEYWORDS	doc/ParseArgs.3	/^.SH KEYWORDS$/;"	s	title:Tcl_ParseArgsObjv
KEYWORDS	doc/ParseCmd.3	/^.SH KEYWORDS$/;"	s	title:Tcl_ParseCommand
KEYWORDS	doc/PkgRequire.3	/^.SH KEYWORDS$/;"	s	title:Tcl_PkgRequire
KEYWORDS	doc/Preserve.3	/^.SH KEYWORDS$/;"	s	title:Tcl_Preserve
KEYWORDS	doc/PrintDbl.3	/^.SH KEYWORDS$/;"	s	title:Tcl_PrintDouble
KEYWORDS	doc/RecEvalObj.3	/^.SH KEYWORDS$/;"	s	title:Tcl_RecordAndEvalObj
KEYWORDS	doc/RecordEval.3	/^.SH KEYWORDS$/;"	s	title:Tcl_RecordAndEval
KEYWORDS	doc/RegConfig.3	/^.SH KEYWORDS$/;"	s	title:Tcl_RegisterConfig
KEYWORDS	doc/RegExp.3	/^.SH KEYWORDS$/;"	s	title:Tcl_RegExpMatch
KEYWORDS	doc/SaveInterpState.3	/^.SH KEYWORDS$/;"	s	title:Tcl_SaveInterpState
KEYWORDS	doc/SetChanErr.3	/^.SH KEYWORDS$/;"	s	title:Tcl_SetChannelError
KEYWORDS	doc/SetErrno.3	/^.SH KEYWORDS$/;"	s	title:Tcl_SetErrno
KEYWORDS	doc/SetRecLmt.3	/^.SH KEYWORDS$/;"	s	title:Tcl_SetRecursionLimit
KEYWORDS	doc/SetResult.3	/^.SH KEYWORDS$/;"	s	title:Tcl_SetResult
KEYWORDS	doc/SetVar.3	/^.SH KEYWORDS$/;"	s	title:Tcl_SetVar
KEYWORDS	doc/Signal.3	/^.SH KEYWORDS$/;"	s	title:Tcl_SignalId
KEYWORDS	doc/Sleep.3	/^.SH KEYWORDS$/;"	s	title:Tcl_Sleep
KEYWORDS	doc/SourceRCFile.3	/^.SH KEYWORDS$/;"	s	title:Tcl_SourceRCFile
KEYWORDS	doc/SplitList.3	/^.SH KEYWORDS$/;"	s	title:Tcl_SplitList
KEYWORDS	doc/SplitPath.3	/^.SH KEYWORDS$/;"	s	title:Tcl_SplitPath
KEYWORDS	doc/StaticLibrary.3	/^.SH KEYWORDS$/;"	s	title:Tcl_StaticLibrary
KEYWORDS	doc/StdChannels.3	/^.SH KEYWORDS$/;"	s	title:Standard Channels
KEYWORDS	doc/StrMatch.3	/^.SH KEYWORDS$/;"	s	title:Tcl_StringMatch
KEYWORDS	doc/StringObj.3	/^.SH KEYWORDS$/;"	s	title:Tcl_StringObj
KEYWORDS	doc/SubstObj.3	/^.SH KEYWORDS$/;"	s	title:Tcl_SubstObj
KEYWORDS	doc/TCL_MEM_DEBUG.3	/^.SH KEYWORDS$/;"	s	title:TCL_MEM_DEBUG
KEYWORDS	doc/TclZlib.3	/^.SH "KEYWORDS"$/;"	s	title:TclZlib
KEYWORDS	doc/Tcl_Main.3	/^.SH KEYWORDS$/;"	s	title:Tcl_Main
KEYWORDS	doc/Thread.3	/^.SH KEYWORDS$/;"	s	title:Threads
KEYWORDS	doc/ToUpper.3	/^.SH KEYWORDS$/;"	s	title:Tcl_UtfToUpper
KEYWORDS	doc/TraceCmd.3	/^.SH KEYWORDS$/;"	s	title:Tcl_TraceCommand
KEYWORDS	doc/TraceVar.3	/^.SH KEYWORDS$/;"	s	title:Tcl_TraceVar
KEYWORDS	doc/Translate.3	/^.SH KEYWORDS$/;"	s	title:Tcl_TranslateFileName
KEYWORDS	doc/UniCharIsAlpha.3	/^.SH KEYWORDS$/;"	s	title:Tcl_UniCharIsAlpha
KEYWORDS	doc/UpVar.3	/^.SH KEYWORDS$/;"	s	title:Tcl_UpVar
KEYWORDS	doc/Utf.3	/^.SH KEYWORDS$/;"	s	title:Utf
KEYWORDS	doc/WrongNumArgs.3	/^.SH KEYWORDS$/;"	s	title:Tcl_WrongNumArgs
KEYWORDS	doc/tclsh.1	/^.SH KEYWORDS$/;"	s	title:tclsh
KEYWORDS	doc/zipfs.3	/^.SH KEYWORDS$/;"	s	title:Tclzipfs
KEY_CODE	generic/tclResult.c	/^    KEY_CODE,	KEY_ERRORCODE,	KEY_ERRORINFO,	KEY_ERRORLINE,$/;"	e	enum:returnKeys	file:
KEY_ERRORCODE	generic/tclResult.c	/^    KEY_CODE,	KEY_ERRORCODE,	KEY_ERRORINFO,	KEY_ERRORLINE,$/;"	e	enum:returnKeys	file:
KEY_ERRORINFO	generic/tclResult.c	/^    KEY_CODE,	KEY_ERRORCODE,	KEY_ERRORINFO,	KEY_ERRORLINE,$/;"	e	enum:returnKeys	file:
KEY_ERRORLINE	generic/tclResult.c	/^    KEY_CODE,	KEY_ERRORCODE,	KEY_ERRORINFO,	KEY_ERRORLINE,$/;"	e	enum:returnKeys	file:
KEY_ERRORSTACK	generic/tclResult.c	/^    KEY_LEVEL,	KEY_OPTIONS,	KEY_ERRORSTACK,	KEY_LAST$/;"	e	enum:returnKeys	file:
KEY_LAST	generic/tclResult.c	/^    KEY_LEVEL,	KEY_OPTIONS,	KEY_ERRORSTACK,	KEY_LAST$/;"	e	enum:returnKeys	file:
KEY_LEVEL	generic/tclResult.c	/^    KEY_LEVEL,	KEY_OPTIONS,	KEY_ERRORSTACK,	KEY_LAST$/;"	e	enum:returnKeys	file:
KEY_OPTIONS	generic/tclResult.c	/^    KEY_LEVEL,	KEY_OPTIONS,	KEY_ERRORSTACK,	KEY_LAST$/;"	e	enum:returnKeys	file:
KEY_WOW64_32KEY	win/tclWinReg.c	/^#   define KEY_WOW64_32KEY	/;"	d	file:
KEY_WOW64_64KEY	win/tclWinReg.c	/^#   define KEY_WOW64_64KEY	/;"	d	file:
KIND_RO	generic/tclOOProp.c	/^	KIND_RO, KIND_RW, KIND_WO$/;"	e	enum:TclOODefinePropertyCmd::Kinds	file:
KIND_RW	generic/tclOOProp.c	/^	KIND_RO, KIND_RW, KIND_WO$/;"	e	enum:TclOODefinePropertyCmd::Kinds	file:
KIND_WO	generic/tclOOProp.c	/^	KIND_RO, KIND_RW, KIND_WO$/;"	e	enum:TclOODefinePropertyCmd::Kinds	file:
KNOWN_STATE	generic/tclOOCall.c	/^    KNOWN_STATE = (DEFINITE_PROTECTED | DEFINITE_PUBLIC),$/;"	e	enum:CallChainFlags	file:
KeepSocket	library/http/http.tcl	/^proc http::KeepSocket {token} {$/;"	p	namespace:http
KeysIdx	win/tclWinReg.c	/^	BroadcastIdx, DeleteIdx, GetIdx, KeysIdx, SetIdx, TypeIdx, ValuesIdx$/;"	e	enum:RegistryObjCmd::SubCmdIdx	file:
KillFoundation	generic/tclOO.c	/^KillFoundation($/;"	f	typeref:typename:void	file:
KillFoundation	generic/tclOO.c	/^static Tcl_InterpDeleteProc	KillFoundation;$/;"	v	typeref:typename:Tcl_InterpDeleteProc	file:
Kinds	generic/tclOOProp.c	/^    enum Kinds {$/;"	g	function:TclOODefinePropertyCmd	file:
L	compat/zlib/contrib/ada/buffer_demo.adb	/^      L               : Stream_Element_Offset;$/;"	v	anon:declare	file:
LABEL_SECURITY_INFORMATION	win/tclWinPort.h	/^#   define LABEL_SECURITY_INFORMATION /;"	d
LACON	generic/regcomp.c	/^#define	LACON	/;"	d	file:
LASTTYPE	generic/regc_lex.c	/^#define	LASTTYPE(/;"	d	file:
LAST_INST_OPCODE	generic/tclCompile.h	/^    LAST_INST_OPCODE$/;"	e	enum:TclInstruction
LD	compat/zlib/contrib/delphi/zlibd32.mak	/^LD = bcc32$/;"	m
LD	compat/zlib/contrib/pascal/zlibd32.mak	/^LD = bcc32$/;"	m
LD	compat/zlib/nintendods/Makefile	/^	export LD	:=	$(CC)$/;"	m
LD	compat/zlib/nintendods/Makefile	/^	export LD	:=	$(CXX)$/;"	m
LDAIX_SRC	unix/tcl.m4	/^    AC_SUBST(LDAIX_SRC)$/;"	s
LDCONFIG	compat/zlib/Makefile.in	/^LDCONFIG=ldconfig$/;"	m
LDFLAGS	compat/zlib/Makefile.in	/^LDFLAGS=$/;"	m
LDFLAGS	compat/zlib/contrib/delphi/zlibd32.mak	/^LDFLAGS =$/;"	m
LDFLAGS	compat/zlib/contrib/pascal/zlibd32.mak	/^LDFLAGS =$/;"	m
LDFLAGS	compat/zlib/nintendods/Makefile	/^LDFLAGS	=	-specs=ds_arm9.specs -g $(ARCH) -Wl,-Map,$(notdir $*.map)$/;"	m
LDFLAGS	unix/Makefile.in	/^LDFLAGS			= @LDFLAGS_DEFAULT@ @LDFLAGS@$/;"	m
LDFLAGS	unix/dltest/Makefile.in	/^LDFLAGS			= @LDFLAGS_DEFAULT@ @LDFLAGS@$/;"	m
LDFLAGS	unix/tcl.m4	/^    AC_SUBST(LDFLAGS)$/;"	s
LDFLAGS	win/Makefile.in	/^LDFLAGS		= @LDFLAGS@ @LDFLAGS_DEFAULT@$/;"	m
LDFLAGS_CONSOLE	win/Makefile.in	/^LDFLAGS_CONSOLE	= @LDFLAGS_CONSOLE@$/;"	m
LDFLAGS_CONSOLE	win/configure.ac	/^AC_SUBST(LDFLAGS_CONSOLE)$/;"	s
LDFLAGS_DEBUG	unix/Makefile.in	/^LDFLAGS_DEBUG		= @LDFLAGS_DEBUG@$/;"	m
LDFLAGS_DEBUG	unix/dltest/Makefile.in	/^LDFLAGS_DEBUG		= @LDFLAGS_DEBUG@$/;"	m
LDFLAGS_DEBUG	unix/tcl.m4	/^    AC_SUBST(LDFLAGS_DEBUG)$/;"	s
LDFLAGS_DEBUG	win/Makefile.in	/^LDFLAGS_DEBUG   = @LDFLAGS_DEBUG@$/;"	m
LDFLAGS_DEBUG	win/configure.ac	/^AC_SUBST(LDFLAGS_DEBUG)$/;"	s
LDFLAGS_DEFAULT	unix/tcl.m4	/^    AC_SUBST(LDFLAGS_DEFAULT)$/;"	s
LDFLAGS_DEFAULT	win/configure.ac	/^AC_SUBST(LDFLAGS_DEFAULT)$/;"	s
LDFLAGS_DEFAULT	win/tcl.m4	/^    AC_SUBST(LDFLAGS_DEFAULT)$/;"	s
LDFLAGS_OPTIMIZE	unix/Makefile.in	/^LDFLAGS_OPTIMIZE	= @LDFLAGS_OPTIMIZE@$/;"	m
LDFLAGS_OPTIMIZE	unix/dltest/Makefile.in	/^LDFLAGS_OPTIMIZE	= @LDFLAGS_OPTIMIZE@$/;"	m
LDFLAGS_OPTIMIZE	unix/tcl.m4	/^    AC_SUBST(LDFLAGS_OPTIMIZE)$/;"	s
LDFLAGS_OPTIMIZE	win/Makefile.in	/^LDFLAGS_OPTIMIZE = @LDFLAGS_OPTIMIZE@$/;"	m
LDFLAGS_OPTIMIZE	win/configure.ac	/^AC_SUBST(LDFLAGS_OPTIMIZE)$/;"	s
LDFLAGS_WINDOW	win/Makefile.in	/^LDFLAGS_WINDOW	= @LDFLAGS_WINDOW@$/;"	m
LDFLAGS_WINDOW	win/configure.ac	/^AC_SUBST(LDFLAGS_WINDOW)$/;"	s
LDSHARED	compat/zlib/Makefile.in	/^LDSHARED=$(CC)$/;"	m
LDSHAREDLIBC	compat/zlib/Makefile.in	/^LDSHAREDLIBC=-lc$/;"	m
LD_LIBRARY_PATH_VAR	unix/configure.ac	/^AC_SUBST(LD_LIBRARY_PATH_VAR)$/;"	s
LD_SEARCH_FLAGS	unix/Makefile.in	/^LD_SEARCH_FLAGS	= @LD_SEARCH_FLAGS@$/;"	m
LD_SEARCH_FLAGS	unix/tcl.m4	/^    AC_SUBST(LD_SEARCH_FLAGS)$/;"	s
LEADING_RADIX_POINT	generic/tclStrToD.c	/^	LEADING_RADIX_POINT, FRACTION,$/;"	e	enum:TclParseNumber::State	file:
LEAF	generic/tclCompExpr.c	/^#define LEAF	/;"	d	file:
LEFT_SHIFT	generic/tclCompExpr.c	/^#define LEFT_SHIFT	/;"	d	file:
LEN	compat/zlib/contrib/infback9/inflate9.h	/^            LEN,        \/* i: waiting for length\/lit code *\/$/;"	e	enum:__anonf28101a00103
LEN	compat/zlib/examples/zran.c	/^#define LEN /;"	d	file:
LEN	compat/zlib/inflate.h	/^            LEN,        \/* i: waiting for length\/lit\/eob code *\/$/;"	e	enum:__anon6bf0a2910103
LENEXT	compat/zlib/inflate.h	/^            LENEXT,     \/* i: waiting for length extra bits *\/$/;"	e	enum:__anon6bf0a2910103
LENGTH	compat/zlib/inflate.h	/^    LENGTH,     \/* i: waiting for 32-bit length (gzip) *\/$/;"	e	enum:__anon6bf0a2910103
LENGTH_CODES	compat/zlib/deflate.h	/^#define LENGTH_CODES /;"	d
LENLENS	compat/zlib/inflate.h	/^        LENLENS,    \/* i: waiting for code length code lengths *\/$/;"	e	enum:__anon6bf0a2910103
LENS	compat/zlib/contrib/infback9/inftree9.h	/^    LENS,$/;"	e	enum:__anon80eb2aca0203
LENS	compat/zlib/inftrees.h	/^    LENS,$/;"	e	enum:__anon78703c4e0203
LEN_	compat/zlib/inflate.h	/^            LEN_,       \/* i: same as LEN below, but only first time in *\/$/;"	e	enum:__anon6bf0a2910103
LEQ	generic/tclCompExpr.c	/^#define LEQ	/;"	d	file:
LESS	generic/tclCompExpr.c	/^#define LESS	/;"	d	file:
LETTER_NUMBER	generic/tclUniData.c	/^    LETTER_NUMBER,$/;"	e	enum:__anon910316cb0103	file:
LGCHUNK	compat/zlib/examples/gzappend.c	/^#define LGCHUNK /;"	d	file:
LIBDIR	macosx/GNUmakefile	/^LIBDIR			?= ${INSTALL_PATH}$/;"	m
LIBDIRS	compat/zlib/nintendods/Makefile	/^LIBDIRS	:=	$(LIBNDS)$/;"	m
LIBPREFIX	win/configure.ac	/^AC_SUBST(LIBPREFIX)$/;"	s
LIBRARIES	win/configure.ac	/^AC_SUBST(LIBRARIES)$/;"	s
LIBRARY_DIR	win/Makefile.in	/^LIBRARY_DIR             = $(shell $(CYGPATH) '$(LIBRARY_DIR1)')$/;"	m
LIBRARY_DIR1	win/Makefile.in	/^LIBRARY_DIR1		= $(shell cd '$(ROOT_DIR_NATIVE)\/library' ; pwd -P)$/;"	m
LIBRARY_SIZE	generic/tclZipfs.c	/^#   define LIBRARY_SIZE	/;"	d	file:
LIBRARY_SIZE	unix/tclUnixInit.c	/^#define LIBRARY_SIZE	/;"	d	file:
LIBRARY_SIZE	win/tclWinInit.c	/^#define LIBRARY_SIZE	/;"	d	file:
LIBS	compat/zlib/Makefile.in	/^LIBS=$(STATICLIB) $(SHAREDLIBV)$/;"	m
LIBS	unix/Makefile.in	/^LIBS		= @TCL_LIBS@$/;"	m
LIBS	unix/dltest/Makefile.in	/^LIBS =			@TCL_BUILD_STUB_LIB_SPEC@ @TCL_LIBS@$/;"	m
LIBS	win/Makefile.in	/^LIBS		= @LIBS@ $(shell $(CYGPATH) '@ZLIB_LIBS@') $(shell $(CYGPATH) '@TOMMATH_LIBS@')$/;"	m
LIBS	win/configure.ac	/^AC_SUBST(LIBS)$/;"	s
LIBSUFFIX	win/Makefile.in	/^LIBSUFFIX		= @LIBSUFFIX@$/;"	m
LIBSUFFIX	win/configure.ac	/^AC_SUBST(LIBSUFFIX)$/;"	s
LIBS_GUI	win/configure.ac	/^AC_SUBST(LIBS_GUI)$/;"	s
LIB_FILE	unix/Makefile.in	/^LIB_FILE		= ${TCL_LIB_FILE}$/;"	m
LIB_INSTALL_DIR	unix/Makefile.in	/^LIB_INSTALL_DIR		= $(INSTALL_ROOT)$(libdir)$/;"	m
LIB_INSTALL_DIR	win/Makefile.in	/^LIB_INSTALL_DIR		= $(INSTALL_ROOT)$(libdir)$/;"	m
LIB_RUNTIME_DIR	unix/Makefile.in	/^LIB_RUNTIME_DIR		= $(libdir)$/;"	m
LIB_RUNTIME_DIR	win/Makefile.in	/^LIB_RUNTIME_DIR		= $(libdir)$/;"	m
LIMIT	generic/tclOOMethod.c	/^#define LIMIT /;"	d	file:
LIMIT CALLBACKS	doc/Limit.3	/^.SS "LIMIT CALLBACKS"$/;"	S	section:Tcl_LimitCheck""LIMIT CONFIGURATION
LIMIT CHECKING API	doc/Limit.3	/^.SH "LIMIT CHECKING API"$/;"	s	title:Tcl_LimitCheck
LIMIT CONFIGURATION	doc/Limit.3	/^.SH "LIMIT CONFIGURATION"$/;"	s	title:Tcl_LimitCheck
LIMIT_HANDLER_ACTIVE	generic/tclInterp.c	/^    LIMIT_HANDLER_ACTIVE = 1,	\/* The handler is currently being processed;$/;"	e	enum:LimitHandlerFlags	file:
LIMIT_HANDLER_DELETED	generic/tclInterp.c	/^    LIMIT_HANDLER_DELETED = 2	\/* The handler has been deleted. This should$/;"	e	enum:LimitHandlerFlags	file:
LIMIT_TYPE_COMMANDS	generic/tclInterp.c	/^	    LIMIT_TYPE_COMMANDS, LIMIT_TYPE_TIME$/;"	e	enum:NRChildCmd::LimitTypes	file:
LIMIT_TYPE_COMMANDS	generic/tclInterp.c	/^	    LIMIT_TYPE_COMMANDS, LIMIT_TYPE_TIME$/;"	e	enum:NRInterpCmd::LimitTypes	file:
LIMIT_TYPE_TIME	generic/tclInterp.c	/^	    LIMIT_TYPE_COMMANDS, LIMIT_TYPE_TIME$/;"	e	enum:NRChildCmd::LimitTypes	file:
LIMIT_TYPE_TIME	generic/tclInterp.c	/^	    LIMIT_TYPE_COMMANDS, LIMIT_TYPE_TIME$/;"	e	enum:NRInterpCmd::LimitTypes	file:
LINE_LENGTH	generic/tclUtf.c	/^#define LINE_LENGTH /;"	d	file:
LINE_SEPARATOR	generic/tclUniData.c	/^    LINE_SEPARATOR,$/;"	e	enum:__anon910316cb0103	file:
LINKER	compat/zlib/watcom/watcom_f.mak	/^LINKER   = wcl386$/;"	m
LINKER	compat/zlib/watcom/watcom_l.mak	/^LINKER   = wcl$/;"	m
LINKPROC	doc/FileSystem.3	/^.SS LINKPROC$/;"	S	section:Filesystem""FILESYSTEM OPERATIONS
LINK_ALLOC_ADDR	generic/tclLink.c	/^#define LINK_ALLOC_ADDR	/;"	d	file:
LINK_ALLOC_LAST	generic/tclLink.c	/^#define LINK_ALLOC_LAST	/;"	d	file:
LINK_BEING_UPDATED	generic/tclLink.c	/^#define LINK_BEING_UPDATED	/;"	d	file:
LINK_CREATE	generic/tclTest.c	/^    enum LinkOptionEnum { LINK_UPDATE, LINK_REMOVE, LINK_CREATE } optionIndex;$/;"	e	enum:TestlinkarrayCmd::LinkOptionEnum	file:
LINK_READ_ONLY	generic/tclLink.c	/^#define LINK_READ_ONLY	/;"	d	file:
LINK_REMOVE	generic/tclTest.c	/^    enum LinkOptionEnum { LINK_UPDATE, LINK_REMOVE, LINK_CREATE } optionIndex;$/;"	e	enum:TestlinkarrayCmd::LinkOptionEnum	file:
LINK_UPDATE	generic/tclTest.c	/^    enum LinkOptionEnum { LINK_UPDATE, LINK_REMOVE, LINK_CREATE } optionIndex;$/;"	e	enum:TestlinkarrayCmd::LinkOptionEnum	file:
LISTEN	unix/tclUnixSock.c	/^    enum { LOOKUP, SOCKET, BIND, LISTEN } howfar = LOOKUP;$/;"	e	enum:Tcl_OpenTcpServerEx::__anon07b4e8c00203	file:
LISTOBJ_GET	generic/tclTestObj.c	/^	LISTOBJ_GET,$/;"	e	enum:TestlistobjCmd::listobjCmdIndex	file:
LISTOBJ_GETELEMENTSMEMCHECK	generic/tclTestObj.c	/^	LISTOBJ_GETELEMENTSMEMCHECK,$/;"	e	enum:TestlistobjCmd::listobjCmdIndex	file:
LISTOBJ_INDEX	generic/tclTestObj.c	/^	LISTOBJ_INDEX,$/;"	e	enum:TestlistobjCmd::listobjCmdIndex	file:
LISTOBJ_INDEXMEMCHECK	generic/tclTestObj.c	/^	LISTOBJ_INDEXMEMCHECK,$/;"	e	enum:TestlistobjCmd::listobjCmdIndex	file:
LISTOBJ_REPLACE	generic/tclTestObj.c	/^	LISTOBJ_REPLACE,$/;"	e	enum:TestlistobjCmd::listobjCmdIndex	file:
LISTOBJ_SET	generic/tclTestObj.c	/^	LISTOBJ_SET,$/;"	e	enum:TestlistobjCmd::listobjCmdIndex	file:
LISTREP_CHECK	generic/tclListObj.c	/^#define LISTREP_CHECK(/;"	d	file:
LISTREP_CONFIG	generic/tclTest.c	/^	LISTREP_CONFIG,$/;"	e	enum:TestlistrepCmd::__anon0e9396a50503	file:
LISTREP_DESCRIBE	generic/tclTest.c	/^	LISTREP_DESCRIBE,$/;"	e	enum:TestlistrepCmd::__anon0e9396a50503	file:
LISTREP_NEW	generic/tclTest.c	/^	LISTREP_NEW,$/;"	e	enum:TestlistrepCmd::__anon0e9396a50503	file:
LISTREP_PANIC_ON_FAIL	generic/tclListObj.c	/^#define LISTREP_PANIC_ON_FAIL /;"	d	file:
LISTREP_SPACE_FAVOR_BACK	generic/tclListObj.c	/^#define LISTREP_SPACE_FAVOR_BACK /;"	d	file:
LISTREP_SPACE_FAVOR_FRONT	generic/tclListObj.c	/^#define LISTREP_SPACE_FAVOR_FRONT /;"	d	file:
LISTREP_SPACE_FAVOR_NONE	generic/tclListObj.c	/^#define LISTREP_SPACE_FAVOR_NONE /;"	d	file:
LISTREP_SPACE_FLAGS	generic/tclListObj.c	/^#define LISTREP_SPACE_FLAGS /;"	d	file:
LISTREP_SPACE_ONLY_BACK	generic/tclListObj.c	/^#define LISTREP_SPACE_ONLY_BACK /;"	d	file:
LISTREP_VALIDATE	generic/tclTest.c	/^	LISTREP_VALIDATE$/;"	e	enum:TestlistrepCmd::__anon0e9396a50503	file:
LISTSTORE_CANONICAL	generic/tclInt.h	/^#define LISTSTORE_CANONICAL /;"	d
LISTVOLUMESPROC	doc/FileSystem.3	/^.SS LISTVOLUMESPROC$/;"	S	section:Filesystem""FILESYSTEM OPERATIONS
LIST_ASSERT	generic/tclListObj.c	/^#define LIST_ASSERT(/;"	d	file:
LIST_ASSERT_TYPE	generic/tclListObj.c	/^#define LIST_ASSERT_TYPE(/;"	d	file:
LIST_COUNT_ASSERT	generic/tclListObj.c	/^#define LIST_COUNT_ASSERT(/;"	d	file:
LIST_DYNAMIC	generic/tclOOInt.h	/^#define LIST_DYNAMIC(/;"	d
LIST_INDEX_ASSERT	generic/tclListObj.c	/^#define LIST_INDEX_ASSERT(/;"	d	file:
LIST_MAX	generic/tclInt.h	/^#define LIST_MAX /;"	d
LIST_SIZE	generic/tclInt.h	/^#define LIST_SIZE(/;"	d
LIST_SPAN_THRESHOLD	generic/tclInt.h	/^#define LIST_SPAN_THRESHOLD /;"	d
LIST_STATIC	generic/tclOOInt.h	/^#define LIST_STATIC(/;"	d
LIT	compat/zlib/inflate.h	/^            LIT,        \/* o: waiting for output space to write literal *\/$/;"	e	enum:__anon6bf0a2910103
LITERALS	compat/zlib/deflate.h	/^#define LITERALS /;"	d
LITERAL_CMD_NAME	generic/tclCompile.h	/^#define LITERAL_CMD_NAME	/;"	d
LITERAL_ON_HEAP	generic/tclCompile.h	/^#define LITERAL_ON_HEAP	/;"	d
LITERAL_UNSHARED	generic/tclCompile.h	/^#define LITERAL_UNSHARED	/;"	d
LIT_BCE	generic/tclClockClassic.c	/^    LIT_BCE,		LIT_C,$/;"	e	enum:ClockLiteral	file:
LIT_BCE	generic/tclDate.h	/^    LIT_BCE,		LIT_CE,$/;"	e	enum:ClockLiteral
LIT_BUFS	compat/zlib/deflate.h	/^#   define LIT_BUFS /;"	d
LIT_C	generic/tclClockClassic.c	/^    LIT_BCE,		LIT_C,$/;"	e	enum:ClockLiteral	file:
LIT_C	generic/tclDate.h	/^    LIT_SYSTEM,		LIT_CURRENT,		LIT_C,$/;"	e	enum:ClockLiteral
LIT_CANNOT_USE_GMT_AND_TIMEZONE	generic/tclClockClassic.c	/^    LIT_CANNOT_USE_GMT_AND_TIMEZONE,$/;"	e	enum:ClockLiteral	file:
LIT_CE	generic/tclClockClassic.c	/^    LIT_CE,$/;"	e	enum:ClockLiteral	file:
LIT_CE	generic/tclDate.h	/^    LIT_BCE,		LIT_CE,$/;"	e	enum:ClockLiteral
LIT_CURRENT	generic/tclDate.h	/^    LIT_SYSTEM,		LIT_CURRENT,		LIT_C,$/;"	e	enum:ClockLiteral
LIT_DAYOFMONTH	generic/tclClockClassic.c	/^    LIT_DAYOFMONTH,	LIT_DAYOFWEEK,		LIT_DAYOFYEAR,$/;"	e	enum:ClockLiteral	file:
LIT_DAYOFMONTH	generic/tclDate.h	/^    LIT_DAYOFMONTH,	LIT_DAYOFWEEK,		LIT_DAYOFYEAR,$/;"	e	enum:ClockLiteral
LIT_DAYOFWEEK	generic/tclClockClassic.c	/^    LIT_DAYOFMONTH,	LIT_DAYOFWEEK,		LIT_DAYOFYEAR,$/;"	e	enum:ClockLiteral	file:
LIT_DAYOFWEEK	generic/tclDate.h	/^    LIT_DAYOFMONTH,	LIT_DAYOFWEEK,		LIT_DAYOFYEAR,$/;"	e	enum:ClockLiteral
LIT_DAYOFYEAR	generic/tclClockClassic.c	/^    LIT_DAYOFMONTH,	LIT_DAYOFWEEK,		LIT_DAYOFYEAR,$/;"	e	enum:ClockLiteral	file:
LIT_DAYOFYEAR	generic/tclDate.h	/^    LIT_DAYOFMONTH,	LIT_DAYOFWEEK,		LIT_DAYOFYEAR,$/;"	e	enum:ClockLiteral
LIT_ERA	generic/tclClockClassic.c	/^    LIT_ERA,		LIT_GMT,		LIT_GREGORIAN,$/;"	e	enum:ClockLiteral	file:
LIT_ERA	generic/tclDate.h	/^    LIT_ERA,		LIT_GMT,		LIT_GREGORIAN,$/;"	e	enum:ClockLiteral
LIT_GETCURRENTLOCALE	generic/tclDate.h	/^    LIT_GETSYSTEMLOCALE, LIT_GETCURRENTLOCALE,$/;"	e	enum:ClockLiteral
LIT_GETSYSTEMLOCALE	generic/tclDate.h	/^    LIT_GETSYSTEMLOCALE, LIT_GETCURRENTLOCALE,$/;"	e	enum:ClockLiteral
LIT_GETSYSTEMTIMEZONE	generic/tclDate.h	/^    LIT_GETSYSTEMTIMEZONE,$/;"	e	enum:ClockLiteral
LIT_GMT	generic/tclClockClassic.c	/^    LIT_ERA,		LIT_GMT,		LIT_GREGORIAN,$/;"	e	enum:ClockLiteral	file:
LIT_GMT	generic/tclDate.h	/^    LIT_ERA,		LIT_GMT,		LIT_GREGORIAN,$/;"	e	enum:ClockLiteral
LIT_GREGORIAN	generic/tclClockClassic.c	/^    LIT_ERA,		LIT_GMT,		LIT_GREGORIAN,$/;"	e	enum:ClockLiteral	file:
LIT_GREGORIAN	generic/tclDate.h	/^    LIT_ERA,		LIT_GMT,		LIT_GREGORIAN,$/;"	e	enum:ClockLiteral
LIT_INTEGER_VALUE_TOO_LARGE	generic/tclClockClassic.c	/^    LIT_INTEGER_VALUE_TOO_LARGE,$/;"	e	enum:ClockLiteral	file:
LIT_INTEGER_VALUE_TOO_LARGE	generic/tclDate.h	/^    LIT_INTEGER_VALUE_TOO_LARGE,$/;"	e	enum:ClockLiteral
LIT_ISO8601WEEK	generic/tclClockClassic.c	/^    LIT_ISO8601WEEK,	LIT_ISO8601YEAR,$/;"	e	enum:ClockLiteral	file:
LIT_ISO8601WEEK	generic/tclDate.h	/^    LIT_ISO8601WEEK,	LIT_ISO8601YEAR,$/;"	e	enum:ClockLiteral
LIT_ISO8601YEAR	generic/tclClockClassic.c	/^    LIT_ISO8601WEEK,	LIT_ISO8601YEAR,$/;"	e	enum:ClockLiteral	file:
LIT_ISO8601YEAR	generic/tclDate.h	/^    LIT_ISO8601WEEK,	LIT_ISO8601YEAR,$/;"	e	enum:ClockLiteral
LIT_JULIANDAY	generic/tclClockClassic.c	/^    LIT_JULIANDAY,	LIT_LOCALSECONDS,$/;"	e	enum:ClockLiteral	file:
LIT_JULIANDAY	generic/tclDate.h	/^    LIT_JULIANDAY,	LIT_LOCALSECONDS,$/;"	e	enum:ClockLiteral
LIT_LOCALIZE_FORMAT	generic/tclDate.h	/^    LIT_LOCALIZE_FORMAT,$/;"	e	enum:ClockLiteral
LIT_LOCALSECONDS	generic/tclClockClassic.c	/^    LIT_JULIANDAY,	LIT_LOCALSECONDS,$/;"	e	enum:ClockLiteral	file:
LIT_LOCALSECONDS	generic/tclDate.h	/^    LIT_JULIANDAY,	LIT_LOCALSECONDS,$/;"	e	enum:ClockLiteral
LIT_MCGET	generic/tclDate.h	/^    LIT_MCGET,$/;"	e	enum:ClockLiteral
LIT_MONTH	generic/tclClockClassic.c	/^    LIT_MONTH,$/;"	e	enum:ClockLiteral	file:
LIT_MONTH	generic/tclDate.h	/^    LIT_MONTH,$/;"	e	enum:ClockLiteral
LIT_SECONDS	generic/tclClockClassic.c	/^    LIT_SECONDS,	LIT_TZNAME,		LIT_TZOFFSET,$/;"	e	enum:ClockLiteral	file:
LIT_SECONDS	generic/tclDate.h	/^    LIT_SECONDS,	LIT_TZNAME,		LIT_TZOFFSET,$/;"	e	enum:ClockLiteral
LIT_SETUPTIMEZONE	generic/tclDate.h	/^    LIT_SETUPTIMEZONE,$/;"	e	enum:ClockLiteral
LIT_SYSTEM	generic/tclDate.h	/^    LIT_SYSTEM,		LIT_CURRENT,		LIT_C,$/;"	e	enum:ClockLiteral
LIT_TZDATA	generic/tclDate.h	/^    LIT_TZDATA,$/;"	e	enum:ClockLiteral
LIT_TZNAME	generic/tclClockClassic.c	/^    LIT_SECONDS,	LIT_TZNAME,		LIT_TZOFFSET,$/;"	e	enum:ClockLiteral	file:
LIT_TZNAME	generic/tclDate.h	/^    LIT_SECONDS,	LIT_TZNAME,		LIT_TZOFFSET,$/;"	e	enum:ClockLiteral
LIT_TZOFFSET	generic/tclClockClassic.c	/^    LIT_SECONDS,	LIT_TZNAME,		LIT_TZOFFSET,$/;"	e	enum:ClockLiteral	file:
LIT_TZOFFSET	generic/tclDate.h	/^    LIT_SECONDS,	LIT_TZNAME,		LIT_TZOFFSET,$/;"	e	enum:ClockLiteral
LIT_YEAR	generic/tclClockClassic.c	/^    LIT_YEAR,$/;"	e	enum:ClockLiteral	file:
LIT_YEAR	generic/tclDate.h	/^    LIT_YEAR,$/;"	e	enum:ClockLiteral
LIT__DEFAULT_FORMAT	generic/tclClockClassic.c	/^    LIT__DEFAULT_FORMAT,$/;"	e	enum:ClockLiteral	file:
LIT__DEFAULT_FORMAT	generic/tclDate.h	/^    LIT__DEFAULT_FORMAT,$/;"	e	enum:ClockLiteral
LIT__END	generic/tclClockClassic.c	/^    LIT__END$/;"	e	enum:ClockLiteral	file:
LIT__END	generic/tclDate.h	/^    LIT__END$/;"	e	enum:ClockLiteral
LIT__NIL	generic/tclClockClassic.c	/^    LIT__NIL,$/;"	e	enum:ClockLiteral	file:
LIT__NIL	generic/tclDate.h	/^    LIT__NIL,$/;"	e	enum:ClockLiteral
LLDB	unix/Makefile.in	/^LLDB			= lldb$/;"	m
LMIX	generic/regguts.h	/^#define	LMIX(/;"	d
LN	win/Makefile.in	/^LN		= ln$/;"	m
LNKTYPE	compat/zlib/contrib/untgz/untgz.c	/^#define LNKTYPE /;"	d	file:
LOAD	compat/zlib/infback.c	/^#define LOAD(/;"	d	file:
LOAD	compat/zlib/inflate.c	/^#define LOAD(/;"	d	file:
LOAD	generic/tclCompCmdsSZ.c	/^#define LOAD(/;"	d	file:
LOADFILEPROC	doc/FileSystem.3	/^.SS LOADFILEPROC$/;"	S	section:Filesystem""FILESYSTEM EFFICIENCY
LOAD_GLOBAL	generic/tclLoad.c	/^	LOAD_GLOBAL,	LOAD_LAZY,	LOAD_LAST$/;"	e	enum:Tcl_LoadObjCmd::loadOptionsEnum	file:
LOAD_LAST	generic/tclLoad.c	/^	LOAD_GLOBAL,	LOAD_LAZY,	LOAD_LAST$/;"	e	enum:Tcl_LoadObjCmd::loadOptionsEnum	file:
LOAD_LAZY	generic/tclLoad.c	/^	LOAD_GLOBAL,	LOAD_LAZY,	LOAD_LAST$/;"	e	enum:Tcl_LoadObjCmd::loadOptionsEnum	file:
LOC	compat/zlib/contrib/delphi/zlibd32.mak	/^LOC = -DZEXPORT=__fastcall -DZEXPORTVA=__cdecl$/;"	m
LOC	compat/zlib/contrib/pascal/zlibd32.mak	/^LOC = -DZEXPORT=__fastcall -DZEXPORTVA=__cdecl$/;"	m
LOCAL	generic/tclExecute.c	/^#define LOCAL(/;"	d	file:
LOCALDFAS	generic/regexec.c	/^#define LOCALDFAS	/;"	d	file:
LOCALHEADERMAGIC	compat/zlib/contrib/minizip/zip.c	/^#define LOCALHEADERMAGIC /;"	d	file:
LOCALMAT	generic/regexec.c	/^#define	LOCALMAT	/;"	d	file:
LOCAL_COMPLEN	generic/tclZipfs.c	/^    LOCAL_COMPLEN = 18,		\/\/ LocalHeader.compressedLength$/;"	e	enum:ZipLocalHeaderOffsets	file:
LOCAL_COMPMETH	generic/tclZipfs.c	/^    LOCAL_COMPMETH = 8,		\/\/ LocalHeader.compressionMethod$/;"	e	enum:ZipLocalHeaderOffsets	file:
LOCAL_CRC32	generic/tclZipfs.c	/^    LOCAL_CRC32 = 14,		\/\/ LocalHeader.crc32$/;"	e	enum:ZipLocalHeaderOffsets	file:
LOCAL_EXTRALEN	generic/tclZipfs.c	/^    LOCAL_EXTRALEN = 28,	\/\/ LocalHeader.extraDataLength$/;"	e	enum:ZipLocalHeaderOffsets	file:
LOCAL_FLAGS	generic/tclZipfs.c	/^    LOCAL_FLAGS = 6,		\/\/ LocalHeader.flags$/;"	e	enum:ZipLocalHeaderOffsets	file:
LOCAL_HEADER_LEN	generic/tclZipfs.c	/^    LOCAL_HEADER_LEN = 30	\/\/ sizeof(LocalHeader)$/;"	e	enum:ZipLocalHeaderOffsets	file:
LOCAL_MDATE	generic/tclZipfs.c	/^    LOCAL_MDATE = 12,		\/\/ LocalHeader.modifiedDate$/;"	e	enum:ZipLocalHeaderOffsets	file:
LOCAL_MTIME	generic/tclZipfs.c	/^    LOCAL_MTIME = 10,		\/\/ LocalHeader.modifiedTime$/;"	e	enum:ZipLocalHeaderOffsets	file:
LOCAL_PATHLEN	generic/tclZipfs.c	/^    LOCAL_PATHLEN = 26,		\/\/ LocalHeader.pathLength$/;"	e	enum:ZipLocalHeaderOffsets	file:
LOCAL_SIG	generic/tclZipfs.c	/^    LOCAL_SIG = 0,		\/\/ LocalHeader.signature$/;"	e	enum:ZipLocalHeaderOffsets	file:
LOCAL_SIZE	generic/tclDictObj.c	/^#define LOCAL_SIZE /;"	d	file:
LOCAL_SIZE	generic/tclListObj.c	/^#   define LOCAL_SIZE /;"	d	file:
LOCAL_SIZE	generic/tclTestABSList.c	/^#   define LOCAL_SIZE /;"	d	file:
LOCAL_SIZE	generic/tclUtil.c	/^#define LOCAL_SIZE /;"	d	file:
LOCAL_UNCOMPLEN	generic/tclZipfs.c	/^    LOCAL_UNCOMPLEN = 22,	\/\/ LocalHeader.uncompressedLength$/;"	e	enum:ZipLocalHeaderOffsets	file:
LOCAL_VERSION	generic/tclZipfs.c	/^    LOCAL_VERSION = 4,		\/\/ LocalHeader.version$/;"	e	enum:ZipLocalHeaderOffsets	file:
LOCATE	library/platform/shell.tcl	/^proc ::platform::shell::LOCATE {bv ov} {$/;"	p	namespace:::platform::shell
LOCKED	generic/regexec.c	/^#define	LOCKED	/;"	d	file:
LOCK_NOTIFIER	macosx/tclMacOSXNotify.c	/^#define LOCK_NOTIFIER	/;"	d	file:
LOCK_NOTIFIER_INIT	macosx/tclMacOSXNotify.c	/^#define LOCK_NOTIFIER_INIT	/;"	d	file:
LOCK_NOTIFIER_TSD	macosx/tclMacOSXNotify.c	/^#define LOCK_NOTIFIER_TSD	/;"	d	file:
LOFF	generic/regexec.c	/^#define	LOFF(/;"	d	file:
LOG10_2	generic/tclStrToD.c	/^#define LOG10_2 /;"	d	file:
LOG10_3HALVES_PLUS_FUDGE	generic/tclStrToD.c	/^#define LOG10_3HALVES_PLUS_FUDGE /;"	d	file:
LOGID	compat/zlib/examples/gzlog.c	/^#define LOGID /;"	d	file:
LONGER	generic/regguts.h	/^#define	LONGER	/;"	d
LOOK	compat/zlib/gzguts.h	/^#define LOOK /;"	d
LOOKUP	unix/tclUnixSock.c	/^    enum { LOOKUP, SOCKET, BIND, LISTEN } howfar = LOOKUP;$/;"	e	enum:Tcl_OpenTcpServerEx::__anon07b4e8c00203	file:
LOOP_EXCEPTION_RANGE	generic/tclCompile.h	/^    LOOP_EXCEPTION_RANGE,	\/* Exception's range is part of a loop. Break$/;"	e	enum:__anone79d5a530103
LOWERCASE_LETTER	generic/tclUniData.c	/^    LOWERCASE_LETTER,$/;"	e	enum:__anon910316cb0103	file:
LOW_GUARD_SIZE	generic/tclCkalloc.c	/^#define LOW_GUARD_SIZE /;"	d	file:
LOW_SURROGATE	generic/tclEncoding.c	/^#define LOW_SURROGATE(/;"	d	file:
LSEARCH_ALL	generic/tclCmdIL.c	/^	LSEARCH_ALL, LSEARCH_ASCII, LSEARCH_BISECT, LSEARCH_DECREASING,$/;"	e	enum:Tcl_LsearchObjCmd::lsearchoptions	file:
LSEARCH_ASCII	generic/tclCmdIL.c	/^	LSEARCH_ALL, LSEARCH_ASCII, LSEARCH_BISECT, LSEARCH_DECREASING,$/;"	e	enum:Tcl_LsearchObjCmd::lsearchoptions	file:
LSEARCH_BISECT	generic/tclCmdIL.c	/^	LSEARCH_ALL, LSEARCH_ASCII, LSEARCH_BISECT, LSEARCH_DECREASING,$/;"	e	enum:Tcl_LsearchObjCmd::lsearchoptions	file:
LSEARCH_DECREASING	generic/tclCmdIL.c	/^	LSEARCH_ALL, LSEARCH_ASCII, LSEARCH_BISECT, LSEARCH_DECREASING,$/;"	e	enum:Tcl_LsearchObjCmd::lsearchoptions	file:
LSEARCH_DICTIONARY	generic/tclCmdIL.c	/^	LSEARCH_DICTIONARY, LSEARCH_EXACT, LSEARCH_GLOB, LSEARCH_INCREASING,$/;"	e	enum:Tcl_LsearchObjCmd::lsearchoptions	file:
LSEARCH_EXACT	generic/tclCmdIL.c	/^	LSEARCH_DICTIONARY, LSEARCH_EXACT, LSEARCH_GLOB, LSEARCH_INCREASING,$/;"	e	enum:Tcl_LsearchObjCmd::lsearchoptions	file:
LSEARCH_GLOB	generic/tclCmdIL.c	/^	LSEARCH_DICTIONARY, LSEARCH_EXACT, LSEARCH_GLOB, LSEARCH_INCREASING,$/;"	e	enum:Tcl_LsearchObjCmd::lsearchoptions	file:
LSEARCH_INCREASING	generic/tclCmdIL.c	/^	LSEARCH_DICTIONARY, LSEARCH_EXACT, LSEARCH_GLOB, LSEARCH_INCREASING,$/;"	e	enum:Tcl_LsearchObjCmd::lsearchoptions	file:
LSEARCH_INDEX	generic/tclCmdIL.c	/^	LSEARCH_INDEX, LSEARCH_INLINE, LSEARCH_INTEGER, LSEARCH_NOCASE,$/;"	e	enum:Tcl_LsearchObjCmd::lsearchoptions	file:
LSEARCH_INLINE	generic/tclCmdIL.c	/^	LSEARCH_INDEX, LSEARCH_INLINE, LSEARCH_INTEGER, LSEARCH_NOCASE,$/;"	e	enum:Tcl_LsearchObjCmd::lsearchoptions	file:
LSEARCH_INTEGER	generic/tclCmdIL.c	/^	LSEARCH_INDEX, LSEARCH_INLINE, LSEARCH_INTEGER, LSEARCH_NOCASE,$/;"	e	enum:Tcl_LsearchObjCmd::lsearchoptions	file:
LSEARCH_NOCASE	generic/tclCmdIL.c	/^	LSEARCH_INDEX, LSEARCH_INLINE, LSEARCH_INTEGER, LSEARCH_NOCASE,$/;"	e	enum:Tcl_LsearchObjCmd::lsearchoptions	file:
LSEARCH_NOT	generic/tclCmdIL.c	/^	LSEARCH_NOT, LSEARCH_REAL, LSEARCH_REGEXP, LSEARCH_SORTED,$/;"	e	enum:Tcl_LsearchObjCmd::lsearchoptions	file:
LSEARCH_REAL	generic/tclCmdIL.c	/^	LSEARCH_NOT, LSEARCH_REAL, LSEARCH_REGEXP, LSEARCH_SORTED,$/;"	e	enum:Tcl_LsearchObjCmd::lsearchoptions	file:
LSEARCH_REGEXP	generic/tclCmdIL.c	/^	LSEARCH_NOT, LSEARCH_REAL, LSEARCH_REGEXP, LSEARCH_SORTED,$/;"	e	enum:Tcl_LsearchObjCmd::lsearchoptions	file:
LSEARCH_SORTED	generic/tclCmdIL.c	/^	LSEARCH_NOT, LSEARCH_REAL, LSEARCH_REGEXP, LSEARCH_SORTED,$/;"	e	enum:Tcl_LsearchObjCmd::lsearchoptions	file:
LSEARCH_START	generic/tclCmdIL.c	/^	LSEARCH_START, LSEARCH_STRIDE, LSEARCH_SUBINDICES$/;"	e	enum:Tcl_LsearchObjCmd::lsearchoptions	file:
LSEARCH_STRIDE	generic/tclCmdIL.c	/^	LSEARCH_START, LSEARCH_STRIDE, LSEARCH_SUBINDICES$/;"	e	enum:Tcl_LsearchObjCmd::lsearchoptions	file:
LSEARCH_SUBINDICES	generic/tclCmdIL.c	/^	LSEARCH_START, LSEARCH_STRIDE, LSEARCH_SUBINDICES$/;"	e	enum:Tcl_LsearchObjCmd::lsearchoptions	file:
LSEEK	compat/zlib/gzlib.c	/^#  define LSEEK /;"	d	file:
LSEQ_BY	generic/tclCmdIL.c	/^    LSEQ_DOTS, LSEQ_TO, LSEQ_COUNT, LSEQ_BY$/;"	e	enum:__anond5eb1cce0403	file:
LSEQ_COUNT	generic/tclCmdIL.c	/^    LSEQ_DOTS, LSEQ_TO, LSEQ_COUNT, LSEQ_BY$/;"	e	enum:__anond5eb1cce0403	file:
LSEQ_DOTS	generic/tclCmdIL.c	/^    LSEQ_DOTS, LSEQ_TO, LSEQ_COUNT, LSEQ_BY$/;"	e	enum:__anond5eb1cce0403	file:
LSEQ_TO	generic/tclCmdIL.c	/^    LSEQ_DOTS, LSEQ_TO, LSEQ_COUNT, LSEQ_BY$/;"	e	enum:__anond5eb1cce0403	file:
LSORT_ASCII	generic/tclCmdIL.c	/^	LSORT_ASCII, LSORT_COMMAND, LSORT_DECREASING, LSORT_DICTIONARY,$/;"	e	enum:Tcl_LsortObjCmd::Lsort_Switches	file:
LSORT_COMMAND	generic/tclCmdIL.c	/^	LSORT_ASCII, LSORT_COMMAND, LSORT_DECREASING, LSORT_DICTIONARY,$/;"	e	enum:Tcl_LsortObjCmd::Lsort_Switches	file:
LSORT_DECREASING	generic/tclCmdIL.c	/^	LSORT_ASCII, LSORT_COMMAND, LSORT_DECREASING, LSORT_DICTIONARY,$/;"	e	enum:Tcl_LsortObjCmd::Lsort_Switches	file:
LSORT_DICTIONARY	generic/tclCmdIL.c	/^	LSORT_ASCII, LSORT_COMMAND, LSORT_DECREASING, LSORT_DICTIONARY,$/;"	e	enum:Tcl_LsortObjCmd::Lsort_Switches	file:
LSORT_INCREASING	generic/tclCmdIL.c	/^	LSORT_INCREASING, LSORT_INDEX, LSORT_INDICES, LSORT_INTEGER,$/;"	e	enum:Tcl_LsortObjCmd::Lsort_Switches	file:
LSORT_INDEX	generic/tclCmdIL.c	/^	LSORT_INCREASING, LSORT_INDEX, LSORT_INDICES, LSORT_INTEGER,$/;"	e	enum:Tcl_LsortObjCmd::Lsort_Switches	file:
LSORT_INDICES	generic/tclCmdIL.c	/^	LSORT_INCREASING, LSORT_INDEX, LSORT_INDICES, LSORT_INTEGER,$/;"	e	enum:Tcl_LsortObjCmd::Lsort_Switches	file:
LSORT_INTEGER	generic/tclCmdIL.c	/^	LSORT_INCREASING, LSORT_INDEX, LSORT_INDICES, LSORT_INTEGER,$/;"	e	enum:Tcl_LsortObjCmd::Lsort_Switches	file:
LSORT_NOCASE	generic/tclCmdIL.c	/^	LSORT_NOCASE, LSORT_REAL, LSORT_STRIDE, LSORT_UNIQUE$/;"	e	enum:Tcl_LsortObjCmd::Lsort_Switches	file:
LSORT_REAL	generic/tclCmdIL.c	/^	LSORT_NOCASE, LSORT_REAL, LSORT_STRIDE, LSORT_UNIQUE$/;"	e	enum:Tcl_LsortObjCmd::Lsort_Switches	file:
LSORT_STRIDE	generic/tclCmdIL.c	/^	LSORT_NOCASE, LSORT_REAL, LSORT_STRIDE, LSORT_UNIQUE$/;"	e	enum:Tcl_LsortObjCmd::Lsort_Switches	file:
LSORT_UNIQUE	generic/tclCmdIL.c	/^	LSORT_NOCASE, LSORT_REAL, LSORT_STRIDE, LSORT_UNIQUE$/;"	e	enum:Tcl_LsortObjCmd::Lsort_Switches	file:
LSTATPROC	doc/FileSystem.3	/^.SS LSTATPROC$/;"	S	section:Filesystem""FILESYSTEM EFFICIENCY
LString	generic/tclTestABSList.c	/^typedef struct LString {$/;"	s	file:
LString	generic/tclTestABSList.c	/^} LString;$/;"	t	typeref:struct:LString	file:
LTM1	libtommath/tommath_class.h	/^#define LTM1$/;"	d
LTM2	libtommath/tommath_class.h	/^#   define LTM2$/;"	d
LTM3	libtommath/tommath_class.h	/^#   define LTM3$/;"	d
LTM_ALL	libtommath/tommath_superclass.h	/^#define LTM_ALL$/;"	d
LTM_C_FLAGS	libtommath/CMakeLists.txt	/^    set(LTM_C_FLAGS -W3)$/;"	v
LTM_C_FLAGS	libtommath/CMakeLists.txt	/^    set(LTM_C_FLAGS -Wall -Wsign-compare -Wextra -Wshadow$/;"	v
LTM_C_FLAGS	libtommath/CMakeLists.txt	/^    set(LTM_C_FLAGS -fo=.obj -oaxt -3r -w3)$/;"	v
LTM_DEBIAN_SHARED_PACKAGE_NAME	libtommath/CMakeLists.txt	/^set(LTM_DEBIAN_SHARED_PACKAGE_NAME "${PROJECT_NAME}${PACKAGE_NAME_SUFFIX}${PROJECT_VERSION_MAJOR/;"	v
LTM_FROBENIUS_UNDERWOOD_A	libtommath/bn_mp_prime_frobenius_underwood.c	/^#define LTM_FROBENIUS_UNDERWOOD_A /;"	d	file:
LTM_INSIDE	libtommath/tommath_class.h	/^#define LTM_INSIDE$/;"	d
LTM_LAST	libtommath/tommath_class.h	/^#   define LTM_LAST$/;"	d
LTM_PRIME_2MSB_ON	libtommath/tommath.h	/^#define LTM_PRIME_2MSB_ON  (MP_DEPRECATED_PRAGMA("LTM_PRIME_2MSB_ON /;"	d
LTM_PRIME_BBS	libtommath/tommath.h	/^#define LTM_PRIME_BBS      (MP_DEPRECATED_PRAGMA("LTM_PRIME_BBS /;"	d
LTM_PRIME_SAFE	libtommath/tommath.h	/^#define LTM_PRIME_SAFE     (MP_DEPRECATED_PRAGMA("LTM_PRIME_SAFE /;"	d
LUTIL_DIFFINDEX	generic/tclTest.c	/^	   LUTIL_EQUAL, LUTIL_DIFFINDEX$/;"	e	enum:TestLutilCmd::options	file:
LUTIL_EQUAL	generic/tclTest.c	/^	   LUTIL_EQUAL, LUTIL_DIFFINDEX$/;"	e	enum:TestLutilCmd::options	file:
L_BBND	generic/regc_lex.c	/^#define	L_BBND	/;"	d	file:
L_BRACK	generic/regc_lex.c	/^#define	L_BRACK	/;"	d	file:
L_BRE	generic/regc_lex.c	/^#define	L_BRE	/;"	d	file:
L_CCL	generic/regc_lex.c	/^#define	L_CCL	/;"	d	file:
L_CEL	generic/regc_lex.c	/^#define	L_CEL	/;"	d	file:
L_CODES	compat/zlib/deflate.h	/^#define L_CODES /;"	d
L_EBND	generic/regc_lex.c	/^#define	L_EBND	/;"	d	file:
L_ECL	generic/regc_lex.c	/^#define	L_ECL	/;"	d	file:
L_ERE	generic/regc_lex.c	/^#define	L_ERE	/;"	d	file:
L_Q	generic/regc_lex.c	/^#define	L_Q	/;"	d	file:
LambdaGetInternalRep	generic/tclProc.c	/^#define LambdaGetInternalRep(/;"	d	file:
LambdaSetInternalRep	generic/tclProc.c	/^#define LambdaSetInternalRep(/;"	d	file:
Lassign	library/opt/optparse.tcl	/^proc ::tcl::Lassign {list args} {$/;"	p	namespace:::tcl
Last	compat/zlib/contrib/ada/read.adb	/^               Last   : Stream_Element_Offset;$/;"	v	anon:declare	file:
Last	compat/zlib/contrib/ada/test.adb	/^      Last   : Stream_Element_Offset;$/;"	v	subprogram:Copy_Streams	file:
Last	compat/zlib/contrib/ada/zlib-streams.adb	/^      Last   : Stream_Element_Offset;$/;"	v	subprogram:Flush	file:
Last	compat/zlib/contrib/ada/zlib.adb	/^      Last       : Stream_Element_Offset;$/;"	v	subprogram:Generic_Translate	file:
Last	compat/zlib/contrib/ada/zlib.adb	/^      Last    : Stream_Element_Offset;$/;"	v	subprogram:Flush	file:
LastArg	generic/tclCmdIL.c	/^     NoneArg, NumericArg, RangeKeywordArg, ErrArg, LastArg = 8$/;"	e	enum:__anond5eb1cce0503	file:
LastMatchGood	compat/zlib/contrib/asm686/match.S	/^LastMatchGood:$/;"	l
LastMatchGood	compat/zlib/contrib/gcc_gvmat64/gvmat64.S	/^LastMatchGood:$/;"	l
Last_Error_Message	compat/zlib/contrib/ada/zlib-thin.adb	/^   function Last_Error_Message (Strm : in Z_Stream) return String is$/;"	r	package:ZLib.Thin	file:
Last_Error_Message	compat/zlib/contrib/ada/zlib-thin.ads	/^   function Last_Error_Message (Strm : in Z_Stream) return String;$/;"	R
Latin1	generic/tclZlib.c	/^Latin1(void)$/;"	f	typeref:typename:Tcl_Encoding	file:
LeaveLoopCmps	compat/zlib/contrib/asm686/match.S	/^LeaveLoopCmps:	testl	$0x0000FFFF, %eax$/;"	l
LeaveLoopCmps	compat/zlib/contrib/gcc_gvmat64/gvmat64.S	/^LeaveLoopCmps:$/;"	l
LeaveLoopCmps16	compat/zlib/contrib/gcc_gvmat64/gvmat64.S	/^LeaveLoopCmps16: add rdx,8$/;"	l
LeaveLoopCmps4	compat/zlib/contrib/asm686/match.S	/^LeaveLoopCmps4:	addl	$4, %edx$/;"	l
LeaveLoopCmps8	compat/zlib/contrib/gcc_gvmat64/gvmat64.S	/^LeaveLoopCmps8: add rdx,8$/;"	l
LeaveNow	compat/zlib/contrib/asm686/match.S	/^LeaveNow:$/;"	l
LeaveNow	compat/zlib/contrib/gcc_gvmat64/gvmat64.S	/^LeaveNow:$/;"	l
Left_Buffer	compat/zlib/contrib/ada/test.adb	/^      Left_Buffer, Right_Buffer : Stream_Element_Array (0 .. 16#FFF#);$/;"	v	subprogram:Compare_Streams	file:
Left_File	compat/zlib/contrib/ada/test.adb	/^      Left_File, Right_File : File_Type;$/;"	v	subprogram:Compare_Files	file:
Left_Last	compat/zlib/contrib/ada/test.adb	/^      Left_Last, Right_Last : Stream_Element_Offset;$/;"	v	subprogram:Compare_Streams	file:
Lempty	library/opt/optparse.tcl	/^proc ::tcl::Lempty {list} {$/;"	p	namespace:::tcl
Len	compat/zlib/deflate.h	/^#define Len /;"	d
LenLower	compat/zlib/contrib/asm686/match.S	/^LenLower:	subb	$1, %al$/;"	l
LenLower	compat/zlib/contrib/gcc_gvmat64/gvmat64.S	/^LenLower:		$/;"	l
LenLower32	compat/zlib/contrib/gcc_gvmat64/gvmat64.S	/^LenLower32:$/;"	l
LenMaximum	compat/zlib/contrib/asm686/match.S	/^LenMaximum:	movl	deflatestate(%esp), %edx$/;"	l
LenMaximum	compat/zlib/contrib/gcc_gvmat64/gvmat64.S	/^LenMaximum:$/;"	l
Length	compat/zlib/contrib/dotzlib/DotZLib/GZipStream.cs	/^        public override long Length$/;"	p	class:DotZLib.GZipStream
LengthProc	generic/tclEncoding.c	/^typedef size_t (LengthProc)(const char *src);$/;"	t	typeref:typename:size_t ()(const char * src)	file:
Lexeme	generic/tclCompExpr.c	/^static const unsigned char Lexeme[] = {$/;"	v	typeref:typename:const unsigned char[]	file:
LgenSeries	generic/tclTestABSList.c	/^typedef struct LgenSeries {$/;"	s	file:
LgenSeries	generic/tclTestABSList.c	/^} LgenSeries;$/;"	t	typeref:struct:LgenSeries	file:
Lgen_Init	generic/tclTestABSList.c	/^int Lgen_Init(Tcl_Interp *interp) {$/;"	f	typeref:typename:int
Lget	library/opt/optparse.tcl	/^proc ::tcl::Lget {list indexLst} {$/;"	p	namespace:::tcl
LibTomMath	libtommath/libtommath.pc.in	/^Name: LibTomMath$/;"	N
LibcVersion	library/platform/platform.tcl	/^proc ::platform::LibcVersion {base _->_ vv} {$/;"	p	namespace:::platform
License	unix/tcl.spec	/^License:       GNU Affero General Public License$/;"	t
LimitHandler	generic/tclInt.h	/^typedef struct LimitHandler LimitHandler;$/;"	t	typeref:struct:LimitHandler
LimitHandler	generic/tclInterp.c	/^struct LimitHandler {$/;"	s	file:
LimitHandlerFlags	generic/tclInterp.c	/^enum LimitHandlerFlags {$/;"	g	file:
LimitPositive	compat/zlib/contrib/asm686/match.S	/^LimitPositive:$/;"	l
LimitTypes	generic/tclInterp.c	/^	enum LimitTypes {$/;"	g	function:NRChildCmd	file:
LimitTypes	generic/tclInterp.c	/^	enum LimitTypes {$/;"	g	function:NRInterpCmd	file:
Link	generic/tclLink.c	/^} Link;$/;"	t	typeref:struct:__anonfc2fcf730108	file:
LinkFree	generic/tclLink.c	/^LinkFree($/;"	f	typeref:typename:void	file:
LinkOptionEnum	generic/tclTest.c	/^    enum LinkOptionEnum { LINK_UPDATE, LINK_REMOVE, LINK_CREATE } optionIndex;$/;"	g	function:TestlinkarrayCmd	file:
LinkTraceProc	generic/tclLink.c	/^LinkTraceProc($/;"	f	typeref:typename:char *	file:
LinkedVar	generic/tclLink.c	/^#define LinkedVar(/;"	d	file:
ListAppendInVar	generic/tclVar.c	/^ListAppendInVar($/;"	f	typeref:typename:int	file:
ListComplement	library/msgcat/msgcat.tcl	/^proc msgcat::ListComplement {list1 list2 {inlistname ""}} {$/;"	p	namespace:msgcat
ListEqualString	library/msgcat/msgcat.tcl	/^proc msgcat::ListEqualString {list1 list2} {$/;"	p	namespace:msgcat
ListGetIntRep	generic/tclListObj.c	/^#define ListGetIntRep(/;"	d	file:
ListGetInternalRep	generic/tclTestObjInterfaceInteger.c	/^static ListInteger* ListGetInternalRep(Tcl_Obj *listPtr) {$/;"	f	typeref:typename:ListInteger *	file:
ListInteger	generic/tclTestObjInterfaceInteger.c	/^typedef struct ListInteger {$/;"	s	file:
ListInteger	generic/tclTestObjInterfaceInteger.c	/^} ListInteger;$/;"	t	typeref:struct:ListInteger	file:
ListIntegerDecrRefCount	generic/tclTestObjInterfaceInteger.c	/^static void ListIntegerDecrRefCount(ListInteger *listIntegerPtr) {$/;"	f	typeref:typename:void	file:
ListIntegerListObjAppendElement	generic/tclTestObjInterfaceInteger.c	/^static Tcl_ObjInterfaceListAppendProc ListIntegerListObjAppendElement;$/;"	v	typeref:typename:Tcl_ObjInterfaceListAppendProc	file:
ListIntegerListObjAppendElement	generic/tclTestObjInterfaceInteger.c	/^static int ListIntegerListObjAppendElement(tclObjTypeInterfaceArgsListAppend) {$/;"	f	typeref:typename:int	file:
ListIntegerListObjAppendList	generic/tclTestObjInterfaceInteger.c	/^static Tcl_ObjInterfaceListAppendlistProc ListIntegerListObjAppendList;$/;"	v	typeref:typename:Tcl_ObjInterfaceListAppendlistProc	file:
ListIntegerListObjAppendList	generic/tclTestObjInterfaceInteger.c	/^static int ListIntegerListObjAppendList($/;"	f	typeref:typename:int	file:
ListIntegerListObjIndex	generic/tclTestObjInterfaceInteger.c	/^static Tcl_ObjInterfaceListIndexProc ListIntegerListObjIndex;$/;"	v	typeref:typename:Tcl_ObjInterfaceListIndexProc	file:
ListIntegerListObjIndex	generic/tclTestObjInterfaceInteger.c	/^static int ListIntegerListObjIndex($/;"	f	typeref:typename:int	file:
ListIntegerListObjIndexEnd	generic/tclTestObjInterfaceInteger.c	/^static Tcl_ObjInterfaceListIndexEndProc ListIntegerListObjIndexEnd;$/;"	v	typeref:typename:Tcl_ObjInterfaceListIndexEndProc	file:
ListIntegerListObjIndexEnd	generic/tclTestObjInterfaceInteger.c	/^static int ListIntegerListObjIndexEnd($/;"	f	typeref:typename:int	file:
ListIntegerListObjIsSorted	generic/tclTestObjInterfaceInteger.c	/^static Tcl_ObjInterfaceListIsSortedProc ListIntegerListObjIsSorted;$/;"	v	typeref:typename:Tcl_ObjInterfaceListIsSortedProc	file:
ListIntegerListObjIsSorted	generic/tclTestObjInterfaceInteger.c	/^static int ListIntegerListObjIsSorted($/;"	f	typeref:typename:int	file:
ListIntegerListObjLength	generic/tclTestObjInterfaceInteger.c	/^static Tcl_ObjInterfaceListLengthProc ListIntegerListObjLength;$/;"	v	typeref:typename:Tcl_ObjInterfaceListLengthProc	file:
ListIntegerListObjLength	generic/tclTestObjInterfaceInteger.c	/^static int ListIntegerListObjLength($/;"	f	typeref:typename:int	file:
ListIntegerListObjRange	generic/tclTestObjInterfaceInteger.c	/^static Tcl_ObjInterfaceListRangeProc ListIntegerListObjRange;$/;"	v	typeref:typename:Tcl_ObjInterfaceListRangeProc	file:
ListIntegerListObjRange	generic/tclTestObjInterfaceInteger.c	/^static int ListIntegerListObjRange(tclObjTypeInterfaceArgsListRange) {$/;"	f	typeref:typename:int	file:
ListIntegerListObjRangeEnd	generic/tclTestObjInterfaceInteger.c	/^static Tcl_ObjInterfaceListRangeEndProc ListIntegerListObjRangeEnd;$/;"	v	typeref:typename:Tcl_ObjInterfaceListRangeEndProc	file:
ListIntegerListObjRangeEnd	generic/tclTestObjInterfaceInteger.c	/^static int ListIntegerListObjRangeEnd($/;"	f	typeref:typename:int	file:
ListIntegerListObjReplace	generic/tclTestObjInterfaceInteger.c	/^static Tcl_ObjInterfaceListReplaceProc ListIntegerListObjReplace;$/;"	v	typeref:typename:Tcl_ObjInterfaceListReplaceProc	file:
ListIntegerListObjReplace	generic/tclTestObjInterfaceInteger.c	/^static int ListIntegerListObjReplace(tclObjTypeInterfaceArgsListReplace) {$/;"	f	typeref:typename:int	file:
ListIntegerListObjReplaceList	generic/tclTestObjInterfaceInteger.c	/^static Tcl_ObjInterfaceListReplaceListProc ListIntegerListObjReplaceList;$/;"	v	typeref:typename:Tcl_ObjInterfaceListReplaceListProc	file:
ListIntegerListObjReplaceList	generic/tclTestObjInterfaceInteger.c	/^static int ListIntegerListObjReplaceList(tclObjTypeInterfaceArgsListReplaceList) {$/;"	f	typeref:typename:int	file:
ListIntegerListObjSetDeep	generic/tclTestObjInterfaceInteger.c	/^static Tcl_ObjInterfaceListSetDeepProc ListIntegerListObjSetDeep;$/;"	v	typeref:typename:Tcl_ObjInterfaceListSetDeepProc	file:
ListIntegerListObjSetDeep	generic/tclTestObjInterfaceInteger.c	/^static int ListIntegerListObjSetDeep($/;"	f	typeref:typename:int	file:
ListIntegerListStringIndex	generic/tclTestObjInterfaceInteger.c	/^static Tcl_ObjInterfaceStringIndexProc ListIntegerListStringIndex;$/;"	v	typeref:typename:Tcl_ObjInterfaceStringIndexProc	file:
ListIntegerListStringIndex	generic/tclTestObjInterfaceInteger.c	/^static int ListIntegerListStringIndex ($/;"	f	typeref:typename:int	file:
ListIntegerListStringIndexEnd	generic/tclTestObjInterfaceInteger.c	/^static Tcl_ObjInterfaceStringIndexEndProc ListIntegerListStringIndexEnd;$/;"	v	typeref:typename:Tcl_ObjInterfaceStringIndexEndProc	file:
ListIntegerListStringIndexEnd	generic/tclTestObjInterfaceInteger.c	/^static int ListIntegerListStringIndexEnd($/;"	f	typeref:typename:int	file:
ListIntegerListStringLength	generic/tclTestObjInterfaceInteger.c	/^static Tcl_ObjInterfaceStringLengthProc ListIntegerListStringLength;$/;"	v	typeref:typename:Tcl_ObjInterfaceStringLengthProc	file:
ListIntegerListStringLength	generic/tclTestObjInterfaceInteger.c	/^static int ListIntegerListStringLength($/;"	f	typeref:typename:int	file:
ListIntegerListStringRange	generic/tclTestObjInterfaceInteger.c	/^static Tcl_ObjInterfaceStringRangeProc ListIntegerListStringRange;$/;"	v	typeref:typename:Tcl_ObjInterfaceStringRangeProc	file:
ListIntegerListStringRange	generic/tclTestObjInterfaceInteger.c	/^static int ListIntegerListStringRange($/;"	f	typeref:typename:int	file:
ListIntegerListStringRangeEnd	generic/tclTestObjInterfaceInteger.c	/^static Tcl_ObjInterfaceStringRangeEndProc ListIntegerListStringRangeEnd;$/;"	v	typeref:typename:Tcl_ObjInterfaceStringRangeEndProc	file:
ListIntegerListStringRangeEnd	generic/tclTestObjInterfaceInteger.c	/^static int ListIntegerListStringRangeEnd($/;"	f	typeref:typename:int	file:
ListIntegerLset	generic/tclTestObjInterfaceInteger.c	/^static Tcl_ObjInterfaceListSetProc ListIntegerLset;$/;"	v	typeref:typename:Tcl_ObjInterfaceListSetProc	file:
ListIntegerLset	generic/tclTestObjInterfaceInteger.c	/^static int ListIntegerLset($/;"	f	typeref:typename:int	file:
ListLimitExceededError	generic/tclListObj.c	/^ListLimitExceededError($/;"	f	typeref:typename:int	file:
ListMountPoints	generic/tclZipfs.c	/^ListMountPoints($/;"	f	typeref:typename:int	file:
ListObjAppendElement	generic/tclListObj.c	/^ListObjAppendElement($/;"	f	typeref:typename:int
ListObjAppendList	generic/tclListObj.c	/^ListObjAppendList(tclObjTypeInterfaceArgsListAppendList)$/;"	f	typeref:typename:int
ListObjGetElements	generic/tclInt.h	/^#define ListObjGetElements(/;"	d
ListObjGetRep	generic/tclInt.h	/^#define ListObjGetRep(/;"	d
ListObjIndex	generic/tclListObj.c	/^ListObjIndex(tclObjTypeInterfaceArgsListIndex) {$/;"	f	typeref:typename:int
ListObjInterfaceGetElements	generic/tclListObj.c	/^ListObjInterfaceGetElements(tclObjTypeInterfaceArgsListAll)$/;"	f	typeref:typename:int
ListObjInterfaceLength	generic/tclListObj.c	/^ListObjInterfaceLength(tclObjTypeInterfaceArgsListLength) {$/;"	f	typeref:typename:int
ListObjIsCanonical	generic/tclInt.h	/^#define ListObjIsCanonical(/;"	d
ListObjLength	generic/tclInt.h	/^#define ListObjLength(/;"	d
ListObjOverwriteRep	generic/tclListObj.c	/^#define ListObjOverwriteRep(/;"	d	file:
ListObjRange	generic/tclListObj.c	/^ListObjRange(tclObjTypeInterfaceArgsListRange)$/;"	f	typeref:typename:int
ListObjRepIsShared	generic/tclInt.h	/^#define ListObjRepIsShared(/;"	d
ListObjReplace	generic/tclListObj.c	/^ListObjReplace(tclObjTypeInterfaceArgsListReplace)$/;"	f	typeref:typename:int
ListObjReplaceRepAndInvalidate	generic/tclListObj.c	/^#define ListObjReplaceRepAndInvalidate(/;"	d	file:
ListObjSetElement	generic/tclListObj.c	/^ListObjSetElement(tclObjTypeInterfaceArgsListSet)$/;"	f	typeref:typename:int
ListObjSpanPtr	generic/tclInt.h	/^#define ListObjSpanPtr(/;"	d
ListObjStart	generic/tclInt.h	/^#define ListObjStart(/;"	d
ListObjStompRep	generic/tclListObj.c	/^#define ListObjStompRep(/;"	d	file:
ListObjStorePtr	generic/tclInt.h	/^#define ListObjStorePtr(/;"	d
ListObjStringIsEmpty	generic/tclListObj.c	/^ListObjStringIsEmpty(tclObjTypeInterfaceArgsStringIsEmpty) {$/;"	f	typeref:typename:int
ListPerf	tests-perf/listPerf.tcl	/^    oo::class create ListPerf {$/;"	c	namespace:::perf::list
ListRemove	generic/tclThreadTest.c	/^ListRemove($/;"	f	typeref:typename:void	file:
ListRep	generic/tclInt.h	/^typedef struct ListRep {$/;"	s
ListRep	generic/tclInt.h	/^} ListRep;$/;"	t	typeref:struct:ListRep
ListRepClone	generic/tclListObj.c	/^ListRepClone($/;"	f	typeref:typename:void	file:
ListRepElements	generic/tclInt.h	/^#define ListRepElements(/;"	d
ListRepElementsBase	generic/tclInt.h	/^#define ListRepElementsBase(/;"	d
ListRepFreeUnreferenced	generic/tclListObj.c	/^ListRepFreeUnreferenced($/;"	f	typeref:typename:void	file:
ListRepIncrRefs	generic/tclListObj.c	/^#define ListRepIncrRefs(/;"	d	file:
ListRepInit	generic/tclListObj.c	/^ListRepInit($/;"	f	typeref:typename:int	file:
ListRepInitAttempt	generic/tclListObj.c	/^ListRepInitAttempt($/;"	f	typeref:typename:int	file:
ListRepIsShared	generic/tclInt.h	/^#define ListRepIsShared(/;"	d
ListRepLength	generic/tclInt.h	/^#define ListRepLength(/;"	d
ListRepNumFreeHead	generic/tclListObj.c	/^#define ListRepNumFreeHead(/;"	d	file:
ListRepNumFreeTail	generic/tclListObj.c	/^#define ListRepNumFreeTail(/;"	d	file:
ListRepRange	generic/tclListObj.c	/^ListRepRange($/;"	f	typeref:typename:void	file:
ListRepSlotPtr	generic/tclListObj.c	/^#define ListRepSlotPtr(/;"	d	file:
ListRepStart	generic/tclInt.h	/^#define ListRepStart(/;"	d
ListRepUnsharedFreeUnreferenced	generic/tclListObj.c	/^ListRepUnsharedFreeUnreferenced($/;"	f	typeref:typename:void	file:
ListRepUnsharedShiftDown	generic/tclListObj.c	/^ListRepUnsharedShiftDown($/;"	f	typeref:typename:void	file:
ListRepValidate	generic/tclListObj.c	/^ListRepValidate($/;"	f	typeref:typename:void	file:
ListResetIntRep	generic/tclListObj.c	/^#define ListResetIntRep(/;"	d	file:
ListSetIntRep	generic/tclListObj.c	/^#define ListSetIntRep(/;"	d	file:
ListSpan	generic/tclInt.h	/^typedef struct ListSpan {$/;"	s
ListSpan	generic/tclInt.h	/^} ListSpan;$/;"	t	typeref:struct:ListSpan
ListSpanDecrRefs	generic/tclListObj.c	/^ListSpanDecrRefs($/;"	f	typeref:typename:void	file:
ListSpanMerited	generic/tclListObj.c	/^ListSpanMerited($/;"	f	typeref:typename:int	file:
ListSpanNew	generic/tclListObj.c	/^ListSpanNew($/;"	f	typeref:typename:ListSpan *	file:
ListStore	generic/tclInt.h	/^typedef struct ListStore {$/;"	s
ListStore	generic/tclInt.h	/^} ListStore;$/;"	t	typeref:struct:ListStore
ListStoreNew	generic/tclListObj.c	/^ListStoreNew($/;"	f	typeref:typename:ListStore *	file:
ListStoreReallocate	generic/tclListObj.c	/^ListStoreReallocate($/;"	f	typeref:typename:ListStore *	file:
ListUpdateInner	generic/tclThreadTest.c	/^ListUpdateInner($/;"	f	typeref:typename:void	file:
LiteralEntry	generic/tclInt.h	/^typedef struct LiteralEntry {$/;"	s
LiteralEntry	generic/tclInt.h	/^} LiteralEntry;$/;"	t	typeref:struct:LiteralEntry
LiteralTable	generic/tclInt.h	/^typedef struct LiteralTable {$/;"	s
LiteralTable	generic/tclInt.h	/^} LiteralTable;$/;"	t	typeref:struct:LiteralTable
Load	doc/Load.3	/^.TH Load 3 8.6 Tcl "Tcl Library Procedures"$/;"	t
Load	library/msgcat/msgcat.tcl	/^proc msgcat::Load {ns locales {callbackonly 0}} {$/;"	p	namespace:msgcat
LoadAll	library/msgcat/msgcat.tcl	/^proc msgcat::LoadAll {locales} {$/;"	p	namespace:msgcat
LoadCentralDirectoryRecord	compat/zlib/contrib/minizip/zip.c	/^local int LoadCentralDirectoryRecord(zip64_internal* pziinit) {$/;"	f	typeref:typename:local int
LoadCleanupProc	generic/tclLoad.c	/^LoadCleanupProc($/;"	f	typeref:typename:void	file:
LoadEncodingFile	generic/tclEncoding.c	/^LoadEncodingFile($/;"	f	typeref:typename:Tcl_Encoding	file:
LoadEscapeEncoding	generic/tclEncoding.c	/^LoadEscapeEncoding($/;"	f	typeref:typename:Tcl_Encoding	file:
LoadTableEncoding	generic/tclEncoding.c	/^LoadTableEncoding($/;"	f	typeref:typename:Tcl_Encoding	file:
LoadTimeZoneFile	library/clock.tcl	/^proc ::tcl::clock::LoadTimeZoneFile { fileName } {$/;"	p	namespace:::tcl::clock
LoadTimeZoneFile	library/clockclassic.tcl	/^proc LoadTimeZoneFile { fileName } {$/;"	p
LoadWindowsDateTimeFormats	library/clock.tcl	/^proc ::tcl::clock::LoadWindowsDateTimeFormats { locale } {$/;"	p	namespace:::tcl::clock
LoadWindowsDateTimeFormats	library/clockclassic.tcl	/^proc LoadWindowsDateTimeFormats { locale } {$/;"	p
LoadZoneinfoFile	library/clock.tcl	/^proc ::tcl::clock::LoadZoneinfoFile { fileName } {$/;"	p	namespace:::tcl::clock
LoadZoneinfoFile	library/clockclassic.tcl	/^proc LoadZoneinfoFile { fileName } {$/;"	p
LoadedLibrary	generic/tclLoad.c	/^typedef struct LoadedLibrary {$/;"	s	file:
LoadedLibrary	generic/tclLoad.c	/^} LoadedLibrary;$/;"	t	typeref:struct:LoadedLibrary	file:
LocalCache	generic/tclInt.h	/^typedef struct LocalCache {$/;"	s
LocalCache	generic/tclInt.h	/^} LocalCache;$/;"	t	typeref:struct:LocalCache
LocalGetInternalRep	generic/tclVar.c	/^#define LocalGetInternalRep(/;"	d	file:
LocalScalar	generic/tclCompile.h	/^#define LocalScalar(/;"	d
LocalScalarFromToken	generic/tclCompile.h	/^#define LocalScalarFromToken(/;"	d
LocalSetInternalRep	generic/tclVar.c	/^#define LocalSetInternalRep(/;"	d	file:
LocalVarName	generic/tclOOInfo.c	/^LocalVarName($/;"	f	typeref:typename:Tcl_Obj *	file:
LocalVarsSize	compat/zlib/contrib/asm686/match.S	/^#define	LocalVarsSize	/;"	d	file:
LocalVarsSize	compat/zlib/contrib/gcc_gvmat64/gvmat64.S	/^#define LocalVarsSize /;"	d	file:
LocaleNumeralMatcher	library/clockclassic.tcl	/^proc LocaleNumeralMatcher {l} {$/;"	p
LocaleTable	unix/tclUnixInit.c	/^} LocaleTable;$/;"	t	typeref:struct:__anonf052aa840508	file:
LocalizeFormat	library/clock.tcl	/^proc ::tcl::clock::LocalizeFormat { locale format mcd } {$/;"	p	namespace:::tcl::clock
LocalizeFormat	library/clockclassic.tcl	/^proc LocalizeFormat { locale format } {$/;"	p
LocateArray	generic/tclVar.c	/^LocateArray($/;"	f	typeref:typename:int	file:
LocateDependency	win/nmakehlp.c	/^static int LocateDependency(const char *keypath)$/;"	f	typeref:typename:int	file:
LocateDependencyHelper	win/nmakehlp.c	/^static int LocateDependencyHelper(const char *dir, const char *keypath)$/;"	f	typeref:typename:int	file:
LocateTargetAddresses	generic/tclOptimize.c	/^LocateTargetAddresses($/;"	f	typeref:typename:void	file:
LockBucket	generic/tclThreadAlloc.c	/^LockBucket($/;"	f	typeref:typename:void	file:
Log	tests/httpTest.tcl	/^proc http::Log {args} {$/;"	p	namespace:http
LogError	library/icu.tcl	/^    proc LogError {message} {$/;"	p	namespace:::::tcl::unsupported::icu
LogRecord	tests/httpTest.tcl	/^proc httpTest::LogRecord {txt} {$/;"	p	namespace:httpTest
LongerMatch	compat/zlib/contrib/asm686/match.S	/^LongerMatch:	movl	nicematch(%esp), %ebx$/;"	l
LongerMatch	compat/zlib/contrib/gcc_gvmat64/gvmat64.S	/^LongerMatch:$/;"	l
LookForFreshCatches	generic/tclAssembly.c	/^LookForFreshCatches($/;"	f	typeref:typename:void	file:
LookUpFileHandler	macosx/tclMacOSXNotify.c	/^LookUpFileHandler($/;"	f	typeref:typename:FileHandler *	file:
LookUpFileHandler	unix/tclUnixNotfy.c	/^LookUpFileHandler($/;"	f	typeref:typename:FileHandler *	file:
Lookahead	compat/zlib/contrib/gcc_gvmat64/gvmat64.S	/^#define Lookahead        [ rcx + dsLookahead]/;"	d	file:
LookaheadLess	compat/zlib/contrib/asm686/match.S	/^LookaheadLess:	movl	%ebx, nicematch(%esp)$/;"	l
LookaheadRet	compat/zlib/contrib/asm686/match.S	/^LookaheadRet:$/;"	l
LookupLastTransition	generic/tclClock.c	/^LookupLastTransition($/;"	f	typeref:typename:Tcl_Obj *
LookupLastTransition	generic/tclClockClassic.c	/^LookupLastTransition($/;"	f	typeref:typename:Tcl_Obj *	file:
LookupLiteralEntry	generic/tclLiteral.c	/^LookupLiteralEntry($/;"	f	typeref:typename:LiteralEntry *	file:
LookupLoop	compat/zlib/contrib/asm686/match.S	/^LookupLoop:$/;"	l
LookupLoop	compat/zlib/contrib/gcc_gvmat64/gvmat64.S	/^LookupLoop:$/;"	l
LookupLoop1	compat/zlib/contrib/gcc_gvmat64/gvmat64.S	/^LookupLoop1:$/;"	l
LookupLoop2	compat/zlib/contrib/gcc_gvmat64/gvmat64.S	/^LookupLoop2:$/;"	l
LookupLoop4	compat/zlib/contrib/gcc_gvmat64/gvmat64.S	/^LookupLoop4:$/;"	l
LookupLoopIsZero	compat/zlib/contrib/gcc_gvmat64/gvmat64.S	/^LookupLoopIsZero:$/;"	l
LookupWord	generic/tclDate.c	/^LookupWord($/;"	f	typeref:typename:int	file:
LookupWord	generic/tclDateClassic.c	/^LookupWord($/;"	f	typeref:typename:int	file:
LoopCmps	compat/zlib/contrib/asm686/match.S	/^LoopCmps:$/;"	l
LoopCmps	compat/zlib/contrib/gcc_gvmat64/gvmat64.S	/^LoopCmps:$/;"	l
LoopEntry	compat/zlib/contrib/asm686/match.S	/^LoopEntry:	movzwl	-1(%esi,%ecx), %eax$/;"	l
LoopEntry	compat/zlib/contrib/gcc_gvmat64/gvmat64.S	/^LoopEntry:$/;"	l
LoopEntry1	compat/zlib/contrib/gcc_gvmat64/gvmat64.S	/^LoopEntry1:$/;"	l
LoopEntry2	compat/zlib/contrib/gcc_gvmat64/gvmat64.S	/^LoopEntry2:$/;"	l
LoopEntry4	compat/zlib/contrib/gcc_gvmat64/gvmat64.S	/^LoopEntry4:$/;"	l
Lossless	generic/tclIO.c	/^Lossless($/;"	f	typeref:typename:int
LremoveIndexCompare	generic/tclCmdIL.c	/^LremoveIndexCompare($/;"	f	typeref:typename:int	file:
LsetFlat	generic/tclListObj.c	/^LsetFlat(tclObjTypeInterfaceArgsListSetDeep)$/;"	f	typeref:typename:int
Lsort_Switches	generic/tclCmdIL.c	/^    enum Lsort_Switches {$/;"	g	function:Tcl_LsortObjCmd	file:
Lvarincr	library/opt/optparse.tcl	/^proc ::tcl::Lvarincr {listName indexLst {howMuch 1}} {$/;"	p	namespace:::tcl
Lvarincr1	library/opt/optparse.tcl	/^proc ::tcl::Lvarincr1 {listName index {howMuch 1}} {$/;"	p	namespace:::tcl
Lvarpop	library/opt/optparse.tcl	/^proc ::tcl::Lvarpop {listName} {$/;"	p	namespace:::tcl
Lvarpop1	library/opt/optparse.tcl	/^proc ::tcl::Lvarpop1 {listName} {$/;"	p	namespace:::tcl
Lvarset	library/opt/optparse.tcl	/^proc ::tcl::Lvarset {listName indexLst newValue} {$/;"	p	namespace:::tcl
Lvarset1	library/opt/optparse.tcl	/^proc ::tcl::Lvarset1 {listName index newValue} {$/;"	p	namespace:::tcl
Lvarset1nc	library/opt/optparse.tcl	/^proc ::tcl::Lvarset1nc {listName index newValue} {$/;"	p	namespace:::tcl
MACHER	unix/Makefile.in	/^MACHER			= @MACHER_PROG@$/;"	m
MACHER_PROG	unix/tcl.m4	/^    AC_SUBST(MACHER_PROG)$/;"	s
MACHINE	win/configure.ac	/^AC_SUBST(MACHINE)$/;"	s
MACOSX_CREATOR_ATTRIBUTE	macosx/tclMacOSXFCmd.c	/^    MACOSX_CREATOR_ATTRIBUTE,$/;"	e	enum:__anon5fc3cb980103	file:
MACOSX_CREATOR_ATTRIBUTE	unix/tclUnixFCmd.c	/^    MACOSX_CREATOR_ATTRIBUTE, MACOSX_TYPE_ATTRIBUTE, MACOSX_HIDDEN_ATTRIBUTE,$/;"	e	enum:__anone64b006a0103	file:
MACOSX_HIDDEN_ATTRIBUTE	macosx/tclMacOSXFCmd.c	/^    MACOSX_HIDDEN_ATTRIBUTE,$/;"	e	enum:__anon5fc3cb980103	file:
MACOSX_HIDDEN_ATTRIBUTE	unix/tclUnixFCmd.c	/^    MACOSX_CREATOR_ATTRIBUTE, MACOSX_TYPE_ATTRIBUTE, MACOSX_HIDDEN_ATTRIBUTE,$/;"	e	enum:__anone64b006a0103	file:
MACOSX_RSRCLENGTH_ATTRIBUTE	macosx/tclMacOSXFCmd.c	/^    MACOSX_RSRCLENGTH_ATTRIBUTE,$/;"	e	enum:__anon5fc3cb980103	file:
MACOSX_RSRCLENGTH_ATTRIBUTE	unix/tclUnixFCmd.c	/^    MACOSX_RSRCLENGTH_ATTRIBUTE,$/;"	e	enum:__anone64b006a0103	file:
MACOSX_TYPE_ATTRIBUTE	macosx/tclMacOSXFCmd.c	/^    MACOSX_TYPE_ATTRIBUTE,$/;"	e	enum:__anon5fc3cb980103	file:
MACOSX_TYPE_ATTRIBUTE	unix/tclUnixFCmd.c	/^    MACOSX_CREATOR_ATTRIBUTE, MACOSX_TYPE_ATTRIBUTE, MACOSX_HIDDEN_ATTRIBUTE,$/;"	e	enum:__anone64b006a0103	file:
MAC_OSX_DIR	unix/Makefile.in	/^MAC_OSX_DIR		= $(TOP_DIR)\/macosx$/;"	m
MAC_OSX_OBJS	unix/Makefile.in	/^MAC_OSX_OBJS = tclMacOSXBundle.o tclMacOSXFCmd.o tclMacOSXNotify.o$/;"	m
MAC_OSX_SRCS	unix/Makefile.in	/^MAC_OSX_SRCS = \\$/;"	m
MAC_OSX_TCL	unix/tcl.m4	/^	    AC_DEFINE(MAC_OSX_TCL, 1, [Is this a Mac I see before me?])$/;"	d
MAGIC	generic/tclAlloc.c	/^#define MAGIC	/;"	d	file:
MAGIC	generic/tclThreadAlloc.c	/^#define MAGIC	/;"	d	file:
MAJOR_VERSION	unix/Makefile.in	/^MAJOR_VERSION		= @TCL_MAJOR_VERSION@$/;"	m
MAKEFILE_SHELL	unix/configure.ac	/^AC_SUBST(MAKEFILE_SHELL)$/;"	s
MAKEULONG64	compat/zlib/contrib/minizip/zip.c	/^#define MAKEULONG64(/;"	d	file:
MAKE_ARGS_V	macosx/GNUmakefile	/^MAKE_ARGS_V		= $(foreach v,${MAKE_VARS},$v='${$v}')$/;"	m
MAKE_DLL	win/configure.ac	/^AC_SUBST(MAKE_DLL)$/;"	s
MAKE_EXE	win/configure.ac	/^AC_SUBST(MAKE_EXE)$/;"	s
MAKE_LIB	unix/tcl.m4	/^    AC_SUBST(MAKE_LIB)$/;"	s
MAKE_LIB	win/configure.ac	/^AC_SUBST(MAKE_LIB)$/;"	s
MAKE_STUB_LIB	unix/tcl.m4	/^    AC_SUBST(MAKE_STUB_LIB)$/;"	s
MAKE_STUB_LIB	win/configure.ac	/^AC_SUBST(MAKE_STUB_LIB)$/;"	s
MAKE_VARS	macosx/GNUmakefile	/^MAKE_VARS		:= INSTALL_ROOT INSTALL_TARGETS VERSION GENERIC_FLAGS$/;"	m
MALLOC	generic/regcustom.h	/^#define	MALLOC(/;"	d
MALLOC	generic/regguts.h	/^#define	MALLOC(/;"	d
MAN1_INSTALL_DIR	unix/Makefile.in	/^MAN1_INSTALL_DIR	= $(MAN_INSTALL_DIR)\/man1$/;"	m
MAN1_INSTALL_DIR	win/Makefile.in	/^MAN1_INSTALL_DIR = $(MAN_INSTALL_DIR)\/man1$/;"	m
MAN3_INSTALL_DIR	unix/Makefile.in	/^MAN3_INSTALL_DIR	= $(MAN_INSTALL_DIR)\/man3$/;"	m
MAN3_INSTALL_DIR	win/Makefile.in	/^MAN3_INSTALL_DIR = $(MAN_INSTALL_DIR)\/man3$/;"	m
MANDIR	macosx/GNUmakefile	/^MANDIR			?= ${PREFIX}\/man$/;"	m
MANN_INSTALL_DIR	unix/Makefile.in	/^MANN_INSTALL_DIR	= $(MAN_INSTALL_DIR)\/mann$/;"	m
MANN_INSTALL_DIR	win/Makefile.in	/^MANN_INSTALL_DIR = $(MAN_INSTALL_DIR)\/mann$/;"	m
MAN_FLAGS	unix/Makefile.in	/^MAN_FLAGS		= @MAN_FLAGS@$/;"	m
MAN_FLAGS	unix/tcl.m4	/^    AC_SUBST(MAN_FLAGS)$/;"	s
MAN_INSTALL_DIR	unix/Makefile.in	/^MAN_INSTALL_DIR		= $(INSTALL_ROOT)$(mandir)$/;"	m
MAN_INSTALL_DIR	win/Makefile.in	/^MAN_INSTALL_DIR		= $(INSTALL_ROOT)$(mandir)$/;"	m
MAN_INSTALL_DIR_NATIVE	win/Makefile.in	/^MAN_INSTALL_DIR_NATIVE	= $(shell $(CYGPATH) '$(MAN_INSTALL_DIR)')$/;"	m
MAP_FILE	generic/tclZipfs.c	/^#define MAP_FILE /;"	d	file:
MARGIN	compat/zlib/examples/fitblk.c	/^#define MARGIN /;"	d	file:
MARK_LEFT	generic/tclCompExpr.c	/^    MARK_LEFT,		\/* Next step of traversal is to visit left subtree *\/$/;"	e	enum:Marks	file:
MARK_PARENT	generic/tclCompExpr.c	/^    MARK_PARENT		\/* Next step of traversal is to return to parent *\/$/;"	e	enum:Marks	file:
MARK_RIGHT	generic/tclCompExpr.c	/^    MARK_RIGHT,		\/* Next step of traversal is to visit right subtree *\/$/;"	e	enum:Marks	file:
MASK_SIZE	unix/tclUnixPort.h	/^#define MASK_SIZE	/;"	d
MATCH	compat/zlib/inflate.h	/^            MATCH,      \/* o: waiting for output space to copy string *\/$/;"	e	enum:__anon6bf0a2910103
MATCHINDIRECTORYPROC	doc/FileSystem.3	/^.SS MATCHINDIRECTORYPROC$/;"	S	section:Filesystem""FILESYSTEM OPERATIONS
MATHHDRS	unix/Makefile.in	/^MATHHDRS	= $(GENERIC_DIR)\/tclTomMath.h $(GENERIC_DIR)\/tclTomMathDecls.h$/;"	m
MATH_FUNC_PREFIX_LEN	generic/tclBasic.c	/^#define MATH_FUNC_PREFIX_LEN /;"	d	file:
MATH_OP_PREFIX_LEN	generic/tclBasic.c	/^#define MATH_OP_PREFIX_LEN /;"	d	file:
MATH_SYMBOL	generic/tclUniData.c	/^    MATH_SYMBOL,$/;"	e	enum:__anon910316cb0103	file:
MAXALLOC	generic/tclThreadAlloc.c	/^#define MAXALLOC	/;"	d	file:
MAXBITS	compat/zlib/contrib/blast/blast.c	/^#define MAXBITS /;"	d	file:
MAXBITS	compat/zlib/contrib/infback9/inftree9.c	/^#define MAXBITS /;"	d	file:
MAXBITS	compat/zlib/contrib/puff/puff.c	/^#define MAXBITS /;"	d	file:
MAXBITS	compat/zlib/inftrees.c	/^#define MAXBITS /;"	d	file:
MAXCALLOC	generic/tclCmdIL.c	/^#   define MAXCALLOC /;"	d	file:
MAXCODES	compat/zlib/contrib/puff/puff.c	/^#define MAXCODES /;"	d	file:
MAXDCODES	compat/zlib/contrib/puff/puff.c	/^#define MAXDCODES /;"	d	file:
MAXFILENAME	compat/zlib/contrib/minizip/miniunz.c	/^#define MAXFILENAME /;"	d	file:
MAXFILENAME	compat/zlib/contrib/minizip/minizip.c	/^#define MAXFILENAME /;"	d	file:
MAXLCODES	compat/zlib/contrib/puff/puff.c	/^#define MAXLCODES /;"	d	file:
MAXMALLOC	generic/tclAlloc.c	/^#define MAXMALLOC	/;"	d	file:
MAXNAMLEN	unix/tclUnixPort.h	/^#	define MAXNAMLEN	/;"	d
MAXPATH	win/tclWinPort.h	/^#   define MAXPATH /;"	d
MAXPATHLEN	unix/tclUnixPort.h	/^#	define MAXPATHLEN	/;"	d
MAXPATHLEN	win/tclWinPort.h	/^#   define MAXPATHLEN /;"	d
MAXPOW	generic/tclStrToD.c	/^#define MAXPOW	/;"	d	file:
MAXRETRY	unix/tclUnixSock.c	/^#define MAXRETRY /;"	d	file:
MAXSEG_64K	compat/zlib/zconf.h	/^#  define MAXSEG_64K$/;"	d
MAXSEG_64K	compat/zlib/zconf.h.in	/^#  define MAXSEG_64K$/;"	d	file:
MAXU32	compat/zlib/contrib/minizip/ioapi.h	/^#define MAXU32 /;"	d
MAXWIN	compat/zlib/contrib/blast/blast.c	/^#define MAXWIN /;"	d	file:
MAX_BITS	compat/zlib/deflate.h	/^#define MAX_BITS /;"	d
MAX_BL_BITS	compat/zlib/trees.c	/^#define MAX_BL_BITS /;"	d	file:
MAX_BUFFER_SIZE	generic/tclZlib.c	/^#define MAX_BUFFER_SIZE	/;"	d	file:
MAX_CHANNEL_BUFFER_SIZE	generic/tclIO.c	/^#define MAX_CHANNEL_BUFFER_SIZE /;"	d	file:
MAX_COLOR	generic/regguts.h	/^#define MAX_COLOR	/;"	d
MAX_COMMENT_LEN	generic/tclZlib.c	/^#define MAX_COMMENT_LEN	/;"	d	file:
MAX_DIST	compat/zlib/deflate.h	/^#define MAX_DIST(/;"	d
MAX_EXACT	generic/tclBasic.c	/^#   define MAX_EXACT /;"	d	file:
MAX_FLOAT_SIZE	generic/tclStringObj.c	/^#define MAX_FLOAT_SIZE /;"	d	file:
MAX_FMT_RESULT_THRESHOLD	generic/tclDate.h	/^#define MAX_FMT_RESULT_THRESHOLD /;"	d
MAX_INSTRUCTION_OPERANDS	generic/tclCompile.h	/^#define MAX_INSTRUCTION_OPERANDS /;"	d
MAX_KEY_LENGTH	win/tclWinReg.c	/^#   define MAX_KEY_LENGTH	/;"	d	file:
MAX_MATCH	compat/zlib/contrib/asm686/match.S	/^#define	MAX_MATCH	/;"	d	file:
MAX_MATCH	compat/zlib/contrib/gcc_gvmat64/gvmat64.S	/^#define    MAX_MATCH /;"	d	file:
MAX_MATCH	compat/zlib/zutil.h	/^#define MAX_MATCH /;"	d
MAX_MATCH_8	compat/zlib/contrib/asm686/match.S	/^#define	MAX_MATCH_8	/;"	d	file:
MAX_MEM_LEVEL	compat/zlib/zconf.h	/^#    define MAX_MEM_LEVEL /;"	d
MAX_MEM_LEVEL	compat/zlib/zconf.h.in	/^#    define MAX_MEM_LEVEL /;"	d	file:
MAX_NAME_LEN	compat/zlib/test/minigzip.c	/^#define MAX_NAME_LEN /;"	d	file:
MAX_NESTING_DEPTH	generic/tclInt.h	/^#define MAX_NESTING_DEPTH	/;"	d
MAX_PATH	unix/tclUnixPort.h	/^#   define MAX_PATH /;"	d
MAX_PIPES	unix/tclUnixTest.c	/^#define MAX_PIPES /;"	d	file:
MAX_PTR	compat/zlib/zutil.c	/^#define MAX_PTR /;"	d	file:
MAX_READDIR_UNLINK_THRESHOLD	unix/tclUnixFCmd.c	/^#define MAX_READDIR_UNLINK_THRESHOLD /;"	d	file:
MAX_REGISTERED_COMMANDS	unix/dltest/pkgua.c	/^#define MAX_REGISTERED_COMMANDS /;"	d	file:
MAX_REPARSE_SIZE	win/tclWinFile.c	/^#define MAX_REPARSE_SIZE	/;"	d	file:
MAX_STORE	compat/zlib/examples/gzlog.c	/^#define MAX_STORE /;"	d	file:
MAX_STORED	compat/zlib/deflate.c	/^#define MAX_STORED /;"	d	file:
MAX_STRINGS	generic/tclTestObj.c	/^#define MAX_STRINGS /;"	d	file:
MAX_WBITS	compat/zlib/zconf.h	/^#  define MAX_WBITS /;"	d
MAX_WBITS	compat/zlib/zconf.h.in	/^#  define MAX_WBITS /;"	d	file:
MAX_WINSIZE	libtommath/bn_s_mp_exptmod.c	/^#   define MAX_WINSIZE /;"	d	file:
MAX_WINSIZE	libtommath/bn_s_mp_exptmod_fast.c	/^#   define MAX_WINSIZE /;"	d	file:
MAX_ZONE_LEN	generic/tclClockFmt.c	/^#define MAX_ZONE_LEN /;"	d	file:
MBCallback	generic/tclIO.c	/^MBCallback($/;"	f	typeref:typename:void	file:
MBError	generic/tclIO.c	/^MBError($/;"	f	typeref:typename:void	file:
MBEvent	generic/tclIO.c	/^MBEvent($/;"	f	typeref:typename:void	file:
MBRead	generic/tclIO.c	/^MBRead($/;"	f	typeref:typename:int	file:
MBWrite	generic/tclIO.c	/^MBWrite($/;"	f	typeref:typename:int	file:
MCLIT_AM	generic/tclDate.h	/^    MCLIT_AM,  MCLIT_PM,$/;"	e	enum:ClockMsgCtLiteral
MCLIT_BCE	generic/tclDate.h	/^    MCLIT_BCE,	 MCLIT_CE,$/;"	e	enum:ClockMsgCtLiteral
MCLIT_BCE2	generic/tclDate.h	/^    MCLIT_BCE2,	 MCLIT_CE2,$/;"	e	enum:ClockMsgCtLiteral
MCLIT_BCE3	generic/tclDate.h	/^    MCLIT_BCE3,	 MCLIT_CE3,$/;"	e	enum:ClockMsgCtLiteral
MCLIT_CE	generic/tclDate.h	/^    MCLIT_BCE,	 MCLIT_CE,$/;"	e	enum:ClockMsgCtLiteral
MCLIT_CE2	generic/tclDate.h	/^    MCLIT_BCE2,	 MCLIT_CE2,$/;"	e	enum:ClockMsgCtLiteral
MCLIT_CE3	generic/tclDate.h	/^    MCLIT_BCE3,	 MCLIT_CE3,$/;"	e	enum:ClockMsgCtLiteral
MCLIT_DAYS_OF_WEEK_ABBREV	generic/tclDate.h	/^    MCLIT_DAYS_OF_WEEK_FULL,  MCLIT_DAYS_OF_WEEK_ABBREV,  MCLIT_DAYS_OF_WEEK_COMB,$/;"	e	enum:ClockMsgCtLiteral
MCLIT_DAYS_OF_WEEK_COMB	generic/tclDate.h	/^    MCLIT_DAYS_OF_WEEK_FULL,  MCLIT_DAYS_OF_WEEK_ABBREV,  MCLIT_DAYS_OF_WEEK_COMB,$/;"	e	enum:ClockMsgCtLiteral
MCLIT_DAYS_OF_WEEK_FULL	generic/tclDate.h	/^    MCLIT_DAYS_OF_WEEK_FULL,  MCLIT_DAYS_OF_WEEK_ABBREV,  MCLIT_DAYS_OF_WEEK_COMB,$/;"	e	enum:ClockMsgCtLiteral
MCLIT_LOCALE_ERAS	generic/tclDate.h	/^    MCLIT_LOCALE_ERAS,$/;"	e	enum:ClockMsgCtLiteral
MCLIT_LOCALE_NUMERALS	generic/tclDate.h	/^    MCLIT_LOCALE_NUMERALS,$/;"	e	enum:ClockMsgCtLiteral
MCLIT_MONTHS_ABBREV	generic/tclDate.h	/^    MCLIT_MONTHS_FULL,	MCLIT_MONTHS_ABBREV,  MCLIT_MONTHS_COMB,$/;"	e	enum:ClockMsgCtLiteral
MCLIT_MONTHS_COMB	generic/tclDate.h	/^    MCLIT_MONTHS_FULL,	MCLIT_MONTHS_ABBREV,  MCLIT_MONTHS_COMB,$/;"	e	enum:ClockMsgCtLiteral
MCLIT_MONTHS_FULL	generic/tclDate.h	/^    MCLIT_MONTHS_FULL,	MCLIT_MONTHS_ABBREV,  MCLIT_MONTHS_COMB,$/;"	e	enum:ClockMsgCtLiteral
MCLIT_PM	generic/tclDate.h	/^    MCLIT_AM,  MCLIT_PM,$/;"	e	enum:ClockMsgCtLiteral
MCLIT__END	generic/tclDate.h	/^    MCLIT__END$/;"	e	enum:ClockMsgCtLiteral
MCLIT__NIL	generic/tclDate.h	/^    MCLIT__NIL, \/* placeholder *\/$/;"	e	enum:ClockMsgCtLiteral
MDEBUG	generic/regguts.h	/^#define	MDEBUG(/;"	d
MEM	compat/zlib/inflate.h	/^    MEM,        \/* got an inflate() memory error -- remain here until reset *\/$/;"	e	enum:__anon6bf0a2910103
MEMSTART	generic/tclExecute.c	/^#define MEMSTART(/;"	d	file:
MEM_ERROR	compat/zlib/contrib/ada/zlib.adb	/^       MEM_ERROR,$/;"	l	type:Return_Code_Enum	file:
MER24	generic/tclDate.h	/^    MERam, MERpm, MER24$/;"	e	enum:_MERIDIAN
MER24	generic/tclDateClassic.c	/^    MERam, MERpm, MER24$/;"	e	enum:_MERIDIAN	file:
MERIDIAN	generic/tclDate.h	/^} MERIDIAN;$/;"	t	typeref:enum:_MERIDIAN
MERIDIAN	generic/tclDateClassic.c	/^} MERIDIAN;$/;"	t	typeref:enum:_MERIDIAN	file:
MERam	generic/tclDate.h	/^    MERam, MERpm, MER24$/;"	e	enum:_MERIDIAN
MERam	generic/tclDateClassic.c	/^    MERam, MERpm, MER24$/;"	e	enum:_MERIDIAN	file:
MERpm	generic/tclDate.h	/^    MERam, MERpm, MER24$/;"	e	enum:_MERIDIAN
MERpm	generic/tclDateClassic.c	/^    MERam, MERpm, MER24$/;"	e	enum:_MERIDIAN	file:
MESSY	generic/regguts.h	/^#define	MESSY(/;"	d
METHOD CALL CONTEXTS	doc/Method.3	/^.SS "METHOD CALL CONTEXTS"$/;"	S	section:Tcl_Method""DESCRIPTION
METHOD CREATION	doc/Method.3	/^.SS "METHOD CREATION"$/;"	S	section:Tcl_Method""DESCRIPTION
METHOD TYPES	doc/Method.3	/^.SH "METHOD TYPES"$/;"	s	title:Tcl_Method
METH_BLOCKING	generic/tclIORChan.c	/^    METH_BLOCKING,$/;"	e	enum:__anon92d8dd290403	file:
METH_CGET	generic/tclIORChan.c	/^    METH_CGET,$/;"	e	enum:__anon92d8dd290403	file:
METH_CGETALL	generic/tclIORChan.c	/^    METH_CGETALL,$/;"	e	enum:__anon92d8dd290403	file:
METH_CLEAR	generic/tclIORTrans.c	/^    METH_CLEAR,$/;"	e	enum:__anon21e740770403	file:
METH_CONFIGURE	generic/tclIORChan.c	/^    METH_CONFIGURE,$/;"	e	enum:__anon92d8dd290403	file:
METH_DRAIN	generic/tclIORTrans.c	/^    METH_DRAIN,$/;"	e	enum:__anon21e740770403	file:
METH_FINAL	generic/tclIORChan.c	/^    METH_FINAL,$/;"	e	enum:__anon92d8dd290403	file:
METH_FINAL	generic/tclIORTrans.c	/^    METH_FINAL,$/;"	e	enum:__anon21e740770403	file:
METH_FLUSH	generic/tclIORTrans.c	/^    METH_FLUSH,$/;"	e	enum:__anon21e740770403	file:
METH_INIT	generic/tclIORChan.c	/^    METH_INIT,$/;"	e	enum:__anon92d8dd290403	file:
METH_INIT	generic/tclIORTrans.c	/^    METH_INIT,$/;"	e	enum:__anon21e740770403	file:
METH_LIMIT	generic/tclIORTrans.c	/^    METH_LIMIT,$/;"	e	enum:__anon21e740770403	file:
METH_READ	generic/tclIORChan.c	/^    METH_READ,$/;"	e	enum:__anon92d8dd290403	file:
METH_READ	generic/tclIORTrans.c	/^    METH_READ,$/;"	e	enum:__anon21e740770403	file:
METH_SEEK	generic/tclIORChan.c	/^    METH_SEEK,$/;"	e	enum:__anon92d8dd290403	file:
METH_TRUNCATE	generic/tclIORChan.c	/^    METH_TRUNCATE,$/;"	e	enum:__anon92d8dd290403	file:
METH_WATCH	generic/tclIORChan.c	/^    METH_WATCH,$/;"	e	enum:__anon92d8dd290403	file:
METH_WRITE	generic/tclIORChan.c	/^    METH_WRITE$/;"	e	enum:__anon92d8dd290403	file:
METH_WRITE	generic/tclIORTrans.c	/^    METH_WRITE$/;"	e	enum:__anon21e740770403	file:
MIN	compat/zlib/deflate.c	/^#define MIN(/;"	d	file:
MINALLOC	generic/tclThreadAlloc.c	/^#define MINALLOC	/;"	d	file:
MINBLOCK	generic/tclAlloc.c	/^#define MINBLOCK /;"	d	file:
MINIZIP_DIR	win/Makefile.in	/^MINIZIP_DIR		= $(ZLIB_DIR)\/contrib\/minizip$/;"	m
MINIZIP_DIR_NATIVE	win/Makefile.in	/^MINIZIP_DIR_NATIVE	= $(shell $(CYGPATH) '$(MINIZIP_DIR)')$/;"	m
MINIZIP_OBJS	unix/Makefile.in	/^MINIZIP_OBJS = \\$/;"	m
MINIZIP_OBJS	win/Makefile.in	/^MINIZIP_OBJS = \\$/;"	m
MINOR_VERSION	unix/Makefile.in	/^MINOR_VERSION		= @TCL_MINOR_VERSION@$/;"	m
MINUS	generic/tclCompExpr.c	/^#define MINUS		2	\/* Ambiguous. Resolves to UNARY_MINUS /;"	d	file:
MIN_FMT_RESULT_BLOCK_ALLOC	generic/tclDate.h	/^#define MIN_FMT_RESULT_BLOCK_ALLOC /;"	d
MIN_FMT_RESULT_BLOCK_DELTA	generic/tclDate.h	/^#define MIN_FMT_RESULT_BLOCK_DELTA /;"	d
MIN_LOOKAHEAD	compat/zlib/contrib/asm686/match.S	/^#define	MIN_LOOKAHEAD	/;"	d	file:
MIN_LOOKAHEAD	compat/zlib/contrib/gcc_gvmat64/gvmat64.S	/^#define    MIN_LOOKAHEAD /;"	d	file:
MIN_LOOKAHEAD	compat/zlib/deflate.h	/^#define MIN_LOOKAHEAD /;"	d
MIN_MATCH	compat/zlib/contrib/asm686/match.S	/^#define	MIN_MATCH	/;"	d	file:
MIN_MATCH	compat/zlib/contrib/gcc_gvmat64/gvmat64.S	/^#define    MIN_MATCH /;"	d	file:
MIN_MATCH	compat/zlib/zutil.h	/^#define MIN_MATCH /;"	d
MIN_NONSTREAM_BUFFER_SIZE	generic/tclZlib.c	/^#define MIN_NONSTREAM_BUFFER_SIZE /;"	d	file:
MISCELLANEOUS DETAILS	doc/Eval.3	/^.SH "MISCELLANEOUS DETAILS"$/;"	s	title:Tcl_Eval
MISSINGNAME	generic/tclVar.c	/^static const char MISSINGNAME[] =	"missing variable name";$/;"	v	typeref:typename:const char[]	file:
MIXED	generic/regguts.h	/^#define	MIXED	/;"	d
MIXIN_CONSISTENT	generic/tclOOCall.c	/^#define MIXIN_CONSISTENT(/;"	d	file:
MInvoke	generic/tclOOInt.h	/^struct MInvoke {$/;"	s
MInvoke	generic/tclOOInt.h	/^typedef struct MInvoke MInvoke;$/;"	t	typeref:struct:MInvoke
MKDIR	win/Makefile.in	/^MKDIR		= mkdir -p$/;"	m
MOD	compat/zlib/adler32.c	/^#  define MOD(/;"	d	file:
MOD	generic/tclCompExpr.c	/^#define MOD	/;"	d	file:
MOD28	compat/zlib/adler32.c	/^#  define MOD28(/;"	d	file:
MOD63	compat/zlib/adler32.c	/^#  define MOD63(/;"	d	file:
MODE	generic/tclIORChan.c	/^	MODE = 1,$/;"	e	enum:TclChanCreateObjCmd::ArgIndices	file:
MODE_EXPORT	generic/tclOODefineCmds.c	/^	MODE_EXPORT,$/;"	e	enum:TclOODefineMethodObjCmd::ExportMode	file:
MODE_PRIVATE	generic/tclOODefineCmds.c	/^	MODE_PRIVATE,$/;"	e	enum:TclOODefineMethodObjCmd::ExportMode	file:
MODE_UNEXPORT	generic/tclOODefineCmds.c	/^	MODE_UNEXPORT$/;"	e	enum:TclOODefineMethodObjCmd::ExportMode	file:
MODIFIER_LETTER	generic/tclUniData.c	/^    MODIFIER_LETTER,$/;"	e	enum:__anon910316cb0103	file:
MODIFIER_SYMBOL	generic/tclUniData.c	/^    MODIFIER_SYMBOL,$/;"	e	enum:__anon910316cb0103	file:
MODULE_INSTALL_DIR	unix/Makefile.in	/^MODULE_INSTALL_DIR	= $(SCRIPT_INSTALL_DIR)\/..\/tcl9$/;"	m
MODULE_INSTALL_DIR	win/Makefile.in	/^MODULE_INSTALL_DIR	= $(SCRIPT_INSTALL_DIR)\/..\/tcl9$/;"	m
MODULE_SCOPE	generic/tclInt.h	/^#	define MODULE_SCOPE /;"	d
MODULE_SCOPE	generic/tclPlatDecls.h	/^#	define MODULE_SCOPE /;"	d
MODULE_SCOPE	generic/tclTomMathDecls.h	/^#	define MODULE_SCOPE /;"	d
MODULE_SCOPE	unix/tcl.m4	/^		AC_DEFINE(MODULE_SCOPE, [__private_extern__],$/;"	d
MODULE_SCOPE	unix/tcl.m4	/^	AC_DEFINE(MODULE_SCOPE, [extern],$/;"	d
MODULE_SCOPE	unix/tcl.m4	/^	AC_DEFINE(MODULE_SCOPE,$/;"	d
MODULE_SCOPE	unix/tclAppInit.c	/^#   define MODULE_SCOPE /;"	d	file:
MODULE_SCOPE	unix/tclLoadDyld.c	/^#   define MODULE_SCOPE /;"	d	file:
MODULE_SCOPE	win/tcl.m4	/^	AC_DEFINE(MODULE_SCOPE, [extern], [No need to mark inidividual symbols as hidden])$/;"	d
MODULE_SCOPE	win/tclAppInit.c	/^#   define MODULE_SCOPE /;"	d	file:
MOST_BITS	generic/tclStrToD.c	/^#define MOST_BITS	/;"	d	file:
MP_32BIT	libtommath/tommath.h	/^#   define MP_32BIT$/;"	d
MP_64BIT	libtommath/tommath.h	/^#         define MP_64BIT$/;"	d
MP_64BIT	win/configure.ac	/^    AC_DEFINE(MP_64BIT, 1, [Using libtommath.dll in 64-bit mode])$/;"	d
MP_64BIT	win/tclWinPort.h	/^#   define MP_64BIT$/;"	d
MP_BIG_ENDIAN	generic/tclTomMath.h	/^#   define MP_BIG_ENDIAN /;"	d
MP_BIG_ENDIAN	libtommath/tommath.h	/^   MP_BIG_ENDIAN     =  1$/;"	e	enum:__anon3ba6a9150603
MP_BIG_ENDIAN	libtommath/tommath.h	/^#define MP_BIG_ENDIAN /;"	d
MP_BUF	generic/tclTomMath.h	/^#   define MP_BUF /;"	d
MP_BUF	libtommath/tommath.h	/^   MP_BUF   = -5   \/* buffer overflow, supplied buffer too small *\/$/;"	e	enum:__anon3ba6a9150403
MP_BUF	libtommath/tommath.h	/^#define MP_BUF /;"	d
MP_CALLOC	generic/tclTomMathDecls.h	/^#define MP_CALLOC(/;"	d
MP_CALLOC	libtommath/tommath_private.h	/^#   define MP_CALLOC(/;"	d
MP_DEFAULT_KARATSUBA_MUL_CUTOFF	libtommath/tommath_cutoffs.h	/^#define MP_DEFAULT_KARATSUBA_MUL_CUTOFF /;"	d
MP_DEFAULT_KARATSUBA_SQR_CUTOFF	libtommath/tommath_cutoffs.h	/^#define MP_DEFAULT_KARATSUBA_SQR_CUTOFF /;"	d
MP_DEFAULT_TOOM_MUL_CUTOFF	libtommath/tommath_cutoffs.h	/^#define MP_DEFAULT_TOOM_MUL_CUTOFF /;"	d
MP_DEFAULT_TOOM_SQR_CUTOFF	libtommath/tommath_cutoffs.h	/^#define MP_DEFAULT_TOOM_SQR_CUTOFF /;"	d
MP_DEPRECATED	libtommath/tommath.h	/^#  define MP_DEPRECATED(/;"	d
MP_DEPRECATED_PRAGMA	generic/tclTomMath.h	/^#   define MP_DEPRECATED_PRAGMA(/;"	d
MP_DEPRECATED_PRAGMA	libtommath/tommath.h	/^#  define MP_DEPRECATED_PRAGMA(/;"	d
MP_DEPRECATED_PRAGMA	libtommath/tommath.h	/^#  define MP_DEPRECATED_PRAGMA(s) PRIVATE_MP_DEPRECATED_PRAGMA(/;"	d
MP_DEV_URANDOM	libtommath/bn_s_mp_rand_platform.c	/^#define MP_DEV_URANDOM /;"	d	file:
MP_DIGIT_BIT	libtommath/tommath.h	/^#   define MP_DIGIT_BIT /;"	d
MP_DIGIT_MAX	libtommath/tommath.h	/^#define MP_DIGIT_MAX /;"	d
MP_EQ	generic/tclTomMath.h	/^#   define MP_EQ /;"	d
MP_EQ	libtommath/tommath.h	/^   MP_EQ = 0,     \/* equal *\/$/;"	e	enum:__anon3ba6a9150203
MP_EQ	libtommath/tommath.h	/^#define MP_EQ /;"	d
MP_ERR	generic/tclTomMath.h	/^#   define MP_ERR /;"	d
MP_ERR	libtommath/tommath.h	/^   MP_ERR   = -1,  \/* unknown error *\/$/;"	e	enum:__anon3ba6a9150403
MP_ERR	libtommath/tommath.h	/^#define MP_ERR /;"	d
MP_FREE	generic/tclTomMathDecls.h	/^#define MP_FREE(/;"	d
MP_FREE	libtommath/tommath_private.h	/^#   define MP_FREE(/;"	d
MP_FREE_BUFFER	libtommath/tommath_private.h	/^#  define MP_FREE_BUFFER(/;"	d
MP_FREE_DIGITS	libtommath/tommath_private.h	/^#  define MP_FREE_DIGITS(/;"	d
MP_GET_ENDIANNESS	libtommath/tommath_private.h	/^#define MP_GET_ENDIANNESS(/;"	d
MP_GET_MAG	libtommath/tommath_private.h	/^#define MP_GET_MAG(/;"	d
MP_GET_SIGNED	libtommath/bn_deprecated.c	/^MP_GET_SIGNED(mp_get_ll, mp_get_mag_u64, long long, uint64_t)$/;"	f
MP_GET_SIGNED	libtommath/tommath_private.h	/^#define MP_GET_SIGNED(/;"	d
MP_GT	generic/tclTomMath.h	/^#   define MP_GT /;"	d
MP_GT	libtommath/tommath.h	/^   MP_GT = 1      \/* greater than *\/$/;"	e	enum:__anon3ba6a9150203
MP_GT	libtommath/tommath.h	/^#define MP_GT /;"	d
MP_HAS	libtommath/tommath_private.h	/^#define MP_HAS(/;"	d
MP_INIT_INT	libtommath/tommath_private.h	/^#define MP_INIT_INT(/;"	d
MP_INT_DECLARED	generic/tclTomMath.h	/^#	define MP_INT_DECLARED$/;"	d
MP_INT_DECLARED	libtommath/tommath.h	/^#define MP_INT_DECLARED$/;"	d
MP_IS_2EXPT	libtommath/tommath_private.h	/^#define MP_IS_2EXPT(/;"	d
MP_IS_EVEN	libtommath/tommath_private.h	/^#define MP_IS_EVEN(/;"	d
MP_IS_ODD	libtommath/tommath_private.h	/^#define MP_IS_ODD(/;"	d
MP_IS_ZERO	libtommath/tommath_private.h	/^#define MP_IS_ZERO(/;"	d
MP_ITER	generic/tclTomMath.h	/^#   define MP_ITER /;"	d
MP_ITER	libtommath/tommath.h	/^   MP_ITER  = -4,  \/* maximum iterations reached *\/$/;"	e	enum:__anon3ba6a9150403
MP_ITER	libtommath/tommath.h	/^#define MP_ITER /;"	d
MP_KARATSUBA_MUL_CUTOFF	libtommath/tommath_private.h	/^#  define MP_KARATSUBA_MUL_CUTOFF /;"	d
MP_KARATSUBA_SQR_CUTOFF	libtommath/tommath_private.h	/^#  define MP_KARATSUBA_SQR_CUTOFF /;"	d
MP_LITTLE_ENDIAN	generic/tclTomMath.h	/^#   define MP_LITTLE_ENDIAN /;"	d
MP_LITTLE_ENDIAN	libtommath/tommath.h	/^   MP_LITTLE_ENDIAN  = -1,$/;"	e	enum:__anon3ba6a9150603
MP_LITTLE_ENDIAN	libtommath/tommath.h	/^#define MP_LITTLE_ENDIAN /;"	d
MP_LSB_FIRST	generic/tclTomMath.h	/^#   define MP_LSB_FIRST /;"	d
MP_LSB_FIRST	libtommath/tommath.h	/^   MP_LSB_FIRST = -1,$/;"	e	enum:__anon3ba6a9150503
MP_LSB_FIRST	libtommath/tommath.h	/^#define MP_LSB_FIRST /;"	d
MP_LT	generic/tclTomMath.h	/^#   define MP_LT /;"	d
MP_LT	libtommath/tommath.h	/^   MP_LT = -1,    \/* less than *\/$/;"	e	enum:__anon3ba6a9150203
MP_LT	libtommath/tommath.h	/^#define MP_LT /;"	d
MP_MALLOC	generic/tclTomMathDecls.h	/^#define MP_MALLOC(/;"	d
MP_MALLOC	libtommath/tommath_private.h	/^#   define MP_MALLOC(/;"	d
MP_MASK	libtommath/tommath.h	/^#define MP_MASK /;"	d
MP_MAX	libtommath/tommath_private.h	/^#define MP_MAX(/;"	d
MP_MAXFAST	libtommath/tommath_private.h	/^#define MP_MAXFAST /;"	d
MP_MEM	generic/tclTomMath.h	/^#   define MP_MEM /;"	d
MP_MEM	libtommath/tommath.h	/^   MP_MEM   = -2,  \/* out of mem *\/$/;"	e	enum:__anon3ba6a9150403
MP_MEM	libtommath/tommath.h	/^#define MP_MEM /;"	d
MP_MIN	libtommath/tommath_private.h	/^#define MP_MIN(/;"	d
MP_MIN_PREC	libtommath/tommath_private.h	/^#define MP_MIN_PREC /;"	d
MP_MSB_FIRST	generic/tclTomMath.h	/^#   define MP_MSB_FIRST /;"	d
MP_MSB_FIRST	libtommath/tommath.h	/^   MP_MSB_FIRST =  1$/;"	e	enum:__anon3ba6a9150503
MP_MSB_FIRST	libtommath/tommath.h	/^#define MP_MSB_FIRST /;"	d
MP_NATIVE_ENDIAN	generic/tclTomMath.h	/^#   define MP_NATIVE_ENDIAN /;"	d
MP_NATIVE_ENDIAN	libtommath/tommath.h	/^   MP_NATIVE_ENDIAN  =  0,$/;"	e	enum:__anon3ba6a9150603
MP_NATIVE_ENDIAN	libtommath/tommath.h	/^#define MP_NATIVE_ENDIAN /;"	d
MP_NEG	generic/tclTomMath.h	/^#   define MP_NEG /;"	d
MP_NEG	libtommath/tommath.h	/^   MP_NEG = 1     \/* negative *\/$/;"	e	enum:__anon3ba6a9150103
MP_NEG	libtommath/tommath.h	/^#define MP_NEG /;"	d
MP_NO	libtommath/tommath.h	/^   MP_NO = 0,$/;"	e	enum:__anon3ba6a9150303
MP_NO	libtommath/tommath.h	/^#define MP_NO /;"	d
MP_NO_FILE	libtommath/tommath.h	/^#  define MP_NO_FILE$/;"	d
MP_NULL_TERMINATED	libtommath/tommath.h	/^#   define MP_NULL_TERMINATED /;"	d
MP_NULL_TERMINATED	libtommath/tommath.h	/^#   define MP_NULL_TERMINATED$/;"	d
MP_OKAY	generic/tclTomMath.h	/^#   define MP_OKAY /;"	d
MP_OKAY	libtommath/tommath.h	/^   MP_OKAY  = 0,   \/* no error *\/$/;"	e	enum:__anon3ba6a9150403
MP_OKAY	libtommath/tommath.h	/^#define MP_OKAY /;"	d
MP_PREC	libtommath/tommath.h	/^#   define MP_PREC (MP_DEPRECATED_PRAGMA("MP_PREC is an internal macro") PRIVATE_MP_PREC)/;"	d
MP_PREC	libtommath/tommath_private.h	/^#   define MP_PREC PRIVATE_MP_PREC$/;"	d
MP_PREC	unix/configure.ac	/^AC_DEFINE(MP_PREC, 4, [Default libtommath precision.])$/;"	d
MP_PRIME_2MSB_ON	libtommath/tommath.h	/^#define MP_PRIME_2MSB_ON /;"	d
MP_PRIME_BBS	libtommath/tommath.h	/^#define MP_PRIME_BBS /;"	d
MP_PRIME_SAFE	libtommath/tommath.h	/^#define MP_PRIME_SAFE /;"	d
MP_PRIVATE	libtommath/tommath_private.h	/^#   define MP_PRIVATE /;"	d
MP_PRIVATE	libtommath/tommath_private.h	/^#   define MP_PRIVATE$/;"	d
MP_RANGE	libtommath/tommath.h	/^#define MP_RANGE      (MP_DEPRECATED_PRAGMA("MP_RANGE /;"	d
MP_REALLOC	generic/tclTomMathDecls.h	/^#define MP_REALLOC(/;"	d
MP_REALLOC	libtommath/tommath_private.h	/^#   define MP_REALLOC(/;"	d
MP_SET_SIGNED	libtommath/tommath_private.h	/^#define MP_SET_SIGNED(/;"	d
MP_SET_UNSIGNED	libtommath/tommath_private.h	/^#define MP_SET_UNSIGNED(/;"	d
MP_SIZEOF_BITS	libtommath/tommath_private.h	/^#define MP_SIZEOF_BITS(/;"	d
MP_SIZEOF_MP_DIGIT	libtommath/tommath.h	/^#define MP_SIZEOF_MP_DIGIT (MP_DEPRECATED_PRAGMA("MP_SIZEOF_MP_DIGIT /;"	d
MP_STATIC_ASSERT	libtommath/tommath_private.h	/^#define MP_STATIC_ASSERT(/;"	d
MP_STRINGIZE	libtommath/tommath_private.h	/^#define MP_STRINGIZE(/;"	d
MP_TOOM_MUL_CUTOFF	libtommath/tommath_private.h	/^#  define MP_TOOM_MUL_CUTOFF /;"	d
MP_TOOM_SQR_CUTOFF	libtommath/tommath_private.h	/^#  define MP_TOOM_SQR_CUTOFF /;"	d
MP_TOUPPER	libtommath/bn_mp_read_radix.c	/^#define MP_TOUPPER(/;"	d	file:
MP_VAL	generic/tclTomMath.h	/^#   define MP_VAL /;"	d
MP_VAL	libtommath/tommath.h	/^   MP_VAL   = -3,  \/* invalid input *\/$/;"	e	enum:__anon3ba6a9150403
MP_VAL	libtommath/tommath.h	/^#define MP_VAL /;"	d
MP_WARRAY	libtommath/tommath.h	/^#define MP_WARRAY (MP_DEPRECATED_PRAGMA("MP_WARRAY is an internal macro") PRIVATE_MP_WARRAY)/;"	d
MP_WARRAY	libtommath/tommath_private.h	/^#define MP_WARRAY PRIVATE_MP_WARRAY$/;"	d
MP_WUR	generic/tclTomMath.h	/^#   define MP_WUR /;"	d
MP_WUR	libtommath/tommath.h	/^#     define MP_WUR /;"	d
MP_WUR	libtommath/tommath.h	/^#     define MP_WUR$/;"	d
MP_YES	libtommath/tommath.h	/^   MP_YES = 1$/;"	e	enum:__anon3ba6a9150303
MP_YES	libtommath/tommath.h	/^#define MP_YES /;"	d
MP_ZERO_BUFFER	libtommath/tommath_private.h	/^#  define MP_ZERO_BUFFER(/;"	d
MP_ZERO_DIGITS	libtommath/tommath_private.h	/^#  define MP_ZERO_DIGITS(/;"	d
MP_ZPOS	generic/tclTomMath.h	/^#   define MP_ZPOS /;"	d
MP_ZPOS	libtommath/tommath.h	/^   MP_ZPOS = 0,   \/* positive *\/$/;"	e	enum:__anon3ba6a9150103
MP_ZPOS	libtommath/tommath.h	/^#define MP_ZPOS /;"	d
MP__STRINGIZE	libtommath/tommath_private.h	/^#define MP__STRINGIZE(/;"	d
MSDOS	compat/zlib/zconf.h	/^#  define MSDOS$/;"	d
MSDOS	compat/zlib/zconf.h.in	/^#  define MSDOS$/;"	d	file:
MSG	unix/tclSelectNotfy.c	/^} MSG;$/;"	t	typeref:struct:__anon69aa703c0308	file:
MTest	compat/zlib/contrib/ada/mtest.adb	/^procedure MTest is$/;"	r
MULT	generic/tclCompExpr.c	/^#define MULT	/;"	d	file:
MULTIPLE TRACES	doc/TraceCmd.3	/^.SH "MULTIPLE TRACES"$/;"	s	title:Tcl_TraceCommand
MULTIPLE TRACES	doc/TraceVar.3	/^.SH "MULTIPLE TRACES"$/;"	s	title:Tcl_TraceVar
MWMO_ALERTABLE	win/tclWinPort.h	/^#   define MWMO_ALERTABLE /;"	d
MY_ZCALLOC	compat/zlib/zutil.c	/^#  define MY_ZCALLOC$/;"	d	file:
MacOSXGetLibraryPath	unix/tclUnixInit.c	/^MacOSXGetLibraryPath($/;"	f	typeref:typename:int	file:
MacOSXPkgUnknown	library/package.tcl	/^proc tcl::MacOSXPkgUnknown {original name args} {$/;"	p	namespace:tcl
MagicDefinitionInvoke	generic/tclOODefineCmds.c	/^MagicDefinitionInvoke($/;"	f	typeref:typename:int	file:
Main	compat/zlib/contrib/ada/mtest.adb	/^      Main : loop$/;"	i	task:Test_Task	file:
Main	compat/zlib/contrib/ada/zlib.adb	/^      Main : loop$/;"	i	subprogram:Generic_Translate	file:
Main	tests/httpd11.tcl	/^proc Main {{port 0}} {$/;"	p
MainLoop	generic/tclTest.c	/^MainLoop(void)$/;"	f	typeref:typename:void	file:
MakeByteArray	generic/tclBinary.c	/^MakeByteArray($/;"	f	typeref:typename:int	file:
MakeCachedEnsembleCommand	generic/tclEnsemble.c	/^MakeCachedEnsembleCommand($/;"	f	typeref:typename:void	file:
MakeDdeConnection	win/tclWinDde.c	/^MakeDdeConnection($/;"	f	typeref:typename:int	file:
MakeFile	unix/tclUnixPipe.c	/^#define MakeFile(/;"	d	file:
MakeFile	unix/tclUnixTest.c	/^#define MakeFile(/;"	d	file:
MakeHighPrecisionDouble	generic/tclStrToD.c	/^MakeHighPrecisionDouble($/;"	f	typeref:typename:double	file:
MakeLambdaError	generic/tclProc.c	/^MakeLambdaError($/;"	f	typeref:typename:void	file:
MakeLowPrecisionDouble	generic/tclStrToD.c	/^MakeLowPrecisionDouble($/;"	f	typeref:typename:double	file:
MakeNaN	generic/tclStrToD.c	/^MakeNaN($/;"	f	typeref:typename:double	file:
MakeParseCodeFromFields	library/clockclassic.tcl	/^proc MakeParseCodeFromFields { dateFields parseActions } {$/;"	p
MakePathFromNormalized	generic/tclPathObj.c	/^MakePathFromNormalized($/;"	f	typeref:typename:int	file:
MakeProcError	generic/tclProc.c	/^MakeProcError($/;"	f	typeref:typename:void	file:
MakeSafe	generic/tclInterp.c	/^MakeSafe($/;"	f	typeref:typename:void
MakeTildeRelativePath	generic/tclPathObj.c	/^MakeTildeRelativePath($/;"	f	typeref:typename:int
MakeUniquePrefixRegexp	library/clockclassic.tcl	/^proc MakeUniquePrefixRegexp { successors$/;"	p
Makefile	unix/Makefile.in	/^Makefile: $(UNIX_DIR)\/Makefile.in $(DLTEST_DIR)\/Makefile.in$/;"	t
Makefile	win/Makefile.in	/^Makefile: $(SRC_DIR)\/Makefile.in$/;"	t
MapPathToZipfs	generic/tclZipfs.c	/^MapPathToZipfs($/;"	f	typeref:typename:char *	file:
MappedIcuNames	library/icu.tcl	/^    proc MappedIcuNames {{pat *}} {$/;"	p	namespace:::::tcl::unsupported::icu
MarkDead	generic/tclIORChan.c	/^MarkDead($/;"	f	typeref:typename:void	file:
Marks	generic/tclCompExpr.c	/^enum Marks {$/;"	g	file:
MarshallError	generic/tclIORChan.c	/^MarshallError($/;"	f	typeref:typename:Tcl_Obj *	file:
MarshallError	generic/tclIORTrans.c	/^MarshallError($/;"	f	typeref:typename:Tcl_Obj *	file:
MathFuncWrongNumArgs	generic/tclBasic.c	/^MathFuncWrongNumArgs($/;"	f	typeref:typename:void	file:
MaxBase64	generic/tclExecute.c	/^static const Tcl_WideInt MaxBase64[] = {$/;"	v	typeref:typename:const Tcl_WideInt[]	file:
MaxBase64Size	generic/tclExecute.c	/^static const size_t MaxBase64Size = sizeof(MaxBase64)\/sizeof(Tcl_WideInt);$/;"	v	typeref:typename:const size_t	file:
MayUseCopyFile	macosx/tclMacOSXFCmd.c	/^#define MayUseCopyFile(/;"	d	file:
MayUsePthreadAtfork	macosx/tclMacOSXNotify.c	/^#define MayUsePthreadAtfork(/;"	d	file:
MemTag	generic/tclCkalloc.c	/^} MemTag;$/;"	t	typeref:struct:__anon91be715e0108	file:
MemoryAllocationError	generic/tclListObj.c	/^MemoryAllocationError($/;"	f	typeref:typename:int	file:
MemoryCmd	generic/tclCkalloc.c	/^MemoryCmd($/;"	f	typeref:typename:int	file:
Memory_Level_Type	compat/zlib/contrib/ada/zlib.ads	/^   type Memory_Level_Type is new Integer range 1 .. 9;$/;"	t	packspec:ZLib
MergeLists	generic/tclCmdIL.c	/^MergeLists($/;"	f	typeref:typename:SortElement *	file:
Meridian	generic/tclDate.c	/^    enum _MERIDIAN Meridian;$/;"	m	union:YYSTYPE	typeref:enum:_MERIDIAN	file:
Meridian	generic/tclDateClassic.c	/^    enum _MERIDIAN Meridian;$/;"	m	union:YYSTYPE	typeref:enum:_MERIDIAN	file:
Meta	library/http/http.tcl	/^proc http::Meta {token who args} {$/;"	p	namespace:http
Method	generic/tclOOInt.h	/^struct Method {$/;"	s
Method	generic/tclOOInt.h	/^typedef struct Method Method;$/;"	t	typeref:struct:Method
MethodErrorHandler	generic/tclOOMethod.c	/^MethodErrorHandler($/;"	f	typeref:typename:void	file:
MethodErrorHandler	generic/tclOOMethod.c	/^static ProcErrorProc	MethodErrorHandler;$/;"	v	typeref:typename:ProcErrorProc	file:
MethodName	generic/tclIORChan.c	/^} MethodName;$/;"	t	typeref:enum:__anon92d8dd290403	file:
MethodName	generic/tclIORTrans.c	/^} MethodName;$/;"	t	typeref:enum:__anon21e740770403	file:
MilitaryTable	generic/tclDate.c	/^static const TABLE MilitaryTable[] = {$/;"	v	typeref:typename:const TABLE[]	file:
MilitaryTable	generic/tclDateClassic.c	/^static const TABLE MilitaryTable[] = {$/;"	v	typeref:typename:const TABLE[]	file:
Mode	compat/zlib/contrib/ada/zlib-streams.ads	/^      Mode       : Stream_Mode;$/;"	c	type:Stream_Type	file:
Module	unix/tclLoadAix.c	/^typedef struct Module {$/;"	s	file:
Module	unix/tclLoadAix.c	/^} Module, *ModulePtr;$/;"	t	typeref:struct:Module	file:
ModulePtr	unix/tclLoadAix.c	/^} Module, *ModulePtr;$/;"	t	typeref:struct:Module *	file:
MonthDayTable	generic/tclDate.c	/^static const TABLE MonthDayTable[] = {$/;"	v	typeref:typename:const TABLE[]	file:
MonthDayTable	generic/tclDateClassic.c	/^static const TABLE MonthDayTable[] = {$/;"	v	typeref:typename:const TABLE[]	file:
MoreCore	generic/tclAlloc.c	/^MoreCore($/;"	f	typeref:typename:void	file:
MostAnalysis	tests/httpTest.tcl	/^proc httpTest::MostAnalysis {someResults n msg skipOverlaps badTrans notPiped} {$/;"	p	namespace:httpTest
MountPointMap	win/tclWin32Dll.c	/^typedef struct MountPointMap {$/;"	s	file:
MountPointMap	win/tclWin32Dll.c	/^} MountPointMap;$/;"	t	typeref:struct:MountPointMap	file:
MountPointReparseBuffer	win/tclWinFile.c	/^	} MountPointReparseBuffer;$/;"	m	union:_REPARSE_DATA_BUFFER::__anon1c302b04010a	typeref:struct:_REPARSE_DATA_BUFFER::__anon1c302b04010a::__anon1c302b040308	file:
MoveBytes	generic/tclIO.c	/^MoveBytes($/;"	f	typeref:typename:int	file:
MoveCodeForJumps	generic/tclAssembly.c	/^MoveCodeForJumps($/;"	f	typeref:typename:void	file:
MoveExceptionRangesToBasicBlock	generic/tclAssembly.c	/^MoveExceptionRangesToBasicBlock($/;"	f	typeref:typename:void	file:
MoveObjs	generic/tclThreadAlloc.c	/^MoveObjs($/;"	f	typeref:typename:void	file:
MulPow5	generic/tclStrToD.c	/^MulPow5($/;"	f	typeref:typename:mp_err	file:
MyClassDeleted	generic/tclOO.c	/^MyClassDeleted($/;"	f	typeref:typename:void	file:
MyClassNRObjCmd	generic/tclOO.c	/^MyClassNRObjCmd($/;"	f	typeref:typename:int	file:
MyCompiledVarFetch	generic/tclTest.c	/^MyCompiledVarFetch($/;"	f	typeref:typename:Tcl_Var	file:
MyCompiledVarFree	generic/tclTest.c	/^MyCompiledVarFree($/;"	f	typeref:typename:void	file:
MyDeleted	generic/tclOO.c	/^MyDeleted($/;"	f	typeref:typename:void	file:
MyDoMinus64	compat/zlib/contrib/testzlib/testzlib.c	/^void MyDoMinus64(LARGE_INTEGER *R,LARGE_INTEGER A,LARGE_INTEGER B)$/;"	f	typeref:typename:void
MyResolvedVarInfo	generic/tclTest.c	/^typedef struct MyResolvedVarInfo {$/;"	s	file:
MyResolvedVarInfo	generic/tclTest.c	/^} MyResolvedVarInfo;$/;"	t	typeref:struct:MyResolvedVarInfo	file:
MySetFilePointerEx	compat/zlib/contrib/minizip/iowin32.c	/^static BOOL MySetFilePointerEx(HANDLE hFile, LARGE_INTEGER pos, LARGE_INTEGER *newPos, DWORD dwM/;"	f	typeref:typename:BOOL	file:
N	compat/zlib/crc32.c	/^#  define N /;"	d	file:
N	compat/zlib/crc32.c	/^#  define N Z_TESTN$/;"	d	file:
NAME	compat/zlib/contrib/minizip/miniunzip.1	/^.SH NAME$/;"	s	title:miniunzip
NAME	compat/zlib/contrib/minizip/minizip.1	/^.SH NAME$/;"	s	title:minizip
NAME	compat/zlib/inflate.h	/^    NAME,       \/* i: waiting for end of file name (gzip) *\/$/;"	e	enum:__anon6bf0a2910103
NAME	compat/zlib/zlib.3	/^.SH NAME$/;"	s	title:ZLIB
NAME	doc/Access.3	/^.SH NAME$/;"	s	title:Tcl_Access
NAME	doc/AddErrInfo.3	/^.SH NAME$/;"	s	title:Tcl_AddErrorInfo
NAME	doc/Alloc.3	/^.SH NAME$/;"	s	title:Tcl_Alloc
NAME	doc/AllowExc.3	/^.SH NAME$/;"	s	title:Tcl_AllowExceptions
NAME	doc/AppInit.3	/^.SH NAME$/;"	s	title:Tcl_AppInit
NAME	doc/AssocData.3	/^.SH NAME$/;"	s	title:Tcl_SetAssocData
NAME	doc/Async.3	/^.SH NAME$/;"	s	title:Tcl_AsyncCreate
NAME	doc/BackgdErr.3	/^.SH NAME$/;"	s	title:Tcl_BackgroundError
NAME	doc/BoolObj.3	/^.SH NAME$/;"	s	title:Tcl_BooleanObj
NAME	doc/ByteArrObj.3	/^.SH NAME$/;"	s	title:Tcl_ByteArrayObj
NAME	doc/CallDel.3	/^.SH NAME$/;"	s	title:Tcl_CallWhenDeleted
NAME	doc/Cancel.3	/^.SH NAME$/;"	s	title:Tcl_Cancel
NAME	doc/ChnlStack.3	/^.SH NAME$/;"	s	title:Tcl_StackChannel
NAME	doc/Class.3	/^.SH NAME$/;"	s	title:Tcl_Class
NAME	doc/CmdCmplt.3	/^.SH NAME$/;"	s	title:Tcl_CommandComplete
NAME	doc/Concat.3	/^.SH NAME$/;"	s	title:Tcl_Concat
NAME	doc/CrtAlias.3	/^.SH NAME$/;"	s	title:Tcl_CreateAlias
NAME	doc/CrtChannel.3	/^.SH NAME$/;"	s	title:Tcl_CreateChannel
NAME	doc/CrtChnlHdlr.3	/^.SH NAME$/;"	s	title:Tcl_CreateChannelHandler
NAME	doc/CrtCloseHdlr.3	/^.SH NAME$/;"	s	title:Tcl_CreateCloseHandler
NAME	doc/CrtCommand.3	/^.SH NAME$/;"	s	title:Tcl_CreateCommand
NAME	doc/CrtFileHdlr.3	/^.SH NAME$/;"	s	title:Tcl_CreateFileHandler
NAME	doc/CrtInterp.3	/^.SH NAME$/;"	s	title:Tcl_CreateInterp
NAME	doc/CrtObjCmd.3	/^.SH NAME$/;"	s	title:Tcl_CreateObjCommand
NAME	doc/CrtTimerHdlr.3	/^.SH NAME$/;"	s	title:Tcl_CreateTimerHandler
NAME	doc/CrtTrace.3	/^.SH NAME$/;"	s	title:Tcl_CreateTrace
NAME	doc/DString.3	/^.SH NAME$/;"	s	title:Tcl_DString
NAME	doc/DetachPids.3	/^.SH NAME$/;"	s	title:Tcl_DetachPids
NAME	doc/DictObj.3	/^.SH NAME$/;"	s	title:Tcl_DictObj
NAME	doc/DoOneEvent.3	/^.SH NAME$/;"	s	title:Tcl_DoOneEvent
NAME	doc/DoWhenIdle.3	/^.SH NAME$/;"	s	title:Tcl_DoWhenIdle
NAME	doc/DoubleObj.3	/^.SH NAME$/;"	s	title:Tcl_DoubleObj
NAME	doc/DumpActiveMemory.3	/^.SH NAME$/;"	s	title:Tcl_DumpActiveMemory
NAME	doc/Encoding.3	/^.SH NAME$/;"	s	title:Tcl_GetEncoding
NAME	doc/Ensemble.3	/^.SH NAME$/;"	s	title:Tcl_Ensemble
NAME	doc/Environment.3	/^.SH NAME$/;"	s	title:Tcl_PutEnv
NAME	doc/Eval.3	/^.SH NAME$/;"	s	title:Tcl_Eval
NAME	doc/Exit.3	/^.SH NAME$/;"	s	title:Tcl_Exit
NAME	doc/ExprLong.3	/^.SH NAME$/;"	s	title:Tcl_ExprLong
NAME	doc/ExprLongObj.3	/^.SH NAME$/;"	s	title:Tcl_ExprLongObj
NAME	doc/FileSystem.3	/^.SH NAME$/;"	s	title:Filesystem
NAME	doc/FindExec.3	/^.SH NAME$/;"	s	title:Tcl_FindExecutable
NAME	doc/GetCwd.3	/^.SH NAME$/;"	s	title:Tcl_GetCwd
NAME	doc/GetHostName.3	/^.SH NAME$/;"	s	title:Tcl_GetHostName
NAME	doc/GetIndex.3	/^.SH NAME$/;"	s	title:Tcl_GetIndexFromObj
NAME	doc/GetInt.3	/^.SH NAME$/;"	s	title:Tcl_GetInt
NAME	doc/GetOpnFl.3	/^.SH NAME$/;"	s	title:Tcl_GetOpenFile
NAME	doc/GetStdChan.3	/^.SH NAME$/;"	s	title:Tcl_GetStdChannel
NAME	doc/GetTime.3	/^.SH NAME$/;"	s	title:Tcl_GetTime
NAME	doc/GetVersion.3	/^.SH NAME$/;"	s	title:Tcl_GetVersion
NAME	doc/Hash.3	/^.SH NAME$/;"	s	title:Tcl_Hash
NAME	doc/Init.3	/^.SH NAME$/;"	s	title:Tcl_Init
NAME	doc/InitStubs.3	/^.SH NAME$/;"	s	title:Tcl_InitStubs
NAME	doc/InitSubSyst.3	/^.SH NAME$/;"	s	title:Tcl_InitSubsystems
NAME	doc/IntObj.3	/^.SH NAME$/;"	s	title:Tcl_IntObj
NAME	doc/Limit.3	/^.SH NAME$/;"	s	title:Tcl_LimitCheck
NAME	doc/LinkVar.3	/^.SH NAME$/;"	s	title:Tcl_LinkVar
NAME	doc/ListObj.3	/^.SH NAME$/;"	s	title:Tcl_ListObj
NAME	doc/Load.3	/^.SH NAME$/;"	s	title:Load
NAME	doc/Method.3	/^.SH NAME$/;"	s	title:Tcl_Method
NAME	doc/NRE.3	/^.SH NAME$/;"	s	title:NRE
NAME	doc/Namespace.3	/^.SH NAME$/;"	s	title:Tcl_Namespace
NAME	doc/Notifier.3	/^.SH NAME$/;"	s	title:Notifier
NAME	doc/Number.3	/^.SH NAME$/;"	s	title:Tcl_GetNumber
NAME	doc/OOInitStubs.3	/^.SH NAME$/;"	s	title:Tcl_OOInitStubs
NAME	doc/Object.3	/^.SH NAME$/;"	s	title:Tcl_Obj
NAME	doc/ObjectType.3	/^.SH NAME$/;"	s	title:Tcl_ObjType
NAME	doc/OpenFileChnl.3	/^.SH NAME$/;"	s	title:Tcl_OpenFileChannel
NAME	doc/OpenTcp.3	/^.SH NAME$/;"	s	title:Tcl_OpenTcpClient
NAME	doc/Panic.3	/^.SH NAME$/;"	s	title:Tcl_Panic
NAME	doc/ParseArgs.3	/^.SH NAME$/;"	s	title:Tcl_ParseArgsObjv
NAME	doc/ParseCmd.3	/^.SH NAME$/;"	s	title:Tcl_ParseCommand
NAME	doc/PkgRequire.3	/^.SH NAME$/;"	s	title:Tcl_PkgRequire
NAME	doc/Preserve.3	/^.SH NAME$/;"	s	title:Tcl_Preserve
NAME	doc/PrintDbl.3	/^.SH NAME$/;"	s	title:Tcl_PrintDouble
NAME	doc/RecEvalObj.3	/^.SH NAME$/;"	s	title:Tcl_RecordAndEvalObj
NAME	doc/RecordEval.3	/^.SH NAME$/;"	s	title:Tcl_RecordAndEval
NAME	doc/RegConfig.3	/^.SH NAME$/;"	s	title:Tcl_RegisterConfig
NAME	doc/RegExp.3	/^.SH NAME$/;"	s	title:Tcl_RegExpMatch
NAME	doc/SaveInterpState.3	/^.SH NAME$/;"	s	title:Tcl_SaveInterpState
NAME	doc/SetChanErr.3	/^.SH NAME$/;"	s	title:Tcl_SetChannelError
NAME	doc/SetErrno.3	/^.SH NAME$/;"	s	title:Tcl_SetErrno
NAME	doc/SetRecLmt.3	/^.SH NAME$/;"	s	title:Tcl_SetRecursionLimit
NAME	doc/SetResult.3	/^.SH NAME$/;"	s	title:Tcl_SetResult
NAME	doc/SetVar.3	/^.SH NAME$/;"	s	title:Tcl_SetVar
NAME	doc/Signal.3	/^.SH NAME$/;"	s	title:Tcl_SignalId
NAME	doc/Sleep.3	/^.SH NAME$/;"	s	title:Tcl_Sleep
NAME	doc/SourceRCFile.3	/^.SH NAME$/;"	s	title:Tcl_SourceRCFile
NAME	doc/SplitList.3	/^.SH NAME$/;"	s	title:Tcl_SplitList
NAME	doc/SplitPath.3	/^.SH NAME$/;"	s	title:Tcl_SplitPath
NAME	doc/StaticLibrary.3	/^.SH NAME$/;"	s	title:Tcl_StaticLibrary
NAME	doc/StdChannels.3	/^.SH NAME$/;"	s	title:Standard Channels
NAME	doc/StrMatch.3	/^.SH NAME$/;"	s	title:Tcl_StringMatch
NAME	doc/StringObj.3	/^.SH NAME$/;"	s	title:Tcl_StringObj
NAME	doc/SubstObj.3	/^.SH NAME$/;"	s	title:Tcl_SubstObj
NAME	doc/TCL_MEM_DEBUG.3	/^.SH NAME$/;"	s	title:TCL_MEM_DEBUG
NAME	doc/TclZlib.3	/^.SH NAME$/;"	s	title:TclZlib
NAME	doc/Tcl_Main.3	/^.SH NAME$/;"	s	title:Tcl_Main
NAME	doc/Thread.3	/^.SH NAME$/;"	s	title:Threads
NAME	doc/ToUpper.3	/^.SH NAME$/;"	s	title:Tcl_UtfToUpper
NAME	doc/TraceCmd.3	/^.SH NAME$/;"	s	title:Tcl_TraceCommand
NAME	doc/TraceVar.3	/^.SH NAME$/;"	s	title:Tcl_TraceVar
NAME	doc/Translate.3	/^.SH NAME$/;"	s	title:Tcl_TranslateFileName
NAME	doc/UniCharIsAlpha.3	/^.SH NAME$/;"	s	title:Tcl_UniCharIsAlpha
NAME	doc/UpVar.3	/^.SH NAME$/;"	s	title:Tcl_UpVar
NAME	doc/Utf.3	/^.SH NAME$/;"	s	title:Utf
NAME	doc/WrongNumArgs.3	/^.SH NAME$/;"	s	title:Tcl_WrongNumArgs
NAME	doc/tclsh.1	/^.SH NAME$/;"	s	title:tclsh
NAME	doc/zipfs.3	/^.SH NAME$/;"	s	title:Tclzipfs
NAME_STATE	compat/zlib/deflate.h	/^#define NAME_STATE /;"	d
NAN_MASK	generic/tclStrToD.c	/^#   define NAN_MASK	/;"	d	file:
NAN_START	generic/tclStrToD.c	/^#   define NAN_START	/;"	d	file:
NATIVE_TCLSH	unix/Makefile.in	/^NATIVE_TCLSH		= @TCLSH_PROG@$/;"	m
NATIVE_ZIP	unix/Makefile.in	/^NATIVE_ZIP		= @ZIP_PROG@$/;"	m
NATIVE_ZIP	win/Makefile.in	/^NATIVE_ZIP		= @ZIP_PROG@$/;"	m
NBBY	unix/tclUnixPort.h	/^#   define NBBY	/;"	d
NBUCKETS	generic/tclAlloc.c	/^#define NBUCKETS	/;"	d	file:
NBUCKETS	generic/tclThreadAlloc.c	/^#define NBUCKETS	/;"	d	file:
NBYTS	generic/regguts.h	/^#define	NBYTS	/;"	d
NDEBUG	generic/regguts.h	/^#define	NDEBUG	/;"	d
NDEBUG	unix/tcl.m4	/^	AC_DEFINE(NDEBUG, 1, [Is no debugging enabled?])$/;"	d
NDEBUG	win/tcl.m4	/^	AC_DEFINE(NDEBUG, 1, [Is no debugging enabled?])$/;"	d
NEEDARRAY	generic/tclVar.c	/^static const char NEEDARRAY[] =		"variable isn't array";$/;"	v	typeref:typename:const char[]	file:
NEEDBITS	compat/zlib/contrib/infback9/infback9.c	/^#define NEEDBITS(/;"	d	file:
NEEDBITS	compat/zlib/infback.c	/^#define NEEDBITS(/;"	d	file:
NEEDBITS	compat/zlib/inflate.c	/^#define NEEDBITS(/;"	d	file:
NEED_COPYARRAY	unix/tclUnixCompat.c	/^#define NEED_COPYARRAY /;"	d	file:
NEED_COPYGRP	unix/tclUnixCompat.c	/^#define NEED_COPYGRP /;"	d	file:
NEED_COPYPWD	unix/tclUnixCompat.c	/^#define NEED_COPYPWD /;"	d	file:
NEED_COPYSTRING	unix/tclUnixCompat.c	/^#define NEED_COPYSTRING /;"	d	file:
NEED_DICT	compat/zlib/contrib/ada/zlib.adb	/^       NEED_DICT,$/;"	l	type:Return_Code_Enum	file:
NEED_FAKE_RFC2553	unix/tcl.m4	/^   AC_DEFINE([NEED_FAKE_RFC2553], 1,$/;"	d
NEED_GR_CLEANER	unix/tclUnixCompat.c	/^#define NEED_GR_CLEANER /;"	d	file:
NEED_PW_CLEANER	unix/tclUnixCompat.c	/^#define NEED_PW_CLEANER /;"	d	file:
NEGIMPL	generic/tclIORTrans.c	/^#define NEGIMPL(/;"	d	file:
NEQ	generic/tclCompExpr.c	/^#define NEQ	/;"	d	file:
NERR	generic/regc_nfa.c	/^#define	NERR(/;"	d	file:
NEXT	compat/zlib/examples/gun.c	/^#define NEXT(/;"	d	file:
NEXT	generic/regcomp.c	/^#define	NEXT(/;"	d	file:
NEXT1	generic/regc_lex.c	/^#define	NEXT1(/;"	d	file:
NEXT2	generic/regc_lex.c	/^#define	NEXT2(/;"	d	file:
NEXT3	generic/regc_lex.c	/^#define	NEXT3(/;"	d	file:
NEXT_ENTRY	generic/tclIndexObj.c	/^#define NEXT_ENTRY(/;"	d	file:
NEXT_INST_F	generic/tclExecute.c	/^#define NEXT_INST_F(/;"	d	file:
NEXT_INST_V	generic/tclExecute.c	/^#define NEXT_INST_V(/;"	d	file:
NFDBITS	unix/tclUnixPort.h	/^#   define NFDBITS	/;"	d
NIL	compat/zlib/contrib/puff/puff.h	/^#  define NIL /;"	d
NIL	compat/zlib/deflate.c	/^#define NIL /;"	d	file:
NINLINECDS	generic/regguts.h	/^#define	NINLINECDS	/;"	d
NISERR	generic/regc_nfa.c	/^#define	NISERR(/;"	d	file:
NI_MAXHOST	compat/fake-rfc2553.h	/^# define NI_MAXHOST /;"	d
NI_MAXSERV	compat/fake-rfc2553.h	/^# define NI_MAXSERV /;"	d
NI_NAMEREQD	compat/fake-rfc2553.h	/^# define NI_NAMEREQD /;"	d
NI_NUMERICHOST	compat/fake-rfc2553.h	/^# define NI_NUMERICHOST /;"	d
NI_NUMERICSERV	compat/fake-rfc2553.h	/^# define NI_NUMERICSERV /;"	d
NMAX	compat/zlib/adler32.c	/^#define NMAX /;"	d	file:
NOBJALLOC	generic/tclThreadAlloc.c	/^#define NOBJALLOC	/;"	d	file:
NOBJHIGH	generic/tclThreadAlloc.c	/^#define NOBJHIGH	ALLOC_NOBJHIGH$/;"	d	file:
NOBYFOUR	generic/tclZipfs.c	/^#define NOBYFOUR$/;"	d	file:
NOCELT	generic/regcustom.h	/^#define	NOCELT /;"	d
NODE_TYPE	generic/tclCompExpr.c	/^#define NODE_TYPE	/;"	d	file:
NOERR	generic/regcomp.c	/^#define	NOERR(/;"	d	file:
NOERR	generic/regexec.c	/^#define	NOERR(/;"	d	file:
NOERRN	generic/regcomp.c	/^#define	NOERRN(/;"	d	file:
NOERRZ	generic/regcomp.c	/^#define	NOERRZ(/;"	d	file:
NON_SPACING_MARK	generic/tclUniData.c	/^    NON_SPACING_MARK,$/;"	e	enum:__anon910316cb0103	file:
NOPROGRESS	generic/regexec.c	/^#define	NOPROGRESS	/;"	d	file:
NOPROP	generic/regguts.h	/^#define	NOPROP	/;"	d
NORMALIZEPATHPROC	doc/FileSystem.3	/^.SS NORMALIZEPATHPROC$/;"	S	section:Filesystem""FILESYSTEM INFRASTRUCTURE
NOSUB	generic/regguts.h	/^#define	NOSUB	/;"	d
NOSUCHELEMENT	generic/tclVar.c	/^static const char NOSUCHELEMENT[] =	"no such element in array";$/;"	v	typeref:typename:const char[]	file:
NOSUCHVAR	generic/tclVar.c	/^static const char NOSUCHVAR[] =		"no such variable";$/;"	v	typeref:typename:const char[]	file:
NOT	generic/tclCompExpr.c	/^#define NOT	/;"	d	file:
NOTE	generic/regcomp.c	/^#define	NOTE(/;"	d	file:
NOTIFIER BASICS	doc/Notifier.3	/^.SH "NOTIFIER BASICS"$/;"	s	title:Notifier
NOTIFIER_EPOLL	unix/configure.ac	/^	    [AC_DEFINE(NOTIFIER_EPOLL, [1], [Is epoll(7) supported?])])$/;"	d
NOTIFIER_KQUEUE	unix/configure.ac	/^	    AC_DEFINE(NOTIFIER_KQUEUE, [1], [Is kqueue(2) supported?])]);;$/;"	d
NOTIFIER_LOG	macosx/tclMacOSXNotify.c	/^#define NOTIFIER_LOG /;"	d	file:
NOTIFIER_SELECT	unix/tclUnixNotfy.c	/^# define NOTIFIER_SELECT$/;"	d	file:
NOTIFY_OBJS	unix/Makefile.in	/^NOTIFY_OBJS = tclEpollNotfy.o tclKqueueNotfy.o tclSelectNotfy.o$/;"	m
NOTIFY_SRCS	unix/Makefile.in	/^NOTIFY_SRCS = \\$/;"	m
NOTREACHED	generic/regguts.h	/^#define	NOTREACHED	/;"	d
NOT_IN_LIST	generic/tclCompExpr.c	/^#define NOT_IN_LIST	/;"	d	file:
NOUNCRYPT	compat/zlib/contrib/minizip/unzip.c	/^        #define NOUNCRYPT$/;"	d	file:
NO_COREFOUNDATION_64	unix/tcl.m4	/^			AC_DEFINE(NO_COREFOUNDATION_64, 1,$/;"	d
NO_DLFCN_H	unix/tcl.m4	/^    AC_CHECK_HEADER(dlfcn.h, , [AC_DEFINE(NO_DLFCN_H, 1, [Do we have <dlfcn.h>?])])$/;"	d
NO_FD_SET	unix/configure.ac	/^    AC_DEFINE(NO_FD_SET, 1, [Do we have fd_set?])$/;"	d
NO_FLOATING_POINT	libtommath/bn_mp_sqrt.c	/^#define NO_FLOATING_POINT$/;"	d	file:
NO_FORK	unix/configure.ac	/^AC_CHECK_FUNC(fork, , [AC_DEFINE(NO_FORK, 1, [Do we have fork()])])$/;"	d
NO_FSTATFS	unix/configure.ac	/^AC_CHECK_FUNC(fstatfs, , [AC_DEFINE(NO_FSTATFS, 1, [Do we have fstatfs()?])])$/;"	d
NO_GETTOD	unix/configure.ac	/^    AC_DEFINE(NO_GETTOD, 1, [Do we have gettimeofday()?])$/;"	d
NO_GETWD	unix/configure.ac	/^AC_CHECK_FUNC(getwd, , [AC_DEFINE(NO_GETWD, 1, [Do we have getwd()])])$/;"	d
NO_GZCOMPRESS	compat/zlib/gzguts.h	/^#  define NO_GZCOMPRESS$/;"	d
NO_IMPLEMENTATION	generic/tclOOCall.c	/^    NO_IMPLEMENTATION = 2	\/* Seen, but not implemented yet. *\/$/;"	e	enum:NameTableValues	file:
NO_MEMCPY	compat/zlib/zutil.h	/^#  define NO_MEMCPY$/;"	d
NO_MEMMOVE	unix/configure.ac	/^    AC_DEFINE(NO_MEMMOVE, 1, [Do we have memmove()?])$/;"	d
NO_MKNOD	unix/configure.ac	/^AC_CHECK_FUNC(mknod, , [AC_DEFINE(NO_MKNOD, 1, [Do we have mknod()])])$/;"	d
NO_OP	compat/zlib/examples/gzlog.c	/^#define NO_OP /;"	d	file:
NO_REALPATH	unix/configure.ac	/^AC_CHECK_FUNC(realpath, , [AC_DEFINE(NO_REALPATH, 1, [Do we have realpath()])])$/;"	d
NO_REALPATH	unix/tclUnixPort.h	/^#	    define NO_REALPATH /;"	d
NO_STRERROR	unix/configure.ac	/^AC_CHECK_FUNC(strerror, , [AC_DEFINE(NO_STRERROR, 1, [Do we have strerror()])])$/;"	d
NO_STRING_H	unix/configure.ac	/^    AC_DEFINE(NO_STRING_H, 1, [Do we have <string.h>?]) ])$/;"	d
NO_STRING_H	unix/tcl.m4	/^	AC_DEFINE(NO_STRING_H, 1, [Do we have <string.h>?])$/;"	d
NO_SYS_WAIT_H	unix/tcl.m4	/^    AC_CHECK_HEADER(sys\/wait.h, , [AC_DEFINE(NO_SYS_WAIT_H, 1, [Do we have <sys\/wait.h>?])])$/;"	d
NO_TCDRAIN	unix/configure.ac	/^AC_CHECK_FUNC(tcdrain, , [AC_DEFINE(NO_TCDRAIN, 1, [Do we have tcdrain()])])$/;"	d
NO_UNAME	unix/configure.ac	/^AC_CHECK_FUNC(uname, , [AC_DEFINE(NO_UNAME, 1, [Do we have uname()])])$/;"	d
NO_UNION_WAIT	unix/configure.ac	/^    AC_DEFINE(NO_UNION_WAIT, 1, [Do we have a usable 'union wait'?])$/;"	d
NO_WAIT3	unix/configure.ac	/^AC_CHECK_FUNC(wait3, , [AC_DEFINE(NO_WAIT3, 1, [Do we have wait3()])])$/;"	d
NO_vsnprintf	compat/zlib/gzguts.h	/^#    define NO_vsnprintf$/;"	d
NRChildCmd	generic/tclInterp.c	/^NRChildCmd($/;"	f	typeref:typename:int	file:
NRChildCmd	generic/tclInterp.c	/^static Tcl_ObjCmdProc	NRChildCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
NRCommand	generic/tclBasic.c	/^NRCommand($/;"	f	typeref:typename:int	file:
NRCommand	generic/tclBasic.c	/^static Tcl_NRPostProc	NRCommand;$/;"	v	typeref:typename:Tcl_NRPostProc	file:
NRCoroutineCallerCallback	generic/tclBasic.c	/^NRCoroutineCallerCallback($/;"	f	typeref:typename:int	file:
NRCoroutineCallerCallback	generic/tclBasic.c	/^static Tcl_NRPostProc	NRCoroutineCallerCallback;$/;"	v	typeref:typename:Tcl_NRPostProc	file:
NRCoroutineExitCallback	generic/tclBasic.c	/^NRCoroutineExitCallback($/;"	f	typeref:typename:int	file:
NRCoroutineExitCallback	generic/tclBasic.c	/^static Tcl_NRPostProc	NRCoroutineExitCallback;$/;"	v	typeref:typename:Tcl_NRPostProc	file:
NRE	doc/NRE.3	/^.TH NRE 3 8.6 Tcl "Tcl Library Procedures"$/;"	t
NREHDR	unix/Makefile.in	/^NREHDR		= $(GENERIC_DIR)\/tclInt.h$/;"	m
NREUnwind_callback	generic/tclTest.c	/^NREUnwind_callback($/;"	f	typeref:typename:int	file:
NREUnwind_callback	generic/tclTest.c	/^static Tcl_NRPostProc	NREUnwind_callback;$/;"	v	typeref:typename:Tcl_NRPostProc	file:
NRE_ASSERT	generic/tclInt.h	/^#define NRE_ASSERT(/;"	d
NRE_ENABLE_ASSERTS	generic/tclInt.h	/^#define NRE_ENABLE_ASSERTS	/;"	d
NRE_USE_SMALL_ALLOC	generic/tclInt.h	/^#define NRE_USE_SMALL_ALLOC	/;"	d
NRE_callback	generic/tclInt.h	/^typedef struct NRE_callback {$/;"	s
NRE_callback	generic/tclInt.h	/^} NRE_callback;$/;"	t	typeref:struct:NRE_callback
NRInterpCmd	generic/tclInterp.c	/^NRInterpCmd($/;"	f	typeref:typename:int	file:
NRInterpCmd	generic/tclInterp.c	/^static Tcl_ObjCmdProc	NRInterpCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
NRInterpProc	generic/tclProc.c	/^NRInterpProc($/;"	f	typeref:typename:int	file:
NRInterpProc	generic/tclProc.c	/^static Tcl_ObjCmdProc NRInterpProc;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
NRNamespaceEvalCmd	generic/tclNamesp.c	/^NRNamespaceEvalCmd($/;"	f	typeref:typename:int	file:
NRNamespaceEvalCmd	generic/tclNamesp.c	/^static Tcl_ObjCmdProc	NRNamespaceEvalCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
NRNamespaceInscopeCmd	generic/tclNamesp.c	/^NRNamespaceInscopeCmd($/;"	f	typeref:typename:int	file:
NRNamespaceInscopeCmd	generic/tclNamesp.c	/^static Tcl_ObjCmdProc	NRNamespaceInscopeCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
NRPostInvoke	generic/tclBasic.c	/^NRPostInvoke($/;"	f	typeref:typename:int	file:
NRPostInvoke	generic/tclBasic.c	/^static Tcl_NRPostProc NRPostInvoke;$/;"	v	typeref:typename:Tcl_NRPostProc	file:
NRPostInvokeHidden	generic/tclInterp.c	/^NRPostInvokeHidden($/;"	f	typeref:typename:int	file:
NRPostInvokeHidden	generic/tclInterp.c	/^static Tcl_NRPostProc	NRPostInvokeHidden;$/;"	v	typeref:typename:Tcl_NRPostProc	file:
NS_DEAD	generic/tclInt.h	/^#define NS_DEAD	/;"	d
NS_DYING	generic/tclInt.h	/^#define NS_DYING	/;"	d
NS_KILLED	generic/tclInt.h	/^#define NS_KILLED	/;"	d
NS_SUPPRESS_COMPILATION	generic/tclInt.h	/^#define NS_SUPPRESS_COMPILATION	/;"	d
NS_TEARDOWN	generic/tclInt.h	/^#define NS_TEARDOWN	/;"	d
NULLABLE_METHODS	generic/tclIORChan.c	/^#define NULLABLE_METHODS /;"	d	file:
NULLCNFA	generic/regguts.h	/^#define	NULLCNFA(/;"	d
NUMBER	generic/tclCompExpr.c	/^#define NUMBER	/;"	d	file:
NUMBER_OF_OBJECT_VARS	generic/tclTestObj.c	/^#define NUMBER_OF_OBJECT_VARS /;"	d	file:
NUMPROCESSORS	unix/tclUnixInit.c	/^#define NUMPROCESSORS /;"	d	file:
NUMPROCESSORS	win/tclWinInit.c	/^#define NUMPROCESSORS /;"	d	file:
NUM_ALPHA_CHAR	generic/regc_locale.c	/^#define NUM_ALPHA_CHAR /;"	d	file:
NUM_ALPHA_RANGE	generic/regc_locale.c	/^#define NUM_ALPHA_RANGE /;"	d	file:
NUM_CONTROL_CHAR	generic/regc_locale.c	/^#define NUM_CONTROL_CHAR /;"	d	file:
NUM_CONTROL_RANGE	generic/regc_locale.c	/^#define NUM_CONTROL_RANGE /;"	d	file:
NUM_COUNTERS	generic/tclHash.c	/^#define NUM_COUNTERS /;"	d	file:
NUM_COUNTERS	generic/tclLiteral.c	/^#define NUM_COUNTERS /;"	d	file:
NUM_DIGIT_RANGE	generic/regc_locale.c	/^#define NUM_DIGIT_RANGE /;"	d	file:
NUM_GRAPH_CHAR	generic/regc_locale.c	/^#define NUM_GRAPH_CHAR /;"	d	file:
NUM_GRAPH_RANGE	generic/regc_locale.c	/^#define NUM_GRAPH_RANGE /;"	d	file:
NUM_LISTS	generic/tclCmdIL.c	/^#   define NUM_LISTS /;"	d	file:
NUM_LOWER_CHAR	generic/regc_locale.c	/^#define NUM_LOWER_CHAR /;"	d	file:
NUM_LOWER_RANGE	generic/regc_locale.c	/^#define NUM_LOWER_RANGE /;"	d	file:
NUM_PUNCT_CHAR	generic/regc_locale.c	/^#define NUM_PUNCT_CHAR /;"	d	file:
NUM_PUNCT_RANGE	generic/regc_locale.c	/^#define NUM_PUNCT_RANGE /;"	d	file:
NUM_REGEXPS	generic/tclRegexp.c	/^#define NUM_REGEXPS /;"	d	file:
NUM_SPACES	generic/tclIndexObj.c	/^#define NUM_SPACES /;"	d	file:
NUM_SPACE_CHAR	generic/regc_locale.c	/^#define NUM_SPACE_CHAR /;"	d	file:
NUM_SPACE_RANGE	generic/regc_locale.c	/^#define NUM_SPACE_RANGE /;"	d	file:
NUM_STATIC_POS	generic/tclCompile.c	/^#define NUM_STATIC_POS /;"	d	file:
NUM_STATIC_POS	generic/tclParse.c	/^#define NUM_STATIC_POS /;"	d	file:
NUM_STATIC_TOKENS	generic/tcl.h	/^#define NUM_STATIC_TOKENS /;"	d
NUM_UPPER_CHAR	generic/regc_locale.c	/^#define NUM_UPPER_CHAR /;"	d	file:
NUM_UPPER_RANGE	generic/regc_locale.c	/^#define NUM_UPPER_RANGE /;"	d	file:
NWBDRY	generic/regcomp.c	/^#define	NWBDRY	/;"	d	file:
N_BIGTENS	generic/tclStrToD.c	/^#define N_BIGTENS /;"	d	file:
N_LOG2POW5	generic/tclStrToD.c	/^#define N_LOG2POW5 /;"	d	file:
Name	unix/tcl.spec	/^Name:          tclunchained$/;"	t
NameTableValues	generic/tclOOCall.c	/^enum NameTableValues {$/;"	g	file:
Namespace	generic/tclInt.h	/^typedef struct Namespace {$/;"	s
Namespace	generic/tclInt.h	/^} Namespace;$/;"	t	typeref:struct:Namespace
NamespaceChildrenCmd	generic/tclNamesp.c	/^NamespaceChildrenCmd($/;"	f	typeref:typename:int	file:
NamespaceChildrenCmd	generic/tclNamesp.c	/^static Tcl_ObjCmdProc	NamespaceChildrenCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
NamespaceCodeCmd	generic/tclNamesp.c	/^NamespaceCodeCmd($/;"	f	typeref:typename:int	file:
NamespaceCodeCmd	generic/tclNamesp.c	/^static Tcl_ObjCmdProc	NamespaceCodeCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
NamespaceCurrentCmd	generic/tclNamesp.c	/^NamespaceCurrentCmd($/;"	f	typeref:typename:int	file:
NamespaceCurrentCmd	generic/tclNamesp.c	/^static Tcl_ObjCmdProc	NamespaceCurrentCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
NamespaceDeleteCmd	generic/tclNamesp.c	/^NamespaceDeleteCmd($/;"	f	typeref:typename:int	file:
NamespaceDeleteCmd	generic/tclNamesp.c	/^static Tcl_ObjCmdProc	NamespaceDeleteCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
NamespaceEvalCmd	generic/tclNamesp.c	/^NamespaceEvalCmd($/;"	f	typeref:typename:int	file:
NamespaceEvalCmd	generic/tclNamesp.c	/^static Tcl_ObjCmdProc	NamespaceEvalCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
NamespaceExistsCmd	generic/tclNamesp.c	/^NamespaceExistsCmd($/;"	f	typeref:typename:int	file:
NamespaceExistsCmd	generic/tclNamesp.c	/^static Tcl_ObjCmdProc	NamespaceExistsCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
NamespaceExportCmd	generic/tclNamesp.c	/^NamespaceExportCmd($/;"	f	typeref:typename:int	file:
NamespaceExportCmd	generic/tclNamesp.c	/^static Tcl_ObjCmdProc	NamespaceExportCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
NamespaceForgetCmd	generic/tclNamesp.c	/^NamespaceForgetCmd($/;"	f	typeref:typename:int	file:
NamespaceForgetCmd	generic/tclNamesp.c	/^static Tcl_ObjCmdProc	NamespaceForgetCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
NamespaceFree	generic/tclNamesp.c	/^NamespaceFree($/;"	f	typeref:typename:void	file:
NamespaceImportCmd	generic/tclNamesp.c	/^NamespaceImportCmd($/;"	f	typeref:typename:int	file:
NamespaceImportCmd	generic/tclNamesp.c	/^static Tcl_ObjCmdProc	NamespaceImportCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
NamespaceInscopeCmd	generic/tclNamesp.c	/^NamespaceInscopeCmd($/;"	f	typeref:typename:int	file:
NamespaceInscopeCmd	generic/tclNamesp.c	/^static Tcl_ObjCmdProc	NamespaceInscopeCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
NamespaceOriginCmd	generic/tclNamesp.c	/^NamespaceOriginCmd($/;"	f	typeref:typename:int	file:
NamespaceOriginCmd	generic/tclNamesp.c	/^static Tcl_ObjCmdProc	NamespaceOriginCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
NamespaceParentCmd	generic/tclNamesp.c	/^NamespaceParentCmd($/;"	f	typeref:typename:int	file:
NamespaceParentCmd	generic/tclNamesp.c	/^static Tcl_ObjCmdProc	NamespaceParentCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
NamespacePathCmd	generic/tclNamesp.c	/^NamespacePathCmd($/;"	f	typeref:typename:int	file:
NamespacePathCmd	generic/tclNamesp.c	/^static Tcl_ObjCmdProc	NamespacePathCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
NamespacePathEntry	generic/tclInt.h	/^struct NamespacePathEntry {$/;"	s
NamespacePathEntry	generic/tclInt.h	/^typedef struct NamespacePathEntry NamespacePathEntry;$/;"	t	typeref:struct:NamespacePathEntry
NamespaceQualifiersCmd	generic/tclNamesp.c	/^NamespaceQualifiersCmd($/;"	f	typeref:typename:int	file:
NamespaceQualifiersCmd	generic/tclNamesp.c	/^static Tcl_ObjCmdProc	NamespaceQualifiersCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
NamespaceTailCmd	generic/tclNamesp.c	/^NamespaceTailCmd($/;"	f	typeref:typename:int	file:
NamespaceTailCmd	generic/tclNamesp.c	/^static Tcl_ObjCmdProc	NamespaceTailCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
NamespaceUnknownCmd	generic/tclNamesp.c	/^NamespaceUnknownCmd($/;"	f	typeref:typename:int	file:
NamespaceUnknownCmd	generic/tclNamesp.c	/^static Tcl_ObjCmdProc	NamespaceUnknownCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
NamespaceUpvarCmd	generic/tclNamesp.c	/^NamespaceUpvarCmd($/;"	f	typeref:typename:int	file:
NamespaceUpvarCmd	generic/tclNamesp.c	/^static Tcl_ObjCmdProc	NamespaceUpvarCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
NamespaceWhichCmd	generic/tclNamesp.c	/^NamespaceWhichCmd($/;"	f	typeref:typename:int	file:
NamespaceWhichCmd	generic/tclNamesp.c	/^static Tcl_ObjCmdProc	NamespaceWhichCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
NativeAccess	win/tclWinFile.c	/^NativeAccess($/;"	f	typeref:typename:int	file:
NativeCalc100NsTicks	win/tclWinTime.c	/^NativeCalc100NsTicks($/;"	f	typeref:typename:long long	file:
NativeDev	win/tclWinFile.c	/^NativeDev($/;"	f	typeref:typename:int	file:
NativeFileAttrStrings	generic/tclIOUtil.c	/^NativeFileAttrStrings($/;"	f	typeref:typename:const char * const *	file:
NativeFileAttrStrings	generic/tclIOUtil.c	/^static Tcl_FSFileAttrStringsProc NativeFileAttrStrings;$/;"	v	typeref:typename:Tcl_FSFileAttrStringsProc	file:
NativeFileAttrsGet	generic/tclIOUtil.c	/^NativeFileAttrsGet($/;"	f	typeref:typename:int	file:
NativeFileAttrsGet	generic/tclIOUtil.c	/^static Tcl_FSFileAttrsGetProc	NativeFileAttrsGet;$/;"	v	typeref:typename:Tcl_FSFileAttrsGetProc	file:
NativeFileAttrsSet	generic/tclIOUtil.c	/^NativeFileAttrsSet($/;"	f	typeref:typename:int	file:
NativeFileAttrsSet	generic/tclIOUtil.c	/^static Tcl_FSFileAttrsSetProc	NativeFileAttrsSet;$/;"	v	typeref:typename:Tcl_FSFileAttrsSetProc	file:
NativeFilesystemSeparator	generic/tclIOUtil.c	/^NativeFilesystemSeparator($/;"	f	typeref:typename:Tcl_Obj *	file:
NativeFilesystemSeparator	generic/tclIOUtil.c	/^static Tcl_FSFilesystemSeparatorProc NativeFilesystemSeparator;$/;"	v	typeref:typename:Tcl_FSFilesystemSeparatorProc	file:
NativeFreeInternalRep	generic/tclIOUtil.c	/^NativeFreeInternalRep($/;"	f	typeref:typename:void	file:
NativeFreeInternalRep	generic/tclIOUtil.c	/^static Tcl_FSFreeInternalRepProc NativeFreeInternalRep;$/;"	v	typeref:typename:Tcl_FSFreeInternalRepProc	file:
NativeGetMicroseconds	win/tclWinTime.c	/^NativeGetMicroseconds(void)$/;"	f	typeref:typename:long long	file:
NativeGetTime	unix/tclUnixTime.c	/^NativeGetTime($/;"	f	typeref:typename:void	file:
NativeGetTime	win/tclWinTime.c	/^NativeGetTime($/;"	f	typeref:typename:void	file:
NativeIsComPort	win/tclWinChan.c	/^NativeIsComPort($/;"	f	typeref:typename:int	file:
NativeIsExec	win/tclWinFile.c	/^NativeIsExec($/;"	f	typeref:typename:int	file:
NativeMatchType	unix/tclUnixFile.c	/^NativeMatchType($/;"	f	typeref:typename:int	file:
NativeMatchType	win/tclWinFile.c	/^NativeMatchType($/;"	f	typeref:typename:int	file:
NativeReadReparse	win/tclWinFile.c	/^NativeReadReparse($/;"	f	typeref:typename:int	file:
NativeScaleTime	unix/tclUnixTime.c	/^NativeScaleTime($/;"	f	typeref:typename:void	file:
NativeScaleTime	win/tclWinTime.c	/^NativeScaleTime($/;"	f	typeref:typename:void	file:
NativeStat	win/tclWinFile.c	/^NativeStat($/;"	f	typeref:typename:int	file:
NativeStatMode	win/tclWinFile.c	/^NativeStatMode($/;"	f	typeref:typename:unsigned short	file:
NativeWriteReparse	win/tclWinFile.c	/^NativeWriteReparse($/;"	f	typeref:typename:int	file:
NeedReversing	generic/tclBinary.c	/^NeedReversing($/;"	f	typeref:typename:int	file:
New command options	changes.md	/^## New command options$/;"	s
New commands	changes.md	/^## New commands$/;"	s
NewArithSeriesDbl	generic/tclArithSeries.c	/^NewArithSeriesDbl($/;"	f	typeref:typename:Tcl_Obj *	file:
NewArithSeriesInt	generic/tclArithSeries.c	/^NewArithSeriesInt($/;"	f	typeref:typename:Tcl_Obj *	file:
NewAssemblyEnv	generic/tclAssembly.c	/^NewAssemblyEnv($/;"	f	typeref:typename:AssemblyEnv *	file:
NewLongObj	generic/tclStringObj.c	/^NewLongObj($/;"	f	typeref:typename:Tcl_Obj *	file:
NewNativeObj	generic/tclMain.c	/^NewNativeObj($/;"	f	typeref:typename:Tcl_Obj *	file:
NewOSTypeObj	macosx/tclMacOSXFCmd.c	/^NewOSTypeObj($/;"	f	typeref:typename:Tcl_Obj *	file:
NewReflectedChannel	generic/tclIORChan.c	/^NewReflectedChannel($/;"	f	typeref:typename:ReflectedChannel *	file:
NewReflectedTransform	generic/tclIORTrans.c	/^NewReflectedTransform($/;"	f	typeref:typename:ReflectedTransform *	file:
NewSocketInfo	win/tclWinSock.c	/^NewSocketInfo($/;"	f	typeref:typename:TcpState *	file:
NewTestIndexHex	generic/tclTestObjInterface.c	/^int NewTestIndexHex ($/;"	f	typeref:typename:int
NewTestListInteger	generic/tclTestObjInterfaceInteger.c	/^NewTestListInteger() {$/;"	f	typeref:typename:Tcl_Obj *
NewTestListIntegerIntrep	generic/tclTestObjInterfaceInteger.c	/^NewTestListIntegerIntrep() {$/;"	f	typeref:typename:ListInteger *
NewTestThread	generic/tclThreadTest.c	/^NewTestThread($/;"	f	typeref:typename:Tcl_ThreadCreateType
NewThreadProc	generic/tclEvent.c	/^NewThreadProc($/;"	f	typeref:typename:Tcl_ThreadCreateType	file:
NewWideIntObj	generic/tclStringObj.c	/^NewWideIntObj($/;"	f	typeref:typename:Tcl_Obj *	file:
NextChannelHandler	generic/tclIO.c	/^typedef struct NextChannelHandler {$/;"	s	file:
NextChannelHandler	generic/tclIO.c	/^} NextChannelHandler;$/;"	t	typeref:struct:NextChannelHandler	file:
NextHandle	generic/tclIORChan.c	/^NextHandle(void)$/;"	f	typeref:typename:Tcl_Obj *	file:
NextHandle	generic/tclIORTrans.c	/^NextHandle(void)$/;"	f	typeref:typename:Tcl_Obj *	file:
NextPipelinedWrite	library/http/http.tcl	/^proc http::NextPipelinedWrite {token} {$/;"	p	namespace:http
NextRestoreFrame	generic/tclOOBasic.c	/^NextRestoreFrame($/;"	f	typeref:typename:int	file:
NextRestoreFrame	generic/tclOOBasic.c	/^static Tcl_NRPostProc	NextRestoreFrame;$/;"	v	typeref:typename:Tcl_NRPostProc	file:
Next_First	compat/zlib/contrib/ada/mtest.adb	/^            Next_First : Stream_Element_Offset := Compare_First + Item'Length;$/;"	v	subprogram:Compare	file:
Next_First	compat/zlib/contrib/ada/mtest.adb	/^         Next_First : Stream_Element_Offset;$/;"	v	subprogram:Read_Buffer	file:
No_Compression	compat/zlib/contrib/ada/zlib.ads	/^   No_Compression      : constant Compression_Level := 0;$/;"	n	packspec:ZLib
No_Data	compat/zlib/contrib/ada/zlib.adb	/^      No_Data : Stream_Element_Array := (1 .. 0 => 0);$/;"	v	subprogram:Flush	file:
No_Flush	compat/zlib/contrib/ada/zlib.ads	/^   No_Flush      : constant Flush_Mode := 0;$/;"	n	packspec:ZLib	file:
No_Flush	compat/zlib/contrib/ada/zlib.ads	/^   No_Flush      : constant Flush_Mode;$/;"	n	packspec:ZLib
Nokia770Twiddle	generic/tclStrToD.c	/^Nokia770Twiddle($/;"	f	typeref:typename:Tcl_WideUInt	file:
NonThrowingByteCodes	generic/tclAssembly.c	/^static const unsigned char NonThrowingByteCodes[] = {$/;"	v	typeref:typename:const unsigned char[]	file:
None	compat/zlib/contrib/ada/zlib.ads	/^   type Header_Type is (None, Auto, Default, GZip);$/;"	l	type:Header_Type	file:
None	compat/zlib/contrib/dotzlib/DotZLib/DotZLib.cs	/^        None = 0,$/;"	e	enum:DotZLib.CompressLevel	file:
None	compat/zlib/contrib/dotzlib/DotZLib/DotZLib.cs	/^        None,  Partial,  Sync,  Full,  Finish,  Block$/;"	e	enum:DotZLib.FlushTypes	file:
NoneArg	generic/tclCmdIL.c	/^     NoneArg, NumericArg, RangeKeywordArg, ErrArg, LastArg = 8$/;"	e	enum:__anond5eb1cce0503	file:
NoopCmd	generic/tclTest.c	/^NoopCmd($/;"	f	typeref:typename:int	file:
NoopCmd	generic/tclTest.c	/^static Tcl_CmdProc	NoopCmd;$/;"	v	typeref:typename:Tcl_CmdProc	file:
NoopObjCmd	generic/tclTest.c	/^NoopObjCmd($/;"	f	typeref:typename:int	file:
NoopObjCmd	generic/tclTest.c	/^static Tcl_ObjCmdProc	NoopObjCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
NormLocaleObj	generic/tclClock.c	/^NormLocaleObj($/;"	f	typeref:typename:Tcl_Obj *	file:
NormTimezoneObj	generic/tclClock.c	/^NormTimezoneObj($/;"	f	typeref:typename:Tcl_Obj *	file:
NormalizeMountPoint	generic/tclZipfs.c	/^NormalizeMountPoint($/;"	f	typeref:typename:int	file:
NormalizeRightward	generic/tclStrToD.c	/^NormalizeRightward($/;"	f	typeref:typename:int	file:
NotArrayError	generic/tclVar.c	/^NotArrayError($/;"	f	typeref:typename:int	file:
NotOperator	generic/tclCompExpr.c	/^#define NotOperator(/;"	d	file:
Notable incompatibilities	changes.md	/^## Notable incompatibilities$/;"	s
Notifier	doc/Notifier.3	/^.TH Notifier 3 8.1 Tcl "Tcl Library Procedures"$/;"	t
NotifierProc	unix/tclSelectNotfy.c	/^NotifierProc($/;"	f	typeref:typename:unsigned int __stdcall	file:
NotifierProc	win/tclWinNotify.c	/^NotifierProc($/;"	f	typeref:typename:LRESULT CALLBACK	file:
NotifierState	unix/tclXtNotify.c	/^static struct NotifierState {$/;"	s	file:
NotifierThreadProc	macosx/tclMacOSXNotify.c	/^NotifierThreadProc($/;"	f	typeref:typename:TCL_NORETURN void	file:
NotifierThreadProc	unix/tclSelectNotfy.c	/^NotifierThreadProc($/;"	f	typeref:typename:TCL_NORETURN void	file:
NsEnsembleImplementationCmdNR	generic/tclEnsemble.c	/^NsEnsembleImplementationCmdNR($/;"	f	typeref:typename:int	file:
NsEnsembleStringOrder	generic/tclEnsemble.c	/^NsEnsembleStringOrder($/;"	f	typeref:typename:int	file:
NsEval_Callback	generic/tclNamesp.c	/^NsEval_Callback($/;"	f	typeref:typename:int	file:
NsEval_Callback	generic/tclNamesp.c	/^static Tcl_NRPostProc NsEval_Callback;$/;"	v	typeref:typename:Tcl_NRPostProc	file:
NsNameGetInternalRep	generic/tclNamesp.c	/^#define NsNameGetInternalRep(/;"	d	file:
NsNameSetInternalRep	generic/tclNamesp.c	/^#define NsNameSetInternalRep(/;"	d	file:
NudgeWatchers	win/tclWinConsole.c	/^NudgeWatchers($/;"	f	typeref:typename:void	file:
NumChildEntries	generic/tclNamesp.c	/^NumChildEntries($/;"	f	typeref:typename:Tcl_Size	file:
Number	generic/tclDate.c	/^    Tcl_WideInt Number;$/;"	m	union:YYSTYPE	typeref:typename:Tcl_WideInt	file:
Number	generic/tclDateClassic.c	/^    time_t Number;$/;"	m	union:YYSTYPE	typeref:typename:time_t	file:
Numbers	changes.md	/^## Numbers$/;"	s
NumericArg	generic/tclCmdIL.c	/^     NoneArg, NumericArg, RangeKeywordArg, ErrArg, LastArg = 8$/;"	e	enum:__anond5eb1cce0503	file:
O	compat/zlib/contrib/ada/buffer_demo.adb	/^         O : Stream_Element_Offset;$/;"	v	identifier:Decompress	file:
O2S	generic/tclExecute.c	/^#   define O2S(/;"	d	file:
OBJ1	compat/zlib/contrib/delphi/zlibd32.mak	/^OBJ1 = adler32.obj compress.obj crc32.obj deflate.obj gzclose.obj gzlib.obj gzread.obj$/;"	m
OBJ1	compat/zlib/contrib/pascal/zlibd32.mak	/^OBJ1 = adler32.obj compress.obj crc32.obj deflate.obj gzclose.obj gzlib.obj gzread.obj$/;"	m
OBJ2	compat/zlib/contrib/delphi/zlibd32.mak	/^OBJ2 = gzwrite.obj infback.obj inffast.obj inflate.obj inftrees.obj trees.obj uncompr.obj zutil./;"	m
OBJ2	compat/zlib/contrib/pascal/zlibd32.mak	/^OBJ2 = gzwrite.obj infback.obj inffast.obj inflate.obj inftrees.obj trees.obj uncompr.obj zutil./;"	m
OBJA	compat/zlib/Makefile.in	/^OBJA =$/;"	m
OBJC	compat/zlib/Makefile.in	/^OBJC = $(OBJZ) $(OBJG)$/;"	m
OBJECT AND CLASS METADATA	doc/Class.3	/^.SH "OBJECT AND CLASS METADATA"$/;"	s	title:Tcl_Class
OBJECT METHOD NAME MAPPING	doc/Class.3	/^.SH "OBJECT METHOD NAME MAPPING"$/;"	s	title:Tcl_Class
OBJECT_DESTRUCTING	generic/tclOOInt.h	/^    OBJECT_DESTRUCTING = 1,	\/* Indicates that an object is being or has$/;"	e	enum:ObjectFlags
OBJECT_MIXIN	generic/tclOOCall.c	/^    OBJECT_MIXIN = 0x1000000,$/;"	e	enum:CallChainFlags	file:
OBJEXT	unix/Makefile.in	/^OBJEXT			= @OBJEXT@$/;"	m
OBJEXT	win/Makefile.in	/^OBJEXT		= @OBJEXT@$/;"	m
OBJEXT_FOR_BUILD	unix/tcl.m4	/^    AC_SUBST(OBJEXT_FOR_BUILD)])dnl$/;"	s
OBJEXT_FOR_BUILD	win/tcl.m4	/^AC_SUBST(OBJEXT_FOR_BUILD)])dnl$/;"	s
OBJG	compat/zlib/Makefile.in	/^OBJG = compress.o uncompr.o gzclose.o gzlib.o gzread.o gzwrite.o$/;"	m
OBJNAME_LENGTH_IN_ERRORINFO_LIMIT	generic/tclOODefineCmds.c	/^#define OBJNAME_LENGTH_IN_ERRORINFO_LIMIT /;"	d	file:
OBJP1	compat/zlib/contrib/delphi/zlibd32.mak	/^OBJP1 = +adler32.obj+compress.obj+crc32.obj+deflate.obj+gzclose.obj+gzlib.obj+gzread.obj$/;"	m
OBJP1	compat/zlib/contrib/pascal/zlibd32.mak	/^OBJP1 = +adler32.obj+compress.obj+crc32.obj+deflate.obj+gzclose.obj+gzlib.obj+gzread.obj$/;"	m
OBJROOT	macosx/GNUmakefile	/^OBJROOT			?= ${SYMROOT}$/;"	m
OBJS	compat/zlib/Makefile.in	/^OBJS = $(OBJC) $(OBJA)$/;"	m
OBJS	compat/zlib/watcom/watcom_f.mak	/^OBJS =      adler32.obj  compress.obj crc32.obj   deflate.obj    &$/;"	m
OBJS	compat/zlib/watcom/watcom_l.mak	/^OBJS =      adler32.obj  compress.obj crc32.obj   deflate.obj    &$/;"	m
OBJS	unix/Makefile.in	/^OBJS = ${TCL_OBJS} @DTRACE_OBJ@ @ZLIB_OBJS@ @TOMMATH_OBJS@$/;"	m
OBJS_TO_ALLOC_EACH_TIME	generic/tclObj.c	/^#define OBJS_TO_ALLOC_EACH_TIME /;"	d	file:
OBJZ	compat/zlib/Makefile.in	/^OBJZ = adler32.o crc32.o deflate.o infback.o inffast.o inflate.o inftrees.o trees.o zutil.o$/;"	m
OBJ_AT_DEPTH	generic/tclExecute.c	/^#define OBJ_AT_DEPTH(/;"	d	file:
OBJ_AT_TOS	generic/tclExecute.c	/^#define OBJ_AT_TOS	/;"	d	file:
OBJ_DIR	macosx/GNUmakefile	/^OBJ_DIR			= ${OBJROOT}\/${BUILD_STYLE}$/;"	m
OBJ_UNDER_TOS	generic/tclExecute.c	/^#define OBJ_UNDER_TOS	/;"	d	file:
OBSOLETE FUNCTIONS	doc/Access.3	/^.SS "OBSOLETE FUNCTIONS"$/;"	S	section:Tcl_Access""DESCRIPTION
OCTAL	generic/tclStrToD.c	/^	HEXADECIMAL, OCTAL, DECIMAL,$/;"	e	enum:TclParseNumber::State	file:
OF	compat/zlib/zconf.h	/^#    define OF(/;"	d
OF	compat/zlib/zconf.h.in	/^#    define OF(/;"	d	file:
OFF	generic/regexec.c	/^#define	OFF(/;"	d	file:
OFFSET_BITS	generic/tclUniData.c	/^#define OFFSET_BITS /;"	d	file:
OFILES	compat/zlib/nintendods/Makefile	/^export OFILES	:=	$(addsuffix .o,$(BINFILES)) \\$/;"	m
OK	compat/zlib/contrib/ada/zlib.adb	/^      (OK,$/;"	l	type:Return_Code_Enum	file:
OLD STRING PROCEDURES	doc/SetResult.3	/^.SS "OLD STRING PROCEDURES"$/;"	S	section:Tcl_SetResult""DEPRECATED INTERFACES
ONCE_INIT	compat/zlib/crc32.c	/^#define ONCE_INIT /;"	d	file:
ONE_CENTURY_GREGORIAN	generic/tclClockClassic.c	/^#define ONE_CENTURY_GREGORIAN	/;"	d	file:
ONE_CENTURY_GREGORIAN	generic/tclDate.h	/^#define ONE_CENTURY_GREGORIAN	/;"	d
ONE_YEAR	generic/tclClockClassic.c	/^#define ONE_YEAR	/;"	d	file:
ONE_YEAR	generic/tclDate.h	/^#define ONE_YEAR	/;"	d
OOResVarInfo	generic/tclOOMethod.c	/^typedef struct OOResVarInfo {$/;"	s	file:
OOResVarInfo	generic/tclOOMethod.c	/^} OOResVarInfo;$/;"	t	typeref:struct:OOResVarInfo	file:
OO_OBJS	unix/Makefile.in	/^OO_OBJS = tclOO.o tclOOBasic.o tclOOCall.o tclOODefineCmds.o tclOOInfo.o \\$/;"	m
OO_SRCS	unix/Makefile.in	/^OO_SRCS = \\$/;"	m
OO_UNKNOWN_METHOD	generic/tclOOInt.h	/^    OO_UNKNOWN_METHOD = 0x04,	\/* This is an unknown method. *\/$/;"	e	enum:TclOOCallChainFlags
OP	generic/tclCompCmdsSZ.c	/^#define OP(/;"	d	file:
OP1	generic/tclCompCmdsSZ.c	/^#define OP1(/;"	d	file:
OP14	generic/tclCompCmdsSZ.c	/^#define OP14(/;"	d	file:
OP4	generic/tclCompCmdsSZ.c	/^#define OP4(/;"	d	file:
OP44	generic/tclCompCmdsSZ.c	/^#define OP44(/;"	d	file:
OPENFILECHANNELPROC	doc/FileSystem.3	/^.SS OPENFILECHANNELPROC$/;"	S	section:Filesystem""FILESYSTEM OPERATIONS
OPEN_NOTIFIER_LOG	macosx/tclMacOSXNotify.c	/^#define OPEN_NOTIFIER_LOG /;"	d	file:
OPEN_NOTIFIER_LOG	macosx/tclMacOSXNotify.c	/^#define OPEN_NOTIFIER_LOG$/;"	d	file:
OPEN_PAREN	generic/tclCompExpr.c	/^#define OPEN_PAREN	/;"	d	file:
OPEN_PUNCTUATION	generic/tclUniData.c	/^    OPEN_PUNCTUATION,$/;"	e	enum:__anon910316cb0103	file:
OPERAND_AUX4	generic/tclCompile.h	/^    OPERAND_AUX4,		\/* Four byte unsigned index into the aux data$/;"	e	enum:InstOperandType
OPERAND_IDX4	generic/tclCompile.h	/^    OPERAND_IDX4,		\/* Four byte signed index (actually an$/;"	e	enum:InstOperandType
OPERAND_INT1	generic/tclCompile.h	/^    OPERAND_INT1,		\/* One byte signed integer. *\/$/;"	e	enum:InstOperandType
OPERAND_INT4	generic/tclCompile.h	/^    OPERAND_INT4,		\/* Four byte signed integer. *\/$/;"	e	enum:InstOperandType
OPERAND_LIT1	generic/tclCompile.h	/^    OPERAND_LIT1,		\/* One byte unsigned index into table of$/;"	e	enum:InstOperandType
OPERAND_LIT4	generic/tclCompile.h	/^    OPERAND_LIT4,		\/* Four byte unsigned index into table of$/;"	e	enum:InstOperandType
OPERAND_LVT1	generic/tclCompile.h	/^    OPERAND_LVT1,		\/* One byte unsigned index into the local$/;"	e	enum:InstOperandType
OPERAND_LVT4	generic/tclCompile.h	/^    OPERAND_LVT4,		\/* Four byte unsigned index into the local$/;"	e	enum:InstOperandType
OPERAND_NONE	generic/tclCompile.h	/^    OPERAND_NONE,		\/* No operand. *\/$/;"	e	enum:InstOperandType
OPERAND_OFFSET1	generic/tclCompile.h	/^    OPERAND_OFFSET1,		\/* One byte signed jump offset. *\/$/;"	e	enum:InstOperandType
OPERAND_OFFSET4	generic/tclCompile.h	/^    OPERAND_OFFSET4,		\/* Four byte signed jump offset. *\/$/;"	e	enum:InstOperandType
OPERAND_SCLS1	generic/tclCompile.h	/^    OPERAND_SCLS1		\/* Index into tclStringClassTable. *\/$/;"	e	enum:InstOperandType
OPERAND_UINT1	generic/tclCompile.h	/^    OPERAND_UINT1,		\/* One byte unsigned integer. *\/$/;"	e	enum:InstOperandType
OPERAND_UINT4	generic/tclCompile.h	/^    OPERAND_UINT4,		\/* Four byte unsigned integer. *\/$/;"	e	enum:InstOperandType
OPTIONS	compat/zlib/contrib/minizip/miniunzip.1	/^.SH OPTIONS$/;"	s	title:miniunzip
OPTIONS	compat/zlib/contrib/minizip/minizip.1	/^.SH OPTIONS$/;"	s	title:minizip
OPTIONS	win/buildall.vc.bat	/^:OPTIONS$/;"	l
OPTIONS_DONE	win/buildall.vc.bat	/^:OPTIONS_DONE$/;"	l
OPTS	win/buildall.vc.bat	/^if not %SYMBOLS%.==. set OPTS=symbols$/;"	v
OPTS	win/buildall.vc.bat	/^if not %SYMBOLS%.==. set OPTS=symbols,static$/;"	v
OPTS	win/buildall.vc.bat	/^set OPTS=$/;"	v
OPTS	win/buildall.vc.bat	/^set OPTS=none$/;"	v
OPTS	win/buildall.vc.bat	/^set OPTS=static$/;"	v
OPT_ALIAS	generic/tclInterp.c	/^	OPT_ALIAS,	OPT_ALIASES,	OPT_BGERROR,	OPT_CANCEL,$/;"	e	enum:NRInterpCmd::interpOptionEnum	file:
OPT_ALIAS	generic/tclInterp.c	/^	OPT_ALIAS,	OPT_ALIASES,	OPT_BGERROR,	OPT_DEBUG,$/;"	e	enum:NRChildCmd::childCmdOptionsEnum	file:
OPT_ALIASES	generic/tclInterp.c	/^	OPT_ALIAS,	OPT_ALIASES,	OPT_BGERROR,	OPT_CANCEL,$/;"	e	enum:NRInterpCmd::interpOptionEnum	file:
OPT_ALIASES	generic/tclInterp.c	/^	OPT_ALIAS,	OPT_ALIASES,	OPT_BGERROR,	OPT_DEBUG,$/;"	e	enum:NRChildCmd::childCmdOptionsEnum	file:
OPT_ALL	generic/tclEvent.c	/^	OPT_ALL, OPT_EXTD, OPT_NO_FEVTS, OPT_NO_IEVTS,$/;"	e	enum:Tcl_VwaitObjCmd::vWaitOptions	file:
OPT_ALL	generic/tclOOInfo.c	/^	OPT_ALL, OPT_LOCALPRIVATE, OPT_PRIVATE, OPT_SCOPE$/;"	e	enum:InfoClassMethodsCmd::Options	file:
OPT_ALL	generic/tclOOInfo.c	/^	OPT_ALL, OPT_LOCALPRIVATE, OPT_PRIVATE, OPT_SCOPE$/;"	e	enum:InfoObjectMethodsCmd::Options	file:
OPT_BGERROR	generic/tclInterp.c	/^	OPT_ALIAS,	OPT_ALIASES,	OPT_BGERROR,	OPT_CANCEL,$/;"	e	enum:NRInterpCmd::interpOptionEnum	file:
OPT_BGERROR	generic/tclInterp.c	/^	OPT_ALIAS,	OPT_ALIASES,	OPT_BGERROR,	OPT_DEBUG,$/;"	e	enum:NRChildCmd::childCmdOptionsEnum	file:
OPT_CANCEL	generic/tclInterp.c	/^	OPT_ALIAS,	OPT_ALIASES,	OPT_BGERROR,	OPT_CANCEL,$/;"	e	enum:NRInterpCmd::interpOptionEnum	file:
OPT_CHILDREN	generic/tclInterp.c	/^	OPT_CHILDREN,	OPT_CREATE,	OPT_DEBUG,	OPT_DELETE,$/;"	e	enum:NRInterpCmd::interpOptionEnum	file:
OPT_CMD	generic/tclInterp.c	/^	OPT_CMD, OPT_GRAN, OPT_MILLI, OPT_SEC$/;"	e	enum:ChildTimeLimitCmd::Options	file:
OPT_CMD	generic/tclInterp.c	/^	OPT_CMD, OPT_GRAN, OPT_VAL$/;"	e	enum:ChildCommandLimitCmd::Options	file:
OPT_COMPRESSION_DICTIONARY	generic/tclZlib.c	/^	OPT_COMPRESSION_DICTIONARY = 0,$/;"	e	enum:ZlibStreamSubcmd::objIndices	file:
OPT_COMPRESSION_LEVEL	generic/tclZlib.c	/^	OPT_COMPRESSION_LEVEL = 2,$/;"	e	enum:ZlibStreamSubcmd::objIndices	file:
OPT_CREATE	generic/tclInterp.c	/^	OPT_CHILDREN,	OPT_CREATE,	OPT_DEBUG,	OPT_DELETE,$/;"	e	enum:NRInterpCmd::interpOptionEnum	file:
OPT_DEBUG	generic/tclInterp.c	/^	OPT_ALIAS,	OPT_ALIASES,	OPT_BGERROR,	OPT_DEBUG,$/;"	e	enum:NRChildCmd::childCmdOptionsEnum	file:
OPT_DEBUG	generic/tclInterp.c	/^	OPT_CHILDREN,	OPT_CREATE,	OPT_DEBUG,	OPT_DELETE,$/;"	e	enum:NRInterpCmd::interpOptionEnum	file:
OPT_DELETE	generic/tclInterp.c	/^	OPT_CHILDREN,	OPT_CREATE,	OPT_DEBUG,	OPT_DELETE,$/;"	e	enum:NRInterpCmd::interpOptionEnum	file:
OPT_END	generic/tclZlib.c	/^	OPT_END = -1$/;"	e	enum:ZlibStreamSubcmd::objIndices	file:
OPT_EVAL	generic/tclInterp.c	/^	OPT_EVAL,	OPT_EXISTS,	OPT_EXPOSE,	OPT_HIDE,$/;"	e	enum:NRInterpCmd::interpOptionEnum	file:
OPT_EVAL	generic/tclInterp.c	/^	OPT_EVAL,	OPT_EXPOSE,	OPT_HIDE,	OPT_HIDDEN,$/;"	e	enum:NRChildCmd::childCmdOptionsEnum	file:
OPT_EXACT	generic/tclCmdMZ.c	/^	OPT_EXACT, OPT_GLOB, OPT_INDEXV, OPT_MATCHV, OPT_NOCASE, OPT_REGEXP,$/;"	e	enum:TclNRSwitchObjCmd::switchOptionsEnum	file:
OPT_EXACT	generic/tclVar.c	/^    enum arrayNamesOptionsEnum {OPT_EXACT, OPT_GLOB, OPT_REGEXP} mode = OPT_GLOB;$/;"	e	enum:ArrayNamesCmd::arrayNamesOptionsEnum	file:
OPT_EXISTS	generic/tclInterp.c	/^	OPT_EVAL,	OPT_EXISTS,	OPT_EXPOSE,	OPT_HIDE,$/;"	e	enum:NRInterpCmd::interpOptionEnum	file:
OPT_EXISTS	generic/tclVar.c	/^    enum arrayDefaultOptionsEnum { OPT_GET, OPT_SET, OPT_EXISTS, OPT_UNSET } option;$/;"	e	enum:ArrayDefaultCmd::arrayDefaultOptionsEnum	file:
OPT_EXPOSE	generic/tclInterp.c	/^	OPT_EVAL,	OPT_EXISTS,	OPT_EXPOSE,	OPT_HIDE,$/;"	e	enum:NRInterpCmd::interpOptionEnum	file:
OPT_EXPOSE	generic/tclInterp.c	/^	OPT_EVAL,	OPT_EXPOSE,	OPT_HIDE,	OPT_HIDDEN,$/;"	e	enum:NRChildCmd::childCmdOptionsEnum	file:
OPT_EXTD	generic/tclEvent.c	/^	OPT_ALL, OPT_EXTD, OPT_NO_FEVTS, OPT_NO_IEVTS,$/;"	e	enum:Tcl_VwaitObjCmd::vWaitOptions	file:
OPT_FAILIDX	generic/tclCmdMZ.c	/^	OPT_STRICT, OPT_FAILIDX$/;"	e	enum:StringIsCmd::isOptionsEnum	file:
OPT_GET	generic/tclOOProp.c	/^	OPT_GET, OPT_KIND, OPT_SET$/;"	e	enum:TclOODefinePropertyCmd::Options	file:
OPT_GET	generic/tclVar.c	/^    enum arrayDefaultOptionsEnum { OPT_GET, OPT_SET, OPT_EXISTS, OPT_UNSET } option;$/;"	e	enum:ArrayDefaultCmd::arrayDefaultOptionsEnum	file:
OPT_GLOB	generic/tclCmdMZ.c	/^	OPT_EXACT, OPT_GLOB, OPT_INDEXV, OPT_MATCHV, OPT_NOCASE, OPT_REGEXP,$/;"	e	enum:TclNRSwitchObjCmd::switchOptionsEnum	file:
OPT_GLOB	generic/tclVar.c	/^    enum arrayNamesOptionsEnum {OPT_EXACT, OPT_GLOB, OPT_REGEXP} mode = OPT_GLOB;$/;"	e	enum:ArrayNamesCmd::arrayNamesOptionsEnum	file:
OPT_GLOB	generic/tclZipfs.c	/^    enum list_options { OPT_GLOB, OPT_REGEXP };$/;"	e	enum:ZipFSListObjCmd::list_options	file:
OPT_GLOBAL	generic/tclInterp.c	/^	    OPT_GLOBAL,	OPT_NAMESPACE,	OPT_LAST$/;"	e	enum:NRChildCmd::hiddenOption	file:
OPT_GLOBAL	generic/tclInterp.c	/^	    OPT_GLOBAL,	OPT_NAMESPACE,	OPT_LAST$/;"	e	enum:NRInterpCmd::hiddenOption	file:
OPT_GRAN	generic/tclInterp.c	/^	OPT_CMD, OPT_GRAN, OPT_MILLI, OPT_SEC$/;"	e	enum:ChildTimeLimitCmd::Options	file:
OPT_GRAN	generic/tclInterp.c	/^	OPT_CMD, OPT_GRAN, OPT_VAL$/;"	e	enum:ChildCommandLimitCmd::Options	file:
OPT_GZIP_HEADER	generic/tclZlib.c	/^	OPT_GZIP_HEADER = 1,$/;"	e	enum:ZlibStreamSubcmd::objIndices	file:
OPT_HIDDEN	generic/tclInterp.c	/^	OPT_EVAL,	OPT_EXPOSE,	OPT_HIDE,	OPT_HIDDEN,$/;"	e	enum:NRChildCmd::childCmdOptionsEnum	file:
OPT_HIDDEN	generic/tclInterp.c	/^	OPT_HIDDEN,	OPT_ISSAFE,	OPT_INVOKEHID,$/;"	e	enum:NRInterpCmd::interpOptionEnum	file:
OPT_HIDE	generic/tclInterp.c	/^	OPT_EVAL,	OPT_EXISTS,	OPT_EXPOSE,	OPT_HIDE,$/;"	e	enum:NRInterpCmd::interpOptionEnum	file:
OPT_HIDE	generic/tclInterp.c	/^	OPT_EVAL,	OPT_EXPOSE,	OPT_HIDE,	OPT_HIDDEN,$/;"	e	enum:NRChildCmd::childCmdOptionsEnum	file:
OPT_IDLETASKS	generic/tclEvent.c	/^    enum updateOptionsEnum {OPT_IDLETASKS} optionIndex;$/;"	e	enum:Tcl_UpdateObjCmd::updateOptionsEnum	file:
OPT_INDEXV	generic/tclCmdMZ.c	/^	OPT_EXACT, OPT_GLOB, OPT_INDEXV, OPT_MATCHV, OPT_NOCASE, OPT_REGEXP,$/;"	e	enum:TclNRSwitchObjCmd::switchOptionsEnum	file:
OPT_INVOKEHID	generic/tclInterp.c	/^	OPT_HIDDEN,	OPT_ISSAFE,	OPT_INVOKEHID,$/;"	e	enum:NRInterpCmd::interpOptionEnum	file:
OPT_INVOKEHIDDEN	generic/tclInterp.c	/^	OPT_ISSAFE,	OPT_INVOKEHIDDEN, OPT_LIMIT,	OPT_MARKTRUSTED,$/;"	e	enum:NRChildCmd::childCmdOptionsEnum	file:
OPT_ISSAFE	generic/tclInterp.c	/^	OPT_HIDDEN,	OPT_ISSAFE,	OPT_INVOKEHID,$/;"	e	enum:NRInterpCmd::interpOptionEnum	file:
OPT_ISSAFE	generic/tclInterp.c	/^	OPT_ISSAFE,	OPT_INVOKEHIDDEN, OPT_LIMIT,	OPT_MARKTRUSTED,$/;"	e	enum:NRChildCmd::childCmdOptionsEnum	file:
OPT_KIND	generic/tclOOProp.c	/^	OPT_GET, OPT_KIND, OPT_SET$/;"	e	enum:TclOODefinePropertyCmd::Options	file:
OPT_LAST	generic/tclCmdMZ.c	/^	OPT_LAST$/;"	e	enum:TclNRSwitchObjCmd::switchOptionsEnum	file:
OPT_LAST	generic/tclEvent.c	/^	OPT_TIMEOUT, OPT_VARIABLE, OPT_WRITABLE, OPT_LAST$/;"	e	enum:Tcl_VwaitObjCmd::vWaitOptions	file:
OPT_LAST	generic/tclInterp.c	/^	    OPT_GLOBAL,	OPT_NAMESPACE,	OPT_LAST$/;"	e	enum:NRChildCmd::hiddenOption	file:
OPT_LAST	generic/tclInterp.c	/^	    OPT_GLOBAL,	OPT_NAMESPACE,	OPT_LAST$/;"	e	enum:NRInterpCmd::hiddenOption	file:
OPT_LAST	generic/tclInterp.c	/^	    OPT_SAFE,	OPT_LAST$/;"	e	enum:NRInterpCmd::option	file:
OPT_LAST	generic/tclInterp.c	/^	    OPT_UNWIND,	OPT_LAST$/;"	e	enum:NRInterpCmd::optionCancelEnum	file:
OPT_LIMIT	generic/tclInterp.c	/^	OPT_ISSAFE,	OPT_INVOKEHIDDEN, OPT_LIMIT,	OPT_MARKTRUSTED,$/;"	e	enum:NRChildCmd::childCmdOptionsEnum	file:
OPT_LIMIT	generic/tclInterp.c	/^	OPT_LIMIT,	OPT_MARKTRUSTED, OPT_RECLIMIT, OPT_SHARE,$/;"	e	enum:NRInterpCmd::interpOptionEnum	file:
OPT_LOCALPRIVATE	generic/tclOOInfo.c	/^	OPT_ALL, OPT_LOCALPRIVATE, OPT_PRIVATE, OPT_SCOPE$/;"	e	enum:InfoClassMethodsCmd::Options	file:
OPT_LOCALPRIVATE	generic/tclOOInfo.c	/^	OPT_ALL, OPT_LOCALPRIVATE, OPT_PRIVATE, OPT_SCOPE$/;"	e	enum:InfoObjectMethodsCmd::Options	file:
OPT_MARKTRUSTED	generic/tclInterp.c	/^	OPT_ISSAFE,	OPT_INVOKEHIDDEN, OPT_LIMIT,	OPT_MARKTRUSTED,$/;"	e	enum:NRChildCmd::childCmdOptionsEnum	file:
OPT_MARKTRUSTED	generic/tclInterp.c	/^	OPT_LIMIT,	OPT_MARKTRUSTED, OPT_RECLIMIT, OPT_SHARE,$/;"	e	enum:NRInterpCmd::interpOptionEnum	file:
OPT_MATCHV	generic/tclCmdMZ.c	/^	OPT_EXACT, OPT_GLOB, OPT_INDEXV, OPT_MATCHV, OPT_NOCASE, OPT_REGEXP,$/;"	e	enum:TclNRSwitchObjCmd::switchOptionsEnum	file:
OPT_MAXLEN	generic/tclBinary.c	/^    enum { OPT_MAXLEN, OPT_WRAPCHAR };$/;"	e	enum:BinaryEncode64::__anon8c3fe00a0303	file:
OPT_MAXLEN	generic/tclBinary.c	/^    enum { OPT_MAXLEN, OPT_WRAPCHAR };$/;"	e	enum:BinaryEncodeUu::__anon8c3fe00a0403	file:
OPT_MILLI	generic/tclInterp.c	/^	OPT_CMD, OPT_GRAN, OPT_MILLI, OPT_SEC$/;"	e	enum:ChildTimeLimitCmd::Options	file:
OPT_NAMESPACE	generic/tclInterp.c	/^	    OPT_GLOBAL,	OPT_NAMESPACE,	OPT_LAST$/;"	e	enum:NRChildCmd::hiddenOption	file:
OPT_NAMESPACE	generic/tclInterp.c	/^	    OPT_GLOBAL,	OPT_NAMESPACE,	OPT_LAST$/;"	e	enum:NRInterpCmd::hiddenOption	file:
OPT_NOCASE	generic/tclCmdMZ.c	/^	OPT_EXACT, OPT_GLOB, OPT_INDEXV, OPT_MATCHV, OPT_NOCASE, OPT_REGEXP,$/;"	e	enum:TclNRSwitchObjCmd::switchOptionsEnum	file:
OPT_NO_FEVTS	generic/tclEvent.c	/^	OPT_ALL, OPT_EXTD, OPT_NO_FEVTS, OPT_NO_IEVTS,$/;"	e	enum:Tcl_VwaitObjCmd::vWaitOptions	file:
OPT_NO_IEVTS	generic/tclEvent.c	/^	OPT_ALL, OPT_EXTD, OPT_NO_FEVTS, OPT_NO_IEVTS,$/;"	e	enum:Tcl_VwaitObjCmd::vWaitOptions	file:
OPT_NO_TEVTS	generic/tclEvent.c	/^	OPT_NO_TEVTS, OPT_NO_WEVTS, OPT_READABLE,$/;"	e	enum:Tcl_VwaitObjCmd::vWaitOptions	file:
OPT_NO_WEVTS	generic/tclEvent.c	/^	OPT_NO_TEVTS, OPT_NO_WEVTS, OPT_READABLE,$/;"	e	enum:Tcl_VwaitObjCmd::vWaitOptions	file:
OPT_PRIVATE	generic/tclOOInfo.c	/^	OPT_ALL, OPT_LOCALPRIVATE, OPT_PRIVATE, OPT_SCOPE$/;"	e	enum:InfoClassMethodsCmd::Options	file:
OPT_PRIVATE	generic/tclOOInfo.c	/^	OPT_ALL, OPT_LOCALPRIVATE, OPT_PRIVATE, OPT_SCOPE$/;"	e	enum:InfoObjectMethodsCmd::Options	file:
OPT_READABLE	generic/tclEvent.c	/^	OPT_NO_TEVTS, OPT_NO_WEVTS, OPT_READABLE,$/;"	e	enum:Tcl_VwaitObjCmd::vWaitOptions	file:
OPT_RECLIMIT	generic/tclInterp.c	/^	OPT_LIMIT,	OPT_MARKTRUSTED, OPT_RECLIMIT, OPT_SHARE,$/;"	e	enum:NRInterpCmd::interpOptionEnum	file:
OPT_RECLIMIT	generic/tclInterp.c	/^	OPT_RECLIMIT$/;"	e	enum:NRChildCmd::childCmdOptionsEnum	file:
OPT_REGEXP	generic/tclCmdMZ.c	/^	OPT_EXACT, OPT_GLOB, OPT_INDEXV, OPT_MATCHV, OPT_NOCASE, OPT_REGEXP,$/;"	e	enum:TclNRSwitchObjCmd::switchOptionsEnum	file:
OPT_REGEXP	generic/tclVar.c	/^    enum arrayNamesOptionsEnum {OPT_EXACT, OPT_GLOB, OPT_REGEXP} mode = OPT_GLOB;$/;"	e	enum:ArrayNamesCmd::arrayNamesOptionsEnum	file:
OPT_REGEXP	generic/tclZipfs.c	/^    enum list_options { OPT_GLOB, OPT_REGEXP };$/;"	e	enum:ZipFSListObjCmd::list_options	file:
OPT_SAFE	generic/tclInterp.c	/^	    OPT_SAFE,	OPT_LAST$/;"	e	enum:NRInterpCmd::option	file:
OPT_SCOPE	generic/tclOOInfo.c	/^	OPT_ALL, OPT_LOCALPRIVATE, OPT_PRIVATE, OPT_SCOPE$/;"	e	enum:InfoClassMethodsCmd::Options	file:
OPT_SCOPE	generic/tclOOInfo.c	/^	OPT_ALL, OPT_LOCALPRIVATE, OPT_PRIVATE, OPT_SCOPE$/;"	e	enum:InfoObjectMethodsCmd::Options	file:
OPT_SEC	generic/tclInterp.c	/^	OPT_CMD, OPT_GRAN, OPT_MILLI, OPT_SEC$/;"	e	enum:ChildTimeLimitCmd::Options	file:
OPT_SET	generic/tclOOProp.c	/^	OPT_GET, OPT_KIND, OPT_SET$/;"	e	enum:TclOODefinePropertyCmd::Options	file:
OPT_SET	generic/tclVar.c	/^    enum arrayDefaultOptionsEnum { OPT_GET, OPT_SET, OPT_EXISTS, OPT_UNSET } option;$/;"	e	enum:ArrayDefaultCmd::arrayDefaultOptionsEnum	file:
OPT_SHARE	generic/tclInterp.c	/^	OPT_LIMIT,	OPT_MARKTRUSTED, OPT_RECLIMIT, OPT_SHARE,$/;"	e	enum:NRInterpCmd::interpOptionEnum	file:
OPT_SLAVES	generic/tclInterp.c	/^	OPT_SLAVES,$/;"	e	enum:NRInterpCmd::interpOptionEnum	file:
OPT_STRICT	generic/tclBinary.c	/^    enum { OPT_STRICT };$/;"	e	enum:BinaryDecode64::__anon8c3fe00a0603	file:
OPT_STRICT	generic/tclBinary.c	/^    enum { OPT_STRICT };$/;"	e	enum:BinaryDecodeUu::__anon8c3fe00a0503	file:
OPT_STRICT	generic/tclBinary.c	/^    enum {OPT_STRICT };$/;"	e	enum:BinaryDecodeHex::__anon8c3fe00a0203	file:
OPT_STRICT	generic/tclCmdMZ.c	/^	OPT_STRICT, OPT_FAILIDX$/;"	e	enum:StringIsCmd::isOptionsEnum	file:
OPT_TARGET	generic/tclInterp.c	/^	OPT_TARGET,	OPT_TRANSFER$/;"	e	enum:NRInterpCmd::interpOptionEnum	file:
OPT_TIMEOUT	generic/tclEvent.c	/^	OPT_TIMEOUT, OPT_VARIABLE, OPT_WRITABLE, OPT_LAST$/;"	e	enum:Tcl_VwaitObjCmd::vWaitOptions	file:
OPT_TRANSFER	generic/tclInterp.c	/^	OPT_TARGET,	OPT_TRANSFER$/;"	e	enum:NRInterpCmd::interpOptionEnum	file:
OPT_UNSET	generic/tclVar.c	/^    enum arrayDefaultOptionsEnum { OPT_GET, OPT_SET, OPT_EXISTS, OPT_UNSET } option;$/;"	e	enum:ArrayDefaultCmd::arrayDefaultOptionsEnum	file:
OPT_UNWIND	generic/tclInterp.c	/^	    OPT_UNWIND,	OPT_LAST$/;"	e	enum:NRInterpCmd::optionCancelEnum	file:
OPT_VAL	generic/tclInterp.c	/^	OPT_CMD, OPT_GRAN, OPT_VAL$/;"	e	enum:ChildCommandLimitCmd::Options	file:
OPT_VARIABLE	generic/tclEvent.c	/^	OPT_TIMEOUT, OPT_VARIABLE, OPT_WRITABLE, OPT_LAST$/;"	e	enum:Tcl_VwaitObjCmd::vWaitOptions	file:
OPT_WRAPCHAR	generic/tclBinary.c	/^    enum { OPT_MAXLEN, OPT_WRAPCHAR };$/;"	e	enum:BinaryEncode64::__anon8c3fe00a0303	file:
OPT_WRAPCHAR	generic/tclBinary.c	/^    enum { OPT_MAXLEN, OPT_WRAPCHAR };$/;"	e	enum:BinaryEncodeUu::__anon8c3fe00a0403	file:
OPT_WRITABLE	generic/tclEvent.c	/^	OPT_TIMEOUT, OPT_VARIABLE, OPT_WRITABLE, OPT_LAST$/;"	e	enum:Tcl_VwaitObjCmd::vWaitOptions	file:
OR	generic/tclCompExpr.c	/^#define OR	/;"	d	file:
OS	compat/zlib/inflate.h	/^    OS,         \/* i: waiting for extra flags and operating system (gzip) *\/$/;"	e	enum:__anon6bf0a2910103
OS2	compat/zlib/zconf.h	/^#  define OS2$/;"	d
OS2	compat/zlib/zconf.h.in	/^#  define OS2$/;"	d	file:
OSSpinLock	macosx/tclMacOSXNotify.c	/^typedef uint32_t OSSpinLock;$/;"	t	typeref:typename:uint32_t	file:
OSType	macosx/tclMacOSXFCmd.c	/^typedef u_int32_t OSType;$/;"	t	typeref:typename:u_int32_t	file:
OSVERSIONINFOW	unix/tclUnixInit.c	/^} OSVERSIONINFOW;$/;"	t	typeref:struct:__anonf052aa840408	file:
OS_CODE	compat/zlib/zutil.h	/^#    define OS_CODE /;"	d
OS_CODE	compat/zlib/zutil.h	/^#  define OS_CODE /;"	d
OTHER OPERATIONS	doc/ObjectType.3	/^.SH "OTHER OPERATIONS"$/;"	s	title:Tcl_ObjType
OTHER_LETTER	generic/tclUniData.c	/^    OTHER_LETTER,$/;"	e	enum:__anon910316cb0103	file:
OTHER_NUMBER	generic/tclUniData.c	/^    OTHER_NUMBER,$/;"	e	enum:__anon910316cb0103	file:
OTHER_PUNCTUATION	generic/tclUniData.c	/^    OTHER_PUNCTUATION,$/;"	e	enum:__anon910316cb0103	file:
OTHER_SYMBOL	generic/tclUniData.c	/^    OTHER_SYMBOL$/;"	e	enum:__anon910316cb0103	file:
OT_EMPTY	generic/tclCompExpr.c	/^    OT_EMPTY = -1	\/* "Operand" is an empty string. This is a special$/;"	e	enum:OperandTypes	file:
OT_LITERAL	generic/tclCompExpr.c	/^    OT_LITERAL = -3,	\/* Operand is a literal in the literal list *\/$/;"	e	enum:OperandTypes	file:
OT_TOKENS	generic/tclCompExpr.c	/^    OT_TOKENS = -2,	\/* Operand is sequence of Tcl_Tokens *\/$/;"	e	enum:OperandTypes	file:
OUTPUT	compat/zlib/nintendods/Makefile	/^export OUTPUT	:=	$(CURDIR)\/lib\/libz.a$/;"	m
OUTPUT	generic/tclBinary.c	/^#define OUTPUT(/;"	d	file:
OUTPUTPROC	doc/CrtChannel.3	/^.SS OUTPUTPROC$/;"	S	section:Tcl_CreateChannel""TCL_CHANNELTYPE
OUTPUT_ISOLATEDSURROGATE	generic/tclEncoding.c	/^#define OUTPUT_ISOLATEDSURROGATE /;"	d	file:
OUT_HEADER	generic/tclZlib.c	/^    OUT_HEADER = 0x04,		\/* Set if the outputHeader field has been$/;"	e	enum:ZlibChannelDataFlags	file:
OUT_OF_MEMORY	generic/tclExecute.c	/^#define OUT_OF_MEMORY /;"	d	file:
OUT_OF_RANGE	generic/tclIOUtil.c	/^# define OUT_OF_RANGE(/;"	d	file:
OUT_OF_URANGE	generic/tclIOUtil.c	/^# define OUT_OF_URANGE(/;"	d	file:
OVERHEAD	generic/tclAlloc.c	/^#define OVERHEAD /;"	d	file:
O_ACCMODE	win/tclWinPort.h	/^#    define O_ACCMODE /;"	d
O_FINDEQUAL	generic/tclStrIdxTree.c	/^	O_FINDEQUAL, O_INDEX,  O_PUTS_INDEX$/;"	e	enum:TclStrIdxTreeTestObjCmd::optionInd	file:
O_INDEX	generic/tclStrIdxTree.c	/^	O_FINDEQUAL, O_INDEX,  O_PUTS_INDEX$/;"	e	enum:TclStrIdxTreeTestObjCmd::optionInd	file:
O_NONBLOCK	unix/tclUnixPort.h	/^#   define O_NONBLOCK /;"	d
O_PUTS_INDEX	generic/tclStrIdxTree.c	/^	O_FINDEQUAL, O_INDEX,  O_PUTS_INDEX$/;"	e	enum:TclStrIdxTreeTestObjCmd::optionInd	file:
ObjArrayCopy	generic/tclListObj.c	/^ObjArrayCopy($/;"	f	typeref:typename:void	file:
ObjArrayDecrRefs	generic/tclListObj.c	/^ObjArrayDecrRefs($/;"	f	typeref:typename:void	file:
ObjArrayIncrRefs	generic/tclListObj.c	/^ObjArrayIncrRefs($/;"	f	typeref:typename:void	file:
ObjClockFmtScn	generic/tclClockFmt.c	/^#define ObjClockFmtScn(/;"	d	file:
ObjData	generic/tclObj.c	/^} ObjData;$/;"	t	typeref:struct:__anon1f1c87400108	file:
ObjDeletePending	generic/tclObj.c	/^#define ObjDeletePending(/;"	d	file:
ObjDeletionLock	generic/tclObj.c	/^#define ObjDeletionLock(/;"	d	file:
ObjDeletionUnlock	generic/tclObj.c	/^#define ObjDeletionUnlock(/;"	d	file:
ObjFilter_Get	generic/tclOODefineCmds.c	/^ObjFilter_Get($/;"	f	typeref:typename:int	file:
ObjFilter_Set	generic/tclOODefineCmds.c	/^ObjFilter_Set($/;"	f	typeref:typename:int	file:
ObjFindNamespaceVar	generic/tclVar.c	/^ObjFindNamespaceVar($/;"	f	typeref:typename:Tcl_Var	file:
ObjInitDeletionContext	generic/tclObj.c	/^#define ObjInitDeletionContext(/;"	d	file:
ObjInterface	generic/tclInt.h	/^typedef struct ObjInterface {$/;"	s
ObjInterface	generic/tclInt.h	/^} ObjInterface;$/;"	t	typeref:struct:ObjInterface
ObjInterpProc2	generic/tclProc.c	/^ObjInterpProc2($/;"	f	typeref:typename:int	file:
ObjListSearch	generic/tclClockFmt.c	/^ObjListSearch($/;"	f	typeref:typename:int	file:
ObjLocFmtKey	generic/tclClockFmt.c	/^#define ObjLocFmtKey(/;"	d	file:
ObjMakeUpvar	generic/tclVar.c	/^ObjMakeUpvar($/;"	f	typeref:typename:int	file:
ObjMixin_Get	generic/tclOODefineCmds.c	/^ObjMixin_Get($/;"	f	typeref:typename:int	file:
ObjMixin_Set	generic/tclOODefineCmds.c	/^ObjMixin_Set($/;"	f	typeref:typename:int	file:
ObjOnStack	generic/tclObj.c	/^#define ObjOnStack(/;"	d	file:
ObjTraceDeleteProc	generic/tclTest.c	/^ObjTraceDeleteProc($/;"	f	typeref:typename:void	file:
ObjTraceProc	generic/tclTest.c	/^ObjTraceProc($/;"	f	typeref:typename:int	file:
ObjTraceProc	generic/tclTest.c	/^static Tcl_CmdObjTraceProc ObjTraceProc;$/;"	v	typeref:typename:Tcl_CmdObjTraceProc	file:
ObjValue	generic/tclLink.c	/^ObjValue($/;"	f	typeref:typename:Tcl_Obj *	file:
ObjVars_Get	generic/tclOODefineCmds.c	/^ObjVars_Get($/;"	f	typeref:typename:int	file:
ObjVars_Set	generic/tclOODefineCmds.c	/^ObjVars_Set($/;"	f	typeref:typename:int	file:
Object	generic/tclOOInt.h	/^#define Object	TclOOObject$/;"	d
Object	generic/tclOOInt.h	/^struct Object {$/;"	s
Object	generic/tclOOInt.h	/^typedef struct Object Object;$/;"	t	typeref:struct:Object
ObjectFlags	generic/tclOOInt.h	/^enum ObjectFlags {$/;"	g
ObjectList	generic/tclOOInt.h	/^typedef LIST_DYNAMIC(Object *) ObjectList;$/;"	t
ObjectNamespaceDeleted	generic/tclOO.c	/^ObjectNamespaceDeleted($/;"	f	typeref:typename:void	file:
ObjectRenamedTrace	generic/tclOO.c	/^ObjectRenamedTrace($/;"	f	typeref:typename:void	file:
ObjectRenamedTrace	generic/tclOO.c	/^static Tcl_CommandTraceProc	ObjectRenamedTrace;$/;"	v	typeref:typename:Tcl_CommandTraceProc	file:
ObjectType	generic/tclInt.h	/^typedef struct ObjectType {$/;"	s
ObjectType	generic/tclInt.h	/^} ObjectType;$/;"	t	typeref:struct:ObjectType
OemId	win/tclWinInit.c	/^} OemId;$/;"	t	typeref:struct:__anon2388ba180108	file:
Offset	compat/zlib/contrib/ada/read.adb	/^   Offset    : Stream_Element_Offset;$/;"	v	subprogram:Read	file:
Offset	compat/zlib/contrib/ada/zlib.ads	/^      Offset      : Stream_Element_Offset;$/;"	v	packspec:ZLib	file:
OnDataAvailable	compat/zlib/contrib/dotzlib/DotZLib/CodecBase.cs	/^        protected void OnDataAvailable()$/;"	m	class:DotZLib.CodecBase
OnOffWaitingList	macosx/tclMacOSXNotify.c	/^OnOffWaitingList($/;"	f	typeref:typename:int	file:
OpCmdInfo	generic/tclBasic.c	/^} OpCmdInfo;$/;"	t	typeref:struct:__anon6e1456070508	file:
OpNode	generic/tclCompExpr.c	/^} OpNode;$/;"	t	typeref:struct:__anon882f36730108	file:
OpenEncodingFileChannel	generic/tclEncoding.c	/^OpenEncodingFileChannel($/;"	f	typeref:typename:Tcl_Channel	file:
OpenFileChannel	win/tclWinChan.c	/^OpenFileChannel($/;"	f	typeref:typename:Tcl_Channel
OpenKey	win/tclWinReg.c	/^OpenKey($/;"	f	typeref:typename:int	file:
OpenKeysFlags	win/tclWinReg.c	/^enum OpenKeysFlags {$/;"	g	file:
OpenResourceMap	macosx/tclMacOSXBundle.c	/^OpenResourceMap($/;"	f	typeref:typename:short	file:
OpenSocket	library/http/http.tcl	/^proc http::OpenSocket {token DoLater} {$/;"	p	namespace:http
OpenSubKey	win/tclWinReg.c	/^OpenSubKey($/;"	f	typeref:typename:DWORD	file:
OperandTypes	generic/tclCompExpr.c	/^enum OperandTypes {$/;"	g	file:
OptAmbigous	library/opt/optparse.tcl	/^    proc OptAmbigous {desc arg} {$/;"	p	namespace:::::tcl
OptBadValue	library/opt/optparse.tcl	/^    proc OptBadValue {item arg {err {}}} {$/;"	p	namespace:::::tcl
OptCheckType	library/opt/optparse.tcl	/^proc ::tcl::OptCheckType {arg type {typeArgs ""}} {$/;"	p	namespace:::tcl
OptCreateTestProc	library/opt/optparse.tcl	/^    proc OptCreateTestProc {} {$/;"	p	namespace:::::tcl
OptCurAddr	library/opt/optparse.tcl	/^    proc OptCurAddr {descriptions {start {}}} {$/;"	p	namespace:::::tcl
OptCurDesc	library/opt/optparse.tcl	/^    proc OptCurDesc {descriptions} {$/;"	p	namespace:::::tcl
OptCurDescFinal	library/opt/optparse.tcl	/^    proc OptCurDescFinal {descriptions} {$/;"	p	namespace:::::tcl
OptCurSetValue	library/opt/optparse.tcl	/^    proc OptCurSetValue {descriptionsName value} {$/;"	p	namespace:::::tcl
OptCurState	library/opt/optparse.tcl	/^    proc OptCurState {descriptions} {$/;"	p	namespace:::::tcl
OptCurrentArg	library/opt/optparse.tcl	/^    proc OptCurrentArg {lst} {$/;"	p	namespace:::::tcl
OptDefaultValue	library/opt/optparse.tcl	/^    proc OptDefaultValue {item} {$/;"	p	namespace:::::tcl
OptDescriptor	generic/tclZlib.c	/^    } OptDescriptor;$/;"	t	function:ZlibStreamSubcmd	typeref:struct:ZlibStreamSubcmd::__anon1d0b6d960408	file:
OptDoAll	library/opt/optparse.tcl	/^    proc OptDoAll {descriptionsName argumentsName} {$/;"	p	namespace:::::tcl
OptDoOne	library/opt/optparse.tcl	/^    proc OptDoOne {descriptionsName stateName argumentsName} {$/;"	p	namespace:::::tcl
OptError	library/opt/optparse.tcl	/^proc ::tcl::OptError {prefix desc {header 0}} {$/;"	p	namespace:::tcl
OptFlagUsage	library/opt/optparse.tcl	/^    proc OptFlagUsage {desc arg} {$/;"	p	namespace:::::tcl
OptGetPrgCounter	library/opt/optparse.tcl	/^    proc OptGetPrgCounter {lst} {$/;"	p	namespace:::::tcl
OptGuessType	library/opt/optparse.tcl	/^    proc OptGuessType {arg} {$/;"	p	namespace:::::tcl
OptHasBeenSet	library/opt/optparse.tcl	/^    proc OptHasBeenSet {item} {$/;"	p	namespace:::::tcl
OptHelp	library/opt/optparse.tcl	/^    proc OptHelp {item} {$/;"	p	namespace:::::tcl
OptHits	library/opt/optparse.tcl	/^    proc OptHits {descName arg} {$/;"	p	namespace:::::tcl
OptInstr	library/opt/optparse.tcl	/^    proc OptInstr {lst} {$/;"	p	namespace:::::tcl
OptIsCounter	library/opt/optparse.tcl	/^    proc OptIsCounter {item} {$/;"	p	namespace:::::tcl
OptIsFlag	library/opt/optparse.tcl	/^    proc OptIsFlag {name} {$/;"	p	namespace:::::tcl
OptIsOpt	library/opt/optparse.tcl	/^    proc OptIsOpt {name} {$/;"	p	namespace:::::tcl
OptIsPrg	library/opt/optparse.tcl	/^    proc OptIsPrg {lst} {$/;"	p	namespace:::::tcl
OptKeyDelete	library/opt/optparse.tcl	/^proc ::tcl::OptKeyDelete {key} {$/;"	p	namespace:::tcl
OptKeyError	library/opt/optparse.tcl	/^proc ::tcl::OptKeyError {prefix descKey {header 0}} {$/;"	p	namespace:::tcl
OptKeyGetDesc	library/opt/optparse.tcl	/^    proc OptKeyGetDesc {descKey} {$/;"	p	namespace:::::tcl
OptKeyParse	library/opt/optparse.tcl	/^proc ::tcl::OptKeyParse {descKey arglist} {$/;"	p	namespace:::tcl
OptKeyRegister	library/opt/optparse.tcl	/^proc ::tcl::OptKeyRegister {desc {key ""}} {$/;"	p	namespace:::tcl
OptLengths	library/opt/optparse.tcl	/^    proc OptLengths {desc nlName tlName dlName} {$/;"	p	namespace:::::tcl
OptMissingValue	library/opt/optparse.tcl	/^    proc OptMissingValue {descriptions} {$/;"	p	namespace:::::tcl
OptName	library/opt/optparse.tcl	/^    proc OptName {item} {$/;"	p	namespace:::::tcl
OptNeedValue	library/opt/optparse.tcl	/^    proc OptNeedValue {item} {$/;"	p	namespace:::::tcl
OptNewInst	library/opt/optparse.tcl	/^    proc OptNewInst {state varname type typeArgs help} {$/;"	p	namespace:::::tcl
OptNextArg	library/opt/optparse.tcl	/^    proc OptNextArg {argsName} {$/;"	p	namespace:::::tcl
OptNextDesc	library/opt/optparse.tcl	/^    proc OptNextDesc {descName} {$/;"	p	namespace:::::tcl
OptNormalizeOne	library/opt/optparse.tcl	/^    proc OptNormalizeOne {item} {$/;"	p	namespace:::::tcl
OptOptUsage	library/opt/optparse.tcl	/^    proc OptOptUsage {item {what ""}} {$/;"	p	namespace:::::tcl
OptParamType	library/opt/optparse.tcl	/^    proc OptParamType {item} {$/;"	p	namespace:::::tcl
OptParse	library/opt/optparse.tcl	/^proc ::tcl::OptParse {desc arglist} {$/;"	p	namespace:::tcl
OptProc	library/opt/optparse.tcl	/^proc ::tcl::OptProc {name desc body} {$/;"	p	namespace:::tcl
OptProcArgGiven	library/opt/optparse.tcl	/^proc ::tcl::OptProcArgGiven {argname} {$/;"	p	namespace:::tcl
OptSelection	library/opt/optparse.tcl	/^    proc OptSelection {lst} {$/;"	p	namespace:::::tcl
OptSetPrgCounter	library/opt/optparse.tcl	/^    proc OptSetPrgCounter {lstName newValue} {$/;"	p	namespace:::::tcl
OptState	library/opt/optparse.tcl	/^    proc OptState {item} {$/;"	p	namespace:::::tcl
OptTooManyArgs	library/opt/optparse.tcl	/^    proc OptTooManyArgs {desc arguments} {$/;"	p	namespace:::::tcl
OptTree	library/opt/optparse.tcl	/^    proc OptTree {desc nl tl dl} {$/;"	p	namespace:::::tcl
OptTreeVars	library/opt/optparse.tcl	/^    proc OptTreeVars {desc level {vnamesLst {}}} {$/;"	p	namespace:::::tcl
OptType	library/opt/optparse.tcl	/^    proc OptType {item} {$/;"	p	namespace:::::tcl
OptTypeArgs	library/opt/optparse.tcl	/^    proc OptTypeArgs {item} {$/;"	p	namespace:::::tcl
OptValue	library/opt/optparse.tcl	/^    proc OptValue {item} {$/;"	p	namespace:::::tcl
OptVarName	library/opt/optparse.tcl	/^    proc OptVarName {item} {$/;"	p	namespace:::::tcl
Options	generic/tclInterp.c	/^    enum Options {$/;"	g	function:ChildCommandLimitCmd	file:
Options	generic/tclInterp.c	/^    enum Options {$/;"	g	function:ChildTimeLimitCmd	file:
Options	generic/tclOOInfo.c	/^    enum Options {$/;"	g	function:InfoClassMethodsCmd	file:
Options	generic/tclOOInfo.c	/^    enum Options {$/;"	g	function:InfoObjectMethodsCmd	file:
Options	generic/tclOOProp.c	/^    enum Options {$/;"	g	function:TclOODefinePropertyCmd	file:
OtherTable	generic/tclDate.c	/^static const TABLE OtherTable[] = {$/;"	v	typeref:typename:const TABLE[]	file:
OtherTable	generic/tclDateClassic.c	/^static const TABLE OtherTable[] = {$/;"	v	typeref:typename:const TABLE[]	file:
Out	win/nmakehlp.c	/^pipeinfo Out = {INVALID_HANDLE_VALUE, ""};$/;"	v	typeref:typename:pipeinfo
Out_Buffer	compat/zlib/contrib/ada/zlib.adb	/^      Out_Buffer : Stream_Element_Array$/;"	v	subprogram:Generic_Translate	file:
Out_File_Name	compat/zlib/contrib/ada/test.adb	/^   Out_File_Name : constant String := "testzlib.out";$/;"	n	subprogram:Test	file:
Out_First	compat/zlib/contrib/ada/zlib.adb	/^      Out_First : Stream_Element_Offset;$/;"	v	subprogram:Translate_GZip	file:
Out_Last	compat/zlib/contrib/ada/zlib.adb	/^      Out_Last   : Stream_Element_Offset;$/;"	v	subprogram:Generic_Translate	file:
Out_Last	compat/zlib/contrib/ada/zlib.adb	/^      Out_Last : Stream_Element_Offset;$/;"	v	subprogram:Write	file:
Out_Len	compat/zlib/contrib/ada/zlib.adb	/^         Out_Len    : Stream_Element_Offset; --  -1$/;"	v	subprogram:Add_Data	file:
Out_Stream	compat/zlib/contrib/ada/zlib-streams.ads	/^   type Stream_Mode is (In_Stream, Out_Stream, Duplex);$/;"	l	type:Stream_Mode	file:
Overflowing	generic/tclExecute.c	/^#define Overflowing(/;"	d	file:
P	compat/zlib/contrib/ada/buffer_demo.adb	/^         P : Stream_Element_Offset := Compressed_Data'First - 1;$/;"	v	identifier:Decompress	file:
PACKAGE_DIR	unix/Makefile.in	/^PACKAGE_DIR		= @PACKAGE_DIR@$/;"	m
PACKAGE_DIR	unix/configure.ac	/^AC_SUBST(PACKAGE_DIR)$/;"	s
PACKAGE_NAME_SUFFIX	libtommath/CMakeLists.txt	/^    set(PACKAGE_NAME_SUFFIX "")$/;"	v
PACKAGE_NAME_SUFFIX	libtommath/CMakeLists.txt	/^    set(PACKAGE_NAME_SUFFIX "-git")$/;"	v
PACKAGE_NAME_TRAILER	libtommath/CMakeLists.txt	/^set(PACKAGE_NAME_TRAILER ${CPACK_PACKAGE_VERSION}-${PACKAGE_RELEASE_VERSION}_${MACHINE_ARCH})$/;"	v
PACKAGE_RELEASE_VERSION	libtommath/CMakeLists.txt	/^set(PACKAGE_RELEASE_VERSION 1)$/;"	v
PACK_BIGNUM	generic/tclObj.c	/^#define PACK_BIGNUM(/;"	d	file:
PAD_AVAIL_IN	compat/zlib/contrib/inflate86/inffas86.c	/^#define PAD_AVAIL_IN /;"	d	file:
PAD_AVAIL_OUT	compat/zlib/contrib/inflate86/inffas86.c	/^#define PAD_AVAIL_OUT /;"	d	file:
PAGESIZE	generic/tclEncoding.c	/^#define PAGESIZE /;"	d	file:
PAIR	generic/regcomp.c	/^#define	PAIR(/;"	d	file:
PARAGRAPH_SEPARATOR	generic/tclUniData.c	/^    PARAGRAPH_SEPARATOR,$/;"	e	enum:__anon910316cb0103	file:
PAREXT	unix/tclUnixChan.c	/^#	define PAREXT /;"	d	file:
PARITY_CHARS	unix/tclUnixChan.c	/^#define PARITY_CHARS	/;"	d	file:
PARITY_MSG	unix/tclUnixChan.c	/^#define PARITY_MSG	/;"	d	file:
PARSEHDR	unix/Makefile.in	/^PARSEHDR	= $(GENERIC_DIR)\/tclParse.h$/;"	m
PATCH_LEVEL	unix/Makefile.in	/^PATCH_LEVEL		= @TCL_PATCH_LEVEL@$/;"	m
PATHFLAGS	generic/tclPathObj.c	/^#define PATHFLAGS(/;"	d	file:
PATHINFILESYSTEMPROC	doc/FileSystem.3	/^.SS PATHINFILESYSTEMPROC$/;"	S	section:Filesystem""FILESYSTEM INFRASTRUCTURE
PATHOBJ	generic/tclPathObj.c	/^#define PATHOBJ(/;"	d	file:
PATH_DIR	generic/tclFileName.c	/^    enum pathDirOptions {PATH_NONE = -1, PATH_GENERAL = 0, PATH_DIR = 1};$/;"	e	enum:Tcl_GlobObjCmd::pathDirOptions	file:
PATH_GENERAL	generic/tclFileName.c	/^    enum pathDirOptions {PATH_NONE = -1, PATH_GENERAL = 0, PATH_DIR = 1};$/;"	e	enum:Tcl_GlobObjCmd::pathDirOptions	file:
PATH_NONE	generic/tclFileName.c	/^    enum pathDirOptions {PATH_NONE = -1, PATH_GENERAL = 0, PATH_DIR = 1};$/;"	e	enum:Tcl_GlobObjCmd::pathDirOptions	file:
PATIENCE	compat/zlib/examples/gzlog.c	/^#define PATIENCE /;"	d	file:
PATTERN_LEN	generic/tclTestObj.c	/^#define PATTERN_LEN /;"	d	file:
PCondTimedWait	unix/tclUnixThrd.c	/^#define PCondTimedWait	/;"	d	file:
PCondTimedWait	unix/tclUnixThrd.c	/^PCondTimedWait($/;"	f	typeref:typename:void	file:
PCondWait	unix/tclUnixThrd.c	/^#define PCondWait	/;"	d	file:
PCondWait	unix/tclUnixThrd.c	/^PCondWait($/;"	f	typeref:typename:void	file:
PDWORD_PTR	win/tclWinPort.h	/^typedef DWORD_PTR * PDWORD_PTR;$/;"	t	typeref:typename:DWORD_PTR *
PENDING_INPUT	generic/tclIOCmd.c	/^    enum pendingOptionsEnum {PENDING_INPUT, PENDING_OUTPUT} index;$/;"	e	enum:ChanPendingObjCmd::pendingOptionsEnum	file:
PENDING_OUTPUT	generic/tclIOCmd.c	/^    enum pendingOptionsEnum {PENDING_INPUT, PENDING_OUTPUT} index;$/;"	e	enum:ChanPendingObjCmd::pendingOptionsEnum	file:
PIC_OBJA	compat/zlib/Makefile.in	/^PIC_OBJA =$/;"	m
PIC_OBJC	compat/zlib/Makefile.in	/^PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)$/;"	m
PIC_OBJG	compat/zlib/Makefile.in	/^PIC_OBJG = compress.lo uncompr.lo gzclose.lo gzlib.lo gzread.lo gzwrite.lo$/;"	m
PIC_OBJS	compat/zlib/Makefile.in	/^PIC_OBJS = $(PIC_OBJC) $(PIC_OBJA)$/;"	m
PIC_OBJZ	compat/zlib/Makefile.in	/^PIC_OBJZ = adler32.lo crc32.lo deflate.lo infback.lo inffast.lo inflate.lo inftrees.lo trees.lo /;"	m
PIECE	compat/zlib/examples/gun.c	/^#define PIECE /;"	d	file:
PIPELINE	tests/httpTestScript.tcl	/^proc httpTestScript::PIPELINE {b} {$/;"	p	namespace:httpTestScript
PIPE_ASYNC	win/tclWinPipe.c	/^#define PIPE_ASYNC	/;"	d	file:
PIPE_EOF	win/tclWinPipe.c	/^#define PIPE_EOF	/;"	d	file:
PIPE_EXTRABYTE	win/tclWinPipe.c	/^#define PIPE_EXTRABYTE	/;"	d	file:
PIPE_PENDING	win/tclWinPipe.c	/^#define PIPE_PENDING	/;"	d	file:
PKGS_DIR	unix/Makefile.in	/^PKGS_DIR		= $(TOP_DIR)\/pkgs$/;"	m
PKGS_DIR	win/Makefile.in	/^PKGS_DIR		= $(TOP_DIR)\/pkgs$/;"	m
PKG_CFG_ARGS	unix/Makefile.in	/^PKG_CFG_ARGS		= @PKG_CFG_ARGS@$/;"	m
PKG_CFG_ARGS	unix/configure.ac	/^AC_SUBST(PKG_CFG_ARGS)$/;"	s
PKG_CFG_ARGS	win/Makefile.in	/^PKG_CFG_ARGS		= @PKG_CFG_ARGS@$/;"	m
PKG_CFG_ARGS	win/configure.ac	/^AC_SUBST(PKG_CFG_ARGS)$/;"	s
PKG_DIR	unix/Makefile.in	/^PKG_DIR			= .\/pkgs$/;"	m
PKG_DIR	win/Makefile.in	/^PKG_DIR			= .\/pkgs$/;"	m
PKG_FILES	generic/tclPkg.c	/^	PKG_FILES,  PKG_FORGET,  PKG_IFNEEDED, PKG_NAMES,   PKG_PREFER,$/;"	e	enum:TclNRPackageObjCmd::pkgOptionsEnum	file:
PKG_FORGET	generic/tclPkg.c	/^	PKG_FILES,  PKG_FORGET,  PKG_IFNEEDED, PKG_NAMES,   PKG_PREFER,$/;"	e	enum:TclNRPackageObjCmd::pkgOptionsEnum	file:
PKG_IFNEEDED	generic/tclPkg.c	/^	PKG_FILES,  PKG_FORGET,  PKG_IFNEEDED, PKG_NAMES,   PKG_PREFER,$/;"	e	enum:TclNRPackageObjCmd::pkgOptionsEnum	file:
PKG_NAMES	generic/tclPkg.c	/^	PKG_FILES,  PKG_FORGET,  PKG_IFNEEDED, PKG_NAMES,   PKG_PREFER,$/;"	e	enum:TclNRPackageObjCmd::pkgOptionsEnum	file:
PKG_PREFER	generic/tclPkg.c	/^	PKG_FILES,  PKG_FORGET,  PKG_IFNEEDED, PKG_NAMES,   PKG_PREFER,$/;"	e	enum:TclNRPackageObjCmd::pkgOptionsEnum	file:
PKG_PREFER_LATEST	generic/tclInt.h	/^    PKG_PREFER_LATEST, PKG_PREFER_STABLE$/;"	e	enum:PkgPreferOptions
PKG_PREFER_STABLE	generic/tclInt.h	/^    PKG_PREFER_LATEST, PKG_PREFER_STABLE$/;"	e	enum:PkgPreferOptions
PKG_PRESENT	generic/tclPkg.c	/^	PKG_PRESENT, PKG_PROVIDE, PKG_REQUIRE,  PKG_UNKNOWN, PKG_VCOMPARE,$/;"	e	enum:TclNRPackageObjCmd::pkgOptionsEnum	file:
PKG_PROVIDE	generic/tclPkg.c	/^	PKG_PRESENT, PKG_PROVIDE, PKG_REQUIRE,  PKG_UNKNOWN, PKG_VCOMPARE,$/;"	e	enum:TclNRPackageObjCmd::pkgOptionsEnum	file:
PKG_REQUIRE	generic/tclPkg.c	/^	PKG_PRESENT, PKG_PROVIDE, PKG_REQUIRE,  PKG_UNKNOWN, PKG_VCOMPARE,$/;"	e	enum:TclNRPackageObjCmd::pkgOptionsEnum	file:
PKG_UNKNOWN	generic/tclPkg.c	/^	PKG_PRESENT, PKG_PROVIDE, PKG_REQUIRE,  PKG_UNKNOWN, PKG_VCOMPARE,$/;"	e	enum:TclNRPackageObjCmd::pkgOptionsEnum	file:
PKG_VCOMPARE	generic/tclPkg.c	/^	PKG_PRESENT, PKG_PROVIDE, PKG_REQUIRE,  PKG_UNKNOWN, PKG_VCOMPARE,$/;"	e	enum:TclNRPackageObjCmd::pkgOptionsEnum	file:
PKG_VERSIONS	generic/tclPkg.c	/^	PKG_VERSIONS, PKG_VSATISFIES$/;"	e	enum:TclNRPackageObjCmd::pkgOptionsEnum	file:
PKG_VSATISFIES	generic/tclPkg.c	/^	PKG_VERSIONS, PKG_VSATISFIES$/;"	e	enum:TclNRPackageObjCmd::pkgOptionsEnum	file:
PLAIN	generic/regcomp.c	/^#define	PLAIN	/;"	d	file:
PLATFORM ISSUES	doc/OpenFileChnl.3	/^.SH "PLATFORM ISSUES"$/;"	s	title:Tcl_OpenFileChannel
PLATFORM ISSUES	doc/OpenTcp.3	/^.SH "PLATFORM ISSUES"$/;"	s	title:Tcl_OpenTcpClient
PLAT_OBJS	unix/tcl.m4	/^    AC_SUBST(PLAT_OBJS)$/;"	s
PLAT_SRCS	unix/tcl.m4	/^    AC_SUBST(PLAT_SRCS)$/;"	s
PLUS	generic/tclCompExpr.c	/^#define PLUS		1	\/* Ambiguous. Resolves to UNARY_PLUS /;"	d	file:
PMFrameData	generic/tclOOMethod.c	/^typedef struct PMFrameData {$/;"	s	file:
PMFrameData	generic/tclOOMethod.c	/^} PMFrameData;$/;"	t	typeref:struct:PMFrameData	file:
PMutex	unix/tclUnixThrd.c	/^typedef pthread_mutex_t PMutex;$/;"	t	typeref:typename:pthread_mutex_t	file:
PMutex	unix/tclUnixThrd.c	/^typedef struct PMutex {$/;"	s	file:
PMutex	unix/tclUnixThrd.c	/^} PMutex;$/;"	t	typeref:struct:PMutex	file:
PMutexDestroy	unix/tclUnixThrd.c	/^#define PMutexDestroy	/;"	d	file:
PMutexDestroy	unix/tclUnixThrd.c	/^PMutexDestroy($/;"	f	typeref:typename:void	file:
PMutexInit	unix/tclUnixThrd.c	/^PMutexInit($/;"	f	typeref:typename:void	file:
PMutexLock	unix/tclUnixThrd.c	/^#define PMutexLock	/;"	d	file:
PMutexLock	unix/tclUnixThrd.c	/^PMutexLock($/;"	f	typeref:typename:void	file:
PMutexUnlock	unix/tclUnixThrd.c	/^#define PMutexUnlock	/;"	d	file:
PMutexUnlock	unix/tclUnixThrd.c	/^PMutexUnlock($/;"	f	typeref:typename:void	file:
POLL_DONE	unix/tclSelectNotfy.c	/^#define POLL_DONE	/;"	d	file:
POLL_WANT	unix/tclSelectNotfy.c	/^#define POLL_WANT	/;"	d	file:
POLY	compat/zlib/crc32.c	/^#define POLY /;"	d	file:
POP_OBJECT	generic/tclExecute.c	/^#define POP_OBJECT(/;"	d	file:
POP_TAUX_OBJ	generic/tclExecute.c	/^#define POP_TAUX_OBJ(/;"	d	file:
PORTABILITY NOTES	doc/TclZlib.3	/^.SH "PORTABILITY NOTES"$/;"	s	title:TclZlib
PORTABLE STAT RESULT API	doc/FileSystem.3	/^.SS "PORTABLE STAT RESULT API"$/;"	S	section:Filesystem""DESCRIPTION
POSIX_EPOCH_AS_FILETIME	win/tclWinChan.c	/^#define POSIX_EPOCH_AS_FILETIME	/;"	d	file:
POSIX_EPOCH_AS_FILETIME	win/tclWinFile.c	/^#define POSIX_EPOCH_AS_FILETIME	/;"	d	file:
POST	tests/httpTestScript.tcl	/^proc httpTestScript::POST {uriCode args} {$/;"	p	namespace:httpTestScript
POSTFRESH	tests/httpTestScript.tcl	/^proc httpTestScript::POSTFRESH {b} {$/;"	p	namespace:httpTestScript
POSTSTATE	generic/regexec.c	/^#define	POSTSTATE	/;"	d	file:
POST_MAKE_LIB	win/configure.ac	/^AC_SUBST(POST_MAKE_LIB)$/;"	s
PREC_ADD	generic/tclCompExpr.c	/^    PREC_ADD,		\/* "+", "-" *\/$/;"	e	enum:Precedence	file:
PREC_AND	generic/tclCompExpr.c	/^    PREC_AND,		\/* "&&" *\/$/;"	e	enum:Precedence	file:
PREC_BIT_AND	generic/tclCompExpr.c	/^    PREC_BIT_AND,	\/* "&" *\/$/;"	e	enum:Precedence	file:
PREC_BIT_OR	generic/tclCompExpr.c	/^    PREC_BIT_OR,	\/* "|" *\/$/;"	e	enum:Precedence	file:
PREC_BIT_XOR	generic/tclCompExpr.c	/^    PREC_BIT_XOR,	\/* "^" *\/$/;"	e	enum:Precedence	file:
PREC_CLOSE_PAREN	generic/tclCompExpr.c	/^    PREC_CLOSE_PAREN,	\/* ")" *\/$/;"	e	enum:Precedence	file:
PREC_COMMA	generic/tclCompExpr.c	/^    PREC_COMMA,		\/* "," *\/$/;"	e	enum:Precedence	file:
PREC_COMPARE	generic/tclCompExpr.c	/^    PREC_COMPARE,	\/* "<", ">", "<=", ">=" *\/$/;"	e	enum:Precedence	file:
PREC_CONDITIONAL	generic/tclCompExpr.c	/^    PREC_CONDITIONAL,	\/* "?", ":" *\/$/;"	e	enum:Precedence	file:
PREC_END	generic/tclCompExpr.c	/^    PREC_END = 1,	\/* END *\/$/;"	e	enum:Precedence	file:
PREC_EQUAL	generic/tclCompExpr.c	/^    PREC_EQUAL,		\/* "==", "!=", "eq", "ne", "in", "ni" *\/$/;"	e	enum:Precedence	file:
PREC_EXPON	generic/tclCompExpr.c	/^    PREC_EXPON,		\/* "**" *\/$/;"	e	enum:Precedence	file:
PREC_MULT	generic/tclCompExpr.c	/^    PREC_MULT,		\/* "*", "\/", "%" *\/$/;"	e	enum:Precedence	file:
PREC_OPEN_PAREN	generic/tclCompExpr.c	/^    PREC_OPEN_PAREN,	\/* "(" *\/$/;"	e	enum:Precedence	file:
PREC_OR	generic/tclCompExpr.c	/^    PREC_OR,		\/* "||" *\/$/;"	e	enum:Precedence	file:
PREC_SHIFT	generic/tclCompExpr.c	/^    PREC_SHIFT,		\/* "<<", ">>" *\/$/;"	e	enum:Precedence	file:
PREC_START	generic/tclCompExpr.c	/^    PREC_START,		\/* START *\/$/;"	e	enum:Precedence	file:
PREC_UNARY	generic/tclCompExpr.c	/^    PREC_UNARY		\/* "+", "-", FUNCTION, "!", "~" *\/$/;"	e	enum:Precedence	file:
PREF	generic/regguts.h	/^#define	PREF(/;"	d
PREF2	generic/regguts.h	/^#define	PREF2(/;"	d
PREFER	generic/regcomp.c	/^#define	PREFER	/;"	d	file:
PREFIX	macosx/GNUmakefile	/^PREFIX			?= \/usr\/local$/;"	m
PRESET_DICT	compat/zlib/zutil.h	/^#define PRESET_DICT /;"	d
PRFMATCH_ERROR	generic/tclIndexObj.c	/^	PRFMATCH_ERROR, PRFMATCH_EXACT, PRFMATCH_MESSAGE$/;"	e	enum:PrefixMatchObjCmd::matchOptionsEnum	file:
PRFMATCH_EXACT	generic/tclIndexObj.c	/^	PRFMATCH_ERROR, PRFMATCH_EXACT, PRFMATCH_MESSAGE$/;"	e	enum:PrefixMatchObjCmd::matchOptionsEnum	file:
PRFMATCH_MESSAGE	generic/tclIndexObj.c	/^	PRFMATCH_ERROR, PRFMATCH_EXACT, PRFMATCH_MESSAGE$/;"	e	enum:PrefixMatchObjCmd::matchOptionsEnum	file:
PRIME_SIZE	libtommath/tommath.h	/^#define PRIME_SIZE (MP_DEPRECATED_PRAGMA("PRIME_SIZE /;"	d
PRIVATE_FRAME	generic/tclOODefineCmds.c	/^#define PRIVATE_FRAME /;"	d	file:
PRIVATE_INCLUDE_DIR	unix/Makefile.in	/^PRIVATE_INCLUDE_DIR	= @PRIVATE_INCLUDE_DIR@$/;"	m
PRIVATE_INCLUDE_DIR	unix/configure.ac	/^AC_SUBST(PRIVATE_INCLUDE_DIR)$/;"	s
PRIVATE_INCLUDE_INSTALL_DIR	unix/Makefile.in	/^PRIVATE_INCLUDE_INSTALL_DIR = $(INSTALL_ROOT)$(PRIVATE_INCLUDE_DIR)$/;"	m
PRIVATE_INCLUDE_INSTALL_DIR	win/Makefile.in	/^PRIVATE_INCLUDE_INSTALL_DIR = $(INSTALL_ROOT)$(includedir)$/;"	m
PRIVATE_METHOD	generic/tclOOInt.h	/^    PRIVATE_METHOD = 0x02,	\/* This is a private (class's direct instances$/;"	e	enum:TclOOCallChainFlags
PRIVATE_MP_DEPRECATED_PRAGMA	libtommath/tommath.h	/^#  define PRIVATE_MP_DEPRECATED_PRAGMA(/;"	d
PRIVATE_MP_PREC	libtommath/tommath.h	/^#      define PRIVATE_MP_PREC /;"	d
PRIVATE_MP_PRIME_TAB_SIZE	libtommath/tommath.h	/^#  define PRIVATE_MP_PRIME_TAB_SIZE /;"	d
PRIVATE_MP_WARRAY	libtommath/tommath.h	/^#define PRIVATE_MP_WARRAY /;"	d
PRIVATE_USE	generic/tclUniData.c	/^    PRIVATE_USE,$/;"	e	enum:__anon910316cb0103	file:
PRIVATE_VARIABLE_PATTERN	generic/tclOODefineCmds.c	/^#define PRIVATE_VARIABLE_PATTERN /;"	d	file:
PRIbig	compat/zlib/examples/enough.c	/^#define PRIbig /;"	d	file:
PRIx64	generic/tclStrToD.c	/^#   define PRIx64 /;"	d	file:
PROCNAME	generic/tclStubCall.c	/^static const char PROCNAME[][24] = {$/;"	v	typeref:typename:const char[][24]	file:
PRODUCT_NAME	macosx/GNUmakefile	/^PRODUCT_NAME		:= Tcl$/;"	m
PROFILE	generic/tclCmdAH.c	/^    enum convertfromOptions { PROFILE, FAILINDEX } optIndex;$/;"	e	enum:EncodingConvertParseOptions::convertfromOptions	file:
PROFILES	doc/Encoding.3	/^.SH "PROFILES"$/;"	s	title:Tcl_GetEncoding
PROFILE_REPLACE	generic/tclEncoding.c	/^#define PROFILE_REPLACE(/;"	d	file:
PROFILE_STRICT	generic/tclEncoding.c	/^#define PROFILE_STRICT(/;"	d	file:
PROFILE_TCL8	generic/tclEncoding.c	/^#define PROFILE_TCL8(/;"	d	file:
PROJECT	macosx/GNUmakefile	/^PROJECT			:= tcl$/;"	m
PROJECT_CONFIG_FILE	libtommath/CMakeLists.txt	/^set(PROJECT_CONFIG_FILE "${PROJECT_NAME}-config.cmake")$/;"	v
PROJECT_VERSION_FILE	libtommath/CMakeLists.txt	/^set(PROJECT_VERSION_FILE "${CMAKE_CURRENT_BINARY_DIR}\/${PROJECT_NAME}-config-version.cmake")$/;"	v
PROMPTS	doc/tclsh.1	/^.SH PROMPTS$/;"	s	title:tclsh
PROMPT_CONTINUE	generic/tclMain.c	/^    PROMPT_CONTINUE		\/* Print prompt for command continuation *\/$/;"	e	enum:__anonfdf182ea0203	file:
PROMPT_NONE	generic/tclMain.c	/^    PROMPT_NONE,		\/* Print no prompt *\/$/;"	e	enum:__anonfdf182ea0203	file:
PROMPT_START	generic/tclMain.c	/^    PROMPT_START,		\/* Print prompt for command start *\/$/;"	e	enum:__anonfdf182ea0203	file:
PROP_ALL	generic/tclOOProp.c	/^    PROP_ALL, PROP_READABLE, PROP_WRITABLE$/;"	e	enum:PropOpt	file:
PROP_READABLE	generic/tclOOProp.c	/^    PROP_ALL, PROP_READABLE, PROP_WRITABLE$/;"	e	enum:PropOpt	file:
PROP_WRITABLE	generic/tclOOProp.c	/^    PROP_ALL, PROP_READABLE, PROP_WRITABLE$/;"	e	enum:PropOpt	file:
PSEUDO	generic/regguts.h	/^#define	PSEUDO	/;"	d
PTI_STATE_DOWN	win/tclWinInt.h	/^#define PTI_STATE_DOWN /;"	d
PTI_STATE_END	win/tclWinInt.h	/^#define PTI_STATE_END	/;"	d
PTI_STATE_IDLE	win/tclWinInt.h	/^#define PTI_STATE_IDLE	/;"	d
PTI_STATE_STOP	win/tclWinInt.h	/^#define PTI_STATE_STOP	/;"	d
PTI_STATE_WORK	win/tclWinInt.h	/^#define PTI_STATE_WORK	/;"	d
PTR2INT	generic/tclInt.h	/^#   define PTR2INT(/;"	d
PTR2UINT	generic/tclInt.h	/^#   define PTR2UINT(/;"	d
PUBLIC API CALLS	doc/FileSystem.3	/^.SS "PUBLIC API CALLS"$/;"	S	section:Filesystem""REFERENCE COUNT MANAGEMENT
PUBLIC_HEADERS	libtommath/CMakeLists.txt	/^set(PUBLIC_HEADERS tommath.h)$/;"	v
PUBLIC_METHOD	generic/tclOOInt.h	/^    PUBLIC_METHOD = 0x01,	\/* This is a public (exported) method. *\/$/;"	e	enum:TclOOCallChainFlags
PUBLIC_PATTERN	generic/tclOODefineCmds.c	/^#define PUBLIC_PATTERN	/;"	d	file:
PULL	compat/zlib/contrib/infback9/infback9.c	/^#define PULL(/;"	d	file:
PULL	compat/zlib/infback.c	/^#define PULL(/;"	d	file:
PULL2	compat/zlib/examples/gzlog.c	/^#define PULL2(/;"	d	file:
PULL4	compat/zlib/examples/gzlog.c	/^#define PULL4(/;"	d	file:
PULL8	compat/zlib/examples/gzlog.c	/^#define PULL8(/;"	d	file:
PULLBYTE	compat/zlib/contrib/infback9/infback9.c	/^#define PULLBYTE(/;"	d	file:
PULLBYTE	compat/zlib/infback.c	/^#define PULLBYTE(/;"	d	file:
PULLBYTE	compat/zlib/inflate.c	/^#define PULLBYTE(/;"	d	file:
PUNCT_BITS	generic/tclUtf.c	/^#define PUNCT_BITS /;"	d	file:
PUNCT_CONN	generic/regc_lex.c	/^#define PUNCT_CONN /;"	d	file:
PUSH	generic/tclCompCmdsSZ.c	/^#define PUSH(/;"	d	file:
PUSH_OBJECT	generic/tclExecute.c	/^#define PUSH_OBJECT(/;"	d	file:
PUSH_TAUX_OBJ	generic/tclExecute.c	/^#define PUSH_TAUX_OBJ(/;"	d	file:
PUT2	compat/zlib/examples/gzlog.c	/^#define PUT2(/;"	d	file:
PUT4	compat/zlib/examples/gzlog.c	/^#define PUT4(/;"	d	file:
PUT8	compat/zlib/examples/gzlog.c	/^#define PUT8(/;"	d	file:
P_NO_PRESERVE	generic/tclIOGT.c	/^#define P_NO_PRESERVE	/;"	d	file:
P_PRESERVE	generic/tclIOGT.c	/^#define P_PRESERVE	/;"	d	file:
Pack_Size	compat/zlib/contrib/ada/read.adb	/^   Pack_Size : Stream_Element_Offset;$/;"	v	subprogram:Read	file:
Package	generic/tclPkg.c	/^} Package;$/;"	t	typeref:struct:__anon1f3382670108	file:
PackageLocales	library/msgcat/msgcat.tcl	/^proc msgcat::PackageLocales {ns} {$/;"	p	namespace:msgcat
PackageNamespaceGet	library/msgcat/msgcat.tcl	/^proc ::msgcat::PackageNamespaceGet {} {$/;"	p	namespace:::msgcat
PackagePreferences	library/msgcat/msgcat.tcl	/^proc msgcat::PackagePreferences {ns} {$/;"	p	namespace:msgcat
PadBuffer	unix/tclUnixCompat.c	/^#define PadBuffer(/;"	d	file:
Parent	generic/tclInterp.c	/^} Parent;$/;"	t	typeref:struct:__anon913711770308	file:
ParseAllWhiteSpace	generic/tclParse.c	/^ParseAllWhiteSpace($/;"	f	typeref:typename:Tcl_Size	file:
ParseBoolean	generic/tclObj.c	/^ParseBoolean($/;"	f	typeref:typename:int	file:
ParseClockFormatFormat	library/clockclassic.tcl	/^proc ParseClockFormatFormat {procName format locale} {$/;"	p
ParseClockFormatFormat2	library/clockclassic.tcl	/^proc ParseClockFormatFormat2 {format locale procName} {$/;"	p
ParseClockScanFormat	library/clockclassic.tcl	/^proc ParseClockScanFormat {formatString locale} {$/;"	p
ParseComment	generic/tclParse.c	/^ParseComment($/;"	f	typeref:typename:Tcl_Size	file:
ParseExpr	generic/tclCompExpr.c	/^ParseExpr($/;"	f	typeref:typename:int	file:
ParseHex	generic/tclParse.c	/^ParseHex($/;"	f	typeref:typename:int
ParseKeyName	win/tclWinReg.c	/^ParseKeyName($/;"	f	typeref:typename:int	file:
ParseLexeme	generic/tclCompExpr.c	/^ParseLexeme($/;"	f	typeref:typename:Tcl_Size	file:
ParseMedia	generic/tclTest.c	/^ParseMedia($/;"	f	typeref:typename:Tcl_Size	file:
ParsePosixTimeZone	library/clock.tcl	/^proc ::tcl::clock::ParsePosixTimeZone { tz } {$/;"	p	namespace:::tcl::clock
ParsePosixTimeZone	library/clockclassic.tcl	/^proc ParsePosixTimeZone { tz } {$/;"	p
ParseSearchId	generic/tclVar.c	/^ParseSearchId($/;"	f	typeref:typename:ArraySearch *	file:
ParseStarDate	library/clockclassic.tcl	/^proc ParseStarDate { year fractYear fractDay } {$/;"	p
ParseTokens	generic/tclParse.c	/^ParseTokens($/;"	f	typeref:typename:int	file:
ParseTypeFlags	generic/tclParse.h	/^enum ParseTypeFlags {$/;"	g
ParseWhiteSpace	generic/tclParse.c	/^ParseWhiteSpace($/;"	f	typeref:typename:Tcl_Size	file:
ParsedGetInternalRep	generic/tclVar.c	/^#define ParsedGetInternalRep(/;"	d	file:
ParsedSetInternalRep	generic/tclVar.c	/^#define ParsedSetInternalRep(/;"	d	file:
Partial	compat/zlib/contrib/dotzlib/DotZLib/DotZLib.cs	/^        None,  Partial,  Sync,  Full,  Finish,  Block$/;"	e	enum:DotZLib.FlushTypes	file:
Partial_Flush	compat/zlib/contrib/ada/zlib.ads	/^   Partial_Flush : constant Flush_Mode := 1;$/;"	n	packspec:ZLib	file:
Partial_Flush	compat/zlib/contrib/ada/zlib.ads	/^   Partial_Flush : constant Flush_Mode;$/;"	n	packspec:ZLib
PassReceivedError	generic/tclIORChan.c	/^#define PassReceivedError(/;"	d	file:
PassReceivedError	generic/tclIORTrans.c	/^#define PassReceivedError(/;"	d	file:
PassReceivedErrorInterp	generic/tclIORChan.c	/^#define PassReceivedErrorInterp(/;"	d	file:
PassReceivedErrorInterp	generic/tclIORTrans.c	/^#define PassReceivedErrorInterp(/;"	d	file:
PathBuffer	win/tclWinFile.c	/^	    WCHAR PathBuffer[1];$/;"	m	struct:_REPARSE_DATA_BUFFER::__anon1c302b04010a::__anon1c302b040208	typeref:typename:WCHAR[1]	file:
PathBuffer	win/tclWinFile.c	/^	    WCHAR PathBuffer[1];$/;"	m	struct:_REPARSE_DATA_BUFFER::__anon1c302b04010a::__anon1c302b040308	typeref:typename:WCHAR[1]	file:
PathDirNameCmd	generic/tclCmdAH.c	/^PathDirNameCmd($/;"	f	typeref:typename:int	file:
PathDirNameCmd	generic/tclCmdAH.c	/^static Tcl_ObjCmdProc PathDirNameCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
PathExtensionCmd	generic/tclCmdAH.c	/^PathExtensionCmd($/;"	f	typeref:typename:int	file:
PathExtensionCmd	generic/tclCmdAH.c	/^static Tcl_ObjCmdProc PathExtensionCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
PathFilesystemCmd	generic/tclCmdAH.c	/^PathFilesystemCmd($/;"	f	typeref:typename:int	file:
PathFilesystemCmd	generic/tclCmdAH.c	/^static Tcl_ObjCmdProc PathFilesystemCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
PathJoinCmd	generic/tclCmdAH.c	/^PathJoinCmd($/;"	f	typeref:typename:int	file:
PathJoinCmd	generic/tclCmdAH.c	/^static Tcl_ObjCmdProc PathJoinCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
PathNativeNameCmd	generic/tclCmdAH.c	/^PathNativeNameCmd($/;"	f	typeref:typename:int	file:
PathNativeNameCmd	generic/tclCmdAH.c	/^static Tcl_ObjCmdProc PathNativeNameCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
PathNormalizeCmd	generic/tclCmdAH.c	/^PathNormalizeCmd($/;"	f	typeref:typename:int	file:
PathNormalizeCmd	generic/tclCmdAH.c	/^static Tcl_ObjCmdProc PathNormalizeCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
PathRootNameCmd	generic/tclCmdAH.c	/^PathRootNameCmd($/;"	f	typeref:typename:int	file:
PathRootNameCmd	generic/tclCmdAH.c	/^static Tcl_ObjCmdProc PathRootNameCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
PathSplitCmd	generic/tclCmdAH.c	/^PathSplitCmd($/;"	f	typeref:typename:int	file:
PathSplitCmd	generic/tclCmdAH.c	/^static Tcl_ObjCmdProc PathSplitCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
PathTailCmd	generic/tclCmdAH.c	/^PathTailCmd($/;"	f	typeref:typename:int	file:
PathTailCmd	generic/tclCmdAH.c	/^static Tcl_ObjCmdProc PathTailCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
PathToken	library/safe.tcl	/^proc ::safe::PathToken {n} {$/;"	p	namespace:::safe
PathTypeCmd	generic/tclCmdAH.c	/^PathTypeCmd($/;"	f	typeref:typename:int	file:
PathTypeCmd	generic/tclCmdAH.c	/^static Tcl_ObjCmdProc PathTypeCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
PeekAhead	generic/tclIO.c	/^PeekAhead($/;"	f	typeref:typename:void	file:
PendingObjData	generic/tclObj.c	/^typedef struct PendingObjData {$/;"	s	file:
PendingObjData	generic/tclObj.c	/^} PendingObjData;$/;"	t	typeref:struct:PendingObjData	file:
Percent	generic/tclExecute.c	/^#define Percent(/;"	d	file:
Period	compat/zlib/contrib/ada/read.adb	/^   Period  : constant Stream_Element_Offset := 200;$/;"	n	subprogram:Read	file:
Pipe	unix/tclUnixTest.c	/^} Pipe;$/;"	t	typeref:struct:__anon095e08b00108	file:
PipeBlockModeProc	unix/tclUnixPipe.c	/^PipeBlockModeProc($/;"	f	typeref:typename:int	file:
PipeBlockModeProc	win/tclWinPipe.c	/^PipeBlockModeProc($/;"	f	typeref:typename:int	file:
PipeCheckProc	win/tclWinPipe.c	/^PipeCheckProc($/;"	f	typeref:typename:void	file:
PipeClose2Proc	unix/tclUnixPipe.c	/^PipeClose2Proc($/;"	f	typeref:typename:int	file:
PipeClose2Proc	win/tclWinPipe.c	/^PipeClose2Proc($/;"	f	typeref:typename:int	file:
PipeEvent	win/tclWinPipe.c	/^} PipeEvent;$/;"	t	typeref:struct:__anon3385f2d20308	file:
PipeEventProc	win/tclWinPipe.c	/^PipeEventProc($/;"	f	typeref:typename:int	file:
PipeGetHandleProc	unix/tclUnixPipe.c	/^PipeGetHandleProc($/;"	f	typeref:typename:int	file:
PipeGetHandleProc	win/tclWinPipe.c	/^PipeGetHandleProc($/;"	f	typeref:typename:int	file:
PipeInfo	win/tclWinPipe.c	/^typedef struct PipeInfo {$/;"	s	file:
PipeInfo	win/tclWinPipe.c	/^} PipeInfo;$/;"	t	typeref:struct:PipeInfo	file:
PipeInit	win/tclWinPipe.c	/^PipeInit(void)$/;"	f	typeref:typename:void	file:
PipeInputProc	unix/tclUnixPipe.c	/^PipeInputProc($/;"	f	typeref:typename:int	file:
PipeInputProc	win/tclWinPipe.c	/^PipeInputProc($/;"	f	typeref:typename:int	file:
PipeOutputProc	unix/tclUnixPipe.c	/^PipeOutputProc($/;"	f	typeref:typename:int	file:
PipeOutputProc	win/tclWinPipe.c	/^PipeOutputProc($/;"	f	typeref:typename:int	file:
PipeReaderThread	win/tclWinPipe.c	/^PipeReaderThread($/;"	f	typeref:typename:DWORD WINAPI	file:
PipeSetupProc	win/tclWinPipe.c	/^PipeSetupProc($/;"	f	typeref:typename:void
PipeState	unix/tclUnixPipe.c	/^} PipeState;$/;"	t	typeref:struct:__anon004fe33e0108	file:
PipeThreadActionProc	win/tclWinPipe.c	/^PipeThreadActionProc($/;"	f	typeref:typename:void	file:
PipeWatchNotifyChannelWrapper	unix/tclUnixPipe.c	/^PipeWatchNotifyChannelWrapper($/;"	f	typeref:typename:void	file:
PipeWatchProc	unix/tclUnixPipe.c	/^PipeWatchProc($/;"	f	typeref:typename:void	file:
PipeWatchProc	win/tclWinPipe.c	/^PipeWatchProc($/;"	f	typeref:typename:void	file:
PipeWriterThread	win/tclWinPipe.c	/^PipeWriterThread($/;"	f	typeref:typename:DWORD WINAPI	file:
PipelineNext	tests/httpTest.tcl	/^proc httpTest::PipelineNext {Start End prevPair pair any} {$/;"	p	namespace:httpTest
PkgAvail	generic/tclPkg.c	/^typedef struct PkgAvail {$/;"	s	file:
PkgAvail	generic/tclPkg.c	/^} PkgAvail;$/;"	t	typeref:struct:PkgAvail	file:
PkgFiles	generic/tclPkg.c	/^typedef struct PkgFiles {$/;"	s	file:
PkgFiles	generic/tclPkg.c	/^} PkgFiles;$/;"	t	typeref:struct:PkgFiles	file:
PkgFilesCleanupProc	generic/tclPkg.c	/^PkgFilesCleanupProc($/;"	f	typeref:typename:void	file:
PkgName	generic/tclInterp.c	/^    typedef struct PkgName {$/;"	s	function:Tcl_Init	file:
PkgName	generic/tclInterp.c	/^    } PkgName;$/;"	t	function:Tcl_Init	typeref:struct:Tcl_Init::PkgName	file:
PkgName	generic/tclPkg.c	/^typedef struct PkgName {$/;"	s	file:
PkgName	generic/tclPkg.c	/^} PkgName;$/;"	t	typeref:struct:PkgName	file:
PkgPreferOptions	generic/tclInt.h	/^enum PkgPreferOptions {$/;"	g
PkgRequireCore	generic/tclPkg.c	/^PkgRequireCore($/;"	f	typeref:typename:int	file:
PkgRequireCoreCleanup	generic/tclPkg.c	/^PkgRequireCoreCleanup($/;"	f	typeref:typename:int	file:
PkgRequireCoreFinal	generic/tclPkg.c	/^PkgRequireCoreFinal($/;"	f	typeref:typename:int	file:
PkgRequireCoreStep1	generic/tclPkg.c	/^PkgRequireCoreStep1($/;"	f	typeref:typename:int	file:
PkgRequireCoreStep2	generic/tclPkg.c	/^PkgRequireCoreStep2($/;"	f	typeref:typename:int	file:
Pkga_EqObjCmd	unix/dltest/pkga.c	/^Pkga_EqObjCmd($/;"	f	typeref:typename:int	file:
Pkga_Init	unix/dltest/pkga.c	/^Pkga_Init($/;"	f	typeref:typename:DLLEXPORT int
Pkga_QuoteObjCmd	unix/dltest/pkga.c	/^Pkga_QuoteObjCmd($/;"	f	typeref:typename:int	file:
Pkgb_DemoObjCmd	unix/dltest/pkgb.c	/^Pkgb_DemoObjCmd($/;"	f	typeref:typename:int	file:
Pkgb_Init	unix/dltest/pkgb.c	/^Pkgb_Init($/;"	f	typeref:typename:DLLEXPORT int
Pkgb_SafeInit	unix/dltest/pkgb.c	/^Pkgb_SafeInit($/;"	f	typeref:typename:DLLEXPORT int
Pkgb_SubObjCmd	unix/dltest/pkgb.c	/^Pkgb_SubObjCmd($/;"	f	typeref:typename:int	file:
Pkgb_UnsafeObjCmd	unix/dltest/pkgb.c	/^Pkgb_UnsafeObjCmd($/;"	f	typeref:typename:int	file:
Pkgc_Init	unix/dltest/pkgc.c	/^Pkgc_Init($/;"	f	typeref:typename:DLLEXPORT int
Pkgc_SafeInit	unix/dltest/pkgc.c	/^Pkgc_SafeInit($/;"	f	typeref:typename:DLLEXPORT int
Pkgc_SubObjCmd	unix/dltest/pkgc.c	/^Pkgc_SubObjCmd($/;"	f	typeref:typename:int	file:
Pkgc_UnsafeObjCmd	unix/dltest/pkgc.c	/^Pkgc_UnsafeObjCmd($/;"	f	typeref:typename:int	file:
Pkgd_Init	unix/dltest/pkgd.c	/^Pkgd_Init($/;"	f	typeref:typename:DLLEXPORT int
Pkgd_SafeInit	unix/dltest/pkgd.c	/^Pkgd_SafeInit($/;"	f	typeref:typename:DLLEXPORT int
Pkgd_SubObjCmd	unix/dltest/pkgd.c	/^Pkgd_SubObjCmd($/;"	f	typeref:typename:int	file:
Pkgd_UnsafeObjCmd	unix/dltest/pkgd.c	/^Pkgd_UnsafeObjCmd($/;"	f	typeref:typename:int	file:
Pkge_Init	unix/dltest/pkge.c	/^Pkge_Init($/;"	f	typeref:typename:DLLEXPORT int
Pkgooa_Init	unix/dltest/pkgooa.c	/^Pkgooa_Init($/;"	f	typeref:typename:DLLEXPORT int
Pkgooa_StubsOKObjCmd	unix/dltest/pkgooa.c	/^Pkgooa_StubsOKObjCmd($/;"	f	typeref:typename:int	file:
Pkgt_EqObjCmd2	unix/dltest/pkgt.c	/^Pkgt_EqObjCmd2($/;"	f	typeref:typename:int	file:
Pkgt_Init	unix/dltest/pkgt.c	/^Pkgt_Init($/;"	f	typeref:typename:DLLEXPORT int
PkguaDeleteTokens	unix/dltest/pkgua.c	/^PkguaDeleteTokens($/;"	f	typeref:typename:void	file:
PkguaEqObjCmd	unix/dltest/pkgua.c	/^PkguaEqObjCmd($/;"	f	typeref:typename:int	file:
PkguaFreeTokensHashTable	unix/dltest/pkgua.c	/^PkguaFreeTokensHashTable(void)$/;"	f	typeref:typename:void	file:
PkguaInitTokensHashTable	unix/dltest/pkgua.c	/^PkguaInitTokensHashTable(void)$/;"	f	typeref:typename:void	file:
PkguaInterpToTokens	unix/dltest/pkgua.c	/^PkguaInterpToTokens($/;"	f	typeref:typename:Tcl_Command *	file:
PkguaQuoteObjCmd	unix/dltest/pkgua.c	/^PkguaQuoteObjCmd($/;"	f	typeref:typename:int	file:
Pkgua_Init	unix/dltest/pkgua.c	/^Pkgua_Init($/;"	f	typeref:typename:DLLEXPORT int
Pkgua_SafeInit	unix/dltest/pkgua.c	/^Pkgua_SafeInit($/;"	f	typeref:typename:DLLEXPORT int
Pkgua_SafeUnload	unix/dltest/pkgua.c	/^Pkgua_SafeUnload($/;"	f	typeref:typename:DLLEXPORT int
Pkgua_Unload	unix/dltest/pkgua.c	/^Pkgua_Unload($/;"	f	typeref:typename:DLLEXPORT int
PlatformEventData	unix/tclEpollNotfy.c	/^struct PlatformEventData {$/;"	s	file:
PlatformEventData	unix/tclKqueueNotfy.c	/^struct PlatformEventData {$/;"	s	file:
PlatformEventsControl	unix/tclEpollNotfy.c	/^PlatformEventsControl($/;"	f	typeref:typename:void	file:
PlatformEventsControl	unix/tclKqueueNotfy.c	/^PlatformEventsControl($/;"	f	typeref:typename:void	file:
PlatformEventsInit	unix/tclEpollNotfy.c	/^PlatformEventsInit(void)$/;"	f	typeref:typename:void	file:
PlatformEventsTranslate	unix/tclEpollNotfy.c	/^PlatformEventsTranslate($/;"	f	typeref:typename:int	file:
PlatformEventsTranslate	unix/tclKqueueNotfy.c	/^PlatformEventsTranslate($/;"	f	typeref:typename:int	file:
PlatformEventsWait	unix/tclEpollNotfy.c	/^PlatformEventsWait($/;"	f	typeref:typename:int	file:
PlatformEventsWait	unix/tclKqueueNotfy.c	/^PlatformEventsWait($/;"	f	typeref:typename:int	file:
PopObjToDelete	generic/tclObj.c	/^#define PopObjToDelete(/;"	d	file:
Pos	compat/zlib/deflate.h	/^typedef ush Pos;$/;"	t	typeref:typename:ush
Posf	compat/zlib/deflate.h	/^typedef Pos FAR Posf;$/;"	t	typeref:typename:Pos FAR
Position	compat/zlib/contrib/dotzlib/DotZLib/GZipStream.cs	/^        public override long Position$/;"	p	class:DotZLib.GZipStream
Pow10TimesFrExp	generic/tclStrToD.c	/^Pow10TimesFrExp($/;"	f	typeref:typename:double	file:
Precedence	generic/tclCompExpr.c	/^enum Precedence {$/;"	g	file:
Precision	generic/tclArithSeries.c	/^Precision($/;"	f	typeref:typename:unsigned	file:
PrefixAllObjCmd	generic/tclIndexObj.c	/^PrefixAllObjCmd($/;"	f	typeref:typename:int	file:
PrefixAllObjCmd	generic/tclIndexObj.c	/^static Tcl_ObjCmdProc PrefixAllObjCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
PrefixLongestObjCmd	generic/tclIndexObj.c	/^PrefixLongestObjCmd($/;"	f	typeref:typename:int	file:
PrefixLongestObjCmd	generic/tclIndexObj.c	/^static Tcl_ObjCmdProc PrefixLongestObjCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
PrefixMatchObjCmd	generic/tclIndexObj.c	/^PrefixMatchObjCmd($/;"	f	typeref:typename:int	file:
PrefixMatchObjCmd	generic/tclIndexObj.c	/^static Tcl_ObjCmdProc PrefixMatchObjCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
PreparePersistentConnection	library/http/http.tcl	/^proc http::PreparePersistentConnection {token} {$/;"	p	namespace:http
PreserveChannelBuffer	generic/tclIO.c	/^PreserveChannelBuffer($/;"	f	typeref:typename:void	file:
PreserveData	generic/tclIOGT.c	/^PreserveData($/;"	f	typeref:typename:void	file:
PreventCycle	generic/tclCompile.c	/^PreventCycle($/;"	f	typeref:typename:void	file:
PrintByteCodeInfo	generic/tclExecute.c	/^PrintByteCodeInfo($/;"	f	typeref:typename:void	file:
PrintDictUpdateInfo	generic/tclCompCmds.c	/^PrintDictUpdateInfo($/;"	f	typeref:typename:void	file:
PrintDictUpdateInfo	generic/tclCompCmds.c	/^static AuxDataPrintProc	PrintDictUpdateInfo;$/;"	v	typeref:typename:AuxDataPrintProc	file:
PrintForeachInfo	generic/tclCompCmds.c	/^PrintForeachInfo($/;"	f	typeref:typename:void	file:
PrintForeachInfo	generic/tclCompCmds.c	/^static AuxDataPrintProc	PrintForeachInfo;$/;"	v	typeref:typename:AuxDataPrintProc	file:
PrintJumptableInfo	generic/tclCompCmdsSZ.c	/^PrintJumptableInfo($/;"	f	typeref:typename:void	file:
PrintJumptableInfo	generic/tclCompCmdsSZ.c	/^static AuxDataPrintProc	PrintJumptableInfo;$/;"	v	typeref:typename:AuxDataPrintProc	file:
PrintNameLength	win/tclWinFile.c	/^	    WORD PrintNameLength;$/;"	m	struct:_REPARSE_DATA_BUFFER::__anon1c302b04010a::__anon1c302b040208	typeref:typename:WORD	file:
PrintNameLength	win/tclWinFile.c	/^	    WORD PrintNameLength;$/;"	m	struct:_REPARSE_DATA_BUFFER::__anon1c302b04010a::__anon1c302b040308	typeref:typename:WORD	file:
PrintNameOffset	win/tclWinFile.c	/^	    WORD PrintNameOffset;$/;"	m	struct:_REPARSE_DATA_BUFFER::__anon1c302b04010a::__anon1c302b040208	typeref:typename:WORD	file:
PrintNameOffset	win/tclWinFile.c	/^	    WORD PrintNameOffset;$/;"	m	struct:_REPARSE_DATA_BUFFER::__anon1c302b04010a::__anon1c302b040308	typeref:typename:WORD	file:
PrintNewForeachInfo	generic/tclCompCmds.c	/^PrintNewForeachInfo($/;"	f	typeref:typename:void	file:
PrintNewForeachInfo	generic/tclCompCmds.c	/^static AuxDataPrintProc	PrintNewForeachInfo;$/;"	v	typeref:typename:AuxDataPrintProc	file:
PrintParse	generic/tclTest.c	/^PrintParse($/;"	f	typeref:typename:void	file:
PrintSourceToObj	generic/tclDisassemble.c	/^PrintSourceToObj($/;"	f	typeref:typename:void	file:
PrintUsage	generic/tclIndexObj.c	/^PrintUsage($/;"	f	typeref:typename:void	file:
Print_Statistic	compat/zlib/contrib/ada/test.adb	/^   procedure Print_Statistic (Msg : String; Data_Size : ZLib.Count) is$/;"	r	subprogram:Test	file:
Print_Statistic	compat/zlib/contrib/ada/test.adb	/^   procedure Print_Statistic (Msg : String; Data_Size : ZLib.Count);$/;"	R	subprogram:Test	file:
PrivateNRObjectCmd	generic/tclOO.c	/^PrivateNRObjectCmd($/;"	f	typeref:typename:int	file:
PrivateVariableList	generic/tclOOInt.h	/^typedef LIST_STATIC(PrivateVariableMapping) PrivateVariableList;$/;"	t
PrivateVariableMapping	generic/tclOOInt.h	/^struct PrivateVariableMapping {$/;"	s
PrivateVariableMapping	generic/tclOOInt.h	/^typedef struct PrivateVariableMapping PrivateVariableMapping;$/;"	t	typeref:struct:PrivateVariableMapping
Proc	generic/tclInt.h	/^typedef struct Proc {$/;"	s
Proc	generic/tclInt.h	/^} Proc;$/;"	t	typeref:struct:Proc
ProcBodyDup	generic/tclProc.c	/^ProcBodyDup($/;"	f	typeref:typename:void	file:
ProcBodyFree	generic/tclProc.c	/^ProcBodyFree($/;"	f	typeref:typename:void	file:
ProcBodyTestCheckObjCmd	generic/tclTestProcBodyObj.c	/^ProcBodyTestCheckObjCmd($/;"	f	typeref:typename:int	file:
ProcBodyTestCheckObjCmd	generic/tclTestProcBodyObj.c	/^static Tcl_ObjCmdProc ProcBodyTestCheckObjCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
ProcBodyTestInitInternal	generic/tclTestProcBodyObj.c	/^ProcBodyTestInitInternal($/;"	f	typeref:typename:int	file:
ProcBodyTestProcObjCmd	generic/tclTestProcBodyObj.c	/^ProcBodyTestProcObjCmd($/;"	f	typeref:typename:int	file:
ProcBodyTestProcObjCmd	generic/tclTestProcBodyObj.c	/^static Tcl_ObjCmdProc ProcBodyTestProcObjCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
ProcErrorProc	generic/tclInt.h	/^typedef void (ProcErrorProc)(Tcl_Interp *interp, Tcl_Obj *procNameObj);$/;"	t	typeref:typename:void ()(Tcl_Interp * interp,Tcl_Obj * procNameObj)
ProcExitHandler	win/tclWinConsole.c	/^ProcExitHandler($/;"	f	typeref:typename:void	file:
ProcExitHandler	win/tclWinSerial.c	/^ProcExitHandler($/;"	f	typeref:typename:void	file:
ProcGetInternalRep	generic/tclProc.c	/^#define ProcGetInternalRep(/;"	d	file:
ProcInfo	win/tclWinPipe.c	/^typedef struct ProcInfo {$/;"	s	file:
ProcInfo	win/tclWinPipe.c	/^} ProcInfo;$/;"	t	typeref:struct:ProcInfo	file:
ProcSetInternalRep	generic/tclProc.c	/^#define ProcSetInternalRep(/;"	d	file:
ProcWrongNumArgs	generic/tclProc.c	/^ProcWrongNumArgs($/;"	f	typeref:typename:int	file:
Procbodytest_Init	generic/tclInt.h	/^MODULE_SCOPE Tcl_LibraryInitProc Procbodytest_Init;$/;"	v	typeref:typename:MODULE_SCOPE Tcl_LibraryInitProc
Procbodytest_Init	generic/tclTestProcBodyObj.c	/^Procbodytest_Init($/;"	f	typeref:typename:int
Procbodytest_SafeInit	generic/tclInt.h	/^MODULE_SCOPE Tcl_LibraryInitProc Procbodytest_SafeInit;$/;"	v	typeref:typename:MODULE_SCOPE Tcl_LibraryInitProc
Procbodytest_SafeInit	generic/tclTestProcBodyObj.c	/^Procbodytest_SafeInit($/;"	f	typeref:typename:int
ProcedureMethod	generic/tclOOInt.h	/^struct ProcedureMethod {$/;"	s
ProcedureMethod	generic/tclOOInt.h	/^typedef struct ProcedureMethod ProcedureMethod;$/;"	t	typeref:struct:ProcedureMethod
ProcedureMethodCompiledVarConnect	generic/tclOOMethod.c	/^ProcedureMethodCompiledVarConnect($/;"	f	typeref:typename:Tcl_Var	file:
ProcedureMethodCompiledVarDelete	generic/tclOOMethod.c	/^ProcedureMethodCompiledVarDelete($/;"	f	typeref:typename:void	file:
ProcedureMethodCompiledVarResolver	generic/tclOOMethod.c	/^ProcedureMethodCompiledVarResolver($/;"	f	typeref:typename:int	file:
ProcedureMethodCompiledVarResolver	generic/tclOOMethod.c	/^static Tcl_ResolveCompiledVarProc	ProcedureMethodCompiledVarResolver;$/;"	v	typeref:typename:Tcl_ResolveCompiledVarProc	file:
ProcedureMethodVarResolver	generic/tclOOMethod.c	/^ProcedureMethodVarResolver($/;"	f	typeref:typename:int	file:
ProcedureMethodVarResolver	generic/tclOOMethod.c	/^static Tcl_ResolveVarProc	ProcedureMethodVarResolver;$/;"	v	typeref:typename:Tcl_ResolveVarProc	file:
ProcedureMethodVersion	generic/tclOOInt.h	/^enum ProcedureMethodVersion {$/;"	g
ProcessAutopurgeObjCmd	generic/tclProcess.c	/^ProcessAutopurgeObjCmd($/;"	f	typeref:typename:int	file:
ProcessAutopurgeObjCmd	generic/tclProcess.c	/^static Tcl_ObjCmdProc ProcessAutopurgeObjCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
ProcessCatches	generic/tclAssembly.c	/^ProcessCatches($/;"	f	typeref:typename:int	file:
ProcessCatchesInBasicBlock	generic/tclAssembly.c	/^ProcessCatchesInBasicBlock($/;"	f	typeref:typename:int	file:
ProcessGlobalValue	generic/tclInt.h	/^typedef struct ProcessGlobalValue {$/;"	s
ProcessGlobalValue	generic/tclInt.h	/^} ProcessGlobalValue;$/;"	t	typeref:struct:ProcessGlobalValue
ProcessInfo	generic/tclProcess.c	/^typedef struct ProcessInfo {$/;"	s	file:
ProcessInfo	generic/tclProcess.c	/^} ProcessInfo;$/;"	t	typeref:struct:ProcessInfo	file:
ProcessListObjCmd	generic/tclProcess.c	/^ProcessListObjCmd($/;"	f	typeref:typename:int	file:
ProcessListObjCmd	generic/tclProcess.c	/^static Tcl_ObjCmdProc ProcessListObjCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
ProcessPosixTimeZone	library/clock.tcl	/^proc ::tcl::clock::ProcessPosixTimeZone { z } {$/;"	p	namespace:::tcl::clock
ProcessPosixTimeZone	library/clockclassic.tcl	/^proc ProcessPosixTimeZone { z } {$/;"	p
ProcessPurgeObjCmd	generic/tclProcess.c	/^ProcessPurgeObjCmd($/;"	f	typeref:typename:int	file:
ProcessPurgeObjCmd	generic/tclProcess.c	/^static Tcl_ObjCmdProc ProcessPurgeObjCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
ProcessRetries	tests/httpTest.tcl	/^proc httpTest::ProcessRetries {someResults n msg skipOverlaps notIncluded notPiped} {$/;"	p	namespace:httpTest
ProcessStatusObjCmd	generic/tclProcess.c	/^ProcessStatusObjCmd($/;"	f	typeref:typename:int	file:
ProcessStatusObjCmd	generic/tclProcess.c	/^static Tcl_ObjCmdProc ProcessStatusObjCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
ProcessUnexpectedResult	generic/tclBasic.c	/^ProcessUnexpectedResult($/;"	f	typeref:typename:void	file:
ProceudreMethodFlags	generic/tclOOInt.h	/^enum ProceudreMethodFlags {$/;"	g
Progress	compat/zlib/contrib/delphi/ZLib.pas	/^    procedure Progress(Sender: TObject); dynamic;$/;"	p
Prompt	generic/tclMain.c	/^Prompt($/;"	f	typeref:typename:void	file:
PromptType	generic/tclMain.c	/^} PromptType;$/;"	t	typeref:enum:__anonfdf182ea0203	file:
PropNameCompare	generic/tclOOProp.c	/^PropNameCompare($/;"	f	typeref:typename:int	file:
PropOpt	generic/tclOOProp.c	/^enum PropOpt {$/;"	g	file:
PropertyList	generic/tclOOInt.h	/^typedef LIST_STATIC(Tcl_Obj *) PropertyList;$/;"	t
PropertyStorage	generic/tclOOInt.h	/^struct PropertyStorage {$/;"	s
PropertyStorage	generic/tclOOInt.h	/^typedef struct PropertyStorage PropertyStorage;$/;"	t	typeref:struct:PropertyStorage
Ptr2Block	generic/tclThreadAlloc.c	/^Ptr2Block($/;"	f	typeref:typename:Block *	file:
PublicNRObjectCmd	generic/tclOO.c	/^PublicNRObjectCmd($/;"	f	typeref:typename:int	file:
PushLiteral	generic/tclCompile.h	/^#define PushLiteral(/;"	d
PushMethodCallFrame	generic/tclOOMethod.c	/^PushMethodCallFrame($/;"	f	typeref:typename:int	file:
PushObjToDelete	generic/tclObj.c	/^#define PushObjToDelete(/;"	d	file:
PushStringLiteral	generic/tclCompile.h	/^#define PushStringLiteral(/;"	d
PushVarNameWord	generic/tclCompile.h	/^#define PushVarNameWord(/;"	d
Put	compat/zlib/contrib/dotzlib/DotZLib/CircularBuffer.cs	/^        public bool Put(byte b)$/;"	m	class:DotZLib.CircularBuffer
Put	compat/zlib/contrib/dotzlib/DotZLib/CircularBuffer.cs	/^        public int Put(byte[] source, int offset, int count)$/;"	m	class:DotZLib.CircularBuffer
PutBlocks	generic/tclThreadAlloc.c	/^PutBlocks($/;"	f	typeref:typename:void	file:
PutObjs	generic/tclThreadAlloc.c	/^PutObjs($/;"	f	typeref:typename:void	file:
Put_32	compat/zlib/contrib/ada/zlib.adb	/^      procedure Put_32$/;"	R	subprogram:Translate_GZip	file:
Put_32	compat/zlib/contrib/ada/zlib.adb	/^      procedure Put_32$/;"	r	subprogram:Translate_GZip	file:
Puts	tests/httpTest.tcl	/^proc httpTest::Puts {txt} {$/;"	p	namespace:httpTest
Puts	tests/httpd11.tcl	/^proc Puts {chan s} {puts $chan $s; puts $s}$/;"	p
QCCD	generic/tclConfig.c	/^} QCCD;$/;"	t	typeref:struct:__anon46b45ffb0108	file:
QUESTION	generic/tclCompExpr.c	/^#define QUESTION	/;"	d	file:
QUICK_MAX	generic/tclStrToD.c	/^#define QUICK_MAX	/;"	d	file:
QUOTED	generic/tclCompExpr.c	/^#define QUOTED	/;"	d	file:
QualifyPath	win/nmakehlp.c	/^QualifyPath($/;"	f	typeref:typename:int	file:
QueryConfigDelete	generic/tclConfig.c	/^QueryConfigDelete($/;"	f	typeref:typename:void	file:
QueryConfigDelete	generic/tclConfig.c	/^static Tcl_CmdDeleteProc	QueryConfigDelete;$/;"	v	typeref:typename:Tcl_CmdDeleteProc	file:
QueryConfigObjCmd	generic/tclConfig.c	/^QueryConfigObjCmd($/;"	f	typeref:typename:int	file:
QueryConfigObjCmd	generic/tclConfig.c	/^static Tcl_ObjCmdProc		QueryConfigObjCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
QueueEvent	generic/tclNotify.c	/^QueueEvent($/;"	f	typeref:typename:int	file:
QueueFileEvents	macosx/tclMacOSXNotify.c	/^QueueFileEvents($/;"	f	typeref:typename:void	file:
QuickConversion	generic/tclStrToD.c	/^QuickConversion($/;"	f	typeref:typename:char *	file:
QuoteCmdLineBackslash	win/tclWinPipe.c	/^QuoteCmdLineBackslash($/;"	f	typeref:typename:void	file:
QuoteCmdLinePart	win/tclWinPipe.c	/^QuoteCmdLinePart($/;"	f	typeref:typename:const char *	file:
RANDOM_INDEX	generic/tclHash.c	/^#define RANDOM_INDEX(/;"	d	file:
RANDW	generic/tclIORChan.c	/^#define RANDW /;"	d	file:
RANDW	generic/tclIORTrans.c	/^#define RANDW /;"	d	file:
RAND_HEAD_LEN	compat/zlib/contrib/minizip/crypt.h	/^#define RAND_HEAD_LEN /;"	d
RAND_IA	generic/tclBasic.c	/^#define RAND_IA	/;"	d	file:
RAND_IM	generic/tclBasic.c	/^#define RAND_IM	/;"	d	file:
RAND_IQ	generic/tclBasic.c	/^#define RAND_IQ	/;"	d	file:
RAND_IR	generic/tclBasic.c	/^#define RAND_IR	/;"	d	file:
RAND_MASK	generic/tclBasic.c	/^#define RAND_MASK	/;"	d	file:
RAND_SEED_INITIALIZED	generic/tclInt.h	/^#define RAND_SEED_INITIALIZED	/;"	d
RANGE	generic/regcomp.c	/^#define	RANGE	/;"	d	file:
RANGE_ASSERT	generic/tclAlloc.c	/^#define RANGE_ASSERT(/;"	d	file:
RANK	compat/zlib/deflate.c	/^#define RANK(/;"	d	file:
RANLIB	compat/zlib/Makefile.in	/^RANLIB=ranlib$/;"	m
RANLIB	unix/Makefile.in	/^RANLIB			= @RANLIB@$/;"	m
RANLIB	unix/tcl.m4	/^    AC_SUBST(RANLIB)$/;"	s
RANLIB	win/Makefile.in	/^RANLIB		= @RANLIB@$/;"	m
RANLIB	win/configure.ac	/^AC_SUBST(RANLIB)$/;"	s
RAW	compat/zlib/examples/zran.c	/^#define RAW /;"	d	file:
RAWLEN	compat/zlib/examples/fitblk.c	/^#define RAWLEN /;"	d	file:
RB_INCREMENT	generic/tclIORTrans.c	/^#define RB_INCREMENT /;"	d	file:
RC	win/Makefile.in	/^RC		= @RC@$/;"	m
RC	win/configure.ac	/^AC_SUBST(RC)$/;"	s
RCHECK	generic/tclThreadAlloc.c	/^#define RCHECK	/;"	d	file:
RCMKEY	generic/tclIORChan.c	/^#define RCMKEY /;"	d	file:
RC_DEFINE	win/configure.ac	/^AC_SUBST(RC_DEFINE)$/;"	s
RC_DEFINES	win/configure.ac	/^AC_SUBST(RC_DEFINES)$/;"	s
RC_INCLUDE	win/configure.ac	/^AC_SUBST(RC_INCLUDE)$/;"	s
RC_OUT	win/configure.ac	/^AC_SUBST(RC_OUT)$/;"	s
RC_TYPE	win/configure.ac	/^AC_SUBST(RC_TYPE)$/;"	s
RE-INITIALIZATION OF TCL STANDARD CHANNELS	doc/StdChannels.3	/^.SH "RE-INITIALIZATION OF TCL STANDARD CHANNELS"$/;"	s	title:Standard Channels
README:  Tcl	README.md	/^# README:  Tcl$/;"	c
READ_16	compat/zlib/contrib/minizip/mztools.c	/^#define READ_16(/;"	d	file:
READ_32	compat/zlib/contrib/minizip/mztools.c	/^#define READ_32(/;"	d	file:
READ_8	compat/zlib/contrib/minizip/mztools.c	/^#define READ_8(/;"	d	file:
REAL	generic/tclCmdIL.c	/^	ASCII, DICTIONARY, INTEGER, REAL$/;"	e	enum:Tcl_LsearchObjCmd::datatypes	file:
REALLOC	generic/regcustom.h	/^#define	REALLOC(/;"	d
REALLOC	generic/regguts.h	/^#define	REALLOC(/;"	d
REBUILD_MULTIPLIER	generic/tclHash.c	/^#define REBUILD_MULTIPLIER	/;"	d	file:
REBUILD_MULTIPLIER	generic/tclLiteral.c	/^#define REBUILD_MULTIPLIER	/;"	d	file:
REDUCE	generic/regcomp.c	/^#define	REDUCE(/;"	d	file:
REFERENCE COUNT MANAGEMENT	doc/AddErrInfo.3	/^.SH "REFERENCE COUNT MANAGEMENT"$/;"	s	title:Tcl_AddErrorInfo
REFERENCE COUNT MANAGEMENT	doc/BoolObj.3	/^.SH "REFERENCE COUNT MANAGEMENT"$/;"	s	title:Tcl_BooleanObj
REFERENCE COUNT MANAGEMENT	doc/ByteArrObj.3	/^.SH "REFERENCE COUNT MANAGEMENT"$/;"	s	title:Tcl_ByteArrayObj
REFERENCE COUNT MANAGEMENT	doc/Cancel.3	/^.SH "REFERENCE COUNT MANAGEMENT"$/;"	s	title:Tcl_Cancel
REFERENCE COUNT MANAGEMENT	doc/Class.3	/^.SH "REFERENCE COUNT MANAGEMENT"$/;"	s	title:Tcl_Class
REFERENCE COUNT MANAGEMENT	doc/CrtAlias.3	/^.SH "REFERENCE COUNT MANAGEMENT"$/;"	s	title:Tcl_CreateAlias
REFERENCE COUNT MANAGEMENT	doc/CrtObjCmd.3	/^.SH "REFERENCE COUNT MANAGEMENT"$/;"	s	title:Tcl_CreateObjCommand
REFERENCE COUNT MANAGEMENT	doc/CrtTrace.3	/^.SH "REFERENCE COUNT MANAGEMENT"$/;"	s	title:Tcl_CreateTrace
REFERENCE COUNT MANAGEMENT	doc/DictObj.3	/^.SH "REFERENCE COUNT MANAGEMENT"$/;"	s	title:Tcl_DictObj
REFERENCE COUNT MANAGEMENT	doc/DoubleObj.3	/^.SH "REFERENCE COUNT MANAGEMENT"$/;"	s	title:Tcl_DoubleObj
REFERENCE COUNT MANAGEMENT	doc/Encoding.3	/^.SH "REFERENCE COUNT MANAGEMENT"$/;"	s	title:Tcl_GetEncoding
REFERENCE COUNT MANAGEMENT	doc/Ensemble.3	/^.SH "REFERENCE COUNT MANAGEMENT"$/;"	s	title:Tcl_Ensemble
REFERENCE COUNT MANAGEMENT	doc/Eval.3	/^.SH "REFERENCE COUNT MANAGEMENT"$/;"	s	title:Tcl_Eval
REFERENCE COUNT MANAGEMENT	doc/ExprLongObj.3	/^.SH "REFERENCE COUNT MANAGEMENT"$/;"	s	title:Tcl_ExprLongObj
REFERENCE COUNT MANAGEMENT	doc/FileSystem.3	/^.SH "REFERENCE COUNT MANAGEMENT"$/;"	s	title:Filesystem
REFERENCE COUNT MANAGEMENT	doc/GetIndex.3	/^.SH "REFERENCE COUNT MANAGEMENT"$/;"	s	title:Tcl_GetIndexFromObj
REFERENCE COUNT MANAGEMENT	doc/Hash.3	/^.SH "REFERENCE COUNT MANAGEMENT"$/;"	s	title:Tcl_Hash
REFERENCE COUNT MANAGEMENT	doc/IntObj.3	/^.SH "REFERENCE COUNT MANAGEMENT"$/;"	s	title:Tcl_IntObj
REFERENCE COUNT MANAGEMENT	doc/ListObj.3	/^.SH "REFERENCE COUNT MANAGEMENT"$/;"	s	title:Tcl_ListObj
REFERENCE COUNT MANAGEMENT	doc/Load.3	/^.SH "REFERENCE COUNT MANAGEMENT"$/;"	s	title:Load
REFERENCE COUNT MANAGEMENT	doc/Method.3	/^.SH "REFERENCE COUNT MANAGEMENT"$/;"	s	title:Tcl_Method
REFERENCE COUNT MANAGEMENT	doc/NRE.3	/^.SH "REFERENCE COUNT MANAGEMENT"$/;"	s	title:NRE
REFERENCE COUNT MANAGEMENT	doc/Namespace.3	/^.SH "REFERENCE COUNT MANAGEMENT"$/;"	s	title:Tcl_Namespace
REFERENCE COUNT MANAGEMENT	doc/ObjectType.3	/^.SH "REFERENCE COUNT MANAGEMENT"$/;"	s	title:Tcl_ObjType
REFERENCE COUNT MANAGEMENT	doc/OpenFileChnl.3	/^.SH "REFERENCE COUNT MANAGEMENT"$/;"	s	title:Tcl_OpenFileChannel
REFERENCE COUNT MANAGEMENT	doc/ParseArgs.3	/^.SH "REFERENCE COUNT MANAGEMENT"$/;"	s	title:Tcl_ParseArgsObjv
REFERENCE COUNT MANAGEMENT	doc/PkgRequire.3	/^.SH "REFERENCE COUNT MANAGEMENT"$/;"	s	title:Tcl_PkgRequire
REFERENCE COUNT MANAGEMENT	doc/RecEvalObj.3	/^.SH "REFERENCE COUNT MANAGEMENT"$/;"	s	title:Tcl_RecordAndEvalObj
REFERENCE COUNT MANAGEMENT	doc/RegExp.3	/^.SH "REFERENCE COUNT MANAGEMENT"$/;"	s	title:Tcl_RegExpMatch
REFERENCE COUNT MANAGEMENT	doc/SetChanErr.3	/^.SH "REFERENCE COUNT MANAGEMENT"$/;"	s	title:Tcl_SetChannelError
REFERENCE COUNT MANAGEMENT	doc/SetVar.3	/^.SH "REFERENCE COUNT MANAGEMENT"$/;"	s	title:Tcl_SetVar
REFERENCE COUNT MANAGEMENT	doc/StringObj.3	/^.SH "REFERENCE COUNT MANAGEMENT"$/;"	s	title:Tcl_StringObj
REFERENCE COUNT MANAGEMENT	doc/SubstObj.3	/^.SH "REFERENCE COUNT MANAGEMENT"$/;"	s	title:Tcl_SubstObj
REFERENCE COUNT MANAGEMENT	doc/TclZlib.3	/^.SH "REFERENCE COUNT MANAGEMENT"$/;"	s	title:TclZlib
REFERENCE COUNT MANAGEMENT	doc/Tcl_Main.3	/^.SH "REFERENCE COUNT MANAGEMENT"$/;"	s	title:Tcl_Main
REFERENCE COUNT MANAGEMENT	doc/TraceVar.3	/^.SH "REFERENCE COUNT MANAGEMENT"$/;"	s	title:Tcl_TraceVar
REFERENCE COUNT MANAGEMENT	doc/WrongNumArgs.3	/^.SH "REFERENCE COUNT MANAGEMENT"$/;"	s	title:Tcl_WrongNumArgs
REGDOTVER	win/Makefile.in	/^REGDOTVER		= @TCL_REG_MAJOR_VERSION@.@TCL_REG_MINOR_VERSION@$/;"	m
REGEXP	generic/tclCmdIL.c	/^	EXACT, GLOB, REGEXP, SORTED$/;"	e	enum:Tcl_LsearchObjCmd::modes	file:
REGEXP_ABOUT	generic/tclCmdMZ.c	/^	REGEXP_ALL,	REGEXP_ABOUT,	REGEXP_INDICES,	REGEXP_INLINE,$/;"	e	enum:Tcl_RegexpObjCmd::regexpoptions	file:
REGEXP_ABOUT	generic/tclTest.c	/^	REGEXP_INDICES, REGEXP_NOCASE,	REGEXP_ABOUT,	REGEXP_EXPANDED,$/;"	e	enum:TestregexpObjCmd::optionsEnum	file:
REGEXP_ALL	generic/tclCmdMZ.c	/^	REGEXP_ALL,	REGEXP_ABOUT,	REGEXP_INDICES,	REGEXP_INLINE,$/;"	e	enum:Tcl_RegexpObjCmd::regexpoptions	file:
REGEXP_EXPANDED	generic/tclCmdMZ.c	/^	REGEXP_EXPANDED,REGEXP_LINE,	REGEXP_LINESTOP,REGEXP_LINEANCHOR,$/;"	e	enum:Tcl_RegexpObjCmd::regexpoptions	file:
REGEXP_EXPANDED	generic/tclTest.c	/^	REGEXP_INDICES, REGEXP_NOCASE,	REGEXP_ABOUT,	REGEXP_EXPANDED,$/;"	e	enum:TestregexpObjCmd::optionsEnum	file:
REGEXP_INDICES	generic/tclCmdMZ.c	/^	REGEXP_ALL,	REGEXP_ABOUT,	REGEXP_INDICES,	REGEXP_INLINE,$/;"	e	enum:Tcl_RegexpObjCmd::regexpoptions	file:
REGEXP_INDICES	generic/tclTest.c	/^	REGEXP_INDICES, REGEXP_NOCASE,	REGEXP_ABOUT,	REGEXP_EXPANDED,$/;"	e	enum:TestregexpObjCmd::optionsEnum	file:
REGEXP_INLINE	generic/tclCmdMZ.c	/^	REGEXP_ALL,	REGEXP_ABOUT,	REGEXP_INDICES,	REGEXP_INLINE,$/;"	e	enum:Tcl_RegexpObjCmd::regexpoptions	file:
REGEXP_LAST	generic/tclCmdMZ.c	/^	REGEXP_NOCASE,	REGEXP_START,	REGEXP_LAST$/;"	e	enum:Tcl_RegexpObjCmd::regexpoptions	file:
REGEXP_LAST	generic/tclTest.c	/^	REGEXP_LAST$/;"	e	enum:TestregexpObjCmd::optionsEnum	file:
REGEXP_LINE	generic/tclCmdMZ.c	/^	REGEXP_EXPANDED,REGEXP_LINE,	REGEXP_LINESTOP,REGEXP_LINEANCHOR,$/;"	e	enum:Tcl_RegexpObjCmd::regexpoptions	file:
REGEXP_LINEANCHOR	generic/tclCmdMZ.c	/^	REGEXP_EXPANDED,REGEXP_LINE,	REGEXP_LINESTOP,REGEXP_LINEANCHOR,$/;"	e	enum:Tcl_RegexpObjCmd::regexpoptions	file:
REGEXP_LINESTOP	generic/tclCmdMZ.c	/^	REGEXP_EXPANDED,REGEXP_LINE,	REGEXP_LINESTOP,REGEXP_LINEANCHOR,$/;"	e	enum:Tcl_RegexpObjCmd::regexpoptions	file:
REGEXP_MULTI	generic/tclTest.c	/^	REGEXP_MULTI,	REGEXP_NOCROSS,	REGEXP_NEWL,$/;"	e	enum:TestregexpObjCmd::optionsEnum	file:
REGEXP_NEWL	generic/tclTest.c	/^	REGEXP_MULTI,	REGEXP_NOCROSS,	REGEXP_NEWL,$/;"	e	enum:TestregexpObjCmd::optionsEnum	file:
REGEXP_NOCASE	generic/tclCmdMZ.c	/^	REGEXP_NOCASE,	REGEXP_START,	REGEXP_LAST$/;"	e	enum:Tcl_RegexpObjCmd::regexpoptions	file:
REGEXP_NOCASE	generic/tclTest.c	/^	REGEXP_INDICES, REGEXP_NOCASE,	REGEXP_ABOUT,	REGEXP_EXPANDED,$/;"	e	enum:TestregexpObjCmd::optionsEnum	file:
REGEXP_NOCROSS	generic/tclTest.c	/^	REGEXP_MULTI,	REGEXP_NOCROSS,	REGEXP_NEWL,$/;"	e	enum:TestregexpObjCmd::optionsEnum	file:
REGEXP_START	generic/tclCmdMZ.c	/^	REGEXP_NOCASE,	REGEXP_START,	REGEXP_LAST$/;"	e	enum:Tcl_RegexpObjCmd::regexpoptions	file:
REGEXP_XFLAGS	generic/tclTest.c	/^	REGEXP_XFLAGS,$/;"	e	enum:TestregexpObjCmd::optionsEnum	file:
REGHDRS	unix/Makefile.in	/^REGHDRS		= $(GENERIC_DIR)\/regex.h $(GENERIC_DIR)\/regguts.h \\$/;"	m
REGISTRY_ASSOC_KEY	win/tclWinReg.c	/^static const char REGISTRY_ASSOC_KEY[] = "registry::command";$/;"	v	typeref:typename:const char[]	file:
REGSUB_ALL	generic/tclCmdMZ.c	/^	REGSUB_ALL,	 REGSUB_COMMAND,    REGSUB_EXPANDED, REGSUB_LINE,$/;"	e	enum:Tcl_RegsubObjCmd::regsubobjoptions	file:
REGSUB_COMMAND	generic/tclCmdMZ.c	/^	REGSUB_ALL,	 REGSUB_COMMAND,    REGSUB_EXPANDED, REGSUB_LINE,$/;"	e	enum:Tcl_RegsubObjCmd::regsubobjoptions	file:
REGSUB_EXPANDED	generic/tclCmdMZ.c	/^	REGSUB_ALL,	 REGSUB_COMMAND,    REGSUB_EXPANDED, REGSUB_LINE,$/;"	e	enum:Tcl_RegsubObjCmd::regsubobjoptions	file:
REGSUB_LAST	generic/tclCmdMZ.c	/^	REGSUB_LAST$/;"	e	enum:Tcl_RegsubObjCmd::regsubobjoptions	file:
REGSUB_LINE	generic/tclCmdMZ.c	/^	REGSUB_ALL,	 REGSUB_COMMAND,    REGSUB_EXPANDED, REGSUB_LINE,$/;"	e	enum:Tcl_RegsubObjCmd::regsubobjoptions	file:
REGSUB_LINEANCHOR	generic/tclCmdMZ.c	/^	REGSUB_LINESTOP, REGSUB_LINEANCHOR, REGSUB_NOCASE,   REGSUB_START,$/;"	e	enum:Tcl_RegsubObjCmd::regsubobjoptions	file:
REGSUB_LINESTOP	generic/tclCmdMZ.c	/^	REGSUB_LINESTOP, REGSUB_LINEANCHOR, REGSUB_NOCASE,   REGSUB_START,$/;"	e	enum:Tcl_RegsubObjCmd::regsubobjoptions	file:
REGSUB_NOCASE	generic/tclCmdMZ.c	/^	REGSUB_LINESTOP, REGSUB_LINEANCHOR, REGSUB_NOCASE,   REGSUB_START,$/;"	e	enum:Tcl_RegsubObjCmd::regsubobjoptions	file:
REGSUB_START	generic/tclCmdMZ.c	/^	REGSUB_LINESTOP, REGSUB_LINEANCHOR, REGSUB_NOCASE,   REGSUB_START,$/;"	e	enum:Tcl_RegsubObjCmd::regsubobjoptions	file:
REGTYPE	compat/zlib/contrib/untgz/untgz.c	/^#define REGTYPE /;"	d	file:
REGVER	win/Makefile.in	/^REGVER			= @TCL_REG_MAJOR_VERSION@@TCL_REG_MINOR_VERSION@$/;"	m
REG_ADVANCED	generic/regex.h	/^#define	REG_ADVANCED	/;"	d
REG_ADVF	generic/regex.h	/^#define	REG_ADVF	/;"	d
REG_ASSERT	generic/regex.h	/^#define	REG_ASSERT	/;"	d
REG_ATOI	generic/regex.h	/^#define	REG_ATOI	/;"	d
REG_BADBR	generic/regex.h	/^#define	REG_BADBR	/;"	d
REG_BADOPT	generic/regex.h	/^#define	REG_BADOPT	/;"	d
REG_BADPAT	generic/regex.h	/^#define	REG_BADPAT	/;"	d
REG_BADRPT	generic/regex.h	/^#define	REG_BADRPT	/;"	d
REG_BASIC	generic/regex.h	/^#define	REG_BASIC	/;"	d
REG_BOSONLY	generic/regex.h	/^#define	REG_BOSONLY	/;"	d
REG_CANCEL	generic/regc_nfa.c	/^#define REG_CANCEL /;"	d	file:
REG_CREATE	win/tclWinReg.c	/^    REG_CREATE = 1$/;"	e	enum:OpenKeysFlags	file:
REG_DLL_FILE	win/Makefile.in	/^REG_DLL_FILE		= tcl9registry$(REGVER)${DLLSUFFIX}$/;"	m
REG_DUMP	generic/regex.h	/^#define	REG_DUMP	/;"	d
REG_EBRACE	generic/regex.h	/^#define	REG_EBRACE	/;"	d
REG_EBRACK	generic/regex.h	/^#define	REG_EBRACK	/;"	d
REG_ECOLLATE	generic/regex.h	/^#define	REG_ECOLLATE	/;"	d
REG_ECOLORS	generic/regex.h	/^#define	REG_ECOLORS	/;"	d
REG_ECTYPE	generic/regex.h	/^#define	REG_ECTYPE	/;"	d
REG_EESCAPE	generic/regex.h	/^#define	REG_EESCAPE	/;"	d
REG_EPAREN	generic/regex.h	/^#define	REG_EPAREN	/;"	d
REG_ERANGE	generic/regex.h	/^#define	REG_ERANGE	/;"	d
REG_ESPACE	generic/regex.h	/^#define	REG_ESPACE	/;"	d
REG_ESUBREG	generic/regex.h	/^#define	REG_ESUBREG	/;"	d
REG_ETOOBIG	generic/regex.h	/^#define	REG_ETOOBIG	/;"	d
REG_EXPANDED	generic/regex.h	/^#define	REG_EXPANDED	/;"	d
REG_EXPECT	generic/regex.h	/^#define	REG_EXPECT	/;"	d
REG_EXTENDED	generic/regex.h	/^#define	REG_EXTENDED	/;"	d
REG_FAKE	generic/regex.h	/^#define	REG_FAKE	/;"	d
REG_FTRACE	generic/regex.h	/^#define	REG_FTRACE	/;"	d
REG_ICASE	generic/regex.h	/^#define	REG_ICASE	/;"	d
REG_INVARG	generic/regex.h	/^#define	REG_INVARG	/;"	d
REG_ITOA	generic/regex.h	/^#define	REG_ITOA	/;"	d
REG_LIB_FILE	win/Makefile.in	/^REG_LIB_FILE		= @LIBPREFIX@tclregistry$(REGVER)${DLLSUFFIX}${LIBSUFFIX}$/;"	m
REG_MAX_COMPILE_SPACE	generic/regguts.h	/^#define REG_MAX_COMPILE_SPACE /;"	d
REG_MIXED	generic/regex.h	/^#define	REG_MIXED	/;"	d
REG_MTRACE	generic/regex.h	/^#define	REG_MTRACE	/;"	d
REG_NEWLINE	generic/regex.h	/^#define	REG_NEWLINE	/;"	d
REG_NLANCH	generic/regex.h	/^#define	REG_NLANCH	/;"	d
REG_NLSTOP	generic/regex.h	/^#define	REG_NLSTOP	/;"	d
REG_NOMATCH	generic/regex.h	/^#define	REG_NOMATCH	/;"	d
REG_NOSPEC	generic/regex.h	/^#define	REG_NOSPEC	/;"	d
REG_NOSUB	generic/regex.h	/^#define	REG_NOSUB	/;"	d
REG_NOTBOL	generic/regex.h	/^#define	REG_NOTBOL	/;"	d
REG_NOTEOL	generic/regex.h	/^#define	REG_NOTEOL	/;"	d
REG_OBJS	win/Makefile.in	/^REG_OBJS = tclWinReg.$(OBJEXT)$/;"	m
REG_OKAY	generic/regex.h	/^#define	REG_OKAY	/;"	d
REG_PEND	generic/regex.h	/^#define	REG_PEND	/;"	d
REG_PROGRESS	generic/regex.h	/^#define	REG_PROGRESS	/;"	d
REG_QUOTE	generic/regex.h	/^#define	REG_QUOTE	/;"	d
REG_SMALL	generic/regex.h	/^#define	REG_SMALL	/;"	d
REG_STARTEND	generic/regex.h	/^#define	REG_STARTEND	/;"	d
REG_UBACKREF	generic/regex.h	/^#define	REG_UBACKREF	/;"	d
REG_UBBS	generic/regex.h	/^#define	REG_UBBS	/;"	d
REG_UBOUNDS	generic/regex.h	/^#define	REG_UBOUNDS	/;"	d
REG_UBRACES	generic/regex.h	/^#define	REG_UBRACES	/;"	d
REG_UBSALNUM	generic/regex.h	/^#define	REG_UBSALNUM	/;"	d
REG_UEMPTYMATCH	generic/regex.h	/^#define	REG_UEMPTYMATCH	/;"	d
REG_UIMPOSSIBLE	generic/regex.h	/^#define	REG_UIMPOSSIBLE	/;"	d
REG_ULOCALE	generic/regex.h	/^#define	REG_ULOCALE	/;"	d
REG_ULOOKAHEAD	generic/regex.h	/^#define	REG_ULOOKAHEAD	/;"	d
REG_UNONPOSIX	generic/regex.h	/^#define	REG_UNONPOSIX	/;"	d
REG_UPBOTCH	generic/regex.h	/^#define	REG_UPBOTCH	/;"	d
REG_USHORTEST	generic/regex.h	/^#define	REG_USHORTEST	/;"	d
REG_UUNPORT	generic/regex.h	/^#define	REG_UUNPORT	/;"	d
REG_UUNSPEC	generic/regex.h	/^#define	REG_UUNSPEC	/;"	d
REMAGIC	generic/regguts.h	/^#define	REMAGIC	/;"	d
REMOVEDIRECTORYPROC	doc/FileSystem.3	/^.SS REMOVEDIRECTORYPROC$/;"	S	section:Filesystem""FILESYSTEM OPERATIONS
RENAMEFILEPROC	doc/FileSystem.3	/^.SS RENAMEFILEPROC$/;"	S	section:Filesystem""FILESYSTEM EFFICIENCY
REPARSE_DATA_BUFFER	win/tclWinFile.c	/^} REPARSE_DATA_BUFFER;$/;"	t	typeref:struct:_REPARSE_DATA_BUFFER	file:
REPARSE_MOUNTPOINT_HEADER_SIZE	win/tclWinFile.c	/^#define REPARSE_MOUNTPOINT_HEADER_SIZE	/;"	d	file:
REPLACE_OP	compat/zlib/examples/gzlog.c	/^#define REPLACE_OP /;"	d	file:
REPLACING THE NOTIFIER	doc/Notifier.3	/^.SH "REPLACING THE NOTIFIER"$/;"	s	title:Notifier
REPORTING PROBLEMS	compat/zlib/zlib.3	/^.SH "REPORTING PROBLEMS"$/;"	s	title:ZLIB
REPOST	tests/httpTestScript.tcl	/^proc httpTestScript::REPOST {b} {$/;"	p	namespace:httpTestScript
REPZ_11_138	compat/zlib/trees.c	/^#define REPZ_11_138 /;"	d	file:
REPZ_3_10	compat/zlib/trees.c	/^#define REPZ_3_10 /;"	d	file:
REP_3_6	compat/zlib/trees.c	/^#define REP_3_6 /;"	d	file:
REQUIRED_METHODS	generic/tclIORChan.c	/^#define REQUIRED_METHODS /;"	d	file:
REQUIRED_METHODS	generic/tclIORTrans.c	/^#define REQUIRED_METHODS /;"	d	file:
RES	win/Makefile.in	/^RES		= @RES@$/;"	m
RES	win/configure.ac	/^AC_SUBST(RES)$/;"	s
RESOLVER_KEY	generic/tclTest.c	/^#define RESOLVER_KEY /;"	d	file:
RESTORE	compat/zlib/infback.c	/^#define RESTORE(/;"	d	file:
RESTORE	compat/zlib/inflate.c	/^#define RESTORE(/;"	d	file:
RESTORE_CONTEXT	generic/tclBasic.c	/^#define RESTORE_CONTEXT(/;"	d	file:
RESTRICTIONS	doc/TraceVar.3	/^.SH "RESTRICTIONS"$/;"	s	title:Tcl_TraceVar
RET	generic/regc_lex.c	/^#define	RET(/;"	d	file:
RETV	generic/regc_lex.c	/^#define	RETV(/;"	d	file:
RIGHT_SHIFT	generic/tclCompExpr.c	/^#define RIGHT_SHIFT	/;"	d	file:
RINGBUFFER_ASSERT	win/tclWinConsole.c	/^#define RINGBUFFER_ASSERT(/;"	d	file:
RLE	compat/zlib/contrib/ada/zlib.ads	/^   RLE              : constant Strategy_Type := 3;$/;"	n	packspec:ZLib	file:
RLE	compat/zlib/contrib/ada/zlib.ads	/^   RLE              : constant Strategy_Type;$/;"	n	packspec:ZLib
RM	win/Makefile.in	/^RM		= rm -f$/;"	m
RMAGIC	generic/tclAlloc.c	/^#define RMAGIC	/;"	d	file:
RMDIR	win/Makefile.in	/^RMDIR		= rm -rf$/;"	m
RODDENBERRY	generic/tclDate.h	/^#define RODDENBERRY	/;"	d
ROOM	compat/zlib/contrib/infback9/infback9.c	/^#define ROOM(/;"	d	file:
ROOM	compat/zlib/infback.c	/^#define ROOM(/;"	d	file:
ROOT_CLASS	generic/tclOOInt.h	/^    ROOT_CLASS = 0x8000,	\/* Flag to say that this object is the root$/;"	e	enum:ObjectFlags
ROOT_DIR	win/Makefile.in	/^ROOT_DIR		= @srcdir@\/..$/;"	m
ROOT_DIR_NATIVE	win/Makefile.in	/^ROOT_DIR_NATIVE		= $(shell $(CYGPATH) '$(ROOT_DIR)')$/;"	m
ROOT_DIR_WIN_NATIVE	win/Makefile.in	/^ROOT_DIR_WIN_NATIVE	= $(shell cd '$(ROOT_DIR)' ; pwd -W 2>\/dev\/null || pwd -P)$/;"	m
ROOT_OBJECT	generic/tclOOInt.h	/^    ROOT_OBJECT = 0x1000,	\/* Flag to say that this object is the root of$/;"	e	enum:ObjectFlags
RPM_PLATFORMS	unix/Makefile.in	/^RPM_PLATFORMS = i386$/;"	m
RSLOP	generic/tclAlloc.c	/^#define	RSLOP	/;"	d	file:
RTLD_GLOBAL	compat/dlfcn.h	/^#define RTLD_GLOBAL	/;"	d
RTLD_LAZY	compat/dlfcn.h	/^#define RTLD_LAZY	/;"	d
RTLD_LOCAL	unix/tclLoadDl.c	/^#   define RTLD_LOCAL /;"	d	file:
RTLD_NOW	compat/dlfcn.h	/^#define RTLD_NOW	/;"	d
RTLD_NOW	unix/tclLoadDl.c	/^#   define RTLD_NOW /;"	d	file:
RTMKEY	generic/tclIORTrans.c	/^#define RTMKEY /;"	d	file:
RUN	library/platform/shell.tcl	/^proc ::platform::shell::RUN {shell code} {$/;"	p	namespace:::platform::shell
R_OK	unix/tclUnixPort.h	/^#   define R_OK	/;"	d
R_OK	win/tclWinPort.h	/^#    define R_OK /;"	d
Raise_Error	compat/zlib/contrib/ada/zlib.adb	/^   procedure Raise_Error (Message : in String) is$/;"	r	package:ZLib	file:
Raise_Error	compat/zlib/contrib/ada/zlib.adb	/^   procedure Raise_Error (Message : in String);$/;"	R	package:ZLib	file:
Raise_Error	compat/zlib/contrib/ada/zlib.adb	/^   procedure Raise_Error (Stream : in Z_Stream) is$/;"	r	package:ZLib	file:
Raise_Error	compat/zlib/contrib/ada/zlib.adb	/^   procedure Raise_Error (Stream : in Z_Stream);$/;"	R	package:ZLib	file:
RandomChar	generic/tclZipfs.c	/^RandomChar($/;"	f	typeref:typename:int	file:
Random_Elements	compat/zlib/contrib/ada/mtest.adb	/^   package Random_Elements is$/;"	P	subprogram:MTest	file:
Random_Elements	compat/zlib/contrib/ada/read.adb	/^   package Random_Elements is new$/;"	P	subprogram:Read	file:
Random_Elements	compat/zlib/contrib/ada/test.adb	/^      package Random_Elements is$/;"	P	subprogram:Generate_File	file:
Range	generic/tclScan.c	/^} Range;$/;"	t	typeref:struct:__anon0c1044aa0108	file:
RangeKeywordArg	generic/tclCmdIL.c	/^     NoneArg, NumericArg, RangeKeywordArg, ErrArg, LastArg = 8$/;"	e	enum:__anond5eb1cce0503	file:
ReInit	library/http/http.tcl	/^proc http::ReInit {token} {$/;"	p	namespace:http
Read	compat/zlib/contrib/ada/read.adb	/^   procedure Read is new ZLib.Read$/;"	r	subprogram:Read	file:
Read	compat/zlib/contrib/ada/read.adb	/^   procedure Read$/;"	R	subprogram:Read	file:
Read	compat/zlib/contrib/ada/read.adb	/^   procedure Read$/;"	r	subprogram:Read	file:
Read	compat/zlib/contrib/ada/read.adb	/^procedure Read is$/;"	r
Read	compat/zlib/contrib/ada/zlib-streams.adb	/^      procedure Read is new ZLib.Read$/;"	r	subprogram:Read	file:
Read	compat/zlib/contrib/ada/zlib-streams.adb	/^      procedure Read$/;"	R	subprogram:Read	file:
Read	compat/zlib/contrib/ada/zlib-streams.adb	/^      procedure Read$/;"	r	subprogram:Read	file:
Read	compat/zlib/contrib/ada/zlib-streams.adb	/^   procedure Read$/;"	r	package:ZLib.Streams	file:
Read	compat/zlib/contrib/ada/zlib-streams.ads	/^   procedure Read$/;"	R	packspec:ZLib.Streams
Read	compat/zlib/contrib/ada/zlib.adb	/^   procedure Read$/;"	r	package:ZLib	file:
Read	compat/zlib/contrib/ada/zlib.ads	/^      with procedure Read$/;"	f	subprogspec:Write	file:
Read	compat/zlib/contrib/ada/zlib.ads	/^   procedure Read$/;"	R	packspec:ZLib
Read	compat/zlib/contrib/delphi/ZLib.pas	/^    function Read(var Buffer; Count: Longint): Longint; override;$/;"	f	typeref:typename:Longint
Read	compat/zlib/contrib/dotzlib/DotZLib/GZipStream.cs	/^        public override int Read(byte[] buffer, int offset, int count)$/;"	m	class:DotZLib.GZipStream
ReadAllEnsembleOptions	generic/tclEnsemble.c	/^ReadAllEnsembleOptions($/;"	f	typeref:typename:int	file:
ReadByte	compat/zlib/contrib/dotzlib/DotZLib/GZipStream.cs	/^        public override int ReadByte()$/;"	m	class:DotZLib.GZipStream
ReadBytes	generic/tclIO.c	/^ReadBytes($/;"	f	typeref:typename:int	file:
ReadChars	generic/tclIO.c	/^ReadChars($/;"	f	typeref:typename:int	file:
ReadConsoleChars	win/tclWinConsole.c	/^ReadConsoleChars($/;"	f	typeref:typename:DWORD	file:
ReadFileMemory	compat/zlib/contrib/testzlib/testzlib.c	/^int ReadFileMemory(const char* filename,long* plFileSize,unsigned char** pFilePtr)$/;"	f	typeref:typename:int
ReadFromPipe	win/nmakehlp.c	/^ReadFromPipe($/;"	f	typeref:typename:DWORD WINAPI	file:
ReadOneEnsembleOption	generic/tclEnsemble.c	/^ReadOneEnsembleOption($/;"	f	typeref:typename:int	file:
ReadProperty	generic/tclOOProp.c	/^ReadProperty($/;"	f	typeref:typename:int	file:
ReadTraced	generic/tclExecute.c	/^#define ReadTraced(/;"	d	file:
ReadZoneinfoFile	library/clock.tcl	/^proc ::tcl::clock::ReadZoneinfoFile {fileName fname} {$/;"	p	namespace:::tcl::clock
ReadZoneinfoFile	library/clockclassic.tcl	/^proc ReadZoneinfoFile {fileName fname} {$/;"	p
Read_Buffer	compat/zlib/contrib/ada/mtest.adb	/^      procedure Read_Buffer$/;"	R	task:Test_Task	file:
Read_Buffer	compat/zlib/contrib/ada/mtest.adb	/^      procedure Read_Buffer$/;"	r	task:Test_Task	file:
Read_Buffer	compat/zlib/contrib/ada/read.adb	/^   Read_Buffer : Stream_Element_Array (1 .. 2048);$/;"	v	subprogram:Read	file:
Read_First	compat/zlib/contrib/ada/read.adb	/^   Read_First  : Stream_Element_Offset;$/;"	v	subprogram:Read	file:
Read_Last	compat/zlib/contrib/ada/read.adb	/^   Read_Last   : Stream_Element_Offset;$/;"	v	subprogram:Read	file:
Read_Total_In	compat/zlib/contrib/ada/zlib-streams.adb	/^   function Read_Total_In (Stream : in Stream_Type) return Count is$/;"	r	package:ZLib.Streams	file:
Read_Total_In	compat/zlib/contrib/ada/zlib-streams.ads	/^   function Read_Total_In (Stream : in Stream_Type) return Count;$/;"	R	packspec:ZLib.Streams
Read_Total_Out	compat/zlib/contrib/ada/zlib-streams.adb	/^   function Read_Total_Out (Stream : in Stream_Type) return Count is$/;"	r	package:ZLib.Streams	file:
Read_Total_Out	compat/zlib/contrib/ada/zlib-streams.ads	/^   function Read_Total_Out (Stream : in Stream_Type) return Count;$/;"	R	packspec:ZLib.Streams
Reader	compat/zlib/contrib/ada/zlib-streams.ads	/^      Reader     : Filter_Type;$/;"	c	type:Stream_Type	file:
Realpath	unix/tclUnixFCmd.c	/^#   define Realpath	/;"	d	file:
Realpath	unix/tclUnixFCmd.c	/^Realpath($/;"	f	typeref:typename:char *
RebuildLiteralTable	generic/tclLiteral.c	/^RebuildLiteralTable($/;"	f	typeref:typename:void	file:
RebuildTable	generic/tclHash.c	/^RebuildTable($/;"	f	typeref:typename:void	file:
ReceiveResponse	library/http/http.tcl	/^proc http::ReceiveResponse {token} {$/;"	p	namespace:http
RecomputeClassCacheFlag	generic/tclOODefineCmds.c	/^RecomputeClassCacheFlag($/;"	f	typeref:typename:void	file:
RecordByteCodeStats	generic/tclCompile.c	/^RecordByteCodeStats($/;"	f	typeref:typename:void
RecursiveDeleteKey	win/tclWinReg.c	/^RecursiveDeleteKey($/;"	f	typeref:typename:DWORD	file:
RecycleBuffer	generic/tclIO.c	/^RecycleBuffer($/;"	f	typeref:typename:void	file:
Reference	generic/tclPreserve.c	/^} Reference;$/;"	t	typeref:struct:__anone9498b710108	file:
RefineApproximation	generic/tclStrToD.c	/^RefineApproximation($/;"	f	typeref:typename:double	file:
ReflectBlock	generic/tclIORChan.c	/^ReflectBlock($/;"	f	typeref:typename:int	file:
ReflectBlock	generic/tclIORTrans.c	/^ReflectBlock($/;"	f	typeref:typename:int	file:
ReflectClose	generic/tclIORChan.c	/^ReflectClose($/;"	f	typeref:typename:int	file:
ReflectClose	generic/tclIORTrans.c	/^ReflectClose($/;"	f	typeref:typename:int	file:
ReflectEvent	generic/tclIORChan.c	/^} ReflectEvent;$/;"	t	typeref:struct:__anon92d8dd290908	file:
ReflectEventDelete	generic/tclIORChan.c	/^ReflectEventDelete($/;"	f	typeref:typename:int	file:
ReflectEventRun	generic/tclIORChan.c	/^ReflectEventRun($/;"	f	typeref:typename:int	file:
ReflectGetOption	generic/tclIORChan.c	/^ReflectGetOption($/;"	f	typeref:typename:int	file:
ReflectGetOption	generic/tclIORTrans.c	/^ReflectGetOption($/;"	f	typeref:typename:int	file:
ReflectHandle	generic/tclIORTrans.c	/^ReflectHandle($/;"	f	typeref:typename:int	file:
ReflectInput	generic/tclIORChan.c	/^ReflectInput($/;"	f	typeref:typename:int	file:
ReflectInput	generic/tclIORTrans.c	/^ReflectInput($/;"	f	typeref:typename:int	file:
ReflectNotify	generic/tclIORTrans.c	/^ReflectNotify($/;"	f	typeref:typename:int	file:
ReflectOutput	generic/tclIORChan.c	/^ReflectOutput($/;"	f	typeref:typename:int	file:
ReflectOutput	generic/tclIORTrans.c	/^ReflectOutput($/;"	f	typeref:typename:int	file:
ReflectSeekWide	generic/tclIORChan.c	/^ReflectSeekWide($/;"	f	typeref:typename:long long	file:
ReflectSeekWide	generic/tclIORTrans.c	/^ReflectSeekWide($/;"	f	typeref:typename:long long	file:
ReflectSetOption	generic/tclIORChan.c	/^ReflectSetOption($/;"	f	typeref:typename:int	file:
ReflectSetOption	generic/tclIORTrans.c	/^ReflectSetOption($/;"	f	typeref:typename:int	file:
ReflectThread	generic/tclIORChan.c	/^ReflectThread($/;"	f	typeref:typename:void	file:
ReflectTruncate	generic/tclIORChan.c	/^ReflectTruncate($/;"	f	typeref:typename:int	file:
ReflectWatch	generic/tclIORChan.c	/^ReflectWatch($/;"	f	typeref:typename:void	file:
ReflectWatch	generic/tclIORTrans.c	/^ReflectWatch($/;"	f	typeref:typename:void	file:
ReflectedChannel	generic/tclIORChan.c	/^} ReflectedChannel;$/;"	t	typeref:struct:__anon92d8dd290108	file:
ReflectedChannelMap	generic/tclIORChan.c	/^} ReflectedChannelMap;$/;"	t	typeref:struct:__anon92d8dd290208	file:
ReflectedTransform	generic/tclIORTrans.c	/^} ReflectedTransform;$/;"	t	typeref:struct:__anon21e740770208	file:
ReflectedTransformMap	generic/tclIORTrans.c	/^} ReflectedTransformMap;$/;"	t	typeref:struct:__anon21e740770308	file:
RefreshProcessInfo	generic/tclProcess.c	/^RefreshProcessInfo($/;"	f	typeref:typename:int
RegExpExecUniChar	generic/tclRegexp.c	/^RegExpExecUniChar($/;"	f	typeref:typename:int	file:
RegexpGetInternalRep	generic/tclRegexp.c	/^#define RegexpGetInternalRep(/;"	d	file:
RegexpSetInternalRep	generic/tclRegexp.c	/^#define RegexpSetInternalRep(/;"	d	file:
RegisterCommand	generic/tclTestProcBodyObj.c	/^RegisterCommand($/;"	f	typeref:typename:int	file:
RegisterTcpServerInterpCleanup	generic/tclIOCmd.c	/^RegisterTcpServerInterpCleanup($/;"	f	typeref:typename:void	file:
RegisteredInterp	win/tclWinDde.c	/^typedef struct RegisteredInterp {$/;"	s	file:
RegisteredInterp	win/tclWinDde.c	/^} RegisteredInterp;$/;"	t	typeref:struct:RegisteredInterp	file:
RegistryObjCmd	win/tclWinReg.c	/^RegistryObjCmd($/;"	f	typeref:typename:int	file:
Registry_Init	win/tclWinReg.c	/^Registry_Init($/;"	f	typeref:typename:int
Registry_Unload	win/tclWinReg.c	/^Registry_Unload($/;"	f	typeref:typename:int
RejectExcessColons	library/safe.tcl	/^proc ::safe::RejectExcessColons {child} {$/;"	p	namespace:::safe
Release	unix/tcl.spec	/^Release:       2$/;"	t
ReleaseChannelBuffer	generic/tclIO.c	/^ReleaseChannelBuffer($/;"	f	typeref:typename:void	file:
ReleaseCharSet	generic/tclScan.c	/^ReleaseCharSet($/;"	f	typeref:typename:void	file:
ReleaseCmdWordData	generic/tclCompile.c	/^ReleaseCmdWordData($/;"	f	typeref:typename:void	file:
ReleaseData	generic/tclIOGT.c	/^ReleaseData($/;"	f	typeref:typename:void	file:
ReleaseDictIterator	generic/tclExecute.c	/^ReleaseDictIterator($/;"	f	typeref:typename:void	file:
ReleaseKeys	generic/tclResult.c	/^ReleaseKeys($/;"	f	typeref:typename:void	file:
ReleasePropertyList	generic/tclOOProp.c	/^ReleasePropertyList($/;"	f	typeref:typename:void	file:
ReleasePropertyNameCache	generic/tclOOProp.c	/^ReleasePropertyNameCache($/;"	f	typeref:typename:void	file:
RememberSyncObject	generic/tclThread.c	/^RememberSyncObject($/;"	f	typeref:typename:void	file:
RemoveClass	generic/tclOO.c	/^RemoveClass($/;"	f	typeref:typename:void	file:
RemoveItem	generic/tclOO.c	/^#define RemoveItem(/;"	d	file:
RemoveObject	generic/tclOO.c	/^RemoveObject($/;"	f	typeref:typename:void	file:
RemovePoint	generic/tclIO.c	/^#define RemovePoint(/;"	d	file:
RenameDeleteMethod	generic/tclOODefineCmds.c	/^RenameDeleteMethod($/;"	f	typeref:typename:int	file:
RenderDeclarerName	generic/tclOOMethod.c	/^RenderDeclarerName($/;"	f	typeref:typename:Tcl_Obj *	file:
RenderMethodName	generic/tclOOMethod.c	/^RenderMethodName($/;"	f	typeref:typename:Tcl_Obj *	file:
ReparseDataLength	win/tclWinFile.c	/^    WORD ReparseDataLength;$/;"	m	struct:_REPARSE_DATA_BUFFER	typeref:typename:WORD	file:
ReparseTag	win/tclWinFile.c	/^    DWORD ReparseTag;$/;"	m	struct:_REPARSE_DATA_BUFFER	typeref:typename:DWORD	file:
ReplaceString	generic/tclEnv.c	/^ReplaceString($/;"	f	typeref:typename:void	file:
ReplayCore	library/http/http.tcl	/^proc http::ReplayCore {newQueue} {$/;"	p	namespace:http
ReplayIfClose	library/http/http.tcl	/^proc http::ReplayIfClose {Wstate Rqueue Wqueue} {$/;"	p	namespace:http
ReplayIfDead	library/http/http.tcl	/^proc http::ReplayIfDead {token doing} {$/;"	p	namespace:http
ReportUndefinedLabel	generic/tclAssembly.c	/^ReportUndefinedLabel($/;"	f	typeref:typename:void	file:
RequestAfter	tests/httpTestScript.tcl	/^proc httpTestScript::RequestAfter {uriCode validate query args} {$/;"	p	namespace:httpTestScript
Requester	tests/httpTestScript.tcl	/^proc httpTestScript::Requester {uriCode keepAlive validate query args} {$/;"	p	namespace:httpTestScript
Require	generic/tclPkg.c	/^typedef struct Require {$/;"	s	file:
Require	generic/tclPkg.c	/^} Require;$/;"	t	typeref:struct:Require	file:
RequireProcArgs	generic/tclPkg.c	/^typedef struct RequireProcArgs {$/;"	s	file:
RequireProcArgs	generic/tclPkg.c	/^} RequireProcArgs;$/;"	t	typeref:struct:RequireProcArgs	file:
RequiredPrecision	generic/tclStrToD.c	/^RequiredPrecision($/;"	f	typeref:typename:int	file:
RequirementSatisfied	generic/tclPkg.c	/^RequirementSatisfied($/;"	f	typeref:typename:int	file:
Reserved	win/tclWinFile.c	/^    WORD Reserved;$/;"	m	struct:_REPARSE_DATA_BUFFER	typeref:typename:WORD	file:
Reset	compat/zlib/contrib/ada/read.adb	/^   procedure Reset is$/;"	r	subprogram:Read	file:
Reset	compat/zlib/contrib/ada/read.adb	/^   procedure Reset;$/;"	R	subprogram:Read	file:
Reset	compat/zlib/contrib/dotzlib/DotZLib/ChecksumImpl.cs	/^        public void Reset() { _current = 0; }$/;"	m	class:DotZLib.ChecksumGeneratorBase
Reset	compat/zlib/contrib/dotzlib/DotZLib/DotZLib.cs	/^        void Reset();$/;"	m	interface:DotZLib.ChecksumGenerator
ResetCounterSamples	win/tclWinTime.c	/^ResetCounterSamples($/;"	f	typeref:typename:void	file:
ResetFilterFlags	generic/tclOOCall.c	/^ResetFilterFlags($/;"	f	typeref:typename:int	file:
ResetFilterFlags	generic/tclOOCall.c	/^static Tcl_NRPostProc	ResetFilterFlags;$/;"	v	typeref:typename:Tcl_NRPostProc	file:
ResetFlag	generic/tclIO.c	/^#define ResetFlag(/;"	d	file:
ResetObjResult	generic/tclResult.c	/^ResetObjResult($/;"	f	typeref:typename:void	file:
ResetVisitedBasicBlocks	generic/tclAssembly.c	/^ResetVisitedBasicBlocks($/;"	f	typeref:typename:void	file:
ResolveClass	generic/tclOODefineCmds.c	/^ResolveClass($/;"	f	typeref:typename:int	file:
ResolveJumpTableTargets	generic/tclAssembly.c	/^ResolveJumpTableTargets($/;"	f	typeref:typename:void	file:
ResolvedChanName	generic/tclIO.c	/^typedef struct ResolvedChanName {$/;"	s	file:
ResolvedChanName	generic/tclIO.c	/^} ResolvedChanName;$/;"	t	typeref:struct:ResolvedChanName	file:
ResolvedCmdName	generic/tclObj.c	/^typedef struct ResolvedCmdName {$/;"	s	file:
ResolvedCmdName	generic/tclObj.c	/^} ResolvedCmdName;$/;"	t	typeref:struct:ResolvedCmdName	file:
ResolvedNsName	generic/tclNamesp.c	/^} ResolvedNsName;$/;"	t	typeref:struct:__anon357794090208	file:
ResolverScheme	generic/tclInt.h	/^typedef struct ResolverScheme {$/;"	s
ResolverScheme	generic/tclInt.h	/^} ResolverScheme;$/;"	t	typeref:struct:ResolverScheme
Rest_First	compat/zlib/contrib/ada/zlib-streams.ads	/^      Rest_First : Stream_Element_Offset;$/;"	c	type:Stream_Type	file:
Rest_Last	compat/zlib/contrib/ada/zlib-streams.ads	/^      Rest_Last  : Stream_Element_Offset;$/;"	c	type:Stream_Type	file:
RestoreEmbeddedExceptionRanges	generic/tclAssembly.c	/^RestoreEmbeddedExceptionRanges($/;"	f	typeref:typename:void	file:
RestoreSignals	unix/tclUnixPipe.c	/^RestoreSignals(void)$/;"	f	typeref:typename:void	file:
ResultAdd	generic/tclIOGT.c	/^ResultAdd($/;"	f	typeref:typename:void	file:
ResultAdd	generic/tclIORTrans.c	/^ResultAdd($/;"	f	typeref:typename:void	file:
ResultBuffer	generic/tclIOGT.c	/^struct ResultBuffer {$/;"	s	file:
ResultBuffer	generic/tclIOGT.c	/^typedef struct ResultBuffer ResultBuffer;$/;"	t	typeref:struct:ResultBuffer	file:
ResultBuffer	generic/tclIORTrans.c	/^} ResultBuffer;$/;"	t	typeref:struct:__anon21e740770108	file:
ResultClear	generic/tclIOGT.c	/^ResultClear($/;"	f	typeref:typename:void	file:
ResultClear	generic/tclIORTrans.c	/^ResultClear($/;"	f	typeref:typename:void	file:
ResultCopy	generic/tclIOGT.c	/^ResultCopy($/;"	f	typeref:typename:size_t	file:
ResultCopy	generic/tclIORTrans.c	/^ResultCopy($/;"	f	typeref:typename:size_t	file:
ResultDecompress	generic/tclZlib.c	/^ResultDecompress($/;"	f	typeref:typename:int	file:
ResultEmpty	generic/tclIOGT.c	/^ResultEmpty($/;"	f	typeref:typename:int	file:
ResultInit	generic/tclIOGT.c	/^ResultInit($/;"	f	typeref:typename:void	file:
ResultInit	generic/tclIORTrans.c	/^ResultInit($/;"	f	typeref:typename:void	file:
ResultLength	generic/tclIORTrans.c	/^#define ResultLength(/;"	d	file:
Return_Code	compat/zlib/contrib/ada/zlib.adb	/^   Return_Code : constant array (Thin.Int range <>) of Return_Code_Enum$/;"	n	package:ZLib	file:
Return_Code_Enum	compat/zlib/contrib/ada/zlib.adb	/^   type Return_Code_Enum is$/;"	t	package:ZLib	file:
ReverseBytes	generic/tclStringObj.c	/^ReverseBytes($/;"	f	typeref:typename:void	file:
RewindCoroutine	generic/tclBasic.c	/^RewindCoroutine($/;"	f	typeref:typename:int	file:
RewindCoroutineCallback	generic/tclBasic.c	/^RewindCoroutineCallback($/;"	f	typeref:typename:int	file:
RewindCoroutineCallback	generic/tclBasic.c	/^static Tcl_NRPostProc	RewindCoroutineCallback;$/;"	v	typeref:typename:Tcl_NRPostProc	file:
Right_Buffer	compat/zlib/contrib/ada/test.adb	/^      Left_Buffer, Right_Buffer : Stream_Element_Array (0 .. 16#FFF#);$/;"	v	subprogram:Compare_Streams	file:
Right_File	compat/zlib/contrib/ada/test.adb	/^      Left_File, Right_File : File_Type;$/;"	v	subprogram:Compare_Files	file:
Right_Last	compat/zlib/contrib/ada/test.adb	/^      Left_Last, Right_Last : Stream_Element_Offset;$/;"	v	subprogram:Compare_Streams	file:
RingBuffer	win/tclWinConsole.c	/^typedef struct RingBuffer {$/;"	s	file:
RingBuffer	win/tclWinConsole.c	/^} RingBuffer;$/;"	t	typeref:struct:RingBuffer	file:
RingBufferCheck	win/tclWinConsole.c	/^RingBufferCheck($/;"	f	typeref:typename:int	file:
RingBufferClear	win/tclWinConsole.c	/^RingBufferClear($/;"	f	typeref:typename:void	file:
RingBufferHasFreeSpace	win/tclWinConsole.c	/^#define RingBufferHasFreeSpace(/;"	d	file:
RingBufferIn	win/tclWinConsole.c	/^RingBufferIn($/;"	f	typeref:typename:Tcl_Size	file:
RingBufferInit	win/tclWinConsole.c	/^RingBufferInit($/;"	f	typeref:typename:void	file:
RingBufferLength	win/tclWinConsole.c	/^#define RingBufferLength(/;"	d	file:
RingBufferOut	win/tclWinConsole.c	/^RingBufferOut($/;"	f	typeref:typename:Tcl_Size	file:
RunLimitHandlers	generic/tclInterp.c	/^RunLimitHandlers($/;"	f	typeref:typename:void	file:
Rune	tools/encoding/txt2enc.c	/^typedef unsigned short Rune;$/;"	t	typeref:typename:unsigned short	file:
SAFE_INTERP	generic/tclInt.h	/^#define SAFE_INTERP	/;"	d
SAMPLES	win/tclWinTime.c	/^#define SAMPLES	/;"	d	file:
SATISFIED	generic/regcomp.c	/^#define	SATISFIED	/;"	d	file:
SAVE_CONTEXT	generic/tclBasic.c	/^#define SAVE_CONTEXT(/;"	d	file:
SBEGIN	generic/regcomp.c	/^#define	SBEGIN	/;"	d	file:
SCAN_BIG	generic/tclScan.c	/^    SCAN_BIG = 0x800		\/* Asked for a bignum value. *\/$/;"	e	enum:ScanFlags	file:
SCAN_LONGER	generic/tclScan.c	/^    SCAN_LONGER = 0x400,	\/* Asked for a wide value. *\/$/;"	e	enum:ScanFlags	file:
SCAN_NOSKIP	generic/tclScan.c	/^    SCAN_NOSKIP = 0x1,		\/* Don't skip blanks. *\/$/;"	e	enum:ScanFlags	file:
SCAN_SUPPRESS	generic/tclScan.c	/^    SCAN_SUPPRESS = 0x2,	\/* Suppress assignment. *\/$/;"	e	enum:ScanFlags	file:
SCAN_UNSIGNED	generic/tclScan.c	/^    SCAN_UNSIGNED = 0x4,	\/* Read an unsigned value. *\/$/;"	e	enum:ScanFlags	file:
SCAN_WIDTH	generic/tclScan.c	/^    SCAN_WIDTH = 0x8,		\/* A width value was supplied. *\/$/;"	e	enum:ScanFlags	file:
SCOPE_FLAGS	generic/tclOOInt.h	/^#define SCOPE_FLAGS /;"	d
SCOPE_LOCALPRIVATE	generic/tclOOInfo.c	/^	SCOPE_LOCALPRIVATE$/;"	e	enum:InfoObjectMethodsCmd::Scopes	file:
SCOPE_PRIVATE	generic/tclOOInfo.c	/^	SCOPE_PRIVATE, SCOPE_PUBLIC, SCOPE_UNEXPORTED$/;"	e	enum:InfoClassMethodsCmd::Scopes	file:
SCOPE_PRIVATE	generic/tclOOInfo.c	/^	SCOPE_PRIVATE, SCOPE_PUBLIC, SCOPE_UNEXPORTED,$/;"	e	enum:InfoObjectMethodsCmd::Scopes	file:
SCOPE_PUBLIC	generic/tclOOInfo.c	/^	SCOPE_PRIVATE, SCOPE_PUBLIC, SCOPE_UNEXPORTED$/;"	e	enum:InfoClassMethodsCmd::Scopes	file:
SCOPE_PUBLIC	generic/tclOOInfo.c	/^	SCOPE_PRIVATE, SCOPE_PUBLIC, SCOPE_UNEXPORTED,$/;"	e	enum:InfoObjectMethodsCmd::Scopes	file:
SCOPE_UNEXPORTED	generic/tclOOInfo.c	/^	SCOPE_PRIVATE, SCOPE_PUBLIC, SCOPE_UNEXPORTED$/;"	e	enum:InfoClassMethodsCmd::Scopes	file:
SCOPE_UNEXPORTED	generic/tclOOInfo.c	/^	SCOPE_PRIVATE, SCOPE_PUBLIC, SCOPE_UNEXPORTED,$/;"	e	enum:InfoObjectMethodsCmd::Scopes	file:
SCRIPT	generic/tclCompExpr.c	/^#define SCRIPT	/;"	d	file:
SCRIPT FILES	doc/tclsh.1	/^.SH "SCRIPT FILES"$/;"	s	title:tclsh
SCRIPT-LEVEL ACCESS TO THREADS	doc/Thread.3	/^.SH "SCRIPT-LEVEL ACCESS TO THREADS"$/;"	s	title:Threads
SCRIPT_INSTALL_DIR	unix/Makefile.in	/^SCRIPT_INSTALL_DIR	= $(INSTALL_ROOT)$(TCL_LIBRARY)$/;"	m
SCRIPT_INSTALL_DIR	win/Makefile.in	/^SCRIPT_INSTALL_DIR	= $(INSTALL_ROOT)$(TCL_LIBRARY)$/;"	m
SCRIPT_INSTALL_DIR_NATIVE	win/Makefile.in	/^SCRIPT_INSTALL_DIR_NATIVE	= $(shell $(CYGPATH) '$(SCRIPT_INSTALL_DIR)')$/;"	m
SC_BLOCKING_STYLE	unix/tcl.m4	/^AC_DEFUN([SC_BLOCKING_STYLE], [$/;"	m
SC_BUILD_TCLSH	unix/tcl.m4	/^AC_DEFUN([SC_BUILD_TCLSH], [$/;"	m
SC_BUILD_TCLSH	win/tcl.m4	/^AC_DEFUN([SC_BUILD_TCLSH], [$/;"	m
SC_CONFIG_CFLAGS	unix/tcl.m4	/^AC_DEFUN([SC_CONFIG_CFLAGS], [$/;"	m
SC_CONFIG_CFLAGS	win/tcl.m4	/^AC_DEFUN([SC_CONFIG_CFLAGS], [$/;"	m
SC_CONFIG_MANPAGES	unix/tcl.m4	/^AC_DEFUN([SC_CONFIG_MANPAGES], [$/;"	m
SC_CONFIG_SYSTEM	unix/tcl.m4	/^AC_DEFUN([SC_CONFIG_SYSTEM], [$/;"	m
SC_EMBED_MANIFEST	win/tcl.m4	/^AC_DEFUN([SC_EMBED_MANIFEST], [$/;"	m
SC_ENABLE_FRAMEWORK	unix/tcl.m4	/^AC_DEFUN([SC_ENABLE_FRAMEWORK], [$/;"	m
SC_ENABLE_LANGINFO	unix/tcl.m4	/^AC_DEFUN([SC_ENABLE_LANGINFO], [$/;"	m
SC_ENABLE_SHARED	unix/tcl.m4	/^AC_DEFUN([SC_ENABLE_SHARED], [$/;"	m
SC_ENABLE_SHARED	win/tcl.m4	/^AC_DEFUN([SC_ENABLE_SHARED], [$/;"	m
SC_ENABLE_SYMBOLS	unix/tcl.m4	/^AC_DEFUN([SC_ENABLE_SYMBOLS], [$/;"	m
SC_ENABLE_SYMBOLS	win/tcl.m4	/^AC_DEFUN([SC_ENABLE_SYMBOLS], [$/;"	m
SC_LOAD_TCLCONFIG	unix/tcl.m4	/^AC_DEFUN([SC_LOAD_TCLCONFIG], [$/;"	m
SC_LOAD_TCLCONFIG	win/tcl.m4	/^AC_DEFUN([SC_LOAD_TCLCONFIG], [$/;"	m
SC_LOAD_TKCONFIG	unix/tcl.m4	/^AC_DEFUN([SC_LOAD_TKCONFIG], [$/;"	m
SC_LOAD_TKCONFIG	win/tcl.m4	/^AC_DEFUN([SC_LOAD_TKCONFIG], [$/;"	m
SC_MISSING_POSIX_HEADERS	unix/tcl.m4	/^AC_DEFUN([SC_MISSING_POSIX_HEADERS], [$/;"	m
SC_PATH_TCLCONFIG	unix/tcl.m4	/^AC_DEFUN([SC_PATH_TCLCONFIG], [$/;"	m
SC_PATH_TCLCONFIG	win/tcl.m4	/^AC_DEFUN([SC_PATH_TCLCONFIG], [$/;"	m
SC_PATH_TKCONFIG	unix/tcl.m4	/^AC_DEFUN([SC_PATH_TKCONFIG], [$/;"	m
SC_PATH_TKCONFIG	win/tcl.m4	/^AC_DEFUN([SC_PATH_TKCONFIG], [$/;"	m
SC_PATH_X	unix/tcl.m4	/^AC_DEFUN([SC_PATH_X], [$/;"	m
SC_PROG_TCLSH	unix/tcl.m4	/^AC_DEFUN([SC_PROG_TCLSH], [$/;"	m
SC_PROG_TCLSH	win/tcl.m4	/^AC_DEFUN([SC_PROG_TCLSH], [$/;"	m
SC_TCL_64BIT_FLAGS	unix/tcl.m4	/^AC_DEFUN([SC_TCL_64BIT_FLAGS], [$/;"	m
SC_TCL_CFG_ENCODING	unix/tcl.m4	/^AC_DEFUN([SC_TCL_CFG_ENCODING], [$/;"	m
SC_TCL_CFG_ENCODING	win/tcl.m4	/^AC_DEFUN([SC_TCL_CFG_ENCODING], [$/;"	m
SC_TCL_CHECK_BROKEN_FUNC	unix/tcl.m4	/^AC_DEFUN([SC_TCL_CHECK_BROKEN_FUNC],[$/;"	m
SC_TCL_EARLY_FLAG	unix/tcl.m4	/^AC_DEFUN([SC_TCL_EARLY_FLAG],[$/;"	m
SC_TCL_EARLY_FLAGS	unix/tcl.m4	/^AC_DEFUN([SC_TCL_EARLY_FLAGS],[$/;"	m
SC_TCL_GETGRGID_R	unix/tcl.m4	/^AC_DEFUN([SC_TCL_GETGRGID_R], [AC_CHECK_FUNC(getgrgid_r, [$/;"	m
SC_TCL_GETGRNAM_R	unix/tcl.m4	/^AC_DEFUN([SC_TCL_GETGRNAM_R], [AC_CHECK_FUNC(getgrnam_r, [$/;"	m
SC_TCL_GETHOSTBYADDR_R	unix/tcl.m4	/^AC_DEFUN([SC_TCL_GETHOSTBYADDR_R], [$/;"	m
SC_TCL_GETHOSTBYADDR_R_DECL	unix/tcl.m4	/^AC_DEFUN([SC_TCL_GETHOSTBYADDR_R_DECL], [AC_CHECK_DECLS(gethostbyaddr_r, [$/;"	m
SC_TCL_GETHOSTBYADDR_R_TYPE	unix/tcl.m4	/^AC_DEFUN([SC_TCL_GETHOSTBYADDR_R_TYPE], [AC_CHECK_FUNC(gethostbyaddr_r, [$/;"	m
SC_TCL_GETHOSTBYNAME_R	unix/tcl.m4	/^AC_DEFUN([SC_TCL_GETHOSTBYNAME_R], [$/;"	m
SC_TCL_GETHOSTBYNAME_R_DECL	unix/tcl.m4	/^AC_DEFUN([SC_TCL_GETHOSTBYNAME_R_DECL], [AC_CHECK_DECLS(gethostbyname_r, [$/;"	m
SC_TCL_GETHOSTBYNAME_R_TYPE	unix/tcl.m4	/^AC_DEFUN([SC_TCL_GETHOSTBYNAME_R_TYPE], [AC_CHECK_FUNC(gethostbyname_r, [$/;"	m
SC_TCL_GETPWNAM_R	unix/tcl.m4	/^AC_DEFUN([SC_TCL_GETPWNAM_R], [AC_CHECK_FUNC(getpwnam_r, [$/;"	m
SC_TCL_GETPWUID_R	unix/tcl.m4	/^AC_DEFUN([SC_TCL_GETPWUID_R], [AC_CHECK_FUNC(getpwuid_r, [$/;"	m
SC_TCL_IPV6	unix/tcl.m4	/^AC_DEFUN([SC_TCL_IPV6],[$/;"	m
SC_TCL_LINK_LIBS	unix/tcl.m4	/^AC_DEFUN([SC_TCL_LINK_LIBS], [$/;"	m
SC_TIME_HANDLER	unix/tcl.m4	/^AC_DEFUN([SC_TIME_HANDLER], [$/;"	m
SC_USE_CONFIG_HEADERS	macosx/configure.ac	/^m4_define(SC_USE_CONFIG_HEADERS)$/;"	d
SC_WITH_TCL	win/tcl.m4	/^AC_DEFUN([SC_WITH_TCL], [$/;"	m
SC_ZIPFS_SUPPORT	unix/tcl.m4	/^AC_DEFUN([SC_ZIPFS_SUPPORT], [$/;"	m
SC_ZIPFS_SUPPORT	win/tcl.m4	/^AC_DEFUN([SC_ZIPFS_SUPPORT], [$/;"	m
SECONDS_PER_DAY	generic/tclClockClassic.c	/^#define SECONDS_PER_DAY	/;"	d	file:
SECONDS_PER_DAY	generic/tclDate.h	/^#define SECONDS_PER_DAY	/;"	d
SECSPERDAY	generic/tclDateClassic.c	/^#define SECSPERDAY	/;"	d	file:
SEE	generic/regcomp.c	/^#define	SEE(/;"	d	file:
SEE ALSO	compat/zlib/contrib/minizip/miniunzip.1	/^.SH SEE ALSO$/;"	s	title:miniunzip
SEE ALSO	compat/zlib/contrib/minizip/minizip.1	/^.SH SEE ALSO$/;"	s	title:minizip
SEE ALSO	compat/zlib/zlib.3	/^.SH "SEE ALSO"$/;"	s	title:ZLIB
SEE ALSO	doc/Access.3	/^.SH "SEE ALSO"$/;"	s	title:Tcl_Access
SEE ALSO	doc/AddErrInfo.3	/^.SH "SEE ALSO"$/;"	s	title:Tcl_AddErrorInfo
SEE ALSO	doc/AppInit.3	/^.SH "SEE ALSO"$/;"	s	title:Tcl_AppInit
SEE ALSO	doc/BoolObj.3	/^.SH "SEE ALSO"$/;"	s	title:Tcl_BooleanObj
SEE ALSO	doc/ByteArrObj.3	/^.SH "SEE ALSO"$/;"	s	title:Tcl_ByteArrayObj
SEE ALSO	doc/CallDel.3	/^.SH "SEE ALSO"$/;"	s	title:Tcl_CallWhenDeleted
SEE ALSO	doc/Cancel.3	/^.SH "SEE ALSO"$/;"	s	title:Tcl_Cancel
SEE ALSO	doc/ChnlStack.3	/^.SH "SEE ALSO"$/;"	s	title:Tcl_StackChannel
SEE ALSO	doc/Class.3	/^.SH "SEE ALSO"$/;"	s	title:Tcl_Class
SEE ALSO	doc/Concat.3	/^.SH "SEE ALSO"$/;"	s	title:Tcl_Concat
SEE ALSO	doc/CrtAlias.3	/^.SH "SEE ALSO"$/;"	s	title:Tcl_CreateAlias
SEE ALSO	doc/CrtChannel.3	/^.SH "SEE ALSO"$/;"	s	title:Tcl_CreateChannel
SEE ALSO	doc/CrtChnlHdlr.3	/^.SH "SEE ALSO"$/;"	s	title:Tcl_CreateChannelHandler
SEE ALSO	doc/CrtCloseHdlr.3	/^.SH "SEE ALSO"$/;"	s	title:Tcl_CreateCloseHandler
SEE ALSO	doc/CrtCommand.3	/^.SH "SEE ALSO"$/;"	s	title:Tcl_CreateCommand
SEE ALSO	doc/CrtFileHdlr.3	/^.SH "SEE ALSO"$/;"	s	title:Tcl_CreateFileHandler
SEE ALSO	doc/CrtInterp.3	/^.SH "SEE ALSO"$/;"	s	title:Tcl_CreateInterp
SEE ALSO	doc/CrtObjCmd.3	/^.SH "SEE ALSO"$/;"	s	title:Tcl_CreateObjCommand
SEE ALSO	doc/CrtTimerHdlr.3	/^.SH "SEE ALSO"$/;"	s	title:Tcl_CreateTimerHandler
SEE ALSO	doc/CrtTrace.3	/^.SH "SEE ALSO"$/;"	s	title:Tcl_CreateTrace
SEE ALSO	doc/DictObj.3	/^.SH "SEE ALSO"$/;"	s	title:Tcl_DictObj
SEE ALSO	doc/DoWhenIdle.3	/^.SH "SEE ALSO"$/;"	s	title:Tcl_DoWhenIdle
SEE ALSO	doc/DoubleObj.3	/^.SH "SEE ALSO"$/;"	s	title:Tcl_DoubleObj
SEE ALSO	doc/DumpActiveMemory.3	/^.SH "SEE ALSO"$/;"	s	title:Tcl_DumpActiveMemory
SEE ALSO	doc/Encoding.3	/^.SH "SEE ALSO"$/;"	s	title:Tcl_GetEncoding
SEE ALSO	doc/Ensemble.3	/^.SH "SEE ALSO"$/;"	s	title:Tcl_Ensemble
SEE ALSO	doc/Environment.3	/^.SH "SEE ALSO"$/;"	s	title:Tcl_PutEnv
SEE ALSO	doc/Exit.3	/^.SH "SEE ALSO"$/;"	s	title:Tcl_Exit
SEE ALSO	doc/ExprLong.3	/^.SH "SEE ALSO"$/;"	s	title:Tcl_ExprLong
SEE ALSO	doc/ExprLongObj.3	/^.SH "SEE ALSO"$/;"	s	title:Tcl_ExprLongObj
SEE ALSO	doc/FileSystem.3	/^.SH "SEE ALSO"$/;"	s	title:Filesystem
SEE ALSO	doc/GetIndex.3	/^.SH "SEE ALSO"$/;"	s	title:Tcl_GetIndexFromObj
SEE ALSO	doc/GetStdChan.3	/^.SH "SEE ALSO"$/;"	s	title:Tcl_GetStdChannel
SEE ALSO	doc/GetTime.3	/^.SH "SEE ALSO"$/;"	s	title:Tcl_GetTime
SEE ALSO	doc/Hash.3	/^.SH "SEE ALSO"$/;"	s	title:Tcl_Hash
SEE ALSO	doc/Init.3	/^.SH "SEE ALSO"$/;"	s	title:Tcl_Init
SEE ALSO	doc/InitStubs.3	/^.SH "SEE ALSO"$/;"	s	title:Tcl_InitStubs
SEE ALSO	doc/IntObj.3	/^.SH "SEE ALSO"$/;"	s	title:Tcl_IntObj
SEE ALSO	doc/LinkVar.3	/^.SH "SEE ALSO"$/;"	s	title:Tcl_LinkVar
SEE ALSO	doc/ListObj.3	/^.SH "SEE ALSO"$/;"	s	title:Tcl_ListObj
SEE ALSO	doc/Load.3	/^.SH "SEE ALSO"$/;"	s	title:Load
SEE ALSO	doc/Method.3	/^.SH "SEE ALSO"$/;"	s	title:Tcl_Method
SEE ALSO	doc/NRE.3	/^.SH "SEE ALSO"$/;"	s	title:NRE
SEE ALSO	doc/Namespace.3	/^.SH "SEE ALSO"$/;"	s	title:Tcl_Namespace
SEE ALSO	doc/Notifier.3	/^.SH "SEE ALSO"$/;"	s	title:Notifier
SEE ALSO	doc/Number.3	/^.SH "SEE ALSO"$/;"	s	title:Tcl_GetNumber
SEE ALSO	doc/OOInitStubs.3	/^.SH "SEE ALSO"$/;"	s	title:Tcl_OOInitStubs
SEE ALSO	doc/Object.3	/^.SH "SEE ALSO"$/;"	s	title:Tcl_Obj
SEE ALSO	doc/ObjectType.3	/^.SH "SEE ALSO"$/;"	s	title:Tcl_ObjType
SEE ALSO	doc/OpenFileChnl.3	/^.SH "SEE ALSO"$/;"	s	title:Tcl_OpenFileChannel
SEE ALSO	doc/OpenTcp.3	/^.SH "SEE ALSO"$/;"	s	title:Tcl_OpenTcpClient
SEE ALSO	doc/Panic.3	/^.SH "SEE ALSO"$/;"	s	title:Tcl_Panic
SEE ALSO	doc/ParseArgs.3	/^.SH "SEE ALSO"$/;"	s	title:Tcl_ParseArgsObjv
SEE ALSO	doc/PkgRequire.3	/^.SH "SEE ALSO"$/;"	s	title:Tcl_PkgRequire
SEE ALSO	doc/Preserve.3	/^.SH "SEE ALSO"$/;"	s	title:Tcl_Preserve
SEE ALSO	doc/RecEvalObj.3	/^.SH "SEE ALSO"$/;"	s	title:Tcl_RecordAndEvalObj
SEE ALSO	doc/RecordEval.3	/^.SH "SEE ALSO"$/;"	s	title:Tcl_RecordAndEval
SEE ALSO	doc/RegExp.3	/^.SH "SEE ALSO"$/;"	s	title:Tcl_RegExpMatch
SEE ALSO	doc/SetChanErr.3	/^.SH "SEE ALSO"$/;"	s	title:Tcl_SetChannelError
SEE ALSO	doc/SetResult.3	/^.SH "SEE ALSO"$/;"	s	title:Tcl_SetResult
SEE ALSO	doc/SetVar.3	/^.SH "SEE ALSO"$/;"	s	title:Tcl_SetVar
SEE ALSO	doc/SplitList.3	/^.SH "SEE ALSO"$/;"	s	title:Tcl_SplitList
SEE ALSO	doc/StaticLibrary.3	/^.SH "SEE ALSO"$/;"	s	title:Tcl_StaticLibrary
SEE ALSO	doc/StdChannels.3	/^.SH "SEE ALSO"$/;"	s	title:Standard Channels
SEE ALSO	doc/StringObj.3	/^.SH "SEE ALSO"$/;"	s	title:Tcl_StringObj
SEE ALSO	doc/SubstObj.3	/^.SH "SEE ALSO"$/;"	s	title:Tcl_SubstObj
SEE ALSO	doc/TCL_MEM_DEBUG.3	/^.SH "SEE ALSO"$/;"	s	title:TCL_MEM_DEBUG
SEE ALSO	doc/TclZlib.3	/^.SH "SEE ALSO"$/;"	s	title:TclZlib
SEE ALSO	doc/Tcl_Main.3	/^.SH "SEE ALSO"$/;"	s	title:Tcl_Main
SEE ALSO	doc/Thread.3	/^.SH "SEE ALSO"$/;"	s	title:Threads
SEE ALSO	doc/TraceVar.3	/^.SH "SEE ALSO"$/;"	s	title:Tcl_TraceVar
SEE ALSO	doc/Translate.3	/^.SH "SEE ALSO"$/;"	s	title:Tcl_TranslateFileName
SEE ALSO	doc/WrongNumArgs.3	/^.SH "SEE ALSO"$/;"	s	title:Tcl_WrongNumArgs
SEE ALSO	doc/tclsh.1	/^.SH "SEE ALSO"$/;"	s	title:tclsh
SEE ALSO	doc/zipfs.3	/^.SH "SEE ALSO"$/;"	s	title:Tclzipfs
SEEK_CUR	compat/zlib/contrib/minizip/zip.c	/^#define SEEK_CUR /;"	d	file:
SEEK_CUR	compat/zlib/zconf.h	/^#  define SEEK_CUR /;"	d
SEEK_CUR	compat/zlib/zconf.h.in	/^#  define SEEK_CUR /;"	d	file:
SEEK_CUR	unix/tclUnixPort.h	/^#   define SEEK_CUR /;"	d
SEEK_END	compat/zlib/contrib/minizip/zip.c	/^#define SEEK_END /;"	d	file:
SEEK_END	compat/zlib/zconf.h	/^#  define SEEK_END /;"	d
SEEK_END	compat/zlib/zconf.h.in	/^#  define SEEK_END /;"	d	file:
SEEK_END	unix/tclUnixPort.h	/^#   define SEEK_END /;"	d
SEEK_SET	compat/zlib/contrib/minizip/zip.c	/^#define SEEK_SET /;"	d	file:
SEEK_SET	compat/zlib/zconf.h	/^#  define SEEK_SET /;"	d
SEEK_SET	compat/zlib/zconf.h.in	/^#  define SEEK_SET /;"	d	file:
SEEK_SET	unix/tclUnixPort.h	/^#   define SEEK_SET /;"	d
SELECT	win/tclWinSock.c	/^    SELECT = TRUE,		\/* Add socket to select. *\/$/;"	e	enum:SocketSelectOperations	file:
SELECT_MASK	unix/tclUnixPort.h	/^#	define SELECT_MASK	/;"	d
SELECT_MASK	unix/tclUnixPort.h	/^#   define SELECT_MASK	/;"	d
SELF_CALL	generic/tclOOBasic.c	/^	SELF_CALL, SELF_CALLER, SELF_CLASS, SELF_FILTER, SELF_METHOD, SELF_NS,$/;"	e	enum:TclOOSelfObjCmd::SelfCmds	file:
SELF_CALLER	generic/tclOOBasic.c	/^	SELF_CALL, SELF_CALLER, SELF_CLASS, SELF_FILTER, SELF_METHOD, SELF_NS,$/;"	e	enum:TclOOSelfObjCmd::SelfCmds	file:
SELF_CLASS	generic/tclOOBasic.c	/^	SELF_CALL, SELF_CALLER, SELF_CLASS, SELF_FILTER, SELF_METHOD, SELF_NS,$/;"	e	enum:TclOOSelfObjCmd::SelfCmds	file:
SELF_FILTER	generic/tclOOBasic.c	/^	SELF_CALL, SELF_CALLER, SELF_CLASS, SELF_FILTER, SELF_METHOD, SELF_NS,$/;"	e	enum:TclOOSelfObjCmd::SelfCmds	file:
SELF_METHOD	generic/tclOOBasic.c	/^	SELF_CALL, SELF_CALLER, SELF_CLASS, SELF_FILTER, SELF_METHOD, SELF_NS,$/;"	e	enum:TclOOSelfObjCmd::SelfCmds	file:
SELF_NEXT	generic/tclOOBasic.c	/^	SELF_NEXT, SELF_OBJECT, SELF_TARGET$/;"	e	enum:TclOOSelfObjCmd::SelfCmds	file:
SELF_NS	generic/tclOOBasic.c	/^	SELF_CALL, SELF_CALLER, SELF_CLASS, SELF_FILTER, SELF_METHOD, SELF_NS,$/;"	e	enum:TclOOSelfObjCmd::SelfCmds	file:
SELF_OBJECT	generic/tclOOBasic.c	/^	SELF_NEXT, SELF_OBJECT, SELF_TARGET$/;"	e	enum:TclOOSelfObjCmd::SelfCmds	file:
SELF_TARGET	generic/tclOOBasic.c	/^	SELF_NEXT, SELF_OBJECT, SELF_TARGET$/;"	e	enum:TclOOSelfObjCmd::SelfCmds	file:
SEND	generic/regcomp.c	/^#define	SEND	/;"	d	file:
SEPARATOR	compat/zlib/trees.c	/^#  define SEPARATOR(/;"	d	file:
SERIAL_ASYNC	win/tclWinSerial.c	/^#define SERIAL_ASYNC	/;"	d	file:
SERIAL_CLOSE_DISCARD	win/tclWinSerial.c	/^#define SERIAL_CLOSE_DISCARD /;"	d	file:
SERIAL_CLOSE_DRAIN	win/tclWinSerial.c	/^#define SERIAL_CLOSE_DRAIN /;"	d	file:
SERIAL_CLOSE_MASK	win/tclWinSerial.c	/^#define SERIAL_CLOSE_MASK /;"	d	file:
SERIAL_DEFAULT_BLOCKTIME	win/tclWinSerial.c	/^#define SERIAL_DEFAULT_BLOCKTIME /;"	d	file:
SERIAL_EOF	win/tclWinSerial.c	/^#define SERIAL_EOF	/;"	d	file:
SERIAL_ERROR	win/tclWinSerial.c	/^#define SERIAL_ERROR	/;"	d	file:
SERIAL_PENDING	win/tclWinSerial.c	/^#define SERIAL_PENDING	/;"	d	file:
SERIAL_READ_ERRORS	win/tclWinSerial.c	/^#define SERIAL_READ_ERRORS /;"	d	file:
SERIAL_WRITE_ERRORS	win/tclWinSerial.c	/^#define SERIAL_WRITE_ERRORS /;"	d	file:
SET	generic/regc_lex.c	/^#define	SET(/;"	d	file:
SETOPTIONPROC	doc/CrtChannel.3	/^.SS SETOPTIONPROC$/;"	S	section:Tcl_CreateChannel""TCL_CHANNELTYPE
SETPATHOBJ	generic/tclPathObj.c	/^#define SETPATHOBJ(/;"	d	file:
SETV	generic/regc_lex.c	/^#define	SETV(/;"	d	file:
SET_BINARY_MODE	compat/zlib/contrib/iostream2/zstream.h	/^#   define SET_BINARY_MODE(/;"	d
SET_BINARY_MODE	compat/zlib/contrib/puff/pufftest.c	/^#  define SET_BINARY_MODE(/;"	d	file:
SET_BINARY_MODE	compat/zlib/examples/gznorm.c	/^#  define SET_BINARY_MODE(/;"	d	file:
SET_BINARY_MODE	compat/zlib/examples/zpipe.c	/^#  define SET_BINARY_MODE(/;"	d	file:
SET_BINARY_MODE	compat/zlib/test/minigzip.c	/^#  define SET_BINARY_MODE(/;"	d	file:
SET_BITS	macosx/tclMacOSXNotify.c	/^#define SET_BITS(/;"	d	file:
SET_BITS	unix/tclUnixChan.c	/^#define SET_BITS(/;"	d	file:
SET_BITS	unix/tclUnixSock.c	/^#define SET_BITS(/;"	d	file:
SET_BITS	win/tclWinSock.c	/^#define SET_BITS(/;"	d	file:
SET_BYTEARRAY	generic/tclBinary.c	/^#define SET_BYTEARRAY(/;"	d	file:
SET_FLAG	win/tclWinChan.c	/^#define SET_FLAG(/;"	d	file:
SET_STRING	generic/tclStringRep.h	/^#define SET_STRING(/;"	d
SFILES	compat/zlib/nintendods/Makefile	/^SFILES		:=	$(foreach dir,$(SOURCES),$(notdir $(wildcard $(dir)\/*.s)))$/;"	m
SFLAGS	compat/zlib/Makefile.in	/^SFLAGS=-O$/;"	m
SHAREDLIB	compat/zlib/Makefile.in	/^SHAREDLIB=libz.so$/;"	m
SHAREDLIBM	compat/zlib/Makefile.in	/^SHAREDLIBM=libz.so.1$/;"	m
SHAREDLIBV	compat/zlib/Makefile.in	/^SHAREDLIBV=libz.so.1.3.1$/;"	m
SHARED_BUILD	unix/Makefile.in	/^SHARED_BUILD		= @SHARED_BUILD@$/;"	m
SHARED_BUILD	unix/tcl.m4	/^    AC_SUBST(SHARED_BUILD)$/;"	s
SHARED_BUILD	win/Makefile.in	/^SHARED_BUILD		= @SHARED_BUILD@$/;"	m
SHARED_BUILD	win/tcl.m4	/^    AC_SUBST(SHARED_BUILD)$/;"	s
SHARED_LIBRARIES	win/Makefile.in	/^SHARED_LIBRARIES	= $(TCL_DLL_FILE) @ZLIB_DLL_FILE@ @TOMMATH_DLL_FILE@$/;"	m
SHELL	compat/zlib/Makefile.in	/^SHELL=\/bin\/sh$/;"	m
SHELL	unix/Makefile.in	/^SHELL			= @MAKEFILE_SHELL@$/;"	m
SHELL	unix/Makefile.in	/^SHELL = bash$/;"	m
SHELL	win/Makefile.in	/^SHELL		= @SHELL@$/;"	m
SHELL-SPECIFIC DETAILS	doc/StdChannels.3	/^.SH "SHELL-SPECIFIC DETAILS"$/;"	s	title:Standard Channels
SHELL_ENV	unix/Makefile.in	/^SHELL_ENV =	@LD_LIBRARY_PATH_VAR@=`pwd`:${@LD_LIBRARY_PATH_VAR@} \\$/;"	m
SHLIB_CFLAGS	unix/Makefile.in	/^SHLIB_CFLAGS		= @SHLIB_CFLAGS@$/;"	m
SHLIB_CFLAGS	unix/dltest/Makefile.in	/^SHLIB_CFLAGS =		@SHLIB_CFLAGS@$/;"	m
SHLIB_CFLAGS	unix/tcl.m4	/^    AC_SUBST(SHLIB_CFLAGS)$/;"	s
SHLIB_CFLAGS	win/Makefile.in	/^SHLIB_CFLAGS	= @SHLIB_CFLAGS@$/;"	m
SHLIB_CFLAGS	win/configure.ac	/^AC_SUBST(SHLIB_CFLAGS)$/;"	s
SHLIB_LD	unix/Makefile.in	/^SHLIB_LD		= @SHLIB_LD@$/;"	m
SHLIB_LD	unix/dltest/Makefile.in	/^SHLIB_LD =		@SHLIB_LD@$/;"	m
SHLIB_LD	unix/tcl.m4	/^    AC_SUBST(SHLIB_LD)$/;"	s
SHLIB_LD	win/Makefile.in	/^SHLIB_LD	= @SHLIB_LD@$/;"	m
SHLIB_LD	win/configure.ac	/^AC_SUBST(SHLIB_LD)$/;"	s
SHLIB_LD_FLAGS	unix/Makefile.in	/^SHLIB_LD_FLAGS		= @SHLIB_LD_FLAGS@$/;"	m
SHLIB_LD_LIBS	unix/Makefile.in	/^SHLIB_LD_LIBS		= @SHLIB_LD_LIBS@$/;"	m
SHLIB_LD_LIBS	unix/dltest/Makefile.in	/^SHLIB_LD_LIBS =		@SHLIB_LD_LIBS@$/;"	m
SHLIB_LD_LIBS	unix/tcl.m4	/^    AC_SUBST(SHLIB_LD_LIBS)$/;"	s
SHLIB_LD_LIBS	win/Makefile.in	/^SHLIB_LD_LIBS	= @SHLIB_LD_LIBS@$/;"	m
SHLIB_LD_LIBS	win/configure.ac	/^AC_SUBST(SHLIB_LD_LIBS)$/;"	s
SHLIB_SUFFIX	unix/Makefile.in	/^SHLIB_SUFFIX		= @SHLIB_SUFFIX@$/;"	m
SHLIB_SUFFIX	unix/dltest/Makefile.in	/^SHLIB_SUFFIX =		@SHLIB_SUFFIX@$/;"	m
SHLIB_SUFFIX	unix/tcl.m4	/^    AC_SUBST(SHLIB_SUFFIX)$/;"	s
SHLIB_SUFFIX	win/Makefile.in	/^SHLIB_SUFFIX	= @SHLIB_SUFFIX@$/;"	m
SHLIB_SUFFIX	win/configure.ac	/^AC_SUBST(SHLIB_SUFFIX)$/;"	s
SHORTER	generic/regguts.h	/^#define	SHORTER	/;"	d
SHORTNAMESIZE	compat/zlib/contrib/untgz/untgz.c	/^#define SHORTNAMESIZE /;"	d	file:
SHQ_BIN_INSTALL_DIR	unix/Makefile.in	/^SHQ_BIN_INSTALL_DIR = $(call shquote ,$(BIN_INSTALL_DIR))$/;"	m
SHQ_BUILD_DIR	unix/Makefile.in	/^SHQ_BUILD_DIR = $(call shquote ,$(BUILD_DIR))$/;"	m
SHQ_COMPAT_DIR	unix/Makefile.in	/^SHQ_COMPAT_DIR = $(call shquote ,$(COMPAT_DIR))$/;"	m
SHQ_CONFIG_INSTALL_DIR	unix/Makefile.in	/^SHQ_CONFIG_INSTALL_DIR = $(call shquote ,$(CONFIG_INSTALL_DIR))$/;"	m
SHQ_DESTDIR	unix/Makefile.in	/^SHQ_DESTDIR = $(call shquote ,$(DESTDIR))$/;"	m
SHQ_DISTDIR	unix/Makefile.in	/^SHQ_DISTDIR = $(call shquote ,$(DISTDIR))$/;"	m
SHQ_DISTNAME	unix/Makefile.in	/^SHQ_DISTNAME = $(call shquote ,$(DISTNAME))$/;"	m
SHQ_DISTROOT	unix/Makefile.in	/^SHQ_DISTROOT = $(call shquote ,$(DISTROOT))$/;"	m
SHQ_DLL_INSTALL_DIR	unix/Makefile.in	/^SHQ_DLL_INSTALL_DIR = $(call shquote ,$(DLL_INSTALL_DIR))$/;"	m
SHQ_GENERIC_DIR	unix/Makefile.in	/^SHQ_GENERIC_DIR = $(call shquote ,$(GENERIC_DIR))$/;"	m
SHQ_INCLUDE_INSTALL_DIR	unix/Makefile.in	/^SHQ_INCLUDE_INSTALL_DIR = $(call shquote ,$(INCLUDE_INSTALL_DIR))$/;"	m
SHQ_LIB_FILE	unix/Makefile.in	/^SHQ_LIB_FILE = $(call shquote ,$(LIB_FILE))$/;"	m
SHQ_LIB_INSTALL_DIR	unix/Makefile.in	/^SHQ_LIB_INSTALL_DIR = $(call shquote ,$(LIB_INSTALL_DIR))$/;"	m
SHQ_MACHER	unix/Makefile.in	/^SHQ_MACHER = $(call shquote ,$(MACHER))$/;"	m
SHQ_MAC_OSX_DIR	unix/Makefile.in	/^SHQ_MAC_OSX_DIR = $(call shquote ,$(MAC_OSX_DIR))$/;"	m
SHQ_MAN1_INSTALL_DIR	unix/Makefile.in	/^SHQ_MAN1_INSTALL_DIR = $(call shquote ,$(MAN1_INSTALL_DIR))$/;"	m
SHQ_MAN3_INSTALL_DIR	unix/Makefile.in	/^SHQ_MAN3_INSTALL_DIR = $(call shquote ,$(MAN3_INSTALL_DIR))$/;"	m
SHQ_MANN_INSTALL_DIR	unix/Makefile.in	/^SHQ_MANN_INSTALL_DIR = $(call shquote ,$(MANN_INSTALL_DIR))$/;"	m
SHQ_MAN_INSTALL_DIR	unix/Makefile.in	/^SHQ_MAN_INSTALL_DIR = $(call shquote ,$(MAN_INSTALL_DIR))$/;"	m
SHQ_MODULE_INSTALL_DIR	unix/Makefile.in	/^SHQ_MODULE_INSTALL_DIR = $(call shquote ,$(MODULE_INSTALL_DIR))$/;"	m
SHQ_NATIVE_ZIP	unix/Makefile.in	/^SHQ_NATIVE_ZIP = $(call shquote ,$(NATIVE_ZIP))$/;"	m
SHQ_PACKAGE_DIR	unix/Makefile.in	/^SHQ_PACKAGE_DIR = $(call shquote ,$(PACKAGE_DIR))$/;"	m
SHQ_PKGS_DIR	unix/Makefile.in	/^SHQ_PKGS_DIR = $(call shquote ,$(PKGS_DIR))$/;"	m
SHQ_PKG_DIR	unix/Makefile.in	/^SHQ_PKG_DIR = $(call shquote ,$(PKG_DIR))$/;"	m
SHQ_PRIVATE_INCLUDE_INSTALL_DIR	unix/Makefile.in	/^SHQ_PRIVATE_INCLUDE_INSTALL_DIR = $(call shquote ,$(PRIVATE_INCLUDE_INSTALL_DIR))$/;"	m
SHQ_SCRIPT_INSTALL_DIR	unix/Makefile.in	/^SHQ_SCRIPT_INSTALL_DIR = $(call shquote ,$(SCRIPT_INSTALL_DIR))$/;"	m
SHQ_STUB_LIB_FILE	unix/Makefile.in	/^SHQ_STUB_LIB_FILE = $(call shquote ,$(STUB_LIB_FILE))$/;"	m
SHQ_TCLTEST_EXE	unix/Makefile.in	/^SHQ_TCLTEST_EXE = $(call shquote ,$(TCLTEST_EXE))$/;"	m
SHQ_TCL_BUILDTIME_LIBRARY	unix/Makefile.in	/^SHQ_TCL_BUILDTIME_LIBRARY = $(call shquote ,$(TCL_BUILDTIME_LIBRARY))$/;"	m
SHQ_TCL_EXE	unix/Makefile.in	/^SHQ_TCL_EXE = $(call shquote ,$(TCL_EXE))$/;"	m
SHQ_TCL_LIB_FILE	unix/Makefile.in	/^SHQ_TCL_LIB_FILE = $(call shquote ,$(TCL_LIB_FILE))$/;"	m
SHQ_TCL_MODULE_PATH	unix/Makefile.in	/^SHQ_TCL_MODULE_PATH = $(call shquote ,$(TCL_MODULE_PATH))$/;"	m
SHQ_TCL_VFS_PATH	unix/Makefile.in	/^SHQ_TCL_VFS_PATH = $(call shquote ,$(TCL_VFS_PATH))$/;"	m
SHQ_TCL_VFS_ROOT	unix/Makefile.in	/^SHQ_TCL_VFS_ROOT = $(call shquote ,$(TCL_VFS_ROOT))$/;"	m
SHQ_TCL_ZIP_FILE	unix/Makefile.in	/^SHQ_TCL_ZIP_FILE = $(call shquote ,$(TCL_ZIP_FILE))$/;"	m
SHQ_TOMMATH_DIR	unix/Makefile.in	/^SHQ_TOMMATH_DIR = $(call shquote ,$(TOMMATH_DIR))$/;"	m
SHQ_TOOL_DIR	unix/Makefile.in	/^SHQ_TOOL_DIR = $(call shquote ,$(TOOL_DIR))$/;"	m
SHQ_TOP_DIR	unix/Makefile.in	/^SHQ_TOP_DIR = $(call shquote ,$(TOP_DIR))$/;"	m
SHQ_UNIX_DIR	unix/Makefile.in	/^SHQ_UNIX_DIR = $(call shquote ,$(UNIX_DIR))$/;"	m
SHQ_ZIPFS_BUILD	unix/Makefile.in	/^SHQ_ZIPFS_BUILD = $(call shquote ,$(ZIPFS_BUILD))$/;"	m
SHQ_ZIPNAME	unix/Makefile.in	/^SHQ_ZIPNAME = $(call shquote ,$(ZIPNAME))$/;"	m
SHQ_ZIP_PROG_VFSSEARCH	unix/Makefile.in	/^SHQ_ZIP_PROG_VFSSEARCH = $(call shquote ,$(ZIP_PROG_VFSSEARCH))$/;"	m
SHQ_ZLIB_DIR	unix/Makefile.in	/^SHQ_ZLIB_DIR = $(call shquote ,$(ZLIB_DIR))$/;"	m
SIGBUS	win/tclWinPort.h	/^#   define SIGBUS /;"	d
SIGN	libtommath/tommath.h	/^#define SIGN(m)     (MP_DEPRECATED_PRAGMA("SIGN /;"	d
SIGNUM	generic/tclStrToD.c	/^	INITIAL, SIGNUM, ZERO, ZERO_X,$/;"	e	enum:TclParseNumber::State	file:
SIGN_BIT	generic/tclStrToD.c	/^#define SIGN_BIT	/;"	d	file:
SIGTRAP	win/tclWinPort.h	/^#   define SIGTRAP /;"	d
SIG_MASK	generic/tclStrToD.c	/^#define SIG_MASK	(((Tcl_WideUInt) HI_ORDER_SIG_MASK /;"	d	file:
SIZE	compat/zlib/examples/gun.c	/^#define SIZE /;"	d	file:
SIZECENTRALDIRITEM	compat/zlib/contrib/minizip/unzip.c	/^#define SIZECENTRALDIRITEM /;"	d	file:
SIZECENTRALHEADER	compat/zlib/contrib/minizip/zip.c	/^#define SIZECENTRALHEADER /;"	d	file:
SIZEDATA_INDATABLOCK	compat/zlib/contrib/minizip/zip.c	/^#define SIZEDATA_INDATABLOCK /;"	d	file:
SIZEZIPLOCALHEADER	compat/zlib/contrib/minizip/unzip.c	/^#define SIZEZIPLOCALHEADER /;"	d	file:
SKT_ASYNC	generic/tclIOCmd.c	/^	SKT_ASYNC, SKT_BACKLOG, SKT_MYADDR, SKT_MYPORT, SKT_REUSEADDR,$/;"	e	enum:Tcl_SocketObjCmd::socketOptionsEnum	file:
SKT_BACKLOG	generic/tclIOCmd.c	/^	SKT_ASYNC, SKT_BACKLOG, SKT_MYADDR, SKT_MYPORT, SKT_REUSEADDR,$/;"	e	enum:Tcl_SocketObjCmd::socketOptionsEnum	file:
SKT_MYADDR	generic/tclIOCmd.c	/^	SKT_ASYNC, SKT_BACKLOG, SKT_MYADDR, SKT_MYPORT, SKT_REUSEADDR,$/;"	e	enum:Tcl_SocketObjCmd::socketOptionsEnum	file:
SKT_MYPORT	generic/tclIOCmd.c	/^	SKT_ASYNC, SKT_BACKLOG, SKT_MYADDR, SKT_MYPORT, SKT_REUSEADDR,$/;"	e	enum:Tcl_SocketObjCmd::socketOptionsEnum	file:
SKT_REUSEADDR	generic/tclIOCmd.c	/^	SKT_ASYNC, SKT_BACKLOG, SKT_MYADDR, SKT_MYPORT, SKT_REUSEADDR,$/;"	e	enum:Tcl_SocketObjCmd::socketOptionsEnum	file:
SKT_REUSEPORT	generic/tclIOCmd.c	/^	SKT_REUSEPORT, SKT_SERVER$/;"	e	enum:Tcl_SocketObjCmd::socketOptionsEnum	file:
SKT_SERVER	generic/tclIOCmd.c	/^	SKT_REUSEPORT, SKT_SERVER$/;"	e	enum:Tcl_SocketObjCmd::socketOptionsEnum	file:
SLEEP_OFFLOAD_GETTIMEOFDAY	generic/tclTimer.c	/^#define SLEEP_OFFLOAD_GETTIMEOFDAY /;"	d	file:
SLOT	generic/tclOODefineCmds.c	/^#define SLOT(/;"	d	file:
SMALLBUFSIZE	compat/zlib/contrib/iostream3/zfstream.cc	/^#define SMALLBUFSIZE /;"	d	file:
SMALLEST	compat/zlib/trees.c	/^#define SMALLEST /;"	d	file:
SMALL_MEDIUM	compat/zlib/zconf.h	/^#    define SMALL_MEDIUM$/;"	d
SMALL_MEDIUM	compat/zlib/zconf.h.in	/^#    define SMALL_MEDIUM$/;"	d	file:
SMIX	generic/regguts.h	/^#define	SMIX(/;"	d
SOCKET	generic/tclIOSock.c	/^#   define SOCKET /;"	d	file:
SOCKET	unix/tclUnixPort.h	/^#   define SOCKET /;"	d
SOCKET	unix/tclUnixSock.c	/^    enum { LOOKUP, SOCKET, BIND, LISTEN } howfar = LOOKUP;$/;"	e	enum:Tcl_OpenTcpServerEx::__anon07b4e8c00203	file:
SOCKET_BUFSIZE	unix/tclUnixSock.c	/^#define SOCKET_BUFSIZE	/;"	d	file:
SOCKET_EOF	win/tclWinSock.c	/^    SOCKET_EOF = (1<<2),	\/* A zero read happened on the socket. *\/$/;"	e	enum:TcpStateFlags	file:
SOCKET_MESSAGE	win/tclWinSock.c	/^    SOCKET_MESSAGE = WM_USER+1,	\/* Sent by OS: something happened. *\/$/;"	e	enum:TclSocketMessages	file:
SOCKET_PENDING	win/tclWinSock.c	/^    SOCKET_PENDING = (1<<3),	\/* A message has been sent for this socket *\/$/;"	e	enum:TcpStateFlags	file:
SOCKET_SELECT	win/tclWinSock.c	/^    SOCKET_SELECT = WM_USER+2,	\/* Adjust select mask. *\/$/;"	e	enum:TclSocketMessages	file:
SOCKET_TERMINATE	win/tclWinSock.c	/^    SOCKET_TERMINATE = WM_USER+3\/* Stop worker thread. *\/$/;"	e	enum:TclSocketMessages	file:
SOCK_CHAN_LENGTH	unix/tclUnixSock.c	/^#define SOCK_CHAN_LENGTH	/;"	d	file:
SOCK_CHAN_LENGTH	win/tclWinSock.c	/^#define SOCK_CHAN_LENGTH	/;"	d	file:
SOCK_TEMPLATE	unix/tclUnixSock.c	/^#define SOCK_TEMPLATE	/;"	d	file:
SOMAXCONN	unix/tclUnixSock.c	/^#   define SOMAXCONN	/;"	d	file:
SOME	generic/regcomp.c	/^#define	SOME	/;"	d	file:
SORTED	generic/tclCmdIL.c	/^	EXACT, GLOB, REGEXP, SORTED$/;"	e	enum:Tcl_LsearchObjCmd::modes	file:
SORTMODE_ASCII	generic/tclCmdIL.c	/^#define SORTMODE_ASCII	/;"	d	file:
SORTMODE_ASCII_NC	generic/tclCmdIL.c	/^#define SORTMODE_ASCII_NC	/;"	d	file:
SORTMODE_COMMAND	generic/tclCmdIL.c	/^#define SORTMODE_COMMAND	/;"	d	file:
SORTMODE_DICTIONARY	generic/tclCmdIL.c	/^#define SORTMODE_DICTIONARY	/;"	d	file:
SORTMODE_INTEGER	generic/tclCmdIL.c	/^#define SORTMODE_INTEGER	/;"	d	file:
SORTMODE_REAL	generic/tclCmdIL.c	/^#define SORTMODE_REAL	/;"	d	file:
SOURCES	compat/zlib/nintendods/Makefile	/^SOURCES		:=	..\/..\/$/;"	m
SOURCES	libtommath/sources.cmake	/^set(SOURCES$/;"	v
SP	generic/tclDate.c	/^    SP = 278                       \/* SP  *\/$/;"	e	enum:yytokentype	file:
SP	generic/tclGetDate.y	/^%token	SP$/;"	t
SPACE_BITS	generic/tclUtf.c	/^#define SPACE_BITS /;"	d	file:
SPACE_SEPARATOR	generic/tclUniData.c	/^    SPACE_SEPARATOR,$/;"	e	enum:__anon910316cb0103	file:
SPAN	compat/zlib/examples/zran.c	/^#define SPAN /;"	d	file:
SPECIAL	generic/tclOOCall.c	/^    SPECIAL = (CONSTRUCTOR | DESTRUCTOR | FORCE_UNKNOWN),$/;"	e	enum:CallChainFlags	file:
SPINLOCK_INIT	macosx/tclMacOSXNotify.c	/^#define SPINLOCK_INIT		OS_SPINLOCK_INIT$/;"	d	file:
SPINLOCK_INIT	macosx/tclMacOSXNotify.c	/^#define SPINLOCK_INIT	/;"	d	file:
SRCDIR	compat/zlib/Makefile.in	/^SRCDIR=$/;"	m
SRCS	unix/Makefile.in	/^SRCS = $(GENERIC_SRCS) $(UNIX_SRCS) $(NOTIFY_SRCS) \\$/;"	m
SRC_DIR	unix/Makefile.in	/^SRC_DIR			= @srcdir@$/;"	m
SRC_DIR	unix/dltest/Makefile.in	/^SRC_DIR =		@TCL_SRC_DIR@\/unix\/dltest$/;"	m
SRC_DIR	win/Makefile.in	/^SRC_DIR			= @srcdir@$/;"	m
STACK_BASE	generic/tclExecute.c	/^#define STACK_BASE(/;"	d	file:
STACK_TOO_DEEP	generic/regc_nfa.c	/^#define STACK_TOO_DEEP(/;"	d	file:
STANDARD CHANNELS	doc/tclsh.1	/^.SH "STANDARD CHANNELS"$/;"	s	title:tclsh
START	generic/tclCompExpr.c	/^#define START	/;"	d	file:
START	tests/httpTestScript.tcl	/^proc httpTestScript::START {} {$/;"	p	namespace:httpTestScript
STARTER	generic/regexec.c	/^#define	STARTER	/;"	d	file:
START_OF_TIME	generic/tclDate.c	/^#define START_OF_TIME	/;"	d	file:
START_OF_TIME	generic/tclDateClassic.c	/^#define START_OF_TIME	/;"	d	file:
STATICBUFFERSIZE	win/nmakehlp.c	/^#define STATICBUFFERSIZE /;"	d	file:
STATICLIB	compat/zlib/Makefile.in	/^STATICLIB=libz.a$/;"	m
STATIC_BUILD	unix/tcl.m4	/^	AC_DEFINE(STATIC_BUILD, 1, [Is this a static build?])$/;"	d
STATIC_BUILD	win/tcl.m4	/^	AC_DEFINE(STATIC_BUILD, 1, [Is this a static build?])$/;"	d
STATIC_LIBRARIES	win/Makefile.in	/^STATIC_LIBRARIES	= $(TCL_LIB_FILE)$/;"	m
STATIC_TREES	compat/zlib/zutil.h	/^#define STATIC_TREES /;"	d
STATPROC	doc/FileSystem.3	/^.SS STATPROC$/;"	S	section:Filesystem""FILESYSTEM OPERATIONS
STATUS_LAST	generic/tclProcess.c	/^	STATUS_WAIT, STATUS_LAST$/;"	e	enum:ProcessStatusObjCmd::switchesEnum	file:
STATUS_WAIT	generic/tclProcess.c	/^	STATUS_WAIT, STATUS_LAST$/;"	e	enum:ProcessStatusObjCmd::switchesEnum	file:
STDC	compat/zlib/zconf.h	/^#    define STDC$/;"	d
STDC	compat/zlib/zconf.h	/^#  define STDC$/;"	d
STDC	compat/zlib/zconf.h.in	/^#    define STDC$/;"	d	file:
STDC	compat/zlib/zconf.h.in	/^#  define STDC$/;"	d	file:
STDC99	compat/zlib/zconf.h	/^#      define STDC99$/;"	d
STDC99	compat/zlib/zconf.h.in	/^#      define STDC99$/;"	d	file:
STLIB_LD	unix/Makefile.in	/^STLIB_LD		= @STLIB_LD@$/;"	m
STLIB_LD	unix/tcl.m4	/^    AC_SUBST(STLIB_LD)$/;"	s
STLIB_LD	win/Makefile.in	/^STLIB_LD	= @STLIB_LD@$/;"	m
STLIB_LD	win/configure.ac	/^AC_SUBST(STLIB_LD)$/;"	s
STOP	tests/httpTestScript.tcl	/^proc httpTestScript::STOP {} {$/;"	p	namespace:httpTestScript
STORAGE MANAGEMENT OF VALUES	doc/Object.3	/^.SH "STORAGE MANAGEMENT OF VALUES"$/;"	s	title:Tcl_Obj
STORE	generic/tclCompCmdsSZ.c	/^#define STORE(/;"	d	file:
STORED	compat/zlib/contrib/infback9/inflate9.h	/^        STORED,     \/* i: waiting for stored size (length and complement) *\/$/;"	e	enum:__anonf28101a00103
STORED	compat/zlib/inflate.h	/^        STORED,     \/* i: waiting for stored size (length and complement) *\/$/;"	e	enum:__anon6bf0a2910103
STORED_BLOCK	compat/zlib/zutil.h	/^#define STORED_BLOCK /;"	d
STORE_ARY	generic/tclCmdAH.c	/^#define STORE_ARY(/;"	d	file:
STORE_ELEM	unix/tclUnixChan.c	/^#define STORE_ELEM(/;"	d	file:
STORE_ELEM	win/tclWinChan.c	/^#define STORE_ELEM(/;"	d	file:
STRCMPCASENOSENTIVEFUNCTION	compat/zlib/contrib/minizip/unzip.c	/^#define STRCMPCASENOSENTIVEFUNCTION /;"	d	file:
STREAM_DECOMPRESS	generic/tclZlib.c	/^    STREAM_DECOMPRESS = 0x08,	\/* Set to signal decompress pending data. *\/$/;"	e	enum:ZlibChannelDataFlags	file:
STREAM_DONE	generic/tclZlib.c	/^    STREAM_DONE = 0x10		\/* Set to signal stream end up to transform$/;"	e	enum:ZlibChannelDataFlags	file:
STREAM_END	compat/zlib/contrib/ada/zlib.adb	/^       STREAM_END,$/;"	l	type:Return_Code_Enum	file:
STREAM_ERROR	compat/zlib/contrib/ada/zlib.adb	/^       STREAM_ERROR,$/;"	l	type:Return_Code_Enum	file:
STREQ	generic/tclCompExpr.c	/^#define STREQ	/;"	d	file:
STRICT	win/tclAppInit.c	/^#define STRICT	/;"	d	file:
STRINGIFY	generic/tcl.h	/^#  define STRINGIFY(x) STRINGIFY1/;"	d
STRINGIFY	generic/tclEvent.c	/^#  define STRINGIFY(x) STRINGIFY1/;"	d	file:
STRINGIFY	generic/tclTest.c	/^#  define STRINGIFY(x) STRINGIFY1/;"	d	file:
STRINGIFY1	generic/tcl.h	/^#  define STRINGIFY1(/;"	d
STRINGIFY1	generic/tclEvent.c	/^#  define STRINGIFY1(/;"	d	file:
STRINGIFY1	generic/tclTest.c	/^#  define STRINGIFY1(/;"	d	file:
STRING_AT	generic/tclIndexObj.c	/^#define STRING_AT(/;"	d	file:
STRING_MAXCHARS	generic/tclStringRep.h	/^#define STRING_MAXCHARS /;"	d
STRING_SIZE	generic/tclStringRep.h	/^#define STRING_SIZE(/;"	d
STRNEQ	generic/tclCompExpr.c	/^#define STRNEQ	/;"	d	file:
STRUCTURE LENGTH	doc/FileSystem.3	/^.SS "STRUCTURE LENGTH"$/;"	S	section:Filesystem""FILESYSTEM INFRASTRUCTURE
STR_CLASS_ALNUM	generic/tclCompile.h	/^    STR_CLASS_ALNUM,		\/* Unicode alphabet or digit characters. *\/$/;"	e	enum:InstStringClassType
STR_CLASS_ALPHA	generic/tclCompile.h	/^    STR_CLASS_ALPHA,		\/* Unicode alphabet characters. *\/$/;"	e	enum:InstStringClassType
STR_CLASS_ASCII	generic/tclCompile.h	/^    STR_CLASS_ASCII,		\/* Characters in range U+000000..U+00007F. *\/$/;"	e	enum:InstStringClassType
STR_CLASS_CONTROL	generic/tclCompile.h	/^    STR_CLASS_CONTROL,		\/* Unicode control characters. *\/$/;"	e	enum:InstStringClassType
STR_CLASS_DIGIT	generic/tclCompile.h	/^    STR_CLASS_DIGIT,		\/* Unicode digit characters. *\/$/;"	e	enum:InstStringClassType
STR_CLASS_GRAPH	generic/tclCompile.h	/^    STR_CLASS_GRAPH,		\/* Unicode printing characters, excluding$/;"	e	enum:InstStringClassType
STR_CLASS_LOWER	generic/tclCompile.h	/^    STR_CLASS_LOWER,		\/* Unicode lower-case alphabet characters. *\/$/;"	e	enum:InstStringClassType
STR_CLASS_PRINT	generic/tclCompile.h	/^    STR_CLASS_PRINT,		\/* Unicode printing characters, including$/;"	e	enum:InstStringClassType
STR_CLASS_PUNCT	generic/tclCompile.h	/^    STR_CLASS_PUNCT,		\/* Unicode punctuation characters. *\/$/;"	e	enum:InstStringClassType
STR_CLASS_SPACE	generic/tclCompile.h	/^    STR_CLASS_SPACE,		\/* Unicode space characters. *\/$/;"	e	enum:InstStringClassType
STR_CLASS_UPPER	generic/tclCompile.h	/^    STR_CLASS_UPPER,		\/* Unicode upper-case alphabet characters. *\/$/;"	e	enum:InstStringClassType
STR_CLASS_WORD	generic/tclCompile.h	/^    STR_CLASS_WORD,		\/* Unicode word (alphabetic, digit, connector$/;"	e	enum:InstStringClassType
STR_CLASS_XDIGIT	generic/tclCompile.h	/^    STR_CLASS_XDIGIT,		\/* Characters that can be used as digits in$/;"	e	enum:InstStringClassType
STR_GEQ	generic/tclCompExpr.c	/^#define STR_GEQ	/;"	d	file:
STR_GT	generic/tclCompExpr.c	/^#define STR_GT	/;"	d	file:
STR_IS_ALNUM	generic/tclCmdMZ.c	/^	STR_IS_ALNUM,	STR_IS_ALPHA,	STR_IS_ASCII,	STR_IS_CONTROL,$/;"	e	enum:StringIsCmd::isClassesEnum	file:
STR_IS_ALNUM	generic/tclCompCmdsSZ.c	/^	STR_IS_ALNUM,	STR_IS_ALPHA,	STR_IS_ASCII,	STR_IS_CONTROL,$/;"	e	enum:TclCompileStringIsCmd::isClassesEnum	file:
STR_IS_ALPHA	generic/tclCmdMZ.c	/^	STR_IS_ALNUM,	STR_IS_ALPHA,	STR_IS_ASCII,	STR_IS_CONTROL,$/;"	e	enum:StringIsCmd::isClassesEnum	file:
STR_IS_ALPHA	generic/tclCompCmdsSZ.c	/^	STR_IS_ALNUM,	STR_IS_ALPHA,	STR_IS_ASCII,	STR_IS_CONTROL,$/;"	e	enum:TclCompileStringIsCmd::isClassesEnum	file:
STR_IS_ASCII	generic/tclCmdMZ.c	/^	STR_IS_ALNUM,	STR_IS_ALPHA,	STR_IS_ASCII,	STR_IS_CONTROL,$/;"	e	enum:StringIsCmd::isClassesEnum	file:
STR_IS_ASCII	generic/tclCompCmdsSZ.c	/^	STR_IS_ALNUM,	STR_IS_ALPHA,	STR_IS_ASCII,	STR_IS_CONTROL,$/;"	e	enum:TclCompileStringIsCmd::isClassesEnum	file:
STR_IS_BOOL	generic/tclCmdMZ.c	/^	STR_IS_BOOL,	STR_IS_DICT,	STR_IS_DIGIT,	STR_IS_DOUBLE,$/;"	e	enum:StringIsCmd::isClassesEnum	file:
STR_IS_BOOL	generic/tclCompCmdsSZ.c	/^	STR_IS_BOOL,	STR_IS_DICT,	STR_IS_DIGIT,	STR_IS_DOUBLE,$/;"	e	enum:TclCompileStringIsCmd::isClassesEnum	file:
STR_IS_CONTROL	generic/tclCmdMZ.c	/^	STR_IS_ALNUM,	STR_IS_ALPHA,	STR_IS_ASCII,	STR_IS_CONTROL,$/;"	e	enum:StringIsCmd::isClassesEnum	file:
STR_IS_CONTROL	generic/tclCompCmdsSZ.c	/^	STR_IS_ALNUM,	STR_IS_ALPHA,	STR_IS_ASCII,	STR_IS_CONTROL,$/;"	e	enum:TclCompileStringIsCmd::isClassesEnum	file:
STR_IS_DICT	generic/tclCmdMZ.c	/^	STR_IS_BOOL,	STR_IS_DICT,	STR_IS_DIGIT,	STR_IS_DOUBLE,$/;"	e	enum:StringIsCmd::isClassesEnum	file:
STR_IS_DICT	generic/tclCompCmdsSZ.c	/^	STR_IS_BOOL,	STR_IS_DICT,	STR_IS_DIGIT,	STR_IS_DOUBLE,$/;"	e	enum:TclCompileStringIsCmd::isClassesEnum	file:
STR_IS_DIGIT	generic/tclCmdMZ.c	/^	STR_IS_BOOL,	STR_IS_DICT,	STR_IS_DIGIT,	STR_IS_DOUBLE,$/;"	e	enum:StringIsCmd::isClassesEnum	file:
STR_IS_DIGIT	generic/tclCompCmdsSZ.c	/^	STR_IS_BOOL,	STR_IS_DICT,	STR_IS_DIGIT,	STR_IS_DOUBLE,$/;"	e	enum:TclCompileStringIsCmd::isClassesEnum	file:
STR_IS_DOUBLE	generic/tclCmdMZ.c	/^	STR_IS_BOOL,	STR_IS_DICT,	STR_IS_DIGIT,	STR_IS_DOUBLE,$/;"	e	enum:StringIsCmd::isClassesEnum	file:
STR_IS_DOUBLE	generic/tclCompCmdsSZ.c	/^	STR_IS_BOOL,	STR_IS_DICT,	STR_IS_DIGIT,	STR_IS_DOUBLE,$/;"	e	enum:TclCompileStringIsCmd::isClassesEnum	file:
STR_IS_ENTIER	generic/tclCmdMZ.c	/^	STR_IS_ENTIER,	STR_IS_FALSE,	STR_IS_GRAPH,	STR_IS_INT,$/;"	e	enum:StringIsCmd::isClassesEnum	file:
STR_IS_ENTIER	generic/tclCompCmdsSZ.c	/^	STR_IS_ENTIER,	STR_IS_FALSE,	STR_IS_GRAPH,	STR_IS_INT,$/;"	e	enum:TclCompileStringIsCmd::isClassesEnum	file:
STR_IS_FALSE	generic/tclCmdMZ.c	/^	STR_IS_ENTIER,	STR_IS_FALSE,	STR_IS_GRAPH,	STR_IS_INT,$/;"	e	enum:StringIsCmd::isClassesEnum	file:
STR_IS_FALSE	generic/tclCompCmdsSZ.c	/^	STR_IS_ENTIER,	STR_IS_FALSE,	STR_IS_GRAPH,	STR_IS_INT,$/;"	e	enum:TclCompileStringIsCmd::isClassesEnum	file:
STR_IS_GRAPH	generic/tclCmdMZ.c	/^	STR_IS_ENTIER,	STR_IS_FALSE,	STR_IS_GRAPH,	STR_IS_INT,$/;"	e	enum:StringIsCmd::isClassesEnum	file:
STR_IS_GRAPH	generic/tclCompCmdsSZ.c	/^	STR_IS_ENTIER,	STR_IS_FALSE,	STR_IS_GRAPH,	STR_IS_INT,$/;"	e	enum:TclCompileStringIsCmd::isClassesEnum	file:
STR_IS_INT	generic/tclCmdMZ.c	/^	STR_IS_ENTIER,	STR_IS_FALSE,	STR_IS_GRAPH,	STR_IS_INT,$/;"	e	enum:StringIsCmd::isClassesEnum	file:
STR_IS_INT	generic/tclCompCmdsSZ.c	/^	STR_IS_ENTIER,	STR_IS_FALSE,	STR_IS_GRAPH,	STR_IS_INT,$/;"	e	enum:TclCompileStringIsCmd::isClassesEnum	file:
STR_IS_LIST	generic/tclCmdMZ.c	/^	STR_IS_LIST,	STR_IS_LOWER,	STR_IS_PRINT,	STR_IS_PUNCT,$/;"	e	enum:StringIsCmd::isClassesEnum	file:
STR_IS_LIST	generic/tclCompCmdsSZ.c	/^	STR_IS_LIST,	STR_IS_LOWER,	STR_IS_PRINT,	STR_IS_PUNCT,$/;"	e	enum:TclCompileStringIsCmd::isClassesEnum	file:
STR_IS_LOWER	generic/tclCmdMZ.c	/^	STR_IS_LIST,	STR_IS_LOWER,	STR_IS_PRINT,	STR_IS_PUNCT,$/;"	e	enum:StringIsCmd::isClassesEnum	file:
STR_IS_LOWER	generic/tclCompCmdsSZ.c	/^	STR_IS_LIST,	STR_IS_LOWER,	STR_IS_PRINT,	STR_IS_PUNCT,$/;"	e	enum:TclCompileStringIsCmd::isClassesEnum	file:
STR_IS_PRINT	generic/tclCmdMZ.c	/^	STR_IS_LIST,	STR_IS_LOWER,	STR_IS_PRINT,	STR_IS_PUNCT,$/;"	e	enum:StringIsCmd::isClassesEnum	file:
STR_IS_PRINT	generic/tclCompCmdsSZ.c	/^	STR_IS_LIST,	STR_IS_LOWER,	STR_IS_PRINT,	STR_IS_PUNCT,$/;"	e	enum:TclCompileStringIsCmd::isClassesEnum	file:
STR_IS_PUNCT	generic/tclCmdMZ.c	/^	STR_IS_LIST,	STR_IS_LOWER,	STR_IS_PRINT,	STR_IS_PUNCT,$/;"	e	enum:StringIsCmd::isClassesEnum	file:
STR_IS_PUNCT	generic/tclCompCmdsSZ.c	/^	STR_IS_LIST,	STR_IS_LOWER,	STR_IS_PRINT,	STR_IS_PUNCT,$/;"	e	enum:TclCompileStringIsCmd::isClassesEnum	file:
STR_IS_SPACE	generic/tclCmdMZ.c	/^	STR_IS_SPACE,	STR_IS_TRUE,	STR_IS_UPPER,$/;"	e	enum:StringIsCmd::isClassesEnum	file:
STR_IS_SPACE	generic/tclCompCmdsSZ.c	/^	STR_IS_SPACE,	STR_IS_TRUE,	STR_IS_UPPER,$/;"	e	enum:TclCompileStringIsCmd::isClassesEnum	file:
STR_IS_TRUE	generic/tclCmdMZ.c	/^	STR_IS_SPACE,	STR_IS_TRUE,	STR_IS_UPPER,$/;"	e	enum:StringIsCmd::isClassesEnum	file:
STR_IS_TRUE	generic/tclCompCmdsSZ.c	/^	STR_IS_SPACE,	STR_IS_TRUE,	STR_IS_UPPER,$/;"	e	enum:TclCompileStringIsCmd::isClassesEnum	file:
STR_IS_UPPER	generic/tclCmdMZ.c	/^	STR_IS_SPACE,	STR_IS_TRUE,	STR_IS_UPPER,$/;"	e	enum:StringIsCmd::isClassesEnum	file:
STR_IS_UPPER	generic/tclCompCmdsSZ.c	/^	STR_IS_SPACE,	STR_IS_TRUE,	STR_IS_UPPER,$/;"	e	enum:TclCompileStringIsCmd::isClassesEnum	file:
STR_IS_WIDE	generic/tclCmdMZ.c	/^	STR_IS_WIDE,	STR_IS_WORD,	STR_IS_XDIGIT$/;"	e	enum:StringIsCmd::isClassesEnum	file:
STR_IS_WIDE	generic/tclCompCmdsSZ.c	/^	STR_IS_WIDE,	STR_IS_WORD,	STR_IS_XDIGIT$/;"	e	enum:TclCompileStringIsCmd::isClassesEnum	file:
STR_IS_WORD	generic/tclCmdMZ.c	/^	STR_IS_WIDE,	STR_IS_WORD,	STR_IS_XDIGIT$/;"	e	enum:StringIsCmd::isClassesEnum	file:
STR_IS_WORD	generic/tclCompCmdsSZ.c	/^	STR_IS_WIDE,	STR_IS_WORD,	STR_IS_XDIGIT$/;"	e	enum:TclCompileStringIsCmd::isClassesEnum	file:
STR_IS_XDIGIT	generic/tclCmdMZ.c	/^	STR_IS_WIDE,	STR_IS_WORD,	STR_IS_XDIGIT$/;"	e	enum:StringIsCmd::isClassesEnum	file:
STR_IS_XDIGIT	generic/tclCompCmdsSZ.c	/^	STR_IS_WIDE,	STR_IS_WORD,	STR_IS_XDIGIT$/;"	e	enum:TclCompileStringIsCmd::isClassesEnum	file:
STR_LEQ	generic/tclCompExpr.c	/^#define STR_LEQ	/;"	d	file:
STR_LT	generic/tclCompExpr.c	/^#define STR_LT	/;"	d	file:
STUB_CC_SWITCHES	unix/Makefile.in	/^STUB_CC_SWITCHES = -I${SHQ_BUILD_DIR} -I${SHQ_UNIX_DIR} \\$/;"	m
STUB_CC_SWITCHES	win/Makefile.in	/^STUB_CC_SWITCHES = -I"${GENERIC_DIR_NATIVE}" -I"${TOMMATH_DIR_NATIVE}" \\$/;"	m
STUB_LIB_FILE	unix/Makefile.in	/^STUB_LIB_FILE		= ${TCL_STUB_LIB_FILE}$/;"	m
STUB_LIB_OBJS	unix/Makefile.in	/^STUB_LIB_OBJS = tclStubLib.o \\$/;"	m
STUB_OBJS	win/Makefile.in	/^STUB_OBJS = \\$/;"	m
STUB_SRCS	unix/Makefile.in	/^STUB_SRCS = \\$/;"	m
SUBST_NOBACKSLASHES	generic/tclCmdMZ.c	/^	SUBST_NOBACKSLASHES, SUBST_NOCOMMANDS, SUBST_NOVARS$/;"	e	enum:TclSubstOptions::__anond5ed89e00103	file:
SUBST_NOCOMMANDS	generic/tclCmdMZ.c	/^	SUBST_NOBACKSLASHES, SUBST_NOCOMMANDS, SUBST_NOVARS$/;"	e	enum:TclSubstOptions::__anond5ed89e00103	file:
SUBST_NOVARS	generic/tclCmdMZ.c	/^	SUBST_NOBACKSLASHES, SUBST_NOCOMMANDS, SUBST_NOVARS$/;"	e	enum:TclSubstOptions::__anond5ed89e00103	file:
SUFFIX_LEN	compat/zlib/test/minigzip.c	/^#define SUFFIX_LEN /;"	d	file:
SUFFIX_LENGTH	win/tclWinFCmd.c	/^#define SUFFIX_LENGTH	/;"	d	file:
SUPPORTS_TTY	unix/tclUnixChan.c	/^#   define SUPPORTS_TTY /;"	d	file:
SUPPRESS_RDNS_VAR	unix/tclUnixSock.c	/^#define SUPPRESS_RDNS_VAR /;"	d	file:
SUPPRESS_RDNS_VAR	win/tclWinSock.c	/^#define SUPPRESS_RDNS_VAR /;"	d	file:
SURROGATE	generic/tclEncoding.c	/^#define SURROGATE(/;"	d	file:
SURROGATE	generic/tclUniData.c	/^    SURROGATE,$/;"	e	enum:__anon910316cb0103	file:
SWAPLONG	win/tclWinReg.c	/^#define SWAPLONG(/;"	d	file:
SWAPWORD	win/tclWinReg.c	/^#define SWAPWORD(/;"	d	file:
SYMBOLS	win/buildall.vc.bat	/^   set SYMBOLS=symbols$/;"	v
SYMBOLS	win/buildall.vc.bat	/^:SYMBOLS$/;"	l
SYMBOLS	win/buildall.vc.bat	/^set SYMBOLS=$/;"	v
SYMROOT	macosx/GNUmakefile	/^SYMROOT			?= ${BUILD_DIR}\/${PROJECT}$/;"	m
SYMTYPE	compat/zlib/contrib/untgz/untgz.c	/^#define SYMTYPE /;"	d	file:
SYNC	compat/zlib/inflate.h	/^    SYNC        \/* looking for synchronization bytes to restart inflate() *\/$/;"	e	enum:__anon6bf0a2910103
SYNCHRONIZATION AND COMMUNICATION	doc/Thread.3	/^.SS "SYNCHRONIZATION AND COMMUNICATION"$/;"	S	section:Threads""DESCRIPTION
SYNOPSIS	compat/zlib/contrib/minizip/miniunzip.1	/^.SH SYNOPSIS$/;"	s	title:miniunzip
SYNOPSIS	compat/zlib/contrib/minizip/minizip.1	/^.SH SYNOPSIS$/;"	s	title:minizip
SYNOPSIS	compat/zlib/zlib.3	/^.SH SYNOPSIS$/;"	s	title:ZLIB
SYNOPSIS	doc/Access.3	/^.SH SYNOPSIS$/;"	s	title:Tcl_Access
SYNOPSIS	doc/AddErrInfo.3	/^.SH SYNOPSIS$/;"	s	title:Tcl_AddErrorInfo
SYNOPSIS	doc/Alloc.3	/^.SH SYNOPSIS$/;"	s	title:Tcl_Alloc
SYNOPSIS	doc/AllowExc.3	/^.SH SYNOPSIS$/;"	s	title:Tcl_AllowExceptions
SYNOPSIS	doc/AppInit.3	/^.SH SYNOPSIS$/;"	s	title:Tcl_AppInit
SYNOPSIS	doc/AssocData.3	/^.SH SYNOPSIS$/;"	s	title:Tcl_SetAssocData
SYNOPSIS	doc/Async.3	/^.SH SYNOPSIS$/;"	s	title:Tcl_AsyncCreate
SYNOPSIS	doc/BackgdErr.3	/^.SH SYNOPSIS$/;"	s	title:Tcl_BackgroundError
SYNOPSIS	doc/BoolObj.3	/^.SH SYNOPSIS$/;"	s	title:Tcl_BooleanObj
SYNOPSIS	doc/ByteArrObj.3	/^.SH SYNOPSIS$/;"	s	title:Tcl_ByteArrayObj
SYNOPSIS	doc/CallDel.3	/^.SH SYNOPSIS$/;"	s	title:Tcl_CallWhenDeleted
SYNOPSIS	doc/Cancel.3	/^.SH SYNOPSIS$/;"	s	title:Tcl_Cancel
SYNOPSIS	doc/ChnlStack.3	/^.SH SYNOPSIS$/;"	s	title:Tcl_StackChannel
SYNOPSIS	doc/Class.3	/^.SH SYNOPSIS$/;"	s	title:Tcl_Class
SYNOPSIS	doc/CmdCmplt.3	/^.SH SYNOPSIS$/;"	s	title:Tcl_CommandComplete
SYNOPSIS	doc/Concat.3	/^.SH SYNOPSIS$/;"	s	title:Tcl_Concat
SYNOPSIS	doc/CrtAlias.3	/^.SH SYNOPSIS$/;"	s	title:Tcl_CreateAlias
SYNOPSIS	doc/CrtChannel.3	/^.SH SYNOPSIS$/;"	s	title:Tcl_CreateChannel
SYNOPSIS	doc/CrtChnlHdlr.3	/^.SH SYNOPSIS$/;"	s	title:Tcl_CreateChannelHandler
SYNOPSIS	doc/CrtCloseHdlr.3	/^.SH SYNOPSIS$/;"	s	title:Tcl_CreateCloseHandler
SYNOPSIS	doc/CrtCommand.3	/^.SH SYNOPSIS$/;"	s	title:Tcl_CreateCommand
SYNOPSIS	doc/CrtFileHdlr.3	/^.SH SYNOPSIS$/;"	s	title:Tcl_CreateFileHandler
SYNOPSIS	doc/CrtInterp.3	/^.SH SYNOPSIS$/;"	s	title:Tcl_CreateInterp
SYNOPSIS	doc/CrtObjCmd.3	/^.SH SYNOPSIS$/;"	s	title:Tcl_CreateObjCommand
SYNOPSIS	doc/CrtTimerHdlr.3	/^.SH SYNOPSIS$/;"	s	title:Tcl_CreateTimerHandler
SYNOPSIS	doc/CrtTrace.3	/^.SH SYNOPSIS$/;"	s	title:Tcl_CreateTrace
SYNOPSIS	doc/DString.3	/^.SH SYNOPSIS$/;"	s	title:Tcl_DString
SYNOPSIS	doc/DetachPids.3	/^.SH SYNOPSIS$/;"	s	title:Tcl_DetachPids
SYNOPSIS	doc/DictObj.3	/^.SH SYNOPSIS$/;"	s	title:Tcl_DictObj
SYNOPSIS	doc/DoOneEvent.3	/^.SH SYNOPSIS$/;"	s	title:Tcl_DoOneEvent
SYNOPSIS	doc/DoWhenIdle.3	/^.SH SYNOPSIS$/;"	s	title:Tcl_DoWhenIdle
SYNOPSIS	doc/DoubleObj.3	/^.SH SYNOPSIS$/;"	s	title:Tcl_DoubleObj
SYNOPSIS	doc/DumpActiveMemory.3	/^.SH SYNOPSIS$/;"	s	title:Tcl_DumpActiveMemory
SYNOPSIS	doc/Encoding.3	/^.SH SYNOPSIS$/;"	s	title:Tcl_GetEncoding
SYNOPSIS	doc/Ensemble.3	/^.SH SYNOPSIS$/;"	s	title:Tcl_Ensemble
SYNOPSIS	doc/Environment.3	/^.SH SYNOPSIS$/;"	s	title:Tcl_PutEnv
SYNOPSIS	doc/Eval.3	/^.SH SYNOPSIS$/;"	s	title:Tcl_Eval
SYNOPSIS	doc/Exit.3	/^.SH SYNOPSIS$/;"	s	title:Tcl_Exit
SYNOPSIS	doc/ExprLong.3	/^.SH SYNOPSIS$/;"	s	title:Tcl_ExprLong
SYNOPSIS	doc/ExprLongObj.3	/^.SH SYNOPSIS$/;"	s	title:Tcl_ExprLongObj
SYNOPSIS	doc/FileSystem.3	/^.SH SYNOPSIS$/;"	s	title:Filesystem
SYNOPSIS	doc/FindExec.3	/^.SH SYNOPSIS$/;"	s	title:Tcl_FindExecutable
SYNOPSIS	doc/GetCwd.3	/^.SH SYNOPSIS$/;"	s	title:Tcl_GetCwd
SYNOPSIS	doc/GetHostName.3	/^.SH SYNOPSIS$/;"	s	title:Tcl_GetHostName
SYNOPSIS	doc/GetIndex.3	/^.SH SYNOPSIS$/;"	s	title:Tcl_GetIndexFromObj
SYNOPSIS	doc/GetInt.3	/^.SH SYNOPSIS$/;"	s	title:Tcl_GetInt
SYNOPSIS	doc/GetOpnFl.3	/^.SH SYNOPSIS$/;"	s	title:Tcl_GetOpenFile
SYNOPSIS	doc/GetStdChan.3	/^.SH SYNOPSIS$/;"	s	title:Tcl_GetStdChannel
SYNOPSIS	doc/GetTime.3	/^.SH SYNOPSIS$/;"	s	title:Tcl_GetTime
SYNOPSIS	doc/GetVersion.3	/^.SH SYNOPSIS$/;"	s	title:Tcl_GetVersion
SYNOPSIS	doc/Hash.3	/^.SH SYNOPSIS$/;"	s	title:Tcl_Hash
SYNOPSIS	doc/Init.3	/^.SH SYNOPSIS$/;"	s	title:Tcl_Init
SYNOPSIS	doc/InitStubs.3	/^.SH SYNOPSIS$/;"	s	title:Tcl_InitStubs
SYNOPSIS	doc/InitSubSyst.3	/^.SH SYNOPSIS$/;"	s	title:Tcl_InitSubsystems
SYNOPSIS	doc/IntObj.3	/^.SH SYNOPSIS$/;"	s	title:Tcl_IntObj
SYNOPSIS	doc/Limit.3	/^.SH SYNOPSIS$/;"	s	title:Tcl_LimitCheck
SYNOPSIS	doc/LinkVar.3	/^.SH SYNOPSIS$/;"	s	title:Tcl_LinkVar
SYNOPSIS	doc/ListObj.3	/^.SH SYNOPSIS$/;"	s	title:Tcl_ListObj
SYNOPSIS	doc/Load.3	/^.SH SYNOPSIS$/;"	s	title:Load
SYNOPSIS	doc/Method.3	/^.SH SYNOPSIS$/;"	s	title:Tcl_Method
SYNOPSIS	doc/NRE.3	/^.SH SYNOPSIS$/;"	s	title:NRE
SYNOPSIS	doc/Namespace.3	/^.SH SYNOPSIS$/;"	s	title:Tcl_Namespace
SYNOPSIS	doc/Notifier.3	/^.SH SYNOPSIS$/;"	s	title:Notifier
SYNOPSIS	doc/Number.3	/^.SH SYNOPSIS$/;"	s	title:Tcl_GetNumber
SYNOPSIS	doc/OOInitStubs.3	/^.SH SYNOPSIS$/;"	s	title:Tcl_OOInitStubs
SYNOPSIS	doc/Object.3	/^.SH SYNOPSIS$/;"	s	title:Tcl_Obj
SYNOPSIS	doc/ObjectType.3	/^.SH SYNOPSIS$/;"	s	title:Tcl_ObjType
SYNOPSIS	doc/OpenFileChnl.3	/^.SH SYNOPSIS$/;"	s	title:Tcl_OpenFileChannel
SYNOPSIS	doc/OpenTcp.3	/^.SH SYNOPSIS$/;"	s	title:Tcl_OpenTcpClient
SYNOPSIS	doc/Panic.3	/^.SH SYNOPSIS$/;"	s	title:Tcl_Panic
SYNOPSIS	doc/ParseArgs.3	/^.SH SYNOPSIS$/;"	s	title:Tcl_ParseArgsObjv
SYNOPSIS	doc/ParseCmd.3	/^.SH SYNOPSIS$/;"	s	title:Tcl_ParseCommand
SYNOPSIS	doc/PkgRequire.3	/^.SH SYNOPSIS$/;"	s	title:Tcl_PkgRequire
SYNOPSIS	doc/Preserve.3	/^.SH SYNOPSIS$/;"	s	title:Tcl_Preserve
SYNOPSIS	doc/PrintDbl.3	/^.SH SYNOPSIS$/;"	s	title:Tcl_PrintDouble
SYNOPSIS	doc/RecEvalObj.3	/^.SH SYNOPSIS$/;"	s	title:Tcl_RecordAndEvalObj
SYNOPSIS	doc/RecordEval.3	/^.SH SYNOPSIS$/;"	s	title:Tcl_RecordAndEval
SYNOPSIS	doc/RegConfig.3	/^.SH SYNOPSIS$/;"	s	title:Tcl_RegisterConfig
SYNOPSIS	doc/RegExp.3	/^.SH SYNOPSIS$/;"	s	title:Tcl_RegExpMatch
SYNOPSIS	doc/SaveInterpState.3	/^.SH SYNOPSIS$/;"	s	title:Tcl_SaveInterpState
SYNOPSIS	doc/SetChanErr.3	/^.SH SYNOPSIS$/;"	s	title:Tcl_SetChannelError
SYNOPSIS	doc/SetErrno.3	/^.SH SYNOPSIS$/;"	s	title:Tcl_SetErrno
SYNOPSIS	doc/SetRecLmt.3	/^.SH SYNOPSIS$/;"	s	title:Tcl_SetRecursionLimit
SYNOPSIS	doc/SetResult.3	/^.SH SYNOPSIS$/;"	s	title:Tcl_SetResult
SYNOPSIS	doc/SetVar.3	/^.SH SYNOPSIS$/;"	s	title:Tcl_SetVar
SYNOPSIS	doc/Signal.3	/^.SH SYNOPSIS$/;"	s	title:Tcl_SignalId
SYNOPSIS	doc/Sleep.3	/^.SH SYNOPSIS$/;"	s	title:Tcl_Sleep
SYNOPSIS	doc/SourceRCFile.3	/^.SH SYNOPSIS$/;"	s	title:Tcl_SourceRCFile
SYNOPSIS	doc/SplitList.3	/^.SH SYNOPSIS$/;"	s	title:Tcl_SplitList
SYNOPSIS	doc/SplitPath.3	/^.SH SYNOPSIS$/;"	s	title:Tcl_SplitPath
SYNOPSIS	doc/StaticLibrary.3	/^.SH SYNOPSIS$/;"	s	title:Tcl_StaticLibrary
SYNOPSIS	doc/StrMatch.3	/^.SH SYNOPSIS$/;"	s	title:Tcl_StringMatch
SYNOPSIS	doc/StringObj.3	/^.SH SYNOPSIS$/;"	s	title:Tcl_StringObj
SYNOPSIS	doc/SubstObj.3	/^.SH SYNOPSIS$/;"	s	title:Tcl_SubstObj
SYNOPSIS	doc/TclZlib.3	/^.SH SYNOPSIS$/;"	s	title:TclZlib
SYNOPSIS	doc/Tcl_Main.3	/^.SH SYNOPSIS$/;"	s	title:Tcl_Main
SYNOPSIS	doc/Thread.3	/^.SH SYNOPSIS$/;"	s	title:Threads
SYNOPSIS	doc/ToUpper.3	/^.SH SYNOPSIS$/;"	s	title:Tcl_UtfToUpper
SYNOPSIS	doc/TraceCmd.3	/^.SH SYNOPSIS$/;"	s	title:Tcl_TraceCommand
SYNOPSIS	doc/TraceVar.3	/^.SH SYNOPSIS$/;"	s	title:Tcl_TraceVar
SYNOPSIS	doc/Translate.3	/^.SH SYNOPSIS$/;"	s	title:Tcl_TranslateFileName
SYNOPSIS	doc/UniCharIsAlpha.3	/^.SH SYNOPSIS$/;"	s	title:Tcl_UniCharIsAlpha
SYNOPSIS	doc/UpVar.3	/^.SH SYNOPSIS$/;"	s	title:Tcl_UpVar
SYNOPSIS	doc/Utf.3	/^.SH SYNOPSIS$/;"	s	title:Utf
SYNOPSIS	doc/WrongNumArgs.3	/^.SH SYNOPSIS$/;"	s	title:Tcl_WrongNumArgs
SYNOPSIS	doc/tclsh.1	/^.SH SYNOPSIS$/;"	s	title:tclsh
SYNOPSIS	doc/zipfs.3	/^.SH SYNOPSIS$/;"	s	title:Tclzipfs
SYNTHETIC_EVENT_TIME	generic/tclIO.h	/^#define SYNTHETIC_EVENT_TIME	/;"	d
SYS16BIT	compat/zlib/zconf.h	/^#      define SYS16BIT$/;"	d
SYS16BIT	compat/zlib/zconf.h.in	/^#      define SYS16BIT$/;"	d	file:
SYSTEM_INFO	unix/tclUnixInit.c	/^} SYSTEM_INFO;$/;"	t	typeref:struct:__anonf052aa840108	file:
S_IFBLK	win/tclWinPort.h	/^#   define S_IFBLK /;"	d
S_IFLNK	win/tclWinPort.h	/^#   define S_IFLNK /;"	d
S_ISBLK	unix/tclUnixPort.h	/^#	define S_ISBLK(/;"	d
S_ISBLK	win/tclWinPort.h	/^#       define S_ISBLK(/;"	d
S_ISCHR	unix/tclUnixPort.h	/^#	define S_ISCHR(/;"	d
S_ISCHR	win/tclWinPort.h	/^#       define S_ISCHR(/;"	d
S_ISDIR	unix/tclUnixPort.h	/^#	define S_ISDIR(/;"	d
S_ISDIR	win/tclWinPort.h	/^#       define S_ISDIR(/;"	d
S_ISFIFO	unix/tclUnixPort.h	/^#	define S_ISFIFO(/;"	d
S_ISFIFO	win/tclWinPort.h	/^#       define S_ISFIFO(/;"	d
S_ISLNK	unix/tclUnixPort.h	/^#	define S_ISLNK(/;"	d
S_ISLNK	win/tclWinPort.h	/^#       define S_ISLNK(/;"	d
S_ISREG	unix/tclUnixPort.h	/^#	define S_ISREG(/;"	d
S_ISREG	win/tclWinPort.h	/^#       define S_ISREG(/;"	d
S_ISSOCK	unix/tclUnixPort.h	/^#	define S_ISSOCK(/;"	d
SafeLdExp	generic/tclStrToD.c	/^SafeLdExp($/;"	f	typeref:typename:double	file:
SavePrevLocaleObj	generic/tclClock.c	/^SavePrevLocaleObj($/;"	f	typeref:typename:void	file:
SavePrevTimezoneObj	generic/tclClock.c	/^SavePrevTimezoneObj($/;"	f	typeref:typename:void	file:
ScalarObjIndex	generic/tclObj.c	/^ScalarObjIndex($/;"	f	typeref:typename:int	file:
ScalarObjInterfaceListLength	generic/tclObj.c	/^ScalarObjInterfaceListLength($/;"	f	typeref:typename:int
ScalarObjRange	generic/tclObj.c	/^static int ScalarObjRange($/;"	f	typeref:typename:int	file:
ScanFlags	generic/tclScan.c	/^enum ScanFlags {$/;"	g	file:
ScanNumber	generic/tclBinary.c	/^ScanNumber($/;"	f	typeref:typename:Tcl_Obj *	file:
ScanWide	library/clockclassic.tcl	/^proc ScanWide { str } {$/;"	p
ScheduleRequest	library/http/http.tcl	/^proc http::ScheduleRequest {token} {$/;"	p	namespace:http
ScnETokenMap	generic/tclClockFmt.c	/^static const ClockScanTokenMap ScnETokenMap[] = {$/;"	v	typeref:typename:const ClockScanTokenMap[]	file:
ScnETokenMapAliasIndex	generic/tclClockFmt.c	/^static const char *ScnETokenMapAliasIndex[2] = {$/;"	v	typeref:typename:const char * [2]	file:
ScnETokenMapIndex	generic/tclClockFmt.c	/^static const char *ScnETokenMapIndex = "EJjys";$/;"	v	typeref:typename:const char *	file:
ScnOTokenMap	generic/tclClockFmt.c	/^static const ClockScanTokenMap ScnOTokenMap[] = {$/;"	v	typeref:typename:const ClockScanTokenMap[]	file:
ScnOTokenMapAliasIndex	generic/tclClockFmt.c	/^static const char *ScnOTokenMapAliasIndex[2] = {$/;"	v	typeref:typename:const char * [2]	file:
ScnOTokenMapIndex	generic/tclClockFmt.c	/^static const char *ScnOTokenMapIndex = "dmyHMSu";$/;"	v	typeref:typename:const char *	file:
ScnSTokenMap	generic/tclClockFmt.c	/^static const ClockScanTokenMap ScnSTokenMap[] = {$/;"	v	typeref:typename:const ClockScanTokenMap[]	file:
ScnSTokenMapAliasIndex	generic/tclClockFmt.c	/^static const char *ScnSTokenMapAliasIndex[2] = {$/;"	v	typeref:typename:const char * [2]	file:
ScnSTokenMapIndex	generic/tclClockFmt.c	/^static const char *ScnSTokenMapIndex = "dmbyYHMSpJjCgGVazUsntQ";$/;"	v	typeref:typename:const char *	file:
ScnSpaceTokenMap	generic/tclClockFmt.c	/^static const ClockScanTokenMap ScnSpaceTokenMap = {$/;"	v	typeref:typename:const ClockScanTokenMap	file:
ScnWordTokenMap	generic/tclClockFmt.c	/^static const ClockScanTokenMap ScnWordTokenMap = {$/;"	v	typeref:typename:const ClockScanTokenMap	file:
Scopes	generic/tclOOInfo.c	/^    enum Scopes {$/;"	g	function:InfoClassMethodsCmd	file:
Scopes	generic/tclOOInfo.c	/^    enum Scopes {$/;"	g	function:InfoObjectMethodsCmd	file:
ScriptLibrarySetup	generic/tclZipfs.c	/^ScriptLibrarySetup($/;"	f	typeref:typename:Tcl_Obj *	file:
ScriptLimitCallback	generic/tclInterp.c	/^} ScriptLimitCallback;$/;"	t	typeref:struct:__anon913711770508	file:
ScriptLimitCallbackKey	generic/tclInterp.c	/^} ScriptLimitCallbackKey;$/;"	t	typeref:struct:__anon913711770608	file:
SearchKnownEncodings	unix/tclUnixInit.c	/^SearchKnownEncodings($/;"	f	typeref:typename:const char *	file:
Seek	compat/zlib/contrib/delphi/ZLib.pas	/^    function Seek(Offset: Longint; Origin: Word): Longint; override;$/;"	f	typeref:typename:Longint
Seek	compat/zlib/contrib/dotzlib/DotZLib/GZipStream.cs	/^        public override long Seek(long offset, SeekOrigin origin)$/;"	m	class:DotZLib.GZipStream
SelectMasks	macosx/tclMacOSXNotify.c	/^} SelectMasks;$/;"	t	typeref:struct:__anon0dc3d9d70208	file:
SelectMasks	unix/tclSelectNotfy.c	/^} SelectMasks;$/;"	t	typeref:struct:__anon69aa703c0108	file:
SelectObjFromSublist	generic/tclCmdIL.c	/^SelectObjFromSublist($/;"	f	typeref:typename:Tcl_Obj *	file:
SelectPackage	generic/tclPkg.c	/^SelectPackage($/;"	f	typeref:typename:int	file:
SelectPackageFinal	generic/tclPkg.c	/^SelectPackageFinal($/;"	f	typeref:typename:int	file:
SelfCmds	generic/tclOOBasic.c	/^    enum SelfCmds {$/;"	g	function:TclOOSelfObjCmd	file:
SendHeader	library/http/http.tcl	/^proc http::SendHeader {token key value} {$/;"	p	namespace:http
SendSelectMessage	win/tclWinSock.c	/^SendSelectMessage($/;"	f	typeref:typename:void	file:
SequenceDecoded	generic/tclCmdIL.c	/^} SequenceDecoded;$/;"	t	typeref:enum:__anond5eb1cce0503	file:
SequenceIdentifyArgument	generic/tclCmdIL.c	/^SequenceIdentifyArgument($/;"	f	typeref:typename:SequenceDecoded	file:
SequenceOperators	generic/tclCmdIL.c	/^} SequenceOperators;$/;"	t	typeref:enum:__anond5eb1cce0403	file:
SerialBlockProc	win/tclWinSerial.c	/^SerialBlockProc($/;"	f	typeref:typename:int	file:
SerialBlockTime	win/tclWinSerial.c	/^SerialBlockTime($/;"	f	typeref:typename:void	file:
SerialBlockingRead	win/tclWinSerial.c	/^SerialBlockingRead($/;"	f	typeref:typename:int	file:
SerialBlockingWrite	win/tclWinSerial.c	/^SerialBlockingWrite($/;"	f	typeref:typename:int	file:
SerialCheckProc	win/tclWinSerial.c	/^SerialCheckProc($/;"	f	typeref:typename:void	file:
SerialCloseProc	win/tclWinSerial.c	/^SerialCloseProc($/;"	f	typeref:typename:int	file:
SerialErrorStr	win/tclWinSerial.c	/^SerialErrorStr($/;"	f	typeref:typename:void	file:
SerialEvent	win/tclWinSerial.c	/^} SerialEvent;$/;"	t	typeref:struct:__anonc2b952240208	file:
SerialEventProc	win/tclWinSerial.c	/^SerialEventProc($/;"	f	typeref:typename:int	file:
SerialExitHandler	win/tclWinSerial.c	/^SerialExitHandler($/;"	f	typeref:typename:void	file:
SerialGetHandleProc	win/tclWinSerial.c	/^SerialGetHandleProc($/;"	f	typeref:typename:int	file:
SerialGetMilliseconds	win/tclWinSerial.c	/^SerialGetMilliseconds(void)$/;"	f	typeref:typename:unsigned long long	file:
SerialGetOptionProc	win/tclWinSerial.c	/^SerialGetOptionProc($/;"	f	typeref:typename:int	file:
SerialInfo	win/tclWinSerial.c	/^typedef struct SerialInfo {$/;"	s	file:
SerialInfo	win/tclWinSerial.c	/^} SerialInfo;$/;"	t	typeref:struct:SerialInfo	file:
SerialInit	win/tclWinSerial.c	/^SerialInit(void)$/;"	f	typeref:typename:ThreadSpecificData *	file:
SerialInputProc	win/tclWinSerial.c	/^SerialInputProc($/;"	f	typeref:typename:int	file:
SerialModemStatusStr	win/tclWinSerial.c	/^SerialModemStatusStr($/;"	f	typeref:typename:void	file:
SerialOutputProc	win/tclWinSerial.c	/^SerialOutputProc($/;"	f	typeref:typename:int	file:
SerialSetOptionProc	win/tclWinSerial.c	/^SerialSetOptionProc($/;"	f	typeref:typename:int	file:
SerialSetupProc	win/tclWinSerial.c	/^SerialSetupProc($/;"	f	typeref:typename:void
SerialThreadActionProc	win/tclWinSerial.c	/^SerialThreadActionProc($/;"	f	typeref:typename:void	file:
SerialWatchProc	win/tclWinSerial.c	/^SerialWatchProc($/;"	f	typeref:typename:void	file:
SerialWriterThread	win/tclWinSerial.c	/^SerialWriterThread($/;"	f	typeref:typename:DWORD WINAPI	file:
SerializeCentralDirectoryEntry	generic/tclZipfs.c	/^SerializeCentralDirectoryEntry($/;"	f	typeref:typename:void	file:
SerializeCentralDirectorySuffix	generic/tclZipfs.c	/^SerializeCentralDirectorySuffix($/;"	f	typeref:typename:void	file:
SerializeLocalEntryHeader	generic/tclZipfs.c	/^SerializeLocalEntryHeader($/;"	f	typeref:typename:void	file:
Service	tests/httpd11.tcl	/^proc Service {chan addr port} {$/;"	p
Set	generic/tclZipfs.c	/^#define Set(/;"	d	file:
SetArithSeriesFromAny	generic/tclArithSeries.c	/^SetArithSeriesFromAny($/;"	f	typeref:typename:int	file:
SetArrayDefault	generic/tclVar.c	/^SetArrayDefault($/;"	f	typeref:typename:void	file:
SetBlockMode	generic/tclIO.c	/^SetBlockMode($/;"	f	typeref:typename:int	file:
SetByteArrayFromAny	generic/tclBinary.c	/^SetByteArrayFromAny($/;"	f	typeref:typename:int	file:
SetByteCodeFromAny	generic/tclCompile.c	/^SetByteCodeFromAny($/;"	f	typeref:typename:int	file:
SetChannelErrorStr	generic/tclIORChan.c	/^#define SetChannelErrorStr(/;"	d	file:
SetChannelErrorStr	generic/tclIORTrans.c	/^#define SetChannelErrorStr(/;"	d	file:
SetCmdNameFromAny	generic/tclObj.c	/^SetCmdNameFromAny($/;"	f	typeref:typename:int	file:
SetCmdNameObj	generic/tclObj.c	/^SetCmdNameObj($/;"	f	typeref:typename:void	file:
SetDdeError	win/tclWinDde.c	/^SetDdeError($/;"	f	typeref:typename:void	file:
SetDeflateDictionary	generic/tclZlib.c	/^SetDeflateDictionary($/;"	f	typeref:typename:int	file:
SetDictFromAny	generic/tclDictObj.c	/^SetDictFromAny($/;"	f	typeref:typename:int	file:
SetDictFromAny	generic/tclDictObj.c	/^static Tcl_SetFromAnyProc	SetDictFromAny;$/;"	v	typeref:typename:Tcl_SetFromAnyProc	file:
SetDoubleFromAny	generic/tclObj.c	/^SetDoubleFromAny($/;"	f	typeref:typename:int	file:
SetDuplicateObj	generic/tclObj.c	/^#define SetDuplicateObj(/;"	d	file:
SetDuplicatePureObj	generic/tclObj.c	/^int SetDuplicatePureObj($/;"	f	typeref:typename:int
SetEnsembleConfigOptions	generic/tclEnsemble.c	/^SetEnsembleConfigOptions($/;"	f	typeref:typename:int	file:
SetFilterFlags	generic/tclOOCall.c	/^SetFilterFlags($/;"	f	typeref:typename:int	file:
SetFilterFlags	generic/tclOOCall.c	/^static Tcl_NRPostProc	SetFilterFlags;$/;"	v	typeref:typename:Tcl_NRPostProc	file:
SetFlag	generic/tclIO.c	/^#define SetFlag(/;"	d	file:
SetFsPathFromAny	generic/tclPathObj.c	/^SetFsPathFromAny($/;"	f	typeref:typename:int	file:
SetGroupAttribute	unix/tclUnixFCmd.c	/^SetGroupAttribute($/;"	f	typeref:typename:int	file:
SetIdx	win/tclWinReg.c	/^	BroadcastIdx, DeleteIdx, GetIdx, KeysIdx, SetIdx, TypeIdx, ValuesIdx$/;"	e	enum:RegistryObjCmd::SubCmdIdx	file:
SetInflateDictionary	generic/tclZlib.c	/^SetInflateDictionary($/;"	f	typeref:typename:int	file:
SetIntFromAny	generic/tclObj.c	/^SetIntFromAny($/;"	f	typeref:typename:int	file:
SetInvalidRealFromAny	generic/tclLink.c	/^SetInvalidRealFromAny($/;"	f	typeref:typename:int	file:
SetLambdaFromAny	generic/tclProc.c	/^SetLambdaFromAny($/;"	f	typeref:typename:int	file:
SetLength	compat/zlib/contrib/dotzlib/DotZLib/GZipStream.cs	/^        public override void SetLength(long value)$/;"	m	class:DotZLib.GZipStream
SetLineInformation	generic/tclCompile.h	/^#define SetLineInformation(/;"	d
SetMax	library/opt/optparse.tcl	/^proc ::tcl::SetMax {varname value} {$/;"	p	namespace:::tcl
SetMin	library/opt/optparse.tcl	/^proc ::tcl::SetMin {varname value} {$/;"	p	namespace:::tcl
SetNsNameFromAny	generic/tclNamesp.c	/^SetNsNameFromAny($/;"	f	typeref:typename:int	file:
SetOSTypeFromAny	macosx/tclMacOSXFCmd.c	/^SetOSTypeFromAny($/;"	f	typeref:typename:int	file:
SetOwnerAttribute	unix/tclUnixFCmd.c	/^SetOwnerAttribute($/;"	f	typeref:typename:int	file:
SetPermissionsAttribute	unix/tclUnixFCmd.c	/^SetPermissionsAttribute($/;"	f	typeref:typename:int	file:
SetPrecisionLimits	generic/tclStrToD.c	/^SetPrecisionLimits($/;"	f	typeref:typename:void	file:
SetPropertyList	generic/tclOOProp.c	/^SetPropertyList($/;"	f	typeref:typename:void	file:
SetRegexpFromAny	generic/tclRegexp.c	/^SetRegexpFromAny($/;"	f	typeref:typename:int	file:
SetResultLength	generic/tclFileName.c	/^SetResultLength($/;"	f	typeref:typename:void	file:
SetScriptLimitCallback	generic/tclInterp.c	/^SetScriptLimitCallback($/;"	f	typeref:typename:void	file:
SetStringFromAny	generic/tclStringObj.c	/^SetStringFromAny($/;"	f	typeref:typename:int	file:
SetTestIndexHexFromAny	generic/tclTestObjInterface.c	/^SetTestIndexHexFromAny(Tcl_Interp *interp, Tcl_Obj *objPtr)$/;"	f	typeref:typename:int	file:
SetTestListIntegerFromAny	generic/tclTestObjInterfaceInteger.c	/^static int SetTestListIntegerFromAny(Tcl_Interp *interp, Tcl_Obj *objPtr) {$/;"	f	typeref:typename:int	file:
SetUnicodeObj	generic/tclStringObj.c	/^SetUnicodeObj($/;"	f	typeref:typename:void	file:
SetUnixFileAttributes	unix/tclUnixFCmd.c	/^SetUnixFileAttributes($/;"	f	typeref:typename:int	file:
SetValue	win/tclWinReg.c	/^SetValue($/;"	f	typeref:typename:int	file:
SetVarToObj	generic/tclTestObj.c	/^SetVarToObj($/;"	f	typeref:typename:void	file:
SetWinFileAttributes	win/tclWinFCmd.c	/^SetWinFileAttributes($/;"	f	typeref:typename:int	file:
Set_In	compat/zlib/contrib/ada/zlib-thin.adb	/^   procedure Set_In$/;"	r	package:ZLib.Thin	file:
Set_In	compat/zlib/contrib/ada/zlib-thin.ads	/^   procedure Set_In$/;"	R
Set_Mem_Func	compat/zlib/contrib/ada/zlib-thin.adb	/^   procedure Set_Mem_Func$/;"	r	package:ZLib.Thin	file:
Set_Mem_Func	compat/zlib/contrib/ada/zlib-thin.ads	/^   procedure Set_Mem_Func$/;"	R
Set_Out	compat/zlib/contrib/ada/zlib-thin.adb	/^   procedure Set_Out$/;"	r	package:ZLib.Thin	file:
Set_Out	compat/zlib/contrib/ada/zlib-thin.ads	/^   procedure Set_Out$/;"	R
SetterType	generic/tclOOProp.c	/^static const Tcl_MethodType SetterType = {$/;"	v	typeref:typename:const Tcl_MethodType	file:
Setup	library/safe.tcl	/^proc ::safe::Setup {} {$/;"	p	namespace:::safe
SetupStdFile	unix/tclUnixPipe.c	/^SetupStdFile($/;"	f	typeref:typename:int	file:
SetupTimeZone	library/clock.tcl	/^proc ::tcl::clock::SetupTimeZone { timezone {alias {}} } {$/;"	p	namespace:::tcl::clock
SetupTimeZone	library/clockclassic.tcl	/^proc SetupTimeZone { timezone } {$/;"	p
ShorteningBignumConversion	generic/tclStrToD.c	/^ShorteningBignumConversion($/;"	f	typeref:typename:char *	file:
ShorteningBignumConversionPowD	generic/tclStrToD.c	/^ShorteningBignumConversionPowD($/;"	f	typeref:typename:char *	file:
ShorteningInt64Conversion	generic/tclStrToD.c	/^ShorteningInt64Conversion($/;"	f	typeref:typename:char *	file:
ShorteningQuickFormat	generic/tclStrToD.c	/^ShorteningQuickFormat($/;"	f	typeref:typename:char *	file:
ShouldBankerRoundUp	generic/tclStrToD.c	/^ShouldBankerRoundUp($/;"	f	typeref:typename:int	file:
ShouldBankerRoundUpPowD	generic/tclStrToD.c	/^ShouldBankerRoundUpPowD($/;"	f	typeref:typename:int	file:
ShouldBankerRoundUpToNext	generic/tclStrToD.c	/^ShouldBankerRoundUpToNext($/;"	f	typeref:typename:int	file:
ShouldBankerRoundUpToNextPowD	generic/tclStrToD.c	/^ShouldBankerRoundUpToNextPowD($/;"	f	typeref:typename:int	file:
SimpleAccess	generic/tclTest.c	/^SimpleAccess($/;"	f	typeref:typename:int	file:
SimpleAccess	generic/tclTest.c	/^static Tcl_FSAccessProc SimpleAccess;$/;"	v	typeref:typename:Tcl_FSAccessProc	file:
SimpleListVolumes	generic/tclTest.c	/^SimpleListVolumes(void)$/;"	f	typeref:typename:Tcl_Obj *	file:
SimpleListVolumes	generic/tclTest.c	/^static Tcl_FSListVolumesProc SimpleListVolumes;$/;"	v	typeref:typename:Tcl_FSListVolumesProc	file:
SimpleMatchInDirectory	generic/tclTest.c	/^SimpleMatchInDirectory($/;"	f	typeref:typename:int	file:
SimpleMatchInDirectory	generic/tclTest.c	/^static Tcl_FSMatchInDirectoryProc SimpleMatchInDirectory;$/;"	v	typeref:typename:Tcl_FSMatchInDirectoryProc	file:
SimpleOpenFileChannel	generic/tclTest.c	/^SimpleOpenFileChannel($/;"	f	typeref:typename:Tcl_Channel	file:
SimpleOpenFileChannel	generic/tclTest.c	/^static Tcl_FSOpenFileChannelProc SimpleOpenFileChannel;$/;"	v	typeref:typename:Tcl_FSOpenFileChannelProc	file:
SimplePathInFilesystem	generic/tclTest.c	/^SimplePathInFilesystem($/;"	f	typeref:typename:int	file:
SimplePathInFilesystem	generic/tclTest.c	/^static Tcl_FSPathInFilesystemProc SimplePathInFilesystem;$/;"	v	typeref:typename:Tcl_FSPathInFilesystemProc	file:
SimpleRedirect	generic/tclTest.c	/^SimpleRedirect($/;"	f	typeref:typename:Tcl_Obj *	file:
SimpleStat	generic/tclTest.c	/^SimpleStat($/;"	f	typeref:typename:int	file:
SimpleStat	generic/tclTest.c	/^static Tcl_FSStatProc SimpleStat;$/;"	v	typeref:typename:Tcl_FSStatProc	file:
Simple_GZip_Header	compat/zlib/contrib/ada/zlib.adb	/^   Simple_GZip_Header : constant Stream_Element_Array (1 .. 10)$/;"	n	package:ZLib	file:
SinglePutGet	compat/zlib/contrib/dotzlib/DotZLib/UnitTests.cs	/^        public void SinglePutGet()$/;"	m	class:DotZLibTests.CircBufferTests
Size	compat/zlib/contrib/dotzlib/DotZLib/CircularBuffer.cs	/^        public int Size { get { return _size; } }$/;"	p	class:DotZLib.CircularBuffer
SizeOfOffset	compat/zlib/contrib/dotzlib/DotZLib/DotZLib.cs	/^        public int SizeOfOffset { get { return bitSize((_flags >> 6) & 3); } }$/;"	p	class:DotZLib.Info
SizeOfPointer	compat/zlib/contrib/dotzlib/DotZLib/DotZLib.cs	/^        public int SizeOfPointer { get { return bitSize((_flags >> 4) & 3); } }$/;"	p	class:DotZLib.Info
SizeOfUInt	compat/zlib/contrib/dotzlib/DotZLib/DotZLib.cs	/^        public int SizeOfUInt { get { return bitSize(_flags & 3); } }$/;"	p	class:DotZLib.Info
SizeOfULong	compat/zlib/contrib/dotzlib/DotZLib/DotZLib.cs	/^        public int SizeOfULong { get { return bitSize((_flags >> 2) & 3); } }$/;"	p	class:DotZLib.Info
SkipToChar	generic/tclFileName.c	/^SkipToChar($/;"	f	typeref:typename:int	file:
SockIsPlaceHolder	library/http/http.tcl	/^proc http::SockIsPlaceHolder {sock} {$/;"	p	namespace:http
SocketCheckProc	win/tclWinSock.c	/^SocketCheckProc($/;"	f	typeref:typename:void	file:
SocketCheckProc	win/tclWinSock.c	/^static Tcl_EventCheckProc	SocketCheckProc;$/;"	v	typeref:typename:Tcl_EventCheckProc	file:
SocketEvent	win/tclWinSock.c	/^} SocketEvent;$/;"	t	typeref:struct:__anon3aeaf8540208	file:
SocketEventProc	win/tclWinSock.c	/^SocketEventProc($/;"	f	typeref:typename:int	file:
SocketEventProc	win/tclWinSock.c	/^static Tcl_EventProc		SocketEventProc;$/;"	v	typeref:typename:Tcl_EventProc	file:
SocketExitHandler	win/tclWinSock.c	/^SocketExitHandler($/;"	f	typeref:typename:void	file:
SocketProc	win/tclWinSock.c	/^SocketProc($/;"	f	typeref:typename:LRESULT CALLBACK	file:
SocketSelectOperations	win/tclWinSock.c	/^enum SocketSelectOperations {$/;"	g	file:
SocketSetupProc	win/tclWinSock.c	/^SocketSetupProc($/;"	f	typeref:typename:void
SocketSetupProc	win/tclWinSock.c	/^static Tcl_EventSetupProc	SocketSetupProc;$/;"	v	typeref:typename:Tcl_EventSetupProc	file:
SocketThread	win/tclWinSock.c	/^SocketThread($/;"	f	typeref:typename:DWORD WINAPI	file:
SomeRequirementSatisfied	generic/tclPkg.c	/^SomeRequirementSatisfied($/;"	f	typeref:typename:int	file:
SortCompare	generic/tclCmdIL.c	/^SortCompare($/;"	f	typeref:typename:int	file:
SortElement	generic/tclCmdIL.c	/^typedef struct SortElement {$/;"	s	file:
SortElement	generic/tclCmdIL.c	/^} SortElement;$/;"	t	typeref:struct:SortElement	file:
SortInfo	generic/tclCmdIL.c	/^} SortInfo;$/;"	t	typeref:struct:__anond5eb1cce0308	file:
SortMemCmpFn_t	generic/tclCmdIL.c	/^typedef int (*SortMemCmpFn_t) (const void *, const void *, Tcl_Size);$/;"	t	typeref:typename:int (*)(const void *,const void *,Tcl_Size)	file:
SortMethodNames	generic/tclOOCall.c	/^SortMethodNames($/;"	f	typeref:typename:size_t	file:
SortPropList	generic/tclOOProp.c	/^SortPropList($/;"	f	typeref:typename:void	file:
SortStrCmpFn_t	generic/tclCmdIL.c	/^typedef int (*SortStrCmpFn_t) (const char *, const char *);$/;"	t	typeref:typename:int (*)(const char *,const char *)	file:
Source	compat/zlib/contrib/ada/buffer_demo.adb	/^   Source : Stream_Element_Array (1 .. Text'Length);$/;"	v	subprogram:Buffer_Demo	file:
Source	unix/tcl.spec	/^Source:        http:\/\/prdownloads.sourceforge.net\/tcl\/tclunchained%{version}-src.tar.gz$/;"	t
SpaceLeft	generic/tclIO.c	/^#define SpaceLeft(/;"	d	file:
SpecialFree	generic/tclTest.c	/^static Tcl_FreeProc	SpecialFree;$/;"	v	typeref:typename:Tcl_FreeProc	file:
SpecialFree	generic/tclTest.c	/^static void SpecialFree($/;"	f	typeref:typename:void	file:
SpinLockLock	macosx/tclMacOSXNotify.c	/^SpinLockLock($/;"	f	typeref:typename:void	file:
SpinLockLockDbg	macosx/tclMacOSXNotify.c	/^#define SpinLockLockDbg(/;"	d	file:
SpinLockLockInit	macosx/tclMacOSXNotify.c	/^SpinLockLockInit(void)$/;"	f	typeref:typename:void	file:
SpinLockTry	macosx/tclMacOSXNotify.c	/^SpinLockTry($/;"	f	typeref:typename:bool	file:
SpinLockTry	macosx/tclMacOSXNotify.c	/^SpinLockTry($/;"	f	typeref:typename:int	file:
SpinLockUnlock	macosx/tclMacOSXNotify.c	/^SpinLockUnlock($/;"	f	typeref:typename:void	file:
SpliceChannel	generic/tclIO.c	/^SpliceChannel($/;"	f	typeref:typename:void	file:
SplitUnixPath	generic/tclFileName.c	/^SplitUnixPath($/;"	f	typeref:typename:Tcl_Obj *	file:
SplitWinPath	generic/tclFileName.c	/^SplitWinPath($/;"	f	typeref:typename:Tcl_Obj *	file:
SquelchCachedName	generic/tclOO.c	/^SquelchCachedName($/;"	f	typeref:typename:void	file:
SrcExitProc	generic/tclIORChan.c	/^SrcExitProc($/;"	f	typeref:typename:void	file:
SrcExitProc	generic/tclIORTrans.c	/^SrcExitProc($/;"	f	typeref:typename:void	file:
StackAllocWords	generic/tclExecute.c	/^StackAllocWords($/;"	f	typeref:typename:Tcl_Obj **	file:
StackCheckBasicBlock	generic/tclAssembly.c	/^StackCheckBasicBlock($/;"	f	typeref:typename:int	file:
StackCheckExit	generic/tclAssembly.c	/^StackCheckExit($/;"	f	typeref:typename:int	file:
StackFreshCatches	generic/tclAssembly.c	/^StackFreshCatches($/;"	f	typeref:typename:void	file:
StackReallocWords	generic/tclExecute.c	/^StackReallocWords($/;"	f	typeref:typename:Tcl_Obj **	file:
StackSetBlockMode	generic/tclIO.c	/^StackSetBlockMode($/;"	f	typeref:typename:int	file:
Stamp	compat/zlib/contrib/ada/test.adb	/^   procedure Stamp is$/;"	r	subprogram:Test	file:
Stamp	compat/zlib/contrib/ada/test.adb	/^   procedure Stamp;$/;"	R	subprogram:Test	file:
Standard Channels	doc/StdChannels.3	/^.TH "Standard Channels" 3 7.5 Tcl "Tcl Library Procedures"$/;"	t
StartBasicBlock	generic/tclAssembly.c	/^StartBasicBlock($/;"	f	typeref:typename:BasicBlock *	file:
StartExpanding	generic/tclCompile.c	/^StartExpanding($/;"	f	typeref:typename:void	file:
StartNotifierThread	macosx/tclMacOSXNotify.c	/^StartNotifierThread(void)$/;"	f	typeref:typename:void	file:
StartNotifierThread	unix/tclUnixNotfy.c	/^StartNotifierThread($/;"	f	typeref:typename:void	file:
StashCallChain	generic/tclOOCall.c	/^StashCallChain($/;"	f	typeref:typename:void	file:
StatError	unix/tclUnixFCmd.c	/^StatError($/;"	f	typeref:typename:void	file:
StatError	win/tclWinFCmd.c	/^StatError($/;"	f	typeref:typename:void	file:
StatOpenFile	unix/tclUnixChan.c	/^StatOpenFile($/;"	f	typeref:typename:Tcl_Obj *	file:
StatOpenFile	win/tclWinChan.c	/^StatOpenFile($/;"	f	typeref:typename:Tcl_Obj *	file:
State	generic/tclStrToD.c	/^    enum State {$/;"	g	function:TclParseNumber	file:
StaticInitProc	generic/tclTest.c	/^StaticInitProc($/;"	f	typeref:typename:int	file:
Status_Error	compat/zlib/contrib/ada/zlib.ads	/^   Status_Error : exception;$/;"	x	packspec:ZLib
StdinProc	generic/tclMain.c	/^StdinProc($/;"	f	typeref:typename:void	file:
Step	compat/zlib/contrib/ada/zlib.adb	/^      Step : Flate_Step_Function;$/;"	c	type:Flate_Type	file:
Stop	compat/zlib/contrib/ada/mtest.adb	/^   Stop : Boolean := False;$/;"	v	subprogram:MTest	file:
StopCalibration	win/tclWinTime.c	/^StopCalibration($/;"	f	typeref:typename:void	file:
StopCopy	generic/tclIO.c	/^StopCopy($/;"	f	typeref:typename:void	file:
StoreStatData	generic/tclCmdAH.c	/^StoreStatData($/;"	f	typeref:typename:int	file:
StrIdxTreeObjType	generic/tclStrIdxTree.c	/^static const Tcl_ObjType StrIdxTreeObjType = {$/;"	v	typeref:typename:const Tcl_ObjType	file:
StrIdxTreeObj_DupIntRepProc	generic/tclStrIdxTree.c	/^StrIdxTreeObj_DupIntRepProc($/;"	f	typeref:typename:void	file:
StrIdxTreeObj_FreeIntRepProc	generic/tclStrIdxTree.c	/^StrIdxTreeObj_FreeIntRepProc($/;"	f	typeref:typename:void	file:
StrIdxTreeObj_UpdateStringProc	generic/tclStrIdxTree.c	/^StrIdxTreeObj_UpdateStringProc($/;"	f	typeref:typename:void	file:
Strategy	compat/zlib/contrib/ada/test.adb	/^   Strategy    : constant ZLib.Strategy_Type := ZLib.Default_Strategy;$/;"	n	subprogram:Test	file:
Strategy_Type	compat/zlib/contrib/ada/zlib.ads	/^   type Strategy_Type is new Integer range 0 .. 3;$/;"	t	packspec:ZLib	file:
Strategy_Type	compat/zlib/contrib/ada/zlib.ads	/^   type Strategy_Type is private;$/;"	t	packspec:ZLib
Stream_Access	compat/zlib/contrib/ada/zlib-streams.ads	/^   type Stream_Access is access all Ada.Streams.Root_Stream_Type'Class;$/;"	t	packspec:ZLib.Streams
Stream_End	compat/zlib/contrib/ada/zlib.adb	/^   function Stream_End (Filter : in Filter_Type) return Boolean is$/;"	r	package:ZLib	file:
Stream_End	compat/zlib/contrib/ada/zlib.ads	/^      Stream_End  : Boolean;$/;"	v	packspec:ZLib	file:
Stream_End	compat/zlib/contrib/ada/zlib.ads	/^   function Stream_End (Filter : in Filter_Type) return Boolean;$/;"	R	packspec:ZLib
Stream_Mode	compat/zlib/contrib/ada/zlib-streams.ads	/^   type Stream_Mode is (In_Stream, Out_Stream, Duplex);$/;"	t	packspec:ZLib.Streams
Stream_Type	compat/zlib/contrib/ada/zlib-streams.ads	/^   type Stream_Type is$/;"	t	packspec:ZLib.Streams
Stream_Type	compat/zlib/contrib/ada/zlib-streams.ads	/^   type Stream_Type$/;"	t	packspec:ZLib.Streams	file:
StrictBignumConversion	generic/tclStrToD.c	/^StrictBignumConversion($/;"	f	typeref:typename:char *	file:
StrictBignumConversionPowD	generic/tclStrToD.c	/^StrictBignumConversionPowD($/;"	f	typeref:typename:char *	file:
StrictInt64Conversion	generic/tclStrToD.c	/^StrictInt64Conversion($/;"	f	typeref:typename:char *	file:
StrictQuickFormat	generic/tclStrToD.c	/^StrictQuickFormat($/;"	f	typeref:typename:char *	file:
String	generic/tclStringRep.h	/^} String;$/;"	t	typeref:struct:__anonf2feabe80108
StringAppendInVar	generic/tclVar.c	/^StringAppendInVar($/;"	f	typeref:typename:void	file:
StringCatCmd	generic/tclCmdMZ.c	/^StringCatCmd($/;"	f	typeref:typename:int	file:
StringClassDesc	generic/tclCompile.h	/^typedef struct StringClassDesc {$/;"	s
StringClassDesc	generic/tclCompile.h	/^} StringClassDesc;$/;"	t	typeref:struct:StringClassDesc
StringCmpCmd	generic/tclCmdMZ.c	/^StringCmpCmd($/;"	f	typeref:typename:int	file:
StringCmpOpts	generic/tclCmdMZ.c	/^StringCmpOpts($/;"	f	typeref:typename:int
StringEndCmd	generic/tclCmdMZ.c	/^StringEndCmd($/;"	f	typeref:typename:int	file:
StringEqualCmd	generic/tclCmdMZ.c	/^StringEqualCmd($/;"	f	typeref:typename:int	file:
StringFirstCmd	generic/tclCmdMZ.c	/^StringFirstCmd($/;"	f	typeref:typename:int	file:
StringForResultCode	generic/tclExecute.c	/^StringForResultCode($/;"	f	typeref:typename:const char *	file:
StringIndexCmd	generic/tclCmdMZ.c	/^StringIndexCmd($/;"	f	typeref:typename:int	file:
StringInsertCmd	generic/tclCmdMZ.c	/^StringInsertCmd($/;"	f	typeref:typename:int	file:
StringIsCmd	generic/tclCmdMZ.c	/^StringIsCmd($/;"	f	typeref:typename:int	file:
StringLastCmd	generic/tclCmdMZ.c	/^StringLastCmd($/;"	f	typeref:typename:int	file:
StringLenCmd	generic/tclCmdMZ.c	/^StringLenCmd($/;"	f	typeref:typename:int	file:
StringLowerCmd	generic/tclCmdMZ.c	/^StringLowerCmd($/;"	f	typeref:typename:int	file:
StringMapCmd	generic/tclCmdMZ.c	/^StringMapCmd($/;"	f	typeref:typename:int	file:
StringMatchCmd	generic/tclCmdMZ.c	/^StringMatchCmd($/;"	f	typeref:typename:int	file:
StringRangeCmd	generic/tclCmdMZ.c	/^StringRangeCmd($/;"	f	typeref:typename:int	file:
StringReptCmd	generic/tclCmdMZ.c	/^StringReptCmd($/;"	f	typeref:typename:int	file:
StringRevCmd	generic/tclCmdMZ.c	/^StringRevCmd($/;"	f	typeref:typename:int	file:
StringRplcCmd	generic/tclCmdMZ.c	/^StringRplcCmd($/;"	f	typeref:typename:int	file:
StringStartCmd	generic/tclCmdMZ.c	/^StringStartCmd($/;"	f	typeref:typename:int	file:
StringTitleCmd	generic/tclCmdMZ.c	/^StringTitleCmd($/;"	f	typeref:typename:int	file:
StringTraceData	generic/tclTrace.c	/^} StringTraceData;$/;"	t	typeref:struct:__anonfe0b53740408	file:
StringTraceDeleteProc	generic/tclTrace.c	/^StringTraceDeleteProc($/;"	f	typeref:typename:void	file:
StringTraceProc	generic/tclTrace.c	/^StringTraceProc($/;"	f	typeref:typename:int	file:
StringTrimCmd	generic/tclCmdMZ.c	/^StringTrimCmd($/;"	f	typeref:typename:int	file:
StringTrimLCmd	generic/tclCmdMZ.c	/^StringTrimLCmd($/;"	f	typeref:typename:int	file:
StringTrimRCmd	generic/tclCmdMZ.c	/^StringTrimRCmd($/;"	f	typeref:typename:int	file:
StringUpperCmd	generic/tclCmdMZ.c	/^StringUpperCmd($/;"	f	typeref:typename:int	file:
SubCmdIdx	win/tclWinReg.c	/^    enum SubCmdIdx {$/;"	g	function:RegistryObjCmd	file:
SubstFlags	generic/tclCompile.c	/^#define SubstFlags(/;"	d	file:
SubstituteFile	win/nmakehlp.c	/^SubstituteFile($/;"	f	typeref:typename:int	file:
SubstituteNameLength	win/tclWinFile.c	/^	    WORD SubstituteNameLength;$/;"	m	struct:_REPARSE_DATA_BUFFER::__anon1c302b04010a::__anon1c302b040208	typeref:typename:WORD	file:
SubstituteNameLength	win/tclWinFile.c	/^	    WORD SubstituteNameLength;$/;"	m	struct:_REPARSE_DATA_BUFFER::__anon1c302b04010a::__anon1c302b040308	typeref:typename:WORD	file:
SubstituteNameOffset	win/tclWinFile.c	/^	    WORD SubstituteNameOffset;$/;"	m	struct:_REPARSE_DATA_BUFFER::__anon1c302b04010a::__anon1c302b040208	typeref:typename:WORD	file:
SubstituteNameOffset	win/tclWinFile.c	/^	    WORD SubstituteNameOffset;$/;"	m	struct:_REPARSE_DATA_BUFFER::__anon1c302b04010a::__anon1c302b040308	typeref:typename:WORD	file:
Summary	libtommath/README.md	/^## Summary$/;"	s	chapter:libtommath
Summary	unix/tcl.spec	/^Summary:       TclUnchained scripting language development environment$/;"	t
SwitchPostProc	generic/tclCmdMZ.c	/^SwitchPostProc($/;"	f	typeref:typename:int	file:
SwitchPostProc	generic/tclCmdMZ.c	/^static Tcl_NRPostProc	SwitchPostProc;$/;"	v	typeref:typename:Tcl_NRPostProc	file:
Switch_Exact	generic/tclCompCmdsSZ.c	/^    enum {Switch_Exact, Switch_Glob, Switch_Regexp} mode;$/;"	e	enum:TclCompileSwitchCmd::__anon0dbab4280103	file:
Switch_Exact	generic/tclCompCmdsSZ.c	/^    enum {Switch_Exact, Switch_Glob, Switch_Regexp};$/;"	e	enum:IssueSwitchChainedTests::__anon0dbab4280203	file:
Switch_Glob	generic/tclCompCmdsSZ.c	/^    enum {Switch_Exact, Switch_Glob, Switch_Regexp} mode;$/;"	e	enum:TclCompileSwitchCmd::__anon0dbab4280103	file:
Switch_Glob	generic/tclCompCmdsSZ.c	/^    enum {Switch_Exact, Switch_Glob, Switch_Regexp};$/;"	e	enum:IssueSwitchChainedTests::__anon0dbab4280203	file:
Switch_Regexp	generic/tclCompCmdsSZ.c	/^    enum {Switch_Exact, Switch_Glob, Switch_Regexp} mode;$/;"	e	enum:TclCompileSwitchCmd::__anon0dbab4280103	file:
Switch_Regexp	generic/tclCompCmdsSZ.c	/^    enum {Switch_Exact, Switch_Glob, Switch_Regexp};$/;"	e	enum:IssueSwitchChainedTests::__anon0dbab4280203	file:
SymbolicLinkReparseBuffer	win/tclWinFile.c	/^	} SymbolicLinkReparseBuffer;$/;"	m	union:_REPARSE_DATA_BUFFER::__anon1c302b04010a	typeref:struct:_REPARSE_DATA_BUFFER::__anon1c302b04010a::__anon1c302b040208	file:
Sync	compat/zlib/contrib/dotzlib/DotZLib/DotZLib.cs	/^        None,  Partial,  Sync,  Full,  Finish,  Block$/;"	e	enum:DotZLib.FlushTypes	file:
SyncAccessPath	library/safe.tcl	/^proc ::safe::SyncAccessPath {child} {$/;"	p	namespace:::safe
SyncObjRecord	generic/tclThread.c	/^} SyncObjRecord;$/;"	t	typeref:struct:__anone579f3dd0108	file:
SyncStackDepth	generic/tclAssembly.c	/^SyncStackDepth($/;"	f	typeref:typename:void	file:
Sync_Flush	compat/zlib/contrib/ada/zlib.ads	/^   Sync_Flush    : constant Flush_Mode := 2;$/;"	n	packspec:ZLib	file:
Sync_Flush	compat/zlib/contrib/ada/zlib.ads	/^   Sync_Flush    : constant Flush_Mode;$/;"	n	packspec:ZLib
SysErr	unix/tclLoadAix.c	/^#define SysErr(/;"	d	file:
TABLE	compat/zlib/contrib/infback9/inflate9.h	/^        TABLE,      \/* i: waiting for dynamic block table lengths *\/$/;"	e	enum:__anonf28101a00103
TABLE	compat/zlib/inflate.h	/^        TABLE,      \/* i: waiting for dynamic block table lengths *\/$/;"	e	enum:__anon6bf0a2910103
TABLE	generic/tclDate.c	/^} TABLE;$/;"	t	typeref:struct:__anone8f8f7230108	file:
TABLE	generic/tclDateClassic.c	/^} TABLE;$/;"	t	typeref:struct:_TABLE	file:
TAB_SIZE	libtommath/bn_s_mp_exptmod.c	/^#   define TAB_SIZE /;"	d	file:
TAB_SIZE	libtommath/bn_s_mp_exptmod_fast.c	/^#   define TAB_SIZE /;"	d	file:
TAG_SIZE	generic/tclCkalloc.c	/^#define TAG_SIZE(/;"	d	file:
TAIL	compat/zlib/examples/gznorm.c	/^        TAIL            \/\/ reading a gzip trailer$/;"	e	enum:gzip_normalize::__anon5bfe4c340103	file:
TAR	compat/zlib/Makefile.in	/^TAR=tar$/;"	m
TARGET	compat/zlib/nintendods/Makefile	/^TARGET		:=	$(shell basename $(CURDIR))$/;"	m
TARGETS	win/vctool.bat	/^set TARGETS=%TARGETS% %1$/;"	v
TARGETS	win/vctool.bat	/^set TARGETS=%TARGETS% release$/;"	v
TARGETS_EXPORT_NAME	libtommath/CMakeLists.txt	/^set(TARGETS_EXPORT_NAME "${PROJECT_NAME}Targets")$/;"	v
TBLS	generic/tclZipfs.c	/^#define TBLS /;"	d	file:
TCHAR	generic/tclMain.c	/^#   define TCHAR /;"	d	file:
TCHAR	generic/tclPlatDecls.h	/^	typedef char TCHAR;$/;"	t	typeref:typename:char
TCHAR	generic/tclPlatDecls.h	/^	typedef wchar_t TCHAR;$/;"	t	typeref:typename:wchar_t
TCHAR	win/tclWinPort.h	/^    typedef _TCHAR TCHAR;$/;"	t	typeref:typename:_TCHAR
TCLAPI	generic/tcl.h	/^#   define TCLAPI /;"	d
TCLAPI	generic/tclOODecls.h	/^#	define TCLAPI /;"	d
TCLBOOLWARNING	generic/tclDecls.h	/^#	define TCLBOOLWARNING(/;"	d
TCLBOOLWARNING	generic/tclDecls.h	/^#   define TCLBOOLWARNING(/;"	d
TCLBOOLWARNING	generic/tclTest.c	/^#define TCLBOOLWARNING(/;"	d	file:
TCLBOOLWARNING	generic/tclTestObj.c	/^#define TCLBOOLWARNING(/;"	d	file:
TCLDATEHDR	unix/Makefile.in	/^TCLDATEHDR=$(GENERIC_DIR)\/tclDate.h $(GENERIC_DIR)\/tclStrIdxTree.h$/;"	m
TCLEXCEPTION_REGISTRATION	win/tclWinInt.h	/^typedef struct TCLEXCEPTION_REGISTRATION {$/;"	s
TCLEXCEPTION_REGISTRATION	win/tclWinInt.h	/^} TCLEXCEPTION_REGISTRATION;$/;"	t	typeref:struct:TCLEXCEPTION_REGISTRATION
TCLFLEXARRAY	generic/tclInt.h	/^#   define TCLFLEXARRAY /;"	d
TCLFLEXARRAY	generic/tclInt.h	/^#   define TCLFLEXARRAY$/;"	d
TCLFSENCODING	generic/tclInt.h	/^#   define TCLFSENCODING /;"	d
TCLNR_ALLOC	generic/tclInt.h	/^#define TCLNR_ALLOC(/;"	d
TCLNR_FREE	generic/tclInt.h	/^#define TCLNR_FREE(/;"	d
TCLOO_H_INCLUDED	generic/tclOO.h	/^#define TCLOO_H_INCLUDED$/;"	d
TCLOO_PATCHLEVEL	generic/tclOO.h	/^#define TCLOO_PATCHLEVEL /;"	d
TCLOO_PROCEDURE_METHOD_VERSION	generic/tclOOInt.h	/^#define TCLOO_PROCEDURE_METHOD_VERSION TCLOO_PROCEDURE_METHOD_VERSION_/;"	d
TCLOO_PROCEDURE_METHOD_VERSION_1	generic/tclOOInt.h	/^    TCLOO_PROCEDURE_METHOD_VERSION_1 = 0$/;"	e	enum:ProcedureMethodVersion
TCLOO_VERSION	generic/tclOO.h	/^#define TCLOO_VERSION /;"	d
TCLPATH_APPENDED	generic/tclPathObj.c	/^#define TCLPATH_APPENDED /;"	d	file:
TCLPATH_NEEDNORM	generic/tclPathObj.c	/^#define TCLPATH_NEEDNORM /;"	d	file:
TCLREHDRS	unix/Makefile.in	/^TCLREHDRS	= $(GENERIC_DIR)\/tclRegexp.h$/;"	m
TCLSH	macosx/GNUmakefile	/^TCLSH			:= tclsh${VERSION}$/;"	m
TCLSH	win/Makefile.in	/^TCLSH			= tclsh$(VER)${EXESUFFIX}$/;"	m
TCLSH_OBJS	unix/Makefile.in	/^TCLSH_OBJS = tclAppInit.o$/;"	m
TCLSH_OBJS	win/Makefile.in	/^TCLSH_OBJS = tclAppInit.$(OBJEXT)$/;"	m
TCLSH_PROG	unix/tcl.m4	/^    AC_SUBST(TCLSH_PROG)$/;"	s
TCLSH_PROG	win/tcl.m4	/^    AC_SUBST(TCLSH_PROG)$/;"	s
TCLTEST_EXE	unix/Makefile.in	/^TCLTEST_EXE		= tcltest${EXE_SUFFIX}$/;"	m
TCLTEST_OBJS	unix/Makefile.in	/^TCLTEST_OBJS = tclTestInit.o tclTest.o tclTestObj.o tclTestProcBodyObj.o \\$/;"	m
TCLTEST_OBJS	win/Makefile.in	/^TCLTEST_OBJS = \\$/;"	m
TCLTOMMATH_EPOCH	generic/tclTomMathDecls.h	/^#define TCLTOMMATH_EPOCH /;"	d
TCLTOMMATH_REVISION	generic/tclTomMathDecls.h	/^#define TCLTOMMATH_REVISION /;"	d
TCL_ALIGN	generic/tclInt.h	/^#define TCL_ALIGN(/;"	d
TCL_ALIGN_BYTES	generic/tclInt.h	/^#define TCL_ALIGN_BYTES /;"	d
TCL_ALLOCALIGN	generic/tclInt.h	/^#define TCL_ALLOCALIGN	/;"	d
TCL_ALLOW_EXCEPTIONS	generic/tclInt.h	/^#define TCL_ALLOW_EXCEPTIONS	/;"	d
TCL_ALLOW_INLINE_COMPILATION	generic/tcl.h	/^#define TCL_ALLOW_INLINE_COMPILATION /;"	d
TCL_ALL_EVENTS	generic/tcl.h	/^#define TCL_ALL_EVENTS	/;"	d
TCL_ALPHA_RELEASE	generic/tcl.h	/^#define TCL_ALPHA_RELEASE	/;"	d
TCL_APPEND_VALUE	generic/tcl.h	/^#define TCL_APPEND_VALUE	/;"	d
TCL_ARGV_AUTO_HELP	generic/tcl.h	/^#define TCL_ARGV_AUTO_HELP /;"	d
TCL_ARGV_AUTO_REST	generic/tcl.h	/^#define TCL_ARGV_AUTO_REST /;"	d
TCL_ARGV_CONSTANT	generic/tcl.h	/^#define TCL_ARGV_CONSTANT	/;"	d
TCL_ARGV_END	generic/tcl.h	/^#define TCL_ARGV_END	/;"	d
TCL_ARGV_FLOAT	generic/tcl.h	/^#define TCL_ARGV_FLOAT	/;"	d
TCL_ARGV_FUNC	generic/tcl.h	/^#define TCL_ARGV_FUNC	/;"	d
TCL_ARGV_GENFUNC	generic/tcl.h	/^#define TCL_ARGV_GENFUNC	/;"	d
TCL_ARGV_HELP	generic/tcl.h	/^#define TCL_ARGV_HELP	/;"	d
TCL_ARGV_INT	generic/tcl.h	/^#define TCL_ARGV_INT	/;"	d
TCL_ARGV_REST	generic/tcl.h	/^#define TCL_ARGV_REST	/;"	d
TCL_ARGV_STRING	generic/tcl.h	/^#define TCL_ARGV_STRING	/;"	d
TCL_ARGV_TABLE_END	generic/tcl.h	/^#define TCL_ARGV_TABLE_END /;"	d
TCL_AUTO_LENGTH	generic/tcl.h	/^#define TCL_AUTO_LENGTH	/;"	d
TCL_AVOID_RESOLVERS	generic/tclInt.h	/^#define TCL_AVOID_RESOLVERS /;"	d
TCL_BADCHANNELOPTION	doc/CrtChannel.3	/^.SH TCL_BADCHANNELOPTION$/;"	s	title:Tcl_CreateChannel
TCL_BETA_RELEASE	generic/tcl.h	/^#define TCL_BETA_RELEASE	/;"	d
TCL_BIN_DIR	unix/tcl.m4	/^    AC_SUBST(TCL_BIN_DIR)$/;"	s
TCL_BIN_DIR	win/configure.ac	/^AC_SUBST(TCL_BIN_DIR)$/;"	s
TCL_BIN_DIR	win/tcl.m4	/^    AC_SUBST(TCL_BIN_DIR)$/;"	s
TCL_BREAK	generic/tcl.h	/^#define TCL_BREAK	/;"	d
TCL_BREAK	generic/tclDTrace.d	/^    TCL_BREAK,$/;"	e	enum:return_codes	file:
TCL_BUILDTIME_LIBRARY	unix/Makefile.in	/^TCL_BUILDTIME_LIBRARY	= @TCL_BUILDTIME_LIBRARY@$/;"	m
TCL_BUILDTIME_LIBRARY	unix/configure.ac	/^AC_SUBST(TCL_BUILDTIME_LIBRARY)$/;"	s
TCL_BUILD_LIB_SPEC	unix/configure.ac	/^AC_SUBST(TCL_BUILD_LIB_SPEC)$/;"	s
TCL_BUILD_LIB_SPEC	win/configure.ac	/^AC_SUBST(TCL_BUILD_LIB_SPEC)$/;"	s
TCL_BUILD_STUB_LIB_PATH	unix/configure.ac	/^AC_SUBST(TCL_BUILD_STUB_LIB_PATH)$/;"	s
TCL_BUILD_STUB_LIB_PATH	win/configure.ac	/^AC_SUBST(TCL_BUILD_STUB_LIB_PATH)$/;"	s
TCL_BUILD_STUB_LIB_SPEC	unix/configure.ac	/^AC_SUBST(TCL_BUILD_STUB_LIB_SPEC)$/;"	s
TCL_BUILD_STUB_LIB_SPEC	win/configure.ac	/^AC_SUBST(TCL_BUILD_STUB_LIB_SPEC)$/;"	s
TCL_BYTECODE_PRECOMPILED	generic/tclCompile.h	/^#define TCL_BYTECODE_PRECOMPILED	/;"	d
TCL_BYTECODE_RECOMPILE	generic/tclCompile.h	/^#define TCL_BYTECODE_RECOMPILE	/;"	d
TCL_BYTECODE_RESOLVE_VARS	generic/tclCompile.h	/^#define TCL_BYTECODE_RESOLVE_VARS	/;"	d
TCL_CANCEL_UNWIND	generic/tcl.h	/^#define TCL_CANCEL_UNWIND	/;"	d
TCL_CFGVAL_ENCODING	generic/tclPkgConfig.c	/^#   define TCL_CFGVAL_ENCODING /;"	d	file:
TCL_CFGVAL_ENCODING	unix/tcl.m4	/^	AC_DEFINE(TCL_CFGVAL_ENCODING,"utf-8",$/;"	d
TCL_CFGVAL_ENCODING	unix/tcl.m4	/^	AC_DEFINE_UNQUOTED(TCL_CFGVAL_ENCODING,"${with_tcencoding}",$/;"	d
TCL_CFGVAL_ENCODING	win/tcl.m4	/^	AC_DEFINE(TCL_CFGVAL_ENCODING,"utf-8")$/;"	d
TCL_CFGVAL_ENCODING	win/tcl.m4	/^	AC_DEFINE_UNQUOTED(TCL_CFGVAL_ENCODING,"${with_tcencoding}")$/;"	d
TCL_CFG_DO64BIT	generic/tcl.h	/^#	define TCL_CFG_DO64BIT /;"	d
TCL_CFG_DO64BIT	unix/tcl.m4	/^	AC_DEFINE(TCL_CFG_DO64BIT, 1, [Is this a 64-bit build?])$/;"	d
TCL_CFG_DO64BIT	win/tcl.m4	/^	AC_DEFINE(TCL_CFG_DO64BIT)$/;"	d
TCL_CFG_OPTIMIZED	unix/tcl.m4	/^	AC_DEFINE(TCL_CFG_OPTIMIZED, 1, [Is this an optimized build?])$/;"	d
TCL_CFG_OPTIMIZED	win/tcl.m4	/^	AC_DEFINE(TCL_CFG_OPTIMIZED)$/;"	d
TCL_CHANNELTYPE	doc/CrtChannel.3	/^.SH TCL_CHANNELTYPE$/;"	s	title:Tcl_CreateChannel
TCL_CHANNEL_THREAD_INSERT	generic/tcl.h	/^#define TCL_CHANNEL_THREAD_INSERT /;"	d
TCL_CHANNEL_THREAD_REMOVE	generic/tcl.h	/^#define TCL_CHANNEL_THREAD_REMOVE /;"	d
TCL_CHANNEL_VERSION_5	generic/tcl.h	/^#define TCL_CHANNEL_VERSION_5	/;"	d
TCL_CLOCK_FULL_COMPAT	generic/tclClockFmt.c	/^#define TCL_CLOCK_FULL_COMPAT /;"	d	file:
TCL_CLOCK_PREFIX_LEN	generic/tclClock.c	/^#define TCL_CLOCK_PREFIX_LEN /;"	d	file:
TCL_CLOCK_PREFIX_LEN	generic/tclClockClassic.c	/^#define TCL_CLOCK_PREFIX_LEN /;"	d	file:
TCL_CLONEPROC FUNCTION SIGNATURE	doc/Class.3	/^.SS "TCL_CLONEPROC FUNCTION SIGNATURE"$/;"	S	section:Tcl_Class""OBJECT AND CLASS METADATA
TCL_CLONEPROC FUNCTION SIGNATURE	doc/Method.3	/^.SS "TCL_CLONEPROC FUNCTION SIGNATURE"$/;"	S	section:Tcl_Method""METHOD TYPES
TCL_CLOSE	doc/OpenFileChnl.3	/^.SH TCL_CLOSE$/;"	s	title:Tcl_OpenFileChannel
TCL_CLOSE2PROC	generic/tcl.h	/^#define TCL_CLOSE2PROC	/;"	d
TCL_CLOSE_READ	generic/tcl.h	/^#define TCL_CLOSE_READ	/;"	d
TCL_CLOSE_WRITE	generic/tcl.h	/^#define TCL_CLOSE_WRITE	/;"	d
TCL_CODE_USER_MAX	generic/tcl.h	/^#define TCL_CODE_USER_MAX	/;"	d
TCL_CODE_USER_MIN	generic/tcl.h	/^#define TCL_CODE_USER_MIN	/;"	d
TCL_COMBINE	generic/tcl.h	/^#define TCL_COMBINE	/;"	d
TCL_COMMENT	generic/tcl.h	/^#define TCL_COMMENT(/;"	d
TCL_COMPILE_DEBUG	unix/tcl.m4	/^	    AC_DEFINE(TCL_COMPILE_DEBUG, 1, [Is bytecode debugging enabled?])$/;"	d
TCL_COMPILE_DEBUG	win/tcl.m4	/^	AC_DEFINE(TCL_COMPILE_DEBUG, 1, [Is bytecode debugging enabled?])$/;"	d
TCL_COMPILE_STATS	unix/tcl.m4	/^	    AC_DEFINE(TCL_COMPILE_STATS, 1, [Are bytecode statistics enabled?])$/;"	d
TCL_COMPILE_STATS	win/tcl.m4	/^	AC_DEFINE(TCL_COMPILE_STATS, 1, [Are bytecode statistics enabled?])$/;"	d
TCL_CONFIG	doc/RegConfig.3	/^.SH TCL_CONFIG$/;"	s	title:Tcl_RegisterConfig
TCL_CONTINUE	generic/tcl.h	/^#define TCL_CONTINUE	/;"	d
TCL_CONTINUE	generic/tclDTrace.d	/^    TCL_CONTINUE$/;"	e	enum:return_codes	file:
TCL_CONVERT_MULTIBYTE	generic/tcl.h	/^#define TCL_CONVERT_MULTIBYTE	/;"	d
TCL_CONVERT_NOSPACE	generic/tcl.h	/^#define TCL_CONVERT_NOSPACE	/;"	d
TCL_CONVERT_SYNTAX	generic/tcl.h	/^#define TCL_CONVERT_SYNTAX	/;"	d
TCL_CONVERT_UNKNOWN	generic/tcl.h	/^#define TCL_CONVERT_UNKNOWN	/;"	d
TCL_CREATE_HARD_LINK	generic/tcl.h	/^#define TCL_CREATE_HARD_LINK	/;"	d
TCL_CREATE_NS_IF_UNKNOWN	generic/tclInt.h	/^#define TCL_CREATE_NS_IF_UNKNOWN	/;"	d
TCL_CREATE_SYMBOLIC_LINK	generic/tcl.h	/^#define TCL_CREATE_SYMBOLIC_LINK	/;"	d
TCL_CT_ASSERT	generic/tclInt.h	/^#define TCL_CT_ASSERT(/;"	d
TCL_CUSTOM_PTR_KEYS	generic/tcl.h	/^#define TCL_CUSTOM_PTR_KEYS	/;"	d
TCL_CUSTOM_TYPE_KEYS	generic/tcl.h	/^#define TCL_CUSTOM_TYPE_KEYS	/;"	d
TCL_DDE_EXECUTE_RESULT	win/tclWinDde.c	/^#define TCL_DDE_EXECUTE_RESULT	/;"	d	file:
TCL_DDE_MAJOR_VERSION	win/configure.ac	/^AC_SUBST(TCL_DDE_MAJOR_VERSION)$/;"	s
TCL_DDE_MINOR_VERSION	win/configure.ac	/^AC_SUBST(TCL_DDE_MINOR_VERSION)$/;"	s
TCL_DDE_PACKAGE_NAME	win/tclWinDde.c	/^#define TCL_DDE_PACKAGE_NAME	/;"	d	file:
TCL_DDE_SERVICE_NAME	win/tclWinDde.c	/^#define TCL_DDE_SERVICE_NAME	/;"	d	file:
TCL_DDE_VERSION	win/configure.ac	/^AC_SUBST(TCL_DDE_VERSION)$/;"	s
TCL_DDE_VERSION	win/tclWinDde.c	/^#define TCL_DDE_VERSION	/;"	d	file:
TCL_DD_CONVERSION_TYPE_MASK	generic/tclInt.h	/^#define TCL_DD_CONVERSION_TYPE_MASK	/;"	d
TCL_DD_E_FORMAT	generic/tclInt.h	/^#define TCL_DD_E_FORMAT /;"	d
TCL_DD_F_FORMAT	generic/tclInt.h	/^#define TCL_DD_F_FORMAT /;"	d
TCL_DD_NO_QUICK	generic/tclInt.h	/^#define TCL_DD_NO_QUICK /;"	d
TCL_DD_SHORTEST	generic/tclInt.h	/^#define TCL_DD_SHORTEST /;"	d
TCL_DECLARE_MUTEX	compat/fake-rfc2553.c	/^TCL_DECLARE_MUTEX(netdbMutex)$/;"	f	file:
TCL_DECLARE_MUTEX	generic/tcl.h	/^#define TCL_DECLARE_MUTEX(/;"	d
TCL_DECLARE_MUTEX	generic/tclIOUtil.c	/^TCL_DECLARE_MUTEX(cwdMutex)$/;"	f	file:
TCL_DECLARE_MUTEX	generic/tclInt.h	/^#   define TCL_DECLARE_MUTEX(/;"	d
TCL_DECLARE_MUTEX	generic/tclThreadJoin.c	/^TCL_DECLARE_MUTEX(joinMutex)$/;"	f	file:
TCL_DECLARE_MUTEX	generic/tclZipfs.c	/^TCL_DECLARE_MUTEX(ZipFSMutex)$/;"	f	file:
TCL_DECLARE_MUTEX	win/tclWin32Dll.c	/^TCL_DECLARE_MUTEX(mountPointMap)$/;"	f
TCL_DECLS	unix/Makefile.in	/^TCL_DECLS = \\$/;"	m
TCL_DEFAULT_DOUBLE_ROUNDING	generic/tclStrToD.c	/^#  define TCL_DEFAULT_DOUBLE_ROUNDING	/;"	d	file:
TCL_DEFAULT_DOUBLE_ROUNDING	generic/tclStrToD.c	/^#  define TCL_DEFAULT_DOUBLE_ROUNDING /;"	d	file:
TCL_DEFAULT_ENCODING	unix/tclUnixInit.c	/^#define TCL_DEFAULT_ENCODING /;"	d	file:
TCL_DEFS	win/tcl.m4	/^    AC_SUBST(TCL_DEFS)$/;"	s
TCL_DEPRECATED	generic/tclDecls.h	/^# define TCL_DEPRECATED(/;"	d
TCL_DEPRECATED	generic/tclDecls.h	/^# define TCL_DEPRECATED(msg) EXTERN TCL_DEPRECATED_/;"	d
TCL_DEPRECATED_API	generic/tcl.h	/^#	define TCL_DEPRECATED_API(/;"	d
TCL_DETACHCHANNEL	doc/OpenFileChnl.3	/^.SH TCL_DETACHCHANNEL$/;"	s	title:Tcl_OpenFileChannel
TCL_DLL_FILE	win/Makefile.in	/^TCL_DLL_FILE		= @TCL_DLL_FILE@$/;"	m
TCL_DLL_FILE	win/configure.ac	/^AC_SUBST(TCL_DLL_FILE)$/;"	s
TCL_DOCS	win/Makefile.in	/^TCL_DOCS = "$(ROOT_DIR_NATIVE)"\/doc\/*.[13n]$/;"	m
TCL_DONT_QUOTE_HASH	generic/tcl.h	/^#define TCL_DONT_QUOTE_HASH	/;"	d
TCL_DONT_USE_BRACES	generic/tcl.h	/^#define TCL_DONT_USE_BRACES	/;"	d
TCL_DONT_WAIT	generic/tcl.h	/^#define TCL_DONT_WAIT	/;"	d
TCL_DOUBLE_SPACE	generic/tcl.h	/^#define TCL_DOUBLE_SPACE	/;"	d
TCL_DSTRING_STATIC_SIZE	generic/tcl.h	/^#define TCL_DSTRING_STATIC_SIZE /;"	d
TCL_DTRACE_CMD_ARGS	generic/tclCompile.h	/^#define TCL_DTRACE_CMD_ARGS(/;"	d
TCL_DTRACE_CMD_ARGS_ENABLED	generic/tclCompile.h	/^#define TCL_DTRACE_CMD_ARGS_ENABLED(/;"	d
TCL_DTRACE_CMD_ENTRY	generic/tclCompile.h	/^#define TCL_DTRACE_CMD_ENTRY(/;"	d
TCL_DTRACE_CMD_ENTRY_ENABLED	generic/tclCompile.h	/^#define TCL_DTRACE_CMD_ENTRY_ENABLED(/;"	d
TCL_DTRACE_CMD_INFO	generic/tclCompile.h	/^#define TCL_DTRACE_CMD_INFO(/;"	d
TCL_DTRACE_CMD_INFO_ENABLED	generic/tclCompile.h	/^#define TCL_DTRACE_CMD_INFO_ENABLED(/;"	d
TCL_DTRACE_CMD_RESULT	generic/tclCompile.h	/^#define TCL_DTRACE_CMD_RESULT(/;"	d
TCL_DTRACE_CMD_RESULT_ENABLED	generic/tclCompile.h	/^#define TCL_DTRACE_CMD_RESULT_ENABLED(/;"	d
TCL_DTRACE_CMD_RETURN	generic/tclCompile.h	/^#define TCL_DTRACE_CMD_RETURN(/;"	d
TCL_DTRACE_CMD_RETURN_ENABLED	generic/tclCompile.h	/^#define TCL_DTRACE_CMD_RETURN_ENABLED(/;"	d
TCL_DTRACE_DEBUG_INST_PROBES	generic/tclCompile.h	/^#define TCL_DTRACE_DEBUG_INST_PROBES /;"	d
TCL_DTRACE_DEBUG_LOG	generic/tclBasic.c	/^TCL_DTRACE_DEBUG_LOG()$/;"	f
TCL_DTRACE_DEBUG_LOG	generic/tclCompile.h	/^#define TCL_DTRACE_DEBUG_LOG(/;"	d
TCL_DTRACE_DEBUG_LOG_ENABLED	generic/tclCompile.h	/^#define TCL_DTRACE_DEBUG_LOG_ENABLED /;"	d
TCL_DTRACE_INST_DONE	generic/tclCompile.h	/^#define TCL_DTRACE_INST_DONE(/;"	d
TCL_DTRACE_INST_DONE_ENABLED	generic/tclCompile.h	/^#define TCL_DTRACE_INST_DONE_ENABLED(/;"	d
TCL_DTRACE_INST_LAST	generic/tclExecute.c	/^#define TCL_DTRACE_INST_LAST(/;"	d	file:
TCL_DTRACE_INST_NEXT	generic/tclExecute.c	/^#define TCL_DTRACE_INST_NEXT(/;"	d	file:
TCL_DTRACE_INST_START	generic/tclCompile.h	/^#define TCL_DTRACE_INST_START(/;"	d
TCL_DTRACE_INST_START_ENABLED	generic/tclCompile.h	/^#define TCL_DTRACE_INST_START_ENABLED(/;"	d
TCL_DTRACE_OBJ_CREATE	generic/tclInt.h	/^#define	TCL_DTRACE_OBJ_CREATE(/;"	d
TCL_DTRACE_OBJ_FREE	generic/tclInt.h	/^#define	TCL_DTRACE_OBJ_FREE(/;"	d
TCL_DTRACE_PROC_ARGS	generic/tclCompile.h	/^#define TCL_DTRACE_PROC_ARGS(/;"	d
TCL_DTRACE_PROC_ARGS_ENABLED	generic/tclCompile.h	/^#define TCL_DTRACE_PROC_ARGS_ENABLED(/;"	d
TCL_DTRACE_PROC_ENTRY	generic/tclCompile.h	/^#define TCL_DTRACE_PROC_ENTRY(/;"	d
TCL_DTRACE_PROC_ENTRY_ENABLED	generic/tclCompile.h	/^#define TCL_DTRACE_PROC_ENTRY_ENABLED(/;"	d
TCL_DTRACE_PROC_INFO	generic/tclCompile.h	/^#define TCL_DTRACE_PROC_INFO(/;"	d
TCL_DTRACE_PROC_INFO_ENABLED	generic/tclCompile.h	/^#define TCL_DTRACE_PROC_INFO_ENABLED(/;"	d
TCL_DTRACE_PROC_RESULT	generic/tclCompile.h	/^#define TCL_DTRACE_PROC_RESULT(/;"	d
TCL_DTRACE_PROC_RESULT_ENABLED	generic/tclCompile.h	/^#define TCL_DTRACE_PROC_RESULT_ENABLED(/;"	d
TCL_DTRACE_PROC_RETURN	generic/tclCompile.h	/^#define TCL_DTRACE_PROC_RETURN(/;"	d
TCL_DTRACE_PROC_RETURN_ENABLED	generic/tclCompile.h	/^#define TCL_DTRACE_PROC_RETURN_ENABLED(/;"	d
TCL_DTRACE_TCL_PROBE	generic/tclCompile.h	/^#define TCL_DTRACE_TCL_PROBE(/;"	d
TCL_DTRACE_TCL_PROBE_ENABLED	generic/tclCompile.h	/^#define TCL_DTRACE_TCL_PROBE_ENABLED(/;"	d
TCL_DYLD_USE_DLFCN	macosx/tclMacOSXBundle.c	/^#	define TCL_DYLD_USE_DLFCN /;"	d	file:
TCL_DYLD_USE_DLFCN	unix/tclLoadDyld.c	/^#	define TCL_DYLD_USE_DLFCN /;"	d	file:
TCL_DYLD_USE_NSMODULE	macosx/tclMacOSXBundle.c	/^#	define TCL_DYLD_USE_NSMODULE /;"	d	file:
TCL_DYLD_USE_NSMODULE	unix/tclLoadDyld.c	/^#   define TCL_DYLD_USE_NSMODULE /;"	d	file:
TCL_DYNAMIC	generic/tcl.h	/^#define TCL_DYNAMIC	/;"	d
TCL_EACH_COLLECT	generic/tclInt.h	/^#define TCL_EACH_COLLECT /;"	d
TCL_EACH_KEEP_NONE	generic/tclInt.h	/^#define TCL_EACH_KEEP_NONE /;"	d
TCL_EMPTYSTRING_NO	generic/tclInt.h	/^	TCL_EMPTYSTRING_UNKNOWN = -1, TCL_EMPTYSTRING_NO, TCL_EMPTYSTRING_YES$/;"	e	enum:CheckEmptyStringResult
TCL_EMPTYSTRING_UNKNOWN	generic/tclInt.h	/^	TCL_EMPTYSTRING_UNKNOWN = -1, TCL_EMPTYSTRING_NO, TCL_EMPTYSTRING_YES$/;"	e	enum:CheckEmptyStringResult
TCL_EMPTYSTRING_YES	generic/tclInt.h	/^	TCL_EMPTYSTRING_UNKNOWN = -1, TCL_EMPTYSTRING_NO, TCL_EMPTYSTRING_YES$/;"	e	enum:CheckEmptyStringResult
TCL_ENCODING_CHAR_LIMIT	generic/tcl.h	/^#define TCL_ENCODING_CHAR_LIMIT	/;"	d
TCL_ENCODING_END	generic/tcl.h	/^#define TCL_ENCODING_END	/;"	d
TCL_ENCODING_INTERNAL_USE_MASK	generic/tcl.h	/^#define TCL_ENCODING_INTERNAL_USE_MASK /;"	d
TCL_ENCODING_LE	generic/tclEncoding.c	/^    TCL_ENCODING_LE = 0x100,	\/* Used to distinguish LE\/BE variants *\/$/;"	e	enum:InternalEncodingFlags	file:
TCL_ENCODING_NO_TERMINATE	generic/tcl.h	/^#define TCL_ENCODING_NO_TERMINATE	/;"	d
TCL_ENCODING_PROFILE_REPLACE	generic/tcl.h	/^#define TCL_ENCODING_PROFILE_REPLACE /;"	d
TCL_ENCODING_PROFILE_STRICT	generic/tcl.h	/^#define TCL_ENCODING_PROFILE_STRICT /;"	d
TCL_ENCODING_PROFILE_TCL8	generic/tcl.h	/^#define TCL_ENCODING_PROFILE_TCL8 /;"	d
TCL_ENCODING_START	generic/tcl.h	/^#define TCL_ENCODING_START	/;"	d
TCL_ENCODING_STOPONERROR	generic/tcl.h	/^#define TCL_ENCODING_STOPONERROR	/;"	d
TCL_ENFORCE_MODE	generic/tcl.h	/^#define TCL_ENFORCE_MODE	/;"	d
TCL_ENSEMBLE_PREFIX	generic/tcl.h	/^#define TCL_ENSEMBLE_PREFIX /;"	d
TCL_EOF	doc/OpenFileChnl.3	/^.SH TCL_EOF$/;"	s	title:Tcl_OpenFileChannel
TCL_ERROR	generic/tcl.h	/^#define TCL_ERROR	/;"	d
TCL_ERROR	generic/tclDTrace.d	/^    TCL_ERROR,$/;"	e	enum:return_codes	file:
TCL_EVAL_DIRECT	generic/tcl.h	/^#define TCL_EVAL_DIRECT	/;"	d
TCL_EVAL_DISCARD_RESULT	generic/tclInt.h	/^#define TCL_EVAL_DISCARD_RESULT	/;"	d
TCL_EVAL_FILE	generic/tclInt.h	/^#define TCL_EVAL_FILE	/;"	d
TCL_EVAL_GLOBAL	generic/tcl.h	/^#define TCL_EVAL_GLOBAL	/;"	d
TCL_EVAL_INVOKE	generic/tcl.h	/^#define TCL_EVAL_INVOKE	/;"	d
TCL_EVAL_NOERR	generic/tcl.h	/^#define TCL_EVAL_NOERR /;"	d
TCL_EVAL_NORESOLVE	generic/tclInt.h	/^#define TCL_EVAL_NORESOLVE	/;"	d
TCL_EVAL_SOURCE_IN_FRAME	generic/tclInt.h	/^#define TCL_EVAL_SOURCE_IN_FRAME	/;"	d
TCL_EVENTS_ONLY_RUN_LOOP_MODE	macosx/tclMacOSXNotify.c	/^#define TCL_EVENTS_ONLY_RUN_LOOP_MODE	/;"	d	file:
TCL_EXACT	generic/tcl.h	/^#define TCL_EXACT	/;"	d
TCL_EXCEPTION	generic/tcl.h	/^#define TCL_EXCEPTION	/;"	d
TCL_EXE	unix/Makefile.in	/^TCL_EXE			= tclsh${EXE_SUFFIX}$/;"	m
TCL_EXE	win/Makefile.in	/^TCL_EXE			= @TCL_EXE@$/;"	m
TCL_EXE	win/configure.ac	/^AC_SUBST(TCL_EXE)$/;"	s
TCL_FALSE_JUMP	generic/tclCompile.h	/^    TCL_FALSE_JUMP$/;"	e	enum:__anone79d5a530603
TCL_FILESYSTEM_VERSION_1	generic/tcl.h	/^#define TCL_FILESYSTEM_VERSION_1	/;"	d
TCL_FILESYSTEM_VERSION_2	generic/tclInt.h	/^#define TCL_FILESYSTEM_VERSION_2	/;"	d
TCL_FILE_EVENTS	generic/tcl.h	/^#define TCL_FILE_EVENTS	/;"	d
TCL_FINAL_RELEASE	generic/tcl.h	/^#define TCL_FINAL_RELEASE	/;"	d
TCL_FIND_ONLY_NS	generic/tclInt.h	/^#define TCL_FIND_ONLY_NS	/;"	d
TCL_FLUSH	doc/OpenFileChnl.3	/^.SH TCL_FLUSH$/;"	s	title:Tcl_OpenFileChannel
TCL_FORMAT_PRINTF	generic/tcl.h	/^#	define TCL_FORMAT_PRINTF(/;"	d
TCL_FPCLASSIFY_MODE	generic/tclBasic.c	/^#define TCL_FPCLASSIFY_MODE /;"	d	file:
TCL_FRAMEWORK	unix/configure.ac	/^    AC_DEFINE(TCL_FRAMEWORK, 1, [Is Tcl built as a framework?])$/;"	d
TCL_GETCHANNEL	doc/OpenFileChnl.3	/^.SH TCL_GETCHANNEL$/;"	s	title:Tcl_OpenFileChannel
TCL_GETCHANNELOPTION	doc/OpenFileChnl.3	/^.SH TCL_GETCHANNELOPTION$/;"	s	title:Tcl_OpenFileChannel
TCL_GETSOBJ AND TCL_GETS	doc/OpenFileChnl.3	/^.SH "TCL_GETSOBJ AND TCL_GETS"$/;"	s	title:Tcl_OpenFileChannel
TCL_GLOBAL_ONLY	generic/tcl.h	/^#define TCL_GLOBAL_ONLY	/;"	d
TCL_GLOBMODE_DIR	generic/tclFileName.c	/^#define TCL_GLOBMODE_DIR	/;"	d	file:
TCL_GLOBMODE_TAILS	generic/tclFileName.c	/^#define TCL_GLOBMODE_TAILS	/;"	d	file:
TCL_GLOB_PERM_HIDDEN	generic/tcl.h	/^#define TCL_GLOB_PERM_HIDDEN	/;"	d
TCL_GLOB_PERM_R	generic/tcl.h	/^#define TCL_GLOB_PERM_R	/;"	d
TCL_GLOB_PERM_RONLY	generic/tcl.h	/^#define TCL_GLOB_PERM_RONLY	/;"	d
TCL_GLOB_PERM_W	generic/tcl.h	/^#define TCL_GLOB_PERM_W	/;"	d
TCL_GLOB_PERM_X	generic/tcl.h	/^#define TCL_GLOB_PERM_X	/;"	d
TCL_GLOB_TYPE_BLOCK	generic/tcl.h	/^#define TCL_GLOB_TYPE_BLOCK	/;"	d
TCL_GLOB_TYPE_CHAR	generic/tcl.h	/^#define TCL_GLOB_TYPE_CHAR	/;"	d
TCL_GLOB_TYPE_DIR	generic/tcl.h	/^#define TCL_GLOB_TYPE_DIR	/;"	d
TCL_GLOB_TYPE_FILE	generic/tcl.h	/^#define TCL_GLOB_TYPE_FILE	/;"	d
TCL_GLOB_TYPE_LINK	generic/tcl.h	/^#define TCL_GLOB_TYPE_LINK	/;"	d
TCL_GLOB_TYPE_MOUNT	generic/tcl.h	/^#define TCL_GLOB_TYPE_MOUNT	/;"	d
TCL_GLOB_TYPE_PIPE	generic/tcl.h	/^#define TCL_GLOB_TYPE_PIPE	/;"	d
TCL_GLOB_TYPE_SOCK	generic/tcl.h	/^#define TCL_GLOB_TYPE_SOCK	/;"	d
TCL_HASH_KEY_DIRECT_COMPARE	generic/tcl.h	/^#define TCL_HASH_KEY_DIRECT_COMPARE /;"	d
TCL_HASH_KEY_RANDOMIZE_HASH	generic/tcl.h	/^#define TCL_HASH_KEY_RANDOMIZE_HASH /;"	d
TCL_HASH_KEY_SYSTEM_HASH	generic/tcl.h	/^#define TCL_HASH_KEY_SYSTEM_HASH /;"	d
TCL_HASH_KEY_TYPE_VERSION	generic/tcl.h	/^#define TCL_HASH_KEY_TYPE_VERSION /;"	d
TCL_HASH_TYPE	generic/tcl.h	/^#define TCL_HASH_TYPE /;"	d
TCL_HAS_LONGLONG	unix/configure.ac	/^AC_SUBST(TCL_HAS_LONGLONG)$/;"	s
TCL_IDLE_EVENTS	generic/tcl.h	/^#define TCL_IDLE_EVENTS	/;"	d
TCL_IEEE_DOUBLE_ROUNDING	generic/tclStrToD.c	/^#  define TCL_IEEE_DOUBLE_ROUNDING	/;"	d	file:
TCL_IEEE_DOUBLE_ROUNDING	generic/tclStrToD.c	/^#  define TCL_IEEE_DOUBLE_ROUNDING /;"	d	file:
TCL_IEEE_DOUBLE_ROUNDING_DECL	generic/tclStrToD.c	/^#  define TCL_IEEE_DOUBLE_ROUNDING_DECL /;"	d	file:
TCL_IEEE_DOUBLE_ROUNDING_DECL	generic/tclStrToD.c	/^#  define TCL_IEEE_DOUBLE_ROUNDING_DECL$/;"	d	file:
TCL_IMPORT_LIB_FILE	win/configure.ac	/^AC_SUBST(TCL_IMPORT_LIB_FILE)$/;"	s
TCL_IMPORT_LIB_FLAG	win/configure.ac	/^AC_SUBST(TCL_IMPORT_LIB_FLAG)$/;"	s
TCL_INCLUDE_SPEC	unix/configure.ac	/^AC_SUBST(TCL_INCLUDE_SPEC)$/;"	s
TCL_INCLUDE_SPEC	win/configure.ac	/^AC_SUBST(TCL_INCLUDE_SPEC)$/;"	s
TCL_INDEX_END	generic/tclInt.h	/^#define TCL_INDEX_END	/;"	d
TCL_INDEX_NONE	generic/tcl.h	/^#define TCL_INDEX_NONE /;"	d
TCL_INDEX_START	generic/tclInt.h	/^#define TCL_INDEX_START	/;"	d
TCL_INDEX_TEMP_TABLE	generic/tcl.h	/^#define TCL_INDEX_TEMP_TABLE	/;"	d
TCL_INPUTBLOCKED	doc/OpenFileChnl.3	/^.SH TCL_INPUTBLOCKED$/;"	s	title:Tcl_OpenFileChannel
TCL_INPUTBUFFERED	doc/OpenFileChnl.3	/^.SH TCL_INPUTBUFFERED$/;"	s	title:Tcl_OpenFileChannel
TCL_INTEGER_SPACE	generic/tcl.h	/^#define TCL_INTEGER_SPACE	/;"	d
TCL_INVOKE_HIDDEN	generic/tclInt.h	/^#define	TCL_INVOKE_HIDDEN	/;"	d
TCL_INVOKE_NO_TRACEBACK	generic/tclInt.h	/^#define TCL_INVOKE_NO_TRACEBACK	/;"	d
TCL_INVOKE_NO_UNKNOWN	generic/tclInt.h	/^#define TCL_INVOKE_NO_UNKNOWN	/;"	d
TCL_INV_SECONDS	generic/tclDate.h	/^#define TCL_INV_SECONDS	/;"	d
TCL_IO_FAILURE	generic/tcl.h	/^#define TCL_IO_FAILURE	/;"	d
TCL_ISSTANDARDCHANNEL	doc/OpenFileChnl.3	/^.SH TCL_ISSTANDARDCHANNEL$/;"	s	title:Tcl_OpenFileChannel
TCL_LEAVE_ERR_MSG	generic/tcl.h	/^#define TCL_LEAVE_ERR_MSG	/;"	d
TCL_LENGTH_NONE	generic/tcl.h	/^#define TCL_LENGTH_NONE /;"	d
TCL_LIBRARY	unix/Makefile.in	/^TCL_LIBRARY		= @TCL_LIBRARY@$/;"	m
TCL_LIBRARY	unix/configure.ac	/^AC_SUBST(TCL_LIBRARY)$/;"	s
TCL_LIBRARY	win/Makefile.in	/^TCL_LIBRARY	= $(prefix)\/lib\/tcl$(VERSION)$/;"	m
TCL_LIBRARY_NATIVE	win/Makefile.in	/^TCL_LIBRARY_NATIVE	= $(shell $(CYGPATH) '$(TCL_LIBRARY)')$/;"	m
TCL_LIBS	unix/tcl.m4	/^    AC_SUBST(TCL_LIBS)$/;"	s
TCL_LIB_FILE	unix/Makefile.in	/^TCL_LIB_FILE		= @TCL_LIB_FILE@$/;"	m
TCL_LIB_FILE	unix/configure.ac	/^AC_SUBST(TCL_LIB_FILE)$/;"	s
TCL_LIB_FILE	unix/tcl.m4	/^    AC_SUBST(TCL_LIB_FILE)$/;"	s
TCL_LIB_FILE	win/Makefile.in	/^TCL_LIB_FILE		= @TCL_LIB_FILE@$/;"	m
TCL_LIB_FILE	win/configure.ac	/^AC_SUBST(TCL_LIB_FILE)$/;"	s
TCL_LIB_FILE	win/tcl.m4	/^    AC_SUBST(TCL_LIB_FILE)$/;"	s
TCL_LIB_FLAG	unix/Makefile.in	/^TCL_LIB_FLAG		= @TCL_LIB_FLAG@$/;"	m
TCL_LIB_FLAG	unix/configure.ac	/^AC_SUBST(TCL_LIB_FLAG)$/;"	s
TCL_LIB_FLAG	unix/tcl.m4	/^    AC_SUBST(TCL_LIB_FLAG)$/;"	s
TCL_LIB_FLAG	win/configure.ac	/^AC_SUBST(TCL_LIB_FLAG)$/;"	s
TCL_LIB_FLAG	win/tcl.m4	/^    AC_SUBST(TCL_LIB_FLAG)$/;"	s
TCL_LIB_SPEC	unix/configure.ac	/^AC_SUBST(TCL_LIB_SPEC)$/;"	s
TCL_LIB_SPEC	unix/tcl.m4	/^    AC_SUBST(TCL_LIB_SPEC)$/;"	s
TCL_LIB_SPEC	win/configure.ac	/^AC_SUBST(TCL_LIB_SPEC)$/;"	s
TCL_LIB_SPEC	win/tcl.m4	/^    AC_SUBST(TCL_LIB_SPEC)$/;"	s
TCL_LIB_VERSIONS_OK	unix/configure.ac	/^AC_SUBST(TCL_LIB_VERSIONS_OK)$/;"	s
TCL_LIMIT_COMMANDS	generic/tcl.h	/^#define TCL_LIMIT_COMMANDS	/;"	d
TCL_LIMIT_TIME	generic/tcl.h	/^#define TCL_LIMIT_TIME	/;"	d
TCL_LINK_BINARY	generic/tcl.h	/^#define TCL_LINK_BINARY	/;"	d
TCL_LINK_BOOLEAN	generic/tcl.h	/^#define TCL_LINK_BOOLEAN	/;"	d
TCL_LINK_CHAR	generic/tcl.h	/^#define TCL_LINK_CHAR	/;"	d
TCL_LINK_CHARS	generic/tcl.h	/^#define TCL_LINK_CHARS	/;"	d
TCL_LINK_DOUBLE	generic/tcl.h	/^#define TCL_LINK_DOUBLE	/;"	d
TCL_LINK_FLOAT	generic/tcl.h	/^#define TCL_LINK_FLOAT	/;"	d
TCL_LINK_INT	generic/tcl.h	/^#define TCL_LINK_INT	/;"	d
TCL_LINK_LONG	generic/tcl.h	/^#define TCL_LINK_LONG	/;"	d
TCL_LINK_READ_ONLY	generic/tcl.h	/^#define TCL_LINK_READ_ONLY	/;"	d
TCL_LINK_SHORT	generic/tcl.h	/^#define TCL_LINK_SHORT	/;"	d
TCL_LINK_STRING	generic/tcl.h	/^#define TCL_LINK_STRING	/;"	d
TCL_LINK_UCHAR	generic/tcl.h	/^#define TCL_LINK_UCHAR	/;"	d
TCL_LINK_UINT	generic/tcl.h	/^#define TCL_LINK_UINT	/;"	d
TCL_LINK_ULONG	generic/tcl.h	/^#define TCL_LINK_ULONG	/;"	d
TCL_LINK_USHORT	generic/tcl.h	/^#define TCL_LINK_USHORT	/;"	d
TCL_LINK_WIDE_INT	generic/tcl.h	/^#define TCL_LINK_WIDE_INT	/;"	d
TCL_LINK_WIDE_UINT	generic/tcl.h	/^#define TCL_LINK_WIDE_UINT	/;"	d
TCL_LIST_ELEMENT	generic/tcl.h	/^#define TCL_LIST_ELEMENT	/;"	d
TCL_LL_MODIFIER	generic/tcl.h	/^#	define TCL_LL_MODIFIER	/;"	d
TCL_LOAD_FROM_MEMORY	unix/configure.ac	/^    AC_DEFINE(TCL_LOAD_FROM_MEMORY, 1,$/;"	d
TCL_LOAD_GLOBAL	generic/tcl.h	/^#define TCL_LOAD_GLOBAL /;"	d
TCL_LOAD_LAZY	generic/tcl.h	/^#define TCL_LOAD_LAZY /;"	d
TCL_LOCAL_APPINIT	unix/tclAppInit.c	/^#define TCL_LOCAL_APPINIT /;"	d	file:
TCL_LOCAL_APPINIT	win/tclAppInit.c	/^#define TCL_LOCAL_APPINIT /;"	d	file:
TCL_LOCATIONS	unix/Makefile.in	/^TCL_LOCATIONS	= -DTCL_LIBRARY=$(call shquote ,$(call cstrquote ,${TCL_LIBRARY})) \\$/;"	m
TCL_LOCATION_BC	generic/tclInt.h	/^#define TCL_LOCATION_BC	/;"	d
TCL_LOCATION_EVAL	generic/tclInt.h	/^#define TCL_LOCATION_EVAL	/;"	d
TCL_LOCATION_LAST	generic/tclInt.h	/^#define TCL_LOCATION_LAST	/;"	d
TCL_LOCATION_PREBC	generic/tclInt.h	/^#define TCL_LOCATION_PREBC	/;"	d
TCL_LOCATION_PROC	generic/tclInt.h	/^#define TCL_LOCATION_PROC	/;"	d
TCL_LOCATION_SOURCE	generic/tclInt.h	/^#define TCL_LOCATION_SOURCE	/;"	d
TCL_LREPLACE4_END_IS_LAST	generic/tclCompile.h	/^#define TCL_LREPLACE4_END_IS_LAST /;"	d
TCL_LREPLACE4_SINGLE_INDEX	generic/tclCompile.h	/^#define TCL_LREPLACE4_SINGLE_INDEX /;"	d
TCL_MAC_EMPTY_FILE	generic/tclInt.h	/^#define TCL_MAC_EMPTY_FILE(/;"	d
TCL_MAJOR_VERSION	generic/tcl.h	/^#   define TCL_MAJOR_VERSION	/;"	d
TCL_MAJOR_VERSION	unix/configure.ac	/^AC_SUBST(TCL_MAJOR_VERSION)$/;"	s
TCL_MAJOR_VERSION	win/configure.ac	/^AC_SUBST(TCL_MAJOR_VERSION)$/;"	s
TCL_MAKEFILECHANNEL	doc/OpenFileChnl.3	/^.SH TCL_MAKEFILECHANNEL$/;"	s	title:Tcl_OpenFileChannel
TCL_MAKETCPCLIENTCHANNEL	doc/OpenTcp.3	/^.SS TCL_MAKETCPCLIENTCHANNEL$/;"	S	section:Tcl_OpenTcpClient""DESCRIPTION
TCL_MATCH_NOCASE	generic/tcl.h	/^#define TCL_MATCH_NOCASE	/;"	d
TCL_MAX_PREC	generic/tcl.h	/^#define TCL_MAX_PREC	/;"	d
TCL_MAX_SECONDS	generic/tclDate.h	/^#define TCL_MAX_SECONDS	/;"	d
TCL_MAX_SHARED_OBJ_STATS	generic/tclInt.h	/^#define TCL_MAX_SHARED_OBJ_STATS /;"	d
TCL_MAX_WARN_LEN	win/tclWinError.c	/^#define TCL_MAX_WARN_LEN /;"	d	file:
TCL_MAX_WARN_LEN	win/tclWinFile.c	/^#define TCL_MAX_WARN_LEN /;"	d	file:
TCL_MAX_WARN_LEN	win/tclWinPanic.c	/^#define TCL_MAX_WARN_LEN /;"	d	file:
TCL_MEM_DEBUG	doc/TCL_MEM_DEBUG.3	/^.TH TCL_MEM_DEBUG 3 8.1 Tcl "Tcl Library Procedures"$/;"	t
TCL_MEM_DEBUG	unix/tcl.m4	/^	AC_DEFINE(TCL_MEM_DEBUG, 1, [Is memory debugging enabled?])$/;"	d
TCL_MEM_DEBUG	win/tcl.m4	/^	AC_DEFINE(TCL_MEM_DEBUG, 1, [Is memory debugging enabled?])$/;"	d
TCL_METHODCALLPROC FUNCTION SIGNATURE	doc/Method.3	/^.SS "TCL_METHODCALLPROC FUNCTION SIGNATURE"$/;"	S	section:Tcl_Method""METHOD TYPES
TCL_METHODDELETEPROC FUNCTION SIGNATURE	doc/Method.3	/^.SS "TCL_METHODDELETEPROC FUNCTION SIGNATURE"$/;"	S	section:Tcl_Method""METHOD TYPES
TCL_MINOR_VERSION	generic/tcl.h	/^#   define TCL_MINOR_VERSION	/;"	d
TCL_MINOR_VERSION	unix/configure.ac	/^AC_SUBST(TCL_MINOR_VERSION)$/;"	s
TCL_MINOR_VERSION	win/configure.ac	/^AC_SUBST(TCL_MINOR_VERSION)$/;"	s
TCL_MIN_ELEMENT_GROWTH	generic/tclListObj.c	/^#define TCL_MIN_ELEMENT_GROWTH /;"	d	file:
TCL_MIN_GROWTH	generic/tclInt.h	/^#    define TCL_MIN_GROWTH /;"	d
TCL_MIN_SECONDS	generic/tclDate.h	/^#define TCL_MIN_SECONDS	/;"	d
TCL_MIN_TOKEN_GROWTH	generic/tclInt.h	/^#define TCL_MIN_TOKEN_GROWTH /;"	d
TCL_MIN_UNICHAR_GROWTH	generic/tclStringObj.c	/^#define TCL_MIN_UNICHAR_GROWTH	/;"	d	file:
TCL_MODE_BLOCKING	generic/tcl.h	/^#define TCL_MODE_BLOCKING	/;"	d
TCL_MODE_NONBLOCKING	generic/tcl.h	/^#define TCL_MODE_NONBLOCKING	/;"	d
TCL_MODULE_PATH	unix/Makefile.in	/^TCL_MODULE_PATH		= @TCL_MODULE_PATH@$/;"	m
TCL_MODULE_PATH	unix/configure.ac	/^AC_SUBST(TCL_MODULE_PATH)$/;"	s
TCL_NAMESPACE_ONLY	generic/tcl.h	/^#define TCL_NAMESPACE_ONLY	/;"	d
TCL_NOINLINE	generic/tcl.h	/^#   define TCL_NOINLINE /;"	d
TCL_NORETURN	generic/tcl.h	/^#   define TCL_NORETURN /;"	d
TCL_NORETURN1	generic/tcl.h	/^#   define TCL_NORETURN1 /;"	d
TCL_NO_ELEMENT	generic/tclCompile.h	/^#define TCL_NO_ELEMENT /;"	d
TCL_NO_EVAL	generic/tcl.h	/^#define TCL_NO_EVAL	/;"	d
TCL_NO_LARGE_INDEX	generic/tclCompile.h	/^#define TCL_NO_LARGE_INDEX /;"	d
TCL_NULL_OK	generic/tcl.h	/^#define TCL_NULL_OK	/;"	d
TCL_NUMBER_BIG	generic/tcl.h	/^#define TCL_NUMBER_BIG /;"	d
TCL_NUMBER_DOUBLE	generic/tcl.h	/^#define TCL_NUMBER_DOUBLE /;"	d
TCL_NUMBER_INT	generic/tcl.h	/^#define TCL_NUMBER_INT /;"	d
TCL_NUMBER_NAN	generic/tcl.h	/^#define TCL_NUMBER_NAN /;"	d
TCL_OBJECTMAPMETHODNAMEPROC FUNCTION SIGNATURE	doc/Class.3	/^.SS "TCL_OBJECTMAPMETHODNAMEPROC FUNCTION SIGNATURE"$/;"	S	section:Tcl_Class""OBJECT METHOD NAME MAPPING
TCL_OBJECTMETADATADELETEPROC FUNCTION SIGNATURE	doc/Class.3	/^.SS "TCL_OBJECTMETADATADELETEPROC FUNCTION SIGNATURE"$/;"	S	section:Tcl_Class""OBJECT AND CLASS METADATA
TCL_OBJECTMETADATATYPE STRUCTURE	doc/Class.3	/^.SS "TCL_OBJECTMETADATATYPE STRUCTURE"$/;"	S	section:Tcl_Class""OBJECT AND CLASS METADATA
TCL_OBJS	unix/Makefile.in	/^TCL_OBJS = ${GENERIC_OBJS} ${UNIX_OBJS} ${NOTIFY_OBJS} ${COMPAT_OBJS} \\$/;"	m
TCL_OBJS	win/Makefile.in	/^TCL_OBJS = ${GENERIC_OBJS} ${WIN_OBJS} @ZLIB_OBJS@ @TOMMATH_OBJS@$/;"	m
TCL_OK	generic/tcl.h	/^#define TCL_OK	/;"	d
TCL_OK	generic/tclDTrace.d	/^    TCL_OK = 0,$/;"	e	enum:return_codes	file:
TCL_ONE_WORD_KEYS	generic/tcl.h	/^#define TCL_ONE_WORD_KEYS	/;"	d
TCL_OO_INTERNAL_H	generic/tclOOInt.h	/^#define TCL_OO_INTERNAL_H /;"	d
TCL_OO_METADATA_VERSION_1	generic/tclOO.h	/^    TCL_OO_METADATA_VERSION_1 = 1$/;"	e	enum:TclOOMetadataVersion
TCL_OO_METADATA_VERSION_CURRENT	generic/tclOO.h	/^#define TCL_OO_METADATA_VERSION_CURRENT /;"	d
TCL_OO_METHOD_PRIVATE	generic/tclOO.h	/^    TCL_OO_METHOD_PRIVATE = 0x20$/;"	e	enum:TclOOMethodVisibilityFlags
TCL_OO_METHOD_PUBLIC	generic/tclOO.h	/^    TCL_OO_METHOD_PUBLIC = 1,$/;"	e	enum:TclOOMethodVisibilityFlags
TCL_OO_METHOD_UNEXPORTED	generic/tclOO.h	/^    TCL_OO_METHOD_UNEXPORTED = 0,$/;"	e	enum:TclOOMethodVisibilityFlags
TCL_OO_METHOD_VERSION_1	generic/tclOO.h	/^    TCL_OO_METHOD_VERSION_1 = 1,$/;"	e	enum:TclOOMethodVersion
TCL_OO_METHOD_VERSION_2	generic/tclOO.h	/^    TCL_OO_METHOD_VERSION_2 = 2$/;"	e	enum:TclOOMethodVersion
TCL_OO_METHOD_VERSION_CURRENT	generic/tclOO.h	/^#define TCL_OO_METHOD_VERSION_CURRENT /;"	d
TCL_OO_SCRIPT_H	generic/tclOOScript.h	/^#define TCL_OO_SCRIPT_H$/;"	d
TCL_OPENCOMMANDCHANNEL	doc/OpenFileChnl.3	/^.SH TCL_OPENCOMMANDCHANNEL$/;"	s	title:Tcl_OpenFileChannel
TCL_OPENFILECHANNEL	doc/OpenFileChnl.3	/^.SH TCL_OPENFILECHANNEL$/;"	s	title:Tcl_OpenFileChannel
TCL_OPENTCPCLIENT	doc/OpenTcp.3	/^.SS TCL_OPENTCPCLIENT$/;"	S	section:Tcl_OpenTcpClient""DESCRIPTION
TCL_OPENTCPSERVER	doc/OpenTcp.3	/^.SS TCL_OPENTCPSERVER$/;"	S	section:Tcl_OpenTcpClient""DESCRIPTION
TCL_OPENTCPSERVEREX	doc/OpenTcp.3	/^.SS TCL_OPENTCPSERVEREX$/;"	S	section:Tcl_OpenTcpClient""DESCRIPTION
TCL_OUTPUTBUFFERED	doc/OpenFileChnl.3	/^.SH TCL_OUTPUTBUFFERED$/;"	s	title:Tcl_OpenFileChannel
TCL_PACKAGE_PATH	unix/Makefile.in	/^TCL_PACKAGE_PATH	= @TCL_PACKAGE_PATH@$/;"	m
TCL_PACKAGE_PATH	unix/configure.ac	/^AC_SUBST(TCL_PACKAGE_PATH)$/;"	s
TCL_PACKAGE_PATH	win/configure.ac	/^AC_SUBST(TCL_PACKAGE_PATH)$/;"	s
TCL_PARSE STRUCTURE	doc/ParseCmd.3	/^.SH "TCL_PARSE STRUCTURE"$/;"	s	title:Tcl_ParseCommand
TCL_PARSE_BAD_NUMBER	generic/tcl.h	/^#define TCL_PARSE_BAD_NUMBER	/;"	d
TCL_PARSE_BINARY_ONLY	generic/tclInt.h	/^#define TCL_PARSE_BINARY_ONLY	/;"	d
TCL_PARSE_BRACE_EXTRA	generic/tcl.h	/^#define TCL_PARSE_BRACE_EXTRA	/;"	d
TCL_PARSE_DECIMAL_ONLY	generic/tclInt.h	/^#define TCL_PARSE_DECIMAL_ONLY	/;"	d
TCL_PARSE_HEXADECIMAL_ONLY	generic/tclInt.h	/^#define TCL_PARSE_HEXADECIMAL_ONLY	/;"	d
TCL_PARSE_INTEGER_ONLY	generic/tclInt.h	/^#define TCL_PARSE_INTEGER_ONLY	/;"	d
TCL_PARSE_MISSING_BRACE	generic/tcl.h	/^#define TCL_PARSE_MISSING_BRACE	/;"	d
TCL_PARSE_MISSING_BRACKET	generic/tcl.h	/^#define TCL_PARSE_MISSING_BRACKET	/;"	d
TCL_PARSE_MISSING_PAREN	generic/tcl.h	/^#define TCL_PARSE_MISSING_PAREN	/;"	d
TCL_PARSE_MISSING_QUOTE	generic/tcl.h	/^#define TCL_PARSE_MISSING_QUOTE	/;"	d
TCL_PARSE_MISSING_VAR_BRACE	generic/tcl.h	/^#define TCL_PARSE_MISSING_VAR_BRACE	/;"	d
TCL_PARSE_NO_UNDERSCORE	generic/tclInt.h	/^#define TCL_PARSE_NO_UNDERSCORE	/;"	d
TCL_PARSE_NO_WHITESPACE	generic/tclInt.h	/^#define TCL_PARSE_NO_WHITESPACE	/;"	d
TCL_PARSE_OCTAL_ONLY	generic/tclInt.h	/^#define TCL_PARSE_OCTAL_ONLY	/;"	d
TCL_PARSE_QUOTE_EXTRA	generic/tcl.h	/^#define TCL_PARSE_QUOTE_EXTRA	/;"	d
TCL_PARSE_SCAN_PREFIXES	generic/tclInt.h	/^#define TCL_PARSE_SCAN_PREFIXES	/;"	d
TCL_PARSE_SUCCESS	generic/tcl.h	/^#define TCL_PARSE_SUCCESS	/;"	d
TCL_PARSE_SYNTAX	generic/tcl.h	/^#define TCL_PARSE_SYNTAX	/;"	d
TCL_PATCH_LEVEL	generic/tcl.h	/^#   define TCL_PATCH_LEVEL	/;"	d
TCL_PATCH_LEVEL	unix/configure.ac	/^AC_SUBST(TCL_PATCH_LEVEL)$/;"	s
TCL_PATCH_LEVEL	unix/tcl.m4	/^    AC_SUBST(TCL_PATCH_LEVEL)$/;"	s
TCL_PATCH_LEVEL	win/configure.ac	/^AC_SUBST(TCL_PATCH_LEVEL)$/;"	s
TCL_PATH_ABSOLUTE	generic/tcl.h	/^    TCL_PATH_ABSOLUTE,$/;"	e	enum:Tcl_PathType
TCL_PATH_DIRNAME	generic/tclInt.h	/^    TCL_PATH_DIRNAME,$/;"	e	enum:Tcl_PathPart
TCL_PATH_EXTENSION	generic/tclInt.h	/^    TCL_PATH_EXTENSION,$/;"	e	enum:Tcl_PathPart
TCL_PATH_RELATIVE	generic/tcl.h	/^    TCL_PATH_RELATIVE,$/;"	e	enum:Tcl_PathType
TCL_PATH_ROOT	generic/tclInt.h	/^    TCL_PATH_ROOT$/;"	e	enum:Tcl_PathPart
TCL_PATH_TAIL	generic/tclInt.h	/^    TCL_PATH_TAIL,$/;"	e	enum:Tcl_PathPart
TCL_PATH_VOLUME_RELATIVE	generic/tcl.h	/^    TCL_PATH_VOLUME_RELATIVE$/;"	e	enum:Tcl_PathType
TCL_PC_CFLAGS	unix/configure.ac	/^  AC_SUBST(TCL_PC_CFLAGS, ['-DTCL_WITH_EXTERNAL_TOMMATH'])$/;"	s
TCL_PC_REQUIRES_PRIVATE	unix/configure.ac	/^  AC_SUBST(TCL_PC_REQUIRES_PRIVATE, ['libtommath >= 1.2.0,'])$/;"	s
TCL_PLATFORM_TRANSLATION	unix/tclUnixPort.h	/^#define	TCL_PLATFORM_TRANSLATION	/;"	d
TCL_PLATFORM_TRANSLATION	win/tclWinPort.h	/^#define	TCL_PLATFORM_TRANSLATION	/;"	d
TCL_PLATFORM_UNIX	generic/tclInt.h	/^    TCL_PLATFORM_UNIX = 0,	\/* Any Unix-like OS. *\/$/;"	e	enum:__anon1eb6b3550b03
TCL_PLATFORM_WINDOWS	generic/tclInt.h	/^    TCL_PLATFORM_WINDOWS = 2	\/* Any Microsoft Windows OS. *\/$/;"	e	enum:__anon1eb6b3550b03
TCL_PRIVATE_HEADERS	unix/Makefile.in	/^TCL_PRIVATE_HEADERS = $(SHQ_GENERIC_DIR)\/tclInt.h $(SHQ_GENERIC_DIR)\/tclIntDecls.h \\$/;"	m
TCL_PROCESS_ERROR	generic/tclInt.h	/^    TCL_PROCESS_ERROR = -1,	\/* Error waiting for process to exit *\/$/;"	e	enum:TclProcessWaitStatus
TCL_PROCESS_EXITED	generic/tclInt.h	/^    TCL_PROCESS_EXITED = 1,	\/* Process has exited. *\/$/;"	e	enum:TclProcessWaitStatus
TCL_PROCESS_SIGNALED	generic/tclInt.h	/^    TCL_PROCESS_SIGNALED = 2,	\/* Child killed because of a signal. *\/$/;"	e	enum:TclProcessWaitStatus
TCL_PROCESS_STOPPED	generic/tclInt.h	/^    TCL_PROCESS_STOPPED = 3,	\/* Child suspended because of a signal. *\/$/;"	e	enum:TclProcessWaitStatus
TCL_PROCESS_UNCHANGED	generic/tclInt.h	/^    TCL_PROCESS_UNCHANGED = 0,	\/* No change since the last call. *\/$/;"	e	enum:TclProcessWaitStatus
TCL_PROCESS_UNKNOWN_STATUS	generic/tclInt.h	/^    TCL_PROCESS_UNKNOWN_STATUS = 4$/;"	e	enum:TclProcessWaitStatus
TCL_PUBLIC_HEADERS	unix/Makefile.in	/^TCL_PUBLIC_HEADERS = $(GENERIC_DIR)\/tcl.h $(GENERIC_DIR)\/tclDecls.h \\$/;"	m
TCL_QUEUE_ALERT_IF_EMPTY	generic/tcl.h	/^    TCL_QUEUE_ALERT_IF_EMPTY=4$/;"	e	enum:__anon937aefea0a03
TCL_QUEUE_HEAD	generic/tcl.h	/^    TCL_QUEUE_TAIL, TCL_QUEUE_HEAD, TCL_QUEUE_MARK,$/;"	e	enum:__anon937aefea0a03
TCL_QUEUE_MARK	generic/tcl.h	/^    TCL_QUEUE_TAIL, TCL_QUEUE_HEAD, TCL_QUEUE_MARK,$/;"	e	enum:__anon937aefea0a03
TCL_QUEUE_TAIL	generic/tcl.h	/^    TCL_QUEUE_TAIL, TCL_QUEUE_HEAD, TCL_QUEUE_MARK,$/;"	e	enum:__anon937aefea0a03
TCL_READABLE	generic/tcl.h	/^#define TCL_READABLE	/;"	d
TCL_READCHARS AND TCL_READ	doc/OpenFileChnl.3	/^.SH "TCL_READCHARS AND TCL_READ"$/;"	s	title:Tcl_OpenFileChannel
TCL_REGISTERCHANNEL	doc/OpenFileChnl.3	/^.SH TCL_REGISTERCHANNEL$/;"	s	title:Tcl_OpenFileChannel
TCL_REG_ADVANCED	generic/tcl.h	/^#define	TCL_REG_ADVANCED	/;"	d
TCL_REG_ADVF	generic/tcl.h	/^#define	TCL_REG_ADVF	/;"	d
TCL_REG_BASIC	generic/tcl.h	/^#define	TCL_REG_BASIC	/;"	d
TCL_REG_BOSONLY	generic/tclInt.h	/^#define TCL_REG_BOSONLY /;"	d
TCL_REG_CANMATCH	generic/tcl.h	/^#define	TCL_REG_CANMATCH	/;"	d
TCL_REG_EXPANDED	generic/tcl.h	/^#define	TCL_REG_EXPANDED	/;"	d
TCL_REG_EXTENDED	generic/tcl.h	/^#define	TCL_REG_EXTENDED	/;"	d
TCL_REG_GLOBOK_FLAGS	generic/tclRegexp.c	/^#define TCL_REG_GLOBOK_FLAGS /;"	d	file:
TCL_REG_MAJOR_VERSION	win/configure.ac	/^AC_SUBST(TCL_REG_MAJOR_VERSION)$/;"	s
TCL_REG_MINOR_VERSION	win/configure.ac	/^AC_SUBST(TCL_REG_MINOR_VERSION)$/;"	s
TCL_REG_NEWLINE	generic/tcl.h	/^#define	TCL_REG_NEWLINE	/;"	d
TCL_REG_NLANCH	generic/tcl.h	/^#define	TCL_REG_NLANCH	/;"	d
TCL_REG_NLSTOP	generic/tcl.h	/^#define	TCL_REG_NLSTOP	/;"	d
TCL_REG_NOCASE	generic/tcl.h	/^#define	TCL_REG_NOCASE	/;"	d
TCL_REG_NOSUB	generic/tcl.h	/^#define	TCL_REG_NOSUB	/;"	d
TCL_REG_NOTBOL	generic/tcl.h	/^#define	TCL_REG_NOTBOL	/;"	d
TCL_REG_NOTEOL	generic/tcl.h	/^#define	TCL_REG_NOTEOL	/;"	d
TCL_REG_QUOTE	generic/tcl.h	/^#define	TCL_REG_QUOTE	/;"	d
TCL_REG_VERSION	win/configure.ac	/^AC_SUBST(TCL_REG_VERSION)$/;"	s
TCL_RELEASE_LEVEL	generic/tcl.h	/^#   define TCL_RELEASE_LEVEL	/;"	d
TCL_RELEASE_SERIAL	generic/tcl.h	/^#   define TCL_RELEASE_SERIAL	/;"	d
TCL_RETURN	generic/tcl.h	/^#define TCL_RETURN	/;"	d
TCL_RETURN	generic/tclDTrace.d	/^    TCL_RETURN,$/;"	e	enum:return_codes	file:
TCL_SEEK	doc/OpenFileChnl.3	/^.SH TCL_SEEK$/;"	s	title:Tcl_OpenFileChannel
TCL_SERVICE_ALL	generic/tcl.h	/^#define TCL_SERVICE_ALL /;"	d
TCL_SERVICE_NONE	generic/tcl.h	/^#define TCL_SERVICE_NONE /;"	d
TCL_SETCHANNELOPTION	doc/OpenFileChnl.3	/^.SH TCL_SETCHANNELOPTION$/;"	s	title:Tcl_OpenFileChannel
TCL_SHARED_BUILD	unix/configure.ac	/^AC_SUBST(TCL_SHARED_BUILD)$/;"	s
TCL_SHARED_BUILD	win/configure.ac	/^AC_SUBST(TCL_SHARED_BUILD)$/;"	s
TCL_SHARED_LIB_SUFFIX	unix/configure.ac	/^AC_SUBST(TCL_SHARED_LIB_SUFFIX)$/;"	s
TCL_SHLIB_EXT	unix/tcl.m4	/^    AC_DEFINE_UNQUOTED(TCL_SHLIB_EXT,"${SHLIB_SUFFIX}",$/;"	d
TCL_SHLIB_EXT	win/tclWinPort.h	/^#define TCL_SHLIB_EXT /;"	d
TCL_SHLIB_LD_EXTRAS	unix/Makefile.in	/^TCL_SHLIB_LD_EXTRAS	= @TCL_SHLIB_LD_EXTRAS@$/;"	m
TCL_SHLIB_LD_EXTRAS	unix/tcl.m4	/^    AC_SUBST(TCL_SHLIB_LD_EXTRAS)$/;"	s
TCL_SIZE_MAX	generic/tcl.h	/^#define TCL_SIZE_MAX /;"	d
TCL_SIZE_MODIFIER	generic/tcl.h	/^#define TCL_SIZE_MODIFIER /;"	d
TCL_SMALL_HASH_TABLE	generic/tcl.h	/^#define TCL_SMALL_HASH_TABLE /;"	d
TCL_SRC_DIR	unix/configure.ac	/^AC_SUBST(TCL_SRC_DIR)$/;"	s
TCL_SRC_DIR	unix/tcl.m4	/^    AC_SUBST(TCL_SRC_DIR)$/;"	s
TCL_SRC_DIR	win/configure.ac	/^AC_SUBST(TCL_SRC_DIR)$/;"	s
TCL_SRC_DIR	win/tcl.m4	/^    AC_SUBST(TCL_SRC_DIR)$/;"	s
TCL_STATIC	generic/tcl.h	/^#define TCL_STATIC	/;"	d
TCL_STATIC_LIB_FILE	win/configure.ac	/^AC_SUBST(TCL_STATIC_LIB_FILE)$/;"	s
TCL_STATIC_LIB_FLAG	win/configure.ac	/^AC_SUBST(TCL_STATIC_LIB_FLAG)$/;"	s
TCL_STDERR	generic/tcl.h	/^#define TCL_STDERR	/;"	d
TCL_STDIN	generic/tcl.h	/^#define TCL_STDIN	/;"	d
TCL_STDOUT	generic/tcl.h	/^#define TCL_STDOUT	/;"	d
TCL_STORAGE_CLASS	generic/tcl.h	/^#   define TCL_STORAGE_CLASS /;"	d
TCL_STORAGE_CLASS	generic/tclDecls.h	/^#      define TCL_STORAGE_CLASS /;"	d
TCL_STORAGE_CLASS	generic/tclDecls.h	/^#      define TCL_STORAGE_CLASS$/;"	d
TCL_STORAGE_CLASS	generic/tclDecls.h	/^#   define TCL_STORAGE_CLASS /;"	d
TCL_STORAGE_CLASS	generic/tclDecls.h	/^#define TCL_STORAGE_CLASS /;"	d
TCL_STORAGE_CLASS	generic/tclIntDecls.h	/^#      define TCL_STORAGE_CLASS /;"	d
TCL_STORAGE_CLASS	generic/tclIntDecls.h	/^#      define TCL_STORAGE_CLASS$/;"	d
TCL_STORAGE_CLASS	generic/tclIntDecls.h	/^#   define TCL_STORAGE_CLASS /;"	d
TCL_STORAGE_CLASS	generic/tclIntDecls.h	/^#define TCL_STORAGE_CLASS /;"	d
TCL_STORAGE_CLASS	generic/tclIntPlatDecls.h	/^#      define TCL_STORAGE_CLASS /;"	d
TCL_STORAGE_CLASS	generic/tclIntPlatDecls.h	/^#      define TCL_STORAGE_CLASS$/;"	d
TCL_STORAGE_CLASS	generic/tclIntPlatDecls.h	/^#   define TCL_STORAGE_CLASS /;"	d
TCL_STORAGE_CLASS	generic/tclIntPlatDecls.h	/^#define TCL_STORAGE_CLASS /;"	d
TCL_STORAGE_CLASS	generic/tclPlatDecls.h	/^#      define TCL_STORAGE_CLASS /;"	d
TCL_STORAGE_CLASS	generic/tclPlatDecls.h	/^#      define TCL_STORAGE_CLASS$/;"	d
TCL_STORAGE_CLASS	generic/tclPlatDecls.h	/^#   define TCL_STORAGE_CLASS /;"	d
TCL_STORAGE_CLASS	generic/tclPlatDecls.h	/^#define TCL_STORAGE_CLASS /;"	d
TCL_STORAGE_CLASS	generic/tclTomMathDecls.h	/^#      define TCL_STORAGE_CLASS /;"	d
TCL_STORAGE_CLASS	generic/tclTomMathDecls.h	/^#      define TCL_STORAGE_CLASS$/;"	d
TCL_STORAGE_CLASS	generic/tclTomMathDecls.h	/^#   define TCL_STORAGE_CLASS /;"	d
TCL_STORAGE_CLASS	generic/tclTomMathDecls.h	/^#define TCL_STORAGE_CLASS /;"	d
TCL_STRING_IN_PLACE	generic/tclInt.h	/^#define TCL_STRING_IN_PLACE /;"	d
TCL_STRING_KEYS	generic/tcl.h	/^#define TCL_STRING_KEYS	/;"	d
TCL_STRING_MATCH_NOCASE	generic/tclInt.h	/^#define TCL_STRING_MATCH_NOCASE /;"	d
TCL_STRING_TRIM_H	generic/tclStringTrim.h	/^#define TCL_STRING_TRIM_H$/;"	d
TCL_STUB_LIB_FILE	unix/Makefile.in	/^TCL_STUB_LIB_FILE	= @TCL_STUB_LIB_FILE@$/;"	m
TCL_STUB_LIB_FILE	unix/configure.ac	/^AC_SUBST(TCL_STUB_LIB_FILE)$/;"	s
TCL_STUB_LIB_FILE	unix/tcl.m4	/^    AC_SUBST(TCL_STUB_LIB_FILE)$/;"	s
TCL_STUB_LIB_FILE	win/Makefile.in	/^TCL_STUB_LIB_FILE	= @TCL_STUB_LIB_FILE@$/;"	m
TCL_STUB_LIB_FILE	win/configure.ac	/^AC_SUBST(TCL_STUB_LIB_FILE)$/;"	s
TCL_STUB_LIB_FILE	win/tcl.m4	/^    AC_SUBST(TCL_STUB_LIB_FILE)$/;"	s
TCL_STUB_LIB_FLAG	unix/Makefile.in	/^TCL_STUB_LIB_FLAG	= @TCL_STUB_LIB_FLAG@$/;"	m
TCL_STUB_LIB_FLAG	unix/configure.ac	/^AC_SUBST(TCL_STUB_LIB_FLAG)$/;"	s
TCL_STUB_LIB_FLAG	unix/tcl.m4	/^    AC_SUBST(TCL_STUB_LIB_FLAG)$/;"	s
TCL_STUB_LIB_FLAG	win/configure.ac	/^AC_SUBST(TCL_STUB_LIB_FLAG)$/;"	s
TCL_STUB_LIB_FLAG	win/tcl.m4	/^    AC_SUBST(TCL_STUB_LIB_FLAG)$/;"	s
TCL_STUB_LIB_PATH	unix/configure.ac	/^AC_SUBST(TCL_STUB_LIB_PATH)$/;"	s
TCL_STUB_LIB_PATH	win/configure.ac	/^AC_SUBST(TCL_STUB_LIB_PATH)$/;"	s
TCL_STUB_LIB_SPEC	unix/configure.ac	/^AC_SUBST(TCL_STUB_LIB_SPEC)$/;"	s
TCL_STUB_LIB_SPEC	unix/tcl.m4	/^    AC_SUBST(TCL_STUB_LIB_SPEC)$/;"	s
TCL_STUB_LIB_SPEC	win/configure.ac	/^AC_SUBST(TCL_STUB_LIB_SPEC)$/;"	s
TCL_STUB_LIB_SPEC	win/tcl.m4	/^    AC_SUBST(TCL_STUB_LIB_SPEC)$/;"	s
TCL_STUB_MAGIC	generic/tcl.h	/^#define TCL_STUB_MAGIC	/;"	d
TCL_STUB_MAGIC	generic/tclStubLib.c	/^#define TCL_STUB_MAGIC	/;"	d	file:
TCL_SUBST_ALL	generic/tcl.h	/^#define TCL_SUBST_ALL	/;"	d
TCL_SUBST_BACKSLASHES	generic/tcl.h	/^#define TCL_SUBST_BACKSLASHES	/;"	d
TCL_SUBST_COMMANDS	generic/tcl.h	/^#define TCL_SUBST_COMMANDS	/;"	d
TCL_SUBST_VARIABLES	generic/tcl.h	/^#define TCL_SUBST_VARIABLES	/;"	d
TCL_TCPSERVER_REUSEADDR	generic/tcl.h	/^#define TCL_TCPSERVER_REUSEADDR /;"	d
TCL_TCPSERVER_REUSEPORT	generic/tcl.h	/^#define TCL_TCPSERVER_REUSEPORT /;"	d
TCL_TELL	doc/OpenFileChnl.3	/^.SH TCL_TELL$/;"	s	title:Tcl_OpenFileChannel
TCL_TEMPORARY_FILE_DIRECTORY	unix/tclUnixFCmd.c	/^#define TCL_TEMPORARY_FILE_DIRECTORY	/;"	d	file:
TCL_THREADS	generic/tclInt.h	/^#   define TCL_THREADS /;"	d
TCL_THREAD_CREATE_RETURN	generic/tcl.h	/^#   define TCL_THREAD_CREATE_RETURN	/;"	d
TCL_THREAD_CREATE_RETURN	generic/tcl.h	/^#   define TCL_THREAD_CREATE_RETURN$/;"	d
TCL_THREAD_JOINABLE	generic/tcl.h	/^#define TCL_THREAD_JOINABLE	/;"	d
TCL_THREAD_NOFLAGS	generic/tcl.h	/^#define TCL_THREAD_NOFLAGS	/;"	d
TCL_THREAD_STACK_DEFAULT	generic/tcl.h	/^#define TCL_THREAD_STACK_DEFAULT /;"	d
TCL_TIMER_EVENTS	generic/tcl.h	/^#define TCL_TIMER_EVENTS	/;"	d
TCL_TIME_BEFORE	generic/tclTimer.c	/^#define TCL_TIME_BEFORE(/;"	d	file:
TCL_TIME_DIFF_MS	generic/tclTimer.c	/^#define TCL_TIME_DIFF_MS(/;"	d	file:
TCL_TIME_DIFF_MS_CEILING	generic/tclTimer.c	/^#define TCL_TIME_DIFF_MS_CEILING(/;"	d	file:
TCL_TIME_MAXIMUM_SLICE	generic/tclTimer.c	/^#define TCL_TIME_MAXIMUM_SLICE /;"	d	file:
TCL_TOKEN_BS	generic/tcl.h	/^#define TCL_TOKEN_BS	/;"	d
TCL_TOKEN_COMMAND	generic/tcl.h	/^#define TCL_TOKEN_COMMAND	/;"	d
TCL_TOKEN_EXPAND_WORD	generic/tcl.h	/^#define TCL_TOKEN_EXPAND_WORD	/;"	d
TCL_TOKEN_OPERATOR	generic/tcl.h	/^#define TCL_TOKEN_OPERATOR	/;"	d
TCL_TOKEN_SIMPLE_WORD	generic/tcl.h	/^#define TCL_TOKEN_SIMPLE_WORD	/;"	d
TCL_TOKEN_SUB_EXPR	generic/tcl.h	/^#define TCL_TOKEN_SUB_EXPR	/;"	d
TCL_TOKEN_TEXT	generic/tcl.h	/^#define TCL_TOKEN_TEXT	/;"	d
TCL_TOKEN_VARIABLE	generic/tcl.h	/^#define TCL_TOKEN_VARIABLE	/;"	d
TCL_TOKEN_WORD	generic/tcl.h	/^#define TCL_TOKEN_WORD	/;"	d
TCL_TOMMATH_LIB_NAME	win/configure.ac	/^AC_SUBST(TCL_TOMMATH_LIB_NAME, $tommath_lib_name)$/;"	s
TCL_TRACE_ANY_EXEC	generic/tclTrace.c	/^#define TCL_TRACE_ANY_EXEC	/;"	d	file:
TCL_TRACE_ARRAY	generic/tcl.h	/^#define TCL_TRACE_ARRAY	/;"	d
TCL_TRACE_DELETE	generic/tcl.h	/^#define TCL_TRACE_DELETE	/;"	d
TCL_TRACE_DESTROYED	generic/tcl.h	/^#define TCL_TRACE_DESTROYED	/;"	d
TCL_TRACE_DESTROYED FLAG	doc/TraceCmd.3	/^.SH "TCL_TRACE_DESTROYED FLAG"$/;"	s	title:Tcl_TraceCommand
TCL_TRACE_DESTROYED FLAG	doc/TraceVar.3	/^.SH "TCL_TRACE_DESTROYED FLAG"$/;"	s	title:Tcl_TraceVar
TCL_TRACE_ENTER_DURING_EXEC	generic/tclTrace.c	/^#define TCL_TRACE_ENTER_DURING_EXEC	/;"	d	file:
TCL_TRACE_ENTER_EXEC	generic/tclInt.h	/^#define TCL_TRACE_ENTER_EXEC	/;"	d
TCL_TRACE_EXEC_DIRECT	generic/tclTrace.c	/^#define TCL_TRACE_EXEC_DIRECT	/;"	d	file:
TCL_TRACE_EXEC_IN_PROGRESS	generic/tclTrace.c	/^#define TCL_TRACE_EXEC_IN_PROGRESS	/;"	d	file:
TCL_TRACE_LEAVE_DURING_EXEC	generic/tclTrace.c	/^#define TCL_TRACE_LEAVE_DURING_EXEC	/;"	d	file:
TCL_TRACE_LEAVE_EXEC	generic/tclInt.h	/^#define TCL_TRACE_LEAVE_EXEC	/;"	d
TCL_TRACE_READS	generic/tcl.h	/^#define TCL_TRACE_READS	/;"	d
TCL_TRACE_RENAME	generic/tcl.h	/^#define TCL_TRACE_RENAME	/;"	d
TCL_TRACE_RESULT_DYNAMIC	generic/tcl.h	/^#define TCL_TRACE_RESULT_DYNAMIC /;"	d
TCL_TRACE_RESULT_OBJECT	generic/tcl.h	/^#define TCL_TRACE_RESULT_OBJECT /;"	d
TCL_TRACE_UNSETS	generic/tcl.h	/^#define TCL_TRACE_UNSETS	/;"	d
TCL_TRACE_WRITES	generic/tcl.h	/^#define TCL_TRACE_WRITES	/;"	d
TCL_TRANSLATE_AUTO	generic/tclInt.h	/^    TCL_TRANSLATE_AUTO,		\/* Eol == \\r, \\n and \\r\\n. *\/$/;"	e	enum:TclEolTranslation
TCL_TRANSLATE_CR	generic/tclInt.h	/^    TCL_TRANSLATE_CR,		\/* Eol == \\r. *\/$/;"	e	enum:TclEolTranslation
TCL_TRANSLATE_CRLF	generic/tclInt.h	/^    TCL_TRANSLATE_CRLF		\/* Eol == \\r\\n. *\/$/;"	e	enum:TclEolTranslation
TCL_TRANSLATE_LF	generic/tclInt.h	/^    TCL_TRANSLATE_LF,		\/* Eol == \\n. *\/$/;"	e	enum:TclEolTranslation
TCL_TRUE_JUMP	generic/tclCompile.h	/^    TCL_TRUE_JUMP,$/;"	e	enum:__anone79d5a530603
TCL_TRUNCATECHANNEL	doc/OpenFileChnl.3	/^.SH TCL_TRUNCATECHANNEL$/;"	s	title:Tcl_OpenFileChannel
TCL_TSD_INIT	generic/tclInt.h	/^#define TCL_TSD_INIT(/;"	d
TCL_T_MODIFIER	generic/tcl.h	/^#	define TCL_T_MODIFIER	/;"	d
TCL_UNCONDITIONAL_JUMP	generic/tclCompile.h	/^    TCL_UNCONDITIONAL_JUMP,$/;"	e	enum:__anone79d5a530603
TCL_UNGETS	doc/OpenFileChnl.3	/^.SH "TCL_UNGETS"$/;"	s	title:Tcl_OpenFileChannel
TCL_UNLOAD_DETACH_FROM_INTERPRETER	generic/tcl.h	/^#define TCL_UNLOAD_DETACH_FROM_INTERPRETER	/;"	d
TCL_UNLOAD_DETACH_FROM_PROCESS	generic/tcl.h	/^#define TCL_UNLOAD_DETACH_FROM_PROCESS	/;"	d
TCL_UNLOAD_DLLS	unix/configure.ac	/^    AC_DEFINE(TCL_UNLOAD_DLLS, 1, [Do we allow unloading of shared libraries?])$/;"	d
TCL_UNREGISTERCHANNEL	doc/OpenFileChnl.3	/^.SH TCL_UNREGISTERCHANNEL$/;"	s	title:Tcl_OpenFileChannel
TCL_UNSHARED_LIB_SUFFIX	unix/configure.ac	/^AC_SUBST(TCL_UNSHARED_LIB_SUFFIX)$/;"	s
TCL_UNUSED	generic/tclInt.h	/^#   define TCL_UNUSED(/;"	d
TCL_UNUSEDVAR	generic/tclInt.h	/^#   define TCL_UNUSEDVAR(/;"	d
TCL_UTF_MAX	generic/tcl.h	/^#	define TCL_UTF_MAX	/;"	d
TCL_VERSION	generic/tcl.h	/^#   define TCL_VERSION	/;"	d
TCL_VERSION	unix/configure.ac	/^AC_SUBST(TCL_VERSION)$/;"	s
TCL_VERSION	unix/dltest/Makefile.in	/^TCL_VERSION=		@TCL_VERSION@$/;"	m
TCL_VERSION	unix/tcl.m4	/^    AC_SUBST(TCL_VERSION)$/;"	s
TCL_VERSION	win/configure.ac	/^AC_SUBST(TCL_VERSION)$/;"	s
TCL_VERSION	win/tcl.m4	/^    AC_SUBST(TCL_VERSION)$/;"	s
TCL_VERSION_UUID	win/tclUuid.h.in	/^#define TCL_VERSION_UUID /;"	d	file:
TCL_VFS_PATH	unix/Makefile.in	/^TCL_VFS_PATH		= ${TCL_VFS_ROOT}\/tcl_library$/;"	m
TCL_VFS_PATH	win/Makefile.in	/^TCL_VFS_PATH		= libtcl.vfs\/tcl_library$/;"	m
TCL_VFS_ROOT	unix/Makefile.in	/^TCL_VFS_ROOT		= libtcl.vfs$/;"	m
TCL_VFS_ROOT	win/Makefile.in	/^TCL_VFS_ROOT		= libtcl.vfs$/;"	m
TCL_VOLATILE	generic/tcl.h	/^#define TCL_VOLATILE	/;"	d
TCL_WIDE_CLICKS	generic/tclInt.h	/^#	define TCL_WIDE_CLICKS /;"	d
TCL_WIDE_CLICKS	unix/configure.ac	/^    AC_DEFINE(TCL_WIDE_CLICKS, 1,$/;"	d
TCL_WIDE_INT_IS_LONG	generic/tcl.h	/^#	define TCL_WIDE_INT_IS_LONG	/;"	d
TCL_WIDE_INT_IS_LONG	generic/tcl.h	/^#	define TCL_WIDE_INT_IS_LONG /;"	d
TCL_WIDE_INT_IS_LONG	unix/tcl.m4	/^	AC_DEFINE(TCL_WIDE_INT_IS_LONG, 1, [Do 'long' and 'long long' have the same size (64-bit)?])$/;"	d
TCL_WIDE_INT_TYPE	generic/tcl.h	/^#   define TCL_WIDE_INT_TYPE	/;"	d
TCL_WINDOW_EVENTS	generic/tcl.h	/^#define TCL_WINDOW_EVENTS	/;"	d
TCL_WIN_VERSION	win/configure.ac	/^AC_SUBST(TCL_WIN_VERSION)$/;"	s
TCL_WITH_EXTERNAL_TOMMATH	unix/configure.ac	/^  AC_DEFINE(TCL_WITH_EXTERNAL_TOMMATH, 1, [Tcl with external libtommath])$/;"	d
TCL_WITH_EXTERNAL_TOMMATH	win/configure.ac	/^  AC_DEFINE(TCL_WITH_EXTERNAL_TOMMATH, 1, [Tcl with external libtommath])$/;"	d
TCL_WITH_INTERNAL_ZLIB	unix/configure.ac	/^  AC_DEFINE(TCL_WITH_INTERNAL_ZLIB, 1, [Tcl with internal zlib])$/;"	d
TCL_WITH_INTERNAL_ZLIB	win/configure.ac	/^  AC_DEFINE(TCL_WITH_INTERNAL_ZLIB, 1, [Tcl with internal zlib])$/;"	d
TCL_WRITABLE	generic/tcl.h	/^#define TCL_WRITABLE	/;"	d
TCL_WRITECHARS, TCL_WRITEOBJ, AND TCL_WRITE	doc/OpenFileChnl.3	/^.SH "TCL_WRITECHARS, TCL_WRITEOBJ, AND TCL_WRITE"$/;"	s	title:Tcl_OpenFileChannel
TCL_YEAR	unix/configure.ac	/^AC_SUBST(TCL_YEAR)$/;"	s
TCL_ZIP_FILE	unix/Makefile.in	/^TCL_ZIP_FILE		= @TCL_ZIP_FILE@$/;"	m
TCL_ZIP_FILE	unix/configure.ac	/^AC_SUBST(TCL_ZIP_FILE)$/;"	s
TCL_ZIP_FILE	win/Makefile.in	/^TCL_ZIP_FILE		= @TCL_ZIP_FILE@$/;"	m
TCL_ZIP_FILE	win/configure.ac	/^AC_SUBST(TCL_ZIP_FILE)$/;"	s
TCL_ZLIB_COMPRESS_BEST	generic/tcl.h	/^#define TCL_ZLIB_COMPRESS_BEST	/;"	d
TCL_ZLIB_COMPRESS_DEFAULT	generic/tcl.h	/^#define TCL_ZLIB_COMPRESS_DEFAULT /;"	d
TCL_ZLIB_COMPRESS_FAST	generic/tcl.h	/^#define TCL_ZLIB_COMPRESS_FAST	/;"	d
TCL_ZLIB_COMPRESS_NONE	generic/tcl.h	/^#define TCL_ZLIB_COMPRESS_NONE	/;"	d
TCL_ZLIB_FINALIZE	generic/tcl.h	/^#define TCL_ZLIB_FINALIZE	/;"	d
TCL_ZLIB_FLUSH	generic/tcl.h	/^#define TCL_ZLIB_FLUSH	/;"	d
TCL_ZLIB_FORMAT_AUTO	generic/tcl.h	/^#define TCL_ZLIB_FORMAT_AUTO	/;"	d
TCL_ZLIB_FORMAT_GZIP	generic/tcl.h	/^#define TCL_ZLIB_FORMAT_GZIP	/;"	d
TCL_ZLIB_FORMAT_RAW	generic/tcl.h	/^#define TCL_ZLIB_FORMAT_RAW	/;"	d
TCL_ZLIB_FORMAT_ZLIB	generic/tcl.h	/^#define TCL_ZLIB_FORMAT_ZLIB	/;"	d
TCL_ZLIB_FULLFLUSH	generic/tcl.h	/^#define TCL_ZLIB_FULLFLUSH	/;"	d
TCL_ZLIB_LIB_NAME	win/configure.ac	/^AC_SUBST(TCL_ZLIB_LIB_NAME, $zlib_lib_name)$/;"	s
TCL_ZLIB_NO_FLUSH	generic/tcl.h	/^#define TCL_ZLIB_NO_FLUSH	/;"	d
TCL_ZLIB_STREAM_DEFLATE	generic/tcl.h	/^#define TCL_ZLIB_STREAM_DEFLATE	/;"	d
TCL_ZLIB_STREAM_INFLATE	generic/tcl.h	/^#define TCL_ZLIB_STREAM_INFLATE	/;"	d
TCL_ZLIB_VERSION	generic/tclZlib.c	/^#define TCL_ZLIB_VERSION	/;"	d	file:
TCL_Z_MODIFIER	generic/tcl.h	/^#	define TCL_Z_MODIFIER	/;"	d
TCONST	compat/zlib/trees.c	/^#  define TCONST /;"	d	file:
TCONST	compat/zlib/trees.c	/^#  define TCONST$/;"	d	file:
TCONST	generic/tclExecute.c	/^#define TCONST(/;"	d	file:
TCP_ASYNC_CONNECT	unix/tclUnixSock.c	/^#define TCP_ASYNC_CONNECT	/;"	d	file:
TCP_ASYNC_CONNECT	win/tclWinSock.c	/^    TCP_ASYNC_CONNECT = (1<<1),	\/* Async connect in progress. *\/$/;"	e	enum:TcpStateFlags	file:
TCP_ASYNC_FAILED	unix/tclUnixSock.c	/^#define TCP_ASYNC_FAILED	/;"	d	file:
TCP_ASYNC_FAILED	win/tclWinSock.c	/^    TCP_ASYNC_FAILED = (1<<5),	\/* An async connect finally failed. *\/$/;"	e	enum:TcpStateFlags	file:
TCP_ASYNC_PENDING	unix/tclUnixSock.c	/^#define TCP_ASYNC_PENDING	/;"	d	file:
TCP_ASYNC_PENDING	win/tclWinSock.c	/^    TCP_ASYNC_PENDING = (1<<4),	\/* TcpConnect was called to process an async$/;"	e	enum:TcpStateFlags	file:
TCP_ASYNC_TEST_MODE	generic/tclTest.c	/^#define TCP_ASYNC_TEST_MODE	/;"	d	file:
TCP_ASYNC_TEST_MODE	unix/tclUnixSock.c	/^#define TCP_ASYNC_TEST_MODE	/;"	d	file:
TCP_ASYNC_TEST_MODE	win/tclWinSock.c	/^    TCP_ASYNC_TEST_MODE = (1<<8)\/* Async testing activated.  Do not$/;"	e	enum:TcpStateFlags	file:
TCP_BUFFER_SIZE	win/tclWinSock.c	/^#define TCP_BUFFER_SIZE /;"	d	file:
TCP_NONBLOCKING	unix/tclUnixSock.c	/^#define TCP_NONBLOCKING	/;"	d	file:
TCP_NONBLOCKING	win/tclWinSock.c	/^    TCP_NONBLOCKING = (1<<0),	\/* Socket with non-blocking I\/O. *\/$/;"	e	enum:TcpStateFlags	file:
TCompressionStream.Create	compat/zlib/contrib/delphi/ZLib.pas	/^constructor TCompressionStream.Create(CompressionLevel: TCompressionLevel;$/;"	p
TCompressionStream.Destroy	compat/zlib/contrib/delphi/ZLib.pas	/^destructor TCompressionStream.Destroy;$/;"	p
TCompressionStream.GetCompressionRate	compat/zlib/contrib/delphi/ZLib.pas	/^function TCompressionStream.GetCompressionRate: Single;$/;"	f	typeref:typename:Single
TCompressionStream.Read	compat/zlib/contrib/delphi/ZLib.pas	/^function TCompressionStream.Read(var Buffer; Count: Longint): Longint;$/;"	f	typeref:typename:Longint
TCompressionStream.Seek	compat/zlib/contrib/delphi/ZLib.pas	/^function TCompressionStream.Seek(Offset: Longint; Origin: Word): Longint;$/;"	f	typeref:typename:Longint
TCompressionStream.Write	compat/zlib/contrib/delphi/ZLib.pas	/^function TCompressionStream.Write(const Buffer; Count: Longint): Longint;$/;"	f	typeref:typename:Longint
TCustomZLibStream.Create	compat/zlib/contrib/delphi/ZLib.pas	/^constructor TCustomZLibStream.Create(Strm: TStream);$/;"	p
TCustomZLibStream.Progress	compat/zlib/contrib/delphi/ZLib.pas	/^procedure TCustomZLibStream.Progress(Sender: TObject);$/;"	p
TDecompressionStream.Create	compat/zlib/contrib/delphi/ZLib.pas	/^constructor TDecompressionStream.Create(Source: TStream);$/;"	p
TDecompressionStream.Destroy	compat/zlib/contrib/delphi/ZLib.pas	/^destructor TDecompressionStream.Destroy;$/;"	p
TDecompressionStream.Read	compat/zlib/contrib/delphi/ZLib.pas	/^function TDecompressionStream.Read(var Buffer; Count: Longint): Longint;$/;"	f	typeref:typename:Longint
TDecompressionStream.Seek	compat/zlib/contrib/delphi/ZLib.pas	/^function TDecompressionStream.Seek(Offset: Longint; Origin: Word): Longint;$/;"	f	typeref:typename:Longint
TDecompressionStream.Write	compat/zlib/contrib/delphi/ZLib.pas	/^function TDecompressionStream.Write(const Buffer; Count: Longint): Longint;$/;"	f	typeref:typename:Longint
TEBC_DATA_DIG	generic/tclExecute.c	/^#define TEBC_DATA_DIG(/;"	d	file:
TEBC_YIELD	generic/tclExecute.c	/^#define TEBC_YIELD(/;"	d	file:
TEBCdata	generic/tclExecute.c	/^} TEBCdata;$/;"	t	typeref:struct:__anon999f4b180108	file:
TEBCresume	generic/tclExecute.c	/^TEBCresume($/;"	f	typeref:typename:int	file:
TEBCresume	generic/tclExecute.c	/^static Tcl_NRPostProc   TEBCresume;$/;"	v	typeref:typename:Tcl_NRPostProc	file:
TEMP	library/platform/shell.tcl	/^proc ::platform::shell::TEMP {} {$/;"	p	namespace:::platform::shell
TEN_PMAX	generic/tclStrToD.c	/^#define TEN_PMAX	/;"	d	file:
TEOEx_ByteCodeCallback	generic/tclBasic.c	/^TEOEx_ByteCodeCallback($/;"	f	typeref:typename:int	file:
TEOEx_ByteCodeCallback	generic/tclBasic.c	/^static Tcl_NRPostProc	TEOEx_ByteCodeCallback;$/;"	v	typeref:typename:Tcl_NRPostProc	file:
TEOEx_ListCallback	generic/tclBasic.c	/^TEOEx_ListCallback($/;"	f	typeref:typename:int	file:
TEOEx_ListCallback	generic/tclBasic.c	/^static Tcl_NRPostProc	TEOEx_ListCallback;$/;"	v	typeref:typename:Tcl_NRPostProc	file:
TEOV_Error	generic/tclBasic.c	/^TEOV_Error($/;"	f	typeref:typename:int	file:
TEOV_Error	generic/tclBasic.c	/^static Tcl_NRPostProc	TEOV_Error;$/;"	v	typeref:typename:Tcl_NRPostProc	file:
TEOV_Exception	generic/tclBasic.c	/^TEOV_Exception($/;"	f	typeref:typename:int	file:
TEOV_Exception	generic/tclBasic.c	/^static Tcl_NRPostProc	TEOV_Exception;$/;"	v	typeref:typename:Tcl_NRPostProc	file:
TEOV_LookupCmdFromObj	generic/tclBasic.c	/^TEOV_LookupCmdFromObj($/;"	f	typeref:typename:Command *	file:
TEOV_NotFound	generic/tclBasic.c	/^TEOV_NotFound($/;"	f	typeref:typename:int	file:
TEOV_NotFoundCallback	generic/tclBasic.c	/^TEOV_NotFoundCallback($/;"	f	typeref:typename:int	file:
TEOV_NotFoundCallback	generic/tclBasic.c	/^static Tcl_NRPostProc	TEOV_NotFoundCallback;$/;"	v	typeref:typename:Tcl_NRPostProc	file:
TEOV_PushExceptionHandlers	generic/tclBasic.c	/^TEOV_PushExceptionHandlers($/;"	f	typeref:typename:void	file:
TEOV_RestoreVarFrame	generic/tclBasic.c	/^TEOV_RestoreVarFrame($/;"	f	typeref:typename:int	file:
TEOV_RestoreVarFrame	generic/tclBasic.c	/^static Tcl_NRPostProc	TEOV_RestoreVarFrame;$/;"	v	typeref:typename:Tcl_NRPostProc	file:
TEOV_RunEnterTraces	generic/tclBasic.c	/^TEOV_RunEnterTraces($/;"	f	typeref:typename:int	file:
TEOV_RunLeaveTraces	generic/tclBasic.c	/^TEOV_RunLeaveTraces($/;"	f	typeref:typename:int	file:
TEOV_RunLeaveTraces	generic/tclBasic.c	/^static Tcl_NRPostProc	TEOV_RunLeaveTraces;$/;"	v	typeref:typename:Tcl_NRPostProc	file:
TEOV_SwitchVarFrame	generic/tclBasic.c	/^TEOV_SwitchVarFrame($/;"	f	typeref:typename:void	file:
TESTFILE	compat/zlib/test/example.c	/^#  define TESTFILE /;"	d	file:
TESTOBJ_ASSIGN	generic/tclTestObj.c	/^	TESTOBJ_ASSIGN, TESTOBJ_CONVERT, TESTOBJ_DUPLICATE,$/;"	e	enum:TestobjCmd::testobjCmdIndex	file:
TESTOBJ_BUG3598580	generic/tclTestObj.c	/^	TESTOBJ_FREEALLVARS, TESTOBJ_BUG3598580, TESTOBJ_BUGE58D7E19E9,$/;"	e	enum:TestobjCmd::testobjCmdIndex	file:
TESTOBJ_BUGE58D7E19E9	generic/tclTestObj.c	/^	TESTOBJ_FREEALLVARS, TESTOBJ_BUG3598580, TESTOBJ_BUGE58D7E19E9,$/;"	e	enum:TestobjCmd::testobjCmdIndex	file:
TESTOBJ_CONVERT	generic/tclTestObj.c	/^	TESTOBJ_ASSIGN, TESTOBJ_CONVERT, TESTOBJ_DUPLICATE,$/;"	e	enum:TestobjCmd::testobjCmdIndex	file:
TESTOBJ_DUPLICATE	generic/tclTestObj.c	/^	TESTOBJ_ASSIGN, TESTOBJ_CONVERT, TESTOBJ_DUPLICATE,$/;"	e	enum:TestobjCmd::testobjCmdIndex	file:
TESTOBJ_FREEALLVARS	generic/tclTestObj.c	/^	TESTOBJ_FREEALLVARS, TESTOBJ_BUG3598580, TESTOBJ_BUGE58D7E19E9,$/;"	e	enum:TestobjCmd::testobjCmdIndex	file:
TESTOBJ_INVALIDATESTRINGREP	generic/tclTestObj.c	/^	TESTOBJ_INVALIDATESTRINGREP, TESTOBJ_REFCOUNT, TESTOBJ_TYPE,$/;"	e	enum:TestobjCmd::testobjCmdIndex	file:
TESTOBJ_NEWOBJ	generic/tclTestObj.c	/^	TESTOBJ_TYPES, TESTOBJ_OBJTYPE, TESTOBJ_NEWOBJ, TESTOBJ_SET,$/;"	e	enum:TestobjCmd::testobjCmdIndex	file:
TESTOBJ_OBJTYPE	generic/tclTestObj.c	/^	TESTOBJ_TYPES, TESTOBJ_OBJTYPE, TESTOBJ_NEWOBJ, TESTOBJ_SET,$/;"	e	enum:TestobjCmd::testobjCmdIndex	file:
TESTOBJ_REFCOUNT	generic/tclTestObj.c	/^	TESTOBJ_INVALIDATESTRINGREP, TESTOBJ_REFCOUNT, TESTOBJ_TYPE,$/;"	e	enum:TestobjCmd::testobjCmdIndex	file:
TESTOBJ_SET	generic/tclTestObj.c	/^	TESTOBJ_TYPES, TESTOBJ_OBJTYPE, TESTOBJ_NEWOBJ, TESTOBJ_SET,$/;"	e	enum:TestobjCmd::testobjCmdIndex	file:
TESTOBJ_TYPE	generic/tclTestObj.c	/^	TESTOBJ_INVALIDATESTRINGREP, TESTOBJ_REFCOUNT, TESTOBJ_TYPE,$/;"	e	enum:TestobjCmd::testobjCmdIndex	file:
TESTOBJ_TYPES	generic/tclTestObj.c	/^	TESTOBJ_TYPES, TESTOBJ_OBJTYPE, TESTOBJ_NEWOBJ, TESTOBJ_SET,$/;"	e	enum:TestobjCmd::testobjCmdIndex	file:
TEST_DLL_FILE	win/Makefile.in	/^TEST_DLL_FILE		= tcltest$(VER)${DLLSUFFIX}$/;"	m
TEST_EXE_FILE	win/Makefile.in	/^TEST_EXE_FILE		= tcltest${EXESUFFIX}$/;"	m
TEST_FLAG	win/tclWinChan.c	/^#define TEST_FLAG(/;"	d	file:
TEST_LIBS	compat/zlib/Makefile.in	/^TEST_LIBS=-L. libz.a$/;"	m
TEST_LIB_FILE	win/Makefile.in	/^TEST_LIB_FILE		= @LIBPREFIX@tcltest$(VER)${DLLSUFFIX}${LIBSUFFIX}$/;"	m
TEST_LOAD_FACILITIES	win/Makefile.in	/^TEST_LOAD_FACILITIES	= package ifneeded tcl::test ${VERSION}@TCL_PATCH_LEVEL@ [list load ${TEST_/;"	m
TEST_LOAD_PRMS	win/Makefile.in	/^TEST_LOAD_PRMS		= lappend ::auto_path {$(ROOT_DIR_WIN_NATIVE)\/tests};\\$/;"	m
TEXT	generic/tclMain.c	/^#   define TEXT(/;"	d	file:
TGZ_EXTRACT	compat/zlib/contrib/untgz/untgz.c	/^enum { TGZ_EXTRACT, TGZ_LIST, TGZ_INVALID };$/;"	e	enum:__anon8f2dd5280103	file:
TGZ_INVALID	compat/zlib/contrib/untgz/untgz.c	/^enum { TGZ_EXTRACT, TGZ_LIST, TGZ_INVALID };$/;"	e	enum:__anon8f2dd5280103	file:
TGZ_LIST	compat/zlib/contrib/untgz/untgz.c	/^enum { TGZ_EXTRACT, TGZ_LIST, TGZ_INVALID };$/;"	e	enum:__anon8f2dd5280103	file:
TGZfname	compat/zlib/contrib/untgz/untgz.c	/^char *TGZfname (const char *arcname)$/;"	f	typeref:typename:char *
TGZnotfound	compat/zlib/contrib/untgz/untgz.c	/^void TGZnotfound (const char *arcname)$/;"	f	typeref:typename:void
TGZsuffix	compat/zlib/contrib/untgz/untgz.c	/^const char *TGZsuffix[] = { "\\0", ".tar", ".tar.gz", ".taz", ".tgz", NULL };$/;"	v	typeref:typename:const char * []
THE DUPINTREPPROC FIELD	doc/ObjectType.3	/^.SS "THE DUPINTREPPROC FIELD"$/;"	S	section:Tcl_ObjType""THE TCL_OBJTYPE STRUCTURE
THE FREEINTREPPROC FIELD	doc/ObjectType.3	/^.SS "THE FREEINTREPPROC FIELD"$/;"	S	section:Tcl_ObjType""THE TCL_OBJTYPE STRUCTURE
THE NAME FIELD	doc/ObjectType.3	/^.SS "THE NAME FIELD"$/;"	S	section:Tcl_ObjType""THE TCL_OBJTYPE STRUCTURE
THE SETFROMANYPROC FIELD	doc/ObjectType.3	/^.SS "THE SETFROMANYPROC FIELD"$/;"	S	section:Tcl_ObjType""THE TCL_OBJTYPE STRUCTURE
THE TCL_FILESYSTEM STRUCTURE	doc/FileSystem.3	/^.SS "THE TCL_FILESYSTEM STRUCTURE"$/;"	S	section:Filesystem""THE VIRTUAL FILESYSTEM API
THE TCL_FREEPROC ARGUMENT TO TCL_SETRESULT	doc/SetResult.3	/^.SH "THE TCL_FREEPROC ARGUMENT TO TCL_SETRESULT"$/;"	s	title:Tcl_SetResult
THE TCL_HASHKEYTYPE STRUCTURE	doc/Hash.3	/^.SH "THE TCL_HASHKEYTYPE STRUCTURE"$/;"	s	title:Tcl_Hash
THE TCL_OBJ STRUCTURE	doc/Object.3	/^.SH "THE TCL_OBJ STRUCTURE"$/;"	s	title:Tcl_Obj
THE TCL_OBJTYPE STRUCTURE	doc/ObjectType.3	/^.SH "THE TCL_OBJTYPE STRUCTURE"$/;"	s	title:Tcl_ObjType
THE UPDATESTRINGPROC FIELD	doc/ObjectType.3	/^.SS "THE UPDATESTRINGPROC FIELD"$/;"	S	section:Tcl_ObjType""THE TCL_OBJTYPE STRUCTURE
THE VERSION FIELD	doc/ObjectType.3	/^.SS "THE VERSION FIELD"$/;"	S	section:Tcl_ObjType""THE TCL_OBJTYPE STRUCTURE
THE VIRTUAL FILESYSTEM API	doc/FileSystem.3	/^.SH "THE VIRTUAL FILESYSTEM API"$/;"	s	title:Filesystem
THREADACTIONPROC	doc/CrtChannel.3	/^.SS "THREADACTIONPROC"$/;"	S	section:Tcl_CreateChannel""TCL_CHANNELTYPE
THREAD_CANCEL	generic/tclThreadTest.c	/^	THREAD_CANCEL, THREAD_CREATE, THREAD_EVENT, THREAD_EXIT,$/;"	e	enum:ThreadObjCmd::options	file:
THREAD_CREATE	generic/tclThreadTest.c	/^	THREAD_CANCEL, THREAD_CREATE, THREAD_EVENT, THREAD_EXIT,$/;"	e	enum:ThreadObjCmd::options	file:
THREAD_ERRORPROC	generic/tclThreadTest.c	/^	THREAD_WAIT, THREAD_ERRORPROC$/;"	e	enum:ThreadObjCmd::options	file:
THREAD_EVENT	generic/tclThreadTest.c	/^	THREAD_CANCEL, THREAD_CREATE, THREAD_EVENT, THREAD_EXIT,$/;"	e	enum:ThreadObjCmd::options	file:
THREAD_EXIT	generic/tclThreadTest.c	/^	THREAD_CANCEL, THREAD_CREATE, THREAD_EVENT, THREAD_EXIT,$/;"	e	enum:ThreadObjCmd::options	file:
THREAD_ID	generic/tclThreadTest.c	/^	THREAD_ID, THREAD_JOIN, THREAD_NAMES, THREAD_SEND,$/;"	e	enum:ThreadObjCmd::options	file:
THREAD_JOIN	generic/tclThreadTest.c	/^	THREAD_ID, THREAD_JOIN, THREAD_NAMES, THREAD_SEND,$/;"	e	enum:ThreadObjCmd::options	file:
THREAD_NAMES	generic/tclThreadTest.c	/^	THREAD_ID, THREAD_JOIN, THREAD_NAMES, THREAD_SEND,$/;"	e	enum:ThreadObjCmd::options	file:
THREAD_SEND	generic/tclThreadTest.c	/^	THREAD_ID, THREAD_JOIN, THREAD_NAMES, THREAD_SEND,$/;"	e	enum:ThreadObjCmd::options	file:
THREAD_WAIT	generic/tclThreadTest.c	/^	THREAD_WAIT, THREAD_ERRORPROC$/;"	e	enum:ThreadObjCmd::options	file:
TIME	compat/zlib/inflate.h	/^    TIME,       \/* i: waiting for modification time (gzip) *\/$/;"	e	enum:__anon6bf0a2910103
TINYDIR_H	compat/zlib/contrib/minizip/tinydir.h	/^#define TINYDIR_H$/;"	d
TINYDIR_STRING	compat/zlib/contrib/minizip/tinydir.h	/^# define TINYDIR_STRING(/;"	d
TITLECASE_LETTER	generic/tclUniData.c	/^    TITLECASE_LETTER,$/;"	e	enum:__anon910316cb0103	file:
TK_BIN_DIR	unix/tcl.m4	/^    AC_SUBST(TK_BIN_DIR)$/;"	s
TK_BIN_DIR	win/tcl.m4	/^    AC_SUBST(TK_BIN_DIR)$/;"	s
TK_LIB_FILE	unix/tcl.m4	/^    AC_SUBST(TK_LIB_FILE)$/;"	s
TK_LIB_FILE	win/tcl.m4	/^    AC_SUBST(TK_LIB_FILE)$/;"	s
TK_LIB_FLAG	unix/tcl.m4	/^    AC_SUBST(TK_LIB_FLAG)$/;"	s
TK_LIB_SPEC	unix/tcl.m4	/^    AC_SUBST(TK_LIB_SPEC)$/;"	s
TK_SHLIB_LD_EXTRAS	unix/tcl.m4	/^    AC_SUBST(TK_SHLIB_LD_EXTRAS)$/;"	s
TK_SRC_DIR	unix/tcl.m4	/^    AC_SUBST(TK_SRC_DIR)$/;"	s
TK_SRC_DIR	win/tcl.m4	/^    AC_SUBST(TK_SRC_DIR)$/;"	s
TK_STUB_LIB_FILE	unix/tcl.m4	/^    AC_SUBST(TK_STUB_LIB_FILE)$/;"	s
TK_STUB_LIB_FLAG	unix/tcl.m4	/^    AC_SUBST(TK_STUB_LIB_FLAG)$/;"	s
TK_STUB_LIB_SPEC	unix/tcl.m4	/^    AC_SUBST(TK_STUB_LIB_SPEC)$/;"	s
TK_VERSION	unix/tcl.m4	/^    AC_SUBST(TK_VERSION)$/;"	s
TMRT_CALIBRATE	generic/tclCmdMZ.c	/^	TMRT_EV_DIRECT,	TMRT_OVERHEAD,	TMRT_CALIBRATE,	TMRT_LAST$/;"	e	enum:Tcl_TimeRateObjCmd::timeRateOptionsEnum	file:
TMRT_EV_DIRECT	generic/tclCmdMZ.c	/^	TMRT_EV_DIRECT,	TMRT_OVERHEAD,	TMRT_CALIBRATE,	TMRT_LAST$/;"	e	enum:Tcl_TimeRateObjCmd::timeRateOptionsEnum	file:
TMRT_LAST	generic/tclCmdMZ.c	/^	TMRT_EV_DIRECT,	TMRT_OVERHEAD,	TMRT_CALIBRATE,	TMRT_LAST$/;"	e	enum:Tcl_TimeRateObjCmd::timeRateOptionsEnum	file:
TMRT_OVERHEAD	generic/tclCmdMZ.c	/^	TMRT_EV_DIRECT,	TMRT_OVERHEAD,	TMRT_CALIBRATE,	TMRT_LAST$/;"	e	enum:Tcl_TimeRateObjCmd::timeRateOptionsEnum	file:
TM_YEAR_BASE	generic/tclDate.c	/^#define TM_YEAR_BASE	/;"	d	file:
TM_YEAR_BASE	generic/tclDateClassic.c	/^#define TM_YEAR_BASE	/;"	d	file:
TOMMATH_DIR	unix/Makefile.in	/^TOMMATH_DIR		= $(TOP_DIR)\/libtommath$/;"	m
TOMMATH_DIR	win/Makefile.in	/^TOMMATH_DIR		= $(TOP_DIR)\/libtommath$/;"	m
TOMMATH_DIR_NATIVE	win/Makefile.in	/^TOMMATH_DIR_NATIVE	= $(shell $(CYGPATH) '$(TOMMATH_DIR)')$/;"	m
TOMMATH_DLL_FILE	win/Makefile.in	/^TOMMATH_DLL_FILE	= libtommath.dll$/;"	m
TOMMATH_DLL_FILE	win/configure.ac	/^  AC_SUBST(TOMMATH_DLL_FILE,[\\${TOMMATH_DLL_FILE}])$/;"	s
TOMMATH_INCLUDE	unix/Makefile.in	/^TOMMATH_INCLUDE		= @TOMMATH_INCLUDE@$/;"	m
TOMMATH_INCLUDE	unix/configure.ac	/^  AC_SUBST(TOMMATH_INCLUDE,[-I\\${TOMMATH_DIR}])$/;"	s
TOMMATH_LIBS	win/configure.ac	/^        AC_SUBST(TOMMATH_LIBS,[\\${TOMMATH_DIR_NATIVE}\/win64-arm\/libtommath.dll.a])$/;"	s
TOMMATH_LIBS	win/configure.ac	/^        AC_SUBST(TOMMATH_LIBS,[\\${TOMMATH_DIR_NATIVE}\/win64-arm\/tommath.lib])$/;"	s
TOMMATH_LIBS	win/configure.ac	/^        AC_SUBST(TOMMATH_LIBS,[\\${TOMMATH_DIR_NATIVE}\/win64\/libtommath.dll.a])$/;"	s
TOMMATH_LIBS	win/configure.ac	/^        AC_SUBST(TOMMATH_LIBS,[\\${TOMMATH_DIR_NATIVE}\/win64\/tommath.lib])$/;"	s
TOMMATH_LIBS	win/configure.ac	/^    AC_SUBST(TOMMATH_LIBS,[\\${TOMMATH_DIR_NATIVE}\/win32\/tommath.lib])$/;"	s
TOMMATH_OBJS	unix/Makefile.in	/^TOMMATH_OBJS = bn_s_mp_reverse.o bn_s_mp_mul_digs_fast.o \\$/;"	m
TOMMATH_OBJS	unix/configure.ac	/^  AC_SUBST(TOMMATH_OBJS,[\\${TOMMATH_OBJS}])$/;"	s
TOMMATH_OBJS	win/Makefile.in	/^TOMMATH_OBJS = \\$/;"	m
TOMMATH_OBJS	win/configure.ac	/^  AC_SUBST(TOMMATH_OBJS,[\\${TOMMATH_OBJS}])$/;"	s
TOMMATH_PRIV_H_	libtommath/tommath_private.h	/^#define TOMMATH_PRIV_H_$/;"	d
TOMMATH_SRCS	unix/Makefile.in	/^TOMMATH_SRCS = \\$/;"	m
TOMMATH_SRCS	unix/configure.ac	/^  AC_SUBST(TOMMATH_SRCS,[\\${TOMMATH_SRCS}])$/;"	s
TOOL_DIR	unix/Makefile.in	/^TOOL_DIR		= $(TOP_DIR)\/tools$/;"	m
TOOL_DIR	win/Makefile.in	/^TOOL_DIR		= $(TOP_DIR)\/tools$/;"	m
TOOL_DIR	win/Makefile.in	/^TOOL_DIR=$(ROOT_DIR)\/tools$/;"	m
TOOL_DIR_NATIVE	win/Makefile.in	/^TOOL_DIR_NATIVE		= $(shell $(CYGPATH) '$(TOOL_DIR)')$/;"	m
TOOM_MUL_CUTOFF	libtommath/bn_cutoffs.c	/^    TOOM_MUL_CUTOFF = MP_DEFAULT_TOOM_MUL_CUTOFF,$/;"	v	typeref:typename:int
TOOM_SQR_CUTOFF	libtommath/bn_cutoffs.c	/^    TOOM_SQR_CUTOFF = MP_DEFAULT_TOOM_SQR_CUTOFF;$/;"	v	typeref:typename:int
TOO_FAR	compat/zlib/deflate.c	/^#  define TOO_FAR /;"	d	file:
TOP_CB	generic/tclInt.h	/^#define TOP_CB(/;"	d
TOP_DIR	unix/Makefile.in	/^TOP_DIR			= @TCL_SRC_DIR@$/;"	m
TOP_DIR	win/Makefile.in	/^TOP_DIR			= $(shell cd @srcdir@\/..; pwd -W 2>\/dev\/null || pwd -P)$/;"	m
TP_Dying	generic/tclThreadTest.c	/^#define TP_Dying	/;"	d	file:
TRACE	generic/tclExecute.c	/^#   define TRACE(/;"	d	file:
TRACE	unix/Makefile.in	/^TRACE			= strace$/;"	m
TRACE_ADD	generic/tclTrace.c	/^    TRACE_ADD, TRACE_INFO, TRACE_REMOVE$/;"	e	enum:traceOptionsEnum	file:
TRACE_APPEND	generic/tclExecute.c	/^#   define TRACE_APPEND(/;"	d	file:
TRACE_CMD_DELETE	generic/tclTrace.c	/^    enum operations { TRACE_CMD_DELETE, TRACE_CMD_RENAME } index;$/;"	e	enum:TraceCommandObjCmd::operations	file:
TRACE_CMD_RENAME	generic/tclTrace.c	/^    enum operations { TRACE_CMD_DELETE, TRACE_CMD_RENAME } index;$/;"	e	enum:TraceCommandObjCmd::operations	file:
TRACE_ERROR	generic/tclExecute.c	/^#   define TRACE_ERROR(/;"	d	file:
TRACE_EXEC_ENTER	generic/tclTrace.c	/^	TRACE_EXEC_ENTER, TRACE_EXEC_LEAVE,$/;"	e	enum:TraceExecutionObjCmd::operations	file:
TRACE_EXEC_ENTER_STEP	generic/tclTrace.c	/^	TRACE_EXEC_ENTER_STEP, TRACE_EXEC_LEAVE_STEP$/;"	e	enum:TraceExecutionObjCmd::operations	file:
TRACE_EXEC_LEAVE	generic/tclTrace.c	/^	TRACE_EXEC_ENTER, TRACE_EXEC_LEAVE,$/;"	e	enum:TraceExecutionObjCmd::operations	file:
TRACE_EXEC_LEAVE_STEP	generic/tclTrace.c	/^	TRACE_EXEC_ENTER_STEP, TRACE_EXEC_LEAVE_STEP$/;"	e	enum:TraceExecutionObjCmd::operations	file:
TRACE_INFO	generic/tclTrace.c	/^    TRACE_ADD, TRACE_INFO, TRACE_REMOVE$/;"	e	enum:traceOptionsEnum	file:
TRACE_OPTS	unix/Makefile.in	/^TRACE_OPTS		=$/;"	m
TRACE_REMOVE	generic/tclTrace.c	/^    TRACE_ADD, TRACE_INFO, TRACE_REMOVE$/;"	e	enum:traceOptionsEnum	file:
TRACE_VAR_ARRAY	generic/tclTrace.c	/^	TRACE_VAR_ARRAY, TRACE_VAR_READ, TRACE_VAR_UNSET, TRACE_VAR_WRITE$/;"	e	enum:TraceVariableObjCmd::operations	file:
TRACE_VAR_READ	generic/tclTrace.c	/^	TRACE_VAR_ARRAY, TRACE_VAR_READ, TRACE_VAR_UNSET, TRACE_VAR_WRITE$/;"	e	enum:TraceVariableObjCmd::operations	file:
TRACE_VAR_UNSET	generic/tclTrace.c	/^	TRACE_VAR_ARRAY, TRACE_VAR_READ, TRACE_VAR_UNSET, TRACE_VAR_WRITE$/;"	e	enum:TraceVariableObjCmd::operations	file:
TRACE_VAR_WRITE	generic/tclTrace.c	/^	TRACE_VAR_ARRAY, TRACE_VAR_READ, TRACE_VAR_UNSET, TRACE_VAR_WRITE$/;"	e	enum:TraceVariableObjCmd::operations	file:
TRACE_WITH_OBJ	generic/tclExecute.c	/^#   define TRACE_WITH_OBJ(/;"	d	file:
TRANSMIT_DONT	generic/tclIOGT.c	/^#define TRANSMIT_DONT	/;"	d	file:
TRANSMIT_DOWN	generic/tclIOGT.c	/^#define TRANSMIT_DOWN	/;"	d	file:
TRANSMIT_IBUF	generic/tclIOGT.c	/^#define TRANSMIT_IBUF	/;"	d	file:
TRANSMIT_NUM	generic/tclIOGT.c	/^#define TRANSMIT_NUM	/;"	d	file:
TRANSMIT_SELF	generic/tclIOGT.c	/^#define TRANSMIT_SELF	/;"	d	file:
TRAVERSED_MIXIN	generic/tclOOCall.c	/^    TRAVERSED_MIXIN = 0x800000,$/;"	e	enum:CallChainFlags	file:
TRIGGER	compat/zlib/examples/gzlog.c	/^#define TRIGGER /;"	d	file:
TRIMHDR	unix/Makefile.in	/^TRIMHDR		= $(GENERIC_DIR)\/tclStringTrim.h$/;"	m
TRUE	generic/tclCkalloc.c	/^#define TRUE	/;"	d	file:
TRUE_PRIVATE_METHOD	generic/tclOOInt.h	/^    TRUE_PRIVATE_METHOD = 0x20	\/* This is a private method only accessible$/;"	e	enum:TclOOCallChainFlags
TRUNCATEPROC	doc/CrtChannel.3	/^.SS "TRUNCATEPROC"$/;"	S	section:Tcl_CreateChannel""TCL_CHANNELTYPE
TRY_FREE	compat/zlib/zutil.h	/^#define TRY_FREE(/;"	d
TSDTable	generic/tclThreadStorage.c	/^} TSDTable;$/;"	t	typeref:struct:__anon4d1cb8920208	file:
TSDTableCreate	generic/tclThreadStorage.c	/^TSDTableCreate(void)$/;"	f	typeref:typename:TSDTable *	file:
TSDTableDelete	generic/tclThreadStorage.c	/^TSDTableDelete($/;"	f	typeref:typename:void	file:
TSDTableGrow	generic/tclThreadStorage.c	/^TSDTableGrow($/;"	f	typeref:typename:void	file:
TSDUnion	generic/tclThreadStorage.c	/^} TSDUnion;$/;"	t	typeref:union:__anon4d1cb892030a	file:
TWO-PART NAMES	doc/TraceVar.3	/^.SH "TWO-PART NAMES"$/;"	s	title:Tcl_TraceVar
TWO_OVER_3LOG10	generic/tclStrToD.c	/^#define TWO_OVER_3LOG10 /;"	d	file:
TYPE	compat/zlib/contrib/infback9/inflate9.h	/^        TYPE,       \/* i: waiting for type bits, including last-flag bit *\/$/;"	e	enum:__anonf28101a00103
TYPE	compat/zlib/inflate.h	/^        TYPE,       \/* i: waiting for type bits, including last-flag bit *\/$/;"	e	enum:__anon6bf0a2910103
TYPEDO	compat/zlib/inflate.h	/^        TYPEDO,     \/* i: same, but skip check to exit inflate on new block *\/$/;"	e	enum:__anon6bf0a2910103
TYPENAME	doc/CrtChannel.3	/^.SS TYPENAME$/;"	S	section:Tcl_CreateChannel""TCL_CHANNELTYPE
TYPENAME	doc/FileSystem.3	/^.SS TYPENAME$/;"	S	section:Filesystem""FILESYSTEM INFRASTRUCTURE
TYPE_BAD_ARRAY_INDEX	generic/tclParse.h	/^    TYPE_BAD_ARRAY_INDEX = ($/;"	e	enum:ParseTypeFlags
TYPE_BRACE	generic/tclParse.h	/^    TYPE_BRACE = 0x40,$/;"	e	enum:ParseTypeFlags
TYPE_CLOSE_BRACK	generic/tclParse.h	/^    TYPE_CLOSE_BRACK = 0x20,$/;"	e	enum:ParseTypeFlags
TYPE_CLOSE_PAREN	generic/tclParse.h	/^    TYPE_CLOSE_PAREN = 0x10,$/;"	e	enum:ParseTypeFlags
TYPE_COMMAND_END	generic/tclParse.h	/^    TYPE_COMMAND_END = 0x2,$/;"	e	enum:ParseTypeFlags
TYPE_NORMAL	generic/tclParse.h	/^    TYPE_NORMAL = 0,$/;"	e	enum:ParseTypeFlags
TYPE_OPEN_PAREN	generic/tclParse.h	/^    TYPE_OPEN_PAREN = 0x80,$/;"	e	enum:ParseTypeFlags
TYPE_QUOTE	generic/tclParse.h	/^    TYPE_QUOTE = 0x8,$/;"	e	enum:ParseTypeFlags
TYPE_SPACE	generic/tclParse.h	/^    TYPE_SPACE = 0x1,$/;"	e	enum:ParseTypeFlags
TYPE_SUBS	generic/tclParse.h	/^    TYPE_SUBS = 0x4,$/;"	e	enum:ParseTypeFlags
TZ_INIT_MARKER	generic/tclClock.c	/^#define TZ_INIT_MARKER	/;"	d	file:
TableEncodingData	generic/tclEncoding.c	/^} TableEncodingData;$/;"	t	typeref:struct:__anondb7a8e8c0208	file:
TableFreeProc	generic/tclEncoding.c	/^TableFreeProc($/;"	f	typeref:typename:void	file:
TableFreeProc	generic/tclEncoding.c	/^static Tcl_EncodingFreeProc	TableFreeProc;$/;"	v	typeref:typename:Tcl_EncodingFreeProc	file:
TableFromUtfProc	generic/tclEncoding.c	/^TableFromUtfProc($/;"	f	typeref:typename:int	file:
TableFromUtfProc	generic/tclEncoding.c	/^static Tcl_EncodingConvertProc	TableFromUtfProc;$/;"	v	typeref:typename:Tcl_EncodingConvertProc	file:
TableToUtfProc	generic/tclEncoding.c	/^TableToUtfProc($/;"	f	typeref:typename:int	file:
TableToUtfProc	generic/tclEncoding.c	/^static Tcl_EncodingConvertProc	TableToUtfProc;$/;"	v	typeref:typename:Tcl_EncodingConvertProc	file:
TagunzFile__	compat/zlib/contrib/minizip/unzip.h	/^typedef struct TagunzFile__ { int unused; } unzFile__;$/;"	s
TagzipFile__	compat/zlib/contrib/minizip/zip.h	/^typedef struct TagzipFile__ { int unused; } zipFile__;$/;"	s
TakeAbsoluteValue	generic/tclStrToD.c	/^TakeAbsoluteValue($/;"	f	typeref:typename:void	file:
TalInstDesc	generic/tclAssembly.c	/^typedef struct TalInstDesc {$/;"	s	file:
TalInstDesc	generic/tclAssembly.c	/^} TalInstDesc;$/;"	t	typeref:struct:TalInstDesc	file:
TalInstType	generic/tclAssembly.c	/^} TalInstType;$/;"	t	typeref:enum:__anone89463850103	file:
TalInstructionTable	generic/tclAssembly.c	/^static const TalInstDesc TalInstructionTable[] = {$/;"	v	typeref:typename:const TalInstDesc[]	file:
Target	generic/tclInterp.c	/^typedef struct Target {$/;"	s	file:
Target	generic/tclInterp.c	/^} Target;$/;"	t	typeref:struct:Target	file:
TclAccessProc_	generic/tclInt.h	/^typedef int (TclAccessProc_)(const char *path, int mode);$/;"	t	typeref:typename:int ()(const char * path,int mode)
TclAddLiteralObj	generic/tclIntDecls.h	/^#define TclAddLiteralObj /;"	d
TclAddLiteralObj	generic/tclLiteral.c	/^TclAddLiteralObj($/;"	f	typeref:typename:int
TclAddLoopBreakFixup	generic/tclCompile.c	/^TclAddLoopBreakFixup($/;"	f	typeref:typename:void
TclAddLoopContinueFixup	generic/tclCompile.c	/^TclAddLoopContinueFixup($/;"	f	typeref:typename:void
TclAddOpCmd	generic/tclInt.h	/^MODULE_SCOPE Tcl_ObjCmdProc TclAddOpCmd;$/;"	v	typeref:typename:MODULE_SCOPE Tcl_ObjCmdProc
TclAdjustStackDepth	generic/tclCompile.h	/^TclAdjustStackDepth($/;"	f	typeref:typename:void
TclAdvanceContinuations	generic/tclBasic.c	/^TclAdvanceContinuations($/;"	f	typeref:typename:void
TclAdvanceLines	generic/tclBasic.c	/^TclAdvanceLines($/;"	f	typeref:typename:void
TclAliasObjCmd	generic/tclInt.h	/^MODULE_SCOPE Tcl_ObjCmdProc TclAliasObjCmd;$/;"	v	typeref:typename:MODULE_SCOPE Tcl_ObjCmdProc
TclAliasObjCmd	generic/tclInterp.c	/^TclAliasObjCmd($/;"	f	typeref:typename:int
TclAllocElemsEx	generic/tclCkalloc.c	/^TclAllocElemsEx($/;"	f	typeref:typename:void *
TclAllocEx	generic/tclInt.h	/^TclAllocEx($/;"	f	typeref:typename:void *
TclAllocObjStorage	generic/tclInt.h	/^#  define TclAllocObjStorage(/;"	d
TclAllocObjStorageEx	generic/tclInt.h	/^#  define TclAllocObjStorageEx(/;"	d
TclAllocateFreeObjects	generic/tclIntDecls.h	/^#define TclAllocateFreeObjects /;"	d
TclAllocateFreeObjects	generic/tclObj.c	/^TclAllocateFreeObjects(void)$/;"	f	typeref:typename:void
TclAndOpCmd	generic/tclInt.h	/^MODULE_SCOPE Tcl_ObjCmdProc TclAndOpCmd;$/;"	v	typeref:typename:MODULE_SCOPE Tcl_ObjCmdProc
TclAppendBytesToByteArray	generic/tclBinary.c	/^TclAppendBytesToByteArray($/;"	f	typeref:typename:void
TclAppendUtfToUtf	generic/tclStringObj.c	/^TclAppendUtfToUtf($/;"	f	typeref:typename:void
TclArgumentBCEnter	generic/tclBasic.c	/^TclArgumentBCEnter($/;"	f	typeref:typename:void
TclArgumentBCRelease	generic/tclBasic.c	/^TclArgumentBCRelease($/;"	f	typeref:typename:void
TclArgumentEnter	generic/tclBasic.c	/^TclArgumentEnter($/;"	f	typeref:typename:void
TclArgumentGet	generic/tclBasic.c	/^TclArgumentGet($/;"	f	typeref:typename:void
TclArgumentRelease	generic/tclBasic.c	/^TclArgumentRelease($/;"	f	typeref:typename:void
TclArithSeriesInit	generic/tclArithSeries.c	/^void TclArithSeriesInit(void) {$/;"	f	typeref:typename:void
TclAssembleCode	generic/tclAssembly.c	/^TclAssembleCode($/;"	f	typeref:typename:int	file:
TclAsyncMarkFromNotifier	generic/tclAsync.c	/^TclAsyncMarkFromNotifier(void)$/;"	f	typeref:typename:void
TclAsyncNotifier	macosx/tclMacOSXNotify.c	/^TclAsyncNotifier($/;"	f	typeref:typename:int
TclAsyncNotifier	unix/tclEpollNotfy.c	/^TclAsyncNotifier($/;"	f	typeref:typename:int
TclAsyncNotifier	unix/tclKqueueNotfy.c	/^TclAsyncNotifier($/;"	f	typeref:typename:int
TclAsyncNotifier	unix/tclSelectNotfy.c	/^TclAsyncNotifier($/;"	f	typeref:typename:int
TclAsyncNotifier	win/tclWinNotify.c	/^TclAsyncNotifier($/;"	f	typeref:typename:int
TclAsyncReady	generic/tclInt.h	/^#define TclAsyncReady(/;"	d
TclAtoWIe	generic/tclClockFmt.c	/^TclAtoWIe($/;"	f	typeref:typename:int
TclAttemptAllocElemsEx	generic/tclInt.h	/^TclAttemptAllocElemsEx($/;"	f	typeref:typename:void *
TclAttemptAllocEx	generic/tclInt.h	/^TclAttemptAllocEx($/;"	f	typeref:typename:void *
TclAttemptCompileProc	generic/tclEnsemble.c	/^TclAttemptCompileProc($/;"	f	typeref:typename:int
TclAttemptInitStringRep	generic/tclInt.h	/^#define TclAttemptInitStringRep(/;"	d
TclAttemptReallocElemsEx	generic/tclCkalloc.c	/^TclAttemptReallocElemsEx($/;"	f	typeref:typename:void *
TclAttemptReallocEx	generic/tclInt.h	/^TclAttemptReallocEx($/;"	f	typeref:typename:void *
TclBNAlloc	generic/tclTomMathDecls.h	/^#define TclBNAlloc(/;"	d
TclBNCalloc	generic/tclTomMathDecls.h	/^#define TclBNCalloc(/;"	d
TclBNFree	generic/tclTomMathDecls.h	/^#define TclBNFree(/;"	d
TclBNRealloc	generic/tclTomMathDecls.h	/^#define TclBNRealloc(/;"	d
TclBN_epoch	generic/tclTomMathDecls.h	/^#define TclBN_epoch /;"	d
TclBN_epoch	generic/tclTomMathInterface.c	/^TclBN_epoch(void)$/;"	f	typeref:typename:int
TclBN_mp_add	generic/tclStubInit.c	/^#define TclBN_mp_add /;"	d	file:
TclBN_mp_add	generic/tclTomMathDecls.h	/^#define TclBN_mp_add /;"	d
TclBN_mp_add_d	generic/tclStubInit.c	/^#define TclBN_mp_add_d /;"	d	file:
TclBN_mp_add_d	generic/tclTomMathDecls.h	/^#define TclBN_mp_add_d /;"	d
TclBN_mp_and	generic/tclStubInit.c	/^#define TclBN_mp_and /;"	d	file:
TclBN_mp_and	generic/tclTomMathDecls.h	/^#define TclBN_mp_and /;"	d
TclBN_mp_balance_mul	generic/tclStubInit.c	/^#define TclBN_mp_balance_mul /;"	d	file:
TclBN_mp_clamp	generic/tclStubInit.c	/^#define TclBN_mp_clamp /;"	d	file:
TclBN_mp_clamp	generic/tclTomMathDecls.h	/^#define TclBN_mp_clamp /;"	d
TclBN_mp_clear	generic/tclStubInit.c	/^#define TclBN_mp_clear /;"	d	file:
TclBN_mp_clear	generic/tclTomMathDecls.h	/^#define TclBN_mp_clear /;"	d
TclBN_mp_clear_multi	generic/tclStubInit.c	/^#define TclBN_mp_clear_multi /;"	d	file:
TclBN_mp_clear_multi	generic/tclTomMathDecls.h	/^#define TclBN_mp_clear_multi /;"	d
TclBN_mp_cmp	generic/tclStubInit.c	/^#define TclBN_mp_cmp /;"	d	file:
TclBN_mp_cmp	generic/tclTomMathDecls.h	/^#define TclBN_mp_cmp /;"	d
TclBN_mp_cmp_d	generic/tclStubInit.c	/^#define TclBN_mp_cmp_d /;"	d	file:
TclBN_mp_cmp_d	generic/tclTomMathDecls.h	/^#define TclBN_mp_cmp_d /;"	d
TclBN_mp_cmp_mag	generic/tclStubInit.c	/^#define TclBN_mp_cmp_mag /;"	d	file:
TclBN_mp_cmp_mag	generic/tclTomMathDecls.h	/^#define TclBN_mp_cmp_mag /;"	d
TclBN_mp_cnt_lsb	generic/tclStubInit.c	/^#define TclBN_mp_cnt_lsb /;"	d	file:
TclBN_mp_cnt_lsb	generic/tclTomMathDecls.h	/^#define TclBN_mp_cnt_lsb /;"	d
TclBN_mp_copy	generic/tclStubInit.c	/^#define TclBN_mp_copy /;"	d	file:
TclBN_mp_copy	generic/tclTomMathDecls.h	/^#define TclBN_mp_copy /;"	d
TclBN_mp_count_bits	generic/tclStubInit.c	/^#define TclBN_mp_count_bits /;"	d	file:
TclBN_mp_count_bits	generic/tclTomMathDecls.h	/^#define TclBN_mp_count_bits /;"	d
TclBN_mp_div	generic/tclStubInit.c	/^#define TclBN_mp_div /;"	d	file:
TclBN_mp_div	generic/tclTomMathDecls.h	/^#define TclBN_mp_div /;"	d
TclBN_mp_div_2	generic/tclStubInit.c	/^#define TclBN_mp_div_2 /;"	d	file:
TclBN_mp_div_2	generic/tclTomMathDecls.h	/^#define TclBN_mp_div_2 /;"	d
TclBN_mp_div_2d	generic/tclStubInit.c	/^#define TclBN_mp_div_2d /;"	d	file:
TclBN_mp_div_2d	generic/tclTomMathDecls.h	/^#define TclBN_mp_div_2d /;"	d
TclBN_mp_div_3	generic/tclStubInit.c	/^#define TclBN_mp_div_3 /;"	d	file:
TclBN_mp_div_d	generic/tclStubInit.c	/^#define TclBN_mp_div_d /;"	d	file:
TclBN_mp_div_d	generic/tclTomMathDecls.h	/^#define TclBN_mp_div_d /;"	d
TclBN_mp_exch	generic/tclStubInit.c	/^#define TclBN_mp_exch /;"	d	file:
TclBN_mp_exch	generic/tclTomMathDecls.h	/^#define TclBN_mp_exch /;"	d
TclBN_mp_expt_n	generic/tclStubInit.c	/^TclBN_mp_expt_n($/;"	f	typeref:typename:mp_err MP_WUR
TclBN_mp_expt_n	generic/tclTomMathDecls.h	/^#define TclBN_mp_expt_n /;"	d
TclBN_mp_get_mag_u64	generic/tclStubInit.c	/^#define TclBN_mp_get_mag_u64 /;"	d	file:
TclBN_mp_get_mag_u64	generic/tclTomMathDecls.h	/^#define TclBN_mp_get_mag_u64 /;"	d
TclBN_mp_grow	generic/tclStubInit.c	/^#define TclBN_mp_grow /;"	d	file:
TclBN_mp_grow	generic/tclTomMathDecls.h	/^#define TclBN_mp_grow /;"	d
TclBN_mp_init	generic/tclStubInit.c	/^#define TclBN_mp_init /;"	d	file:
TclBN_mp_init	generic/tclTomMathDecls.h	/^#define TclBN_mp_init /;"	d
TclBN_mp_init_copy	generic/tclStubInit.c	/^#define TclBN_mp_init_copy /;"	d	file:
TclBN_mp_init_copy	generic/tclTomMathDecls.h	/^#define TclBN_mp_init_copy /;"	d
TclBN_mp_init_i64	generic/tclStubInit.c	/^#define TclBN_mp_init_i64 /;"	d	file:
TclBN_mp_init_i64	generic/tclTomMathDecls.h	/^#define TclBN_mp_init_i64 /;"	d
TclBN_mp_init_multi	generic/tclStubInit.c	/^#define TclBN_mp_init_multi /;"	d	file:
TclBN_mp_init_multi	generic/tclTomMathDecls.h	/^#define TclBN_mp_init_multi /;"	d
TclBN_mp_init_set	generic/tclStubInit.c	/^#define TclBN_mp_init_set /;"	d	file:
TclBN_mp_init_set	generic/tclTomMathDecls.h	/^#define TclBN_mp_init_set /;"	d
TclBN_mp_init_size	generic/tclStubInit.c	/^#define TclBN_mp_init_size /;"	d	file:
TclBN_mp_init_size	generic/tclTomMathDecls.h	/^#define TclBN_mp_init_size /;"	d
TclBN_mp_init_u64	generic/tclStubInit.c	/^#define TclBN_mp_init_u64 /;"	d	file:
TclBN_mp_init_u64	generic/tclTomMathDecls.h	/^#define TclBN_mp_init_u64 /;"	d
TclBN_mp_karatsuba_mul	generic/tclStubInit.c	/^#define TclBN_mp_karatsuba_mul /;"	d	file:
TclBN_mp_karatsuba_sqr	generic/tclStubInit.c	/^#define TclBN_mp_karatsuba_sqr /;"	d	file:
TclBN_mp_lshd	generic/tclStubInit.c	/^#define TclBN_mp_lshd /;"	d	file:
TclBN_mp_lshd	generic/tclTomMathDecls.h	/^#define TclBN_mp_lshd /;"	d
TclBN_mp_mod	generic/tclStubInit.c	/^#define TclBN_mp_mod /;"	d	file:
TclBN_mp_mod	generic/tclTomMathDecls.h	/^#define TclBN_mp_mod /;"	d
TclBN_mp_mod_2d	generic/tclStubInit.c	/^#define TclBN_mp_mod_2d /;"	d	file:
TclBN_mp_mod_2d	generic/tclTomMathDecls.h	/^#define TclBN_mp_mod_2d /;"	d
TclBN_mp_mul	generic/tclStubInit.c	/^#define TclBN_mp_mul /;"	d	file:
TclBN_mp_mul	generic/tclTomMathDecls.h	/^#define TclBN_mp_mul /;"	d
TclBN_mp_mul_2	generic/tclStubInit.c	/^#define TclBN_mp_mul_2 /;"	d	file:
TclBN_mp_mul_2	generic/tclTomMathDecls.h	/^#define TclBN_mp_mul_2 /;"	d
TclBN_mp_mul_2d	generic/tclStubInit.c	/^#define TclBN_mp_mul_2d /;"	d	file:
TclBN_mp_mul_2d	generic/tclTomMathDecls.h	/^#define TclBN_mp_mul_2d /;"	d
TclBN_mp_mul_d	generic/tclStubInit.c	/^#define TclBN_mp_mul_d /;"	d	file:
TclBN_mp_mul_d	generic/tclTomMathDecls.h	/^#define TclBN_mp_mul_d /;"	d
TclBN_mp_mul_digs	generic/tclStubInit.c	/^#define TclBN_mp_mul_digs /;"	d	file:
TclBN_mp_mul_digs_fast	generic/tclStubInit.c	/^#define TclBN_mp_mul_digs_fast /;"	d	file:
TclBN_mp_neg	generic/tclStubInit.c	/^#define TclBN_mp_neg /;"	d	file:
TclBN_mp_neg	generic/tclTomMathDecls.h	/^#define TclBN_mp_neg /;"	d
TclBN_mp_or	generic/tclStubInit.c	/^#define TclBN_mp_or /;"	d	file:
TclBN_mp_or	generic/tclTomMathDecls.h	/^#define TclBN_mp_or /;"	d
TclBN_mp_pack	generic/tclStubInit.c	/^#define TclBN_mp_pack /;"	d	file:
TclBN_mp_pack	generic/tclTomMathDecls.h	/^#define TclBN_mp_pack /;"	d
TclBN_mp_pack_count	generic/tclStubInit.c	/^#define TclBN_mp_pack_count /;"	d	file:
TclBN_mp_pack_count	generic/tclTomMathDecls.h	/^#define TclBN_mp_pack_count /;"	d
TclBN_mp_radix_size	generic/tclStubInit.c	/^#define TclBN_mp_radix_size /;"	d	file:
TclBN_mp_radix_size	generic/tclTomMathDecls.h	/^#define TclBN_mp_radix_size /;"	d
TclBN_mp_read_radix	generic/tclStubInit.c	/^#define TclBN_mp_read_radix /;"	d	file:
TclBN_mp_read_radix	generic/tclTomMathDecls.h	/^#define TclBN_mp_read_radix /;"	d
TclBN_mp_reverse	generic/tclStubInit.c	/^#define TclBN_mp_reverse /;"	d	file:
TclBN_mp_rshd	generic/tclStubInit.c	/^#define TclBN_mp_rshd /;"	d	file:
TclBN_mp_rshd	generic/tclTomMathDecls.h	/^#define TclBN_mp_rshd /;"	d
TclBN_mp_s_rmap	generic/tclTomMathDecls.h	/^MODULE_SCOPE const char *const TclBN_mp_s_rmap;$/;"	v	typeref:typename:MODULE_SCOPE const char * const
TclBN_mp_s_rmap_reverse	generic/tclTomMathDecls.h	/^MODULE_SCOPE const uint8_t TclBN_mp_s_rmap_reverse[];$/;"	v	typeref:typename:MODULE_SCOPE const uint8_t[]
TclBN_mp_s_rmap_reverse_sz	generic/tclTomMathDecls.h	/^MODULE_SCOPE const size_t TclBN_mp_s_rmap_reverse_sz;$/;"	v	typeref:typename:MODULE_SCOPE const size_t
TclBN_mp_set_i64	generic/tclStubInit.c	/^#define TclBN_mp_set_i64 /;"	d	file:
TclBN_mp_set_i64	generic/tclTomMathDecls.h	/^#define TclBN_mp_set_i64 /;"	d
TclBN_mp_set_u64	generic/tclStubInit.c	/^#define TclBN_mp_set_u64 /;"	d	file:
TclBN_mp_set_u64	generic/tclTomMathDecls.h	/^#define TclBN_mp_set_u64 /;"	d
TclBN_mp_shrink	generic/tclStubInit.c	/^#define TclBN_mp_shrink /;"	d	file:
TclBN_mp_shrink	generic/tclTomMathDecls.h	/^#define TclBN_mp_shrink /;"	d
TclBN_mp_signed_rsh	generic/tclStubInit.c	/^#define TclBN_mp_signed_rsh /;"	d	file:
TclBN_mp_signed_rsh	generic/tclTomMathDecls.h	/^#define TclBN_mp_signed_rsh /;"	d
TclBN_mp_sqr	generic/tclStubInit.c	/^#define TclBN_mp_sqr /;"	d	file:
TclBN_mp_sqr_fast	generic/tclStubInit.c	/^#define TclBN_mp_sqr_fast /;"	d	file:
TclBN_mp_sqrt	generic/tclStubInit.c	/^#define TclBN_mp_sqrt /;"	d	file:
TclBN_mp_sqrt	generic/tclTomMathDecls.h	/^#define TclBN_mp_sqrt /;"	d
TclBN_mp_sub	generic/tclStubInit.c	/^#define TclBN_mp_sub /;"	d	file:
TclBN_mp_sub	generic/tclTomMathDecls.h	/^#define TclBN_mp_sub /;"	d
TclBN_mp_sub_d	generic/tclStubInit.c	/^#define TclBN_mp_sub_d /;"	d	file:
TclBN_mp_sub_d	generic/tclTomMathDecls.h	/^#define TclBN_mp_sub_d /;"	d
TclBN_mp_to_radix	generic/tclStubInit.c	/^#define TclBN_mp_to_radix /;"	d	file:
TclBN_mp_to_radix	generic/tclTomMathDecls.h	/^#define TclBN_mp_to_radix /;"	d
TclBN_mp_to_ubin	generic/tclStubInit.c	/^#define TclBN_mp_to_ubin /;"	d	file:
TclBN_mp_to_ubin	generic/tclTomMathDecls.h	/^#define TclBN_mp_to_ubin /;"	d
TclBN_mp_toom_mul	generic/tclStubInit.c	/^#define TclBN_mp_toom_mul /;"	d	file:
TclBN_mp_toom_sqr	generic/tclStubInit.c	/^#define TclBN_mp_toom_sqr /;"	d	file:
TclBN_mp_ubin_size	generic/tclStubInit.c	/^#define TclBN_mp_ubin_size /;"	d	file:
TclBN_mp_ubin_size	generic/tclTomMathDecls.h	/^#define TclBN_mp_ubin_size /;"	d
TclBN_mp_unpack	generic/tclStubInit.c	/^#define TclBN_mp_unpack /;"	d	file:
TclBN_mp_unpack	generic/tclTomMathDecls.h	/^#define TclBN_mp_unpack /;"	d
TclBN_mp_xor	generic/tclStubInit.c	/^#define TclBN_mp_xor /;"	d	file:
TclBN_mp_xor	generic/tclTomMathDecls.h	/^#define TclBN_mp_xor /;"	d
TclBN_mp_zero	generic/tclStubInit.c	/^#define TclBN_mp_zero /;"	d	file:
TclBN_mp_zero	generic/tclTomMathDecls.h	/^#define TclBN_mp_zero /;"	d
TclBN_revision	generic/tclTomMathDecls.h	/^#define TclBN_revision /;"	d
TclBN_revision	generic/tclTomMathInterface.c	/^TclBN_revision(void)$/;"	f	typeref:typename:int
TclBN_s_mp_add	generic/tclStubInit.c	/^#define TclBN_s_mp_add /;"	d	file:
TclBN_s_mp_sqr	generic/tclStubInit.c	/^#define TclBN_s_mp_sqr /;"	d	file:
TclBN_s_mp_sub	generic/tclStubInit.c	/^#define TclBN_s_mp_sub /;"	d	file:
TclBignumToDouble	generic/tclStrToD.c	/^TclBignumToDouble($/;"	f	typeref:typename:double
TclBounceRefCount	generic/tcl.h	/^TclBounceRefCount($/;"	f	typeref:typename:void
TclByteArrayMatch	generic/tclUtil.c	/^TclByteArrayMatch($/;"	f	typeref:typename:int
TclCallVarTraces	generic/tclIntDecls.h	/^#define TclCallVarTraces /;"	d
TclCallVarTraces	generic/tclTrace.c	/^TclCallVarTraces($/;"	f	typeref:typename:int
TclCanceled	generic/tclInt.h	/^#define TclCanceled(/;"	d
TclCeil	generic/tclStrToD.c	/^TclCeil($/;"	f	typeref:typename:double
TclChanCaughtErrorBypass	generic/tclIORChan.c	/^TclChanCaughtErrorBypass($/;"	f	typeref:typename:int
TclChanCreateObjCmd	generic/tclIORChan.c	/^TclChanCreateObjCmd($/;"	f	typeref:typename:int
TclChanCreateObjCmd	generic/tclInt.h	/^MODULE_SCOPE Tcl_ObjCmdProc TclChanCreateObjCmd;$/;"	v	typeref:typename:MODULE_SCOPE Tcl_ObjCmdProc
TclChanIsBinary	generic/tclIO.c	/^TclChanIsBinary($/;"	f	typeref:typename:int
TclChanPopObjCmd	generic/tclIORTrans.c	/^TclChanPopObjCmd($/;"	f	typeref:typename:int
TclChanPopObjCmd	generic/tclInt.h	/^MODULE_SCOPE Tcl_ObjCmdProc TclChanPopObjCmd;$/;"	v	typeref:typename:MODULE_SCOPE Tcl_ObjCmdProc
TclChanPostEventObjCmd	generic/tclIORChan.c	/^TclChanPostEventObjCmd($/;"	f	typeref:typename:int
TclChanPostEventObjCmd	generic/tclInt.h	/^MODULE_SCOPE Tcl_ObjCmdProc TclChanPostEventObjCmd;$/;"	v	typeref:typename:MODULE_SCOPE Tcl_ObjCmdProc
TclChanPushObjCmd	generic/tclIORTrans.c	/^TclChanPushObjCmd($/;"	f	typeref:typename:int
TclChanPushObjCmd	generic/tclInt.h	/^MODULE_SCOPE Tcl_ObjCmdProc TclChanPushObjCmd;$/;"	v	typeref:typename:MODULE_SCOPE Tcl_ObjCmdProc
TclChannelEventScriptInvoker	generic/tclIO.c	/^TclChannelEventScriptInvoker($/;"	f	typeref:typename:void
TclChannelEventScriptInvoker	generic/tclIntDecls.h	/^#define TclChannelEventScriptInvoker /;"	d
TclChannelGetBlockingMode	generic/tclIO.c	/^TclChannelGetBlockingMode($/;"	f	typeref:typename:int
TclChannelNamesCmd	generic/tclIOCmd.c	/^TclChannelNamesCmd($/;"	f	typeref:typename:int
TclChannelNamesCmd	generic/tclInt.h	/^MODULE_SCOPE Tcl_ObjCmdProc TclChannelNamesCmd;$/;"	v	typeref:typename:MODULE_SCOPE Tcl_ObjCmdProc
TclChannelPreserve	generic/tclIO.c	/^TclChannelPreserve($/;"	f	typeref:typename:void
TclChannelRelease	generic/tclIO.c	/^TclChannelRelease($/;"	f	typeref:typename:void
TclChannelTransform	generic/tclIOGT.c	/^TclChannelTransform($/;"	f	typeref:typename:int
TclChannelTransform	generic/tclIntDecls.h	/^#define TclChannelTransform /;"	d
TclCheckArrayTraces	generic/tclTrace.c	/^TclCheckArrayTraces($/;"	f	typeref:typename:int
TclCheckEmptyString	generic/tclStringObj.c	/^TclCheckEmptyString($/;"	f	typeref:typename:int
TclCheckExecutionTraces	generic/tclIntDecls.h	/^#define TclCheckExecutionTraces /;"	d
TclCheckExecutionTraces	generic/tclTrace.c	/^TclCheckExecutionTraces($/;"	f	typeref:typename:int
TclCheckInterpTraces	generic/tclIntDecls.h	/^#define TclCheckInterpTraces /;"	d
TclCheckInterpTraces	generic/tclTrace.c	/^TclCheckInterpTraces($/;"	f	typeref:typename:int
TclCheckStackDepth	generic/tclCompile.h	/^TclCheckStackDepth($/;"	f	typeref:typename:void
TclChildObjCmd	generic/tclInt.h	/^MODULE_SCOPE Tcl_ObjCmdProc TclChildObjCmd;$/;"	v	typeref:typename:MODULE_SCOPE Tcl_ObjCmdProc
TclChildObjCmd	generic/tclInterp.c	/^TclChildObjCmd($/;"	f	typeref:typename:int
TclCleanupChildren	generic/tclIntDecls.h	/^#define TclCleanupChildren /;"	d
TclCleanupChildren	generic/tclPipe.c	/^TclCleanupChildren($/;"	f	typeref:typename:int
TclCleanupCommand	generic/tclBasic.c	/^TclCleanupCommand($/;"	f	typeref:typename:void
TclCleanupCommand	generic/tclIntDecls.h	/^#define TclCleanupCommand /;"	d
TclCleanupCommandMacro	generic/tclInt.h	/^#define TclCleanupCommandMacro(/;"	d
TclCleanupStackForBreakContinue	generic/tclCompile.c	/^TclCleanupStackForBreakContinue($/;"	f	typeref:typename:void
TclCleanupVar	generic/tclIntDecls.h	/^#define TclCleanupVar /;"	d
TclCleanupVar	generic/tclVar.c	/^TclCleanupVar($/;"	f	typeref:typename:void
TclClearRootEnsemble	generic/tclEnsemble.c	/^TclClearRootEnsemble($/;"	f	typeref:typename:int
TclClearRootEnsemble	generic/tclInt.h	/^MODULE_SCOPE Tcl_NRPostProc TclClearRootEnsemble;$/;"	v	typeref:typename:MODULE_SCOPE Tcl_NRPostProc
TclClearVarNamespaceVar	generic/tclInt.h	/^#define TclClearVarNamespaceVar(/;"	d
TclClearVarTraceActive	generic/tclInt.h	/^#define TclClearVarTraceActive(/;"	d
TclClearVarUndefined	generic/tclInt.h	/^#define TclClearVarUndefined(/;"	d
TclClockClassicInit	generic/tclClockClassic.c	/^TclClockClassicInit($/;"	f	typeref:typename:void
TclClockFreeScan	generic/tclDate.c	/^TclClockFreeScan($/;"	f	typeref:typename:int
TclClockInit	generic/tclClock.c	/^TclClockInit($/;"	f	typeref:typename:void
TclClockOldscanObjCmd	generic/tclDateClassic.c	/^TclClockOldscanObjCmd($/;"	f	typeref:typename:int
TclClockOldscanObjCmd	generic/tclInt.h	/^MODULE_SCOPE Tcl_ObjCmdProc TclClockOldscanObjCmd;$/;"	v	typeref:typename:MODULE_SCOPE Tcl_ObjCmdProc
TclClose	generic/tclIO.c	/^TclClose($/;"	f	typeref:typename:int
TclCommandWordLimitError	generic/tclUtil.c	/^TclCommandWordLimitError($/;"	f	typeref:typename:int
TclCompareObjKeys	generic/tclObj.c	/^TclCompareObjKeys($/;"	f	typeref:typename:int
TclCompareStringKeys	generic/tclHash.c	/^TclCompareStringKeys($/;"	f	typeref:typename:int
TclCompareTwoNumbers	generic/tclExecute.c	/^TclCompareTwoNumbers($/;"	f	typeref:typename:int
TclCompileAddOpCmd	generic/tclCompCmdsSZ.c	/^TclCompileAddOpCmd($/;"	f	typeref:typename:int
TclCompileAddOpCmd	generic/tclInt.h	/^MODULE_SCOPE CompileProc TclCompileAddOpCmd;$/;"	v	typeref:typename:MODULE_SCOPE CompileProc
TclCompileAndOpCmd	generic/tclCompCmdsSZ.c	/^TclCompileAndOpCmd($/;"	f	typeref:typename:int
TclCompileAndOpCmd	generic/tclInt.h	/^MODULE_SCOPE CompileProc TclCompileAndOpCmd;$/;"	v	typeref:typename:MODULE_SCOPE CompileProc
TclCompileAppendCmd	generic/tclCompCmds.c	/^TclCompileAppendCmd($/;"	f	typeref:typename:int
TclCompileAppendCmd	generic/tclInt.h	/^MODULE_SCOPE CompileProc TclCompileAppendCmd;$/;"	v	typeref:typename:MODULE_SCOPE CompileProc
TclCompileArrayExistsCmd	generic/tclCompCmds.c	/^TclCompileArrayExistsCmd($/;"	f	typeref:typename:int
TclCompileArrayExistsCmd	generic/tclInt.h	/^MODULE_SCOPE CompileProc TclCompileArrayExistsCmd;$/;"	v	typeref:typename:MODULE_SCOPE CompileProc
TclCompileArraySetCmd	generic/tclCompCmds.c	/^TclCompileArraySetCmd($/;"	f	typeref:typename:int
TclCompileArraySetCmd	generic/tclInt.h	/^MODULE_SCOPE CompileProc TclCompileArraySetCmd;$/;"	v	typeref:typename:MODULE_SCOPE CompileProc
TclCompileArrayUnsetCmd	generic/tclCompCmds.c	/^TclCompileArrayUnsetCmd($/;"	f	typeref:typename:int
TclCompileArrayUnsetCmd	generic/tclInt.h	/^MODULE_SCOPE CompileProc TclCompileArrayUnsetCmd;$/;"	v	typeref:typename:MODULE_SCOPE CompileProc
TclCompileAssembleCmd	generic/tclAssembly.c	/^TclCompileAssembleCmd($/;"	f	typeref:typename:int
TclCompileAssembleCmd	generic/tclInt.h	/^MODULE_SCOPE CompileProc TclCompileAssembleCmd;$/;"	v	typeref:typename:MODULE_SCOPE CompileProc
TclCompileBasic0ArgCmd	generic/tclEnsemble.c	/^TclCompileBasic0ArgCmd($/;"	f	typeref:typename:int
TclCompileBasic0ArgCmd	generic/tclInt.h	/^MODULE_SCOPE CompileProc TclCompileBasic0ArgCmd;$/;"	v	typeref:typename:MODULE_SCOPE CompileProc
TclCompileBasic0Or1ArgCmd	generic/tclEnsemble.c	/^TclCompileBasic0Or1ArgCmd($/;"	f	typeref:typename:int
TclCompileBasic0Or1ArgCmd	generic/tclInt.h	/^MODULE_SCOPE CompileProc TclCompileBasic0Or1ArgCmd;$/;"	v	typeref:typename:MODULE_SCOPE CompileProc
TclCompileBasic0To2ArgCmd	generic/tclEnsemble.c	/^TclCompileBasic0To2ArgCmd($/;"	f	typeref:typename:int
TclCompileBasic0To2ArgCmd	generic/tclInt.h	/^MODULE_SCOPE CompileProc TclCompileBasic0To2ArgCmd;$/;"	v	typeref:typename:MODULE_SCOPE CompileProc
TclCompileBasic1ArgCmd	generic/tclEnsemble.c	/^TclCompileBasic1ArgCmd($/;"	f	typeref:typename:int
TclCompileBasic1ArgCmd	generic/tclInt.h	/^MODULE_SCOPE CompileProc TclCompileBasic1ArgCmd;$/;"	v	typeref:typename:MODULE_SCOPE CompileProc
TclCompileBasic1Or2ArgCmd	generic/tclEnsemble.c	/^TclCompileBasic1Or2ArgCmd($/;"	f	typeref:typename:int
TclCompileBasic1Or2ArgCmd	generic/tclInt.h	/^MODULE_SCOPE CompileProc TclCompileBasic1Or2ArgCmd;$/;"	v	typeref:typename:MODULE_SCOPE CompileProc
TclCompileBasic1To3ArgCmd	generic/tclEnsemble.c	/^TclCompileBasic1To3ArgCmd($/;"	f	typeref:typename:int
TclCompileBasic1To3ArgCmd	generic/tclInt.h	/^MODULE_SCOPE CompileProc TclCompileBasic1To3ArgCmd;$/;"	v	typeref:typename:MODULE_SCOPE CompileProc
TclCompileBasic2ArgCmd	generic/tclEnsemble.c	/^TclCompileBasic2ArgCmd($/;"	f	typeref:typename:int
TclCompileBasic2ArgCmd	generic/tclInt.h	/^MODULE_SCOPE CompileProc TclCompileBasic2ArgCmd;$/;"	v	typeref:typename:MODULE_SCOPE CompileProc
TclCompileBasic2Or3ArgCmd	generic/tclEnsemble.c	/^TclCompileBasic2Or3ArgCmd($/;"	f	typeref:typename:int
TclCompileBasic2Or3ArgCmd	generic/tclInt.h	/^MODULE_SCOPE CompileProc TclCompileBasic2Or3ArgCmd;$/;"	v	typeref:typename:MODULE_SCOPE CompileProc
TclCompileBasic3ArgCmd	generic/tclEnsemble.c	/^TclCompileBasic3ArgCmd($/;"	f	typeref:typename:int
TclCompileBasic3ArgCmd	generic/tclInt.h	/^MODULE_SCOPE CompileProc TclCompileBasic3ArgCmd;$/;"	v	typeref:typename:MODULE_SCOPE CompileProc
TclCompileBasicMin0ArgCmd	generic/tclEnsemble.c	/^TclCompileBasicMin0ArgCmd($/;"	f	typeref:typename:int
TclCompileBasicMin0ArgCmd	generic/tclInt.h	/^MODULE_SCOPE CompileProc TclCompileBasicMin0ArgCmd;$/;"	v	typeref:typename:MODULE_SCOPE CompileProc
TclCompileBasicMin1ArgCmd	generic/tclEnsemble.c	/^TclCompileBasicMin1ArgCmd($/;"	f	typeref:typename:int
TclCompileBasicMin1ArgCmd	generic/tclInt.h	/^MODULE_SCOPE CompileProc TclCompileBasicMin1ArgCmd;$/;"	v	typeref:typename:MODULE_SCOPE CompileProc
TclCompileBasicMin2ArgCmd	generic/tclEnsemble.c	/^TclCompileBasicMin2ArgCmd($/;"	f	typeref:typename:int
TclCompileBasicMin2ArgCmd	generic/tclInt.h	/^MODULE_SCOPE CompileProc TclCompileBasicMin2ArgCmd;$/;"	v	typeref:typename:MODULE_SCOPE CompileProc
TclCompileBreakCmd	generic/tclCompCmds.c	/^TclCompileBreakCmd($/;"	f	typeref:typename:int
TclCompileBreakCmd	generic/tclInt.h	/^MODULE_SCOPE CompileProc TclCompileBreakCmd;$/;"	v	typeref:typename:MODULE_SCOPE CompileProc
TclCompileCatchCmd	generic/tclCompCmds.c	/^TclCompileCatchCmd($/;"	f	typeref:typename:int
TclCompileCatchCmd	generic/tclInt.h	/^MODULE_SCOPE CompileProc TclCompileCatchCmd;$/;"	v	typeref:typename:MODULE_SCOPE CompileProc
TclCompileClockClicksCmd	generic/tclCompCmds.c	/^TclCompileClockClicksCmd($/;"	f	typeref:typename:int
TclCompileClockClicksCmd	generic/tclInt.h	/^MODULE_SCOPE CompileProc TclCompileClockClicksCmd;$/;"	v	typeref:typename:MODULE_SCOPE CompileProc
TclCompileClockReadingCmd	generic/tclCompCmds.c	/^TclCompileClockReadingCmd($/;"	f	typeref:typename:int
TclCompileClockReadingCmd	generic/tclInt.h	/^MODULE_SCOPE CompileProc TclCompileClockReadingCmd;$/;"	v	typeref:typename:MODULE_SCOPE CompileProc
TclCompileCmdWord	generic/tclCompile.c	/^TclCompileCmdWord($/;"	f	typeref:typename:void
TclCompileConcatCmd	generic/tclCompCmds.c	/^TclCompileConcatCmd($/;"	f	typeref:typename:int
TclCompileConcatCmd	generic/tclInt.h	/^MODULE_SCOPE CompileProc TclCompileConcatCmd;$/;"	v	typeref:typename:MODULE_SCOPE CompileProc
TclCompileConstCmd	generic/tclCompCmds.c	/^TclCompileConstCmd($/;"	f	typeref:typename:int
TclCompileConstCmd	generic/tclInt.h	/^MODULE_SCOPE CompileProc TclCompileConstCmd;$/;"	v	typeref:typename:MODULE_SCOPE CompileProc
TclCompileContinueCmd	generic/tclCompCmds.c	/^TclCompileContinueCmd($/;"	f	typeref:typename:int
TclCompileContinueCmd	generic/tclInt.h	/^MODULE_SCOPE CompileProc TclCompileContinueCmd;$/;"	v	typeref:typename:MODULE_SCOPE CompileProc
TclCompileDictAppendCmd	generic/tclCompCmds.c	/^TclCompileDictAppendCmd($/;"	f	typeref:typename:int
TclCompileDictAppendCmd	generic/tclInt.h	/^MODULE_SCOPE CompileProc TclCompileDictAppendCmd;$/;"	v	typeref:typename:MODULE_SCOPE CompileProc
TclCompileDictCreateCmd	generic/tclCompCmds.c	/^TclCompileDictCreateCmd($/;"	f	typeref:typename:int
TclCompileDictCreateCmd	generic/tclInt.h	/^MODULE_SCOPE CompileProc TclCompileDictCreateCmd;$/;"	v	typeref:typename:MODULE_SCOPE CompileProc
TclCompileDictExistsCmd	generic/tclCompCmds.c	/^TclCompileDictExistsCmd($/;"	f	typeref:typename:int
TclCompileDictExistsCmd	generic/tclInt.h	/^MODULE_SCOPE CompileProc TclCompileDictExistsCmd;$/;"	v	typeref:typename:MODULE_SCOPE CompileProc
TclCompileDictForCmd	generic/tclCompCmds.c	/^TclCompileDictForCmd($/;"	f	typeref:typename:int
TclCompileDictForCmd	generic/tclInt.h	/^MODULE_SCOPE CompileProc TclCompileDictForCmd;$/;"	v	typeref:typename:MODULE_SCOPE CompileProc
TclCompileDictGetCmd	generic/tclCompCmds.c	/^TclCompileDictGetCmd($/;"	f	typeref:typename:int
TclCompileDictGetCmd	generic/tclInt.h	/^MODULE_SCOPE CompileProc TclCompileDictGetCmd;$/;"	v	typeref:typename:MODULE_SCOPE CompileProc
TclCompileDictGetWithDefaultCmd	generic/tclCompCmds.c	/^TclCompileDictGetWithDefaultCmd($/;"	f	typeref:typename:int
TclCompileDictGetWithDefaultCmd	generic/tclInt.h	/^MODULE_SCOPE CompileProc TclCompileDictGetWithDefaultCmd;$/;"	v	typeref:typename:MODULE_SCOPE CompileProc
TclCompileDictIncrCmd	generic/tclCompCmds.c	/^TclCompileDictIncrCmd($/;"	f	typeref:typename:int
TclCompileDictIncrCmd	generic/tclInt.h	/^MODULE_SCOPE CompileProc TclCompileDictIncrCmd;$/;"	v	typeref:typename:MODULE_SCOPE CompileProc
TclCompileDictLappendCmd	generic/tclCompCmds.c	/^TclCompileDictLappendCmd($/;"	f	typeref:typename:int
TclCompileDictLappendCmd	generic/tclInt.h	/^MODULE_SCOPE CompileProc TclCompileDictLappendCmd;$/;"	v	typeref:typename:MODULE_SCOPE CompileProc
TclCompileDictMapCmd	generic/tclCompCmds.c	/^TclCompileDictMapCmd($/;"	f	typeref:typename:int
TclCompileDictMapCmd	generic/tclInt.h	/^MODULE_SCOPE CompileProc TclCompileDictMapCmd;$/;"	v	typeref:typename:MODULE_SCOPE CompileProc
TclCompileDictMergeCmd	generic/tclCompCmds.c	/^TclCompileDictMergeCmd($/;"	f	typeref:typename:int
TclCompileDictMergeCmd	generic/tclInt.h	/^MODULE_SCOPE CompileProc TclCompileDictMergeCmd;$/;"	v	typeref:typename:MODULE_SCOPE CompileProc
TclCompileDictSetCmd	generic/tclCompCmds.c	/^TclCompileDictSetCmd($/;"	f	typeref:typename:int
TclCompileDictSetCmd	generic/tclInt.h	/^MODULE_SCOPE CompileProc TclCompileDictSetCmd;$/;"	v	typeref:typename:MODULE_SCOPE CompileProc
TclCompileDictUnsetCmd	generic/tclCompCmds.c	/^TclCompileDictUnsetCmd($/;"	f	typeref:typename:int
TclCompileDictUnsetCmd	generic/tclInt.h	/^MODULE_SCOPE CompileProc TclCompileDictUnsetCmd;$/;"	v	typeref:typename:MODULE_SCOPE CompileProc
TclCompileDictUpdateCmd	generic/tclCompCmds.c	/^TclCompileDictUpdateCmd($/;"	f	typeref:typename:int
TclCompileDictUpdateCmd	generic/tclInt.h	/^MODULE_SCOPE CompileProc TclCompileDictUpdateCmd;$/;"	v	typeref:typename:MODULE_SCOPE CompileProc
TclCompileDictWithCmd	generic/tclCompCmds.c	/^TclCompileDictWithCmd($/;"	f	typeref:typename:int
TclCompileDictWithCmd	generic/tclInt.h	/^MODULE_SCOPE CompileProc TclCompileDictWithCmd;$/;"	v	typeref:typename:MODULE_SCOPE CompileProc
TclCompileDivOpCmd	generic/tclCompCmdsSZ.c	/^TclCompileDivOpCmd($/;"	f	typeref:typename:int
TclCompileDivOpCmd	generic/tclInt.h	/^MODULE_SCOPE CompileProc TclCompileDivOpCmd;$/;"	v	typeref:typename:MODULE_SCOPE CompileProc
TclCompileEnsemble	generic/tclEnsemble.c	/^TclCompileEnsemble($/;"	f	typeref:typename:int
TclCompileEnsemble	generic/tclInt.h	/^MODULE_SCOPE CompileProc TclCompileEnsemble;$/;"	v	typeref:typename:MODULE_SCOPE CompileProc
TclCompileEqOpCmd	generic/tclCompCmdsSZ.c	/^TclCompileEqOpCmd($/;"	f	typeref:typename:int
TclCompileEqOpCmd	generic/tclInt.h	/^MODULE_SCOPE CompileProc TclCompileEqOpCmd;$/;"	v	typeref:typename:MODULE_SCOPE CompileProc
TclCompileErrorCmd	generic/tclCompCmds.c	/^TclCompileErrorCmd($/;"	f	typeref:typename:int
TclCompileErrorCmd	generic/tclInt.h	/^MODULE_SCOPE CompileProc TclCompileErrorCmd;$/;"	v	typeref:typename:MODULE_SCOPE CompileProc
TclCompileExpr	generic/tclCompExpr.c	/^TclCompileExpr($/;"	f	typeref:typename:void
TclCompileExprCmd	generic/tclCompCmds.c	/^TclCompileExprCmd($/;"	f	typeref:typename:int
TclCompileExprCmd	generic/tclInt.h	/^MODULE_SCOPE CompileProc TclCompileExprCmd;$/;"	v	typeref:typename:MODULE_SCOPE CompileProc
TclCompileExprWords	generic/tclCompile.c	/^TclCompileExprWords($/;"	f	typeref:typename:void
TclCompileForCmd	generic/tclCompCmds.c	/^TclCompileForCmd($/;"	f	typeref:typename:int
TclCompileForCmd	generic/tclInt.h	/^MODULE_SCOPE CompileProc TclCompileForCmd;$/;"	v	typeref:typename:MODULE_SCOPE CompileProc
TclCompileForeachCmd	generic/tclCompCmds.c	/^TclCompileForeachCmd($/;"	f	typeref:typename:int
TclCompileForeachCmd	generic/tclInt.h	/^MODULE_SCOPE CompileProc TclCompileForeachCmd;$/;"	v	typeref:typename:MODULE_SCOPE CompileProc
TclCompileFormatCmd	generic/tclCompCmds.c	/^TclCompileFormatCmd($/;"	f	typeref:typename:int
TclCompileFormatCmd	generic/tclInt.h	/^MODULE_SCOPE CompileProc TclCompileFormatCmd;$/;"	v	typeref:typename:MODULE_SCOPE CompileProc
TclCompileGeqOpCmd	generic/tclCompCmdsSZ.c	/^TclCompileGeqOpCmd($/;"	f	typeref:typename:int
TclCompileGeqOpCmd	generic/tclInt.h	/^MODULE_SCOPE CompileProc TclCompileGeqOpCmd;$/;"	v	typeref:typename:MODULE_SCOPE CompileProc
TclCompileGlobalCmd	generic/tclCompCmdsGR.c	/^TclCompileGlobalCmd($/;"	f	typeref:typename:int
TclCompileGlobalCmd	generic/tclInt.h	/^MODULE_SCOPE CompileProc TclCompileGlobalCmd;$/;"	v	typeref:typename:MODULE_SCOPE CompileProc
TclCompileGreaterOpCmd	generic/tclCompCmdsSZ.c	/^TclCompileGreaterOpCmd($/;"	f	typeref:typename:int
TclCompileGreaterOpCmd	generic/tclInt.h	/^MODULE_SCOPE CompileProc TclCompileGreaterOpCmd;$/;"	v	typeref:typename:MODULE_SCOPE CompileProc
TclCompileIfCmd	generic/tclCompCmdsGR.c	/^TclCompileIfCmd($/;"	f	typeref:typename:int
TclCompileIfCmd	generic/tclInt.h	/^MODULE_SCOPE CompileProc TclCompileIfCmd;$/;"	v	typeref:typename:MODULE_SCOPE CompileProc
TclCompileInOpCmd	generic/tclCompCmdsSZ.c	/^TclCompileInOpCmd($/;"	f	typeref:typename:int
TclCompileInOpCmd	generic/tclInt.h	/^MODULE_SCOPE CompileProc TclCompileInOpCmd;$/;"	v	typeref:typename:MODULE_SCOPE CompileProc
TclCompileIncrCmd	generic/tclCompCmdsGR.c	/^TclCompileIncrCmd($/;"	f	typeref:typename:int
TclCompileIncrCmd	generic/tclInt.h	/^MODULE_SCOPE CompileProc TclCompileIncrCmd;$/;"	v	typeref:typename:MODULE_SCOPE CompileProc
TclCompileInfoCommandsCmd	generic/tclCompCmdsGR.c	/^TclCompileInfoCommandsCmd($/;"	f	typeref:typename:int
TclCompileInfoCommandsCmd	generic/tclInt.h	/^MODULE_SCOPE CompileProc TclCompileInfoCommandsCmd;$/;"	v	typeref:typename:MODULE_SCOPE CompileProc
TclCompileInfoCoroutineCmd	generic/tclCompCmdsGR.c	/^TclCompileInfoCoroutineCmd($/;"	f	typeref:typename:int
TclCompileInfoCoroutineCmd	generic/tclInt.h	/^MODULE_SCOPE CompileProc TclCompileInfoCoroutineCmd;$/;"	v	typeref:typename:MODULE_SCOPE CompileProc
TclCompileInfoExistsCmd	generic/tclCompCmdsGR.c	/^TclCompileInfoExistsCmd($/;"	f	typeref:typename:int
TclCompileInfoExistsCmd	generic/tclInt.h	/^MODULE_SCOPE CompileProc TclCompileInfoExistsCmd;$/;"	v	typeref:typename:MODULE_SCOPE CompileProc
TclCompileInfoLevelCmd	generic/tclCompCmdsGR.c	/^TclCompileInfoLevelCmd($/;"	f	typeref:typename:int
TclCompileInfoLevelCmd	generic/tclInt.h	/^MODULE_SCOPE CompileProc TclCompileInfoLevelCmd;$/;"	v	typeref:typename:MODULE_SCOPE CompileProc
TclCompileInfoObjectClassCmd	generic/tclCompCmdsGR.c	/^TclCompileInfoObjectClassCmd($/;"	f	typeref:typename:int
TclCompileInfoObjectClassCmd	generic/tclInt.h	/^MODULE_SCOPE CompileProc TclCompileInfoObjectClassCmd;$/;"	v	typeref:typename:MODULE_SCOPE CompileProc
TclCompileInfoObjectIsACmd	generic/tclCompCmdsGR.c	/^TclCompileInfoObjectIsACmd($/;"	f	typeref:typename:int
TclCompileInfoObjectIsACmd	generic/tclInt.h	/^MODULE_SCOPE CompileProc TclCompileInfoObjectIsACmd;$/;"	v	typeref:typename:MODULE_SCOPE CompileProc
TclCompileInfoObjectNamespaceCmd	generic/tclCompCmdsGR.c	/^TclCompileInfoObjectNamespaceCmd($/;"	f	typeref:typename:int
TclCompileInfoObjectNamespaceCmd	generic/tclInt.h	/^MODULE_SCOPE CompileProc TclCompileInfoObjectNamespaceCmd;$/;"	v	typeref:typename:MODULE_SCOPE CompileProc
TclCompileInvertOpCmd	generic/tclCompCmdsSZ.c	/^TclCompileInvertOpCmd($/;"	f	typeref:typename:int
TclCompileInvertOpCmd	generic/tclInt.h	/^MODULE_SCOPE CompileProc TclCompileInvertOpCmd;$/;"	v	typeref:typename:MODULE_SCOPE CompileProc
TclCompileInvocation	generic/tclCompile.c	/^TclCompileInvocation($/;"	f	typeref:typename:void
TclCompileLappendCmd	generic/tclCompCmdsGR.c	/^TclCompileLappendCmd($/;"	f	typeref:typename:int
TclCompileLappendCmd	generic/tclInt.h	/^MODULE_SCOPE CompileProc TclCompileLappendCmd;$/;"	v	typeref:typename:MODULE_SCOPE CompileProc
TclCompileLassignCmd	generic/tclCompCmdsGR.c	/^TclCompileLassignCmd($/;"	f	typeref:typename:int
TclCompileLassignCmd	generic/tclInt.h	/^MODULE_SCOPE CompileProc TclCompileLassignCmd;$/;"	v	typeref:typename:MODULE_SCOPE CompileProc
TclCompileLeqOpCmd	generic/tclCompCmdsSZ.c	/^TclCompileLeqOpCmd($/;"	f	typeref:typename:int
TclCompileLeqOpCmd	generic/tclInt.h	/^MODULE_SCOPE CompileProc TclCompileLeqOpCmd;$/;"	v	typeref:typename:MODULE_SCOPE CompileProc
TclCompileLessOpCmd	generic/tclCompCmdsSZ.c	/^TclCompileLessOpCmd($/;"	f	typeref:typename:int
TclCompileLessOpCmd	generic/tclInt.h	/^MODULE_SCOPE CompileProc TclCompileLessOpCmd;$/;"	v	typeref:typename:MODULE_SCOPE CompileProc
TclCompileLindexCmd	generic/tclCompCmdsGR.c	/^TclCompileLindexCmd($/;"	f	typeref:typename:int
TclCompileLindexCmd	generic/tclInt.h	/^MODULE_SCOPE CompileProc TclCompileLindexCmd;$/;"	v	typeref:typename:MODULE_SCOPE CompileProc
TclCompileLinsertCmd	generic/tclCompCmdsGR.c	/^TclCompileLinsertCmd($/;"	f	typeref:typename:int
TclCompileLinsertCmd	generic/tclInt.h	/^MODULE_SCOPE CompileProc TclCompileLinsertCmd;$/;"	v	typeref:typename:MODULE_SCOPE CompileProc
TclCompileListCmd	generic/tclCompCmdsGR.c	/^TclCompileListCmd($/;"	f	typeref:typename:int
TclCompileListCmd	generic/tclInt.h	/^MODULE_SCOPE CompileProc TclCompileListCmd;$/;"	v	typeref:typename:MODULE_SCOPE CompileProc
TclCompileLlengthCmd	generic/tclCompCmdsGR.c	/^TclCompileLlengthCmd($/;"	f	typeref:typename:int
TclCompileLlengthCmd	generic/tclInt.h	/^MODULE_SCOPE CompileProc TclCompileLlengthCmd;$/;"	v	typeref:typename:MODULE_SCOPE CompileProc
TclCompileLmapCmd	generic/tclCompCmds.c	/^TclCompileLmapCmd($/;"	f	typeref:typename:int
TclCompileLmapCmd	generic/tclInt.h	/^MODULE_SCOPE CompileProc TclCompileLmapCmd;$/;"	v	typeref:typename:MODULE_SCOPE CompileProc
TclCompileLrangeCmd	generic/tclCompCmdsGR.c	/^TclCompileLrangeCmd($/;"	f	typeref:typename:int
TclCompileLrangeCmd	generic/tclInt.h	/^MODULE_SCOPE CompileProc TclCompileLrangeCmd;$/;"	v	typeref:typename:MODULE_SCOPE CompileProc
TclCompileLreplaceCmd	generic/tclCompCmdsGR.c	/^TclCompileLreplaceCmd($/;"	f	typeref:typename:int
TclCompileLreplaceCmd	generic/tclInt.h	/^MODULE_SCOPE CompileProc TclCompileLreplaceCmd;$/;"	v	typeref:typename:MODULE_SCOPE CompileProc
TclCompileLsetCmd	generic/tclCompCmdsGR.c	/^TclCompileLsetCmd($/;"	f	typeref:typename:int
TclCompileLsetCmd	generic/tclInt.h	/^MODULE_SCOPE CompileProc TclCompileLsetCmd;$/;"	v	typeref:typename:MODULE_SCOPE CompileProc
TclCompileLshiftOpCmd	generic/tclCompCmdsSZ.c	/^TclCompileLshiftOpCmd($/;"	f	typeref:typename:int
TclCompileLshiftOpCmd	generic/tclInt.h	/^MODULE_SCOPE CompileProc TclCompileLshiftOpCmd;$/;"	v	typeref:typename:MODULE_SCOPE CompileProc
TclCompileMinusOpCmd	generic/tclCompCmdsSZ.c	/^TclCompileMinusOpCmd($/;"	f	typeref:typename:int
TclCompileMinusOpCmd	generic/tclInt.h	/^MODULE_SCOPE CompileProc TclCompileMinusOpCmd;$/;"	v	typeref:typename:MODULE_SCOPE CompileProc
TclCompileModOpCmd	generic/tclCompCmdsSZ.c	/^TclCompileModOpCmd($/;"	f	typeref:typename:int
TclCompileModOpCmd	generic/tclInt.h	/^MODULE_SCOPE CompileProc TclCompileModOpCmd;$/;"	v	typeref:typename:MODULE_SCOPE CompileProc
TclCompileMulOpCmd	generic/tclCompCmdsSZ.c	/^TclCompileMulOpCmd($/;"	f	typeref:typename:int
TclCompileMulOpCmd	generic/tclInt.h	/^MODULE_SCOPE CompileProc TclCompileMulOpCmd;$/;"	v	typeref:typename:MODULE_SCOPE CompileProc
TclCompileNamespaceCodeCmd	generic/tclCompCmdsGR.c	/^TclCompileNamespaceCodeCmd($/;"	f	typeref:typename:int
TclCompileNamespaceCodeCmd	generic/tclInt.h	/^MODULE_SCOPE CompileProc TclCompileNamespaceCodeCmd;$/;"	v	typeref:typename:MODULE_SCOPE CompileProc
TclCompileNamespaceCurrentCmd	generic/tclCompCmdsGR.c	/^TclCompileNamespaceCurrentCmd($/;"	f	typeref:typename:int
TclCompileNamespaceCurrentCmd	generic/tclInt.h	/^MODULE_SCOPE CompileProc TclCompileNamespaceCurrentCmd;$/;"	v	typeref:typename:MODULE_SCOPE CompileProc
TclCompileNamespaceOriginCmd	generic/tclCompCmdsGR.c	/^TclCompileNamespaceOriginCmd($/;"	f	typeref:typename:int
TclCompileNamespaceOriginCmd	generic/tclInt.h	/^MODULE_SCOPE CompileProc TclCompileNamespaceOriginCmd;$/;"	v	typeref:typename:MODULE_SCOPE CompileProc
TclCompileNamespaceQualifiersCmd	generic/tclCompCmdsGR.c	/^TclCompileNamespaceQualifiersCmd($/;"	f	typeref:typename:int
TclCompileNamespaceQualifiersCmd	generic/tclInt.h	/^MODULE_SCOPE CompileProc TclCompileNamespaceQualifiersCmd;$/;"	v	typeref:typename:MODULE_SCOPE CompileProc
TclCompileNamespaceTailCmd	generic/tclCompCmdsGR.c	/^TclCompileNamespaceTailCmd($/;"	f	typeref:typename:int
TclCompileNamespaceTailCmd	generic/tclInt.h	/^MODULE_SCOPE CompileProc TclCompileNamespaceTailCmd;$/;"	v	typeref:typename:MODULE_SCOPE CompileProc
TclCompileNamespaceUpvarCmd	generic/tclCompCmdsGR.c	/^TclCompileNamespaceUpvarCmd($/;"	f	typeref:typename:int
TclCompileNamespaceUpvarCmd	generic/tclInt.h	/^MODULE_SCOPE CompileProc TclCompileNamespaceUpvarCmd;$/;"	v	typeref:typename:MODULE_SCOPE CompileProc
TclCompileNamespaceWhichCmd	generic/tclCompCmdsGR.c	/^TclCompileNamespaceWhichCmd($/;"	f	typeref:typename:int
TclCompileNamespaceWhichCmd	generic/tclInt.h	/^MODULE_SCOPE CompileProc TclCompileNamespaceWhichCmd;$/;"	v	typeref:typename:MODULE_SCOPE CompileProc
TclCompileNeqOpCmd	generic/tclCompCmdsSZ.c	/^TclCompileNeqOpCmd($/;"	f	typeref:typename:int
TclCompileNeqOpCmd	generic/tclInt.h	/^MODULE_SCOPE CompileProc TclCompileNeqOpCmd;$/;"	v	typeref:typename:MODULE_SCOPE CompileProc
TclCompileNiOpCmd	generic/tclCompCmdsSZ.c	/^TclCompileNiOpCmd($/;"	f	typeref:typename:int
TclCompileNiOpCmd	generic/tclInt.h	/^MODULE_SCOPE CompileProc TclCompileNiOpCmd;$/;"	v	typeref:typename:MODULE_SCOPE CompileProc
TclCompileNoOp	generic/tclCompile.c	/^TclCompileNoOp($/;"	f	typeref:typename:int
TclCompileNoOp	generic/tclInt.h	/^MODULE_SCOPE CompileProc TclCompileNoOp;$/;"	v	typeref:typename:MODULE_SCOPE CompileProc
TclCompileNotOpCmd	generic/tclCompCmdsSZ.c	/^TclCompileNotOpCmd($/;"	f	typeref:typename:int
TclCompileNotOpCmd	generic/tclInt.h	/^MODULE_SCOPE CompileProc TclCompileNotOpCmd;$/;"	v	typeref:typename:MODULE_SCOPE CompileProc
TclCompileObj	generic/tclExecute.c	/^TclCompileObj($/;"	f	typeref:typename:ByteCode *
TclCompileObjectNextCmd	generic/tclCompCmdsGR.c	/^TclCompileObjectNextCmd($/;"	f	typeref:typename:int
TclCompileObjectNextCmd	generic/tclInt.h	/^MODULE_SCOPE CompileProc TclCompileObjectNextCmd;$/;"	v	typeref:typename:MODULE_SCOPE CompileProc
TclCompileObjectNextToCmd	generic/tclCompCmdsGR.c	/^TclCompileObjectNextToCmd($/;"	f	typeref:typename:int
TclCompileObjectNextToCmd	generic/tclInt.h	/^MODULE_SCOPE CompileProc TclCompileObjectNextToCmd;$/;"	v	typeref:typename:MODULE_SCOPE CompileProc
TclCompileObjectSelfCmd	generic/tclCompCmdsGR.c	/^TclCompileObjectSelfCmd($/;"	f	typeref:typename:int
TclCompileObjectSelfCmd	generic/tclInt.h	/^MODULE_SCOPE CompileProc TclCompileObjectSelfCmd;$/;"	v	typeref:typename:MODULE_SCOPE CompileProc
TclCompileOrOpCmd	generic/tclCompCmdsSZ.c	/^TclCompileOrOpCmd($/;"	f	typeref:typename:int
TclCompileOrOpCmd	generic/tclInt.h	/^MODULE_SCOPE CompileProc TclCompileOrOpCmd;$/;"	v	typeref:typename:MODULE_SCOPE CompileProc
TclCompilePowOpCmd	generic/tclCompCmdsSZ.c	/^TclCompilePowOpCmd($/;"	f	typeref:typename:int
TclCompilePowOpCmd	generic/tclInt.h	/^MODULE_SCOPE CompileProc TclCompilePowOpCmd;$/;"	v	typeref:typename:MODULE_SCOPE CompileProc
TclCompileRegexpCmd	generic/tclCompCmdsGR.c	/^TclCompileRegexpCmd($/;"	f	typeref:typename:int
TclCompileRegexpCmd	generic/tclInt.h	/^MODULE_SCOPE CompileProc TclCompileRegexpCmd;$/;"	v	typeref:typename:MODULE_SCOPE CompileProc
TclCompileRegsubCmd	generic/tclCompCmdsGR.c	/^TclCompileRegsubCmd($/;"	f	typeref:typename:int
TclCompileRegsubCmd	generic/tclInt.h	/^MODULE_SCOPE CompileProc TclCompileRegsubCmd;$/;"	v	typeref:typename:MODULE_SCOPE CompileProc
TclCompileReturnCmd	generic/tclCompCmdsGR.c	/^TclCompileReturnCmd($/;"	f	typeref:typename:int
TclCompileReturnCmd	generic/tclInt.h	/^MODULE_SCOPE CompileProc TclCompileReturnCmd;$/;"	v	typeref:typename:MODULE_SCOPE CompileProc
TclCompileRshiftOpCmd	generic/tclCompCmdsSZ.c	/^TclCompileRshiftOpCmd($/;"	f	typeref:typename:int
TclCompileRshiftOpCmd	generic/tclInt.h	/^MODULE_SCOPE CompileProc TclCompileRshiftOpCmd;$/;"	v	typeref:typename:MODULE_SCOPE CompileProc
TclCompileScript	generic/tclCompile.c	/^TclCompileScript($/;"	f	typeref:typename:void
TclCompileSetCmd	generic/tclCompCmdsSZ.c	/^TclCompileSetCmd($/;"	f	typeref:typename:int
TclCompileSetCmd	generic/tclInt.h	/^MODULE_SCOPE CompileProc TclCompileSetCmd;$/;"	v	typeref:typename:MODULE_SCOPE CompileProc
TclCompileStrGeOpCmd	generic/tclCompCmdsSZ.c	/^TclCompileStrGeOpCmd($/;"	f	typeref:typename:int
TclCompileStrGeOpCmd	generic/tclInt.h	/^MODULE_SCOPE CompileProc TclCompileStrGeOpCmd;$/;"	v	typeref:typename:MODULE_SCOPE CompileProc
TclCompileStrGtOpCmd	generic/tclCompCmdsSZ.c	/^TclCompileStrGtOpCmd($/;"	f	typeref:typename:int
TclCompileStrGtOpCmd	generic/tclInt.h	/^MODULE_SCOPE CompileProc TclCompileStrGtOpCmd;$/;"	v	typeref:typename:MODULE_SCOPE CompileProc
TclCompileStrLeOpCmd	generic/tclCompCmdsSZ.c	/^TclCompileStrLeOpCmd($/;"	f	typeref:typename:int
TclCompileStrLeOpCmd	generic/tclInt.h	/^MODULE_SCOPE CompileProc TclCompileStrLeOpCmd;$/;"	v	typeref:typename:MODULE_SCOPE CompileProc
TclCompileStrLtOpCmd	generic/tclCompCmdsSZ.c	/^TclCompileStrLtOpCmd($/;"	f	typeref:typename:int
TclCompileStrLtOpCmd	generic/tclInt.h	/^MODULE_SCOPE CompileProc TclCompileStrLtOpCmd;$/;"	v	typeref:typename:MODULE_SCOPE CompileProc
TclCompileStreqOpCmd	generic/tclCompCmdsSZ.c	/^TclCompileStreqOpCmd($/;"	f	typeref:typename:int
TclCompileStreqOpCmd	generic/tclInt.h	/^MODULE_SCOPE CompileProc TclCompileStreqOpCmd;$/;"	v	typeref:typename:MODULE_SCOPE CompileProc
TclCompileStringCatCmd	generic/tclCompCmdsSZ.c	/^TclCompileStringCatCmd($/;"	f	typeref:typename:int
TclCompileStringCatCmd	generic/tclInt.h	/^MODULE_SCOPE CompileProc TclCompileStringCatCmd;$/;"	v	typeref:typename:MODULE_SCOPE CompileProc
TclCompileStringCmpCmd	generic/tclCompCmdsSZ.c	/^TclCompileStringCmpCmd($/;"	f	typeref:typename:int
TclCompileStringCmpCmd	generic/tclInt.h	/^MODULE_SCOPE CompileProc TclCompileStringCmpCmd;$/;"	v	typeref:typename:MODULE_SCOPE CompileProc
TclCompileStringEqualCmd	generic/tclCompCmdsSZ.c	/^TclCompileStringEqualCmd($/;"	f	typeref:typename:int
TclCompileStringEqualCmd	generic/tclInt.h	/^MODULE_SCOPE CompileProc TclCompileStringEqualCmd;$/;"	v	typeref:typename:MODULE_SCOPE CompileProc
TclCompileStringFirstCmd	generic/tclCompCmdsSZ.c	/^TclCompileStringFirstCmd($/;"	f	typeref:typename:int
TclCompileStringFirstCmd	generic/tclInt.h	/^MODULE_SCOPE CompileProc TclCompileStringFirstCmd;$/;"	v	typeref:typename:MODULE_SCOPE CompileProc
TclCompileStringIndexCmd	generic/tclCompCmdsSZ.c	/^TclCompileStringIndexCmd($/;"	f	typeref:typename:int
TclCompileStringIndexCmd	generic/tclInt.h	/^MODULE_SCOPE CompileProc TclCompileStringIndexCmd;$/;"	v	typeref:typename:MODULE_SCOPE CompileProc
TclCompileStringInsertCmd	generic/tclCompCmdsSZ.c	/^TclCompileStringInsertCmd($/;"	f	typeref:typename:int
TclCompileStringInsertCmd	generic/tclInt.h	/^MODULE_SCOPE CompileProc TclCompileStringInsertCmd;$/;"	v	typeref:typename:MODULE_SCOPE CompileProc
TclCompileStringIsCmd	generic/tclCompCmdsSZ.c	/^TclCompileStringIsCmd($/;"	f	typeref:typename:int
TclCompileStringIsCmd	generic/tclInt.h	/^MODULE_SCOPE CompileProc TclCompileStringIsCmd;$/;"	v	typeref:typename:MODULE_SCOPE CompileProc
TclCompileStringLastCmd	generic/tclCompCmdsSZ.c	/^TclCompileStringLastCmd($/;"	f	typeref:typename:int
TclCompileStringLastCmd	generic/tclInt.h	/^MODULE_SCOPE CompileProc TclCompileStringLastCmd;$/;"	v	typeref:typename:MODULE_SCOPE CompileProc
TclCompileStringLenCmd	generic/tclCompCmdsSZ.c	/^TclCompileStringLenCmd($/;"	f	typeref:typename:int
TclCompileStringLenCmd	generic/tclInt.h	/^MODULE_SCOPE CompileProc TclCompileStringLenCmd;$/;"	v	typeref:typename:MODULE_SCOPE CompileProc
TclCompileStringMapCmd	generic/tclCompCmdsSZ.c	/^TclCompileStringMapCmd($/;"	f	typeref:typename:int
TclCompileStringMapCmd	generic/tclInt.h	/^MODULE_SCOPE CompileProc TclCompileStringMapCmd;$/;"	v	typeref:typename:MODULE_SCOPE CompileProc
TclCompileStringMatchCmd	generic/tclCompCmdsSZ.c	/^TclCompileStringMatchCmd($/;"	f	typeref:typename:int
TclCompileStringMatchCmd	generic/tclInt.h	/^MODULE_SCOPE CompileProc TclCompileStringMatchCmd;$/;"	v	typeref:typename:MODULE_SCOPE CompileProc
TclCompileStringRangeCmd	generic/tclCompCmdsSZ.c	/^TclCompileStringRangeCmd($/;"	f	typeref:typename:int
TclCompileStringRangeCmd	generic/tclInt.h	/^MODULE_SCOPE CompileProc TclCompileStringRangeCmd;$/;"	v	typeref:typename:MODULE_SCOPE CompileProc
TclCompileStringReplaceCmd	generic/tclCompCmdsSZ.c	/^TclCompileStringReplaceCmd($/;"	f	typeref:typename:int
TclCompileStringReplaceCmd	generic/tclInt.h	/^MODULE_SCOPE CompileProc TclCompileStringReplaceCmd;$/;"	v	typeref:typename:MODULE_SCOPE CompileProc
TclCompileStringToLowerCmd	generic/tclCompCmdsSZ.c	/^TclCompileStringToLowerCmd($/;"	f	typeref:typename:int
TclCompileStringToLowerCmd	generic/tclInt.h	/^MODULE_SCOPE CompileProc TclCompileStringToLowerCmd;$/;"	v	typeref:typename:MODULE_SCOPE CompileProc
TclCompileStringToTitleCmd	generic/tclCompCmdsSZ.c	/^TclCompileStringToTitleCmd($/;"	f	typeref:typename:int
TclCompileStringToTitleCmd	generic/tclInt.h	/^MODULE_SCOPE CompileProc TclCompileStringToTitleCmd;$/;"	v	typeref:typename:MODULE_SCOPE CompileProc
TclCompileStringToUpperCmd	generic/tclCompCmdsSZ.c	/^TclCompileStringToUpperCmd($/;"	f	typeref:typename:int
TclCompileStringToUpperCmd	generic/tclInt.h	/^MODULE_SCOPE CompileProc TclCompileStringToUpperCmd;$/;"	v	typeref:typename:MODULE_SCOPE CompileProc
TclCompileStringTrimCmd	generic/tclCompCmdsSZ.c	/^TclCompileStringTrimCmd($/;"	f	typeref:typename:int
TclCompileStringTrimCmd	generic/tclInt.h	/^MODULE_SCOPE CompileProc TclCompileStringTrimCmd;$/;"	v	typeref:typename:MODULE_SCOPE CompileProc
TclCompileStringTrimLCmd	generic/tclCompCmdsSZ.c	/^TclCompileStringTrimLCmd($/;"	f	typeref:typename:int
TclCompileStringTrimLCmd	generic/tclInt.h	/^MODULE_SCOPE CompileProc TclCompileStringTrimLCmd;$/;"	v	typeref:typename:MODULE_SCOPE CompileProc
TclCompileStringTrimRCmd	generic/tclCompCmdsSZ.c	/^TclCompileStringTrimRCmd($/;"	f	typeref:typename:int
TclCompileStringTrimRCmd	generic/tclInt.h	/^MODULE_SCOPE CompileProc TclCompileStringTrimRCmd;$/;"	v	typeref:typename:MODULE_SCOPE CompileProc
TclCompileStrneqOpCmd	generic/tclCompCmdsSZ.c	/^TclCompileStrneqOpCmd($/;"	f	typeref:typename:int
TclCompileStrneqOpCmd	generic/tclInt.h	/^MODULE_SCOPE CompileProc TclCompileStrneqOpCmd;$/;"	v	typeref:typename:MODULE_SCOPE CompileProc
TclCompileSubstCmd	generic/tclCompCmdsSZ.c	/^TclCompileSubstCmd($/;"	f	typeref:typename:int
TclCompileSubstCmd	generic/tclInt.h	/^MODULE_SCOPE CompileProc TclCompileSubstCmd;$/;"	v	typeref:typename:MODULE_SCOPE CompileProc
TclCompileSwitchCmd	generic/tclCompCmdsSZ.c	/^TclCompileSwitchCmd($/;"	f	typeref:typename:int
TclCompileSwitchCmd	generic/tclInt.h	/^MODULE_SCOPE CompileProc TclCompileSwitchCmd;$/;"	v	typeref:typename:MODULE_SCOPE CompileProc
TclCompileSyntaxError	generic/tclCompCmdsGR.c	/^TclCompileSyntaxError($/;"	f	typeref:typename:void
TclCompileTailcallCmd	generic/tclCompCmdsSZ.c	/^TclCompileTailcallCmd($/;"	f	typeref:typename:int
TclCompileTailcallCmd	generic/tclInt.h	/^MODULE_SCOPE CompileProc TclCompileTailcallCmd;$/;"	v	typeref:typename:MODULE_SCOPE CompileProc
TclCompileThrowCmd	generic/tclCompCmdsSZ.c	/^TclCompileThrowCmd($/;"	f	typeref:typename:int
TclCompileThrowCmd	generic/tclInt.h	/^MODULE_SCOPE CompileProc TclCompileThrowCmd;$/;"	v	typeref:typename:MODULE_SCOPE CompileProc
TclCompileTokens	generic/tclCompile.c	/^TclCompileTokens($/;"	f	typeref:typename:void
TclCompileTryCmd	generic/tclCompCmdsSZ.c	/^TclCompileTryCmd($/;"	f	typeref:typename:int
TclCompileTryCmd	generic/tclInt.h	/^MODULE_SCOPE CompileProc TclCompileTryCmd;$/;"	v	typeref:typename:MODULE_SCOPE CompileProc
TclCompileUnsetCmd	generic/tclCompCmdsSZ.c	/^TclCompileUnsetCmd($/;"	f	typeref:typename:int
TclCompileUnsetCmd	generic/tclInt.h	/^MODULE_SCOPE CompileProc TclCompileUnsetCmd;$/;"	v	typeref:typename:MODULE_SCOPE CompileProc
TclCompileUpvarCmd	generic/tclCompCmdsGR.c	/^TclCompileUpvarCmd($/;"	f	typeref:typename:int
TclCompileUpvarCmd	generic/tclInt.h	/^MODULE_SCOPE CompileProc TclCompileUpvarCmd;$/;"	v	typeref:typename:MODULE_SCOPE CompileProc
TclCompileVarSubst	generic/tclCompile.c	/^TclCompileVarSubst($/;"	f	typeref:typename:void
TclCompileVariableCmd	generic/tclCompCmdsGR.c	/^TclCompileVariableCmd($/;"	f	typeref:typename:int
TclCompileVariableCmd	generic/tclInt.h	/^MODULE_SCOPE CompileProc TclCompileVariableCmd;$/;"	v	typeref:typename:MODULE_SCOPE CompileProc
TclCompileWhileCmd	generic/tclCompCmdsSZ.c	/^TclCompileWhileCmd($/;"	f	typeref:typename:int
TclCompileWhileCmd	generic/tclInt.h	/^MODULE_SCOPE CompileProc TclCompileWhileCmd;$/;"	v	typeref:typename:MODULE_SCOPE CompileProc
TclCompileXorOpCmd	generic/tclCompCmdsSZ.c	/^TclCompileXorOpCmd($/;"	f	typeref:typename:int
TclCompileXorOpCmd	generic/tclInt.h	/^MODULE_SCOPE CompileProc TclCompileXorOpCmd;$/;"	v	typeref:typename:MODULE_SCOPE CompileProc
TclCompileYieldCmd	generic/tclCompCmdsSZ.c	/^TclCompileYieldCmd($/;"	f	typeref:typename:int
TclCompileYieldCmd	generic/tclInt.h	/^MODULE_SCOPE CompileProc TclCompileYieldCmd;$/;"	v	typeref:typename:MODULE_SCOPE CompileProc
TclCompileYieldToCmd	generic/tclCompCmdsSZ.c	/^TclCompileYieldToCmd($/;"	f	typeref:typename:int
TclCompileYieldToCmd	generic/tclInt.h	/^MODULE_SCOPE CompileProc TclCompileYieldToCmd;$/;"	v	typeref:typename:MODULE_SCOPE CompileProc
TclContinuationsCopy	generic/tclObj.c	/^TclContinuationsCopy($/;"	f	typeref:typename:void
TclContinuationsEnter	generic/tclObj.c	/^TclContinuationsEnter($/;"	f	typeref:typename:ContLineLoc *
TclContinuationsEnterDerived	generic/tclObj.c	/^TclContinuationsEnterDerived($/;"	f	typeref:typename:void
TclContinuationsGet	generic/tclObj.c	/^TclContinuationsGet($/;"	f	typeref:typename:ContLineLoc *
TclConvertElement	generic/tclUtil.c	/^TclConvertElement($/;"	f	typeref:typename:Tcl_Size
TclCopyAndCollapse	generic/tclIntDecls.h	/^#define TclCopyAndCollapse /;"	d
TclCopyAndCollapse	generic/tclUtil.c	/^TclCopyAndCollapse($/;"	f	typeref:typename:Tcl_Size
TclCopyChannel	generic/tclIO.c	/^TclCopyChannel($/;"	f	typeref:typename:int
TclCopyChannel	generic/tclIntDecls.h	/^#define TclCopyChannel /;"	d
TclCreateAbsoluteTimerHandler	generic/tclTimer.c	/^TclCreateAbsoluteTimerHandler($/;"	f	typeref:typename:Tcl_TimerToken
TclCreateAuxData	generic/tclCompile.c	/^TclCreateAuxData($/;"	f	typeref:typename:Tcl_Size
TclCreateEnsembleInNs	generic/tclEnsemble.c	/^TclCreateEnsembleInNs($/;"	f	typeref:typename:Tcl_Command
TclCreateExceptRange	generic/tclCompile.c	/^TclCreateExceptRange($/;"	f	typeref:typename:Tcl_Size
TclCreateExecEnv	generic/tclExecute.c	/^TclCreateExecEnv($/;"	f	typeref:typename:ExecEnv *
TclCreateLateExitHandler	generic/tclEvent.c	/^TclCreateLateExitHandler($/;"	f	typeref:typename:void
TclCreateLiteral	generic/tclLiteral.c	/^TclCreateLiteral($/;"	f	typeref:typename:Tcl_Obj *
TclCreateObjCommandInNs	generic/tclBasic.c	/^TclCreateObjCommandInNs($/;"	f	typeref:typename:Tcl_Command
TclCreatePipeline	generic/tclIntDecls.h	/^#define TclCreatePipeline /;"	d
TclCreatePipeline	generic/tclPipe.c	/^TclCreatePipeline($/;"	f	typeref:typename:Tcl_Size
TclCreateProc	generic/tclIntDecls.h	/^#define TclCreateProc /;"	d
TclCreateProc	generic/tclProc.c	/^TclCreateProc($/;"	f	typeref:typename:int
TclCreateSocketAddress	generic/tclIOSock.c	/^TclCreateSocketAddress($/;"	f	typeref:typename:int
TclCrossFilesystemCopy	generic/tclIOUtil.c	/^TclCrossFilesystemCopy($/;"	f	typeref:typename:int
TclDIR	unix/tclUnixPort.h	/^typedef DIR			TclDIR;$/;"	t	typeref:typename:DIR
TclDIR	unix/tclUnixPort.h	/^typedef DIR64			TclDIR;$/;"	t	typeref:typename:DIR64
TclDStringAppendDString	generic/tclUtil.c	/^TclDStringAppendDString($/;"	f	typeref:typename:char *
TclDStringAppendLiteral	generic/tclInt.h	/^#define TclDStringAppendLiteral(/;"	d
TclDStringAppendObj	generic/tclUtil.c	/^TclDStringAppendObj($/;"	f	typeref:typename:char *
TclDStringAppendToken	generic/tclCompile.h	/^#define TclDStringAppendToken(/;"	d
TclDStringClear	generic/tclInt.h	/^#define TclDStringClear(/;"	d
TclDTraceDbgMsg	generic/tclCompile.h	/^#define TclDTraceDbgMsg(/;"	d
TclDTraceInfo	generic/tclBasic.c	/^TclDTraceInfo($/;"	f	typeref:typename:void
TclDTraceInfo	generic/tclCompile.h	/^#define TclDTraceInfo(/;"	d
TclDateFields	generic/tclClockClassic.c	/^} TclDateFields;$/;"	t	typeref:struct:__anondf8925f30208	file:
TclDateFields	generic/tclDate.h	/^typedef struct TclDateFields {$/;"	s
TclDateFields	generic/tclDate.h	/^} TclDateFields;$/;"	t	typeref:struct:TclDateFields
TclDateFieldsFlags	generic/tclDate.h	/^enum TclDateFieldsFlags {$/;"	g
TclDateerror	generic/tclDate.c	/^TclDateerror($/;"	f	typeref:typename:void	file:
TclDateerror	generic/tclDateClassic.c	/^TclDateerror($/;"	f	typeref:typename:void	file:
TclDatelex	generic/tclDate.c	/^TclDatelex($/;"	f	typeref:typename:int	file:
TclDatelex	generic/tclDateClassic.c	/^TclDatelex($/;"	f	typeref:typename:int	file:
TclDbDumpActiveObjects	generic/tclIntDecls.h	/^#define TclDbDumpActiveObjects /;"	d
TclDbDumpActiveObjects	generic/tclObj.c	/^TclDbDumpActiveObjects($/;"	f	typeref:typename:void
TclDbInitNewObj	generic/tclObj.c	/^TclDbInitNewObj($/;"	f	typeref:typename:void
TclDbNewObj	generic/tclInt.h	/^# define TclDbNewObj(/;"	d
TclDebugPrintByteCodeObj	generic/tclCompile.h	/^#define TclDebugPrintByteCodeObj(/;"	d
TclDebugPrintByteCodeObj	generic/tclDisassemble.c	/^TclDebugPrintByteCodeObj($/;"	f	typeref:typename:void
TclDecrRefCount	generic/tclInt.h	/^# define TclDecrRefCount(/;"	d
TclDefaultBgErrorHandlerObjCmd	generic/tclEvent.c	/^TclDefaultBgErrorHandlerObjCmd($/;"	f	typeref:typename:int
TclDefaultBgErrorHandlerObjCmd	generic/tclInt.h	/^MODULE_SCOPE Tcl_ObjCmdProc TclDefaultBgErrorHandlerObjCmd;$/;"	v	typeref:typename:MODULE_SCOPE Tcl_ObjCmdProc
TclDeleteCompiledLocalVars	generic/tclIntDecls.h	/^#define TclDeleteCompiledLocalVars /;"	d
TclDeleteCompiledLocalVars	generic/tclVar.c	/^TclDeleteCompiledLocalVars($/;"	f	typeref:typename:void
TclDeleteExecEnv	generic/tclExecute.c	/^TclDeleteExecEnv($/;"	f	typeref:typename:void
TclDeleteLateExitHandler	generic/tclEvent.c	/^TclDeleteLateExitHandler($/;"	f	typeref:typename:void
TclDeleteLiteralTable	generic/tclLiteral.c	/^TclDeleteLiteralTable($/;"	f	typeref:typename:void
TclDeleteNamespaceChildren	generic/tclNamesp.c	/^TclDeleteNamespaceChildren($/;"	f	typeref:typename:void
TclDeleteNamespaceVars	generic/tclVar.c	/^TclDeleteNamespaceVars($/;"	f	typeref:typename:void
TclDeleteVars	generic/tclIntDecls.h	/^#define TclDeleteVars /;"	d
TclDeleteVars	generic/tclVar.c	/^TclDeleteVars($/;"	f	typeref:typename:void
TclDictGet	generic/tclDictObj.c	/^TclDictGet($/;"	f	typeref:typename:int
TclDictGetSize	generic/tclDictObj.c	/^TclDictGetSize($/;"	f	typeref:typename:Tcl_Size
TclDictInit	generic/tclDictObj.c	/^void TclDictInit(void) {$/;"	f	typeref:typename:void
TclDictObjSize	generic/tclDecls.h	/^#define TclDictObjSize /;"	d
TclDictObjSize	generic/tclStubInit.c	/^# define TclDictObjSize /;"	d	file:
TclDictObjSmartRef	generic/tclDictObj.c	/^TclDictObjSmartRef($/;"	f	typeref:typename:Tcl_Obj *
TclDictPut	generic/tclDictObj.c	/^TclDictPut($/;"	f	typeref:typename:int
TclDictPutString	generic/tclDictObj.c	/^TclDictPutString($/;"	f	typeref:typename:int
TclDictRemove	generic/tclDictObj.c	/^TclDictRemove($/;"	f	typeref:typename:int
TclDictWithFinish	generic/tclDictObj.c	/^TclDictWithFinish($/;"	f	typeref:typename:int
TclDictWithInit	generic/tclDictObj.c	/^TclDictWithInit($/;"	f	typeref:typename:Tcl_Obj *
TclDivOpCmd	generic/tclInt.h	/^MODULE_SCOPE Tcl_ObjCmdProc TclDivOpCmd;$/;"	v	typeref:typename:MODULE_SCOPE Tcl_ObjCmdProc
TclDoubleDigits	generic/tclIntDecls.h	/^#define TclDoubleDigits /;"	d
TclDoubleDigits	generic/tclStrToD.c	/^TclDoubleDigits($/;"	f	typeref:typename:char *
TclDumpMemoryInfo	generic/tclCkalloc.c	/^TclDumpMemoryInfo($/;"	f	typeref:typename:int
TclDumpMemoryInfo	generic/tclIntDecls.h	/^#define TclDumpMemoryInfo /;"	d
TclDuplicatePureObj	generic/tclObj.c	/^TclDuplicatePureObj($/;"	f	typeref:typename:Tcl_Obj *
TclEmitForwardJump	generic/tclCompile.c	/^TclEmitForwardJump($/;"	f	typeref:typename:void
TclEmitInstInt1	generic/tclCompile.h	/^#define TclEmitInstInt1(/;"	d
TclEmitInstInt4	generic/tclCompile.h	/^#define TclEmitInstInt4(/;"	d
TclEmitInt1	generic/tclCompile.h	/^#define TclEmitInt1(/;"	d
TclEmitInt4	generic/tclCompile.h	/^#define TclEmitInt4(/;"	d
TclEmitInvoke	generic/tclCompile.c	/^TclEmitInvoke($/;"	f	typeref:typename:void
TclEmitOpcode	generic/tclCompile.h	/^#define TclEmitOpcode(/;"	d
TclEmitPush	generic/tclCompile.h	/^#define TclEmitPush(/;"	d
TclEncodedIndexIsFromEnd	generic/tclUtil.c	/^int TclEncodedIndexIsFromEnd(Tcl_Size index) {$/;"	f	typeref:typename:int
TclEncoding	generic/tclTest.c	/^} TclEncoding;$/;"	t	typeref:struct:__anon0e9396a50208	file:
TclEncodingProfileIdToName	generic/tclEncoding.c	/^TclEncodingProfileIdToName($/;"	f	typeref:typename:const char *
TclEncodingProfileNameToId	generic/tclEncoding.c	/^TclEncodingProfileNameToId($/;"	f	typeref:typename:int
TclEncodingProfiles	generic/tclEncoding.c	/^static const struct TclEncodingProfiles {$/;"	s	file:
TclEnsembleGetRewriteValues	generic/tclEnsemble.c	/^TclEnsembleGetRewriteValues($/;"	f	typeref:typename:Tcl_Obj * const *
TclEnsembleImplementationCmd	generic/tclEnsemble.c	/^TclEnsembleImplementationCmd($/;"	f	typeref:typename:int
TclEnsembleImplementationCmd	generic/tclInt.h	/^MODULE_SCOPE Tcl_ObjCmdProc TclEnsembleImplementationCmd;$/;"	v	typeref:typename:MODULE_SCOPE Tcl_ObjCmdProc
TclEnsureNamespace	generic/tclNamesp.c	/^TclEnsureNamespace($/;"	f	typeref:typename:Tcl_Namespace *
TclEnvEpoch	generic/tclInt.h	/^MODULE_SCOPE size_t TclEnvEpoch;	\/* Epoch of the tcl environment$/;"	v	typeref:typename:MODULE_SCOPE size_t
TclEolTranslation	generic/tclInt.h	/^typedef enum TclEolTranslation {$/;"	g
TclEolTranslation	generic/tclInt.h	/^} TclEolTranslation;$/;"	t	typeref:enum:TclEolTranslation
TclErrorStackResetIf	generic/tclNamesp.c	/^TclErrorStackResetIf($/;"	f	typeref:typename:void
TclEvalEx	generic/tclBasic.c	/^TclEvalEx($/;"	f	typeref:typename:int
TclEvalObjEx	generic/tclBasic.c	/^TclEvalObjEx($/;"	f	typeref:typename:int
TclEvalObjEx	generic/tclIntDecls.h	/^#define TclEvalObjEx /;"	d
TclExpandCodeArray	generic/tclCompile.c	/^TclExpandCodeArray($/;"	f	typeref:typename:void
TclExpandCodeArray	generic/tclIntDecls.h	/^#define TclExpandCodeArray /;"	d
TclExpandJumpFixupArray	generic/tclCompile.c	/^TclExpandJumpFixupArray($/;"	f	typeref:typename:void
TclExprFloatError	generic/tclExecute.c	/^TclExprFloatError($/;"	f	typeref:typename:void
TclExprFloatError	generic/tclIntDecls.h	/^#define TclExprFloatError /;"	d
TclExprLong	generic/tclDecls.h	/^	static inline int TclExprLong(Tcl_Interp *interp, const char *string, long *ptr){$/;"	f	typeref:typename:int
TclExprLongObj	generic/tclDecls.h	/^	static inline int TclExprLongObj(Tcl_Interp *interp, Tcl_Obj *obj, long *ptr){$/;"	f	typeref:typename:int
TclFSCwdIsNative	generic/tclIOUtil.c	/^TclFSCwdIsNative(void)$/;"	f	typeref:typename:int
TclFSCwdPointerEquals	generic/tclIOUtil.c	/^TclFSCwdPointerEquals($/;"	f	typeref:typename:int
TclFSEnsureEpochOk	generic/tclPathObj.c	/^TclFSEnsureEpochOk($/;"	f	typeref:typename:int
TclFSEpoch	generic/tclIOUtil.c	/^TclFSEpoch(void)$/;"	f	typeref:typename:size_t
TclFSEpochOk	generic/tclIOUtil.c	/^TclFSEpochOk($/;"	f	typeref:typename:int
TclFSFileAttrIndex	generic/tclIOUtil.c	/^TclFSFileAttrIndex($/;"	f	typeref:typename:int
TclFSGetCwdProc2	generic/tclInt.h	/^typedef void *(TclFSGetCwdProc2)(void *clientData);$/;"	t	typeref:typename:void * ()(void * clientData)
TclFSGetPathType	generic/tclPathObj.c	/^TclFSGetPathType($/;"	f	typeref:typename:Tcl_PathType
TclFSMakePathRelative	generic/tclPathObj.c	/^TclFSMakePathRelative($/;"	f	typeref:typename:Tcl_Obj *
TclFSNonnativePathType	generic/tclIOUtil.c	/^TclFSNonnativePathType($/;"	f	typeref:typename:Tcl_PathType
TclFSNormalizeAbsolutePath	generic/tclPathObj.c	/^TclFSNormalizeAbsolutePath($/;"	f	typeref:typename:Tcl_Obj *
TclFSNormalizeToUniquePath	generic/tclIOUtil.c	/^TclFSNormalizeToUniquePath($/;"	f	typeref:typename:int
TclFSSetPathDetails	generic/tclPathObj.c	/^TclFSSetPathDetails($/;"	f	typeref:typename:void
TclFSSplitPath	generic/tclDecls.h	/^#define TclFSSplitPath /;"	d
TclFSSplitPath	generic/tclStubInit.c	/^# define TclFSSplitPath /;"	d	file:
TclFetchAuxData	generic/tclCompile.h	/^#define TclFetchAuxData(/;"	d
TclFetchEnsembleRoot	generic/tclEnsemble.c	/^TclFetchEnsembleRoot($/;"	f	typeref:typename:Tcl_Obj * const *
TclFetchInternalRep	generic/tclInt.h	/^#define TclFetchInternalRep(/;"	d
TclFetchLiteral	generic/tclLiteral.c	/^TclFetchLiteral($/;"	f	typeref:typename:Tcl_Obj *
TclFile	generic/tclInt.h	/^typedef struct TclFile_ *TclFile;$/;"	t	typeref:struct:TclFile_ *
TclFileAttrProcs	generic/tclInt.h	/^typedef struct TclFileAttrProcs {$/;"	s
TclFileAttrProcs	generic/tclInt.h	/^} TclFileAttrProcs;$/;"	t	typeref:struct:TclFileAttrProcs
TclFileAttrsCmd	generic/tclFCmd.c	/^TclFileAttrsCmd($/;"	f	typeref:typename:int
TclFileAttrsCmd	generic/tclInt.h	/^MODULE_SCOPE Tcl_ObjCmdProc TclFileAttrsCmd;$/;"	v	typeref:typename:MODULE_SCOPE Tcl_ObjCmdProc
TclFileCopyCmd	generic/tclFCmd.c	/^TclFileCopyCmd($/;"	f	typeref:typename:int
TclFileCopyCmd	generic/tclInt.h	/^MODULE_SCOPE Tcl_ObjCmdProc TclFileCopyCmd;$/;"	v	typeref:typename:MODULE_SCOPE Tcl_ObjCmdProc
TclFileDeleteCmd	generic/tclFCmd.c	/^TclFileDeleteCmd($/;"	f	typeref:typename:int
TclFileDeleteCmd	generic/tclInt.h	/^MODULE_SCOPE Tcl_ObjCmdProc TclFileDeleteCmd;$/;"	v	typeref:typename:MODULE_SCOPE Tcl_ObjCmdProc
TclFileHomeCmd	generic/tclFCmd.c	/^TclFileHomeCmd($/;"	f	typeref:typename:int
TclFileHomeCmd	generic/tclInt.h	/^MODULE_SCOPE Tcl_ObjCmdProc TclFileHomeCmd;$/;"	v	typeref:typename:MODULE_SCOPE Tcl_ObjCmdProc
TclFileLinkCmd	generic/tclFCmd.c	/^TclFileLinkCmd($/;"	f	typeref:typename:int
TclFileLinkCmd	generic/tclInt.h	/^MODULE_SCOPE Tcl_ObjCmdProc TclFileLinkCmd;$/;"	v	typeref:typename:MODULE_SCOPE Tcl_ObjCmdProc
TclFileMakeDirsCmd	generic/tclFCmd.c	/^TclFileMakeDirsCmd($/;"	f	typeref:typename:int
TclFileMakeDirsCmd	generic/tclInt.h	/^MODULE_SCOPE Tcl_ObjCmdProc TclFileMakeDirsCmd;$/;"	v	typeref:typename:MODULE_SCOPE Tcl_ObjCmdProc
TclFileReadLinkCmd	generic/tclFCmd.c	/^TclFileReadLinkCmd($/;"	f	typeref:typename:int
TclFileReadLinkCmd	generic/tclInt.h	/^MODULE_SCOPE Tcl_ObjCmdProc TclFileReadLinkCmd;$/;"	v	typeref:typename:MODULE_SCOPE Tcl_ObjCmdProc
TclFileRenameCmd	generic/tclFCmd.c	/^TclFileRenameCmd($/;"	f	typeref:typename:int
TclFileRenameCmd	generic/tclInt.h	/^MODULE_SCOPE Tcl_ObjCmdProc TclFileRenameCmd;$/;"	v	typeref:typename:MODULE_SCOPE Tcl_ObjCmdProc
TclFileTempDirCmd	generic/tclFCmd.c	/^TclFileTempDirCmd($/;"	f	typeref:typename:int
TclFileTempDirCmd	generic/tclInt.h	/^MODULE_SCOPE Tcl_ObjCmdProc TclFileTempDirCmd;$/;"	v	typeref:typename:MODULE_SCOPE Tcl_ObjCmdProc
TclFileTemporaryCmd	generic/tclFCmd.c	/^TclFileTemporaryCmd($/;"	f	typeref:typename:int
TclFileTemporaryCmd	generic/tclInt.h	/^MODULE_SCOPE Tcl_ObjCmdProc TclFileTemporaryCmd;$/;"	v	typeref:typename:MODULE_SCOPE Tcl_ObjCmdProc
TclFileTildeExpandCmd	generic/tclFCmd.c	/^TclFileTildeExpandCmd($/;"	f	typeref:typename:int
TclFileTildeExpandCmd	generic/tclInt.h	/^MODULE_SCOPE Tcl_ObjCmdProc TclFileTildeExpandCmd;$/;"	v	typeref:typename:MODULE_SCOPE Tcl_ObjCmdProc
TclFinalizeAllocSubsystem	generic/tclAlloc.c	/^TclFinalizeAllocSubsystem(void)$/;"	f	typeref:typename:void
TclFinalizeAsync	generic/tclAsync.c	/^TclFinalizeAsync(void)$/;"	f	typeref:typename:void
TclFinalizeDoubleConversion	generic/tclStrToD.c	/^TclFinalizeDoubleConversion(void)$/;"	f	typeref:typename:void
TclFinalizeEncodingSubsystem	generic/tclEncoding.c	/^TclFinalizeEncodingSubsystem(void)$/;"	f	typeref:typename:void
TclFinalizeEnvironment	generic/tclEnv.c	/^TclFinalizeEnvironment(void)$/;"	f	typeref:typename:void
TclFinalizeEvaluation	generic/tclBasic.c	/^TclFinalizeEvaluation(void)$/;"	f	typeref:typename:void
TclFinalizeExecution	generic/tclExecute.c	/^TclFinalizeExecution(void)$/;"	f	typeref:typename:void
TclFinalizeFilesystem	generic/tclIOUtil.c	/^TclFinalizeFilesystem(void)$/;"	f	typeref:typename:void
TclFinalizeIOSubsystem	generic/tclIO.c	/^TclFinalizeIOSubsystem(void)$/;"	f	typeref:typename:void
TclFinalizeLoad	generic/tclLoad.c	/^TclFinalizeLoad(void)$/;"	f	typeref:typename:void
TclFinalizeLock	unix/tclUnixThrd.c	/^TclFinalizeLock(void)$/;"	f	typeref:typename:void
TclFinalizeLock	win/tclWinThrd.c	/^TclFinalizeLock(void)$/;"	f	typeref:typename:void
TclFinalizeLoopExceptionRange	generic/tclCompile.c	/^TclFinalizeLoopExceptionRange($/;"	f	typeref:typename:void
TclFinalizeMemorySubsystem	generic/tclCkalloc.c	/^TclFinalizeMemorySubsystem(void)$/;"	f	typeref:typename:void
TclFinalizeNotifier	generic/tclNotify.c	/^TclFinalizeNotifier(void)$/;"	f	typeref:typename:void
TclFinalizeObjects	generic/tclObj.c	/^TclFinalizeObjects(void)$/;"	f	typeref:typename:void
TclFinalizePreserve	generic/tclPreserve.c	/^TclFinalizePreserve(void)$/;"	f	typeref:typename:void
TclFinalizeSynchronization	generic/tclThread.c	/^TclFinalizeSynchronization(void)$/;"	f	typeref:typename:void
TclFinalizeThreadAlloc	generic/tclThreadAlloc.c	/^TclFinalizeThreadAlloc(void)$/;"	f	typeref:typename:void
TclFinalizeThreadAllocThread	generic/tclThreadAlloc.c	/^TclFinalizeThreadAllocThread(void)$/;"	f	typeref:typename:void
TclFinalizeThreadData	generic/tclThread.c	/^TclFinalizeThreadData(int quick)$/;"	f	typeref:typename:void
TclFinalizeThreadDataThread	generic/tclThreadStorage.c	/^TclFinalizeThreadDataThread(void)$/;"	f	typeref:typename:void
TclFinalizeThreadObjects	generic/tclObj.c	/^TclFinalizeThreadObjects(void)$/;"	f	typeref:typename:void
TclFinalizeThreadStorage	generic/tclThreadStorage.c	/^TclFinalizeThreadStorage(void)$/;"	f	typeref:typename:void
TclFindArrayPtrElements	generic/tclVar.c	/^TclFindArrayPtrElements($/;"	f	typeref:typename:void
TclFindCompiledLocal	generic/tclCompile.c	/^TclFindCompiledLocal($/;"	f	typeref:typename:Tcl_Size
TclFindDictElement	generic/tclUtil.c	/^TclFindDictElement($/;"	f	typeref:typename:int
TclFindElement	generic/tclIntDecls.h	/^#define TclFindElement /;"	d
TclFindElement	generic/tclUtil.c	/^TclFindElement($/;"	f	typeref:typename:int
TclFindProc	generic/tclIntDecls.h	/^#define TclFindProc /;"	d
TclFindProc	generic/tclProc.c	/^TclFindProc($/;"	f	typeref:typename:Proc *
TclFindSymbolProc	generic/tclInt.h	/^typedef void* TclFindSymbolProc(Tcl_Interp* interp, Tcl_LoadHandle loadHandle,$/;"	t	typeref:typename:void * ()(Tcl_Interp * interp,Tcl_LoadHandle loadHandle,const char * symbol)
TclFixupForwardJump	generic/tclCompile.c	/^TclFixupForwardJump($/;"	f	typeref:typename:int
TclFixupForwardJumpToHere	generic/tclCompile.h	/^#define TclFixupForwardJumpToHere(/;"	d
TclFloor	generic/tclStrToD.c	/^TclFloor($/;"	f	typeref:typename:double
TclFormatInt	generic/tclIntDecls.h	/^#define TclFormatInt /;"	d
TclFormatInt	generic/tclUtil.c	/^TclFormatInt($/;"	f	typeref:typename:Tcl_Size
TclFormatNaN	generic/tclStrToD.c	/^TclFormatNaN($/;"	f	typeref:typename:void
TclFreeAllocCache	generic/tclThreadAlloc.c	/^TclFreeAllocCache($/;"	f	typeref:typename:void
TclFreeCompileEnv	generic/tclCompile.c	/^TclFreeCompileEnv($/;"	f	typeref:typename:void
TclFreeInternalRep	generic/tclInt.h	/^#define TclFreeInternalRep(/;"	d
TclFreeJumpFixupArray	generic/tclCompile.c	/^TclFreeJumpFixupArray($/;"	f	typeref:typename:void
TclFreeLocalCache	generic/tclProc.c	/^TclFreeLocalCache($/;"	f	typeref:typename:void
TclFreeObj	generic/tclDecls.h	/^#define TclFreeObj /;"	d
TclFreeObj	generic/tclObj.c	/^TclFreeObj($/;"	f	typeref:typename:void
TclFreeObjEntry	generic/tclObj.c	/^TclFreeObjEntry($/;"	f	typeref:typename:void
TclFreeObjStorage	generic/tclInt.h	/^#  define TclFreeObjStorage(/;"	d
TclFreeObjStorageEx	generic/tclInt.h	/^#  define TclFreeObjStorageEx(/;"	d
TclFreePackageInfo	generic/tclIntDecls.h	/^#define TclFreePackageInfo /;"	d
TclFreePackageInfo	generic/tclPkg.c	/^TclFreePackageInfo($/;"	f	typeref:typename:void
TclFullFinalizationRequested	generic/tclMain.c	/^TclFullFinalizationRequested(void)$/;"	f	typeref:typename:MODULE_SCOPE int
TclGetAliasObj	generic/tclDecls.h	/^#define TclGetAliasObj /;"	d
TclGetAliasObj	generic/tclStubInit.c	/^# define TclGetAliasObj /;"	d	file:
TclGetAndDetachPids	generic/tclIntPlatDecls.h	/^#define TclGetAndDetachPids /;"	d
TclGetAndDetachPids	unix/tclUnixPipe.c	/^TclGetAndDetachPids($/;"	f	typeref:typename:void
TclGetAndDetachPids	win/tclWinPipe.c	/^TclGetAndDetachPids($/;"	f	typeref:typename:void
TclGetArrayDefault	generic/tclVar.c	/^TclGetArrayDefault($/;"	f	typeref:typename:Tcl_Obj *
TclGetAsyncReadyPtr	generic/tclAsync.c	/^TclGetAsyncReadyPtr(void)$/;"	f	typeref:typename:int *
TclGetAuxDataType	generic/tclCompCmds.c	/^TclGetAuxDataType($/;"	f	typeref:typename:const AuxDataType *
TclGetAuxDataType	generic/tclIntDecls.h	/^#define TclGetAuxDataType /;"	d
TclGetBgErrorHandler	generic/tclEvent.c	/^TclGetBgErrorHandler($/;"	f	typeref:typename:Tcl_Obj *
TclGetBooleanFromObj	generic/tclInt.h	/^#define TclGetBooleanFromObj(/;"	d
TclGetBytesFromObj	generic/tclDecls.h	/^#define TclGetBytesFromObj /;"	d
TclGetBytesFromObj	generic/tclStubInit.c	/^# define TclGetBytesFromObj /;"	d	file:
TclGetCStackPtr	generic/tclBasic.c	/^TclGetCStackPtr(void)$/;"	f	typeref:typename:void *
TclGetCStackPtr	generic/tclIntDecls.h	/^#define TclGetCStackPtr /;"	d
TclGetChannelFromObj	generic/tclIO.c	/^TclGetChannelFromObj($/;"	f	typeref:typename:int
TclGetCharLength	generic/tclDecls.h	/^#define TclGetCharLength /;"	d
TclGetCharLength	generic/tclStringObj.c	/^TclGetCharLength($/;"	f	typeref:typename:Tcl_Size
TclGetCmdFrameForProcedure	generic/tclProc.c	/^TclGetCmdFrameForProcedure($/;"	f	typeref:typename:CmdFrame *
TclGetCommandTypeName	generic/tclBasic.c	/^TclGetCommandTypeName($/;"	f	typeref:typename:const char *
TclGetCompletionCodeFromObj	generic/tclIndexObj.c	/^TclGetCompletionCodeFromObj($/;"	f	typeref:typename:int
TclGetContLineTable	generic/tclObj.c	/^TclGetContLineTable(void)$/;"	f	typeref:typename:ThreadSpecificData *	file:
TclGetCurrentNamespace	generic/tclInt.h	/^#define TclGetCurrentNamespace(/;"	d
TclGetEncodingProfiles	generic/tclEncoding.c	/^TclGetEncodingProfiles($/;"	f	typeref:typename:void
TclGetEnv	generic/tclEnv.c	/^TclGetEnv($/;"	f	typeref:typename:const char *
TclGetEnv	generic/tclIntDecls.h	/^#define TclGetEnv /;"	d
TclGetExtension	generic/tclFileName.c	/^TclGetExtension($/;"	f	typeref:typename:const char *
TclGetExtension	generic/tclIntDecls.h	/^#define TclGetExtension /;"	d
TclGetFileAttrProc	generic/tclInt.h	/^typedef int (TclGetFileAttrProc)(Tcl_Interp *interp, int objIndex,$/;"	t	typeref:typename:int ()(Tcl_Interp * interp,int objIndex,Tcl_Obj * fileName,Tcl_Obj ** attrObjPtrPtr)
TclGetFrame	generic/tclIntDecls.h	/^#define TclGetFrame /;"	d
TclGetFrame	generic/tclProc.c	/^TclGetFrame($/;"	f	typeref:typename:int
TclGetGlobalNamespace	generic/tclInt.h	/^#define TclGetGlobalNamespace(/;"	d
TclGetHomeDirObj	generic/tclPathObj.c	/^TclGetHomeDirObj($/;"	f	typeref:typename:Tcl_Obj *
TclGetIndexFromToken	generic/tclCompCmdsGR.c	/^TclGetIndexFromToken($/;"	f	typeref:typename:int
TclGetInnerContext	generic/tclDisassemble.c	/^TclGetInnerContext($/;"	f	typeref:typename:Tcl_Obj *
TclGetInnermostExceptionRange	generic/tclCompile.c	/^TclGetInnermostExceptionRange($/;"	f	typeref:typename:ExceptionRange *
TclGetInstructionTable	generic/tclCompile.c	/^TclGetInstructionTable(void)$/;"	f	typeref:typename:const void *
TclGetInstructionTable	generic/tclIntDecls.h	/^#define TclGetInstructionTable /;"	d
TclGetInt1AtPtr	generic/tclCompile.h	/^#   define TclGetInt1AtPtr(/;"	d
TclGetInt4AtPtr	generic/tclCompile.h	/^#define TclGetInt4AtPtr(/;"	d
TclGetIntForIndexM	generic/tclInt.h	/^#define TclGetIntForIndexM(/;"	d
TclGetIntFromObj	generic/tclInt.h	/^#define TclGetIntFromObj(/;"	d
TclGetLambdaFromObj	generic/tclProc.c	/^TclGetLambdaFromObj($/;"	f	typeref:typename:Proc *
TclGetLoadedLibraries	generic/tclLoad.c	/^TclGetLoadedLibraries($/;"	f	typeref:typename:int
TclGetLongFromObj	generic/tclInt.h	/^#define TclGetLongFromObj(/;"	d
TclGetMainLoop	generic/tclMain.c	/^TclGetMainLoop(void)$/;"	f	typeref:typename:Tcl_MainLoopProc *
TclGetNamespaceChildTable	generic/tclIntDecls.h	/^#define TclGetNamespaceChildTable /;"	d
TclGetNamespaceChildTable	generic/tclNamesp.c	/^TclGetNamespaceChildTable($/;"	f	typeref:typename:Tcl_HashTable *
TclGetNamespaceCommandTable	generic/tclIntDecls.h	/^#define TclGetNamespaceCommandTable /;"	d
TclGetNamespaceCommandTable	generic/tclNamesp.c	/^TclGetNamespaceCommandTable($/;"	f	typeref:typename:Tcl_HashTable *
TclGetNamespaceForQualName	generic/tclIntDecls.h	/^#define TclGetNamespaceForQualName /;"	d
TclGetNamespaceForQualName	generic/tclNamesp.c	/^TclGetNamespaceForQualName($/;"	f	typeref:typename:int
TclGetNamespaceFromObj	generic/tclIntDecls.h	/^#define TclGetNamespaceFromObj /;"	d
TclGetNamespaceFromObj	generic/tclNamesp.c	/^TclGetNamespaceFromObj($/;"	f	typeref:typename:int
TclGetObjInterpProc	generic/tclIntDecls.h	/^#define TclGetObjInterpProc /;"	d
TclGetObjInterpProc	generic/tclProc.c	/^TclGetObjInterpProc(void)$/;"	f	typeref:typename:Tcl_ObjCmdProc *
TclGetObjInterpProc2	generic/tclIntDecls.h	/^#define TclGetObjInterpProc2 /;"	d
TclGetObjInterpProc2	generic/tclProc.c	/^TclGetObjInterpProc2(void)$/;"	f	typeref:typename:Tcl_ObjCmdProc2 *
TclGetObjNameOfExecutable	generic/tclIntDecls.h	/^#define TclGetObjNameOfExecutable /;"	d
TclGetObjNameOfExecutable	generic/tclUtil.c	/^TclGetObjNameOfExecutable(void)$/;"	f	typeref:typename:Tcl_Obj *
TclGetObjectTypeType	generic/tclObj.c	/^TclObjectTypeType * TclGetObjectTypeType () {$/;"	f	typeref:typename:TclObjectTypeType *
TclGetOpenMode	generic/tclIOUtil.c	/^TclGetOpenMode($/;"	f	typeref:typename:int
TclGetOpenMode	generic/tclIntDecls.h	/^#define TclGetOpenMode /;"	d
TclGetOriginalCommand	generic/tclIntDecls.h	/^#define TclGetOriginalCommand /;"	d
TclGetOriginalCommand	generic/tclNamesp.c	/^TclGetOriginalCommand($/;"	f	typeref:typename:Tcl_Command
TclGetPathType	generic/tclIOUtil.c	/^TclGetPathType($/;"	f	typeref:typename:Tcl_PathType
TclGetPlatform	generic/tclIntDecls.h	/^#define TclGetPlatform /;"	d
TclGetPlatform	generic/tclUtil.c	/^TclGetPlatform(void)$/;"	f	typeref:typename:TclPlatformType *
TclGetProcessGlobalValue	generic/tclUtil.c	/^TclGetProcessGlobalValue($/;"	f	typeref:typename:Tcl_Obj *
TclGetRange	generic/tclDecls.h	/^#define TclGetRange /;"	d
TclGetRange	generic/tclStringObj.c	/^TclGetRange($/;"	f	typeref:typename:Tcl_Obj *
TclGetSourceFromFrame	generic/tclExecute.c	/^TclGetSourceFromFrame($/;"	f	typeref:typename:Tcl_Obj *
TclGetSrcInfoForPc	generic/tclExecute.c	/^TclGetSrcInfoForPc($/;"	f	typeref:typename:void
TclGetSrcInfoForPc	generic/tclIntDecls.h	/^#define TclGetSrcInfoForPc /;"	d
TclGetStackDepth	generic/tclCompile.h	/^#define TclGetStackDepth(/;"	d
TclGetString	generic/tclInt.h	/^#define TclGetString(/;"	d
TclGetStringFromObj	generic/tclInt.h	/^#define TclGetStringFromObj(/;"	d
TclGetStringStorage	generic/tclStringObj.c	/^TclGetStringStorage($/;"	f	typeref:typename:char *
TclGetUInt1AtPtr	generic/tclCompile.h	/^#define TclGetUInt1AtPtr(/;"	d
TclGetUInt4AtPtr	generic/tclCompile.h	/^#define TclGetUInt4AtPtr(/;"	d
TclGetUniChar	generic/tclDecls.h	/^#define TclGetUniChar /;"	d
TclGetUniChar	generic/tclStringObj.c	/^TclGetUniChar($/;"	f	typeref:typename:int
TclGetUnicodeFromObj	generic/tclDecls.h	/^#define TclGetUnicodeFromObj /;"	d
TclGetUnicodeFromObj	generic/tclStubInit.c	/^# define TclGetUnicodeFromObj /;"	d	file:
TclGetVarNsPtr	generic/tclInt.h	/^#define TclGetVarNsPtr(/;"	d
TclGetWideBitsFromObj	generic/tclObj.c	/^TclGetWideBitsFromObj($/;"	f	typeref:typename:int
TclGetWideIntFromObj	generic/tclInt.h	/^#define TclGetWideIntFromObj(/;"	d
TclGetsObjBinary	generic/tclIO.c	/^TclGetsObjBinary($/;"	f	typeref:typename:int	file:
TclGlob	generic/tclFileName.c	/^TclGlob($/;"	f	typeref:typename:int	file:
TclGrowParseTokenArray	generic/tclInt.h	/^#define TclGrowParseTokenArray(/;"	d
TclGrowTokenArray	generic/tclInt.h	/^#define TclGrowTokenArray(/;"	d
TclHandle	generic/tclInt.h	/^typedef void **TclHandle;$/;"	t	typeref:typename:void **
TclHandleCreate	generic/tclIntDecls.h	/^#define TclHandleCreate /;"	d
TclHandleCreate	generic/tclPreserve.c	/^TclHandleCreate($/;"	f	typeref:typename:TclHandle
TclHandleFree	generic/tclIntDecls.h	/^#define TclHandleFree /;"	d
TclHandleFree	generic/tclPreserve.c	/^TclHandleFree($/;"	f	typeref:typename:void
TclHandlePreserve	generic/tclIntDecls.h	/^#define TclHandlePreserve /;"	d
TclHandlePreserve	generic/tclPreserve.c	/^TclHandlePreserve($/;"	f	typeref:typename:TclHandle
TclHandleRelease	generic/tclIntDecls.h	/^#define TclHandleRelease /;"	d
TclHandleRelease	generic/tclPreserve.c	/^TclHandleRelease($/;"	f	typeref:typename:void
TclHasInternalRep	generic/tclInt.h	/^#define TclHasInternalRep(/;"	d
TclHasStringRep	generic/tclInt.h	/^#define TclHasStringRep(/;"	d
TclHashObjKey	generic/tclObj.c	/^TclHashObjKey($/;"	f	typeref:typename:size_t
TclHashStringKey	generic/tclHash.c	/^TclHashStringKey($/;"	f	typeref:typename:size_t
TclHideLiteral	generic/tclIntDecls.h	/^#define TclHideLiteral /;"	d
TclHideLiteral	generic/tclLiteral.c	/^TclHideLiteral($/;"	f	typeref:typename:void
TclHideUnsafeCommands	generic/tclBasic.c	/^TclHideUnsafeCommands($/;"	f	typeref:typename:int
TclHideUnsafeCommands	generic/tclIntDecls.h	/^#define TclHideUnsafeCommands /;"	d
TclIcuCleanup	generic/tclIcu.c	/^TclIcuCleanup($/;"	f	typeref:typename:void	file:
TclIcuInit	generic/tclIcu.c	/^TclIcuInit($/;"	f	typeref:typename:void	file:
TclInExit	generic/tclEvent.c	/^TclInExit(void)$/;"	f	typeref:typename:int
TclInExit	generic/tclIntDecls.h	/^#define TclInExit /;"	d
TclInOpCmd	generic/tclInt.h	/^MODULE_SCOPE Tcl_ObjCmdProc TclInOpCmd;$/;"	v	typeref:typename:MODULE_SCOPE Tcl_ObjCmdProc
TclInThreadExit	generic/tclEvent.c	/^TclInThreadExit(void)$/;"	f	typeref:typename:int
TclInThreadExit	generic/tclIntDecls.h	/^#define TclInThreadExit /;"	d
TclIncrObj	generic/tclExecute.c	/^TclIncrObj($/;"	f	typeref:typename:int
TclIncrObjVar2	generic/tclVar.c	/^TclIncrObjVar2($/;"	f	typeref:typename:Tcl_Obj *
TclIncrObjsAllocated	generic/tclInt.h	/^#  define TclIncrObjsAllocated(/;"	d
TclIncrObjsFreed	generic/tclInt.h	/^#  define TclIncrObjsFreed(/;"	d
TclIncrUInt4AtPtr	generic/tclCompile.c	/^#define TclIncrUInt4AtPtr(/;"	d	file:
TclIndexDecode	generic/tclUtil.c	/^TclIndexDecode($/;"	f	typeref:typename:Tcl_Size
TclIndexEncode	generic/tclUtil.c	/^TclIndexEncode($/;"	f	typeref:typename:int
TclIndexInvalidError	generic/tclUtil.c	/^TclIndexInvalidError ($/;"	f	typeref:typename:int
TclIndexLast	generic/tclUtil.c	/^TclIndexLast (Tcl_Size length) {$/;"	f	typeref:typename:Tcl_Size
TclInfoConstantCmd	generic/tclInt.h	/^MODULE_SCOPE Tcl_ObjCmdProc TclInfoConstantCmd;$/;"	v	typeref:typename:MODULE_SCOPE Tcl_ObjCmdProc
TclInfoConstantCmd	generic/tclVar.c	/^TclInfoConstantCmd($/;"	f	typeref:typename:int
TclInfoConstsCmd	generic/tclInt.h	/^MODULE_SCOPE Tcl_ObjCmdProc TclInfoConstsCmd;$/;"	v	typeref:typename:MODULE_SCOPE Tcl_ObjCmdProc
TclInfoConstsCmd	generic/tclVar.c	/^TclInfoConstsCmd($/;"	f	typeref:typename:int
TclInfoCoroutineCmd	generic/tclBasic.c	/^TclInfoCoroutineCmd($/;"	f	typeref:typename:int
TclInfoCoroutineCmd	generic/tclInt.h	/^MODULE_SCOPE Tcl_ObjCmdProc TclInfoCoroutineCmd;$/;"	v	typeref:typename:MODULE_SCOPE Tcl_ObjCmdProc
TclInfoExistsCmd	generic/tclCmdIL.c	/^TclInfoExistsCmd($/;"	f	typeref:typename:int
TclInfoExistsCmd	generic/tclInt.h	/^MODULE_SCOPE Tcl_ObjCmdProc TclInfoExistsCmd;$/;"	v	typeref:typename:MODULE_SCOPE Tcl_ObjCmdProc
TclInfoFrame	generic/tclCmdIL.c	/^TclInfoFrame($/;"	f	typeref:typename:Tcl_Obj *
TclInfoGlobalsCmd	generic/tclInt.h	/^MODULE_SCOPE Tcl_ObjCmdProc TclInfoGlobalsCmd;$/;"	v	typeref:typename:MODULE_SCOPE Tcl_ObjCmdProc
TclInfoGlobalsCmd	generic/tclVar.c	/^TclInfoGlobalsCmd($/;"	f	typeref:typename:int
TclInfoLocalsCmd	generic/tclInt.h	/^MODULE_SCOPE Tcl_ObjCmdProc TclInfoLocalsCmd;$/;"	v	typeref:typename:MODULE_SCOPE Tcl_ObjCmdProc
TclInfoLocalsCmd	generic/tclVar.c	/^TclInfoLocalsCmd($/;"	f	typeref:typename:int
TclInfoVarsCmd	generic/tclInt.h	/^MODULE_SCOPE Tcl_ObjCmdProc TclInfoVarsCmd;$/;"	v	typeref:typename:MODULE_SCOPE Tcl_ObjCmdProc
TclInfoVarsCmd	generic/tclVar.c	/^TclInfoVarsCmd($/;"	f	typeref:typename:int
TclInitAlloc	generic/tclAlloc.c	/^TclInitAlloc(void)$/;"	f	typeref:typename:void
TclInitArrayCmd	generic/tclVar.c	/^TclInitArrayCmd($/;"	f	typeref:typename:Tcl_Command
TclInitArrayVar	generic/tclVar.c	/^TclInitArrayVar($/;"	f	typeref:typename:void
TclInitBinaryCmd	generic/tclBinary.c	/^TclInitBinaryCmd($/;"	f	typeref:typename:Tcl_Command
TclInitByteCode	generic/tclCompile.c	/^TclInitByteCode($/;"	f	typeref:typename:ByteCode *
TclInitByteCodeObj	generic/tclCompile.c	/^TclInitByteCodeObj($/;"	f	typeref:typename:ByteCode *
TclInitChanCmd	generic/tclIOCmd.c	/^TclInitChanCmd($/;"	f	typeref:typename:Tcl_Command
TclInitCompileEnv	generic/tclCompile.c	/^TclInitCompileEnv($/;"	f	typeref:typename:void
TclInitDbCkalloc	generic/tclCkalloc.c	/^TclInitDbCkalloc(void)$/;"	f	typeref:typename:void
TclInitDictCmd	generic/tclDictObj.c	/^TclInitDictCmd($/;"	f	typeref:typename:Tcl_Command
TclInitDoubleConversion	generic/tclStrToD.c	/^TclInitDoubleConversion(void)$/;"	f	typeref:typename:void
TclInitEmbeddedConfigurationInformation	generic/tclPkgConfig.c	/^TclInitEmbeddedConfigurationInformation($/;"	f	typeref:typename:void
TclInitEmptyStringRep	generic/tclInt.h	/^#define TclInitEmptyStringRep(/;"	d
TclInitEncodingCmd	generic/tclCmdAH.c	/^TclInitEncodingCmd($/;"	f	typeref:typename:Tcl_Command
TclInitEncodingSubsystem	generic/tclEncoding.c	/^TclInitEncodingSubsystem(void)$/;"	f	typeref:typename:void
TclInitFileCmd	generic/tclCmdAH.c	/^TclInitFileCmd($/;"	f	typeref:typename:Tcl_Command
TclInitIOSubsystem	generic/tclIO.c	/^TclInitIOSubsystem(void)$/;"	f	typeref:typename:void
TclInitInfoCmd	generic/tclCmdIL.c	/^TclInitInfoCmd($/;"	f	typeref:typename:Tcl_Command
TclInitJumpFixupArray	generic/tclCompile.c	/^TclInitJumpFixupArray($/;"	f	typeref:typename:void
TclInitLimitSupport	generic/tclInterp.c	/^TclInitLimitSupport($/;"	f	typeref:typename:void
TclInitLiteralTable	generic/tclLiteral.c	/^TclInitLiteralTable($/;"	f	typeref:typename:void
TclInitNamespaceCmd	generic/tclNamesp.c	/^TclInitNamespaceCmd($/;"	f	typeref:typename:Tcl_Command
TclInitNamespaceSubsystem	generic/tclNamesp.c	/^TclInitNamespaceSubsystem(void)$/;"	f	typeref:typename:void
TclInitNotifier	generic/tclNotify.c	/^TclInitNotifier(void)$/;"	f	typeref:typename:void
TclInitObjRef	generic/tclStrIdxTree.h	/^#define TclInitObjRef(/;"	d
TclInitObjSubsystem	generic/tclObj.c	/^TclInitObjSubsystem(void)$/;"	f	typeref:typename:void
TclInitPkgFiles	generic/tclPkg.c	/^TclInitPkgFiles($/;"	f	typeref:typename:void *
TclInitPrefixCmd	generic/tclIndexObj.c	/^TclInitPrefixCmd($/;"	f	typeref:typename:Tcl_Command
TclInitProcessCmd	generic/tclProcess.c	/^TclInitProcessCmd($/;"	f	typeref:typename:Tcl_Command
TclInitProcessGlobalValueProc	generic/tclInt.h	/^typedef void (TclInitProcessGlobalValueProc)(char **valuePtr,$/;"	t	typeref:typename:void ()(char ** valuePtr,TCL_HASH_TYPE * lengthPtr,Tcl_Encoding * encodingPtr)
TclInitRewriteEnsemble	generic/tclEnsemble.c	/^TclInitRewriteEnsemble($/;"	f	typeref:typename:int
TclInitRewriteEnsemble	generic/tclIntDecls.h	/^#define TclInitRewriteEnsemble /;"	d
TclInitSockets	generic/tclInt.h	/^#define TclInitSockets(/;"	d
TclInitSockets	win/tclWinSock.c	/^TclInitSockets(void)$/;"	f	typeref:typename:void
TclInitStringCmd	generic/tclCmdMZ.c	/^TclInitStringCmd($/;"	f	typeref:typename:Tcl_Command
TclInitStringRep	generic/tclInt.h	/^#define TclInitStringRep(/;"	d
TclInitStubTable	generic/tclStubLibTbl.c	/^TclInitStubTable($/;"	f	typeref:typename:MODULE_SCOPE const char *
TclInitThreadAlloc	generic/tclThreadAlloc.c	/^TclInitThreadAlloc(void)$/;"	f	typeref:typename:void
TclInitThreadStorage	generic/tclThreadStorage.c	/^TclInitThreadStorage(void)$/;"	f	typeref:typename:void
TclInitVarHashTable	generic/tclIntDecls.h	/^#define TclInitVarHashTable /;"	d
TclInitVarHashTable	generic/tclVar.c	/^TclInitVarHashTable($/;"	f	typeref:typename:void
TclInstruction	generic/tclCompile.h	/^enum TclInstruction {$/;"	g
TclIntPlatStubs	generic/tclIntPlatDecls.h	/^typedef struct TclIntPlatStubs {$/;"	s
TclIntPlatStubs	generic/tclIntPlatDecls.h	/^} TclIntPlatStubs;$/;"	t	typeref:struct:TclIntPlatStubs
TclIntStubs	generic/tclIntDecls.h	/^typedef struct TclIntStubs {$/;"	s
TclIntStubs	generic/tclIntDecls.h	/^} TclIntStubs;$/;"	t	typeref:struct:TclIntStubs
TclInterpInit	generic/tclIntDecls.h	/^#define TclInterpInit /;"	d
TclInterpInit	generic/tclInterp.c	/^TclInterpInit($/;"	f	typeref:typename:int
TclInterpReady	generic/tclBasic.c	/^TclInterpReady($/;"	f	typeref:typename:int
TclInvalidateCmdLiteral	generic/tclLiteral.c	/^TclInvalidateCmdLiteral($/;"	f	typeref:typename:void
TclInvalidateNsCmdLookup	generic/tclInt.h	/^#define TclInvalidateNsCmdLookup(/;"	d
TclInvalidateNsPath	generic/tclNamesp.c	/^TclInvalidateNsPath($/;"	f	typeref:typename:void
TclInvalidateStringRep	generic/tclInt.h	/^#define TclInvalidateStringRep(/;"	d
TclInvertOpCmd	generic/tclInt.h	/^MODULE_SCOPE Tcl_ObjCmdProc TclInvertOpCmd;$/;"	v	typeref:typename:MODULE_SCOPE Tcl_ObjCmdProc
TclInvokeImportedCmd	generic/tclInt.h	/^MODULE_SCOPE Tcl_ObjCmdProc TclInvokeImportedCmd;$/;"	v	typeref:typename:MODULE_SCOPE Tcl_ObjCmdProc
TclInvokeImportedCmd	generic/tclNamesp.c	/^TclInvokeImportedCmd($/;"	f	typeref:typename:int
TclIsBareword	generic/tclParse.c	/^TclIsBareword($/;"	f	typeref:typename:int
TclIsProc	generic/tclIntDecls.h	/^#define TclIsProc /;"	d
TclIsProc	generic/tclProc.c	/^TclIsProc($/;"	f	typeref:typename:Proc *
TclIsPureByteArray	generic/tclBinary.c	/^TclIsPureByteArray($/;"	f	typeref:typename:int
TclIsPureDict	generic/tclInt.h	/^#define TclIsPureDict(/;"	d
TclIsSpaceProc	generic/tclParse.c	/^TclIsSpaceProc($/;"	f	typeref:typename:int
TclIsSpaceProcM	generic/tclInt.h	/^#define TclIsSpaceProcM(/;"	d
TclIsVarArgument	generic/tclInt.h	/^#define TclIsVarArgument(/;"	d
TclIsVarArray	generic/tclInt.h	/^#define TclIsVarArray(/;"	d
TclIsVarArrayElement	generic/tclInt.h	/^#define TclIsVarArrayElement(/;"	d
TclIsVarConstant	generic/tclInt.h	/^#define TclIsVarConstant(/;"	d
TclIsVarDeadHash	generic/tclInt.h	/^#define TclIsVarDeadHash(/;"	d
TclIsVarDirectModifyable	generic/tclInt.h	/^#define TclIsVarDirectModifyable(/;"	d
TclIsVarDirectModifyable2	generic/tclInt.h	/^#define TclIsVarDirectModifyable2(/;"	d
TclIsVarDirectReadable	generic/tclInt.h	/^#define TclIsVarDirectReadable(/;"	d
TclIsVarDirectReadable2	generic/tclInt.h	/^#define TclIsVarDirectReadable2(/;"	d
TclIsVarDirectUnsettable	generic/tclInt.h	/^#define TclIsVarDirectUnsettable(/;"	d
TclIsVarDirectWritable	generic/tclInt.h	/^#define TclIsVarDirectWritable(/;"	d
TclIsVarDirectWritable2	generic/tclInt.h	/^#define TclIsVarDirectWritable2(/;"	d
TclIsVarInHash	generic/tclInt.h	/^#define TclIsVarInHash(/;"	d
TclIsVarLink	generic/tclInt.h	/^#define TclIsVarLink(/;"	d
TclIsVarNamespaceVar	generic/tclInt.h	/^#define TclIsVarNamespaceVar(/;"	d
TclIsVarResolved	generic/tclInt.h	/^#define TclIsVarResolved(/;"	d
TclIsVarScalar	generic/tclInt.h	/^#define TclIsVarScalar(/;"	d
TclIsVarTemporary	generic/tclInt.h	/^#define TclIsVarTemporary(/;"	d
TclIsVarTraceActive	generic/tclInt.h	/^#define TclIsVarTraceActive(/;"	d
TclIsVarTraced	generic/tclInt.h	/^#define TclIsVarTraced(/;"	d
TclIsVarTricky	generic/tclInt.h	/^#define TclIsVarTricky(/;"	d
TclIsVarUndefined	generic/tclInt.h	/^#define TclIsVarUndefined(/;"	d
TclIsZipfsPath	generic/tclZipfs.c	/^TclIsZipfsPath($/;"	f	typeref:typename:int
TclItoAw	generic/tclClockFmt.c	/^TclItoAw($/;"	f	typeref:typename:char *
TclJoinPath	generic/tclPathObj.c	/^TclJoinPath($/;"	f	typeref:typename:Tcl_Obj *
TclJumpType	generic/tclCompile.h	/^} TclJumpType;$/;"	t	typeref:enum:__anone79d5a530603
TclLengthOne	generic/tclInt.h	/^MODULE_SCOPE Tcl_ObjInterfaceListLengthProc TclLengthOne; $/;"	v	typeref:typename:MODULE_SCOPE Tcl_ObjInterfaceListLengthProc
TclLengthOne	generic/tclUtil.c	/^TclLengthOne($/;"	f	typeref:typename:int
TclLimitExceeded	generic/tclInt.h	/^#define TclLimitExceeded(/;"	d
TclLimitReady	generic/tclInt.h	/^#define TclLimitReady(/;"	d
TclLimitRemoveAllHandlers	generic/tclInterp.c	/^TclLimitRemoveAllHandlers($/;"	f	typeref:typename:void
TclLindexFlat	generic/tclListObj.c	/^TclLindexFlat($/;"	f	typeref:typename:Tcl_Obj *
TclLindexList	generic/tclListObj.c	/^TclLindexList($/;"	f	typeref:typename:Tcl_Obj *
TclListInit	generic/tclListObj.c	/^void TclListInit(void) {$/;"	f	typeref:typename:void
TclListLines	generic/tclCmdMZ.c	/^TclListLines($/;"	f	typeref:typename:void
TclListObjAppendElements	generic/tclListObj.c	/^ TclListObjAppendElements ($/;"	f	typeref:typename:int
TclListObjGetElement	generic/tclListObj.c	/^TclListObjGetElement($/;"	f	typeref:typename:Tcl_Obj *
TclListObjGetElements	generic/tclInt.h	/^#define TclListObjGetElements(/;"	d
TclListObjGetElements	generic/tclStubInit.c	/^# define TclListObjGetElements /;"	d	file:
TclListObjGetRep	generic/tclListObj.c	/^TclListObjGetRep($/;"	f	typeref:typename:int	file:
TclListObjIsCanonical	generic/tclInt.h	/^#define TclListObjIsCanonical(/;"	d
TclListObjLength	generic/tclInt.h	/^#define TclListObjLength(/;"	d
TclListObjLength	generic/tclStubInit.c	/^# define TclListObjLength /;"	d	file:
TclListObjRange	generic/tclListObj.c	/^TclListObjRange(tclObjTypeInterfaceArgsListRange)$/;"	f	typeref:typename:int
TclListObjSetElement	generic/tclIntDecls.h	/^#define TclListObjSetElement /;"	d
TclListObjSetElement	generic/tclListObj.c	/^TclListObjSetElement(tclObjTypeInterfaceArgsListSet)$/;"	f	typeref:typename:int
TclListObjValidate	generic/tclIntDecls.h	/^#define TclListObjValidate /;"	d
TclListObjValidate	generic/tclListObj.c	/^TclListObjValidate($/;"	f	typeref:typename:void
TclListTestObj	generic/tclIntDecls.h	/^#define TclListTestObj /;"	d
TclListTestObj	generic/tclListObj.c	/^TclListTestObj($/;"	f	typeref:typename:Tcl_Obj *
TclLiteralStats	generic/tclLiteral.c	/^TclLiteralStats($/;"	f	typeref:typename:char *
TclLoadDbgMsg	macosx/tclMacOSXBundle.c	/^#define TclLoadDbgMsg(/;"	d	file:
TclLoadIcuObjCmd	generic/tclIcu.c	/^TclLoadIcuObjCmd($/;"	f	typeref:typename:int
TclLoadIcuObjCmd	generic/tclInt.h	/^MODULE_SCOPE Tcl_ObjCmdProc TclLoadIcuObjCmd;$/;"	v	typeref:typename:MODULE_SCOPE Tcl_ObjCmdProc
TclLocalAliasObjCmd	generic/tclInt.h	/^MODULE_SCOPE Tcl_ObjCmdProc TclLocalAliasObjCmd;$/;"	v	typeref:typename:MODULE_SCOPE Tcl_ObjCmdProc
TclLocalAliasObjCmd	generic/tclInterp.c	/^TclLocalAliasObjCmd($/;"	f	typeref:typename:int
TclLocalScalar	generic/tclCompCmds.c	/^TclLocalScalar($/;"	f	typeref:typename:size_t
TclLocalScalarFromToken	generic/tclCompCmds.c	/^TclLocalScalarFromToken($/;"	f	typeref:typename:size_t
TclLog2	generic/tclExecute.c	/^TclLog2($/;"	f	typeref:typename:int
TclLogCommandInfo	generic/tclNamesp.c	/^TclLogCommandInfo($/;"	f	typeref:typename:void
TclLookupArrayElement	generic/tclVar.c	/^TclLookupArrayElement($/;"	f	typeref:typename:Var *
TclLookupSimpleVar	generic/tclVar.c	/^TclLookupSimpleVar($/;"	f	typeref:typename:Var *
TclLookupVar	generic/tclIntDecls.h	/^#define TclLookupVar /;"	d
TclLookupVar	generic/tclVar.c	/^TclLookupVar($/;"	f	typeref:typename:Var *
TclLsetFlat	generic/tclListObj.c	/^TclLsetFlat(tclObjTypeInterfaceArgsListSetDeep)$/;"	f	typeref:typename:int
TclLsetList	generic/tclListObj.c	/^TclLsetList($/;"	f	typeref:typename:Tcl_Obj *
TclLshiftOpCmd	generic/tclInt.h	/^MODULE_SCOPE Tcl_ObjCmdProc TclLshiftOpCmd;$/;"	v	typeref:typename:MODULE_SCOPE Tcl_ObjCmdProc
TclMacOSXCopyFileAttributes	macosx/tclMacOSXFCmd.c	/^TclMacOSXCopyFileAttributes($/;"	f	typeref:typename:int
TclMacOSXGetFileAttribute	macosx/tclMacOSXFCmd.c	/^TclMacOSXGetFileAttribute($/;"	f	typeref:typename:int
TclMacOSXMatchType	macosx/tclMacOSXFCmd.c	/^TclMacOSXMatchType($/;"	f	typeref:typename:int
TclMacOSXNotifierDbgMsg	macosx/tclMacOSXNotify.c	/^#define TclMacOSXNotifierDbgMsg(/;"	d	file:
TclMacOSXSetFileAttribute	macosx/tclMacOSXFCmd.c	/^TclMacOSXSetFileAttribute($/;"	f	typeref:typename:int
TclMakeEnsemble	generic/tclEnsemble.c	/^TclMakeEnsemble($/;"	f	typeref:typename:Tcl_Command
TclMarkTailcall	generic/tclBasic.c	/^TclMarkTailcall($/;"	f	typeref:typename:void
TclMatchIsTrivial	generic/tclInt.h	/^#define TclMatchIsTrivial(/;"	d
TclMax	generic/tclCompile.h	/^#define TclMax(/;"	d
TclMaxAlignment	generic/tclInt.h	/^struct TclMaxAlignment {$/;"	s
TclMaxListLength	generic/tclUtil.c	/^TclMaxListLength($/;"	f	typeref:typename:Tcl_Size
TclMergeReturnOptions	generic/tclResult.c	/^TclMergeReturnOptions($/;"	f	typeref:typename:int
TclMethodIsType	generic/tclOOMethod.c	/^TclMethodIsType($/;"	f	typeref:typename:int
TclMin	generic/tclCompile.h	/^#define TclMin(/;"	d
TclMinusOpCmd	generic/tclInt.h	/^MODULE_SCOPE Tcl_ObjCmdProc TclMinusOpCmd;$/;"	v	typeref:typename:MODULE_SCOPE Tcl_ObjCmdProc
TclModOpCmd	generic/tclInt.h	/^MODULE_SCOPE Tcl_ObjCmdProc TclModOpCmd;$/;"	v	typeref:typename:MODULE_SCOPE Tcl_ObjCmdProc
TclMulOpCmd	generic/tclInt.h	/^MODULE_SCOPE Tcl_ObjCmdProc TclMulOpCmd;$/;"	v	typeref:typename:MODULE_SCOPE Tcl_ObjCmdProc
TclNRAddCallback	generic/tclInt.h	/^#define TclNRAddCallback(/;"	d
TclNRApplyObjCmd	generic/tclInt.h	/^MODULE_SCOPE Tcl_ObjCmdProc TclNRApplyObjCmd;$/;"	v	typeref:typename:MODULE_SCOPE Tcl_ObjCmdProc
TclNRApplyObjCmd	generic/tclProc.c	/^TclNRApplyObjCmd($/;"	f	typeref:typename:int
TclNRAssembleObjCmd	generic/tclAssembly.c	/^TclNRAssembleObjCmd($/;"	f	typeref:typename:int
TclNRAssembleObjCmd	generic/tclInt.h	/^MODULE_SCOPE Tcl_ObjCmdProc TclNRAssembleObjCmd;$/;"	v	typeref:typename:MODULE_SCOPE Tcl_ObjCmdProc
TclNRCatchObjCmd	generic/tclCmdAH.c	/^TclNRCatchObjCmd($/;"	f	typeref:typename:int
TclNRCatchObjCmd	generic/tclInt.h	/^MODULE_SCOPE Tcl_ObjCmdProc TclNRCatchObjCmd;$/;"	v	typeref:typename:MODULE_SCOPE Tcl_ObjCmdProc
TclNRCoroInjectObjCmd	generic/tclBasic.c	/^TclNRCoroInjectObjCmd($/;"	f	typeref:typename:int	file:
TclNRCoroInjectObjCmd	generic/tclBasic.c	/^static Tcl_ObjCmdProc TclNRCoroInjectObjCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
TclNRCoroProbeObjCmd	generic/tclBasic.c	/^TclNRCoroProbeObjCmd($/;"	f	typeref:typename:int	file:
TclNRCoroProbeObjCmd	generic/tclBasic.c	/^static Tcl_ObjCmdProc TclNRCoroProbeObjCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
TclNRCoroutineActivateCallback	generic/tclBasic.c	/^TclNRCoroutineActivateCallback($/;"	f	typeref:typename:int
TclNRCoroutineActivateCallback	generic/tclInt.h	/^MODULE_SCOPE Tcl_NRPostProc TclNRCoroutineActivateCallback;$/;"	v	typeref:typename:MODULE_SCOPE Tcl_NRPostProc
TclNRCoroutineObjCmd	generic/tclBasic.c	/^TclNRCoroutineObjCmd($/;"	f	typeref:typename:int
TclNRCoroutineObjCmd	generic/tclInt.h	/^MODULE_SCOPE Tcl_ObjCmdProc TclNRCoroutineObjCmd;$/;"	v	typeref:typename:MODULE_SCOPE Tcl_ObjCmdProc
TclNRCreateCommandInNs	generic/tclBasic.c	/^TclNRCreateCommandInNs($/;"	f	typeref:typename:Tcl_Command
TclNREvalFile	generic/tclIOUtil.c	/^TclNREvalFile($/;"	f	typeref:typename:int
TclNREvalObjCmd	generic/tclCmdAH.c	/^TclNREvalObjCmd($/;"	f	typeref:typename:int
TclNREvalObjCmd	generic/tclInt.h	/^MODULE_SCOPE Tcl_ObjCmdProc TclNREvalObjCmd;$/;"	v	typeref:typename:MODULE_SCOPE Tcl_ObjCmdProc
TclNREvalObjEx	generic/tclBasic.c	/^TclNREvalObjEx($/;"	f	typeref:typename:int
TclNREvalObjEx	generic/tclIntDecls.h	/^#define TclNREvalObjEx /;"	d
TclNREvalObjv	generic/tclBasic.c	/^TclNREvalObjv($/;"	f	typeref:typename:int
TclNREvalObjv	generic/tclIntDecls.h	/^#define TclNREvalObjv /;"	d
TclNRExecuteByteCode	generic/tclExecute.c	/^TclNRExecuteByteCode($/;"	f	typeref:typename:int
TclNRExprObjCmd	generic/tclCmdAH.c	/^TclNRExprObjCmd($/;"	f	typeref:typename:int
TclNRExprObjCmd	generic/tclInt.h	/^MODULE_SCOPE Tcl_ObjCmdProc TclNRExprObjCmd;$/;"	v	typeref:typename:MODULE_SCOPE Tcl_ObjCmdProc
TclNRForIterCallback	generic/tclCmdAH.c	/^TclNRForIterCallback($/;"	f	typeref:typename:int
TclNRForIterCallback	generic/tclInt.h	/^MODULE_SCOPE Tcl_NRPostProc TclNRForIterCallback;$/;"	v	typeref:typename:MODULE_SCOPE Tcl_NRPostProc
TclNRForObjCmd	generic/tclCmdAH.c	/^TclNRForObjCmd($/;"	f	typeref:typename:int
TclNRForObjCmd	generic/tclInt.h	/^MODULE_SCOPE Tcl_ObjCmdProc TclNRForObjCmd;$/;"	v	typeref:typename:MODULE_SCOPE Tcl_ObjCmdProc
TclNRForeachCmd	generic/tclCmdAH.c	/^TclNRForeachCmd($/;"	f	typeref:typename:int
TclNRForeachCmd	generic/tclInt.h	/^MODULE_SCOPE Tcl_ObjCmdProc TclNRForeachCmd;$/;"	v	typeref:typename:MODULE_SCOPE Tcl_ObjCmdProc
TclNRIfObjCmd	generic/tclCmdIL.c	/^TclNRIfObjCmd($/;"	f	typeref:typename:int
TclNRIfObjCmd	generic/tclInt.h	/^MODULE_SCOPE Tcl_ObjCmdProc TclNRIfObjCmd;$/;"	v	typeref:typename:MODULE_SCOPE Tcl_ObjCmdProc
TclNRInterpCoroutine	generic/tclBasic.c	/^TclNRInterpCoroutine($/;"	f	typeref:typename:int
TclNRInterpCoroutine	generic/tclCompile.h	/^MODULE_SCOPE Tcl_ObjCmdProc	TclNRInterpCoroutine;$/;"	v	typeref:typename:MODULE_SCOPE Tcl_ObjCmdProc
TclNRInterpProc	generic/tclIntDecls.h	/^#define TclNRInterpProc /;"	d
TclNRInterpProc	generic/tclProc.c	/^TclNRInterpProc($/;"	f	typeref:typename:int
TclNRInterpProcCore	generic/tclIntDecls.h	/^#define TclNRInterpProcCore /;"	d
TclNRInterpProcCore	generic/tclProc.c	/^TclNRInterpProcCore($/;"	f	typeref:typename:int
TclNRInvoke	generic/tclBasic.c	/^TclNRInvoke($/;"	f	typeref:typename:int
TclNRInvoke	generic/tclInt.h	/^MODULE_SCOPE Tcl_ObjCmdProc TclNRInvoke;$/;"	v	typeref:typename:MODULE_SCOPE Tcl_ObjCmdProc
TclNRLmapCmd	generic/tclCmdAH.c	/^TclNRLmapCmd($/;"	f	typeref:typename:int
TclNRLmapCmd	generic/tclInt.h	/^MODULE_SCOPE Tcl_ObjCmdProc TclNRLmapCmd;$/;"	v	typeref:typename:MODULE_SCOPE Tcl_ObjCmdProc
TclNRNewObjectInstance	generic/tclOO.c	/^TclNRNewObjectInstance($/;"	f	typeref:typename:int
TclNRObjectContextInvokeNext	generic/tclOO.c	/^TclNRObjectContextInvokeNext($/;"	f	typeref:typename:int
TclNRPackageObjCmd	generic/tclInt.h	/^MODULE_SCOPE Tcl_ObjCmdProc TclNRPackageObjCmd;$/;"	v	typeref:typename:MODULE_SCOPE Tcl_ObjCmdProc
TclNRPackageObjCmd	generic/tclPkg.c	/^TclNRPackageObjCmd($/;"	f	typeref:typename:int
TclNRPackageObjCmdCleanup	generic/tclPkg.c	/^TclNRPackageObjCmdCleanup($/;"	f	typeref:typename:int	file:
TclNRPkgRequireProc	generic/tclPkg.c	/^TclNRPkgRequireProc($/;"	f	typeref:typename:int	file:
TclNRReleaseValues	generic/tclBasic.c	/^TclNRReleaseValues($/;"	f	typeref:typename:int
TclNRReleaseValues	generic/tclInt.h	/^MODULE_SCOPE Tcl_NRPostProc TclNRReleaseValues;$/;"	v	typeref:typename:MODULE_SCOPE Tcl_NRPostProc
TclNRRunCallbacks	generic/tclBasic.c	/^TclNRRunCallbacks($/;"	f	typeref:typename:int
TclNRRunCallbacks	generic/tclIntDecls.h	/^#define TclNRRunCallbacks /;"	d
TclNRSourceObjCmd	generic/tclCmdMZ.c	/^TclNRSourceObjCmd($/;"	f	typeref:typename:int
TclNRSourceObjCmd	generic/tclInt.h	/^MODULE_SCOPE Tcl_ObjCmdProc TclNRSourceObjCmd;$/;"	v	typeref:typename:MODULE_SCOPE Tcl_ObjCmdProc
TclNRSubstObjCmd	generic/tclCmdMZ.c	/^TclNRSubstObjCmd($/;"	f	typeref:typename:int
TclNRSubstObjCmd	generic/tclInt.h	/^MODULE_SCOPE Tcl_ObjCmdProc TclNRSubstObjCmd;$/;"	v	typeref:typename:MODULE_SCOPE Tcl_ObjCmdProc
TclNRSwitchObjCmd	generic/tclCmdMZ.c	/^TclNRSwitchObjCmd($/;"	f	typeref:typename:int
TclNRSwitchObjCmd	generic/tclInt.h	/^MODULE_SCOPE Tcl_ObjCmdProc TclNRSwitchObjCmd;$/;"	v	typeref:typename:MODULE_SCOPE Tcl_ObjCmdProc
TclNRTailcallEval	generic/tclBasic.c	/^TclNRTailcallEval($/;"	f	typeref:typename:int
TclNRTailcallEval	generic/tclInt.h	/^MODULE_SCOPE Tcl_NRPostProc TclNRTailcallEval;$/;"	v	typeref:typename:MODULE_SCOPE Tcl_NRPostProc
TclNRTailcallObjCmd	generic/tclBasic.c	/^TclNRTailcallObjCmd($/;"	f	typeref:typename:int
TclNRTailcallObjCmd	generic/tclInt.h	/^MODULE_SCOPE Tcl_ObjCmdProc TclNRTailcallObjCmd;$/;"	v	typeref:typename:MODULE_SCOPE Tcl_ObjCmdProc
TclNRTryObjCmd	generic/tclCmdMZ.c	/^TclNRTryObjCmd($/;"	f	typeref:typename:int
TclNRTryObjCmd	generic/tclInt.h	/^MODULE_SCOPE Tcl_ObjCmdProc TclNRTryObjCmd;$/;"	v	typeref:typename:MODULE_SCOPE Tcl_ObjCmdProc
TclNRUplevelObjCmd	generic/tclInt.h	/^MODULE_SCOPE Tcl_ObjCmdProc TclNRUplevelObjCmd;$/;"	v	typeref:typename:MODULE_SCOPE Tcl_ObjCmdProc
TclNRUplevelObjCmd	generic/tclProc.c	/^TclNRUplevelObjCmd($/;"	f	typeref:typename:int
TclNRWhileObjCmd	generic/tclCmdMZ.c	/^TclNRWhileObjCmd($/;"	f	typeref:typename:int
TclNRWhileObjCmd	generic/tclInt.h	/^MODULE_SCOPE Tcl_ObjCmdProc TclNRWhileObjCmd;$/;"	v	typeref:typename:MODULE_SCOPE Tcl_ObjCmdProc
TclNRYieldObjCmd	generic/tclBasic.c	/^TclNRYieldObjCmd($/;"	f	typeref:typename:int
TclNRYieldObjCmd	generic/tclInt.h	/^MODULE_SCOPE Tcl_ObjCmdProc TclNRYieldObjCmd;$/;"	v	typeref:typename:MODULE_SCOPE Tcl_ObjCmdProc
TclNRYieldToObjCmd	generic/tclBasic.c	/^TclNRYieldToObjCmd($/;"	f	typeref:typename:int
TclNRYieldToObjCmd	generic/tclInt.h	/^MODULE_SCOPE Tcl_ObjCmdProc TclNRYieldToObjCmd;$/;"	v	typeref:typename:MODULE_SCOPE Tcl_ObjCmdProc
TclNRYieldmObjCmd	generic/tclInt.h	/^MODULE_SCOPE Tcl_ObjCmdProc TclNRYieldmObjCmd;$/;"	v	typeref:typename:MODULE_SCOPE Tcl_ObjCmdProc
TclNamespaceDeleted	generic/tclNamesp.c	/^TclNamespaceDeleted($/;"	f	typeref:typename:int
TclNamespaceEnsembleCmd	generic/tclEnsemble.c	/^TclNamespaceEnsembleCmd($/;"	f	typeref:typename:int
TclNamespaceEnsembleCmd	generic/tclInt.h	/^MODULE_SCOPE Tcl_ObjCmdProc TclNamespaceEnsembleCmd;$/;"	v	typeref:typename:MODULE_SCOPE Tcl_ObjCmdProc
TclNarrowToBytes	generic/tclBinary.c	/^TclNarrowToBytes($/;"	f	typeref:typename:Tcl_Obj *	file:
TclNativeCreateNativeRep	generic/tclFileSystem.h	/^MODULE_SCOPE Tcl_FSCreateInternalRepProc TclNativeCreateNativeRep;$/;"	v	typeref:typename:MODULE_SCOPE Tcl_FSCreateInternalRepProc
TclNativeCreateNativeRep	unix/tclUnixFile.c	/^TclNativeCreateNativeRep($/;"	f	typeref:typename:void *
TclNativeCreateNativeRep	win/tclWinFile.c	/^TclNativeCreateNativeRep($/;"	f	typeref:typename:void *
TclNativeDupInternalRep	generic/tclInt.h	/^MODULE_SCOPE Tcl_FSDupInternalRepProc TclNativeDupInternalRep;$/;"	v	typeref:typename:MODULE_SCOPE Tcl_FSDupInternalRepProc
TclNativeDupInternalRep	unix/tclUnixFile.c	/^TclNativeDupInternalRep($/;"	f	typeref:typename:void *
TclNativeDupInternalRep	win/tclWinFile.c	/^TclNativeDupInternalRep($/;"	f	typeref:typename:void *
TclNativePathInFilesystem	generic/tclFileSystem.h	/^MODULE_SCOPE Tcl_FSPathInFilesystemProc TclNativePathInFilesystem;$/;"	v	typeref:typename:MODULE_SCOPE Tcl_FSPathInFilesystemProc
TclNativePathInFilesystem	generic/tclPathObj.c	/^TclNativePathInFilesystem($/;"	f	typeref:typename:int
TclNeedSpace	generic/tclIntDecls.h	/^#define TclNeedSpace /;"	d
TclNeedSpace	generic/tclUtil.c	/^TclNeedSpace($/;"	f	typeref:typename:int
TclNeqOpCmd	generic/tclInt.h	/^MODULE_SCOPE Tcl_ObjCmdProc TclNeqOpCmd;$/;"	v	typeref:typename:MODULE_SCOPE Tcl_ObjCmdProc
TclNewArithSeriesObj	generic/tclArithSeries.c	/^TclNewArithSeriesObj($/;"	f	typeref:typename:Tcl_Obj *
TclNewDoubleObj	generic/tclInt.h	/^#define TclNewDoubleObj(/;"	d
TclNewFSPathObj	generic/tclPathObj.c	/^TclNewFSPathObj($/;"	f	typeref:typename:Tcl_Obj *
TclNewIndexObj	generic/tclInt.h	/^#define TclNewIndexObj(/;"	d
TclNewInstNameObj	generic/tclDisassemble.c	/^TclNewInstNameObj($/;"	f	typeref:typename:Tcl_Obj *
TclNewInstanceMethod	generic/tclOOMethod.c	/^TclNewInstanceMethod($/;"	f	typeref:typename:Tcl_Method
TclNewIntObj	generic/tclInt.h	/^#define TclNewIntObj(/;"	d
TclNewListObj2	generic/tclListObj.c	/^TclNewListObj2($/;"	f	typeref:typename:Tcl_Obj *
TclNewLiteralStringObj	generic/tclInt.h	/^#define TclNewLiteralStringObj(/;"	d
TclNewMethod	generic/tclOOMethod.c	/^TclNewMethod($/;"	f	typeref:typename:Tcl_Method
TclNewNamespaceObj	generic/tclNamesp.c	/^TclNewNamespaceObj($/;"	f	typeref:typename:Tcl_Obj *
TclNewObj	generic/tclInt.h	/^# define TclNewObj(/;"	d
TclNewObjectInstanceCommon	generic/tclOO.c	/^TclNewObjectInstanceCommon($/;"	f	typeref:typename:Object *
TclNewProcBodyObj	generic/tclIntDecls.h	/^#define TclNewProcBodyObj /;"	d
TclNewProcBodyObj	generic/tclProc.c	/^TclNewProcBodyObj($/;"	f	typeref:typename:Tcl_Obj *
TclNewStringObj	generic/tclInt.h	/^#define TclNewStringObj(/;"	d
TclNewUIntObj	generic/tclInt.h	/^#define TclNewUIntObj(/;"	d
TclNiOpCmd	generic/tclInt.h	/^MODULE_SCOPE Tcl_ObjCmdProc TclNiOpCmd;$/;"	v	typeref:typename:MODULE_SCOPE Tcl_ObjCmdProc
TclNoErrorStack	generic/tclResult.c	/^TclNoErrorStack($/;"	f	typeref:typename:Tcl_Obj *
TclNoIdentOpCmd	generic/tclCompExpr.c	/^TclNoIdentOpCmd($/;"	f	typeref:typename:int
TclNoIdentOpCmd	generic/tclCompile.h	/^MODULE_SCOPE Tcl_ObjCmdProc	TclNoIdentOpCmd;$/;"	v	typeref:typename:MODULE_SCOPE Tcl_ObjCmdProc
TclNokia770Doubles	generic/tclStrToD.c	/^TclNokia770Doubles(void)$/;"	f	typeref:typename:int
TclNotOpCmd	generic/tclInt.h	/^MODULE_SCOPE Tcl_ObjCmdProc TclNotOpCmd;$/;"	v	typeref:typename:MODULE_SCOPE Tcl_ObjCmdProc
TclNsDecrRefCount	generic/tclNamesp.c	/^TclNsDecrRefCount($/;"	f	typeref:typename:void
TclNumUtfChars	generic/tclDecls.h	/^#define TclNumUtfChars /;"	d
TclNumUtfChars	generic/tclUtf.c	/^TclNumUtfChars($/;"	f	typeref:typename:Tcl_Size
TclNumUtfCharsM	generic/tclInt.h	/^#define TclNumUtfCharsM(/;"	d
TclOOAddToInstances	generic/tclOO.c	/^TclOOAddToInstances($/;"	f	typeref:typename:void
TclOOAddToMixinSubs	generic/tclOO.c	/^TclOOAddToMixinSubs($/;"	f	typeref:typename:void
TclOOAddToSubclasses	generic/tclOO.c	/^TclOOAddToSubclasses($/;"	f	typeref:typename:void
TclOOAllocClass	generic/tclOO.c	/^TclOOAllocClass($/;"	f	typeref:typename:Class *
TclOOCallChainFlags	generic/tclOOInt.h	/^enum TclOOCallChainFlags {$/;"	g
TclOOClassSetFilters	generic/tclOODefineCmds.c	/^TclOOClassSetFilters($/;"	f	typeref:typename:void
TclOOClassSetFilters	generic/tclOOIntDecls.h	/^#define TclOOClassSetFilters /;"	d
TclOOClassSetMixins	generic/tclOODefineCmds.c	/^TclOOClassSetMixins($/;"	f	typeref:typename:void
TclOOClassSetMixins	generic/tclOOIntDecls.h	/^#define TclOOClassSetMixins /;"	d
TclOOCopyObjectCmd	generic/tclOOBasic.c	/^TclOOCopyObjectCmd($/;"	f	typeref:typename:int
TclOOCopyObjectCmd	generic/tclOOInt.h	/^MODULE_SCOPE Tcl_ObjCmdProc	TclOOCopyObjectCmd;$/;"	v	typeref:typename:MODULE_SCOPE Tcl_ObjCmdProc
TclOODecrRefCount	generic/tclOO.c	/^TclOODecrRefCount($/;"	f	typeref:typename:int
TclOODefineClassObjCmd	generic/tclOODefineCmds.c	/^TclOODefineClassObjCmd($/;"	f	typeref:typename:int
TclOODefineClassObjCmd	generic/tclOOInt.h	/^MODULE_SCOPE Tcl_ObjCmdProc	TclOODefineClassObjCmd;$/;"	v	typeref:typename:MODULE_SCOPE Tcl_ObjCmdProc
TclOODefineConstructorObjCmd	generic/tclOODefineCmds.c	/^TclOODefineConstructorObjCmd($/;"	f	typeref:typename:int
TclOODefineConstructorObjCmd	generic/tclOOInt.h	/^MODULE_SCOPE Tcl_ObjCmdProc	TclOODefineConstructorObjCmd;$/;"	v	typeref:typename:MODULE_SCOPE Tcl_ObjCmdProc
TclOODefineDefnNsObjCmd	generic/tclOODefineCmds.c	/^TclOODefineDefnNsObjCmd($/;"	f	typeref:typename:int
TclOODefineDefnNsObjCmd	generic/tclOOInt.h	/^MODULE_SCOPE Tcl_ObjCmdProc	TclOODefineDefnNsObjCmd;$/;"	v	typeref:typename:MODULE_SCOPE Tcl_ObjCmdProc
TclOODefineDeleteMethodObjCmd	generic/tclOODefineCmds.c	/^TclOODefineDeleteMethodObjCmd($/;"	f	typeref:typename:int
TclOODefineDeleteMethodObjCmd	generic/tclOOInt.h	/^MODULE_SCOPE Tcl_ObjCmdProc	TclOODefineDeleteMethodObjCmd;$/;"	v	typeref:typename:MODULE_SCOPE Tcl_ObjCmdProc
TclOODefineDestructorObjCmd	generic/tclOODefineCmds.c	/^TclOODefineDestructorObjCmd($/;"	f	typeref:typename:int
TclOODefineDestructorObjCmd	generic/tclOOInt.h	/^MODULE_SCOPE Tcl_ObjCmdProc	TclOODefineDestructorObjCmd;$/;"	v	typeref:typename:MODULE_SCOPE Tcl_ObjCmdProc
TclOODefineExportObjCmd	generic/tclOODefineCmds.c	/^TclOODefineExportObjCmd($/;"	f	typeref:typename:int
TclOODefineExportObjCmd	generic/tclOOInt.h	/^MODULE_SCOPE Tcl_ObjCmdProc	TclOODefineExportObjCmd;$/;"	v	typeref:typename:MODULE_SCOPE Tcl_ObjCmdProc
TclOODefineForwardObjCmd	generic/tclOODefineCmds.c	/^TclOODefineForwardObjCmd($/;"	f	typeref:typename:int
TclOODefineForwardObjCmd	generic/tclOOInt.h	/^MODULE_SCOPE Tcl_ObjCmdProc	TclOODefineForwardObjCmd;$/;"	v	typeref:typename:MODULE_SCOPE Tcl_ObjCmdProc
TclOODefineMethodObjCmd	generic/tclOODefineCmds.c	/^TclOODefineMethodObjCmd($/;"	f	typeref:typename:int
TclOODefineMethodObjCmd	generic/tclOOInt.h	/^MODULE_SCOPE Tcl_ObjCmdProc	TclOODefineMethodObjCmd;$/;"	v	typeref:typename:MODULE_SCOPE Tcl_ObjCmdProc
TclOODefineObjCmd	generic/tclOODefineCmds.c	/^TclOODefineObjCmd($/;"	f	typeref:typename:int
TclOODefineObjCmd	generic/tclOOInt.h	/^MODULE_SCOPE Tcl_ObjCmdProc	TclOODefineObjCmd;$/;"	v	typeref:typename:MODULE_SCOPE Tcl_ObjCmdProc
TclOODefineObjSelfObjCmd	generic/tclOODefineCmds.c	/^TclOODefineObjSelfObjCmd($/;"	f	typeref:typename:int
TclOODefineObjSelfObjCmd	generic/tclOOInt.h	/^MODULE_SCOPE Tcl_ObjCmdProc	TclOODefineObjSelfObjCmd;$/;"	v	typeref:typename:MODULE_SCOPE Tcl_ObjCmdProc
TclOODefinePrivateObjCmd	generic/tclOODefineCmds.c	/^TclOODefinePrivateObjCmd($/;"	f	typeref:typename:int
TclOODefinePrivateObjCmd	generic/tclOOInt.h	/^MODULE_SCOPE Tcl_ObjCmdProc	TclOODefinePrivateObjCmd;$/;"	v	typeref:typename:MODULE_SCOPE Tcl_ObjCmdProc
TclOODefinePropertyCmd	generic/tclOOInt.h	/^MODULE_SCOPE Tcl_ObjCmdProc	TclOODefinePropertyCmd;$/;"	v	typeref:typename:MODULE_SCOPE Tcl_ObjCmdProc
TclOODefinePropertyCmd	generic/tclOOProp.c	/^TclOODefinePropertyCmd($/;"	f	typeref:typename:int
TclOODefineRenameMethodObjCmd	generic/tclOODefineCmds.c	/^TclOODefineRenameMethodObjCmd($/;"	f	typeref:typename:int
TclOODefineRenameMethodObjCmd	generic/tclOOInt.h	/^MODULE_SCOPE Tcl_ObjCmdProc	TclOODefineRenameMethodObjCmd;$/;"	v	typeref:typename:MODULE_SCOPE Tcl_ObjCmdProc
TclOODefineSelfObjCmd	generic/tclOODefineCmds.c	/^TclOODefineSelfObjCmd($/;"	f	typeref:typename:int
TclOODefineSelfObjCmd	generic/tclOOInt.h	/^MODULE_SCOPE Tcl_ObjCmdProc	TclOODefineSelfObjCmd;$/;"	v	typeref:typename:MODULE_SCOPE Tcl_ObjCmdProc
TclOODefineSlots	generic/tclOODefineCmds.c	/^TclOODefineSlots($/;"	f	typeref:typename:int
TclOODefineUnexportObjCmd	generic/tclOODefineCmds.c	/^TclOODefineUnexportObjCmd($/;"	f	typeref:typename:int
TclOODefineUnexportObjCmd	generic/tclOOInt.h	/^MODULE_SCOPE Tcl_ObjCmdProc	TclOODefineUnexportObjCmd;$/;"	v	typeref:typename:MODULE_SCOPE Tcl_ObjCmdProc
TclOODelMethodRef	generic/tclOOMethod.c	/^TclOODelMethodRef($/;"	f	typeref:typename:void
TclOODeleteChain	generic/tclOOCall.c	/^TclOODeleteChain($/;"	f	typeref:typename:void
TclOODeleteChainCache	generic/tclOOCall.c	/^TclOODeleteChainCache($/;"	f	typeref:typename:void
TclOODeleteContext	generic/tclOOCall.c	/^TclOODeleteContext($/;"	f	typeref:typename:void
TclOODeleteDescendants	generic/tclOO.c	/^TclOODeleteDescendants($/;"	f	typeref:typename:void
TclOOGetAllObjectProperties	generic/tclOOProp.c	/^TclOOGetAllObjectProperties($/;"	f	typeref:typename:Tcl_Obj *
TclOOGetCallContext	generic/tclOOCall.c	/^TclOOGetCallContext($/;"	f	typeref:typename:CallContext *
TclOOGetClassDefineCmdContext	generic/tclOODefineCmds.c	/^TclOOGetClassDefineCmdContext($/;"	f	typeref:typename:Class *
TclOOGetClassFromObj	generic/tclOOInfo.c	/^TclOOGetClassFromObj($/;"	f	typeref:typename:Class *
TclOOGetDefineCmdContext	generic/tclOODefineCmds.c	/^TclOOGetDefineCmdContext($/;"	f	typeref:typename:Tcl_Object
TclOOGetDefineCmdContext	generic/tclOOIntDecls.h	/^#define TclOOGetDefineCmdContext /;"	d
TclOOGetDefineContextNamespace	generic/tclOOCall.c	/^TclOOGetDefineContextNamespace($/;"	f	typeref:typename:Tcl_Namespace *
TclOOGetFoundation	generic/tclOO.c	/^TclOOGetFoundation($/;"	f	typeref:typename:Foundation *
TclOOGetFwdFromMethod	generic/tclOOMethod.c	/^TclOOGetFwdFromMethod($/;"	f	typeref:typename:Tcl_Obj *
TclOOGetMethodBody	generic/tclOOMethod.c	/^TclOOGetMethodBody($/;"	f	typeref:typename:Tcl_Obj *
TclOOGetProcFromMethod	generic/tclOOMethod.c	/^TclOOGetProcFromMethod($/;"	f	typeref:typename:Proc *
TclOOGetPropertyList	generic/tclOOProp.c	/^TclOOGetPropertyList($/;"	f	typeref:typename:Tcl_Obj *
TclOOGetSortedClassMethodList	generic/tclOOCall.c	/^TclOOGetSortedClassMethodList($/;"	f	typeref:typename:size_t
TclOOGetSortedMethodList	generic/tclOOCall.c	/^TclOOGetSortedMethodList($/;"	f	typeref:typename:int
TclOOGetStereotypeCallChain	generic/tclOOCall.c	/^TclOOGetStereotypeCallChain($/;"	f	typeref:typename:CallChain *
TclOOInfoClassPropCmd	generic/tclOOInt.h	/^MODULE_SCOPE Tcl_ObjCmdProc	TclOOInfoClassPropCmd;$/;"	v	typeref:typename:MODULE_SCOPE Tcl_ObjCmdProc
TclOOInfoClassPropCmd	generic/tclOOProp.c	/^TclOOInfoClassPropCmd($/;"	f	typeref:typename:int
TclOOInfoObjectPropCmd	generic/tclOOInt.h	/^MODULE_SCOPE Tcl_ObjCmdProc	TclOOInfoObjectPropCmd;$/;"	v	typeref:typename:MODULE_SCOPE Tcl_ObjCmdProc
TclOOInfoObjectPropCmd	generic/tclOOProp.c	/^TclOOInfoObjectPropCmd($/;"	f	typeref:typename:int
TclOOInit	generic/tclOO.c	/^TclOOInit($/;"	f	typeref:typename:int
TclOOInitInfo	generic/tclOOInfo.c	/^TclOOInitInfo($/;"	f	typeref:typename:void
TclOOInitializeStubs	generic/tclOO.h	/^#   define TclOOInitializeStubs(/;"	d
TclOOInitializeStubs	generic/tclOOStubLib.c	/^TclOOInitializeStubs($/;"	f	typeref:typename:MODULE_SCOPE const char *
TclOOInstallReadableProperties	generic/tclOOProp.c	/^TclOOInstallReadableProperties($/;"	f	typeref:typename:void
TclOOInstallStdPropertyImpls	generic/tclOOProp.c	/^TclOOInstallStdPropertyImpls($/;"	f	typeref:typename:int
TclOOInstallWritableProperties	generic/tclOOProp.c	/^TclOOInstallWritableProperties($/;"	f	typeref:typename:void
TclOOIntStubs	generic/tclOOIntDecls.h	/^typedef struct TclOOIntStubs {$/;"	s
TclOOIntStubs	generic/tclOOIntDecls.h	/^} TclOOIntStubs;$/;"	t	typeref:struct:TclOOIntStubs
TclOOInvokeContext	generic/tclOOCall.c	/^TclOOInvokeContext($/;"	f	typeref:typename:int
TclOOInvokeObject	generic/tclOO.c	/^TclOOInvokeObject($/;"	f	typeref:typename:int
TclOOInvokeObject	generic/tclOOIntDecls.h	/^#define TclOOInvokeObject /;"	d
TclOOIsReachable	generic/tclOO.c	/^TclOOIsReachable($/;"	f	typeref:typename:int
TclOOIsReachable	generic/tclOOIntDecls.h	/^#define TclOOIsReachable /;"	d
TclOOLookupObjectVar	generic/tclOOBasic.c	/^TclOOLookupObjectVar($/;"	f	typeref:typename:Tcl_Var
TclOOM	generic/tclInt.h	/^#define TclOOM(/;"	d
TclOOMakeProcInstanceMethod	generic/tclOOIntDecls.h	/^#define TclOOMakeProcInstanceMethod /;"	d
TclOOMakeProcInstanceMethod	generic/tclOOMethod.c	/^TclOOMakeProcInstanceMethod($/;"	f	typeref:typename:Tcl_Method
TclOOMakeProcMethod	generic/tclOOIntDecls.h	/^#define TclOOMakeProcMethod /;"	d
TclOOMakeProcMethod	generic/tclOOMethod.c	/^TclOOMakeProcMethod($/;"	f	typeref:typename:Tcl_Method
TclOOMetadataVersion	generic/tclOO.h	/^enum TclOOMetadataVersion {$/;"	g
TclOOMethodVersion	generic/tclOO.h	/^enum TclOOMethodVersion {$/;"	g
TclOOMethodVisibilityFlags	generic/tclOO.h	/^enum TclOOMethodVisibilityFlags {$/;"	g
TclOOMyClassObjCmd	generic/tclInt.h	/^MODULE_SCOPE Tcl_ObjCmdProc TclOOMyClassObjCmd;$/;"	v	typeref:typename:MODULE_SCOPE Tcl_ObjCmdProc
TclOOMyClassObjCmd	generic/tclOO.c	/^TclOOMyClassObjCmd($/;"	f	typeref:typename:int
TclOONewBasicMethod	generic/tclOOMethod.c	/^TclOONewBasicMethod($/;"	f	typeref:typename:void
TclOONewForwardInstanceMethod	generic/tclOOIntDecls.h	/^#define TclOONewForwardInstanceMethod /;"	d
TclOONewForwardInstanceMethod	generic/tclOOMethod.c	/^TclOONewForwardInstanceMethod($/;"	f	typeref:typename:Method *
TclOONewForwardMethod	generic/tclOOIntDecls.h	/^#define TclOONewForwardMethod /;"	d
TclOONewForwardMethod	generic/tclOOMethod.c	/^TclOONewForwardMethod($/;"	f	typeref:typename:Method *
TclOONewProcInstanceMethod	generic/tclOOIntDecls.h	/^#define TclOONewProcInstanceMethod /;"	d
TclOONewProcInstanceMethod	generic/tclOOMethod.c	/^TclOONewProcInstanceMethod($/;"	f	typeref:typename:Method *
TclOONewProcInstanceMethodEx	generic/tclOOIntDecls.h	/^#define TclOONewProcInstanceMethodEx /;"	d
TclOONewProcInstanceMethodEx	generic/tclOOMethod.c	/^TclOONewProcInstanceMethodEx($/;"	f	typeref:typename:Tcl_Method
TclOONewProcMethod	generic/tclOOIntDecls.h	/^#define TclOONewProcMethod /;"	d
TclOONewProcMethod	generic/tclOOMethod.c	/^TclOONewProcMethod($/;"	f	typeref:typename:Method *
TclOONewProcMethodEx	generic/tclOOIntDecls.h	/^#define TclOONewProcMethodEx /;"	d
TclOONewProcMethodEx	generic/tclOOMethod.c	/^TclOONewProcMethodEx($/;"	f	typeref:typename:Tcl_Method
TclOONextObjCmd	generic/tclOOBasic.c	/^TclOONextObjCmd($/;"	f	typeref:typename:int
TclOONextObjCmd	generic/tclOOInt.h	/^MODULE_SCOPE Tcl_ObjCmdProc	TclOONextObjCmd;$/;"	v	typeref:typename:MODULE_SCOPE Tcl_ObjCmdProc
TclOONextToObjCmd	generic/tclOOBasic.c	/^TclOONextToObjCmd($/;"	f	typeref:typename:int
TclOONextToObjCmd	generic/tclOOInt.h	/^MODULE_SCOPE Tcl_ObjCmdProc	TclOONextToObjCmd;$/;"	v	typeref:typename:MODULE_SCOPE Tcl_ObjCmdProc
TclOOObjDefObjCmd	generic/tclOODefineCmds.c	/^TclOOObjDefObjCmd($/;"	f	typeref:typename:int
TclOOObjDefObjCmd	generic/tclOOInt.h	/^MODULE_SCOPE Tcl_ObjCmdProc	TclOOObjDefObjCmd;$/;"	v	typeref:typename:MODULE_SCOPE Tcl_ObjCmdProc
TclOOObjectCmdCore	generic/tclOO.c	/^TclOOObjectCmdCore($/;"	f	typeref:typename:int
TclOOObjectCmdCore	generic/tclOOIntDecls.h	/^#define TclOOObjectCmdCore /;"	d
TclOOObjectDestroyed	generic/tclOO.c	/^TclOOObjectDestroyed($/;"	f	typeref:typename:int
TclOOObjectName	generic/tclOO.c	/^TclOOObjectName($/;"	f	typeref:typename:Tcl_Obj *
TclOOObjectSetFilters	generic/tclOODefineCmds.c	/^TclOOObjectSetFilters($/;"	f	typeref:typename:void
TclOOObjectSetFilters	generic/tclOOIntDecls.h	/^#define TclOOObjectSetFilters /;"	d
TclOOObjectSetMixins	generic/tclOODefineCmds.c	/^TclOOObjectSetMixins($/;"	f	typeref:typename:void
TclOOObjectSetMixins	generic/tclOOIntDecls.h	/^#define TclOOObjectSetMixins /;"	d
TclOOPrivateObjectCmd	generic/tclInt.h	/^MODULE_SCOPE Tcl_ObjCmdProc TclOOPrivateObjectCmd;$/;"	v	typeref:typename:MODULE_SCOPE Tcl_ObjCmdProc
TclOOPrivateObjectCmd	generic/tclOO.c	/^TclOOPrivateObjectCmd($/;"	f	typeref:typename:int
TclOOPublicObjectCmd	generic/tclInt.h	/^MODULE_SCOPE Tcl_ObjCmdProc TclOOPublicObjectCmd;$/;"	v	typeref:typename:MODULE_SCOPE Tcl_ObjCmdProc
TclOOPublicObjectCmd	generic/tclOO.c	/^TclOOPublicObjectCmd($/;"	f	typeref:typename:int
TclOORegisterInstanceProperty	generic/tclOODefineCmds.c	/^TclOORegisterInstanceProperty($/;"	f	typeref:typename:void
TclOORegisterProperty	generic/tclOODefineCmds.c	/^TclOORegisterProperty($/;"	f	typeref:typename:void
TclOOReleaseClassContents	generic/tclOO.c	/^TclOOReleaseClassContents($/;"	f	typeref:typename:void
TclOOReleasePropertyStorage	generic/tclOOProp.c	/^TclOOReleasePropertyStorage($/;"	f	typeref:typename:void
TclOORemoveFromInstances	generic/tclOO.c	/^TclOORemoveFromInstances($/;"	f	typeref:typename:int
TclOORemoveFromMixinSubs	generic/tclOO.c	/^TclOORemoveFromMixinSubs($/;"	f	typeref:typename:int
TclOORemoveFromMixins	generic/tclOO.c	/^TclOORemoveFromMixins($/;"	f	typeref:typename:int
TclOORemoveFromSubclasses	generic/tclOO.c	/^TclOORemoveFromSubclasses($/;"	f	typeref:typename:int
TclOORenderCallChain	generic/tclOOCall.c	/^TclOORenderCallChain($/;"	f	typeref:typename:Tcl_Obj *
TclOOSelfObjCmd	generic/tclOOBasic.c	/^TclOOSelfObjCmd($/;"	f	typeref:typename:int
TclOOSelfObjCmd	generic/tclOOInt.h	/^MODULE_SCOPE Tcl_ObjCmdProc	TclOOSelfObjCmd;$/;"	v	typeref:typename:MODULE_SCOPE Tcl_ObjCmdProc
TclOOSetupVariableResolver	generic/tclOOMethod.c	/^TclOOSetupVariableResolver($/;"	f	typeref:typename:void
TclOOStashContext	generic/tclOOCall.c	/^TclOOStashContext($/;"	f	typeref:typename:void
TclOOStubHooks	generic/tclOODecls.h	/^} TclOOStubHooks;$/;"	t	typeref:struct:__anon670f38f30108
TclOOStubs	generic/tclOODecls.h	/^typedef struct TclOOStubs {$/;"	s
TclOOStubs	generic/tclOODecls.h	/^} TclOOStubs;$/;"	t	typeref:struct:TclOOStubs
TclOOUnknownDefinition	generic/tclOODefineCmds.c	/^TclOOUnknownDefinition($/;"	f	typeref:typename:int
TclOOUnknownDefinition	generic/tclOOInt.h	/^MODULE_SCOPE Tcl_ObjCmdProc	TclOOUnknownDefinition;$/;"	v	typeref:typename:MODULE_SCOPE Tcl_ObjCmdProc
TclOO_Class_Constructor	generic/tclOOBasic.c	/^TclOO_Class_Constructor($/;"	f	typeref:typename:int
TclOO_Class_Constructor	generic/tclOOInt.h	/^MODULE_SCOPE Tcl_MethodCallProc	TclOO_Class_Constructor;$/;"	v	typeref:typename:MODULE_SCOPE Tcl_MethodCallProc
TclOO_Class_Create	generic/tclOOBasic.c	/^TclOO_Class_Create($/;"	f	typeref:typename:int
TclOO_Class_Create	generic/tclOOInt.h	/^MODULE_SCOPE Tcl_MethodCallProc	TclOO_Class_Create;$/;"	v	typeref:typename:MODULE_SCOPE Tcl_MethodCallProc
TclOO_Class_CreateNs	generic/tclOOBasic.c	/^TclOO_Class_CreateNs($/;"	f	typeref:typename:int
TclOO_Class_CreateNs	generic/tclOOInt.h	/^MODULE_SCOPE Tcl_MethodCallProc	TclOO_Class_CreateNs;$/;"	v	typeref:typename:MODULE_SCOPE Tcl_MethodCallProc
TclOO_Class_New	generic/tclOOBasic.c	/^TclOO_Class_New($/;"	f	typeref:typename:int
TclOO_Class_New	generic/tclOOInt.h	/^MODULE_SCOPE Tcl_MethodCallProc	TclOO_Class_New;$/;"	v	typeref:typename:MODULE_SCOPE Tcl_MethodCallProc
TclOO_Configurable_Configure	generic/tclOOInt.h	/^MODULE_SCOPE Tcl_MethodCallProc TclOO_Configurable_Configure;$/;"	v	typeref:typename:MODULE_SCOPE Tcl_MethodCallProc
TclOO_Configurable_Configure	generic/tclOOProp.c	/^TclOO_Configurable_Configure($/;"	f	typeref:typename:int
TclOO_Object_Destroy	generic/tclOOBasic.c	/^TclOO_Object_Destroy($/;"	f	typeref:typename:int
TclOO_Object_Destroy	generic/tclOOInt.h	/^MODULE_SCOPE Tcl_MethodCallProc	TclOO_Object_Destroy;$/;"	v	typeref:typename:MODULE_SCOPE Tcl_MethodCallProc
TclOO_Object_Eval	generic/tclOOBasic.c	/^TclOO_Object_Eval($/;"	f	typeref:typename:int
TclOO_Object_Eval	generic/tclOOInt.h	/^MODULE_SCOPE Tcl_MethodCallProc	TclOO_Object_Eval;$/;"	v	typeref:typename:MODULE_SCOPE Tcl_MethodCallProc
TclOO_Object_LinkVar	generic/tclOOBasic.c	/^TclOO_Object_LinkVar($/;"	f	typeref:typename:int
TclOO_Object_LinkVar	generic/tclOOInt.h	/^MODULE_SCOPE Tcl_MethodCallProc	TclOO_Object_LinkVar;$/;"	v	typeref:typename:MODULE_SCOPE Tcl_MethodCallProc
TclOO_Object_Unknown	generic/tclOOBasic.c	/^TclOO_Object_Unknown($/;"	f	typeref:typename:int
TclOO_Object_Unknown	generic/tclOOInt.h	/^MODULE_SCOPE Tcl_MethodCallProc	TclOO_Object_Unknown;$/;"	v	typeref:typename:MODULE_SCOPE Tcl_MethodCallProc
TclOO_Object_VarName	generic/tclOOBasic.c	/^TclOO_Object_VarName($/;"	f	typeref:typename:int
TclOO_Object_VarName	generic/tclOOInt.h	/^MODULE_SCOPE Tcl_MethodCallProc	TclOO_Object_VarName;$/;"	v	typeref:typename:MODULE_SCOPE Tcl_MethodCallProc
TclOO_PmCDCloneProc	generic/tclOOInt.h	/^typedef void *(TclOO_PmCDCloneProc)(void *clientData);$/;"	t	typeref:typename:void * ()(void * clientData)
TclOO_PmCDDeleteProc	generic/tclOOInt.h	/^typedef void (TclOO_PmCDDeleteProc)(void *clientData);$/;"	t	typeref:typename:void ()(void * clientData)
TclOO_PostCallProc	generic/tclOOInt.h	/^typedef int (TclOO_PostCallProc)(void *clientData, Tcl_Interp *interp,$/;"	t	typeref:typename:int ()(void * clientData,Tcl_Interp * interp,Tcl_ObjectContext context,Tcl_Namespace * namespacePtr,int result)
TclOO_PreCallProc	generic/tclOOInt.h	/^typedef int (TclOO_PreCallProc)(void *clientData, Tcl_Interp *interp,$/;"	t	typeref:typename:int ()(void * clientData,Tcl_Interp * interp,Tcl_ObjectContext context,Tcl_CallFrame * framePtr,int * isFinished)
TclOSclosedir	unix/tclUnixPort.h	/^#   define TclOSclosedir	/;"	d
TclOSfstat	unix/tclUnixFile.c	/^TclOSfstat($/;"	f	typeref:typename:int
TclOSfstat	unix/tclUnixPort.h	/^#   define TclOSfstat(/;"	d
TclOSlstat	unix/tclUnixFile.c	/^TclOSlstat($/;"	f	typeref:typename:int
TclOSlstat	unix/tclUnixPort.h	/^#   define TclOSlstat	/;"	d
TclOSlstat	unix/tclUnixPort.h	/^#   define TclOSlstat(/;"	d
TclOSopen	unix/tclUnixPort.h	/^#   define TclOSopen	/;"	d
TclOSopendir	unix/tclUnixPort.h	/^#   define TclOSopendir	/;"	d
TclOSreaddir	unix/tclUnixPort.h	/^#   define TclOSreaddir	/;"	d
TclOSrewinddir	unix/tclUnixPort.h	/^#   define TclOSrewinddir	/;"	d
TclOSseek	unix/tclUnixPort.h	/^#   define TclOSseek	/;"	d
TclOSstat	unix/tclUnixFile.c	/^TclOSstat($/;"	f	typeref:typename:int
TclOSstat	unix/tclUnixPort.h	/^#   define TclOSstat(/;"	d
TclObjBeingDeleted	generic/tclIntDecls.h	/^#define TclObjBeingDeleted /;"	d
TclObjBeingDeleted	generic/tclObj.c	/^TclObjBeingDeleted($/;"	f	typeref:typename:int
TclObjCallVarTraces	generic/tclTrace.c	/^TclObjCallVarTraces($/;"	f	typeref:typename:int
TclObjCommandComplete	generic/tclIntDecls.h	/^#define TclObjCommandComplete /;"	d
TclObjCommandComplete	generic/tclParse.c	/^TclObjCommandComplete($/;"	f	typeref:typename:int
TclObjGetFrame	generic/tclIntDecls.h	/^#define TclObjGetFrame /;"	d
TclObjGetFrame	generic/tclProc.c	/^TclObjGetFrame($/;"	f	typeref:typename:int
TclObjInterface	generic/tclObj.c	/^TclObjInterface(Tcl_Obj *objPtr) {$/;"	f	typeref:typename:ObjInterface *
TclObjInterfaceGetListIndex	generic/tclObj.c	/^int (*TclObjInterfaceGetListIndex (Tcl_Obj *objPtr))$/;"	f	typeref:typename:int (*)(tclObjTypeInterfaceArgsListIndex)
TclObjInterpProc	generic/tclIntDecls.h	/^#define TclObjInterpProc /;"	d
TclObjInterpProc	generic/tclProc.c	/^TclObjInterpProc($/;"	f	typeref:typename:int
TclObjInterpProc2	generic/tclIntDecls.h	/^#define TclObjInterpProc2 /;"	d
TclObjInvoke	generic/tclBasic.c	/^TclObjInvoke($/;"	f	typeref:typename:int
TclObjInvoke	generic/tclIntDecls.h	/^#define TclObjInvoke /;"	d
TclObjInvokeNamespace	generic/tclBasic.c	/^TclObjInvokeNamespace($/;"	f	typeref:typename:int
TclObjLookupVar	generic/tclIntDecls.h	/^#define TclObjLookupVar /;"	d
TclObjLookupVar	generic/tclVar.c	/^TclObjLookupVar($/;"	f	typeref:typename:Var *
TclObjLookupVarEx	generic/tclVar.c	/^TclObjLookupVarEx($/;"	f	typeref:typename:Var *
TclObjTest_Init	generic/tclInt.h	/^MODULE_SCOPE Tcl_LibraryInitProc TclObjTest_Init;$/;"	v	typeref:typename:MODULE_SCOPE Tcl_LibraryInitProc
TclObjTest_Init	generic/tclTestObj.c	/^TclObjTest_Init($/;"	f	typeref:typename:int
TclObjTypeName	generic/tclObj.c	/^const char *TclObjTypeName($/;"	f	typeref:typename:const char *
TclObjTypeVersion	generic/tclObj.c	/^int TclObjTypeVersion ($/;"	f	typeref:typename:int
TclObjUnsetVar2	generic/tclVar.c	/^TclObjUnsetVar2($/;"	f	typeref:typename:int
TclObjVarErrMsg	generic/tclVar.c	/^TclObjVarErrMsg($/;"	f	typeref:typename:void
TclObjectDispatch	generic/tclInt.h	/^#define TclObjectDispatch(/;"	d
TclObjectDispatchNoDefault	generic/tclInt.h	/^#define TclObjectDispatchNoDefault(/;"	d
TclObjectHasInterface	generic/tclInt.h	/^#define TclObjectHasInterface(/;"	d
TclObjectInterfaceCall	generic/tclInt.h	/^#define TclObjectInterfaceCall(/;"	d
TclObjectTypeType	generic/tclInt.h	/^typedef struct TclObjectTypeType {$/;"	s
TclObjectTypeType	generic/tclInt.h	/^} TclObjectTypeType;$/;"	t	typeref:struct:TclObjectTypeType
TclOpCmdClientData	generic/tclCompile.h	/^} TclOpCmdClientData;$/;"	t	typeref:struct:__anone79d5a530808
TclOpenFileChannelProc_	generic/tclInt.h	/^typedef Tcl_Channel (TclOpenFileChannelProc_)(Tcl_Interp *interp,$/;"	t	typeref:typename:Tcl_Channel ()(Tcl_Interp * interp,const char * fileName,const char * modeString,int permissions)
TclOptimizeBytecode	generic/tclOptimize.c	/^TclOptimizeBytecode($/;"	f	typeref:typename:void
TclOrOpCmd	generic/tclInt.h	/^MODULE_SCOPE Tcl_ObjCmdProc TclOrOpCmd;$/;"	v	typeref:typename:MODULE_SCOPE Tcl_ObjCmdProc
TclParseAllWhiteSpace	generic/tclParse.c	/^TclParseAllWhiteSpace($/;"	f	typeref:typename:Tcl_Size
TclParseArgsObjv	generic/tclDecls.h	/^#define TclParseArgsObjv /;"	d
TclParseArgsObjv	generic/tclStubInit.c	/^# define TclParseArgsObjv /;"	d	file:
TclParseBackslash	generic/tclParse.c	/^TclParseBackslash($/;"	f	typeref:typename:int
TclParseInit	generic/tclParse.c	/^TclParseInit($/;"	f	typeref:typename:void
TclParseNumber	generic/tclStrToD.c	/^TclParseNumber($/;"	f	typeref:typename:int
TclPathPart	generic/tclPathObj.c	/^TclPathPart($/;"	f	typeref:typename:Tcl_Obj *
TclPipeThreadCreateTI	win/tclWinPipe.c	/^TclPipeThreadCreateTI($/;"	f	typeref:typename:TclPipeThreadInfo *
TclPipeThreadExit	win/tclWinPipe.c	/^TclPipeThreadExit($/;"	f	typeref:typename:void
TclPipeThreadInfo	win/tclWinInt.h	/^typedef struct TclPipeThreadInfo {$/;"	s
TclPipeThreadInfo	win/tclWinInt.h	/^} TclPipeThreadInfo;$/;"	t	typeref:struct:TclPipeThreadInfo
TclPipeThreadIsAlive	win/tclWinInt.h	/^TclPipeThreadIsAlive($/;"	f	typeref:typename:int
TclPipeThreadSignal	win/tclWinInt.h	/^TclPipeThreadSignal($/;"	f	typeref:typename:void
TclPipeThreadStop	win/tclWinPipe.c	/^TclPipeThreadStop($/;"	f	typeref:typename:void
TclPipeThreadStopSignal	win/tclWinPipe.c	/^TclPipeThreadStopSignal($/;"	f	typeref:typename:int
TclPipeThreadWaitForSignal	win/tclWinPipe.c	/^TclPipeThreadWaitForSignal($/;"	f	typeref:typename:int
TclPkgFileSeen	generic/tclPkg.c	/^TclPkgFileSeen($/;"	f	typeref:typename:void
TclPlatStubs	generic/tclPlatDecls.h	/^typedef struct TclPlatStubs {$/;"	s
TclPlatStubs	generic/tclPlatDecls.h	/^} TclPlatStubs;$/;"	t	typeref:struct:TclPlatStubs
TclPlatformType	generic/tclInt.h	/^} TclPlatformType;$/;"	t	typeref:enum:__anon1eb6b3550b03
TclPopStackFrame	generic/tclIntDecls.h	/^#define TclPopStackFrame /;"	d
TclPopStackFrame	generic/tclNamesp.c	/^TclPopStackFrame($/;"	f	typeref:typename:void
TclPowOpCmd	generic/tclInt.h	/^MODULE_SCOPE Tcl_ObjCmdProc TclPowOpCmd;$/;"	v	typeref:typename:MODULE_SCOPE Tcl_ObjCmdProc
TclPreserveByteCode	generic/tclCompile.c	/^TclPreserveByteCode($/;"	f	typeref:typename:void
TclPreventAliasLoop	generic/tclIntDecls.h	/^#define TclPreventAliasLoop /;"	d
TclPreventAliasLoop	generic/tclInterp.c	/^TclPreventAliasLoop($/;"	f	typeref:typename:int
TclPrintInstruction	generic/tclDisassemble.c	/^TclPrintInstruction($/;"	f	typeref:typename:int
TclPrintObject	generic/tclDisassemble.c	/^TclPrintObject($/;"	f	typeref:typename:void
TclPrintSource	generic/tclDisassemble.c	/^TclPrintSource($/;"	f	typeref:typename:void
TclProcCleanupProc	generic/tclIntDecls.h	/^#define TclProcCleanupProc /;"	d
TclProcCleanupProc	generic/tclProc.c	/^TclProcCleanupProc($/;"	f	typeref:typename:void
TclProcCompileProc	generic/tclIntDecls.h	/^#define TclProcCompileProc /;"	d
TclProcCompileProc	generic/tclProc.c	/^TclProcCompileProc($/;"	f	typeref:typename:int
TclProcDeleteProc	generic/tclIntDecls.h	/^#define TclProcDeleteProc /;"	d
TclProcDeleteProc	generic/tclProc.c	/^TclProcDeleteProc($/;"	f	typeref:typename:void
TclProcInit	generic/tclProc.c	/^void TclProcInit(void) {$/;"	f	typeref:typename:void
TclProcessCreated	generic/tclProcess.c	/^TclProcessCreated($/;"	f	typeref:typename:void
TclProcessReturn	generic/tclResult.c	/^TclProcessReturn($/;"	f	typeref:typename:int
TclProcessWait	generic/tclProcess.c	/^TclProcessWait($/;"	f	typeref:typename:TclProcessWaitStatus
TclProcessWaitStatus	generic/tclInt.h	/^typedef enum TclProcessWaitStatus {$/;"	g
TclProcessWaitStatus	generic/tclInt.h	/^} TclProcessWaitStatus;$/;"	t	typeref:enum:TclProcessWaitStatus
TclPtrGetVar	generic/tclIntDecls.h	/^#define TclPtrGetVar /;"	d
TclPtrGetVar	generic/tclVar.c	/^TclPtrGetVar($/;"	f	typeref:typename:Tcl_Obj *
TclPtrGetVarIdx	generic/tclVar.c	/^TclPtrGetVarIdx($/;"	f	typeref:typename:Tcl_Obj *
TclPtrIncrObjVar	generic/tclIntDecls.h	/^#define TclPtrIncrObjVar /;"	d
TclPtrIncrObjVar	generic/tclVar.c	/^TclPtrIncrObjVar($/;"	f	typeref:typename:Tcl_Obj *
TclPtrIncrObjVarIdx	generic/tclVar.c	/^TclPtrIncrObjVarIdx($/;"	f	typeref:typename:Tcl_Obj *
TclPtrMakeUpvar	generic/tclIntDecls.h	/^#define TclPtrMakeUpvar /;"	d
TclPtrMakeUpvar	generic/tclVar.c	/^TclPtrMakeUpvar($/;"	f	typeref:typename:int
TclPtrObjMakeUpvar	generic/tclIntDecls.h	/^#define TclPtrObjMakeUpvar /;"	d
TclPtrObjMakeUpvar	generic/tclVar.c	/^TclPtrObjMakeUpvar($/;"	f	typeref:typename:int
TclPtrObjMakeUpvarIdx	generic/tclVar.c	/^TclPtrObjMakeUpvarIdx($/;"	f	typeref:typename:int
TclPtrSetVar	generic/tclIntDecls.h	/^#define TclPtrSetVar /;"	d
TclPtrSetVar	generic/tclVar.c	/^TclPtrSetVar($/;"	f	typeref:typename:Tcl_Obj *
TclPtrSetVarIdx	generic/tclVar.c	/^TclPtrSetVarIdx($/;"	f	typeref:typename:Tcl_Obj *
TclPtrUnsetVar	generic/tclIntDecls.h	/^#define TclPtrUnsetVar /;"	d
TclPtrUnsetVar	generic/tclVar.c	/^TclPtrUnsetVar($/;"	f	typeref:typename:int
TclPtrUnsetVarIdx	generic/tclVar.c	/^TclPtrUnsetVarIdx($/;"	f	typeref:typename:int
TclPushProcCallFrame	generic/tclProc.c	/^TclPushProcCallFrame($/;"	f	typeref:typename:int
TclPushStackFrame	generic/tclIntDecls.h	/^#define TclPushStackFrame /;"	d
TclPushStackFrame	generic/tclNamesp.c	/^TclPushStackFrame($/;"	f	typeref:typename:int
TclPushTailcallPoint	generic/tclBasic.c	/^TclPushTailcallPoint($/;"	f	typeref:typename:void
TclPushVarName	generic/tclCompCmds.c	/^TclPushVarName($/;"	f	typeref:typename:void
TclReToGlob	generic/tclUtil.c	/^TclReToGlob($/;"	f	typeref:typename:int
TclReallocElemsEx	generic/tclCkalloc.c	/^TclReallocElemsEx($/;"	f	typeref:typename:void *
TclReallocEx	generic/tclInt.h	/^TclReallocEx($/;"	f	typeref:typename:void *
TclRegAbout	generic/tclIntDecls.h	/^#define TclRegAbout /;"	d
TclRegAbout	generic/tclRegexp.c	/^TclRegAbout($/;"	f	typeref:typename:int
TclRegError	generic/tclIntDecls.h	/^#define TclRegError /;"	d
TclRegError	generic/tclRegexp.c	/^TclRegError($/;"	f	typeref:typename:void
TclRegExpRangeUniChar	generic/tclIntDecls.h	/^#define TclRegExpRangeUniChar /;"	d
TclRegExpRangeUniChar	generic/tclRegexp.c	/^TclRegExpRangeUniChar($/;"	f	typeref:typename:void
TclRegexp	generic/tclRegexp.h	/^typedef struct TclRegexp {$/;"	s
TclRegexp	generic/tclRegexp.h	/^} TclRegexp;$/;"	t	typeref:struct:TclRegexp
TclRegisterCommandTypeName	generic/tclBasic.c	/^TclRegisterCommandTypeName($/;"	f	typeref:typename:void
TclRegisterDStringLiteral	generic/tclCompile.h	/^#define TclRegisterDStringLiteral(/;"	d
TclRegisterLiteral	generic/tclIntDecls.h	/^#define TclRegisterLiteral /;"	d
TclRegisterLiteral	generic/tclLiteral.c	/^TclRegisterLiteral($/;"	f	typeref:typename:int
TclReleaseByteCode	generic/tclCompile.c	/^TclReleaseByteCode($/;"	f	typeref:typename:void
TclReleaseLiteral	generic/tclLiteral.c	/^TclReleaseLiteral($/;"	f	typeref:typename:void
TclRememberCondition	generic/tclThread.c	/^TclRememberCondition($/;"	f	typeref:typename:void
TclRememberJoinableThread	generic/tclThreadJoin.c	/^TclRememberJoinableThread($/;"	f	typeref:typename:void
TclRememberMutex	generic/tclThread.c	/^TclRememberMutex($/;"	f	typeref:typename:void
TclRemoveScriptLimitCallbacks	generic/tclInterp.c	/^TclRemoveScriptLimitCallbacks($/;"	f	typeref:typename:void
TclRenameCommand	generic/tclBasic.c	/^TclRenameCommand($/;"	f	typeref:typename:int
TclRenameCommand	generic/tclIntDecls.h	/^#define TclRenameCommand /;"	d
TclResetCancellation	generic/tclBasic.c	/^TclResetCancellation($/;"	f	typeref:typename:int
TclResetCancellation	generic/tclIntDecls.h	/^#define TclResetCancellation /;"	d
TclResetFilesystem	generic/tclIOUtil.c	/^TclResetFilesystem(void)$/;"	f	typeref:typename:void
TclResetRewriteEnsemble	generic/tclEnsemble.c	/^TclResetRewriteEnsemble($/;"	f	typeref:typename:void
TclResetRewriteEnsemble	generic/tclIntDecls.h	/^#define TclResetRewriteEnsemble /;"	d
TclResetShadowedCmdRefs	generic/tclIntDecls.h	/^#define TclResetShadowedCmdRefs /;"	d
TclResetShadowedCmdRefs	generic/tclNamesp.c	/^TclResetShadowedCmdRefs($/;"	f	typeref:typename:void
TclResolveTildePath	generic/tclPathObj.c	/^TclResolveTildePath($/;"	f	typeref:typename:Tcl_Obj *
TclResolveTildePathList	generic/tclPathObj.c	/^TclResolveTildePathList($/;"	f	typeref:typename:Tcl_Obj *
TclRoutineAssign	generic/tclInt.h	/^#define TclRoutineAssign(/;"	d
TclRoutineHasName	generic/tclInt.h	/^#define TclRoutineHasName(/;"	d
TclRshiftOpCmd	generic/tclInt.h	/^MODULE_SCOPE Tcl_ObjCmdProc TclRshiftOpCmd;$/;"	v	typeref:typename:MODULE_SCOPE Tcl_ObjCmdProc
TclScaleTime	generic/tclInt.h	/^TclScaleTime($/;"	f	typeref:typename:void
TclScanElement	generic/tclUtil.c	/^TclScanElement($/;"	f	typeref:typename:Tcl_Size
TclServiceIdle	generic/tclIntDecls.h	/^#define TclServiceIdle /;"	d
TclServiceIdle	generic/tclTimer.c	/^TclServiceIdle(void)$/;"	f	typeref:typename:int
TclSetAppContext	unix/tclXtNotify.c	/^TclSetAppContext($/;"	f	typeref:typename:XtAppContext
TclSetBgErrorHandler	generic/tclEvent.c	/^TclSetBgErrorHandler($/;"	f	typeref:typename:void
TclSetBignumInternalRep	generic/tclObj.c	/^TclSetBignumInternalRep($/;"	f	typeref:typename:void
TclSetBooleanFromAny	generic/tclObj.c	/^TclSetBooleanFromAny($/;"	f	typeref:typename:int
TclSetByteCodeFromAny	generic/tclCompile.c	/^TclSetByteCodeFromAny($/;"	f	typeref:typename:int
TclSetByteCodeFromAny	generic/tclIntDecls.h	/^#define TclSetByteCodeFromAny /;"	d
TclSetCancelFlags	generic/tclInt.h	/^#define TclSetCancelFlags(/;"	d
TclSetChildCancelFlags	generic/tclIntDecls.h	/^#define TclSetChildCancelFlags /;"	d
TclSetChildCancelFlags	generic/tclInterp.c	/^TclSetChildCancelFlags($/;"	f	typeref:typename:void
TclSetCmdNameObj	generic/tclObj.c	/^TclSetCmdNameObj($/;"	f	typeref:typename:void
TclSetDoubleObj	generic/tclInt.h	/^#define TclSetDoubleObj(/;"	d
TclSetDuplicateObj	generic/tclObj.c	/^TclSetDuplicateObj($/;"	f	typeref:typename:void
TclSetEnv	generic/tclEnv.c	/^TclSetEnv($/;"	f	typeref:typename:void
TclSetFileAttrProc	generic/tclInt.h	/^typedef int (TclSetFileAttrProc)(Tcl_Interp *interp, int objIndex,$/;"	t	typeref:typename:int ()(Tcl_Interp * interp,int objIndex,Tcl_Obj * fileName,Tcl_Obj * attrObjPtr)
TclSetIntObj	generic/tclInt.h	/^#define TclSetIntObj(/;"	d
TclSetListFromAny	generic/tclListObj.c	/^TclSetListFromAny($/;"	f	typeref:typename:int
TclSetNsPath	generic/tclIntDecls.h	/^#define TclSetNsPath /;"	d
TclSetNsPath	generic/tclNamesp.c	/^TclSetNsPath($/;"	f	typeref:typename:void
TclSetObjNameOfExecutable	generic/tclIntDecls.h	/^#define TclSetObjNameOfExecutable /;"	d
TclSetObjNameOfExecutable	generic/tclUtil.c	/^TclSetObjNameOfExecutable($/;"	f	typeref:typename:void
TclSetObjRef	generic/tclStrIdxTree.h	/^#define TclSetObjRef(/;"	d
TclSetProcessGlobalValue	generic/tclUtil.c	/^TclSetProcessGlobalValue($/;"	f	typeref:typename:void
TclSetStackDepth	generic/tclCompile.h	/^#define TclSetStackDepth(/;"	d
TclSetTailcall	generic/tclBasic.c	/^TclSetTailcall($/;"	f	typeref:typename:void
TclSetVarArray	generic/tclInt.h	/^#define TclSetVarArray(/;"	d
TclSetVarArrayElement	generic/tclInt.h	/^#define TclSetVarArrayElement(/;"	d
TclSetVarConstant	generic/tclInt.h	/^#define TclSetVarConstant(/;"	d
TclSetVarLink	generic/tclInt.h	/^#define TclSetVarLink(/;"	d
TclSetVarNamespaceVar	generic/tclInt.h	/^#define TclSetVarNamespaceVar(/;"	d
TclSetVarScalar	generic/tclInt.h	/^#define TclSetVarScalar(/;"	d
TclSetVarTraceActive	generic/tclInt.h	/^#define TclSetVarTraceActive(/;"	d
TclSetVarUndefined	generic/tclInt.h	/^#define TclSetVarUndefined(/;"	d
TclSetupEnv	generic/tclEnv.c	/^TclSetupEnv($/;"	f	typeref:typename:void
TclSetupEnv	generic/tclIntDecls.h	/^#define TclSetupEnv /;"	d
TclSignalExitThread	generic/tclThreadJoin.c	/^TclSignalExitThread($/;"	f	typeref:typename:void
TclSingleOpCmd	generic/tclCompExpr.c	/^TclSingleOpCmd($/;"	f	typeref:typename:int
TclSingleOpCmd	generic/tclCompile.h	/^MODULE_SCOPE Tcl_ObjCmdProc	TclSingleOpCmd;$/;"	v	typeref:typename:MODULE_SCOPE Tcl_ObjCmdProc
TclSkipTailcall	generic/tclBasic.c	/^TclSkipTailcall($/;"	f	typeref:typename:void
TclSmallAlloc	generic/tclInt.h	/^#define TclSmallAlloc(/;"	d
TclSmallAllocEx	generic/tclInt.h	/^#define TclSmallAllocEx(/;"	d
TclSmallFree	generic/tclInt.h	/^#define TclSmallFree(/;"	d
TclSmallFreeEx	generic/tclInt.h	/^#define TclSmallFreeEx(/;"	d
TclSockGetPort	generic/tclIOSock.c	/^TclSockGetPort($/;"	f	typeref:typename:int
TclSockGetPort	generic/tclIntDecls.h	/^#define TclSockGetPort /;"	d
TclSockMinimumBuffers	generic/tclIOSock.c	/^TclSockMinimumBuffers($/;"	f	typeref:typename:int
TclSockMinimumBuffers	generic/tclIntDecls.h	/^#define TclSockMinimumBuffers /;"	d
TclSocketMessages	win/tclWinSock.c	/^enum TclSocketMessages {$/;"	g	file:
TclSortingOpCmd	generic/tclCompExpr.c	/^TclSortingOpCmd($/;"	f	typeref:typename:int
TclSortingOpCmd	generic/tclCompile.h	/^MODULE_SCOPE Tcl_ObjCmdProc	TclSortingOpCmd;$/;"	v	typeref:typename:MODULE_SCOPE Tcl_ObjCmdProc
TclSpellFix	generic/tclEnsemble.c	/^TclSpellFix($/;"	f	typeref:typename:void
TclSpliceIn	generic/tclInt.h	/^#define TclSpliceIn(/;"	d
TclSpliceOut	generic/tclInt.h	/^#define TclSpliceOut(/;"	d
TclSplitList	generic/tclDecls.h	/^#define TclSplitList /;"	d
TclSplitList	generic/tclStubInit.c	/^# define TclSplitList /;"	d	file:
TclSplitPath	generic/tclDecls.h	/^#define TclSplitPath /;"	d
TclSplitPath	generic/tclStubInit.c	/^# define TclSplitPath /;"	d	file:
TclStackAlloc	generic/tclExecute.c	/^TclStackAlloc($/;"	f	typeref:typename:void *
TclStackAlloc	generic/tclIntDecls.h	/^#define TclStackAlloc /;"	d
TclStackFree	generic/tclExecute.c	/^TclStackFree($/;"	f	typeref:typename:void
TclStackFree	generic/tclIntDecls.h	/^#define TclStackFree /;"	d
TclStackRealloc	generic/tclExecute.c	/^TclStackRealloc($/;"	f	typeref:typename:void *
TclStatProc_	generic/tclInt.h	/^typedef int (TclStatProc_)(const char *path, struct stat *buf);$/;"	t	typeref:typename:int ()(const char * path,struct stat * buf)
TclStaticLibrary	generic/tclIntDecls.h	/^#define TclStaticLibrary /;"	d
TclStaticLibrary	generic/tclStubInit.c	/^#define TclStaticLibrary /;"	d	file:
TclStoreInt1AtPtr	generic/tclCompile.h	/^#define TclStoreInt1AtPtr(/;"	d
TclStoreInt4AtPtr	generic/tclCompile.h	/^#define TclStoreInt4AtPtr(/;"	d
TclStrIdx	generic/tclStrIdxTree.h	/^struct TclStrIdx {$/;"	s
TclStrIdx	generic/tclStrIdxTree.h	/^typedef struct TclStrIdx TclStrIdx;$/;"	t	typeref:struct:TclStrIdx
TclStrIdxTree	generic/tclStrIdxTree.h	/^typedef struct TclStrIdxTree {$/;"	s
TclStrIdxTree	generic/tclStrIdxTree.h	/^} TclStrIdxTree;$/;"	t	typeref:struct:TclStrIdxTree
TclStrIdxTreeAppend	generic/tclStrIdxTree.c	/^TclStrIdxTreeAppend($/;"	f	typeref:typename:void	file:
TclStrIdxTreeBuildFromList	generic/tclStrIdxTree.c	/^TclStrIdxTreeBuildFromList($/;"	f	typeref:typename:int
TclStrIdxTreeFree	generic/tclStrIdxTree.c	/^TclStrIdxTreeFree($/;"	f	typeref:typename:void
TclStrIdxTreeGetFromObj	generic/tclStrIdxTree.c	/^TclStrIdxTreeGetFromObj($/;"	f	typeref:typename:TclStrIdxTree *
TclStrIdxTreeInsertBranch	generic/tclStrIdxTree.c	/^TclStrIdxTreeInsertBranch($/;"	f	typeref:typename:void	file:
TclStrIdxTreeNewObj	generic/tclStrIdxTree.c	/^TclStrIdxTreeNewObj(void)$/;"	f	typeref:typename:Tcl_Obj *
TclStrIdxTreePrint	generic/tclStrIdxTree.c	/^TclStrIdxTreePrint($/;"	f	typeref:typename:void	file:
TclStrIdxTreeSearch	generic/tclStrIdxTree.c	/^TclStrIdxTreeSearch($/;"	f	typeref:typename:const char *
TclStrIdxTreeTestObjCmd	generic/tclStrIdxTree.c	/^TclStrIdxTreeTestObjCmd($/;"	f	typeref:typename:int
TclStrIdxTreeTestObjCmd	generic/tclStrIdxTree.h	/^MODULE_SCOPE Tcl_ObjCmdProc TclStrIdxTreeTestObjCmd;$/;"	v	typeref:typename:MODULE_SCOPE Tcl_ObjCmdProc
TclStringCat	generic/tclStringObj.c	/^TclStringCat($/;"	f	typeref:typename:Tcl_Obj *
TclStringCmp	generic/tclStringObj.c	/^TclStringCmp($/;"	f	typeref:typename:int
TclStringFirst	generic/tclStringObj.c	/^TclStringFirst($/;"	f	typeref:typename:Tcl_Obj *
TclStringIndexInterface	generic/tclStringObj.c	/^TclStringIndexInterface($/;"	f	typeref:typename:int
TclStringLast	generic/tclStringObj.c	/^TclStringLast($/;"	f	typeref:typename:Tcl_Obj *
TclStringMatchObj	generic/tclUtil.c	/^TclStringMatchObj($/;"	f	typeref:typename:int
TclStringRepeat	generic/tclStringObj.c	/^TclStringRepeat($/;"	f	typeref:typename:Tcl_Obj *
TclStringReplace	generic/tclStringObj.c	/^TclStringReplace($/;"	f	typeref:typename:Tcl_Obj *
TclStringReverse	generic/tclStringObj.c	/^TclStringReverse($/;"	f	typeref:typename:Tcl_Obj *
TclStrneqOpCmd	generic/tclInt.h	/^MODULE_SCOPE Tcl_ObjCmdProc TclStrneqOpCmd;$/;"	v	typeref:typename:MODULE_SCOPE Tcl_ObjCmdProc
TclStubCall	generic/tclStubCall.c	/^TclStubCall($/;"	f	typeref:typename:MODULE_SCOPE void *
TclStubHooks	generic/tclDecls.h	/^} TclStubHooks;$/;"	t	typeref:struct:__anon103dd3350108
TclStubs	generic/tclDecls.h	/^typedef struct TclStubs {$/;"	s
TclStubs	generic/tclDecls.h	/^} TclStubs;$/;"	t	typeref:struct:TclStubs
TclSubstCompile	generic/tclCompCmdsSZ.c	/^TclSubstCompile($/;"	f	typeref:typename:void
TclSubstOptions	generic/tclCmdMZ.c	/^TclSubstOptions($/;"	f	typeref:typename:int
TclSubstParse	generic/tclParse.c	/^TclSubstParse($/;"	f	typeref:typename:void
TclSubstTokens	generic/tclParse.c	/^TclSubstTokens($/;"	f	typeref:typename:int
TclTeardownNamespace	generic/tclIntDecls.h	/^#define TclTeardownNamespace /;"	d
TclTeardownNamespace	generic/tclNamesp.c	/^TclTeardownNamespace($/;"	f	typeref:typename:void
TclThreadAllocObj	generic/tclThreadAlloc.c	/^TclThreadAllocObj(void)$/;"	f	typeref:typename:Tcl_Obj *
TclThreadDataKeyGet	generic/tclThread.c	/^TclThreadDataKeyGet($/;"	f	typeref:typename:void *
TclThreadFinalizeContLines	generic/tclObj.c	/^TclThreadFinalizeContLines($/;"	f	typeref:typename:void	file:
TclThreadFreeObj	generic/tclThreadAlloc.c	/^TclThreadFreeObj($/;"	f	typeref:typename:void
TclThreadStorageKeyGet	generic/tclThreadStorage.c	/^TclThreadStorageKeyGet($/;"	f	typeref:typename:void *
TclThreadStorageKeySet	generic/tclThreadStorage.c	/^TclThreadStorageKeySet($/;"	f	typeref:typename:void
TclThread_Init	generic/tclInt.h	/^MODULE_SCOPE Tcl_LibraryInitProc TclThread_Init;$/;"	v	typeref:typename:MODULE_SCOPE Tcl_LibraryInitProc
TclThread_Init	generic/tclThreadTest.c	/^TclThread_Init($/;"	f	typeref:typename:int
TclTomMathInitializeStubs	generic/tclTomMathStubLib.c	/^TclTomMathInitializeStubs($/;"	f	typeref:typename:MODULE_SCOPE const char *
TclTomMathStubs	generic/tclTomMathDecls.h	/^typedef struct TclTomMathStubs {$/;"	s
TclTomMathStubs	generic/tclTomMathDecls.h	/^} TclTomMathStubs;$/;"	t	typeref:struct:TclTomMathStubs
TclTommath_Init	generic/tclInt.h	/^MODULE_SCOPE Tcl_LibraryInitProc TclTommath_Init;$/;"	v	typeref:typename:MODULE_SCOPE Tcl_LibraryInitProc
TclTommath_Init	generic/tclTomMathInterface.c	/^TclTommath_Init($/;"	f	typeref:typename:int
TclTraceDictPath	generic/tclDictObj.c	/^TclTraceDictPath($/;"	f	typeref:typename:Tcl_Obj *
TclTraceDictPath	generic/tclIntDecls.h	/^#define TclTraceDictPath /;"	d
TclTrim	generic/tclUtil.c	/^TclTrim($/;"	f	typeref:typename:Tcl_Size
TclTrimLeft	generic/tclUtil.c	/^TclTrimLeft($/;"	f	typeref:typename:Tcl_Size
TclTrimRight	generic/tclUtil.c	/^TclTrimRight($/;"	f	typeref:typename:Tcl_Size
TclUndoRefCount	generic/tclObj.c	/^TclUndoRefCount($/;"	f	typeref:typename:void
TclUniCharCaseMatch	generic/tclUtf.c	/^TclUniCharCaseMatch($/;"	f	typeref:typename:int
TclUniCharMatch	generic/tclIntDecls.h	/^#define TclUniCharMatch /;"	d
TclUniCharMatch	generic/tclUtf.c	/^TclUniCharMatch($/;"	f	typeref:typename:int
TclUniCharNcasecmp	generic/tclUtf.c	/^TclUniCharNcasecmp($/;"	f	typeref:typename:int
TclUniCharNcmp	generic/tclUtf.c	/^TclUniCharNcmp($/;"	f	typeref:typename:int
TclUnixCopyFile	generic/tclIntPlatDecls.h	/^#define TclUnixCopyFile /;"	d
TclUnixCopyFile	generic/tclStubInit.c	/^#   define TclUnixCopyFile /;"	d	file:
TclUnixCopyFile	unix/tclUnixFCmd.c	/^TclUnixCopyFile($/;"	f	typeref:typename:int
TclUnixOpenTemporaryFile	generic/tclIntPlatDecls.h	/^#define TclUnixOpenTemporaryFile /;"	d
TclUnixOpenTemporaryFile	generic/tclStubInit.c	/^#   define TclUnixOpenTemporaryFile /;"	d	file:
TclUnixOpenTemporaryFile	unix/tclUnixFCmd.c	/^TclUnixOpenTemporaryFile($/;"	f	typeref:typename:int
TclUnixSetBlockingMode	unix/tclUnixCompat.c	/^TclUnixSetBlockingMode($/;"	f	typeref:typename:int
TclUnixWaitForFile	generic/tclIntPlatDecls.h	/^#define TclUnixWaitForFile /;"	d
TclUnixWaitForFile	generic/tclStubInit.c	/^#   define TclUnixWaitForFile /;"	d	file:
TclUnixWaitForFile	macosx/tclMacOSXNotify.c	/^TclUnixWaitForFile($/;"	f	typeref:typename:int
TclUnixWaitForFile	unix/tclUnixNotfy.c	/^TclUnixWaitForFile($/;"	f	typeref:typename:int
TclUnpackBignum	generic/tclInt.h	/^#define TclUnpackBignum(/;"	d
TclUnsetCancelFlags	generic/tclInt.h	/^#define TclUnsetCancelFlags(/;"	d
TclUnsetEnv	generic/tclEnv.c	/^TclUnsetEnv($/;"	f	typeref:typename:void
TclUnsetObjRef	generic/tclStrIdxTree.h	/^#define TclUnsetObjRef(/;"	d
TclUnusedStubEntry	generic/tclDecls.h	/^#define TclUnusedStubEntry /;"	d
TclUnusedStubEntry	generic/tclIntDecls.h	/^#define TclUnusedStubEntry /;"	d
TclUnusedStubEntry	generic/tclStubInit.c	/^#define TclUnusedStubEntry /;"	d	file:
TclUpdateAtCmdStart	generic/tclCompile.h	/^#define TclUpdateAtCmdStart(/;"	d
TclUpdateInstInt1AtPc	generic/tclCompile.h	/^#define TclUpdateInstInt1AtPc(/;"	d
TclUpdateInstInt4AtPc	generic/tclCompile.h	/^#define TclUpdateInstInt4AtPc(/;"	d
TclUpdateReturnInfo	generic/tclIntDecls.h	/^#define TclUpdateReturnInfo /;"	d
TclUpdateReturnInfo	generic/tclProc.c	/^TclUpdateReturnInfo($/;"	f	typeref:typename:int
TclUpdateStackReqs	generic/tclCompile.h	/^TclUpdateStackReqs($/;"	f	typeref:typename:void
TclUpsizeAlloc	generic/tclInt.h	/^TclUpsizeAlloc($/;"	f	typeref:typename:Tcl_Size
TclUpsizeRetry	generic/tclInt.h	/^TclUpsizeRetry($/;"	f	typeref:typename:Tcl_Size
TclUtfAtIndex	generic/tclDecls.h	/^#define TclUtfAtIndex /;"	d
TclUtfAtIndex	generic/tclUtf.c	/^TclUtfAtIndex($/;"	f	typeref:typename:const char *
TclUtfCasecmp	generic/tclUtf.c	/^TclUtfCasecmp($/;"	f	typeref:typename:int
TclUtfCharComplete	generic/tclDecls.h	/^#define TclUtfCharComplete /;"	d
TclUtfCharComplete	generic/tclStubInit.c	/^#define TclUtfCharComplete /;"	d	file:
TclUtfCmp	generic/tclUtf.c	/^TclUtfCmp($/;"	f	typeref:typename:int
TclUtfCount	generic/tclUtf.c	/^TclUtfCount($/;"	f	typeref:typename:int
TclUtfFindEqual	generic/tclStrIdxTree.h	/^TclUtfFindEqual($/;"	f	typeref:typename:const char *
TclUtfFindEqualNC	generic/tclStrIdxTree.h	/^TclUtfFindEqualNC($/;"	f	typeref:typename:const char *
TclUtfFindEqualNCInLwr	generic/tclStrIdxTree.h	/^TclUtfFindEqualNCInLwr($/;"	f	typeref:typename:const char *
TclUtfNcasecmp	generic/tclDecls.h	/^#define TclUtfNcasecmp /;"	d
TclUtfNcasecmp	generic/tclUtf.c	/^TclUtfNcasecmp($/;"	f	typeref:typename:int
TclUtfNcmp	generic/tclDecls.h	/^#define TclUtfNcmp /;"	d
TclUtfNcmp	generic/tclUtf.c	/^TclUtfNcmp($/;"	f	typeref:typename:int
TclUtfNext	generic/tclDecls.h	/^#define TclUtfNext /;"	d
TclUtfNext	generic/tclStubInit.c	/^#define TclUtfNext /;"	d	file:
TclUtfPrev	generic/tclDecls.h	/^#define TclUtfPrev /;"	d
TclUtfPrev	generic/tclStubInit.c	/^#define TclUtfPrev /;"	d	file:
TclUtfToUniChar	generic/tclInt.h	/^#define TclUtfToUniChar(/;"	d
TclVarErrMsg	generic/tclIntDecls.h	/^#define TclVarErrMsg /;"	d
TclVarErrMsg	generic/tclVar.c	/^TclVarErrMsg($/;"	f	typeref:typename:void
TclVarFindHiddenArray	generic/tclInt.h	/^#define TclVarFindHiddenArray(/;"	d
TclVarHashCreateVar	generic/tclIntDecls.h	/^#define TclVarHashCreateVar /;"	d
TclVarHashCreateVar	generic/tclVar.c	/^TclVarHashCreateVar($/;"	f	typeref:typename:Var *
TclVarHashFindVar	generic/tclInt.h	/^#define TclVarHashFindVar(/;"	d
TclVarHashGetValue	generic/tclOOMethod.c	/^#define TclVarHashGetValue(/;"	d	file:
TclVarHashGetValue	generic/tclTest.c	/^#define TclVarHashGetValue(/;"	d	file:
TclVarHashTable	generic/tclInt.h	/^typedef struct TclVarHashTable {$/;"	s
TclVarHashTable	generic/tclInt.h	/^} TclVarHashTable;$/;"	t	typeref:struct:TclVarHashTable
TclVarParentArray	generic/tclInt.h	/^#define TclVarParentArray(/;"	d
TclVarTable	generic/tclOOMethod.c	/^#define TclVarTable(/;"	d	file:
TclVarTraceExists	generic/tclIntDecls.h	/^#define TclVarTraceExists /;"	d
TclVarTraceExists	generic/tclTrace.c	/^TclVarTraceExists($/;"	f	typeref:typename:Var *
TclVariadicOpCmd	generic/tclCompExpr.c	/^TclVariadicOpCmd($/;"	f	typeref:typename:int
TclVariadicOpCmd	generic/tclCompile.h	/^MODULE_SCOPE Tcl_ObjCmdProc	TclVariadicOpCmd;$/;"	v	typeref:typename:MODULE_SCOPE Tcl_ObjCmdProc
TclVerifyGlobalLiteralTable	generic/tclLiteral.c	/^TclVerifyGlobalLiteralTable($/;"	f	typeref:typename:void
TclVerifyLocalLiteralTable	generic/tclLiteral.c	/^TclVerifyLocalLiteralTable($/;"	f	typeref:typename:void
TclWinAddProcess	generic/tclIntPlatDecls.h	/^#define TclWinAddProcess /;"	d
TclWinAddProcess	generic/tclStubInit.c	/^#   define TclWinAddProcess /;"	d	file:
TclWinAddProcess	win/tclWinPipe.c	/^TclWinAddProcess($/;"	f	typeref:typename:void
TclWinCPUID	generic/tclIntPlatDecls.h	/^#define TclWinCPUID /;"	d
TclWinCPUID	unix/tclUnixCompat.c	/^TclWinCPUID($/;"	f	typeref:typename:int
TclWinCPUID	win/tclWin32Dll.c	/^TclWinCPUID($/;"	f	typeref:typename:int
TclWinConvertWSAError	generic/tclIntPlatDecls.h	/^#define TclWinConvertWSAError /;"	d
TclWinDriveLetterForVolMountPoint	win/tclWin32Dll.c	/^TclWinDriveLetterForVolMountPoint($/;"	f	typeref:typename:char
TclWinEncodingsCleanup	win/tclWin32Dll.c	/^TclWinEncodingsCleanup(void)$/;"	f	typeref:typename:void
TclWinFileOwned	win/tclWinFile.c	/^TclWinFileOwned($/;"	f	typeref:typename:int
TclWinFlushDirtyChannels	generic/tclIntPlatDecls.h	/^#define TclWinFlushDirtyChannels /;"	d
TclWinFlushDirtyChannels	generic/tclStubInit.c	/^#   define TclWinFlushDirtyChannels /;"	d	file:
TclWinFlushDirtyChannels	win/tclWinChan.c	/^TclWinFlushDirtyChannels(void)$/;"	f	typeref:typename:void
TclWinGenerateChannelName	win/tclWinChan.c	/^TclWinGenerateChannelName($/;"	f	typeref:typename:void
TclWinGetTclInstance	generic/tclIntPlatDecls.h	/^#define TclWinGetTclInstance /;"	d
TclWinGetTclInstance	generic/tclStubInit.c	/^#   define TclWinGetTclInstance /;"	d	file:
TclWinGetTclInstance	generic/tclStubInit.c	/^TclWinGetTclInstance(void)$/;"	f	typeref:typename:void *
TclWinGetTclInstance	win/tclWin32Dll.c	/^TclWinGetTclInstance(void)$/;"	f	typeref:typename:void *
TclWinInit	win/tclWin32Dll.c	/^TclWinInit($/;"	f	typeref:typename:void
TclWinMakeFile	win/tclWinPipe.c	/^TclWinMakeFile($/;"	f	typeref:typename:TclFile
TclWinNoBackslash	generic/tclIntPlatDecls.h	/^#define TclWinNoBackslash /;"	d
TclWinNoBackslash	generic/tclStubInit.c	/^#   define TclWinNoBackslash /;"	d	file:
TclWinNoBackslash	generic/tclStubInit.c	/^#define TclWinNoBackslash /;"	d	file:
TclWinNoBackslash	generic/tclStubInit.c	/^TclWinNoBackslash($/;"	f	typeref:typename:char *	file:
TclWinNoBackslash	win/tclWin32Dll.c	/^TclWinNoBackslash($/;"	f	typeref:typename:char *
TclWinOpenConsoleChannel	win/tclWinConsole.c	/^TclWinOpenConsoleChannel($/;"	f	typeref:typename:Tcl_Channel
TclWinOpenSerialChannel	win/tclWinSerial.c	/^TclWinOpenSerialChannel($/;"	f	typeref:typename:Tcl_Channel
TclWinSerialOpen	win/tclWinSerial.c	/^TclWinSerialOpen($/;"	f	typeref:typename:HANDLE
TclWinSymLinkCopyDirectory	win/tclWinFile.c	/^TclWinSymLinkCopyDirectory($/;"	f	typeref:typename:int
TclWinSymLinkDelete	win/tclWinFile.c	/^TclWinSymLinkDelete($/;"	f	typeref:typename:int
TclWinThreadStart	win/tclWinThrd.c	/^TclWinThreadStart($/;"	f	typeref:typename:DWORD WINAPI	file:
TclWinVolumeRelativeNormalize	win/tclWinFile.c	/^TclWinVolumeRelativeNormalize($/;"	f	typeref:typename:Tcl_Obj *
TclWordKnownAtCompileTime	generic/tclCompile.c	/^TclWordKnownAtCompileTime($/;"	f	typeref:typename:int
TclXorOpCmd	generic/tclInt.h	/^MODULE_SCOPE Tcl_ObjCmdProc TclXorOpCmd;$/;"	v	typeref:typename:MODULE_SCOPE Tcl_ObjCmdProc
TclZipfsFinalize	generic/tclZipfs.c	/^TclZipfsFinalize(void)$/;"	f	typeref:typename:void
TclZipfs_AppHook	generic/tcl.h	/^#define TclZipfs_AppHook(/;"	d
TclZipfs_AppHook	generic/tclZipfs.c	/^TclZipfs_AppHook($/;"	f	typeref:typename:const char *
TclZipfs_Init	generic/tclZipfs.c	/^TclZipfs_Init($/;"	f	typeref:typename:int
TclZipfs_Mount	generic/tclDecls.h	/^#define TclZipfs_Mount /;"	d
TclZipfs_Mount	generic/tclZipfs.c	/^TclZipfs_Mount($/;"	f	typeref:typename:int
TclZipfs_MountBuffer	generic/tclDecls.h	/^#define TclZipfs_MountBuffer /;"	d
TclZipfs_MountBuffer	generic/tclZipfs.c	/^TclZipfs_MountBuffer($/;"	f	typeref:typename:int
TclZipfs_TclLibrary	generic/tclDecls.h	/^#define TclZipfs_TclLibrary /;"	d
TclZipfs_TclLibrary	generic/tclZipfs.c	/^TclZipfs_TclLibrary(void)$/;"	f	typeref:typename:Tcl_Obj *
TclZipfs_Unmount	generic/tclDecls.h	/^#define TclZipfs_Unmount /;"	d
TclZipfs_Unmount	generic/tclZipfs.c	/^TclZipfs_Unmount($/;"	f	typeref:typename:int
TclZlib	doc/TclZlib.3	/^.TH TclZlib 3 8.6 Tcl "Tcl Library Procedures"$/;"	t
TclZlibInit	generic/tclZlib.c	/^TclZlibInit($/;"	f	typeref:typename:int
Tcl_ABSListTest_Init	generic/tclInt.h	/^MODULE_SCOPE Tcl_LibraryInitProc Tcl_ABSListTest_Init;$/;"	v	typeref:typename:MODULE_SCOPE Tcl_LibraryInitProc
Tcl_ABSListTest_Init	generic/tclTestABSList.c	/^int Tcl_ABSListTest_Init(Tcl_Interp *interp) {$/;"	f	typeref:typename:int
Tcl_Access	doc/Access.3	/^.TH Tcl_Access 3 8.1 Tcl "Tcl Library Procedures"$/;"	t
Tcl_Access	generic/tclDecls.h	/^#define Tcl_Access /;"	d
Tcl_Access	generic/tclIOUtil.c	/^Tcl_Access($/;"	f	typeref:typename:int
Tcl_AddErrorInfo	doc/AddErrInfo.3	/^.TH Tcl_AddErrorInfo 3 8.5 Tcl "Tcl Library Procedures"$/;"	t
Tcl_AddErrorInfo	generic/tclDecls.h	/^#define Tcl_AddErrorInfo(/;"	d
Tcl_AddInterpResolvers	generic/tclIntDecls.h	/^#define Tcl_AddInterpResolvers /;"	d
Tcl_AddInterpResolvers	generic/tclResolve.c	/^Tcl_AddInterpResolvers($/;"	f	typeref:typename:void
Tcl_AddObjErrorInfo	generic/tclDecls.h	/^#define Tcl_AddObjErrorInfo(/;"	d
Tcl_AfterObjCmd	generic/tclInt.h	/^MODULE_SCOPE Tcl_ObjCmdProc Tcl_AfterObjCmd;$/;"	v	typeref:typename:MODULE_SCOPE Tcl_ObjCmdProc
Tcl_AfterObjCmd	generic/tclTimer.c	/^Tcl_AfterObjCmd($/;"	f	typeref:typename:int
Tcl_AlertNotifier	generic/tclDecls.h	/^#define Tcl_AlertNotifier /;"	d
Tcl_AlertNotifier	generic/tclNotify.c	/^Tcl_AlertNotifier($/;"	f	typeref:typename:void
Tcl_AlertNotifierProc	generic/tcl.h	/^typedef void (Tcl_AlertNotifierProc) (void *clientData);$/;"	t	typeref:typename:void ()(void * clientData)
Tcl_Alloc	doc/Alloc.3	/^.TH Tcl_Alloc 3 9.0 Tcl "Tcl Library Procedures"$/;"	t
Tcl_Alloc	generic/tclCkalloc.c	/^Tcl_Alloc($/;"	f	typeref:typename:void *
Tcl_Alloc	generic/tclDecls.h	/^#   define Tcl_Alloc(/;"	d
Tcl_Alloc	generic/tclDecls.h	/^#define Tcl_Alloc /;"	d
Tcl_AllocHashEntryProc	generic/tcl.h	/^typedef Tcl_HashEntry * (Tcl_AllocHashEntryProc) (Tcl_HashTable *tablePtr,$/;"	t	typeref:typename:Tcl_HashEntry * ()(Tcl_HashTable * tablePtr,void * keyPtr)
Tcl_AllocStatBuf	generic/tclDecls.h	/^#define Tcl_AllocStatBuf /;"	d
Tcl_AllocStatBuf	generic/tclFileName.c	/^Tcl_AllocStatBuf(void)$/;"	f	typeref:typename:Tcl_StatBuf *
Tcl_AllowExceptions	doc/AllowExc.3	/^.TH Tcl_AllowExceptions 3 7.4 Tcl "Tcl Library Procedures"$/;"	t
Tcl_AllowExceptions	generic/tclBasic.c	/^Tcl_AllowExceptions($/;"	f	typeref:typename:void
Tcl_AllowExceptions	generic/tclDecls.h	/^#define Tcl_AllowExceptions /;"	d
Tcl_AppInit	doc/AppInit.3	/^.TH Tcl_AppInit 3 7.0 Tcl "Tcl Library Procedures"$/;"	t
Tcl_AppInit	unix/tclAppInit.c	/^Tcl_AppInit($/;"	f	typeref:typename:int
Tcl_AppInit	win/tclAppInit.c	/^Tcl_AppInit($/;"	f	typeref:typename:int
Tcl_AppInitProc	generic/tcl.h	/^typedef int (Tcl_AppInitProc) (Tcl_Interp *interp);$/;"	t	typeref:typename:int ()(Tcl_Interp * interp)
Tcl_AppendAllObjTypes	generic/tclDecls.h	/^#define Tcl_AppendAllObjTypes /;"	d
Tcl_AppendAllObjTypes	generic/tclObj.c	/^Tcl_AppendAllObjTypes($/;"	f	typeref:typename:int
Tcl_AppendElement	generic/tclDecls.h	/^#define Tcl_AppendElement /;"	d
Tcl_AppendElement	generic/tclResult.c	/^Tcl_AppendElement($/;"	f	typeref:typename:void
Tcl_AppendExportList	generic/tclDecls.h	/^#define Tcl_AppendExportList /;"	d
Tcl_AppendExportList	generic/tclNamesp.c	/^Tcl_AppendExportList($/;"	f	typeref:typename:int
Tcl_AppendFormatToObj	generic/tclDecls.h	/^#define Tcl_AppendFormatToObj /;"	d
Tcl_AppendFormatToObj	generic/tclStringObj.c	/^Tcl_AppendFormatToObj($/;"	f	typeref:typename:int
Tcl_AppendLimitedToObj	generic/tclDecls.h	/^#define Tcl_AppendLimitedToObj /;"	d
Tcl_AppendLimitedToObj	generic/tclStringObj.c	/^Tcl_AppendLimitedToObj($/;"	f	typeref:typename:void
Tcl_AppendObjCmd	generic/tclInt.h	/^MODULE_SCOPE Tcl_ObjCmdProc Tcl_AppendObjCmd;$/;"	v	typeref:typename:MODULE_SCOPE Tcl_ObjCmdProc
Tcl_AppendObjCmd	generic/tclVar.c	/^Tcl_AppendObjCmd($/;"	f	typeref:typename:int
Tcl_AppendObjToErrorInfo	generic/tclBasic.c	/^Tcl_AppendObjToErrorInfo($/;"	f	typeref:typename:void
Tcl_AppendObjToErrorInfo	generic/tclDecls.h	/^#define Tcl_AppendObjToErrorInfo /;"	d
Tcl_AppendObjToObj	generic/tclDecls.h	/^#define Tcl_AppendObjToObj /;"	d
Tcl_AppendObjToObj	generic/tclStringObj.c	/^Tcl_AppendObjToObj($/;"	f	typeref:typename:void
Tcl_AppendPrintfToObj	generic/tclDecls.h	/^#define Tcl_AppendPrintfToObj /;"	d
Tcl_AppendPrintfToObj	generic/tclStringObj.c	/^Tcl_AppendPrintfToObj($/;"	f	typeref:typename:void
Tcl_AppendResult	generic/tclDecls.h	/^#define Tcl_AppendResult /;"	d
Tcl_AppendResult	generic/tclResult.c	/^Tcl_AppendResult($/;"	f	typeref:typename:void
Tcl_AppendStringsToObj	generic/tclDecls.h	/^#define Tcl_AppendStringsToObj /;"	d
Tcl_AppendStringsToObj	generic/tclStringObj.c	/^Tcl_AppendStringsToObj($/;"	f	typeref:typename:void
Tcl_AppendToObj	generic/tclDecls.h	/^#define Tcl_AppendToObj /;"	d
Tcl_AppendToObj	generic/tclStringObj.c	/^Tcl_AppendToObj($/;"	f	typeref:typename:void
Tcl_AppendUnicodeToObj	generic/tclDecls.h	/^#define Tcl_AppendUnicodeToObj /;"	d
Tcl_AppendUnicodeToObj	generic/tclStringObj.c	/^Tcl_AppendUnicodeToObj($/;"	f	typeref:typename:void
Tcl_ApplyObjCmd	generic/tclInt.h	/^MODULE_SCOPE Tcl_ObjCmdProc Tcl_ApplyObjCmd;$/;"	v	typeref:typename:MODULE_SCOPE Tcl_ObjCmdProc
Tcl_ApplyObjCmd	generic/tclProc.c	/^Tcl_ApplyObjCmd($/;"	f	typeref:typename:int
Tcl_ArgvFuncProc	generic/tcl.h	/^typedef int (Tcl_ArgvFuncProc)(void *clientData, Tcl_Obj *objPtr,$/;"	t	typeref:typename:int ()(void * clientData,Tcl_Obj * objPtr,void * dstPtr)
Tcl_ArgvGenFuncProc	generic/tcl.h	/^typedef Tcl_Size (Tcl_ArgvGenFuncProc)(void *clientData, Tcl_Interp *interp,$/;"	t	typeref:typename:Tcl_Size ()(void * clientData,Tcl_Interp * interp,Tcl_Size objc,Tcl_Obj * const * objv,void * dstPtr)
Tcl_ArgvInfo	generic/tcl.h	/^} Tcl_ArgvInfo;$/;"	t	typeref:struct:__anon937aefea0b08
Tcl_AssembleObjCmd	generic/tclAssembly.c	/^Tcl_AssembleObjCmd($/;"	f	typeref:typename:int
Tcl_AssembleObjCmd	generic/tclInt.h	/^MODULE_SCOPE Tcl_ObjCmdProc Tcl_AssembleObjCmd;$/;"	v	typeref:typename:MODULE_SCOPE Tcl_ObjCmdProc
Tcl_AsyncCreate	doc/Async.3	/^.TH Tcl_AsyncCreate 3 7.0 Tcl "Tcl Library Procedures"$/;"	t
Tcl_AsyncCreate	generic/tclAsync.c	/^Tcl_AsyncCreate($/;"	f	typeref:typename:Tcl_AsyncHandler
Tcl_AsyncCreate	generic/tclDecls.h	/^#define Tcl_AsyncCreate /;"	d
Tcl_AsyncDelete	generic/tclAsync.c	/^Tcl_AsyncDelete($/;"	f	typeref:typename:void
Tcl_AsyncDelete	generic/tclDecls.h	/^#define Tcl_AsyncDelete /;"	d
Tcl_AsyncHandler	generic/tcl.h	/^typedef struct Tcl_AsyncHandler_ *Tcl_AsyncHandler;$/;"	t	typeref:struct:Tcl_AsyncHandler_ *
Tcl_AsyncInvoke	generic/tclAsync.c	/^Tcl_AsyncInvoke($/;"	f	typeref:typename:int
Tcl_AsyncInvoke	generic/tclDecls.h	/^#define Tcl_AsyncInvoke /;"	d
Tcl_AsyncMark	generic/tclAsync.c	/^Tcl_AsyncMark($/;"	f	typeref:typename:void
Tcl_AsyncMark	generic/tclDecls.h	/^#define Tcl_AsyncMark /;"	d
Tcl_AsyncMarkFromSignal	generic/tclAsync.c	/^Tcl_AsyncMarkFromSignal($/;"	f	typeref:typename:int
Tcl_AsyncMarkFromSignal	generic/tclDecls.h	/^#define Tcl_AsyncMarkFromSignal /;"	d
Tcl_AsyncProc	generic/tcl.h	/^typedef int (Tcl_AsyncProc) (void *clientData, Tcl_Interp *interp,$/;"	t	typeref:typename:int ()(void * clientData,Tcl_Interp * interp,int code)
Tcl_AsyncReady	generic/tclAsync.c	/^Tcl_AsyncReady(void)$/;"	f	typeref:typename:int
Tcl_AsyncReady	generic/tclDecls.h	/^#define Tcl_AsyncReady /;"	d
Tcl_AttemptAlloc	generic/tclCkalloc.c	/^Tcl_AttemptAlloc($/;"	f	typeref:typename:void *
Tcl_AttemptAlloc	generic/tclDecls.h	/^#   define Tcl_AttemptAlloc(/;"	d
Tcl_AttemptAlloc	generic/tclDecls.h	/^#define Tcl_AttemptAlloc /;"	d
Tcl_AttemptAlloc	generic/tclInt.h	/^#define Tcl_AttemptAlloc	/;"	d
Tcl_AttemptDbCkalloc	generic/tclCkalloc.c	/^Tcl_AttemptDbCkalloc($/;"	f	typeref:typename:void *
Tcl_AttemptDbCkalloc	generic/tclDecls.h	/^#define Tcl_AttemptDbCkalloc /;"	d
Tcl_AttemptDbCkrealloc	generic/tclCkalloc.c	/^Tcl_AttemptDbCkrealloc($/;"	f	typeref:typename:void *
Tcl_AttemptDbCkrealloc	generic/tclDecls.h	/^#define Tcl_AttemptDbCkrealloc /;"	d
Tcl_AttemptRealloc	generic/tclCkalloc.c	/^Tcl_AttemptRealloc($/;"	f	typeref:typename:void *
Tcl_AttemptRealloc	generic/tclDecls.h	/^#   define Tcl_AttemptRealloc(/;"	d
Tcl_AttemptRealloc	generic/tclDecls.h	/^#define Tcl_AttemptRealloc /;"	d
Tcl_AttemptRealloc	generic/tclInt.h	/^#define Tcl_AttemptRealloc	/;"	d
Tcl_AttemptSetObjLength	generic/tclDecls.h	/^#define Tcl_AttemptSetObjLength /;"	d
Tcl_AttemptSetObjLength	generic/tclStringObj.c	/^Tcl_AttemptSetObjLength($/;"	f	typeref:typename:int
Tcl_BackgroundError	doc/BackgdErr.3	/^.TH Tcl_BackgroundError 3 7.5 Tcl "Tcl Library Procedures"$/;"	t
Tcl_BackgroundError	generic/tclDecls.h	/^#define Tcl_BackgroundError(/;"	d
Tcl_BackgroundException	generic/tclDecls.h	/^#define Tcl_BackgroundException /;"	d
Tcl_BackgroundException	generic/tclEvent.c	/^Tcl_BackgroundException($/;"	f	typeref:typename:void
Tcl_BadChannelOption	generic/tclDecls.h	/^#define Tcl_BadChannelOption /;"	d
Tcl_BadChannelOption	generic/tclIO.c	/^Tcl_BadChannelOption($/;"	f	typeref:typename:int
Tcl_BooleanObj	doc/BoolObj.3	/^.TH Tcl_BooleanObj 3 8.5 Tcl "Tcl Library Procedures"$/;"	t
Tcl_BounceRefCount	generic/tcl.h	/^#   define Tcl_BounceRefCount(/;"	d
Tcl_BreakObjCmd	generic/tclCmdAH.c	/^Tcl_BreakObjCmd($/;"	f	typeref:typename:int
Tcl_BreakObjCmd	generic/tclInt.h	/^MODULE_SCOPE Tcl_ObjCmdProc Tcl_BreakObjCmd;$/;"	v	typeref:typename:MODULE_SCOPE Tcl_ObjCmdProc
Tcl_ByteArrayObj	doc/ByteArrObj.3	/^.TH Tcl_ByteArrayObj 3 9.0 Tcl "Tcl Library Procedures"$/;"	t
Tcl_CallFrame	generic/tcl.h	/^typedef struct Tcl_CallFrame {$/;"	s
Tcl_CallFrame	generic/tcl.h	/^} Tcl_CallFrame;$/;"	t	typeref:struct:Tcl_CallFrame
Tcl_CallWhenDeleted	doc/CallDel.3	/^.TH Tcl_CallWhenDeleted 3 7.0 Tcl "Tcl Library Procedures"$/;"	t
Tcl_CallWhenDeleted	generic/tclBasic.c	/^Tcl_CallWhenDeleted($/;"	f	typeref:typename:void
Tcl_CallWhenDeleted	generic/tclDecls.h	/^#define Tcl_CallWhenDeleted /;"	d
Tcl_Cancel	doc/Cancel.3	/^.TH Tcl_Cancel 3 8.6 Tcl "Tcl Library Procedures"$/;"	t
Tcl_CancelEval	generic/tclBasic.c	/^Tcl_CancelEval($/;"	f	typeref:typename:int
Tcl_CancelEval	generic/tclDecls.h	/^#define Tcl_CancelEval /;"	d
Tcl_CancelIdleCall	generic/tclDecls.h	/^#define Tcl_CancelIdleCall /;"	d
Tcl_CancelIdleCall	generic/tclTimer.c	/^Tcl_CancelIdleCall($/;"	f	typeref:typename:void
Tcl_Canceled	generic/tclBasic.c	/^Tcl_Canceled($/;"	f	typeref:typename:int
Tcl_Canceled	generic/tclDecls.h	/^#define Tcl_Canceled /;"	d
Tcl_CatchObjCmd	generic/tclCmdAH.c	/^Tcl_CatchObjCmd($/;"	f	typeref:typename:int
Tcl_CatchObjCmd	generic/tclInt.h	/^MODULE_SCOPE Tcl_ObjCmdProc Tcl_CatchObjCmd;$/;"	v	typeref:typename:MODULE_SCOPE Tcl_ObjCmdProc
Tcl_CdObjCmd	generic/tclCmdAH.c	/^Tcl_CdObjCmd($/;"	f	typeref:typename:int
Tcl_CdObjCmd	generic/tclInt.h	/^MODULE_SCOPE Tcl_ObjCmdProc Tcl_CdObjCmd;$/;"	v	typeref:typename:MODULE_SCOPE Tcl_ObjCmdProc
Tcl_Channel	generic/tcl.h	/^typedef struct Tcl_Channel_ *Tcl_Channel;$/;"	t	typeref:struct:Tcl_Channel_ *
Tcl_ChannelBlockModeProc	generic/tclDecls.h	/^#define Tcl_ChannelBlockModeProc /;"	d
Tcl_ChannelBlockModeProc	generic/tclIO.c	/^Tcl_ChannelBlockModeProc($/;"	f	typeref:typename:Tcl_DriverBlockModeProc *
Tcl_ChannelBuffered	generic/tclDecls.h	/^#define Tcl_ChannelBuffered /;"	d
Tcl_ChannelBuffered	generic/tclIO.c	/^Tcl_ChannelBuffered($/;"	f	typeref:typename:int
Tcl_ChannelClose2Proc	generic/tclDecls.h	/^#define Tcl_ChannelClose2Proc /;"	d
Tcl_ChannelClose2Proc	generic/tclIO.c	/^Tcl_ChannelClose2Proc($/;"	f	typeref:typename:Tcl_DriverClose2Proc *
Tcl_ChannelFlushProc	generic/tclDecls.h	/^#define Tcl_ChannelFlushProc /;"	d
Tcl_ChannelFlushProc	generic/tclIO.c	/^Tcl_ChannelFlushProc($/;"	f	typeref:typename:Tcl_DriverFlushProc *
Tcl_ChannelGetHandleProc	generic/tclDecls.h	/^#define Tcl_ChannelGetHandleProc /;"	d
Tcl_ChannelGetHandleProc	generic/tclIO.c	/^Tcl_ChannelGetHandleProc($/;"	f	typeref:typename:Tcl_DriverGetHandleProc *
Tcl_ChannelGetOptionProc	generic/tclDecls.h	/^#define Tcl_ChannelGetOptionProc /;"	d
Tcl_ChannelGetOptionProc	generic/tclIO.c	/^Tcl_ChannelGetOptionProc($/;"	f	typeref:typename:Tcl_DriverGetOptionProc *
Tcl_ChannelHandlerProc	generic/tclDecls.h	/^#define Tcl_ChannelHandlerProc /;"	d
Tcl_ChannelHandlerProc	generic/tclIO.c	/^Tcl_ChannelHandlerProc($/;"	f	typeref:typename:Tcl_DriverHandlerProc *
Tcl_ChannelInputProc	generic/tclDecls.h	/^#define Tcl_ChannelInputProc /;"	d
Tcl_ChannelInputProc	generic/tclIO.c	/^Tcl_ChannelInputProc($/;"	f	typeref:typename:Tcl_DriverInputProc *
Tcl_ChannelName	generic/tclDecls.h	/^#define Tcl_ChannelName /;"	d
Tcl_ChannelName	generic/tclIO.c	/^Tcl_ChannelName($/;"	f	typeref:typename:const char *
Tcl_ChannelOutputProc	generic/tclDecls.h	/^#define Tcl_ChannelOutputProc /;"	d
Tcl_ChannelOutputProc	generic/tclIO.c	/^Tcl_ChannelOutputProc($/;"	f	typeref:typename:Tcl_DriverOutputProc *
Tcl_ChannelProc	generic/tcl.h	/^typedef void (Tcl_ChannelProc) (void *clientData, int mask);$/;"	t	typeref:typename:void ()(void * clientData,int mask)
Tcl_ChannelSetOptionProc	generic/tclDecls.h	/^#define Tcl_ChannelSetOptionProc /;"	d
Tcl_ChannelSetOptionProc	generic/tclIO.c	/^Tcl_ChannelSetOptionProc($/;"	f	typeref:typename:Tcl_DriverSetOptionProc *
Tcl_ChannelThreadActionProc	generic/tclDecls.h	/^#define Tcl_ChannelThreadActionProc /;"	d
Tcl_ChannelThreadActionProc	generic/tclIO.c	/^Tcl_ChannelThreadActionProc($/;"	f	typeref:typename:Tcl_DriverThreadActionProc *
Tcl_ChannelTruncateProc	generic/tclDecls.h	/^#define Tcl_ChannelTruncateProc /;"	d
Tcl_ChannelTruncateProc	generic/tclIO.c	/^Tcl_ChannelTruncateProc($/;"	f	typeref:typename:Tcl_DriverTruncateProc *
Tcl_ChannelType	generic/tcl.h	/^typedef struct Tcl_ChannelType {$/;"	s
Tcl_ChannelType	generic/tcl.h	/^} Tcl_ChannelType;$/;"	t	typeref:struct:Tcl_ChannelType
Tcl_ChannelTypeVersion	generic/tcl.h	/^typedef struct Tcl_ChannelTypeVersion_ *Tcl_ChannelTypeVersion;$/;"	t	typeref:struct:Tcl_ChannelTypeVersion_ *
Tcl_ChannelVersion	generic/tclDecls.h	/^#define Tcl_ChannelVersion /;"	d
Tcl_ChannelVersion	generic/tclIO.c	/^Tcl_ChannelVersion($/;"	f	typeref:typename:Tcl_ChannelTypeVersion
Tcl_ChannelWatchProc	generic/tclDecls.h	/^#define Tcl_ChannelWatchProc /;"	d
Tcl_ChannelWatchProc	generic/tclIO.c	/^Tcl_ChannelWatchProc($/;"	f	typeref:typename:Tcl_DriverWatchProc *
Tcl_ChannelWideSeekProc	generic/tclDecls.h	/^#define Tcl_ChannelWideSeekProc /;"	d
Tcl_ChannelWideSeekProc	generic/tclIO.c	/^Tcl_ChannelWideSeekProc($/;"	f	typeref:typename:Tcl_DriverWideSeekProc *
Tcl_Char16Len	generic/tclDecls.h	/^#define Tcl_Char16Len /;"	d
Tcl_Char16Len	generic/tclUtf.c	/^Tcl_Char16Len($/;"	f	typeref:typename:Tcl_Size
Tcl_Char16ToUtfDString	generic/tclDecls.h	/^#define Tcl_Char16ToUtfDString /;"	d
Tcl_Char16ToUtfDString	generic/tclUtf.c	/^Tcl_Char16ToUtfDString($/;"	f	typeref:typename:char *
Tcl_Chdir	generic/tclDecls.h	/^#define Tcl_Chdir /;"	d
Tcl_Chdir	generic/tclIOUtil.c	/^Tcl_Chdir($/;"	f	typeref:typename:int
Tcl_Class	doc/Class.3	/^.TH Tcl_Class 3 0.1 TclOO "TclOO Library Functions"$/;"	t
Tcl_Class	generic/tclOO.h	/^typedef struct Tcl_Class_ *Tcl_Class;$/;"	t	typeref:struct:Tcl_Class_ *
Tcl_ClassGetMetadata	generic/tclOO.c	/^Tcl_ClassGetMetadata($/;"	f	typeref:typename:void *
Tcl_ClassGetMetadata	generic/tclOODecls.h	/^#define Tcl_ClassGetMetadata /;"	d
Tcl_ClassSetConstructor	generic/tclOODecls.h	/^#define Tcl_ClassSetConstructor /;"	d
Tcl_ClassSetConstructor	generic/tclOODefineCmds.c	/^Tcl_ClassSetConstructor($/;"	f	typeref:typename:void
Tcl_ClassSetDestructor	generic/tclOODecls.h	/^#define Tcl_ClassSetDestructor /;"	d
Tcl_ClassSetDestructor	generic/tclOODefineCmds.c	/^Tcl_ClassSetDestructor($/;"	f	typeref:typename:void
Tcl_ClassSetMetadata	generic/tclOO.c	/^Tcl_ClassSetMetadata($/;"	f	typeref:typename:void
Tcl_ClassSetMetadata	generic/tclOODecls.h	/^#define Tcl_ClassSetMetadata /;"	d
Tcl_ClearChannelHandlers	generic/tclDecls.h	/^#define Tcl_ClearChannelHandlers /;"	d
Tcl_ClearChannelHandlers	generic/tclIO.c	/^Tcl_ClearChannelHandlers($/;"	f	typeref:typename:void
Tcl_CloneProc	generic/tclOO.h	/^typedef int (Tcl_CloneProc)(Tcl_Interp *interp, void *oldClientData,$/;"	t	typeref:typename:int ()(Tcl_Interp * interp,void * oldClientData,void ** newClientData)
Tcl_Close	generic/tclDecls.h	/^# define Tcl_Close(interp, chan) Tcl_CloseE/;"	d
Tcl_Close	generic/tclDecls.h	/^#define Tcl_Close /;"	d
Tcl_Close	generic/tclStubInit.c	/^#define Tcl_Close /;"	d	file:
Tcl_CloseEx	generic/tclDecls.h	/^#define Tcl_CloseEx /;"	d
Tcl_CloseEx	generic/tclIO.c	/^Tcl_CloseEx($/;"	f	typeref:typename:int
Tcl_CloseObjCmd	generic/tclIOCmd.c	/^Tcl_CloseObjCmd($/;"	f	typeref:typename:int
Tcl_CloseObjCmd	generic/tclInt.h	/^MODULE_SCOPE Tcl_ObjCmdProc Tcl_CloseObjCmd;$/;"	v	typeref:typename:MODULE_SCOPE Tcl_ObjCmdProc
Tcl_CloseProc	generic/tcl.h	/^typedef void (Tcl_CloseProc) (void *data);$/;"	t	typeref:typename:void ()(void * data)
Tcl_CmdDeleteProc	generic/tcl.h	/^typedef void (Tcl_CmdDeleteProc) (void *clientData);$/;"	t	typeref:typename:void ()(void * clientData)
Tcl_CmdInfo	generic/tcl.h	/^} Tcl_CmdInfo;$/;"	t	typeref:struct:__anon937aefea0708
Tcl_CmdObjTraceDeleteProc	generic/tcl.h	/^typedef void (Tcl_CmdObjTraceDeleteProc) (void *clientData);$/;"	t	typeref:typename:void ()(void * clientData)
Tcl_CmdObjTraceProc	generic/tcl.h	/^typedef int (Tcl_CmdObjTraceProc) (void *clientData, Tcl_Interp *interp,$/;"	t	typeref:typename:int ()(void * clientData,Tcl_Interp * interp,int level,const char * command,Tcl_Command commandInfo,int objc,struct Tcl_Obj * const * objv)
Tcl_CmdObjTraceProc2	generic/tcl.h	/^typedef int (Tcl_CmdObjTraceProc2) (void *clientData, Tcl_Interp *interp,$/;"	t	typeref:typename:int ()(void * clientData,Tcl_Interp * interp,Tcl_Size level,const char * command,Tcl_Command commandInfo,Tcl_Size objc,struct Tcl_Obj * const * objv)
Tcl_CmdProc	generic/tcl.h	/^typedef int (Tcl_CmdProc) (void *clientData, Tcl_Interp *interp,$/;"	t	typeref:typename:int ()(void * clientData,Tcl_Interp * interp,int argc,const char * argv[])
Tcl_CmdTraceProc	generic/tcl.h	/^typedef void (Tcl_CmdTraceProc) (void *clientData, Tcl_Interp *interp,$/;"	t	typeref:typename:void ()(void * clientData,Tcl_Interp * interp,int level,char * command,Tcl_CmdProc * proc,void * cmdClientData,int argc,const char * argv[])
Tcl_Command	generic/tcl.h	/^typedef struct Tcl_Command_ *Tcl_Command;$/;"	t	typeref:struct:Tcl_Command_ *
Tcl_CommandComplete	doc/CmdCmplt.3	/^.TH Tcl_CommandComplete 3 "" Tcl "Tcl Library Procedures"$/;"	t
Tcl_CommandComplete	generic/tclDecls.h	/^#define Tcl_CommandComplete /;"	d
Tcl_CommandComplete	generic/tclParse.c	/^Tcl_CommandComplete($/;"	f	typeref:typename:int
Tcl_CommandTraceInfo	generic/tclDecls.h	/^#define Tcl_CommandTraceInfo /;"	d
Tcl_CommandTraceInfo	generic/tclTrace.c	/^Tcl_CommandTraceInfo($/;"	f	typeref:typename:void *
Tcl_CommandTraceProc	generic/tcl.h	/^typedef void (Tcl_CommandTraceProc) (void *clientData, Tcl_Interp *interp,$/;"	t	typeref:typename:void ()(void * clientData,Tcl_Interp * interp,const char * oldName,const char * newName,int flags)
Tcl_CompareHashKeysProc	generic/tcl.h	/^typedef int (Tcl_CompareHashKeysProc) (void *keyPtr, Tcl_HashEntry *hPtr);$/;"	t	typeref:typename:int ()(void * keyPtr,Tcl_HashEntry * hPtr)
Tcl_Concat	doc/Concat.3	/^.TH Tcl_Concat 3 7.5 Tcl "Tcl Library Procedures"$/;"	t
Tcl_Concat	generic/tclDecls.h	/^#define Tcl_Concat /;"	d
Tcl_Concat	generic/tclUtil.c	/^Tcl_Concat($/;"	f	typeref:typename:char *
Tcl_ConcatObj	generic/tclDecls.h	/^#define Tcl_ConcatObj /;"	d
Tcl_ConcatObj	generic/tclUtil.c	/^Tcl_ConcatObj($/;"	f	typeref:typename:Tcl_Obj *
Tcl_ConcatObjCmd	generic/tclCmdAH.c	/^Tcl_ConcatObjCmd($/;"	f	typeref:typename:int
Tcl_ConcatObjCmd	generic/tclInt.h	/^MODULE_SCOPE Tcl_ObjCmdProc Tcl_ConcatObjCmd;$/;"	v	typeref:typename:MODULE_SCOPE Tcl_ObjCmdProc
Tcl_Condition	generic/tcl.h	/^typedef struct Tcl_Condition_ *Tcl_Condition;$/;"	t	typeref:struct:Tcl_Condition_ *
Tcl_ConditionFinalize	generic/tclDecls.h	/^#define Tcl_ConditionFinalize /;"	d
Tcl_ConditionFinalize	generic/tclInt.h	/^#   define Tcl_ConditionFinalize(/;"	d
Tcl_ConditionFinalize	generic/tclThread.c	/^Tcl_ConditionFinalize($/;"	f	typeref:typename:void
Tcl_ConditionNotify	generic/tclDecls.h	/^#define Tcl_ConditionNotify /;"	d
Tcl_ConditionNotify	generic/tclInt.h	/^#   define Tcl_ConditionNotify(/;"	d
Tcl_ConditionNotify	generic/tclThread.c	/^Tcl_ConditionNotify($/;"	f	typeref:typename:void
Tcl_ConditionNotify	unix/tclUnixThrd.c	/^Tcl_ConditionNotify($/;"	f	typeref:typename:void
Tcl_ConditionNotify	win/tclWinThrd.c	/^Tcl_ConditionNotify($/;"	f	typeref:typename:void
Tcl_ConditionWait	generic/tclDecls.h	/^#define Tcl_ConditionWait /;"	d
Tcl_ConditionWait	generic/tclInt.h	/^#   define Tcl_ConditionWait(/;"	d
Tcl_ConditionWait	generic/tclThread.c	/^Tcl_ConditionWait($/;"	f	typeref:typename:void
Tcl_ConditionWait	unix/tclUnixThrd.c	/^Tcl_ConditionWait($/;"	f	typeref:typename:void
Tcl_ConditionWait	win/tclWinThrd.c	/^Tcl_ConditionWait($/;"	f	typeref:typename:void
Tcl_Config	generic/tcl.h	/^typedef struct Tcl_Config {$/;"	s
Tcl_Config	generic/tcl.h	/^} Tcl_Config;$/;"	t	typeref:struct:Tcl_Config
Tcl_ConsolePanic	generic/tcl.h	/^#   define Tcl_ConsolePanic /;"	d
Tcl_ConsolePanic	win/tclWinPanic.c	/^Tcl_ConsolePanic($/;"	f	typeref:typename:TCL_NORETURN void
Tcl_ConstObjCmd	generic/tclInt.h	/^MODULE_SCOPE Tcl_ObjCmdProc Tcl_ConstObjCmd;$/;"	v	typeref:typename:MODULE_SCOPE Tcl_ObjCmdProc
Tcl_ConstObjCmd	generic/tclVar.c	/^Tcl_ConstObjCmd($/;"	f	typeref:typename:int
Tcl_ContinueObjCmd	generic/tclCmdAH.c	/^Tcl_ContinueObjCmd($/;"	f	typeref:typename:int
Tcl_ContinueObjCmd	generic/tclInt.h	/^MODULE_SCOPE Tcl_ObjCmdProc Tcl_ContinueObjCmd;$/;"	v	typeref:typename:MODULE_SCOPE Tcl_ObjCmdProc
Tcl_ConvertCountedElement	generic/tclDecls.h	/^#define Tcl_ConvertCountedElement /;"	d
Tcl_ConvertCountedElement	generic/tclUtil.c	/^Tcl_ConvertCountedElement($/;"	f	typeref:typename:Tcl_Size
Tcl_ConvertElement	generic/tclDecls.h	/^#define Tcl_ConvertElement /;"	d
Tcl_ConvertElement	generic/tclUtil.c	/^Tcl_ConvertElement($/;"	f	typeref:typename:Tcl_Size
Tcl_ConvertToType	generic/tclDecls.h	/^#define Tcl_ConvertToType /;"	d
Tcl_ConvertToType	generic/tclObj.c	/^Tcl_ConvertToType($/;"	f	typeref:typename:int
Tcl_CopyObjectInstance	generic/tclOO.c	/^Tcl_CopyObjectInstance($/;"	f	typeref:typename:Tcl_Object
Tcl_CopyObjectInstance	generic/tclOODecls.h	/^#define Tcl_CopyObjectInstance /;"	d
Tcl_CreateAlias	doc/CrtAlias.3	/^.TH Tcl_CreateAlias 3 7.6 Tcl "Tcl Library Procedures"$/;"	t
Tcl_CreateAlias	generic/tclDecls.h	/^#define Tcl_CreateAlias /;"	d
Tcl_CreateAlias	generic/tclInterp.c	/^Tcl_CreateAlias($/;"	f	typeref:typename:int
Tcl_CreateAliasObj	generic/tclDecls.h	/^#define Tcl_CreateAliasObj /;"	d
Tcl_CreateAliasObj	generic/tclInterp.c	/^Tcl_CreateAliasObj($/;"	f	typeref:typename:int
Tcl_CreateChannel	doc/CrtChannel.3	/^.TH Tcl_CreateChannel 3 8.4 Tcl "Tcl Library Procedures"$/;"	t
Tcl_CreateChannel	generic/tclDecls.h	/^#define Tcl_CreateChannel /;"	d
Tcl_CreateChannel	generic/tclIO.c	/^Tcl_CreateChannel($/;"	f	typeref:typename:Tcl_Channel
Tcl_CreateChannelHandler	doc/CrtChnlHdlr.3	/^.TH Tcl_CreateChannelHandler 3 7.5 Tcl "Tcl Library Procedures"$/;"	t
Tcl_CreateChannelHandler	generic/tclDecls.h	/^#define Tcl_CreateChannelHandler /;"	d
Tcl_CreateChannelHandler	generic/tclIO.c	/^Tcl_CreateChannelHandler($/;"	f	typeref:typename:void
Tcl_CreateChild	generic/tclDecls.h	/^#define Tcl_CreateChild /;"	d
Tcl_CreateChild	generic/tclInterp.c	/^Tcl_CreateChild($/;"	f	typeref:typename:Tcl_Interp *
Tcl_CreateCloseHandler	doc/CrtCloseHdlr.3	/^.TH Tcl_CreateCloseHandler 3 7.5 Tcl "Tcl Library Procedures"$/;"	t
Tcl_CreateCloseHandler	generic/tclDecls.h	/^#define Tcl_CreateCloseHandler /;"	d
Tcl_CreateCloseHandler	generic/tclIO.c	/^Tcl_CreateCloseHandler($/;"	f	typeref:typename:void
Tcl_CreateCommand	doc/CrtCommand.3	/^.TH Tcl_CreateCommand 3 "" Tcl "Tcl Library Procedures"$/;"	t
Tcl_CreateCommand	generic/tclBasic.c	/^Tcl_CreateCommand($/;"	f	typeref:typename:Tcl_Command
Tcl_CreateCommand	generic/tclDecls.h	/^#define Tcl_CreateCommand /;"	d
Tcl_CreateEncoding	generic/tclDecls.h	/^#define Tcl_CreateEncoding /;"	d
Tcl_CreateEncoding	generic/tclEncoding.c	/^Tcl_CreateEncoding($/;"	f	typeref:typename:Tcl_Encoding
Tcl_CreateEnsemble	generic/tclDecls.h	/^#define Tcl_CreateEnsemble /;"	d
Tcl_CreateEnsemble	generic/tclEnsemble.c	/^Tcl_CreateEnsemble($/;"	f	typeref:typename:Tcl_Command
Tcl_CreateEventSource	generic/tclDecls.h	/^#define Tcl_CreateEventSource /;"	d
Tcl_CreateEventSource	generic/tclNotify.c	/^Tcl_CreateEventSource($/;"	f	typeref:typename:void
Tcl_CreateExitHandler	generic/tclDecls.h	/^#define Tcl_CreateExitHandler /;"	d
Tcl_CreateExitHandler	generic/tclEvent.c	/^Tcl_CreateExitHandler($/;"	f	typeref:typename:void
Tcl_CreateFileHandler	doc/CrtFileHdlr.3	/^.TH Tcl_CreateFileHandler 3 8.0 Tcl "Tcl Library Procedures"$/;"	t
Tcl_CreateFileHandler	generic/tclDecls.h	/^#define Tcl_CreateFileHandler /;"	d
Tcl_CreateFileHandler	generic/tclNotify.c	/^Tcl_CreateFileHandler($/;"	f	typeref:typename:void
Tcl_CreateFileHandler	generic/tclStubInit.c	/^#   define Tcl_CreateFileHandler /;"	d	file:
Tcl_CreateFileHandlerProc	generic/tcl.h	/^typedef void (Tcl_CreateFileHandlerProc) (int fd, int mask, Tcl_FileProc *proc,$/;"	t	typeref:typename:void ()(int fd,int mask,Tcl_FileProc * proc,void * clientData)
Tcl_CreateHashEntry	generic/tcl.h	/^#define Tcl_CreateHashEntry(/;"	d
Tcl_CreateInterp	doc/CrtInterp.3	/^.TH Tcl_CreateInterp 3 7.5 Tcl "Tcl Library Procedures"$/;"	t
Tcl_CreateInterp	generic/tclBasic.c	/^Tcl_CreateInterp(void)$/;"	f	typeref:typename:Tcl_Interp *
Tcl_CreateInterp	generic/tclDecls.h	/^#define Tcl_CreateInterp /;"	d
Tcl_CreateNamespace	generic/tclDecls.h	/^#define Tcl_CreateNamespace /;"	d
Tcl_CreateNamespace	generic/tclNamesp.c	/^Tcl_CreateNamespace($/;"	f	typeref:typename:Tcl_Namespace *
Tcl_CreateObjCommand	doc/CrtObjCmd.3	/^.TH Tcl_CreateObjCommand 3 8.0 Tcl "Tcl Library Procedures"$/;"	t
Tcl_CreateObjCommand	generic/tclBasic.c	/^Tcl_CreateObjCommand($/;"	f	typeref:typename:Tcl_Command
Tcl_CreateObjCommand	generic/tclDecls.h	/^#define Tcl_CreateObjCommand /;"	d
Tcl_CreateObjCommand2	generic/tclBasic.c	/^Tcl_CreateObjCommand2($/;"	f	typeref:typename:Tcl_Command
Tcl_CreateObjCommand2	generic/tclDecls.h	/^#define Tcl_CreateObjCommand2 /;"	d
Tcl_CreateObjCommand2	win/tclWinDde.c	/^#   define Tcl_CreateObjCommand2 /;"	d	file:
Tcl_CreateObjCommand2	win/tclWinReg.c	/^#   define Tcl_CreateObjCommand2 /;"	d	file:
Tcl_CreateObjTrace	generic/tclDecls.h	/^#define Tcl_CreateObjTrace /;"	d
Tcl_CreateObjTrace	generic/tclTrace.c	/^Tcl_CreateObjTrace($/;"	f	typeref:typename:Tcl_Trace
Tcl_CreateObjTrace2	generic/tclDecls.h	/^#define Tcl_CreateObjTrace2 /;"	d
Tcl_CreateObjTrace2	generic/tclTrace.c	/^Tcl_CreateObjTrace2($/;"	f	typeref:typename:Tcl_Trace
Tcl_CreatePipe	generic/tclDecls.h	/^#define Tcl_CreatePipe /;"	d
Tcl_CreatePipe	unix/tclUnixPipe.c	/^Tcl_CreatePipe($/;"	f	typeref:typename:int
Tcl_CreatePipe	win/tclWinPipe.c	/^Tcl_CreatePipe($/;"	f	typeref:typename:int
Tcl_CreateThread	generic/tclDecls.h	/^#define Tcl_CreateThread /;"	d
Tcl_CreateThread	generic/tclEvent.c	/^Tcl_CreateThread($/;"	f	typeref:typename:int
Tcl_CreateThreadExitHandler	generic/tclDecls.h	/^#define Tcl_CreateThreadExitHandler /;"	d
Tcl_CreateThreadExitHandler	generic/tclEvent.c	/^Tcl_CreateThreadExitHandler($/;"	f	typeref:typename:void
Tcl_CreateTimerHandler	doc/CrtTimerHdlr.3	/^.TH Tcl_CreateTimerHandler 3 7.5 Tcl "Tcl Library Procedures"$/;"	t
Tcl_CreateTimerHandler	generic/tclDecls.h	/^#define Tcl_CreateTimerHandler /;"	d
Tcl_CreateTimerHandler	generic/tclTimer.c	/^Tcl_CreateTimerHandler($/;"	f	typeref:typename:Tcl_TimerToken
Tcl_CreateTrace	doc/CrtTrace.3	/^.TH Tcl_CreateTrace 3 "" Tcl "Tcl Library Procedures"$/;"	t
Tcl_CreateTrace	generic/tclDecls.h	/^#define Tcl_CreateTrace /;"	d
Tcl_CreateTrace	generic/tclTrace.c	/^Tcl_CreateTrace($/;"	f	typeref:typename:Tcl_Trace
Tcl_CutChannel	generic/tclDecls.h	/^#define Tcl_CutChannel /;"	d
Tcl_CutChannel	generic/tclIO.c	/^Tcl_CutChannel($/;"	f	typeref:typename:void
Tcl_DString	doc/DString.3	/^.TH Tcl_DString 3 7.4 Tcl "Tcl Library Procedures"$/;"	t
Tcl_DString	generic/tcl.h	/^typedef struct Tcl_DString {$/;"	s
Tcl_DString	generic/tcl.h	/^} Tcl_DString;$/;"	t	typeref:struct:Tcl_DString
Tcl_DStringAppend	generic/tclDecls.h	/^#define Tcl_DStringAppend /;"	d
Tcl_DStringAppend	generic/tclUtil.c	/^Tcl_DStringAppend($/;"	f	typeref:typename:char *
Tcl_DStringAppendElement	generic/tclDecls.h	/^#define Tcl_DStringAppendElement /;"	d
Tcl_DStringAppendElement	generic/tclUtil.c	/^Tcl_DStringAppendElement($/;"	f	typeref:typename:char *
Tcl_DStringEndSublist	generic/tclDecls.h	/^#define Tcl_DStringEndSublist /;"	d
Tcl_DStringEndSublist	generic/tclUtil.c	/^Tcl_DStringEndSublist($/;"	f	typeref:typename:void
Tcl_DStringFree	generic/tclDecls.h	/^#define Tcl_DStringFree /;"	d
Tcl_DStringFree	generic/tclUtil.c	/^Tcl_DStringFree($/;"	f	typeref:typename:void
Tcl_DStringGetResult	generic/tclDecls.h	/^#define Tcl_DStringGetResult /;"	d
Tcl_DStringGetResult	generic/tclUtil.c	/^Tcl_DStringGetResult($/;"	f	typeref:typename:void
Tcl_DStringInit	generic/tclDecls.h	/^#define Tcl_DStringInit /;"	d
Tcl_DStringInit	generic/tclUtil.c	/^Tcl_DStringInit($/;"	f	typeref:typename:void
Tcl_DStringLength	generic/tcl.h	/^#define Tcl_DStringLength(/;"	d
Tcl_DStringResult	generic/tclDecls.h	/^#define Tcl_DStringResult /;"	d
Tcl_DStringResult	generic/tclUtil.c	/^Tcl_DStringResult($/;"	f	typeref:typename:void
Tcl_DStringSetLength	generic/tclDecls.h	/^#define Tcl_DStringSetLength /;"	d
Tcl_DStringSetLength	generic/tclUtil.c	/^Tcl_DStringSetLength($/;"	f	typeref:typename:void
Tcl_DStringStartSublist	generic/tclDecls.h	/^#define Tcl_DStringStartSublist /;"	d
Tcl_DStringStartSublist	generic/tclUtil.c	/^Tcl_DStringStartSublist($/;"	f	typeref:typename:void
Tcl_DStringToObj	generic/tclDecls.h	/^#define Tcl_DStringToObj /;"	d
Tcl_DStringToObj	generic/tclUtil.c	/^Tcl_DStringToObj($/;"	f	typeref:typename:Tcl_Obj *
Tcl_DStringValue	generic/tcl.h	/^#define Tcl_DStringValue(/;"	d
Tcl_DbCkalloc	generic/tclCkalloc.c	/^Tcl_DbCkalloc($/;"	f	typeref:typename:void *
Tcl_DbCkalloc	generic/tclDecls.h	/^#define Tcl_DbCkalloc /;"	d
Tcl_DbCkfree	generic/tclCkalloc.c	/^Tcl_DbCkfree($/;"	f	typeref:typename:void
Tcl_DbCkfree	generic/tclDecls.h	/^#define Tcl_DbCkfree /;"	d
Tcl_DbCkrealloc	generic/tclCkalloc.c	/^Tcl_DbCkrealloc($/;"	f	typeref:typename:void *
Tcl_DbCkrealloc	generic/tclDecls.h	/^#define Tcl_DbCkrealloc /;"	d
Tcl_DbDecrRefCount	generic/tclDecls.h	/^#define Tcl_DbDecrRefCount /;"	d
Tcl_DbDecrRefCount	generic/tclObj.c	/^Tcl_DbDecrRefCount($/;"	f	typeref:typename:void
Tcl_DbIncrRefCount	generic/tclDecls.h	/^#define Tcl_DbIncrRefCount /;"	d
Tcl_DbIncrRefCount	generic/tclObj.c	/^Tcl_DbIncrRefCount($/;"	f	typeref:typename:void
Tcl_DbIsShared	generic/tclDecls.h	/^#define Tcl_DbIsShared /;"	d
Tcl_DbIsShared	generic/tclObj.c	/^Tcl_DbIsShared($/;"	f	typeref:typename:int
Tcl_DbNewBignumObj	generic/tclDecls.h	/^#define Tcl_DbNewBignumObj /;"	d
Tcl_DbNewBignumObj	generic/tclObj.c	/^Tcl_DbNewBignumObj($/;"	f	typeref:typename:Tcl_Obj *
Tcl_DbNewBooleanObj	generic/tclDecls.h	/^#define Tcl_DbNewBooleanObj(/;"	d
Tcl_DbNewByteArrayObj	generic/tclBinary.c	/^Tcl_DbNewByteArrayObj($/;"	f	typeref:typename:Tcl_Obj *
Tcl_DbNewByteArrayObj	generic/tclDecls.h	/^#define Tcl_DbNewByteArrayObj /;"	d
Tcl_DbNewDictObj	generic/tclDecls.h	/^#define Tcl_DbNewDictObj /;"	d
Tcl_DbNewDictObj	generic/tclDictObj.c	/^Tcl_DbNewDictObj($/;"	f	typeref:typename:Tcl_Obj *
Tcl_DbNewDoubleObj	generic/tclDecls.h	/^#define Tcl_DbNewDoubleObj /;"	d
Tcl_DbNewDoubleObj	generic/tclObj.c	/^Tcl_DbNewDoubleObj($/;"	f	typeref:typename:Tcl_Obj *
Tcl_DbNewListObj	generic/tclDecls.h	/^#define Tcl_DbNewListObj /;"	d
Tcl_DbNewListObj	generic/tclListObj.c	/^Tcl_DbNewListObj($/;"	f	typeref:typename:Tcl_Obj *
Tcl_DbNewLongObj	generic/tclDecls.h	/^#define Tcl_DbNewLongObj(/;"	d
Tcl_DbNewObj	generic/tclDecls.h	/^#define Tcl_DbNewObj /;"	d
Tcl_DbNewObj	generic/tclObj.c	/^Tcl_DbNewObj($/;"	f	typeref:typename:Tcl_Obj *
Tcl_DbNewStringObj	generic/tclDecls.h	/^#define Tcl_DbNewStringObj /;"	d
Tcl_DbNewStringObj	generic/tclStringObj.c	/^Tcl_DbNewStringObj($/;"	f	typeref:typename:Tcl_Obj *
Tcl_DbNewWideIntObj	generic/tclDecls.h	/^#define Tcl_DbNewWideIntObj /;"	d
Tcl_DbNewWideIntObj	generic/tclObj.c	/^Tcl_DbNewWideIntObj($/;"	f	typeref:typename:Tcl_Obj *
Tcl_DecrRefCount	generic/tcl.h	/^#   define Tcl_DecrRefCount(/;"	d
Tcl_DecrRefCount	generic/tclDecls.h	/^#define Tcl_DecrRefCount /;"	d
Tcl_DecrRefCount	generic/tclObj.c	/^Tcl_DecrRefCount($/;"	f	typeref:typename:void
Tcl_DeleteAssocData	generic/tclBasic.c	/^Tcl_DeleteAssocData($/;"	f	typeref:typename:void
Tcl_DeleteAssocData	generic/tclDecls.h	/^#define Tcl_DeleteAssocData /;"	d
Tcl_DeleteChannelHandler	generic/tclDecls.h	/^#define Tcl_DeleteChannelHandler /;"	d
Tcl_DeleteChannelHandler	generic/tclIO.c	/^Tcl_DeleteChannelHandler($/;"	f	typeref:typename:void
Tcl_DeleteCloseHandler	generic/tclDecls.h	/^#define Tcl_DeleteCloseHandler /;"	d
Tcl_DeleteCloseHandler	generic/tclIO.c	/^Tcl_DeleteCloseHandler($/;"	f	typeref:typename:void
Tcl_DeleteCommand	generic/tclBasic.c	/^Tcl_DeleteCommand($/;"	f	typeref:typename:int
Tcl_DeleteCommand	generic/tclDecls.h	/^#define Tcl_DeleteCommand /;"	d
Tcl_DeleteCommandFromToken	generic/tclBasic.c	/^Tcl_DeleteCommandFromToken($/;"	f	typeref:typename:int
Tcl_DeleteCommandFromToken	generic/tclDecls.h	/^#define Tcl_DeleteCommandFromToken /;"	d
Tcl_DeleteEventSource	generic/tclDecls.h	/^#define Tcl_DeleteEventSource /;"	d
Tcl_DeleteEventSource	generic/tclNotify.c	/^Tcl_DeleteEventSource($/;"	f	typeref:typename:void
Tcl_DeleteEvents	generic/tclDecls.h	/^#define Tcl_DeleteEvents /;"	d
Tcl_DeleteEvents	generic/tclNotify.c	/^Tcl_DeleteEvents($/;"	f	typeref:typename:void
Tcl_DeleteExitHandler	generic/tclDecls.h	/^#define Tcl_DeleteExitHandler /;"	d
Tcl_DeleteExitHandler	generic/tclEvent.c	/^Tcl_DeleteExitHandler($/;"	f	typeref:typename:void
Tcl_DeleteFileHandler	generic/tclDecls.h	/^#define Tcl_DeleteFileHandler /;"	d
Tcl_DeleteFileHandler	generic/tclNotify.c	/^Tcl_DeleteFileHandler($/;"	f	typeref:typename:void
Tcl_DeleteFileHandler	generic/tclStubInit.c	/^#   define Tcl_DeleteFileHandler /;"	d	file:
Tcl_DeleteFileHandlerProc	generic/tcl.h	/^typedef void (Tcl_DeleteFileHandlerProc) (int fd);$/;"	t	typeref:typename:void ()(int fd)
Tcl_DeleteHashEntry	generic/tclDecls.h	/^#define Tcl_DeleteHashEntry /;"	d
Tcl_DeleteHashEntry	generic/tclHash.c	/^Tcl_DeleteHashEntry($/;"	f	typeref:typename:void
Tcl_DeleteHashTable	generic/tclDecls.h	/^#define Tcl_DeleteHashTable /;"	d
Tcl_DeleteHashTable	generic/tclHash.c	/^Tcl_DeleteHashTable($/;"	f	typeref:typename:void
Tcl_DeleteInterp	generic/tclBasic.c	/^Tcl_DeleteInterp($/;"	f	typeref:typename:void
Tcl_DeleteInterp	generic/tclDecls.h	/^#define Tcl_DeleteInterp /;"	d
Tcl_DeleteNamespace	generic/tclDecls.h	/^#define Tcl_DeleteNamespace /;"	d
Tcl_DeleteNamespace	generic/tclNamesp.c	/^Tcl_DeleteNamespace($/;"	f	typeref:typename:void
Tcl_DeleteThreadExitHandler	generic/tclDecls.h	/^#define Tcl_DeleteThreadExitHandler /;"	d
Tcl_DeleteThreadExitHandler	generic/tclEvent.c	/^Tcl_DeleteThreadExitHandler($/;"	f	typeref:typename:void
Tcl_DeleteTimerHandler	generic/tclDecls.h	/^#define Tcl_DeleteTimerHandler /;"	d
Tcl_DeleteTimerHandler	generic/tclTimer.c	/^Tcl_DeleteTimerHandler($/;"	f	typeref:typename:void
Tcl_DeleteTrace	generic/tclDecls.h	/^#define Tcl_DeleteTrace /;"	d
Tcl_DeleteTrace	generic/tclTrace.c	/^Tcl_DeleteTrace($/;"	f	typeref:typename:void
Tcl_DetachChannel	generic/tclDecls.h	/^#define Tcl_DetachChannel /;"	d
Tcl_DetachChannel	generic/tclIO.c	/^Tcl_DetachChannel($/;"	f	typeref:typename:int
Tcl_DetachPids	doc/DetachPids.3	/^.TH Tcl_DetachPids 3 "" Tcl "Tcl Library Procedures"$/;"	t
Tcl_DetachPids	generic/tclDecls.h	/^#define Tcl_DetachPids /;"	d
Tcl_DetachPids	generic/tclPipe.c	/^Tcl_DetachPids($/;"	f	typeref:typename:void
Tcl_Dict	generic/tcl.h	/^typedef struct Tcl_Dict_ *Tcl_Dict;$/;"	t	typeref:struct:Tcl_Dict_ *
Tcl_DictObj	doc/DictObj.3	/^.TH Tcl_DictObj 3 8.5 Tcl "Tcl Library Procedures"$/;"	t
Tcl_DictObjDone	generic/tclDecls.h	/^#define Tcl_DictObjDone /;"	d
Tcl_DictObjDone	generic/tclDictObj.c	/^Tcl_DictObjDone($/;"	f	typeref:typename:void
Tcl_DictObjFirst	generic/tclDecls.h	/^#define Tcl_DictObjFirst /;"	d
Tcl_DictObjFirst	generic/tclDictObj.c	/^Tcl_DictObjFirst($/;"	f	typeref:typename:int
Tcl_DictObjGet	generic/tclDecls.h	/^#define Tcl_DictObjGet /;"	d
Tcl_DictObjGet	generic/tclDictObj.c	/^Tcl_DictObjGet($/;"	f	typeref:typename:int
Tcl_DictObjNext	generic/tclDecls.h	/^#define Tcl_DictObjNext /;"	d
Tcl_DictObjNext	generic/tclDictObj.c	/^Tcl_DictObjNext($/;"	f	typeref:typename:void
Tcl_DictObjPut	generic/tclDecls.h	/^#define Tcl_DictObjPut /;"	d
Tcl_DictObjPut	generic/tclDictObj.c	/^Tcl_DictObjPut($/;"	f	typeref:typename:int
Tcl_DictObjPutKeyList	generic/tclDecls.h	/^#define Tcl_DictObjPutKeyList /;"	d
Tcl_DictObjPutKeyList	generic/tclDictObj.c	/^Tcl_DictObjPutKeyList($/;"	f	typeref:typename:int
Tcl_DictObjRemove	generic/tclDecls.h	/^#define Tcl_DictObjRemove /;"	d
Tcl_DictObjRemove	generic/tclDictObj.c	/^Tcl_DictObjRemove($/;"	f	typeref:typename:int
Tcl_DictObjRemoveKeyList	generic/tclDecls.h	/^#define Tcl_DictObjRemoveKeyList /;"	d
Tcl_DictObjRemoveKeyList	generic/tclDictObj.c	/^Tcl_DictObjRemoveKeyList($/;"	f	typeref:typename:int
Tcl_DictObjSize	generic/tclDecls.h	/^#define Tcl_DictObjSize /;"	d
Tcl_DictObjSize	generic/tclDictObj.c	/^Tcl_DictObjSize($/;"	f	typeref:typename:int
Tcl_DictSearch	generic/tcl.h	/^} Tcl_DictSearch;$/;"	t	typeref:struct:__anon937aefea0908
Tcl_DirEntry	unix/tclUnixPort.h	/^typedef struct dirent		Tcl_DirEntry;$/;"	t	typeref:struct:dirent
Tcl_DirEntry	unix/tclUnixPort.h	/^typedef struct dirent64		Tcl_DirEntry;$/;"	t	typeref:struct:dirent64
Tcl_DisassembleObjCmd	generic/tclDisassemble.c	/^Tcl_DisassembleObjCmd($/;"	f	typeref:typename:int
Tcl_DisassembleObjCmd	generic/tclInt.h	/^MODULE_SCOPE Tcl_ObjCmdProc Tcl_DisassembleObjCmd;$/;"	v	typeref:typename:MODULE_SCOPE Tcl_ObjCmdProc
Tcl_DiscardInterpState	generic/tclDecls.h	/^#define Tcl_DiscardInterpState /;"	d
Tcl_DiscardInterpState	generic/tclResult.c	/^Tcl_DiscardInterpState($/;"	f	typeref:typename:void
Tcl_DoOneEvent	doc/DoOneEvent.3	/^.TH Tcl_DoOneEvent 3 7.5 Tcl "Tcl Library Procedures"$/;"	t
Tcl_DoOneEvent	generic/tclDecls.h	/^#define Tcl_DoOneEvent /;"	d
Tcl_DoOneEvent	generic/tclNotify.c	/^Tcl_DoOneEvent($/;"	f	typeref:typename:int
Tcl_DoWhenIdle	doc/DoWhenIdle.3	/^.TH Tcl_DoWhenIdle 3 7.5 Tcl "Tcl Library Procedures"$/;"	t
Tcl_DoWhenIdle	generic/tclDecls.h	/^#define Tcl_DoWhenIdle /;"	d
Tcl_DoWhenIdle	generic/tclTimer.c	/^Tcl_DoWhenIdle($/;"	f	typeref:typename:void
Tcl_DontCallWhenDeleted	generic/tclBasic.c	/^Tcl_DontCallWhenDeleted($/;"	f	typeref:typename:void
Tcl_DontCallWhenDeleted	generic/tclDecls.h	/^#define Tcl_DontCallWhenDeleted /;"	d
Tcl_DoubleAsWide	generic/tcl.h	/^#define Tcl_DoubleAsWide(/;"	d
Tcl_DoubleObj	doc/DoubleObj.3	/^.TH Tcl_DoubleObj 3 8.0 Tcl "Tcl Library Procedures"$/;"	t
Tcl_DriverBlockModeProc	generic/tcl.h	/^typedef int	(Tcl_DriverBlockModeProc) (void *instanceData, int mode);$/;"	t	typeref:typename:int ()(void * instanceData,int mode)
Tcl_DriverClose2Proc	generic/tcl.h	/^typedef int	(Tcl_DriverClose2Proc) (void *instanceData,$/;"	t	typeref:typename:int ()(void * instanceData,Tcl_Interp * interp,int flags)
Tcl_DriverCloseProc	generic/tcl.h	/^typedef void Tcl_DriverCloseProc;$/;"	t	typeref:typename:void
Tcl_DriverFlushProc	generic/tcl.h	/^typedef int	(Tcl_DriverFlushProc) (void *instanceData);$/;"	t	typeref:typename:int ()(void * instanceData)
Tcl_DriverGetHandleProc	generic/tcl.h	/^typedef int	(Tcl_DriverGetHandleProc) (void *instanceData,$/;"	t	typeref:typename:int ()(void * instanceData,int direction,void ** handlePtr)
Tcl_DriverGetOptionProc	generic/tcl.h	/^typedef int	(Tcl_DriverGetOptionProc) (void *instanceData,$/;"	t	typeref:typename:int ()(void * instanceData,Tcl_Interp * interp,const char * optionName,Tcl_DString * dsPtr)
Tcl_DriverHandlerProc	generic/tcl.h	/^typedef int	(Tcl_DriverHandlerProc) (void *instanceData,$/;"	t	typeref:typename:int ()(void * instanceData,int interestMask)
Tcl_DriverInputProc	generic/tcl.h	/^typedef int	(Tcl_DriverInputProc) (void *instanceData, char *buf,$/;"	t	typeref:typename:int ()(void * instanceData,char * buf,int toRead,int * errorCodePtr)
Tcl_DriverOutputProc	generic/tcl.h	/^typedef int	(Tcl_DriverOutputProc) (void *instanceData,$/;"	t	typeref:typename:int ()(void * instanceData,const char * buf,int toWrite,int * errorCodePtr)
Tcl_DriverSeekProc	generic/tcl.h	/^typedef void Tcl_DriverSeekProc;$/;"	t	typeref:typename:void
Tcl_DriverSetOptionProc	generic/tcl.h	/^typedef int	(Tcl_DriverSetOptionProc) (void *instanceData,$/;"	t	typeref:typename:int ()(void * instanceData,Tcl_Interp * interp,const char * optionName,const char * value)
Tcl_DriverThreadActionProc	generic/tcl.h	/^typedef void	(Tcl_DriverThreadActionProc) (void *instanceData,$/;"	t	typeref:typename:void ()(void * instanceData,int action)
Tcl_DriverTruncateProc	generic/tcl.h	/^typedef int	(Tcl_DriverTruncateProc) (void *instanceData,$/;"	t	typeref:typename:int ()(void * instanceData,long long length)
Tcl_DriverWatchProc	generic/tcl.h	/^typedef void	(Tcl_DriverWatchProc) (void *instanceData, int mask);$/;"	t	typeref:typename:void ()(void * instanceData,int mask)
Tcl_DriverWideSeekProc	generic/tcl.h	/^typedef long long (Tcl_DriverWideSeekProc) (void *instanceData,$/;"	t	typeref:typename:long long ()(void * instanceData,long long offset,int mode,int * errorCodePtr)
Tcl_DumpActiveMemory	doc/DumpActiveMemory.3	/^.TH "Tcl_DumpActiveMemory" 3 8.1 Tcl "Tcl Library Procedures"$/;"	t
Tcl_DumpActiveMemory	generic/tcl.h	/^#   define Tcl_DumpActiveMemory(/;"	d
Tcl_DumpActiveMemory	generic/tclCkalloc.c	/^Tcl_DumpActiveMemory($/;"	f	typeref:typename:int
Tcl_DumpActiveMemory	generic/tclDecls.h	/^#define Tcl_DumpActiveMemory /;"	d
Tcl_DupInternalRepProc	generic/tcl.h	/^typedef void (Tcl_DupInternalRepProc) (struct Tcl_Obj *srcPtr,$/;"	t	typeref:typename:void ()(struct Tcl_Obj * srcPtr,struct Tcl_Obj * dupPtr)
Tcl_DuplicateObj	generic/tclDecls.h	/^#define Tcl_DuplicateObj /;"	d
Tcl_DuplicateObj	generic/tclObj.c	/^Tcl_DuplicateObj($/;"	f	typeref:typename:Tcl_Obj *
Tcl_DyldLoadHandle	unix/tclLoadDyld.c	/^} Tcl_DyldLoadHandle;$/;"	t	typeref:struct:__anoncff33eb90108	file:
Tcl_DyldModuleHandle	unix/tclLoadDyld.c	/^typedef struct Tcl_DyldModuleHandle {$/;"	s	file:
Tcl_DyldModuleHandle	unix/tclLoadDyld.c	/^} Tcl_DyldModuleHandle;$/;"	t	typeref:struct:Tcl_DyldModuleHandle	file:
Tcl_Encoding	generic/tcl.h	/^typedef struct Tcl_Encoding_ *Tcl_Encoding;$/;"	t	typeref:struct:Tcl_Encoding_ *
Tcl_EncodingConvertProc	generic/tcl.h	/^typedef int (Tcl_EncodingConvertProc) (void *clientData, const char *src,$/;"	t	typeref:typename:int ()(void * clientData,const char * src,int srcLen,int flags,Tcl_EncodingState * statePtr,char * dst,int dstLen,int * srcReadPtr,int * dstWrotePtr,int * dstCharsPtr)
Tcl_EncodingFreeProc	generic/tcl.h	/^#define Tcl_EncodingFreeProc /;"	d
Tcl_EncodingFreeProc	generic/tcl.h	/^typedef void (Tcl_EncodingFreeProc) (void *clientData);$/;"	t	typeref:typename:void ()(void * clientData)
Tcl_EncodingState	generic/tcl.h	/^typedef struct Tcl_EncodingState_ *Tcl_EncodingState;$/;"	t	typeref:struct:Tcl_EncodingState_ *
Tcl_EncodingType	generic/tcl.h	/^typedef struct Tcl_EncodingType {$/;"	s
Tcl_EncodingType	generic/tcl.h	/^} Tcl_EncodingType;$/;"	t	typeref:struct:Tcl_EncodingType
Tcl_Ensemble	doc/Ensemble.3	/^.TH Tcl_Ensemble 3 8.5 Tcl "Tcl Library Procedures"$/;"	t
Tcl_Ensemble	generic/tclInt.h	/^typedef struct Tcl_Ensemble Tcl_Ensemble;$/;"	t	typeref:struct:Tcl_Ensemble
Tcl_Eof	generic/tclDecls.h	/^#define Tcl_Eof /;"	d
Tcl_Eof	generic/tclIO.c	/^Tcl_Eof($/;"	f	typeref:typename:int
Tcl_EofObjCmd	generic/tclIOCmd.c	/^Tcl_EofObjCmd($/;"	f	typeref:typename:int
Tcl_EofObjCmd	generic/tclInt.h	/^MODULE_SCOPE Tcl_ObjCmdProc Tcl_EofObjCmd;$/;"	v	typeref:typename:MODULE_SCOPE Tcl_ObjCmdProc
Tcl_ErrnoId	generic/tclDecls.h	/^#define Tcl_ErrnoId /;"	d
Tcl_ErrnoId	generic/tclPosixStr.c	/^Tcl_ErrnoId(void)$/;"	f	typeref:typename:const char *
Tcl_ErrnoMsg	generic/tclDecls.h	/^#define Tcl_ErrnoMsg /;"	d
Tcl_ErrnoMsg	generic/tclPosixStr.c	/^Tcl_ErrnoMsg($/;"	f	typeref:typename:const char *
Tcl_ErrorObjCmd	generic/tclCmdAH.c	/^Tcl_ErrorObjCmd($/;"	f	typeref:typename:int
Tcl_ErrorObjCmd	generic/tclInt.h	/^MODULE_SCOPE Tcl_ObjCmdProc Tcl_ErrorObjCmd;$/;"	v	typeref:typename:MODULE_SCOPE Tcl_ObjCmdProc
Tcl_Eval	doc/Eval.3	/^.TH Tcl_Eval 3 8.1 Tcl "Tcl Library Procedures"$/;"	t
Tcl_Eval	generic/tclDecls.h	/^#define Tcl_Eval(/;"	d
Tcl_EvalEx	generic/tclBasic.c	/^Tcl_EvalEx($/;"	f	typeref:typename:int
Tcl_EvalEx	generic/tclDecls.h	/^#define Tcl_EvalEx /;"	d
Tcl_EvalFile	generic/tclDecls.h	/^#define Tcl_EvalFile /;"	d
Tcl_EvalFile	generic/tclIOUtil.c	/^Tcl_EvalFile($/;"	f	typeref:typename:int
Tcl_EvalObj	generic/tclDecls.h	/^#define Tcl_EvalObj(/;"	d
Tcl_EvalObjCmd	generic/tclCmdAH.c	/^Tcl_EvalObjCmd($/;"	f	typeref:typename:int
Tcl_EvalObjCmd	generic/tclInt.h	/^MODULE_SCOPE Tcl_ObjCmdProc Tcl_EvalObjCmd;$/;"	v	typeref:typename:MODULE_SCOPE Tcl_ObjCmdProc
Tcl_EvalObjEx	generic/tclBasic.c	/^Tcl_EvalObjEx($/;"	f	typeref:typename:int
Tcl_EvalObjEx	generic/tclDecls.h	/^#define Tcl_EvalObjEx /;"	d
Tcl_EvalObjv	generic/tclBasic.c	/^Tcl_EvalObjv($/;"	f	typeref:typename:int
Tcl_EvalObjv	generic/tclDecls.h	/^#define Tcl_EvalObjv /;"	d
Tcl_EvalTokensStandard	generic/tclBasic.c	/^Tcl_EvalTokensStandard($/;"	f	typeref:typename:int
Tcl_EvalTokensStandard	generic/tclDecls.h	/^#define Tcl_EvalTokensStandard /;"	d
Tcl_Event	generic/tcl.h	/^struct Tcl_Event {$/;"	s
Tcl_Event	generic/tcl.h	/^typedef struct Tcl_Event Tcl_Event;$/;"	t	typeref:struct:Tcl_Event
Tcl_EventCheckProc	generic/tcl.h	/^typedef void (Tcl_EventCheckProc) (void *clientData, int flags);$/;"	t	typeref:typename:void ()(void * clientData,int flags)
Tcl_EventDeleteProc	generic/tcl.h	/^typedef int (Tcl_EventDeleteProc) (Tcl_Event *evPtr, void *clientData);$/;"	t	typeref:typename:int ()(Tcl_Event * evPtr,void * clientData)
Tcl_EventProc	generic/tcl.h	/^typedef int (Tcl_EventProc) (Tcl_Event *evPtr, int flags);$/;"	t	typeref:typename:int ()(Tcl_Event * evPtr,int flags)
Tcl_EventSetupProc	generic/tcl.h	/^typedef void (Tcl_EventSetupProc) (void *clientData, int flags);$/;"	t	typeref:typename:void ()(void * clientData,int flags)
Tcl_EventuallyFree	generic/tclDecls.h	/^#define Tcl_EventuallyFree /;"	d
Tcl_EventuallyFree	generic/tclPreserve.c	/^Tcl_EventuallyFree($/;"	f	typeref:typename:void
Tcl_ExecObjCmd	generic/tclIOCmd.c	/^Tcl_ExecObjCmd($/;"	f	typeref:typename:int
Tcl_ExecObjCmd	generic/tclInt.h	/^MODULE_SCOPE Tcl_ObjCmdProc Tcl_ExecObjCmd;$/;"	v	typeref:typename:MODULE_SCOPE Tcl_ObjCmdProc
Tcl_Exit	doc/Exit.3	/^.TH Tcl_Exit 3 8.5 Tcl "Tcl Library Procedures"$/;"	t
Tcl_Exit	generic/tclDecls.h	/^#define Tcl_Exit /;"	d
Tcl_Exit	generic/tclEvent.c	/^Tcl_Exit($/;"	f	typeref:typename:TCL_NORETURN void
Tcl_ExitObjCmd	generic/tclCmdAH.c	/^Tcl_ExitObjCmd($/;"	f	typeref:typename:int
Tcl_ExitObjCmd	generic/tclInt.h	/^MODULE_SCOPE Tcl_ObjCmdProc Tcl_ExitObjCmd;$/;"	v	typeref:typename:MODULE_SCOPE Tcl_ObjCmdProc
Tcl_ExitProc	generic/tcl.h	/^#define Tcl_ExitProc /;"	d
Tcl_ExitProc	generic/tcl.h	/^typedef void (Tcl_ExitProc) (void *clientData);$/;"	t	typeref:typename:void ()(void * clientData)
Tcl_ExitThread	generic/tclDecls.h	/^#define Tcl_ExitThread /;"	d
Tcl_ExitThread	generic/tclThread.c	/^Tcl_ExitThread($/;"	f	typeref:typename:TCL_NORETURN void
Tcl_Export	generic/tclDecls.h	/^#define Tcl_Export /;"	d
Tcl_Export	generic/tclNamesp.c	/^Tcl_Export($/;"	f	typeref:typename:int
Tcl_ExposeCommand	generic/tclBasic.c	/^Tcl_ExposeCommand($/;"	f	typeref:typename:int
Tcl_ExposeCommand	generic/tclDecls.h	/^#define Tcl_ExposeCommand /;"	d
Tcl_ExprBoolean	generic/tclBasic.c	/^Tcl_ExprBoolean($/;"	f	typeref:typename:int
Tcl_ExprBoolean	generic/tclDecls.h	/^#define Tcl_ExprBoolean /;"	d
Tcl_ExprBooleanObj	generic/tclBasic.c	/^Tcl_ExprBooleanObj($/;"	f	typeref:typename:int
Tcl_ExprBooleanObj	generic/tclDecls.h	/^#define Tcl_ExprBooleanObj /;"	d
Tcl_ExprDouble	generic/tclBasic.c	/^Tcl_ExprDouble($/;"	f	typeref:typename:int
Tcl_ExprDouble	generic/tclDecls.h	/^#define Tcl_ExprDouble /;"	d
Tcl_ExprDoubleObj	generic/tclBasic.c	/^Tcl_ExprDoubleObj($/;"	f	typeref:typename:int
Tcl_ExprDoubleObj	generic/tclDecls.h	/^#define Tcl_ExprDoubleObj /;"	d
Tcl_ExprLong	doc/ExprLong.3	/^.TH Tcl_ExprLong 3 7.0 Tcl "Tcl Library Procedures"$/;"	t
Tcl_ExprLong	generic/tclBasic.c	/^Tcl_ExprLong($/;"	f	typeref:typename:int
Tcl_ExprLong	generic/tclDecls.h	/^#	define Tcl_ExprLong /;"	d
Tcl_ExprLong	generic/tclDecls.h	/^#define Tcl_ExprLong /;"	d
Tcl_ExprLong	generic/tclStubInit.c	/^#define Tcl_ExprLong /;"	d	file:
Tcl_ExprLongObj	doc/ExprLongObj.3	/^.TH Tcl_ExprLongObj 3 8.0 Tcl "Tcl Library Procedures"$/;"	t
Tcl_ExprLongObj	generic/tclBasic.c	/^Tcl_ExprLongObj($/;"	f	typeref:typename:int
Tcl_ExprLongObj	generic/tclDecls.h	/^#	define Tcl_ExprLongObj /;"	d
Tcl_ExprLongObj	generic/tclDecls.h	/^#define Tcl_ExprLongObj /;"	d
Tcl_ExprLongObj	generic/tclStubInit.c	/^#define Tcl_ExprLongObj /;"	d	file:
Tcl_ExprObj	generic/tclDecls.h	/^#define Tcl_ExprObj /;"	d
Tcl_ExprObj	generic/tclExecute.c	/^Tcl_ExprObj($/;"	f	typeref:typename:int
Tcl_ExprObjCmd	generic/tclCmdAH.c	/^Tcl_ExprObjCmd($/;"	f	typeref:typename:int
Tcl_ExprObjCmd	generic/tclInt.h	/^MODULE_SCOPE Tcl_ObjCmdProc Tcl_ExprObjCmd;$/;"	v	typeref:typename:MODULE_SCOPE Tcl_ObjCmdProc
Tcl_ExprString	generic/tclBasic.c	/^Tcl_ExprString($/;"	f	typeref:typename:int
Tcl_ExprString	generic/tclDecls.h	/^#define Tcl_ExprString /;"	d
Tcl_ExternalToUtf	generic/tclDecls.h	/^#define Tcl_ExternalToUtf /;"	d
Tcl_ExternalToUtf	generic/tclEncoding.c	/^Tcl_ExternalToUtf($/;"	f	typeref:typename:int
Tcl_ExternalToUtfDString	generic/tclDecls.h	/^#define Tcl_ExternalToUtfDString /;"	d
Tcl_ExternalToUtfDString	generic/tclEncoding.c	/^Tcl_ExternalToUtfDString($/;"	f	typeref:typename:char *
Tcl_ExternalToUtfDStringEx	generic/tclDecls.h	/^#define Tcl_ExternalToUtfDStringEx /;"	d
Tcl_ExternalToUtfDStringEx	generic/tclEncoding.c	/^Tcl_ExternalToUtfDStringEx($/;"	f	typeref:typename:int
Tcl_FSAccess	generic/tclDecls.h	/^#define Tcl_FSAccess /;"	d
Tcl_FSAccess	generic/tclIOUtil.c	/^Tcl_FSAccess($/;"	f	typeref:typename:int
Tcl_FSAccessProc	generic/tcl.h	/^typedef int (Tcl_FSAccessProc) (Tcl_Obj *pathPtr, int mode);$/;"	t	typeref:typename:int ()(Tcl_Obj * pathPtr,int mode)
Tcl_FSChdir	generic/tclDecls.h	/^#define Tcl_FSChdir /;"	d
Tcl_FSChdir	generic/tclIOUtil.c	/^Tcl_FSChdir($/;"	f	typeref:typename:int
Tcl_FSChdirProc	generic/tcl.h	/^typedef int (Tcl_FSChdirProc) (Tcl_Obj *pathPtr);$/;"	t	typeref:typename:int ()(Tcl_Obj * pathPtr)
Tcl_FSConvertToPathType	generic/tclDecls.h	/^#define Tcl_FSConvertToPathType /;"	d
Tcl_FSConvertToPathType	generic/tclPathObj.c	/^Tcl_FSConvertToPathType($/;"	f	typeref:typename:int
Tcl_FSCopyDirectory	generic/tclDecls.h	/^#define Tcl_FSCopyDirectory /;"	d
Tcl_FSCopyDirectory	generic/tclIOUtil.c	/^Tcl_FSCopyDirectory($/;"	f	typeref:typename:int
Tcl_FSCopyDirectoryProc	generic/tcl.h	/^typedef int (Tcl_FSCopyDirectoryProc) (Tcl_Obj *srcPathPtr,$/;"	t	typeref:typename:int ()(Tcl_Obj * srcPathPtr,Tcl_Obj * destPathPtr,Tcl_Obj ** errorPtr)
Tcl_FSCopyFile	generic/tclDecls.h	/^#define Tcl_FSCopyFile /;"	d
Tcl_FSCopyFile	generic/tclIOUtil.c	/^Tcl_FSCopyFile($/;"	f	typeref:typename:int
Tcl_FSCopyFileProc	generic/tcl.h	/^typedef int (Tcl_FSCopyFileProc) (Tcl_Obj *srcPathPtr, Tcl_Obj *destPathPtr);$/;"	t	typeref:typename:int ()(Tcl_Obj * srcPathPtr,Tcl_Obj * destPathPtr)
Tcl_FSCreateDirectory	generic/tclDecls.h	/^#define Tcl_FSCreateDirectory /;"	d
Tcl_FSCreateDirectory	generic/tclIOUtil.c	/^Tcl_FSCreateDirectory($/;"	f	typeref:typename:int
Tcl_FSCreateDirectoryProc	generic/tcl.h	/^typedef int (Tcl_FSCreateDirectoryProc) (Tcl_Obj *pathPtr);$/;"	t	typeref:typename:int ()(Tcl_Obj * pathPtr)
Tcl_FSCreateInternalRepProc	generic/tcl.h	/^typedef void *(Tcl_FSCreateInternalRepProc) (Tcl_Obj *pathPtr);$/;"	t	typeref:typename:void * ()(Tcl_Obj * pathPtr)
Tcl_FSData	generic/tclDecls.h	/^#define Tcl_FSData /;"	d
Tcl_FSData	generic/tclIOUtil.c	/^Tcl_FSData($/;"	f	typeref:typename:void *
Tcl_FSDeleteFile	generic/tclDecls.h	/^#define Tcl_FSDeleteFile /;"	d
Tcl_FSDeleteFile	generic/tclIOUtil.c	/^Tcl_FSDeleteFile($/;"	f	typeref:typename:int
Tcl_FSDeleteFileProc	generic/tcl.h	/^typedef int (Tcl_FSDeleteFileProc) (Tcl_Obj *pathPtr);$/;"	t	typeref:typename:int ()(Tcl_Obj * pathPtr)
Tcl_FSDupInternalRepProc	generic/tcl.h	/^typedef void *(Tcl_FSDupInternalRepProc) (void *clientData);$/;"	t	typeref:typename:void * ()(void * clientData)
Tcl_FSEqualPaths	generic/tclDecls.h	/^#define Tcl_FSEqualPaths /;"	d
Tcl_FSEqualPaths	generic/tclPathObj.c	/^Tcl_FSEqualPaths($/;"	f	typeref:typename:int
Tcl_FSEvalFile	generic/tclDecls.h	/^#define Tcl_FSEvalFile /;"	d
Tcl_FSEvalFile	generic/tclIOUtil.c	/^Tcl_FSEvalFile($/;"	f	typeref:typename:int
Tcl_FSEvalFileEx	generic/tclDecls.h	/^#define Tcl_FSEvalFileEx /;"	d
Tcl_FSEvalFileEx	generic/tclIOUtil.c	/^Tcl_FSEvalFileEx($/;"	f	typeref:typename:int
Tcl_FSFileAttrStrings	generic/tclDecls.h	/^#define Tcl_FSFileAttrStrings /;"	d
Tcl_FSFileAttrStrings	generic/tclIOUtil.c	/^Tcl_FSFileAttrStrings($/;"	f	typeref:typename:const char * const *
Tcl_FSFileAttrStringsProc	generic/tcl.h	/^typedef const char *const * (Tcl_FSFileAttrStringsProc) (Tcl_Obj *pathPtr,$/;"	t	typeref:typename:const char * const * ()(Tcl_Obj * pathPtr,Tcl_Obj ** objPtrRef)
Tcl_FSFileAttrsGet	generic/tclDecls.h	/^#define Tcl_FSFileAttrsGet /;"	d
Tcl_FSFileAttrsGet	generic/tclIOUtil.c	/^Tcl_FSFileAttrsGet($/;"	f	typeref:typename:int
Tcl_FSFileAttrsGetProc	generic/tcl.h	/^typedef int (Tcl_FSFileAttrsGetProc) (Tcl_Interp *interp, int index,$/;"	t	typeref:typename:int ()(Tcl_Interp * interp,int index,Tcl_Obj * pathPtr,Tcl_Obj ** objPtrRef)
Tcl_FSFileAttrsSet	generic/tclDecls.h	/^#define Tcl_FSFileAttrsSet /;"	d
Tcl_FSFileAttrsSet	generic/tclIOUtil.c	/^Tcl_FSFileAttrsSet($/;"	f	typeref:typename:int
Tcl_FSFileAttrsSetProc	generic/tcl.h	/^typedef int (Tcl_FSFileAttrsSetProc) (Tcl_Interp *interp, int index,$/;"	t	typeref:typename:int ()(Tcl_Interp * interp,int index,Tcl_Obj * pathPtr,Tcl_Obj * objPtr)
Tcl_FSFileSystemInfo	generic/tclDecls.h	/^#define Tcl_FSFileSystemInfo /;"	d
Tcl_FSFileSystemInfo	generic/tclIOUtil.c	/^Tcl_FSFileSystemInfo($/;"	f	typeref:typename:Tcl_Obj *
Tcl_FSFilesystemPathTypeProc	generic/tcl.h	/^typedef Tcl_Obj * (Tcl_FSFilesystemPathTypeProc) (Tcl_Obj *pathPtr);$/;"	t	typeref:typename:Tcl_Obj * ()(Tcl_Obj * pathPtr)
Tcl_FSFilesystemSeparatorProc	generic/tcl.h	/^typedef Tcl_Obj * (Tcl_FSFilesystemSeparatorProc) (Tcl_Obj *pathPtr);$/;"	t	typeref:typename:Tcl_Obj * ()(Tcl_Obj * pathPtr)
Tcl_FSFreeInternalRepProc	generic/tcl.h	/^#define Tcl_FSFreeInternalRepProc /;"	d
Tcl_FSGetCwd	generic/tclDecls.h	/^#define Tcl_FSGetCwd /;"	d
Tcl_FSGetCwd	generic/tclIOUtil.c	/^Tcl_FSGetCwd($/;"	f	typeref:typename:Tcl_Obj *
Tcl_FSGetCwdProc	generic/tcl.h	/^typedef Tcl_Obj * (Tcl_FSGetCwdProc) (Tcl_Interp *interp);$/;"	t	typeref:typename:Tcl_Obj * ()(Tcl_Interp * interp)
Tcl_FSGetFileSystemForPath	generic/tclDecls.h	/^#define Tcl_FSGetFileSystemForPath /;"	d
Tcl_FSGetFileSystemForPath	generic/tclIOUtil.c	/^Tcl_FSGetFileSystemForPath($/;"	f	typeref:typename:const Tcl_Filesystem *
Tcl_FSGetInternalRep	generic/tclDecls.h	/^#define Tcl_FSGetInternalRep /;"	d
Tcl_FSGetInternalRep	generic/tclPathObj.c	/^Tcl_FSGetInternalRep($/;"	f	typeref:typename:void *
Tcl_FSGetNativePath	generic/tclDecls.h	/^#define Tcl_FSGetNativePath /;"	d
Tcl_FSGetNativePath	generic/tclIOUtil.c	/^Tcl_FSGetNativePath($/;"	f	typeref:typename:const void *
Tcl_FSGetNormalizedPath	generic/tclDecls.h	/^#define Tcl_FSGetNormalizedPath /;"	d
Tcl_FSGetNormalizedPath	generic/tclPathObj.c	/^Tcl_FSGetNormalizedPath($/;"	f	typeref:typename:Tcl_Obj *
Tcl_FSGetPathType	generic/tclDecls.h	/^#define Tcl_FSGetPathType /;"	d
Tcl_FSGetPathType	generic/tclPathObj.c	/^Tcl_FSGetPathType($/;"	f	typeref:typename:Tcl_PathType
Tcl_FSGetTranslatedPath	generic/tclDecls.h	/^#define Tcl_FSGetTranslatedPath /;"	d
Tcl_FSGetTranslatedPath	generic/tclPathObj.c	/^Tcl_FSGetTranslatedPath($/;"	f	typeref:typename:Tcl_Obj *
Tcl_FSGetTranslatedStringPath	generic/tclDecls.h	/^#define Tcl_FSGetTranslatedStringPath /;"	d
Tcl_FSGetTranslatedStringPath	generic/tclPathObj.c	/^Tcl_FSGetTranslatedStringPath($/;"	f	typeref:typename:const char *
Tcl_FSInternalToNormalizedProc	generic/tcl.h	/^typedef Tcl_Obj * (Tcl_FSInternalToNormalizedProc) (void *clientData);$/;"	t	typeref:typename:Tcl_Obj * ()(void * clientData)
Tcl_FSJoinPath	generic/tclDecls.h	/^#define Tcl_FSJoinPath /;"	d
Tcl_FSJoinPath	generic/tclPathObj.c	/^Tcl_FSJoinPath($/;"	f	typeref:typename:Tcl_Obj *
Tcl_FSJoinToPath	generic/tclDecls.h	/^#define Tcl_FSJoinToPath /;"	d
Tcl_FSJoinToPath	generic/tclFileName.c	/^Tcl_FSJoinToPath($/;"	f	typeref:typename:Tcl_Obj *
Tcl_FSLink	generic/tclDecls.h	/^#define Tcl_FSLink /;"	d
Tcl_FSLink	generic/tclIOUtil.c	/^Tcl_FSLink($/;"	f	typeref:typename:Tcl_Obj *
Tcl_FSLinkProc	generic/tcl.h	/^typedef Tcl_Obj * (Tcl_FSLinkProc) (Tcl_Obj *pathPtr, Tcl_Obj *toPtr,$/;"	t	typeref:typename:Tcl_Obj * ()(Tcl_Obj * pathPtr,Tcl_Obj * toPtr,int linkType)
Tcl_FSListVolumes	generic/tclDecls.h	/^#define Tcl_FSListVolumes /;"	d
Tcl_FSListVolumes	generic/tclIOUtil.c	/^Tcl_FSListVolumes(void)$/;"	f	typeref:typename:Tcl_Obj *
Tcl_FSListVolumesProc	generic/tcl.h	/^typedef Tcl_Obj * (Tcl_FSListVolumesProc) (void);$/;"	t	typeref:typename:Tcl_Obj * ()(void)
Tcl_FSLoadFile	generic/tclDecls.h	/^#define Tcl_FSLoadFile /;"	d
Tcl_FSLoadFile	generic/tclIOUtil.c	/^Tcl_FSLoadFile($/;"	f	typeref:typename:int
Tcl_FSLoadFileProc	generic/tcl.h	/^typedef int (Tcl_FSLoadFileProc) (Tcl_Interp *interp, Tcl_Obj *pathPtr,$/;"	t	typeref:typename:int ()(Tcl_Interp * interp,Tcl_Obj * pathPtr,Tcl_LoadHandle * handlePtr,Tcl_FSUnloadFileProc ** unloadProcPtr)
Tcl_FSLoadFileProc2	generic/tclInt.h	/^typedef int (Tcl_FSLoadFileProc2) (Tcl_Interp *interp, Tcl_Obj *pathPtr,$/;"	t	typeref:typename:int ()(Tcl_Interp * interp,Tcl_Obj * pathPtr,Tcl_LoadHandle * handlePtr,Tcl_FSUnloadFileProc ** unloadProcPtr,int flags)
Tcl_FSLstat	generic/tclDecls.h	/^#define Tcl_FSLstat /;"	d
Tcl_FSLstat	generic/tclIOUtil.c	/^Tcl_FSLstat($/;"	f	typeref:typename:int
Tcl_FSLstatProc	generic/tcl.h	/^typedef int (Tcl_FSLstatProc) (Tcl_Obj *pathPtr, Tcl_StatBuf *buf);$/;"	t	typeref:typename:int ()(Tcl_Obj * pathPtr,Tcl_StatBuf * buf)
Tcl_FSMatchInDirectory	generic/tclDecls.h	/^#define Tcl_FSMatchInDirectory /;"	d
Tcl_FSMatchInDirectory	generic/tclIOUtil.c	/^Tcl_FSMatchInDirectory($/;"	f	typeref:typename:int
Tcl_FSMatchInDirectoryProc	generic/tcl.h	/^typedef int (Tcl_FSMatchInDirectoryProc) (Tcl_Interp *interp, Tcl_Obj *result,$/;"	t	typeref:typename:int ()(Tcl_Interp * interp,Tcl_Obj * result,Tcl_Obj * pathPtr,const char * pattern,Tcl_GlobTypeData * types)
Tcl_FSMountsChanged	generic/tclDecls.h	/^#define Tcl_FSMountsChanged /;"	d
Tcl_FSMountsChanged	generic/tclIOUtil.c	/^Tcl_FSMountsChanged($/;"	f	typeref:typename:void
Tcl_FSNewNativePath	generic/tclDecls.h	/^#define Tcl_FSNewNativePath /;"	d
Tcl_FSNewNativePath	generic/tclPathObj.c	/^Tcl_FSNewNativePath($/;"	f	typeref:typename:Tcl_Obj *
Tcl_FSNormalizePathProc	generic/tcl.h	/^typedef int (Tcl_FSNormalizePathProc) (Tcl_Interp *interp, Tcl_Obj *pathPtr,$/;"	t	typeref:typename:int ()(Tcl_Interp * interp,Tcl_Obj * pathPtr,int nextCheckpoint)
Tcl_FSOpenFileChannel	generic/tclDecls.h	/^#define Tcl_FSOpenFileChannel /;"	d
Tcl_FSOpenFileChannel	generic/tclIOUtil.c	/^Tcl_FSOpenFileChannel($/;"	f	typeref:typename:Tcl_Channel
Tcl_FSOpenFileChannelProc	generic/tcl.h	/^typedef Tcl_Channel (Tcl_FSOpenFileChannelProc) (Tcl_Interp *interp,$/;"	t	typeref:typename:Tcl_Channel ()(Tcl_Interp * interp,Tcl_Obj * pathPtr,int mode,int permissions)
Tcl_FSPathInFilesystemProc	generic/tcl.h	/^typedef int (Tcl_FSPathInFilesystemProc) (Tcl_Obj *pathPtr,$/;"	t	typeref:typename:int ()(Tcl_Obj * pathPtr,void ** clientDataPtr)
Tcl_FSPathSeparator	generic/tclDecls.h	/^#define Tcl_FSPathSeparator /;"	d
Tcl_FSPathSeparator	generic/tclIOUtil.c	/^Tcl_FSPathSeparator($/;"	f	typeref:typename:Tcl_Obj *
Tcl_FSRegister	generic/tclDecls.h	/^#define Tcl_FSRegister /;"	d
Tcl_FSRegister	generic/tclIOUtil.c	/^Tcl_FSRegister($/;"	f	typeref:typename:int
Tcl_FSRemoveDirectory	generic/tclDecls.h	/^#define Tcl_FSRemoveDirectory /;"	d
Tcl_FSRemoveDirectory	generic/tclIOUtil.c	/^Tcl_FSRemoveDirectory($/;"	f	typeref:typename:int
Tcl_FSRemoveDirectoryProc	generic/tcl.h	/^typedef int (Tcl_FSRemoveDirectoryProc) (Tcl_Obj *pathPtr, int recursive,$/;"	t	typeref:typename:int ()(Tcl_Obj * pathPtr,int recursive,Tcl_Obj ** errorPtr)
Tcl_FSRenameFile	generic/tclDecls.h	/^#define Tcl_FSRenameFile /;"	d
Tcl_FSRenameFile	generic/tclIOUtil.c	/^Tcl_FSRenameFile($/;"	f	typeref:typename:int
Tcl_FSRenameFileProc	generic/tcl.h	/^typedef int (Tcl_FSRenameFileProc) (Tcl_Obj *srcPathPtr, Tcl_Obj *destPathPtr);$/;"	t	typeref:typename:int ()(Tcl_Obj * srcPathPtr,Tcl_Obj * destPathPtr)
Tcl_FSSplitPath	generic/tclDecls.h	/^#define Tcl_FSSplitPath /;"	d
Tcl_FSSplitPath	generic/tclIOUtil.c	/^Tcl_FSSplitPath($/;"	f	typeref:typename:Tcl_Obj *
Tcl_FSStat	generic/tclDecls.h	/^#define Tcl_FSStat /;"	d
Tcl_FSStat	generic/tclIOUtil.c	/^Tcl_FSStat($/;"	f	typeref:typename:int
Tcl_FSStatProc	generic/tcl.h	/^typedef int (Tcl_FSStatProc) (Tcl_Obj *pathPtr, Tcl_StatBuf *buf);$/;"	t	typeref:typename:int ()(Tcl_Obj * pathPtr,Tcl_StatBuf * buf)
Tcl_FSUnloadFile	generic/tclDecls.h	/^#define Tcl_FSUnloadFile /;"	d
Tcl_FSUnloadFile	generic/tclIOUtil.c	/^Tcl_FSUnloadFile($/;"	f	typeref:typename:int
Tcl_FSUnloadFileProc	generic/tcl.h	/^typedef void (Tcl_FSUnloadFileProc) (Tcl_LoadHandle loadHandle);$/;"	t	typeref:typename:void ()(Tcl_LoadHandle loadHandle)
Tcl_FSUnregister	generic/tclDecls.h	/^#define Tcl_FSUnregister /;"	d
Tcl_FSUnregister	generic/tclIOUtil.c	/^Tcl_FSUnregister($/;"	f	typeref:typename:int
Tcl_FSUtime	generic/tclDecls.h	/^#define Tcl_FSUtime /;"	d
Tcl_FSUtime	generic/tclIOUtil.c	/^Tcl_FSUtime($/;"	f	typeref:typename:int
Tcl_FSUtimeProc	generic/tcl.h	/^typedef int (Tcl_FSUtimeProc) (Tcl_Obj *pathPtr, struct utimbuf *tval);$/;"	t	typeref:typename:int ()(Tcl_Obj * pathPtr,struct utimbuf * tval)
Tcl_FSVersion	generic/tcl.h	/^typedef struct Tcl_FSVersion_ *Tcl_FSVersion;$/;"	t	typeref:struct:Tcl_FSVersion_ *
Tcl_FblockedObjCmd	generic/tclIOCmd.c	/^Tcl_FblockedObjCmd($/;"	f	typeref:typename:int
Tcl_FblockedObjCmd	generic/tclInt.h	/^MODULE_SCOPE Tcl_ObjCmdProc Tcl_FblockedObjCmd;$/;"	v	typeref:typename:MODULE_SCOPE Tcl_ObjCmdProc
Tcl_FconfigureObjCmd	generic/tclIOCmd.c	/^Tcl_FconfigureObjCmd($/;"	f	typeref:typename:int
Tcl_FconfigureObjCmd	generic/tclInt.h	/^MODULE_SCOPE Tcl_ObjCmdProc Tcl_FconfigureObjCmd;$/;"	v	typeref:typename:MODULE_SCOPE Tcl_ObjCmdProc
Tcl_FcopyObjCmd	generic/tclIOCmd.c	/^Tcl_FcopyObjCmd($/;"	f	typeref:typename:int
Tcl_FcopyObjCmd	generic/tclInt.h	/^MODULE_SCOPE Tcl_ObjCmdProc Tcl_FcopyObjCmd;$/;"	v	typeref:typename:MODULE_SCOPE Tcl_ObjCmdProc
Tcl_FetchInternalRep	generic/tclDecls.h	/^#define Tcl_FetchInternalRep /;"	d
Tcl_FetchInternalRep	generic/tclObj.c	/^Tcl_FetchInternalRep($/;"	f	typeref:typename:Tcl_ObjInternalRep *
Tcl_FileEventObjCmd	generic/tclIO.c	/^Tcl_FileEventObjCmd($/;"	f	typeref:typename:int
Tcl_FileEventObjCmd	generic/tclInt.h	/^MODULE_SCOPE Tcl_ObjCmdProc Tcl_FileEventObjCmd;$/;"	v	typeref:typename:MODULE_SCOPE Tcl_ObjCmdProc
Tcl_FileFreeProc	generic/tcl.h	/^#define Tcl_FileFreeProc /;"	d
Tcl_FileFreeProc	generic/tcl.h	/^typedef void (Tcl_FileFreeProc) (void *clientData);$/;"	t	typeref:typename:void ()(void * clientData)
Tcl_FileProc	generic/tcl.h	/^typedef void (Tcl_FileProc) (void *clientData, int mask);$/;"	t	typeref:typename:void ()(void * clientData,int mask)
Tcl_Filesystem	generic/tcl.h	/^typedef struct Tcl_Filesystem {$/;"	s
Tcl_Filesystem	generic/tcl.h	/^} Tcl_Filesystem;$/;"	t	typeref:struct:Tcl_Filesystem
Tcl_Finalize	generic/tclDecls.h	/^#define Tcl_Finalize /;"	d
Tcl_Finalize	generic/tclEvent.c	/^Tcl_Finalize(void)$/;"	f	typeref:typename:void
Tcl_FinalizeNotifier	generic/tclDecls.h	/^#define Tcl_FinalizeNotifier /;"	d
Tcl_FinalizeNotifier	generic/tclNotify.c	/^Tcl_FinalizeNotifier($/;"	f	typeref:typename:void
Tcl_FinalizeNotifierProc	generic/tcl.h	/^typedef void (Tcl_FinalizeNotifierProc) (void *clientData);$/;"	t	typeref:typename:void ()(void * clientData)
Tcl_FinalizeThread	generic/tclDecls.h	/^#define Tcl_FinalizeThread /;"	d
Tcl_FinalizeThread	generic/tclEvent.c	/^Tcl_FinalizeThread(void)$/;"	f	typeref:typename:void
Tcl_FindCommand	generic/tclDecls.h	/^#define Tcl_FindCommand /;"	d
Tcl_FindCommand	generic/tclNamesp.c	/^Tcl_FindCommand($/;"	f	typeref:typename:Tcl_Command
Tcl_FindEnsemble	generic/tclDecls.h	/^#define Tcl_FindEnsemble /;"	d
Tcl_FindEnsemble	generic/tclEnsemble.c	/^Tcl_FindEnsemble($/;"	f	typeref:typename:Tcl_Command
Tcl_FindExecutable	doc/FindExec.3	/^.TH Tcl_FindExecutable 3 8.1 Tcl "Tcl Library Procedures"$/;"	t
Tcl_FindExecutable	generic/tcl.h	/^#   define Tcl_FindExecutable(arg) ((Tcl_FindExecutable)/;"	d
Tcl_FindExecutable	generic/tcl.h	/^#define Tcl_FindExecutable(/;"	d
Tcl_FindExecutable	generic/tclEncoding.c	/^Tcl_FindExecutable($/;"	f	typeref:typename:const char *
Tcl_FindHashEntry	generic/tcl.h	/^#define Tcl_FindHashEntry(/;"	d
Tcl_FindNamespace	generic/tclDecls.h	/^#define Tcl_FindNamespace /;"	d
Tcl_FindNamespace	generic/tclNamesp.c	/^Tcl_FindNamespace($/;"	f	typeref:typename:Tcl_Namespace *
Tcl_FindNamespaceVar	generic/tclIntDecls.h	/^#define Tcl_FindNamespaceVar /;"	d
Tcl_FindNamespaceVar	generic/tclVar.c	/^Tcl_FindNamespaceVar($/;"	f	typeref:typename:Tcl_Var
Tcl_FindSymbol	generic/tclDecls.h	/^#define Tcl_FindSymbol /;"	d
Tcl_FindSymbol	generic/tclIOUtil.c	/^Tcl_FindSymbol($/;"	f	typeref:typename:void *
Tcl_FirstHashEntry	generic/tclDecls.h	/^#define Tcl_FirstHashEntry /;"	d
Tcl_FirstHashEntry	generic/tclHash.c	/^Tcl_FirstHashEntry($/;"	f	typeref:typename:Tcl_HashEntry *
Tcl_Flush	generic/tclDecls.h	/^#define Tcl_Flush /;"	d
Tcl_Flush	generic/tclIO.c	/^Tcl_Flush($/;"	f	typeref:typename:int
Tcl_FlushObjCmd	generic/tclIOCmd.c	/^Tcl_FlushObjCmd($/;"	f	typeref:typename:int
Tcl_FlushObjCmd	generic/tclInt.h	/^MODULE_SCOPE Tcl_ObjCmdProc Tcl_FlushObjCmd;$/;"	v	typeref:typename:MODULE_SCOPE Tcl_ObjCmdProc
Tcl_ForObjCmd	generic/tclCmdAH.c	/^Tcl_ForObjCmd($/;"	f	typeref:typename:int
Tcl_ForObjCmd	generic/tclInt.h	/^MODULE_SCOPE Tcl_ObjCmdProc Tcl_ForObjCmd;$/;"	v	typeref:typename:MODULE_SCOPE Tcl_ObjCmdProc
Tcl_ForeachObjCmd	generic/tclCmdAH.c	/^Tcl_ForeachObjCmd($/;"	f	typeref:typename:int
Tcl_ForeachObjCmd	generic/tclInt.h	/^MODULE_SCOPE Tcl_ObjCmdProc Tcl_ForeachObjCmd;$/;"	v	typeref:typename:MODULE_SCOPE Tcl_ObjCmdProc
Tcl_ForgetImport	generic/tclDecls.h	/^#define Tcl_ForgetImport /;"	d
Tcl_ForgetImport	generic/tclNamesp.c	/^Tcl_ForgetImport($/;"	f	typeref:typename:int
Tcl_Format	generic/tclDecls.h	/^#define Tcl_Format /;"	d
Tcl_Format	generic/tclStringObj.c	/^Tcl_Format($/;"	f	typeref:typename:Tcl_Obj *
Tcl_FormatObjCmd	generic/tclCmdAH.c	/^Tcl_FormatObjCmd($/;"	f	typeref:typename:int
Tcl_FormatObjCmd	generic/tclInt.h	/^MODULE_SCOPE Tcl_ObjCmdProc Tcl_FormatObjCmd;$/;"	v	typeref:typename:MODULE_SCOPE Tcl_ObjCmdProc
Tcl_Free	generic/tclCkalloc.c	/^Tcl_Free($/;"	f	typeref:typename:void
Tcl_Free	generic/tclDecls.h	/^#   define Tcl_Free(/;"	d
Tcl_Free	generic/tclDecls.h	/^#define Tcl_Free /;"	d
Tcl_Free	generic/tclInt.h	/^#define Tcl_Free	/;"	d
Tcl_FreeEncoding	generic/tclDecls.h	/^#define Tcl_FreeEncoding /;"	d
Tcl_FreeEncoding	generic/tclEncoding.c	/^Tcl_FreeEncoding($/;"	f	typeref:typename:void
Tcl_FreeHashEntryProc	generic/tcl.h	/^typedef void (Tcl_FreeHashEntryProc) (Tcl_HashEntry *hPtr);$/;"	t	typeref:typename:void ()(Tcl_HashEntry * hPtr)
Tcl_FreeInternalRep	generic/tclDecls.h	/^#define Tcl_FreeInternalRep /;"	d
Tcl_FreeInternalRep	generic/tclObj.c	/^Tcl_FreeInternalRep($/;"	f	typeref:typename:void
Tcl_FreeInternalRepProc	generic/tcl.h	/^typedef void (Tcl_FreeInternalRepProc) (struct Tcl_Obj *objPtr);$/;"	t	typeref:typename:void ()(struct Tcl_Obj * objPtr)
Tcl_FreeParse	generic/tclDecls.h	/^#define Tcl_FreeParse /;"	d
Tcl_FreeParse	generic/tclParse.c	/^Tcl_FreeParse($/;"	f	typeref:typename:void
Tcl_FreeProc	generic/tcl.h	/^typedef void (Tcl_FreeProc) (void *blockPtr);$/;"	t	typeref:typename:void ()(void * blockPtr)
Tcl_GetAccessTimeFromStat	generic/tclDecls.h	/^#define Tcl_GetAccessTimeFromStat /;"	d
Tcl_GetAccessTimeFromStat	generic/tclFileName.c	/^Tcl_GetAccessTimeFromStat($/;"	f	typeref:typename:long long
Tcl_GetAliasObj	generic/tclDecls.h	/^#define Tcl_GetAliasObj /;"	d
Tcl_GetAliasObj	generic/tclInterp.c	/^Tcl_GetAliasObj($/;"	f	typeref:typename:int
Tcl_GetAllocMutex	generic/tclDecls.h	/^#define Tcl_GetAllocMutex /;"	d
Tcl_GetAllocMutex	unix/tclUnixThrd.c	/^Tcl_GetAllocMutex(void)$/;"	f	typeref:typename:Tcl_Mutex *
Tcl_GetAllocMutex	win/tclWinThrd.c	/^Tcl_GetAllocMutex(void)$/;"	f	typeref:typename:Tcl_Mutex *
Tcl_GetAssocData	generic/tclBasic.c	/^Tcl_GetAssocData($/;"	f	typeref:typename:void *
Tcl_GetAssocData	generic/tclDecls.h	/^#define Tcl_GetAssocData /;"	d
Tcl_GetBignumFromObj	generic/tclDecls.h	/^#define Tcl_GetBignumFromObj /;"	d
Tcl_GetBignumFromObj	generic/tclObj.c	/^Tcl_GetBignumFromObj($/;"	f	typeref:typename:int
Tcl_GetBlockSizeFromStat	generic/tclDecls.h	/^#define Tcl_GetBlockSizeFromStat /;"	d
Tcl_GetBlockSizeFromStat	generic/tclFileName.c	/^Tcl_GetBlockSizeFromStat($/;"	f	typeref:typename:unsigned
Tcl_GetBlocksFromStat	generic/tclDecls.h	/^#define Tcl_GetBlocksFromStat /;"	d
Tcl_GetBlocksFromStat	generic/tclFileName.c	/^Tcl_GetBlocksFromStat($/;"	f	typeref:typename:unsigned long long
Tcl_GetBool	generic/tclDecls.h	/^#define Tcl_GetBool /;"	d
Tcl_GetBool	generic/tclGet.c	/^Tcl_GetBool($/;"	f	typeref:typename:int
Tcl_GetBoolFromObj	generic/tclDecls.h	/^#define Tcl_GetBoolFromObj /;"	d
Tcl_GetBoolFromObj	generic/tclObj.c	/^Tcl_GetBoolFromObj($/;"	f	typeref:typename:int
Tcl_GetBoolean	generic/tclDecls.h	/^#define Tcl_GetBoolean /;"	d
Tcl_GetBoolean	generic/tclDecls.h	/^#define Tcl_GetBoolean(/;"	d
Tcl_GetBoolean	generic/tclGet.c	/^Tcl_GetBoolean($/;"	f	typeref:typename:int
Tcl_GetBooleanFromObj	generic/tclDecls.h	/^#define Tcl_GetBooleanFromObj /;"	d
Tcl_GetBooleanFromObj	generic/tclDecls.h	/^#define Tcl_GetBooleanFromObj(/;"	d
Tcl_GetBooleanFromObj	generic/tclObj.c	/^Tcl_GetBooleanFromObj($/;"	f	typeref:typename:int
Tcl_GetByteArrayFromObj	generic/tclDecls.h	/^#define Tcl_GetByteArrayFromObj /;"	d
Tcl_GetByteArrayFromObj	generic/tclDecls.h	/^#define Tcl_GetByteArrayFromObj(/;"	d
Tcl_GetByteArrayFromObj	generic/tclStubInit.c	/^#define Tcl_GetByteArrayFromObj /;"	d	file:
Tcl_GetBytesFromObj	generic/tclBinary.c	/^Tcl_GetBytesFromObj($/;"	f	typeref:typename:unsigned char *
Tcl_GetBytesFromObj	generic/tclDecls.h	/^#define Tcl_GetBytesFromObj /;"	d
Tcl_GetChangeTimeFromStat	generic/tclDecls.h	/^#define Tcl_GetChangeTimeFromStat /;"	d
Tcl_GetChangeTimeFromStat	generic/tclFileName.c	/^Tcl_GetChangeTimeFromStat($/;"	f	typeref:typename:long long
Tcl_GetChannel	generic/tclDecls.h	/^#define Tcl_GetChannel /;"	d
Tcl_GetChannel	generic/tclIO.c	/^Tcl_GetChannel($/;"	f	typeref:typename:Tcl_Channel
Tcl_GetChannelBufferSize	generic/tclDecls.h	/^#define Tcl_GetChannelBufferSize /;"	d
Tcl_GetChannelBufferSize	generic/tclIO.c	/^Tcl_GetChannelBufferSize($/;"	f	typeref:typename:Tcl_Size
Tcl_GetChannelError	generic/tclDecls.h	/^#define Tcl_GetChannelError /;"	d
Tcl_GetChannelError	generic/tclIO.c	/^Tcl_GetChannelError($/;"	f	typeref:typename:void
Tcl_GetChannelErrorInterp	generic/tclDecls.h	/^#define Tcl_GetChannelErrorInterp /;"	d
Tcl_GetChannelErrorInterp	generic/tclIO.c	/^Tcl_GetChannelErrorInterp($/;"	f	typeref:typename:void
Tcl_GetChannelHandle	generic/tclDecls.h	/^#define Tcl_GetChannelHandle /;"	d
Tcl_GetChannelHandle	generic/tclIO.c	/^Tcl_GetChannelHandle($/;"	f	typeref:typename:int
Tcl_GetChannelInstanceData	generic/tclDecls.h	/^#define Tcl_GetChannelInstanceData /;"	d
Tcl_GetChannelInstanceData	generic/tclIO.c	/^Tcl_GetChannelInstanceData($/;"	f	typeref:typename:void *
Tcl_GetChannelMode	generic/tclDecls.h	/^#define Tcl_GetChannelMode /;"	d
Tcl_GetChannelMode	generic/tclIO.c	/^Tcl_GetChannelMode($/;"	f	typeref:typename:int
Tcl_GetChannelName	generic/tclDecls.h	/^#define Tcl_GetChannelName /;"	d
Tcl_GetChannelName	generic/tclIO.c	/^Tcl_GetChannelName($/;"	f	typeref:typename:const char *
Tcl_GetChannelNames	generic/tclDecls.h	/^#define Tcl_GetChannelNames /;"	d
Tcl_GetChannelNames	generic/tclIO.c	/^Tcl_GetChannelNames($/;"	f	typeref:typename:int
Tcl_GetChannelNamesEx	generic/tclDecls.h	/^#define Tcl_GetChannelNamesEx /;"	d
Tcl_GetChannelNamesEx	generic/tclIO.c	/^Tcl_GetChannelNamesEx($/;"	f	typeref:typename:int
Tcl_GetChannelOption	generic/tclDecls.h	/^#define Tcl_GetChannelOption /;"	d
Tcl_GetChannelOption	generic/tclIO.c	/^Tcl_GetChannelOption($/;"	f	typeref:typename:int
Tcl_GetChannelThread	generic/tclDecls.h	/^#define Tcl_GetChannelThread /;"	d
Tcl_GetChannelThread	generic/tclIO.c	/^Tcl_GetChannelThread($/;"	f	typeref:typename:Tcl_ThreadId
Tcl_GetChannelType	generic/tclDecls.h	/^#define Tcl_GetChannelType /;"	d
Tcl_GetChannelType	generic/tclIO.c	/^Tcl_GetChannelType($/;"	f	typeref:typename:const Tcl_ChannelType *
Tcl_GetCharLength	generic/tclDecls.h	/^#define Tcl_GetCharLength /;"	d
Tcl_GetCharLength	generic/tclStringObj.c	/^Tcl_GetCharLength($/;"	f	typeref:typename:Tcl_Size
Tcl_GetChild	generic/tclDecls.h	/^#define Tcl_GetChild /;"	d
Tcl_GetChild	generic/tclInterp.c	/^Tcl_GetChild($/;"	f	typeref:typename:Tcl_Interp *
Tcl_GetClassAsObject	generic/tclOO.c	/^Tcl_GetClassAsObject($/;"	f	typeref:typename:Tcl_Object
Tcl_GetClassAsObject	generic/tclOODecls.h	/^#define Tcl_GetClassAsObject /;"	d
Tcl_GetClassOfObject	generic/tclOO.c	/^Tcl_GetClassOfObject($/;"	f	typeref:typename:Tcl_Class
Tcl_GetClassOfObject	generic/tclOODecls.h	/^#define Tcl_GetClassOfObject /;"	d
Tcl_GetClockFrmScnFromObj	generic/tclClockFmt.c	/^Tcl_GetClockFrmScnFromObj($/;"	f	typeref:typename:ClockFmtScnStorage *
Tcl_GetCommandFromObj	generic/tclDecls.h	/^#define Tcl_GetCommandFromObj /;"	d
Tcl_GetCommandFromObj	generic/tclObj.c	/^Tcl_GetCommandFromObj($/;"	f	typeref:typename:Tcl_Command
Tcl_GetCommandFullName	generic/tclBasic.c	/^Tcl_GetCommandFullName($/;"	f	typeref:typename:void
Tcl_GetCommandFullName	generic/tclDecls.h	/^#define Tcl_GetCommandFullName /;"	d
Tcl_GetCommandInfo	generic/tclBasic.c	/^Tcl_GetCommandInfo($/;"	f	typeref:typename:int
Tcl_GetCommandInfo	generic/tclDecls.h	/^#define Tcl_GetCommandInfo /;"	d
Tcl_GetCommandInfoFromToken	generic/tclBasic.c	/^Tcl_GetCommandInfoFromToken($/;"	f	typeref:typename:int
Tcl_GetCommandInfoFromToken	generic/tclDecls.h	/^#define Tcl_GetCommandInfoFromToken /;"	d
Tcl_GetCommandName	generic/tclBasic.c	/^Tcl_GetCommandName($/;"	f	typeref:typename:const char *
Tcl_GetCommandName	generic/tclDecls.h	/^#define Tcl_GetCommandName /;"	d
Tcl_GetCurrentNamespace	generic/tclDecls.h	/^#define Tcl_GetCurrentNamespace /;"	d
Tcl_GetCurrentNamespace	generic/tclNamesp.c	/^Tcl_GetCurrentNamespace($/;"	f	typeref:typename:Tcl_Namespace *
Tcl_GetCurrentThread	generic/tclDecls.h	/^#define Tcl_GetCurrentThread /;"	d
Tcl_GetCurrentThread	unix/tclUnixThrd.c	/^Tcl_GetCurrentThread(void)$/;"	f	typeref:typename:Tcl_ThreadId
Tcl_GetCurrentThread	win/tclWinThrd.c	/^Tcl_GetCurrentThread(void)$/;"	f	typeref:typename:Tcl_ThreadId
Tcl_GetCwd	doc/GetCwd.3	/^.TH Tcl_GetCwd 3 8.1 Tcl "Tcl Library Procedures"$/;"	t
Tcl_GetCwd	generic/tclDecls.h	/^#define Tcl_GetCwd /;"	d
Tcl_GetCwd	generic/tclIOUtil.c	/^Tcl_GetCwd($/;"	f	typeref:typename:char *
Tcl_GetDeviceTypeFromStat	generic/tclDecls.h	/^#define Tcl_GetDeviceTypeFromStat /;"	d
Tcl_GetDeviceTypeFromStat	generic/tclFileName.c	/^Tcl_GetDeviceTypeFromStat($/;"	f	typeref:typename:int
Tcl_GetDouble	generic/tclDecls.h	/^#define Tcl_GetDouble /;"	d
Tcl_GetDouble	generic/tclGet.c	/^Tcl_GetDouble($/;"	f	typeref:typename:int
Tcl_GetDoubleFromObj	generic/tclDecls.h	/^#define Tcl_GetDoubleFromObj /;"	d
Tcl_GetDoubleFromObj	generic/tclObj.c	/^Tcl_GetDoubleFromObj($/;"	f	typeref:typename:int
Tcl_GetEncoding	doc/Encoding.3	/^.TH Tcl_GetEncoding 3 "8.1" Tcl "Tcl Library Procedures"$/;"	t
Tcl_GetEncoding	generic/tclDecls.h	/^#define Tcl_GetEncoding /;"	d
Tcl_GetEncoding	generic/tclEncoding.c	/^Tcl_GetEncoding($/;"	f	typeref:typename:Tcl_Encoding
Tcl_GetEncodingFromObj	generic/tclDecls.h	/^#define Tcl_GetEncodingFromObj /;"	d
Tcl_GetEncodingFromObj	generic/tclEncoding.c	/^Tcl_GetEncodingFromObj($/;"	f	typeref:typename:int
Tcl_GetEncodingName	generic/tclDecls.h	/^#define Tcl_GetEncodingName /;"	d
Tcl_GetEncodingName	generic/tclEncoding.c	/^Tcl_GetEncodingName($/;"	f	typeref:typename:const char *
Tcl_GetEncodingNameFromEnvironment	generic/tclDecls.h	/^#define Tcl_GetEncodingNameFromEnvironment /;"	d
Tcl_GetEncodingNameFromEnvironment	unix/tclUnixInit.c	/^Tcl_GetEncodingNameFromEnvironment($/;"	f	typeref:typename:const char *
Tcl_GetEncodingNameFromEnvironment	win/tclWinInit.c	/^Tcl_GetEncodingNameFromEnvironment($/;"	f	typeref:typename:const char *
Tcl_GetEncodingNames	generic/tclDecls.h	/^#define Tcl_GetEncodingNames /;"	d
Tcl_GetEncodingNames	generic/tclEncoding.c	/^Tcl_GetEncodingNames($/;"	f	typeref:typename:void
Tcl_GetEncodingNulLength	generic/tclDecls.h	/^#define Tcl_GetEncodingNulLength /;"	d
Tcl_GetEncodingNulLength	generic/tclEncoding.c	/^Tcl_GetEncodingNulLength($/;"	f	typeref:typename:Tcl_Size
Tcl_GetEncodingSearchPath	generic/tclDecls.h	/^#define Tcl_GetEncodingSearchPath /;"	d
Tcl_GetEncodingSearchPath	generic/tclEncoding.c	/^Tcl_GetEncodingSearchPath(void)$/;"	f	typeref:typename:Tcl_Obj *
Tcl_GetEnsembleFlags	generic/tclDecls.h	/^#define Tcl_GetEnsembleFlags /;"	d
Tcl_GetEnsembleFlags	generic/tclEnsemble.c	/^Tcl_GetEnsembleFlags($/;"	f	typeref:typename:int
Tcl_GetEnsembleMappingDict	generic/tclDecls.h	/^#define Tcl_GetEnsembleMappingDict /;"	d
Tcl_GetEnsembleMappingDict	generic/tclEnsemble.c	/^Tcl_GetEnsembleMappingDict($/;"	f	typeref:typename:int
Tcl_GetEnsembleNamespace	generic/tclDecls.h	/^#define Tcl_GetEnsembleNamespace /;"	d
Tcl_GetEnsembleNamespace	generic/tclEnsemble.c	/^Tcl_GetEnsembleNamespace($/;"	f	typeref:typename:int
Tcl_GetEnsembleParameterList	generic/tclDecls.h	/^#define Tcl_GetEnsembleParameterList /;"	d
Tcl_GetEnsembleParameterList	generic/tclEnsemble.c	/^Tcl_GetEnsembleParameterList($/;"	f	typeref:typename:int
Tcl_GetEnsembleSubcommandList	generic/tclDecls.h	/^#define Tcl_GetEnsembleSubcommandList /;"	d
Tcl_GetEnsembleSubcommandList	generic/tclEnsemble.c	/^Tcl_GetEnsembleSubcommandList($/;"	f	typeref:typename:int
Tcl_GetEnsembleUnknownHandler	generic/tclDecls.h	/^#define Tcl_GetEnsembleUnknownHandler /;"	d
Tcl_GetEnsembleUnknownHandler	generic/tclEnsemble.c	/^Tcl_GetEnsembleUnknownHandler($/;"	f	typeref:typename:int
Tcl_GetErrno	generic/tclDecls.h	/^#define Tcl_GetErrno /;"	d
Tcl_GetErrno	generic/tclIOUtil.c	/^Tcl_GetErrno(void)$/;"	f	typeref:typename:int
Tcl_GetErrorLine	generic/tclDecls.h	/^#define Tcl_GetErrorLine /;"	d
Tcl_GetErrorLine	generic/tclResult.c	/^Tcl_GetErrorLine($/;"	f	typeref:typename:int
Tcl_GetFSDeviceFromStat	generic/tclDecls.h	/^#define Tcl_GetFSDeviceFromStat /;"	d
Tcl_GetFSDeviceFromStat	generic/tclFileName.c	/^Tcl_GetFSDeviceFromStat($/;"	f	typeref:typename:unsigned
Tcl_GetFSInodeFromStat	generic/tclDecls.h	/^#define Tcl_GetFSInodeFromStat /;"	d
Tcl_GetFSInodeFromStat	generic/tclFileName.c	/^Tcl_GetFSInodeFromStat($/;"	f	typeref:typename:unsigned
Tcl_GetGlobalNamespace	generic/tclDecls.h	/^#define Tcl_GetGlobalNamespace /;"	d
Tcl_GetGlobalNamespace	generic/tclNamesp.c	/^Tcl_GetGlobalNamespace($/;"	f	typeref:typename:Tcl_Namespace *
Tcl_GetGroupIdFromStat	generic/tclDecls.h	/^#define Tcl_GetGroupIdFromStat /;"	d
Tcl_GetGroupIdFromStat	generic/tclFileName.c	/^Tcl_GetGroupIdFromStat($/;"	f	typeref:typename:int
Tcl_GetHashKey	generic/tcl.h	/^#define Tcl_GetHashKey(/;"	d
Tcl_GetHashValue	generic/tcl.h	/^#define Tcl_GetHashValue(/;"	d
Tcl_GetHostName	doc/GetHostName.3	/^.TH Tcl_GetHostName 3 8.3 Tcl "Tcl Library Procedures"$/;"	t
Tcl_GetHostName	generic/tclDecls.h	/^#define Tcl_GetHostName /;"	d
Tcl_GetHostName	unix/tclUnixSock.c	/^Tcl_GetHostName(void)$/;"	f	typeref:typename:const char *
Tcl_GetHostName	win/tclWinSock.c	/^Tcl_GetHostName(void)$/;"	f	typeref:typename:const char *
Tcl_GetIndexFromObj	doc/GetIndex.3	/^.TH Tcl_GetIndexFromObj 3 8.1 Tcl "Tcl Library Procedures"$/;"	t
Tcl_GetIndexFromObj	generic/tclDecls.h	/^#define Tcl_GetIndexFromObj(/;"	d
Tcl_GetIndexFromObjStruct	generic/tclDecls.h	/^#define Tcl_GetIndexFromObjStruct /;"	d
Tcl_GetIndexFromObjStruct	generic/tclDecls.h	/^#define Tcl_GetIndexFromObjStruct(/;"	d
Tcl_GetIndexFromObjStruct	generic/tclIndexObj.c	/^#define Tcl_GetIndexFromObjStruct(/;"	d	file:
Tcl_GetIndexFromObjStruct	generic/tclIndexObj.c	/^Tcl_GetIndexFromObjStruct($/;"	f	typeref:typename:int
Tcl_GetInt	doc/GetInt.3	/^.TH Tcl_GetInt 3 "" Tcl "Tcl Library Procedures"$/;"	t
Tcl_GetInt	generic/tclDecls.h	/^#define Tcl_GetInt /;"	d
Tcl_GetInt	generic/tclGet.c	/^Tcl_GetInt($/;"	f	typeref:typename:int
Tcl_GetIntForIndex	generic/tclDecls.h	/^#define Tcl_GetIntForIndex /;"	d
Tcl_GetIntForIndex	generic/tclUtil.c	/^Tcl_GetIntForIndex($/;"	f	typeref:typename:int
Tcl_GetIntFromObj	generic/tclDecls.h	/^#define Tcl_GetIntFromObj /;"	d
Tcl_GetIntFromObj	generic/tclObj.c	/^Tcl_GetIntFromObj($/;"	f	typeref:typename:int
Tcl_GetInterpPath	generic/tclDecls.h	/^#define Tcl_GetInterpPath /;"	d
Tcl_GetInterpPath	generic/tclInterp.c	/^Tcl_GetInterpPath($/;"	f	typeref:typename:int
Tcl_GetInterpResolvers	generic/tclIntDecls.h	/^#define Tcl_GetInterpResolvers /;"	d
Tcl_GetInterpResolvers	generic/tclResolve.c	/^Tcl_GetInterpResolvers($/;"	f	typeref:typename:int
Tcl_GetLinkCountFromStat	generic/tclDecls.h	/^#define Tcl_GetLinkCountFromStat /;"	d
Tcl_GetLinkCountFromStat	generic/tclFileName.c	/^Tcl_GetLinkCountFromStat($/;"	f	typeref:typename:int
Tcl_GetLongFromObj	generic/tclDecls.h	/^#	define Tcl_GetLongFromObj /;"	d
Tcl_GetLongFromObj	generic/tclDecls.h	/^#define Tcl_GetLongFromObj /;"	d
Tcl_GetLongFromObj	generic/tclObj.c	/^Tcl_GetLongFromObj($/;"	f	typeref:typename:int
Tcl_GetLongFromObj	generic/tclStubInit.c	/^#define Tcl_GetLongFromObj /;"	d	file:
Tcl_GetMemoryInfo	generic/tcl.h	/^#define Tcl_GetMemoryInfo(/;"	d
Tcl_GetMemoryInfo	generic/tclThreadAlloc.c	/^Tcl_GetMemoryInfo($/;"	f	typeref:typename:void
Tcl_GetModeFromStat	generic/tclDecls.h	/^#define Tcl_GetModeFromStat /;"	d
Tcl_GetModeFromStat	generic/tclFileName.c	/^Tcl_GetModeFromStat($/;"	f	typeref:typename:unsigned
Tcl_GetModificationTimeFromStat	generic/tclDecls.h	/^#define Tcl_GetModificationTimeFromStat /;"	d
Tcl_GetModificationTimeFromStat	generic/tclFileName.c	/^Tcl_GetModificationTimeFromStat($/;"	f	typeref:typename:long long
Tcl_GetNameOfExecutable	generic/tclDecls.h	/^#define Tcl_GetNameOfExecutable /;"	d
Tcl_GetNameOfExecutable	generic/tclUtil.c	/^Tcl_GetNameOfExecutable(void)$/;"	f	typeref:typename:const char *
Tcl_GetNamespaceResolvers	generic/tclIntDecls.h	/^#define Tcl_GetNamespaceResolvers /;"	d
Tcl_GetNamespaceResolvers	generic/tclResolve.c	/^Tcl_GetNamespaceResolvers($/;"	f	typeref:typename:int
Tcl_GetNamespaceUnknownHandler	generic/tclDecls.h	/^#define Tcl_GetNamespaceUnknownHandler /;"	d
Tcl_GetNamespaceUnknownHandler	generic/tclNamesp.c	/^Tcl_GetNamespaceUnknownHandler($/;"	f	typeref:typename:Tcl_Obj *
Tcl_GetNumber	doc/Number.3	/^.TH Tcl_GetNumber 3 8.7 Tcl "Tcl Library Procedures"$/;"	t
Tcl_GetNumber	generic/tclDecls.h	/^#define Tcl_GetNumber /;"	d
Tcl_GetNumber	generic/tclObj.c	/^Tcl_GetNumber($/;"	f	typeref:typename:int
Tcl_GetNumberFromObj	generic/tclDecls.h	/^#define Tcl_GetNumberFromObj /;"	d
Tcl_GetNumberFromObj	generic/tclObj.c	/^Tcl_GetNumberFromObj($/;"	f	typeref:typename:int
Tcl_GetObjResult	generic/tclDecls.h	/^#define Tcl_GetObjResult /;"	d
Tcl_GetObjResult	generic/tclResult.c	/^Tcl_GetObjResult($/;"	f	typeref:typename:Tcl_Obj *
Tcl_GetObjType	generic/tclDecls.h	/^#define Tcl_GetObjType /;"	d
Tcl_GetObjType	generic/tclObj.c	/^Tcl_GetObjType($/;"	f	typeref:typename:const Tcl_ObjType *
Tcl_GetObjectAsClass	generic/tclOO.c	/^Tcl_GetObjectAsClass($/;"	f	typeref:typename:Tcl_Class
Tcl_GetObjectAsClass	generic/tclOODecls.h	/^#define Tcl_GetObjectAsClass /;"	d
Tcl_GetObjectClassName	generic/tclOO.c	/^Tcl_GetObjectClassName($/;"	f	typeref:typename:Tcl_Obj *
Tcl_GetObjectClassName	generic/tclOODecls.h	/^#define Tcl_GetObjectClassName /;"	d
Tcl_GetObjectCommand	generic/tclOO.c	/^Tcl_GetObjectCommand($/;"	f	typeref:typename:Tcl_Command
Tcl_GetObjectCommand	generic/tclOODecls.h	/^#define Tcl_GetObjectCommand /;"	d
Tcl_GetObjectFromObj	generic/tclOO.c	/^Tcl_GetObjectFromObj($/;"	f	typeref:typename:Tcl_Object
Tcl_GetObjectFromObj	generic/tclOODecls.h	/^#define Tcl_GetObjectFromObj /;"	d
Tcl_GetObjectName	generic/tclOO.c	/^Tcl_GetObjectName($/;"	f	typeref:typename:Tcl_Obj *
Tcl_GetObjectName	generic/tclOODecls.h	/^#define Tcl_GetObjectName /;"	d
Tcl_GetObjectNamespace	generic/tclOO.c	/^Tcl_GetObjectNamespace($/;"	f	typeref:typename:Tcl_Namespace *
Tcl_GetObjectNamespace	generic/tclOODecls.h	/^#define Tcl_GetObjectNamespace /;"	d
Tcl_GetOpenFile	doc/GetOpnFl.3	/^.TH Tcl_GetOpenFile 3 8.0 Tcl "Tcl Library Procedures"$/;"	t
Tcl_GetOpenFile	generic/tclDecls.h	/^#define Tcl_GetOpenFile /;"	d
Tcl_GetOpenFile	generic/tclStubInit.c	/^#   define Tcl_GetOpenFile /;"	d	file:
Tcl_GetOpenFile	unix/tclUnixChan.c	/^Tcl_GetOpenFile($/;"	f	typeref:typename:int
Tcl_GetParent	generic/tclDecls.h	/^#define Tcl_GetParent /;"	d
Tcl_GetParent	generic/tclInterp.c	/^Tcl_GetParent($/;"	f	typeref:typename:Tcl_Interp *
Tcl_GetPathType	generic/tclDecls.h	/^#define Tcl_GetPathType /;"	d
Tcl_GetPathType	generic/tclFileName.c	/^Tcl_GetPathType($/;"	f	typeref:typename:Tcl_PathType
Tcl_GetRange	generic/tclDecls.h	/^#define Tcl_GetRange /;"	d
Tcl_GetRange	generic/tclStringObj.c	/^Tcl_GetRange($/;"	f	typeref:typename:Tcl_Obj *
Tcl_GetRegExpFromObj	generic/tclDecls.h	/^#define Tcl_GetRegExpFromObj /;"	d
Tcl_GetRegExpFromObj	generic/tclRegexp.c	/^Tcl_GetRegExpFromObj($/;"	f	typeref:typename:Tcl_RegExp
Tcl_GetReturnOptions	generic/tclDecls.h	/^#define Tcl_GetReturnOptions /;"	d
Tcl_GetReturnOptions	generic/tclResult.c	/^Tcl_GetReturnOptions($/;"	f	typeref:typename:Tcl_Obj *
Tcl_GetServiceMode	generic/tclDecls.h	/^#define Tcl_GetServiceMode /;"	d
Tcl_GetServiceMode	generic/tclNotify.c	/^Tcl_GetServiceMode(void)$/;"	f	typeref:typename:int
Tcl_GetSizeFromStat	generic/tclDecls.h	/^#define Tcl_GetSizeFromStat /;"	d
Tcl_GetSizeFromStat	generic/tclFileName.c	/^Tcl_GetSizeFromStat($/;"	f	typeref:typename:unsigned long long
Tcl_GetSizeIntFromObj	generic/tclDecls.h	/^#define Tcl_GetSizeIntFromObj /;"	d
Tcl_GetSizeIntFromObj	generic/tclObj.c	/^Tcl_GetSizeIntFromObj($/;"	f	typeref:typename:int
Tcl_GetStackedChannel	generic/tclDecls.h	/^#define Tcl_GetStackedChannel /;"	d
Tcl_GetStackedChannel	generic/tclIO.c	/^Tcl_GetStackedChannel($/;"	f	typeref:typename:Tcl_Channel
Tcl_GetStartupScript	generic/tclDecls.h	/^#define Tcl_GetStartupScript /;"	d
Tcl_GetStartupScript	generic/tclMain.c	/^Tcl_GetStartupScript($/;"	f	typeref:typename:Tcl_Obj *
Tcl_GetStdChannel	doc/GetStdChan.3	/^.TH Tcl_GetStdChannel 3 7.5 Tcl "Tcl Library Procedures"$/;"	t
Tcl_GetStdChannel	generic/tclDecls.h	/^#define Tcl_GetStdChannel /;"	d
Tcl_GetStdChannel	generic/tclIO.c	/^Tcl_GetStdChannel($/;"	f	typeref:typename:Tcl_Channel
Tcl_GetString	generic/tclDecls.h	/^#define Tcl_GetString /;"	d
Tcl_GetString	generic/tclDecls.h	/^#define Tcl_GetString(/;"	d
Tcl_GetString	generic/tclObj.c	/^Tcl_GetString($/;"	f	typeref:typename:char *
Tcl_GetStringFromObj	generic/tclDecls.h	/^#define Tcl_GetStringFromObj /;"	d
Tcl_GetStringFromObj	generic/tclObj.c	/^Tcl_GetStringFromObj($/;"	f	typeref:typename:char *
Tcl_GetStringResult	generic/tclDecls.h	/^#define Tcl_GetStringResult(/;"	d
Tcl_GetThreadData	generic/tclDecls.h	/^#define Tcl_GetThreadData /;"	d
Tcl_GetThreadData	generic/tclThread.c	/^Tcl_GetThreadData($/;"	f	typeref:typename:void *
Tcl_GetTime	doc/GetTime.3	/^.TH Tcl_GetTime 3 8.4 Tcl "Tcl Library Procedures"$/;"	t
Tcl_GetTime	generic/tclDecls.h	/^#	define Tcl_GetTime(/;"	d
Tcl_GetTime	generic/tclDecls.h	/^#define Tcl_GetTime /;"	d
Tcl_GetTime	unix/tclUnixTime.c	/^Tcl_GetTime($/;"	f	typeref:typename:void
Tcl_GetTime	win/tclWinTime.c	/^Tcl_GetTime($/;"	f	typeref:typename:void
Tcl_GetTimeProc	generic/tcl.h	/^typedef void (Tcl_GetTimeProc)   (Tcl_Time *timebuf, void *clientData);$/;"	t	typeref:typename:void ()(Tcl_Time * timebuf,void * clientData)
Tcl_GetTopChannel	generic/tclDecls.h	/^#define Tcl_GetTopChannel /;"	d
Tcl_GetTopChannel	generic/tclIO.c	/^Tcl_GetTopChannel($/;"	f	typeref:typename:Tcl_Channel
Tcl_GetUniChar	generic/tclDecls.h	/^#define Tcl_GetUniChar /;"	d
Tcl_GetUniChar	generic/tclStringObj.c	/^Tcl_GetUniChar($/;"	f	typeref:typename:int
Tcl_GetUnicode	generic/tclDecls.h	/^#define Tcl_GetUnicode(/;"	d
Tcl_GetUnicodeFromObj	generic/tclDecls.h	/^#define Tcl_GetUnicodeFromObj /;"	d
Tcl_GetUnicodeFromObj	generic/tclStringObj.c	/^Tcl_GetUnicodeFromObj($/;"	f	typeref:typename:Tcl_UniChar *
Tcl_GetUserIdFromStat	generic/tclDecls.h	/^#define Tcl_GetUserIdFromStat /;"	d
Tcl_GetUserIdFromStat	generic/tclFileName.c	/^Tcl_GetUserIdFromStat($/;"	f	typeref:typename:int
Tcl_GetVar	generic/tclDecls.h	/^#define Tcl_GetVar(/;"	d
Tcl_GetVar2	generic/tclDecls.h	/^#define Tcl_GetVar2 /;"	d
Tcl_GetVar2	generic/tclVar.c	/^Tcl_GetVar2($/;"	f	typeref:typename:const char *
Tcl_GetVar2Ex	generic/tclDecls.h	/^#define Tcl_GetVar2Ex /;"	d
Tcl_GetVar2Ex	generic/tclVar.c	/^Tcl_GetVar2Ex($/;"	f	typeref:typename:Tcl_Obj *
Tcl_GetVariableFullName	generic/tclIntDecls.h	/^#define Tcl_GetVariableFullName /;"	d
Tcl_GetVariableFullName	generic/tclVar.c	/^Tcl_GetVariableFullName($/;"	f	typeref:typename:void
Tcl_GetVersion	doc/GetVersion.3	/^.TH Tcl_GetVersion 3 7.5 Tcl "Tcl Library Procedures"$/;"	t
Tcl_GetVersion	generic/tclBasic.c	/^Tcl_GetVersion($/;"	f	typeref:typename:void
Tcl_GetVersion	generic/tclDecls.h	/^#define Tcl_GetVersion /;"	d
Tcl_GetWideIntFromObj	generic/tclDecls.h	/^#define Tcl_GetWideIntFromObj /;"	d
Tcl_GetWideIntFromObj	generic/tclObj.c	/^Tcl_GetWideIntFromObj($/;"	f	typeref:typename:int
Tcl_GetWideUIntFromObj	generic/tclDecls.h	/^#define Tcl_GetWideUIntFromObj /;"	d
Tcl_GetWideUIntFromObj	generic/tclObj.c	/^Tcl_GetWideUIntFromObj($/;"	f	typeref:typename:int
Tcl_Gets	generic/tclDecls.h	/^#define Tcl_Gets /;"	d
Tcl_Gets	generic/tclIO.c	/^Tcl_Gets($/;"	f	typeref:typename:Tcl_Size
Tcl_GetsObj	generic/tclDecls.h	/^#define Tcl_GetsObj /;"	d
Tcl_GetsObj	generic/tclIO.c	/^Tcl_GetsObj($/;"	f	typeref:typename:Tcl_Size
Tcl_GetsObjCmd	generic/tclIOCmd.c	/^Tcl_GetsObjCmd($/;"	f	typeref:typename:int
Tcl_GetsObjCmd	generic/tclInt.h	/^MODULE_SCOPE Tcl_ObjCmdProc Tcl_GetsObjCmd;$/;"	v	typeref:typename:MODULE_SCOPE Tcl_ObjCmdProc
Tcl_GlobObjCmd	generic/tclFileName.c	/^Tcl_GlobObjCmd($/;"	f	typeref:typename:int
Tcl_GlobObjCmd	generic/tclInt.h	/^MODULE_SCOPE Tcl_ObjCmdProc Tcl_GlobObjCmd;$/;"	v	typeref:typename:MODULE_SCOPE Tcl_ObjCmdProc
Tcl_GlobTypeData	generic/tcl.h	/^typedef struct Tcl_GlobTypeData {$/;"	s
Tcl_GlobTypeData	generic/tcl.h	/^} Tcl_GlobTypeData;$/;"	t	typeref:struct:Tcl_GlobTypeData
Tcl_GlobalEval	generic/tclDecls.h	/^#define Tcl_GlobalEval(/;"	d
Tcl_GlobalEvalObj	generic/tclDecls.h	/^#define Tcl_GlobalEvalObj(/;"	d
Tcl_GlobalObjCmd	generic/tclInt.h	/^MODULE_SCOPE Tcl_ObjCmdProc Tcl_GlobalObjCmd;$/;"	v	typeref:typename:MODULE_SCOPE Tcl_ObjCmdProc
Tcl_GlobalObjCmd	generic/tclVar.c	/^Tcl_GlobalObjCmd($/;"	f	typeref:typename:int
Tcl_HasStringRep	generic/tclDecls.h	/^#define Tcl_HasStringRep /;"	d
Tcl_HasStringRep	generic/tclObj.c	/^Tcl_HasStringRep($/;"	f	typeref:typename:int
Tcl_Hash	doc/Hash.3	/^.TH Tcl_Hash 3 "" Tcl "Tcl Library Procedures"$/;"	t
Tcl_HashEntry	generic/tcl.h	/^struct Tcl_HashEntry {$/;"	s
Tcl_HashEntry	generic/tcl.h	/^typedef struct Tcl_HashEntry Tcl_HashEntry;$/;"	t	typeref:struct:Tcl_HashEntry
Tcl_HashKeyProc	generic/tcl.h	/^typedef TCL_HASH_TYPE (Tcl_HashKeyProc) (Tcl_HashTable *tablePtr, void *keyPtr);$/;"	t	typeref:typename:TCL_HASH_TYPE ()(Tcl_HashTable * tablePtr,void * keyPtr)
Tcl_HashKeyType	generic/tcl.h	/^struct Tcl_HashKeyType {$/;"	s
Tcl_HashKeyType	generic/tcl.h	/^typedef struct Tcl_HashKeyType Tcl_HashKeyType;$/;"	t	typeref:struct:Tcl_HashKeyType
Tcl_HashSearch	generic/tcl.h	/^typedef struct Tcl_HashSearch {$/;"	s
Tcl_HashSearch	generic/tcl.h	/^} Tcl_HashSearch;$/;"	t	typeref:struct:Tcl_HashSearch
Tcl_HashStats	generic/tclDecls.h	/^#define Tcl_HashStats /;"	d
Tcl_HashStats	generic/tclHash.c	/^Tcl_HashStats($/;"	f	typeref:typename:char *
Tcl_HashTable	generic/tcl.h	/^struct Tcl_HashTable {$/;"	s
Tcl_HashTable	generic/tcl.h	/^typedef struct Tcl_HashTable Tcl_HashTable;$/;"	t	typeref:struct:Tcl_HashTable
Tcl_HideCommand	generic/tclBasic.c	/^Tcl_HideCommand($/;"	f	typeref:typename:int
Tcl_HideCommand	generic/tclDecls.h	/^#define Tcl_HideCommand /;"	d
Tcl_IdleProc	generic/tcl.h	/^typedef void (Tcl_IdleProc) (void *clientData);$/;"	t	typeref:typename:void ()(void * clientData)
Tcl_IfObjCmd	generic/tclCmdIL.c	/^Tcl_IfObjCmd($/;"	f	typeref:typename:int
Tcl_IfObjCmd	generic/tclInt.h	/^MODULE_SCOPE Tcl_ObjCmdProc Tcl_IfObjCmd;$/;"	v	typeref:typename:MODULE_SCOPE Tcl_ObjCmdProc
Tcl_Import	generic/tclDecls.h	/^#define Tcl_Import /;"	d
Tcl_Import	generic/tclNamesp.c	/^Tcl_Import($/;"	f	typeref:typename:int
Tcl_IncrObjCmd	generic/tclCmdIL.c	/^Tcl_IncrObjCmd($/;"	f	typeref:typename:int
Tcl_IncrObjCmd	generic/tclInt.h	/^MODULE_SCOPE Tcl_ObjCmdProc Tcl_IncrObjCmd;$/;"	v	typeref:typename:MODULE_SCOPE Tcl_ObjCmdProc
Tcl_IncrRefCount	generic/tcl.h	/^#   define Tcl_IncrRefCount(/;"	d
Tcl_IncrRefCount	generic/tclDecls.h	/^#define Tcl_IncrRefCount /;"	d
Tcl_IncrRefCount	generic/tclObj.c	/^Tcl_IncrRefCount($/;"	f	typeref:typename:void
Tcl_Init	doc/Init.3	/^.TH Tcl_Init 3 9.0 Tcl "Tcl Library Procedures"$/;"	t
Tcl_Init	generic/tclDecls.h	/^#define Tcl_Init /;"	d
Tcl_Init	generic/tclInterp.c	/^Tcl_Init($/;"	f	typeref:typename:int
Tcl_InitBignumFromDouble	generic/tclDecls.h	/^#define Tcl_InitBignumFromDouble /;"	d
Tcl_InitBignumFromDouble	generic/tclStrToD.c	/^Tcl_InitBignumFromDouble($/;"	f	typeref:typename:int
Tcl_InitCustomHashTable	generic/tclDecls.h	/^#define Tcl_InitCustomHashTable /;"	d
Tcl_InitCustomHashTable	generic/tclHash.c	/^Tcl_InitCustomHashTable($/;"	f	typeref:typename:void
Tcl_InitHashTable	generic/tclDecls.h	/^#define Tcl_InitHashTable /;"	d
Tcl_InitHashTable	generic/tclHash.c	/^Tcl_InitHashTable($/;"	f	typeref:typename:void
Tcl_InitMemory	generic/tcl.h	/^#   define Tcl_InitMemory(/;"	d
Tcl_InitMemory	generic/tclCkalloc.c	/^Tcl_InitMemory($/;"	f	typeref:typename:void
Tcl_InitMemory	generic/tclDecls.h	/^#define Tcl_InitMemory /;"	d
Tcl_InitNotifier	generic/tclDecls.h	/^#define Tcl_InitNotifier /;"	d
Tcl_InitNotifier	generic/tclNotify.c	/^Tcl_InitNotifier(void)$/;"	f	typeref:typename:void *
Tcl_InitNotifierProc	generic/tcl.h	/^typedef void *(Tcl_InitNotifierProc) (void);$/;"	t	typeref:typename:void * ()(void)
Tcl_InitObjHashTable	generic/tclDecls.h	/^#define Tcl_InitObjHashTable /;"	d
Tcl_InitObjHashTable	generic/tclObj.c	/^Tcl_InitObjHashTable($/;"	f	typeref:typename:void
Tcl_InitStringRep	generic/tclDecls.h	/^#define Tcl_InitStringRep /;"	d
Tcl_InitStringRep	generic/tclObj.c	/^Tcl_InitStringRep($/;"	f	typeref:typename:char *
Tcl_InitStubs	doc/InitStubs.3	/^.TH Tcl_InitStubs 3 8.1 Tcl "Tcl Library Procedures"$/;"	t
Tcl_InitStubs	generic/tcl.h	/^#   define Tcl_InitStubs(/;"	d
Tcl_InitStubs	generic/tclStubLib.c	/^Tcl_InitStubs($/;"	f	typeref:typename:MODULE_SCOPE const char *
Tcl_InitSubsystems	doc/InitSubSyst.3	/^.TH Tcl_InitSubsystems 3 8.7 Tcl "Tcl Library Procedures"$/;"	t
Tcl_InitSubsystems	generic/tcl.h	/^#define Tcl_InitSubsystems(/;"	d
Tcl_InitSubsystems	generic/tclEvent.c	/^Tcl_InitSubsystems(void)$/;"	f	typeref:typename:const char *
Tcl_InputBlocked	generic/tclDecls.h	/^#define Tcl_InputBlocked /;"	d
Tcl_InputBlocked	generic/tclIO.c	/^Tcl_InputBlocked($/;"	f	typeref:typename:int
Tcl_InputBuffered	generic/tclDecls.h	/^#define Tcl_InputBuffered /;"	d
Tcl_InputBuffered	generic/tclIO.c	/^Tcl_InputBuffered($/;"	f	typeref:typename:int
Tcl_IntObj	doc/IntObj.3	/^.TH Tcl_IntObj 3 8.5 Tcl "Tcl Library Procedures"$/;"	t
Tcl_Interp	generic/tcl.h	/^typedef struct Tcl_Interp Tcl_Interp;$/;"	t	typeref:struct:Tcl_Interp
Tcl_InterpActive	generic/tclBasic.c	/^Tcl_InterpActive($/;"	f	typeref:typename:int
Tcl_InterpActive	generic/tclDecls.h	/^#define Tcl_InterpActive /;"	d
Tcl_InterpDeleteProc	generic/tcl.h	/^typedef void (Tcl_InterpDeleteProc) (void *clientData,$/;"	t	typeref:typename:void ()(void * clientData,Tcl_Interp * interp)
Tcl_InterpDeleted	generic/tclBasic.c	/^Tcl_InterpDeleted($/;"	f	typeref:typename:int
Tcl_InterpDeleted	generic/tclDecls.h	/^#define Tcl_InterpDeleted /;"	d
Tcl_InterpObjCmd	generic/tclInt.h	/^MODULE_SCOPE Tcl_ObjCmdProc Tcl_InterpObjCmd;$/;"	v	typeref:typename:MODULE_SCOPE Tcl_ObjCmdProc
Tcl_InterpObjCmd	generic/tclInterp.c	/^Tcl_InterpObjCmd($/;"	f	typeref:typename:int
Tcl_InterpState	generic/tcl.h	/^typedef struct Tcl_InterpState_ *Tcl_InterpState;$/;"	t	typeref:struct:Tcl_InterpState_ *
Tcl_InvalidateStringRep	generic/tclDecls.h	/^#define Tcl_InvalidateStringRep /;"	d
Tcl_InvalidateStringRep	generic/tclObj.c	/^Tcl_InvalidateStringRep($/;"	f	typeref:typename:void
Tcl_IsChannelExisting	generic/tclDecls.h	/^#define Tcl_IsChannelExisting /;"	d
Tcl_IsChannelExisting	generic/tclIO.c	/^Tcl_IsChannelExisting($/;"	f	typeref:typename:int
Tcl_IsChannelRegistered	generic/tclDecls.h	/^#define Tcl_IsChannelRegistered /;"	d
Tcl_IsChannelRegistered	generic/tclIO.c	/^Tcl_IsChannelRegistered($/;"	f	typeref:typename:int
Tcl_IsChannelShared	generic/tclDecls.h	/^#define Tcl_IsChannelShared /;"	d
Tcl_IsChannelShared	generic/tclIO.c	/^Tcl_IsChannelShared($/;"	f	typeref:typename:int
Tcl_IsEnsemble	generic/tclDecls.h	/^#define Tcl_IsEnsemble /;"	d
Tcl_IsEnsemble	generic/tclEnsemble.c	/^Tcl_IsEnsemble($/;"	f	typeref:typename:int
Tcl_IsSafe	generic/tclDecls.h	/^#define Tcl_IsSafe /;"	d
Tcl_IsSafe	generic/tclInterp.c	/^Tcl_IsSafe($/;"	f	typeref:typename:int
Tcl_IsShared	generic/tcl.h	/^#   define Tcl_IsShared(/;"	d
Tcl_IsShared	generic/tclDecls.h	/^#define Tcl_IsShared /;"	d
Tcl_IsShared	generic/tclObj.c	/^Tcl_IsShared($/;"	f	typeref:typename:int
Tcl_IsStandardChannel	generic/tclDecls.h	/^#define Tcl_IsStandardChannel /;"	d
Tcl_IsStandardChannel	generic/tclIO.c	/^Tcl_IsStandardChannel($/;"	f	typeref:typename:int
Tcl_JoinObjCmd	generic/tclCmdIL.c	/^Tcl_JoinObjCmd($/;"	f	typeref:typename:int
Tcl_JoinObjCmd	generic/tclInt.h	/^MODULE_SCOPE Tcl_ObjCmdProc Tcl_JoinObjCmd;$/;"	v	typeref:typename:MODULE_SCOPE Tcl_ObjCmdProc
Tcl_JoinPath	generic/tclDecls.h	/^#define Tcl_JoinPath /;"	d
Tcl_JoinPath	generic/tclFileName.c	/^Tcl_JoinPath($/;"	f	typeref:typename:char *
Tcl_JoinThread	generic/tclDecls.h	/^#define Tcl_JoinThread /;"	d
Tcl_JoinThread	unix/tclUnixThrd.c	/^Tcl_JoinThread($/;"	f	typeref:typename:int
Tcl_JoinThread	win/tclWinThrd.c	/^Tcl_JoinThread($/;"	f	typeref:typename:int
Tcl_LappendObjCmd	generic/tclInt.h	/^MODULE_SCOPE Tcl_ObjCmdProc Tcl_LappendObjCmd;$/;"	v	typeref:typename:MODULE_SCOPE Tcl_ObjCmdProc
Tcl_LappendObjCmd	generic/tclVar.c	/^Tcl_LappendObjCmd($/;"	f	typeref:typename:int
Tcl_LassignObjCmd	generic/tclCmdIL.c	/^Tcl_LassignObjCmd($/;"	f	typeref:typename:int
Tcl_LassignObjCmd	generic/tclInt.h	/^MODULE_SCOPE Tcl_ObjCmdProc Tcl_LassignObjCmd;$/;"	v	typeref:typename:MODULE_SCOPE Tcl_ObjCmdProc
Tcl_LeditObjCmd	generic/tclCmdIL.c	/^Tcl_LeditObjCmd($/;"	f	typeref:typename:int
Tcl_LeditObjCmd	generic/tclInt.h	/^MODULE_SCOPE Tcl_ObjCmdProc Tcl_LeditObjCmd;$/;"	v	typeref:typename:MODULE_SCOPE Tcl_ObjCmdProc
Tcl_LengthIsFinite	generic/tclUtil.c	/^Tcl_LengthIsFinite(Tcl_Size length) {$/;"	f	typeref:typename:int
Tcl_LibraryInitProc	generic/tcl.h	/^typedef int (Tcl_LibraryInitProc) (Tcl_Interp *interp);$/;"	t	typeref:typename:int ()(Tcl_Interp * interp)
Tcl_LibraryUnloadProc	generic/tcl.h	/^typedef int (Tcl_LibraryUnloadProc) (Tcl_Interp *interp, int flags);$/;"	t	typeref:typename:int ()(Tcl_Interp * interp,int flags)
Tcl_LimitAddHandler	generic/tclDecls.h	/^#define Tcl_LimitAddHandler /;"	d
Tcl_LimitAddHandler	generic/tclInterp.c	/^Tcl_LimitAddHandler($/;"	f	typeref:typename:void
Tcl_LimitCheck	doc/Limit.3	/^.TH Tcl_LimitCheck 3 8.5 Tcl "Tcl Library Procedures"$/;"	t
Tcl_LimitCheck	generic/tclDecls.h	/^#define Tcl_LimitCheck /;"	d
Tcl_LimitCheck	generic/tclInterp.c	/^Tcl_LimitCheck($/;"	f	typeref:typename:int
Tcl_LimitExceeded	generic/tclDecls.h	/^#define Tcl_LimitExceeded /;"	d
Tcl_LimitExceeded	generic/tclInterp.c	/^Tcl_LimitExceeded($/;"	f	typeref:typename:int
Tcl_LimitGetCommands	generic/tclDecls.h	/^#define Tcl_LimitGetCommands /;"	d
Tcl_LimitGetCommands	generic/tclInterp.c	/^Tcl_LimitGetCommands($/;"	f	typeref:typename:int
Tcl_LimitGetGranularity	generic/tclDecls.h	/^#define Tcl_LimitGetGranularity /;"	d
Tcl_LimitGetGranularity	generic/tclInterp.c	/^Tcl_LimitGetGranularity($/;"	f	typeref:typename:int
Tcl_LimitGetTime	generic/tclDecls.h	/^#define Tcl_LimitGetTime /;"	d
Tcl_LimitGetTime	generic/tclInterp.c	/^Tcl_LimitGetTime($/;"	f	typeref:typename:void
Tcl_LimitHandlerDeleteProc	generic/tcl.h	/^#define Tcl_LimitHandlerDeleteProc /;"	d
Tcl_LimitHandlerProc	generic/tcl.h	/^typedef void (Tcl_LimitHandlerProc) (void *clientData, Tcl_Interp *interp);$/;"	t	typeref:typename:void ()(void * clientData,Tcl_Interp * interp)
Tcl_LimitReady	generic/tclDecls.h	/^#define Tcl_LimitReady /;"	d
Tcl_LimitReady	generic/tclInterp.c	/^Tcl_LimitReady($/;"	f	typeref:typename:int
Tcl_LimitRemoveHandler	generic/tclDecls.h	/^#define Tcl_LimitRemoveHandler /;"	d
Tcl_LimitRemoveHandler	generic/tclInterp.c	/^Tcl_LimitRemoveHandler($/;"	f	typeref:typename:void
Tcl_LimitSetCommands	generic/tclDecls.h	/^#define Tcl_LimitSetCommands /;"	d
Tcl_LimitSetCommands	generic/tclInterp.c	/^Tcl_LimitSetCommands($/;"	f	typeref:typename:void
Tcl_LimitSetGranularity	generic/tclDecls.h	/^#define Tcl_LimitSetGranularity /;"	d
Tcl_LimitSetGranularity	generic/tclInterp.c	/^Tcl_LimitSetGranularity($/;"	f	typeref:typename:void
Tcl_LimitSetTime	generic/tclDecls.h	/^#define Tcl_LimitSetTime /;"	d
Tcl_LimitSetTime	generic/tclInterp.c	/^Tcl_LimitSetTime($/;"	f	typeref:typename:void
Tcl_LimitTypeEnabled	generic/tclDecls.h	/^#define Tcl_LimitTypeEnabled /;"	d
Tcl_LimitTypeEnabled	generic/tclInterp.c	/^Tcl_LimitTypeEnabled($/;"	f	typeref:typename:int
Tcl_LimitTypeExceeded	generic/tclDecls.h	/^#define Tcl_LimitTypeExceeded /;"	d
Tcl_LimitTypeExceeded	generic/tclInterp.c	/^Tcl_LimitTypeExceeded($/;"	f	typeref:typename:int
Tcl_LimitTypeReset	generic/tclDecls.h	/^#define Tcl_LimitTypeReset /;"	d
Tcl_LimitTypeReset	generic/tclInterp.c	/^Tcl_LimitTypeReset($/;"	f	typeref:typename:void
Tcl_LimitTypeSet	generic/tclDecls.h	/^#define Tcl_LimitTypeSet /;"	d
Tcl_LimitTypeSet	generic/tclInterp.c	/^Tcl_LimitTypeSet($/;"	f	typeref:typename:void
Tcl_LindexObjCmd	generic/tclCmdIL.c	/^Tcl_LindexObjCmd($/;"	f	typeref:typename:int
Tcl_LindexObjCmd	generic/tclInt.h	/^MODULE_SCOPE Tcl_ObjCmdProc Tcl_LindexObjCmd;$/;"	v	typeref:typename:MODULE_SCOPE Tcl_ObjCmdProc
Tcl_LinkArray	generic/tclDecls.h	/^#define Tcl_LinkArray /;"	d
Tcl_LinkArray	generic/tclLink.c	/^Tcl_LinkArray($/;"	f	typeref:typename:int
Tcl_LinkVar	doc/LinkVar.3	/^.TH Tcl_LinkVar 3 7.5 Tcl "Tcl Library Procedures"$/;"	t
Tcl_LinkVar	generic/tclDecls.h	/^#define Tcl_LinkVar /;"	d
Tcl_LinkVar	generic/tclLink.c	/^Tcl_LinkVar($/;"	f	typeref:typename:int
Tcl_LinsertObjCmd	generic/tclCmdIL.c	/^Tcl_LinsertObjCmd($/;"	f	typeref:typename:int
Tcl_LinsertObjCmd	generic/tclInt.h	/^MODULE_SCOPE Tcl_ObjCmdProc Tcl_LinsertObjCmd;$/;"	v	typeref:typename:MODULE_SCOPE Tcl_ObjCmdProc
Tcl_ListObj	doc/ListObj.3	/^.TH Tcl_ListObj 3 8.0 Tcl "Tcl Library Procedures"$/;"	t
Tcl_ListObjAppendElement	generic/tclDecls.h	/^#define Tcl_ListObjAppendElement /;"	d
Tcl_ListObjAppendElement	generic/tclListObj.c	/^Tcl_ListObjAppendElement($/;"	f	typeref:typename:int
Tcl_ListObjAppendList	generic/tclDecls.h	/^#define Tcl_ListObjAppendList /;"	d
Tcl_ListObjAppendList	generic/tclListObj.c	/^Tcl_ListObjAppendList(tclObjTypeInterfaceArgsListAppendList)$/;"	f	typeref:typename:int
Tcl_ListObjCmd	generic/tclCmdIL.c	/^Tcl_ListObjCmd($/;"	f	typeref:typename:int
Tcl_ListObjCmd	generic/tclInt.h	/^MODULE_SCOPE Tcl_ObjCmdProc Tcl_ListObjCmd;$/;"	v	typeref:typename:MODULE_SCOPE Tcl_ObjCmdProc
Tcl_ListObjGetElements	generic/tclDecls.h	/^#define Tcl_ListObjGetElements /;"	d
Tcl_ListObjGetElements	generic/tclListObj.c	/^Tcl_ListObjGetElements(tclObjTypeInterfaceArgsListAll)$/;"	f	typeref:typename:int
Tcl_ListObjIndex	generic/tclDecls.h	/^#define Tcl_ListObjIndex /;"	d
Tcl_ListObjIndex	generic/tclListObj.c	/^Tcl_ListObjIndex(tclObjTypeInterfaceArgsListIndex)$/;"	f	typeref:typename:int
Tcl_ListObjLength	generic/tclDecls.h	/^#define Tcl_ListObjLength /;"	d
Tcl_ListObjLength	generic/tclListObj.c	/^Tcl_ListObjLength(tclObjTypeInterfaceArgsListLength)$/;"	f	typeref:typename:int
Tcl_ListObjReplace	generic/tclDecls.h	/^#define Tcl_ListObjReplace /;"	d
Tcl_ListObjReplace	generic/tclListObj.c	/^Tcl_ListObjReplace(tclObjTypeInterfaceArgsListReplace)$/;"	f	typeref:typename:int
Tcl_LlengthObjCmd	generic/tclCmdIL.c	/^Tcl_LlengthObjCmd($/;"	f	typeref:typename:int
Tcl_LlengthObjCmd	generic/tclInt.h	/^MODULE_SCOPE Tcl_ObjCmdProc Tcl_LlengthObjCmd;$/;"	v	typeref:typename:MODULE_SCOPE Tcl_ObjCmdProc
Tcl_LmapObjCmd	generic/tclCmdAH.c	/^Tcl_LmapObjCmd($/;"	f	typeref:typename:int
Tcl_LmapObjCmd	generic/tclInt.h	/^MODULE_SCOPE Tcl_ObjCmdProc Tcl_LmapObjCmd;$/;"	v	typeref:typename:MODULE_SCOPE Tcl_ObjCmdProc
Tcl_LoadFile	generic/tclDecls.h	/^#define Tcl_LoadFile /;"	d
Tcl_LoadFile	generic/tclIOUtil.c	/^Tcl_LoadFile($/;"	f	typeref:typename:int
Tcl_LoadHandle	generic/tcl.h	/^typedef struct Tcl_LoadHandle_ *Tcl_LoadHandle;$/;"	t	typeref:struct:Tcl_LoadHandle_ *
Tcl_LoadHandle_	generic/tclInt.h	/^struct Tcl_LoadHandle_ {$/;"	s
Tcl_LoadObjCmd	generic/tclInt.h	/^MODULE_SCOPE Tcl_ObjCmdProc Tcl_LoadObjCmd;$/;"	v	typeref:typename:MODULE_SCOPE Tcl_ObjCmdProc
Tcl_LoadObjCmd	generic/tclLoad.c	/^Tcl_LoadObjCmd($/;"	f	typeref:typename:int
Tcl_LogCommandInfo	generic/tclDecls.h	/^#define Tcl_LogCommandInfo /;"	d
Tcl_LogCommandInfo	generic/tclNamesp.c	/^Tcl_LogCommandInfo($/;"	f	typeref:typename:void
Tcl_LongAsWide	generic/tcl.h	/^#define Tcl_LongAsWide(/;"	d
Tcl_LpopObjCmd	generic/tclCmdIL.c	/^Tcl_LpopObjCmd($/;"	f	typeref:typename:int
Tcl_LpopObjCmd	generic/tclInt.h	/^MODULE_SCOPE Tcl_ObjCmdProc Tcl_LpopObjCmd;$/;"	v	typeref:typename:MODULE_SCOPE Tcl_ObjCmdProc
Tcl_LrangeObjCmd	generic/tclCmdIL.c	/^Tcl_LrangeObjCmd($/;"	f	typeref:typename:int
Tcl_LrangeObjCmd	generic/tclInt.h	/^MODULE_SCOPE Tcl_ObjCmdProc Tcl_LrangeObjCmd;$/;"	v	typeref:typename:MODULE_SCOPE Tcl_ObjCmdProc
Tcl_LremoveObjCmd	generic/tclCmdIL.c	/^Tcl_LremoveObjCmd($/;"	f	typeref:typename:int
Tcl_LremoveObjCmd	generic/tclInt.h	/^MODULE_SCOPE Tcl_ObjCmdProc Tcl_LremoveObjCmd;$/;"	v	typeref:typename:MODULE_SCOPE Tcl_ObjCmdProc
Tcl_LrepeatObjCmd	generic/tclCmdIL.c	/^Tcl_LrepeatObjCmd($/;"	f	typeref:typename:int
Tcl_LrepeatObjCmd	generic/tclInt.h	/^MODULE_SCOPE Tcl_ObjCmdProc Tcl_LrepeatObjCmd;$/;"	v	typeref:typename:MODULE_SCOPE Tcl_ObjCmdProc
Tcl_LreplaceObjCmd	generic/tclCmdIL.c	/^Tcl_LreplaceObjCmd($/;"	f	typeref:typename:int
Tcl_LreplaceObjCmd	generic/tclInt.h	/^MODULE_SCOPE Tcl_ObjCmdProc Tcl_LreplaceObjCmd;$/;"	v	typeref:typename:MODULE_SCOPE Tcl_ObjCmdProc
Tcl_LreverseObjCmd	generic/tclCmdIL.c	/^Tcl_LreverseObjCmd($/;"	f	typeref:typename:int
Tcl_LreverseObjCmd	generic/tclInt.h	/^MODULE_SCOPE Tcl_ObjCmdProc Tcl_LreverseObjCmd;$/;"	v	typeref:typename:MODULE_SCOPE Tcl_ObjCmdProc
Tcl_LsearchObjCmd	generic/tclCmdIL.c	/^Tcl_LsearchObjCmd($/;"	f	typeref:typename:int
Tcl_LsearchObjCmd	generic/tclInt.h	/^MODULE_SCOPE Tcl_ObjCmdProc Tcl_LsearchObjCmd;$/;"	v	typeref:typename:MODULE_SCOPE Tcl_ObjCmdProc
Tcl_LseqObjCmd	generic/tclCmdIL.c	/^Tcl_LseqObjCmd($/;"	f	typeref:typename:int
Tcl_LseqObjCmd	generic/tclInt.h	/^MODULE_SCOPE Tcl_ObjCmdProc Tcl_LseqObjCmd;$/;"	v	typeref:typename:MODULE_SCOPE Tcl_ObjCmdProc
Tcl_LsetObjCmd	generic/tclCmdIL.c	/^Tcl_LsetObjCmd($/;"	f	typeref:typename:int
Tcl_LsetObjCmd	generic/tclInt.h	/^MODULE_SCOPE Tcl_ObjCmdProc Tcl_LsetObjCmd;$/;"	v	typeref:typename:MODULE_SCOPE Tcl_ObjCmdProc
Tcl_LsortObjCmd	generic/tclCmdIL.c	/^Tcl_LsortObjCmd($/;"	f	typeref:typename:int
Tcl_LsortObjCmd	generic/tclInt.h	/^MODULE_SCOPE Tcl_ObjCmdProc Tcl_LsortObjCmd;$/;"	v	typeref:typename:MODULE_SCOPE Tcl_ObjCmdProc
Tcl_MacOSXNotifierAddRunLoopMode	generic/tclPlatDecls.h	/^#define Tcl_MacOSXNotifierAddRunLoopMode /;"	d
Tcl_MacOSXNotifierAddRunLoopMode	generic/tclStubInit.c	/^#   define Tcl_MacOSXNotifierAddRunLoopMode /;"	d	file:
Tcl_MacOSXNotifierAddRunLoopMode	macosx/tclMacOSXNotify.c	/^Tcl_MacOSXNotifierAddRunLoopMode($/;"	f	typeref:typename:void
Tcl_MacOSXOpenBundleResources	generic/tclPlatDecls.h	/^#define Tcl_MacOSXOpenBundleResources(/;"	d
Tcl_MacOSXOpenVersionedBundleResources	generic/tclPlatDecls.h	/^#define Tcl_MacOSXOpenVersionedBundleResources /;"	d
Tcl_MacOSXOpenVersionedBundleResources	generic/tclStubInit.c	/^#   define Tcl_MacOSXOpenVersionedBundleResources /;"	d	file:
Tcl_MacOSXOpenVersionedBundleResources	macosx/tclMacOSXBundle.c	/^Tcl_MacOSXOpenVersionedBundleResources($/;"	f	typeref:typename:int
Tcl_Main	doc/Tcl_Main.3	/^.TH Tcl_Main 3 9.0 Tcl "Tcl Library Procedures"$/;"	t
Tcl_Main	generic/tcl.h	/^#define Tcl_Main(/;"	d
Tcl_MainEx	generic/tcl.h	/^#   define Tcl_MainEx Tcl_MainExW/;"	d
Tcl_MainEx	generic/tcl.h	/^#define Tcl_MainEx(/;"	d
Tcl_MainEx	generic/tclMain.c	/^Tcl_MainEx($/;"	f	typeref:typename:TCL_NORETURN void
Tcl_MainExW	generic/tcl.h	/^#define Tcl_MainExW(/;"	d
Tcl_MainLoopProc	generic/tcl.h	/^typedef void (Tcl_MainLoopProc) (void);$/;"	t	typeref:typename:void ()(void)
Tcl_MakeFileChannel	generic/tclDecls.h	/^#define Tcl_MakeFileChannel /;"	d
Tcl_MakeFileChannel	unix/tclUnixChan.c	/^Tcl_MakeFileChannel($/;"	f	typeref:typename:Tcl_Channel
Tcl_MakeFileChannel	win/tclWinChan.c	/^Tcl_MakeFileChannel($/;"	f	typeref:typename:Tcl_Channel
Tcl_MakeTcpClientChannel	generic/tclDecls.h	/^#define Tcl_MakeTcpClientChannel /;"	d
Tcl_MakeTcpClientChannel	unix/tclUnixSock.c	/^Tcl_MakeTcpClientChannel($/;"	f	typeref:typename:Tcl_Channel
Tcl_MakeTcpClientChannel	win/tclWinSock.c	/^Tcl_MakeTcpClientChannel($/;"	f	typeref:typename:Tcl_Channel
Tcl_Merge	generic/tclDecls.h	/^#define Tcl_Merge /;"	d
Tcl_Merge	generic/tclUtil.c	/^Tcl_Merge($/;"	f	typeref:typename:char *
Tcl_Method	doc/Method.3	/^.TH Tcl_Method 3 0.1 TclOO "TclOO Library Functions"$/;"	t
Tcl_Method	generic/tclOO.h	/^typedef struct Tcl_Method_ *Tcl_Method;$/;"	t	typeref:struct:Tcl_Method_ *
Tcl_MethodCallProc	generic/tclOO.h	/^typedef int (Tcl_MethodCallProc)(void *clientData, Tcl_Interp *interp,$/;"	t	typeref:typename:int ()(void * clientData,Tcl_Interp * interp,Tcl_ObjectContext objectContext,int objc,Tcl_Obj * const * objv)
Tcl_MethodCallProc2	generic/tclOO.h	/^typedef int (Tcl_MethodCallProc2)(void *clientData, Tcl_Interp *interp,$/;"	t	typeref:typename:int ()(void * clientData,Tcl_Interp * interp,Tcl_ObjectContext objectContext,Tcl_Size objc,Tcl_Obj * const * objv)
Tcl_MethodDeclarerClass	generic/tclOODecls.h	/^#define Tcl_MethodDeclarerClass /;"	d
Tcl_MethodDeclarerClass	generic/tclOOMethod.c	/^Tcl_MethodDeclarerClass($/;"	f	typeref:typename:Tcl_Class
Tcl_MethodDeclarerObject	generic/tclOODecls.h	/^#define Tcl_MethodDeclarerObject /;"	d
Tcl_MethodDeclarerObject	generic/tclOOMethod.c	/^Tcl_MethodDeclarerObject($/;"	f	typeref:typename:Tcl_Object
Tcl_MethodDeleteProc	generic/tclOO.h	/^typedef void (Tcl_MethodDeleteProc)(void *clientData);$/;"	t	typeref:typename:void ()(void * clientData)
Tcl_MethodIsPrivate	generic/tclOODecls.h	/^#define Tcl_MethodIsPrivate /;"	d
Tcl_MethodIsPrivate	generic/tclOOMethod.c	/^Tcl_MethodIsPrivate($/;"	f	typeref:typename:int
Tcl_MethodIsPublic	generic/tclOODecls.h	/^#define Tcl_MethodIsPublic /;"	d
Tcl_MethodIsPublic	generic/tclOOMethod.c	/^Tcl_MethodIsPublic($/;"	f	typeref:typename:int
Tcl_MethodIsType	generic/tclOODecls.h	/^#define Tcl_MethodIsType /;"	d
Tcl_MethodIsType	generic/tclOOMethod.c	/^Tcl_MethodIsType($/;"	f	typeref:typename:int
Tcl_MethodIsType2	generic/tclOODecls.h	/^#define Tcl_MethodIsType2 /;"	d
Tcl_MethodIsType2	generic/tclOOMethod.c	/^Tcl_MethodIsType2($/;"	f	typeref:typename:int
Tcl_MethodName	generic/tclOODecls.h	/^#define Tcl_MethodName /;"	d
Tcl_MethodName	generic/tclOOMethod.c	/^Tcl_MethodName($/;"	f	typeref:typename:Tcl_Obj *
Tcl_MethodType	generic/tclOO.h	/^typedef struct Tcl_MethodType {$/;"	s
Tcl_MethodType	generic/tclOO.h	/^} Tcl_MethodType;$/;"	t	typeref:struct:Tcl_MethodType
Tcl_MethodType2	generic/tclOO.h	/^typedef struct Tcl_MethodType2 {$/;"	s
Tcl_MethodType2	generic/tclOO.h	/^} Tcl_MethodType2;$/;"	t	typeref:struct:Tcl_MethodType2
Tcl_Mutex	generic/tcl.h	/^typedef struct Tcl_Mutex_ *Tcl_Mutex;$/;"	t	typeref:struct:Tcl_Mutex_ *
Tcl_MutexFinalize	generic/tclDecls.h	/^#define Tcl_MutexFinalize /;"	d
Tcl_MutexFinalize	generic/tclInt.h	/^#   define Tcl_MutexFinalize(/;"	d
Tcl_MutexFinalize	generic/tclThread.c	/^Tcl_MutexFinalize($/;"	f	typeref:typename:void
Tcl_MutexLock	generic/tclDecls.h	/^#define Tcl_MutexLock /;"	d
Tcl_MutexLock	generic/tclInt.h	/^#   define Tcl_MutexLock(/;"	d
Tcl_MutexLock	generic/tclThread.c	/^Tcl_MutexLock($/;"	f	typeref:typename:void
Tcl_MutexLock	unix/tclUnixThrd.c	/^Tcl_MutexLock($/;"	f	typeref:typename:void
Tcl_MutexLock	win/tclWinThrd.c	/^Tcl_MutexLock($/;"	f	typeref:typename:void
Tcl_MutexUnlock	generic/tclDecls.h	/^#define Tcl_MutexUnlock /;"	d
Tcl_MutexUnlock	generic/tclInt.h	/^#   define Tcl_MutexUnlock(/;"	d
Tcl_MutexUnlock	generic/tclThread.c	/^Tcl_MutexUnlock($/;"	f	typeref:typename:void
Tcl_MutexUnlock	unix/tclUnixThrd.c	/^Tcl_MutexUnlock($/;"	f	typeref:typename:void
Tcl_MutexUnlock	win/tclWinThrd.c	/^Tcl_MutexUnlock($/;"	f	typeref:typename:void
Tcl_Mutex_	win/tclWinThrd.c	/^static struct Tcl_Mutex_ {$/;"	s	file:
Tcl_NRAddCallback	generic/tclBasic.c	/^Tcl_NRAddCallback($/;"	f	typeref:typename:void
Tcl_NRAddCallback	generic/tclDecls.h	/^#define Tcl_NRAddCallback /;"	d
Tcl_NRCallObjProc	generic/tclDecls.h	/^#define Tcl_NRCallObjProc /;"	d
Tcl_NRCallObjProc2	generic/tclBasic.c	/^Tcl_NRCallObjProc2($/;"	f	typeref:typename:int
Tcl_NRCallObjProc2	generic/tclDecls.h	/^#define Tcl_NRCallObjProc2 /;"	d
Tcl_NRCmdSwap	generic/tclBasic.c	/^Tcl_NRCmdSwap($/;"	f	typeref:typename:int
Tcl_NRCmdSwap	generic/tclDecls.h	/^#define Tcl_NRCmdSwap /;"	d
Tcl_NRCreateCommand	generic/tclBasic.c	/^Tcl_NRCreateCommand($/;"	f	typeref:typename:Tcl_Command
Tcl_NRCreateCommand	generic/tclDecls.h	/^#define Tcl_NRCreateCommand /;"	d
Tcl_NRCreateCommand2	generic/tclBasic.c	/^Tcl_NRCreateCommand2($/;"	f	typeref:typename:Tcl_Command
Tcl_NRCreateCommand2	generic/tclDecls.h	/^#define Tcl_NRCreateCommand2 /;"	d
Tcl_NREvalObj	generic/tclBasic.c	/^Tcl_NREvalObj($/;"	f	typeref:typename:int
Tcl_NREvalObj	generic/tclDecls.h	/^#define Tcl_NREvalObj /;"	d
Tcl_NREvalObjv	generic/tclBasic.c	/^Tcl_NREvalObjv($/;"	f	typeref:typename:int
Tcl_NREvalObjv	generic/tclDecls.h	/^#define Tcl_NREvalObjv /;"	d
Tcl_NRExprObj	generic/tclDecls.h	/^#define Tcl_NRExprObj /;"	d
Tcl_NRExprObj	generic/tclExecute.c	/^Tcl_NRExprObj($/;"	f	typeref:typename:int
Tcl_NRPostProc	generic/tcl.h	/^typedef int (Tcl_NRPostProc) (void *data[], Tcl_Interp *interp,$/;"	t	typeref:typename:int ()(void * data[],Tcl_Interp * interp,int result)
Tcl_NRSubstObj	generic/tclCompile.c	/^Tcl_NRSubstObj($/;"	f	typeref:typename:int
Tcl_NRSubstObj	generic/tclDecls.h	/^#define Tcl_NRSubstObj /;"	d
Tcl_Namespace	doc/Namespace.3	/^.TH Tcl_Namespace 3 8.5 Tcl "Tcl Library Procedures"$/;"	t
Tcl_Namespace	generic/tcl.h	/^typedef struct Tcl_Namespace {$/;"	s
Tcl_Namespace	generic/tcl.h	/^} Tcl_Namespace;$/;"	t	typeref:struct:Tcl_Namespace
Tcl_NamespaceDeleteProc	generic/tcl.h	/^typedef void (Tcl_NamespaceDeleteProc) (void *clientData);$/;"	t	typeref:typename:void ()(void * clientData)
Tcl_NewBignumObj	generic/tcl.h	/^#  define Tcl_NewBignumObj(/;"	d
Tcl_NewBignumObj	generic/tclDecls.h	/^#define Tcl_NewBignumObj /;"	d
Tcl_NewBignumObj	generic/tclObj.c	/^Tcl_NewBignumObj($/;"	f	typeref:typename:Tcl_Obj *
Tcl_NewBooleanObj	generic/tcl.h	/^#  define Tcl_NewBooleanObj(/;"	d
Tcl_NewBooleanObj	generic/tclDecls.h	/^#define Tcl_NewBooleanObj(/;"	d
Tcl_NewByteArrayObj	generic/tcl.h	/^#  define Tcl_NewByteArrayObj(/;"	d
Tcl_NewByteArrayObj	generic/tclBinary.c	/^Tcl_NewByteArrayObj($/;"	f	typeref:typename:Tcl_Obj *
Tcl_NewByteArrayObj	generic/tclDecls.h	/^#define Tcl_NewByteArrayObj /;"	d
Tcl_NewDictObj	generic/tclDecls.h	/^#define Tcl_NewDictObj /;"	d
Tcl_NewDictObj	generic/tclDictObj.c	/^Tcl_NewDictObj(void)$/;"	f	typeref:typename:Tcl_Obj *
Tcl_NewDoubleObj	generic/tcl.h	/^#  define Tcl_NewDoubleObj(/;"	d
Tcl_NewDoubleObj	generic/tclDecls.h	/^#define Tcl_NewDoubleObj /;"	d
Tcl_NewDoubleObj	generic/tclObj.c	/^Tcl_NewDoubleObj($/;"	f	typeref:typename:Tcl_Obj *
Tcl_NewInstanceMethod	generic/tclOODecls.h	/^#define Tcl_NewInstanceMethod /;"	d
Tcl_NewInstanceMethod	generic/tclOOMethod.c	/^Tcl_NewInstanceMethod($/;"	f	typeref:typename:Tcl_Method
Tcl_NewInstanceMethod2	generic/tclOODecls.h	/^#define Tcl_NewInstanceMethod2 /;"	d
Tcl_NewInstanceMethod2	generic/tclOOMethod.c	/^Tcl_NewInstanceMethod2($/;"	f	typeref:typename:Tcl_Method
Tcl_NewIntObj	generic/tclDecls.h	/^#define Tcl_NewIntObj(/;"	d
Tcl_NewListObj	generic/tcl.h	/^#  define Tcl_NewListObj(/;"	d
Tcl_NewListObj	generic/tclDecls.h	/^#define Tcl_NewListObj /;"	d
Tcl_NewListObj	generic/tclListObj.c	/^Tcl_NewListObj($/;"	f	typeref:typename:Tcl_Obj *
Tcl_NewLongObj	generic/tclDecls.h	/^#define Tcl_NewLongObj(/;"	d
Tcl_NewMethod	generic/tclOODecls.h	/^#define Tcl_NewMethod /;"	d
Tcl_NewMethod	generic/tclOOMethod.c	/^Tcl_NewMethod($/;"	f	typeref:typename:Tcl_Method
Tcl_NewMethod2	generic/tclOODecls.h	/^#define Tcl_NewMethod2 /;"	d
Tcl_NewMethod2	generic/tclOOMethod.c	/^Tcl_NewMethod2($/;"	f	typeref:typename:Tcl_Method
Tcl_NewObj	generic/tcl.h	/^#  define Tcl_NewObj(/;"	d
Tcl_NewObj	generic/tclDecls.h	/^#define Tcl_NewObj /;"	d
Tcl_NewObj	generic/tclObj.c	/^Tcl_NewObj(void)$/;"	f	typeref:typename:Tcl_Obj *
Tcl_NewObjInterface	generic/tclDecls.h	/^#define Tcl_NewObjInterface /;"	d
Tcl_NewObjInterface	generic/tclObjInterface.c	/^Tcl_NewObjInterface() {$/;"	f	typeref:typename:Tcl_ObjInterface *
Tcl_NewObjType	generic/tclDecls.h	/^#define Tcl_NewObjType /;"	d
Tcl_NewObjType	generic/tclObjInterface.c	/^Tcl_NewObjType($/;"	f	typeref:typename:Tcl_ObjType *
Tcl_NewObjectInstance	generic/tclOO.c	/^Tcl_NewObjectInstance($/;"	f	typeref:typename:Tcl_Object
Tcl_NewObjectInstance	generic/tclOODecls.h	/^#define Tcl_NewObjectInstance /;"	d
Tcl_NewStringObj	generic/tcl.h	/^#  define Tcl_NewStringObj(/;"	d
Tcl_NewStringObj	generic/tclDecls.h	/^#define Tcl_NewStringObj /;"	d
Tcl_NewStringObj	generic/tclStringObj.c	/^Tcl_NewStringObj($/;"	f	typeref:typename:Tcl_Obj *
Tcl_NewUnicodeObj	generic/tclDecls.h	/^#define Tcl_NewUnicodeObj /;"	d
Tcl_NewUnicodeObj	generic/tclStringObj.c	/^Tcl_NewUnicodeObj($/;"	f	typeref:typename:Tcl_Obj *
Tcl_NewWideIntObj	generic/tcl.h	/^#  define Tcl_NewWideIntObj(/;"	d
Tcl_NewWideIntObj	generic/tclDecls.h	/^#define Tcl_NewWideIntObj /;"	d
Tcl_NewWideIntObj	generic/tclObj.c	/^Tcl_NewWideIntObj($/;"	f	typeref:typename:Tcl_Obj *
Tcl_NewWideUIntObj	generic/tclDecls.h	/^#define Tcl_NewWideUIntObj /;"	d
Tcl_NewWideUIntObj	generic/tclObj.c	/^Tcl_NewWideUIntObj($/;"	f	typeref:typename:Tcl_Obj *
Tcl_NextHashEntry	generic/tclDecls.h	/^#define Tcl_NextHashEntry /;"	d
Tcl_NextHashEntry	generic/tclHash.c	/^Tcl_NextHashEntry($/;"	f	typeref:typename:Tcl_HashEntry *
Tcl_NotifierProcs	generic/tcl.h	/^typedef struct Tcl_NotifierProcs {$/;"	s
Tcl_NotifierProcs	generic/tcl.h	/^} Tcl_NotifierProcs;$/;"	t	typeref:struct:Tcl_NotifierProcs
Tcl_NotifyChannel	generic/tclDecls.h	/^#define Tcl_NotifyChannel /;"	d
Tcl_NotifyChannel	generic/tclIO.c	/^Tcl_NotifyChannel($/;"	f	typeref:typename:void
Tcl_NumUtfChars	generic/tclDecls.h	/^#define Tcl_NumUtfChars /;"	d
Tcl_NumUtfChars	generic/tclUtf.c	/^Tcl_NumUtfChars($/;"	f	typeref:typename:Tcl_Size
Tcl_OOInitStubs	doc/OOInitStubs.3	/^.TH Tcl_OOInitStubs 3 1.0 TclOO "TclOO Library Functions"$/;"	t
Tcl_OOInitStubs	generic/tclOO.h	/^#define Tcl_OOInitStubs(/;"	d
Tcl_Obj	doc/Object.3	/^.TH Tcl_Obj 3 8.5 Tcl "Tcl Library Procedures"$/;"	t
Tcl_Obj	generic/tcl.h	/^struct Tcl_Obj {$/;"	s
Tcl_Obj	generic/tcl.h	/^typedef struct Tcl_Obj Tcl_Obj;$/;"	t	typeref:struct:Tcl_Obj
Tcl_Obj	generic/tclDTrace.d	/^struct Tcl_Obj {$/;"	s	file:
Tcl_Obj	generic/tclDTrace.d	/^typedef struct Tcl_Obj Tcl_Obj;$/;"	a	typeref:struct:Tcl_Obj	file:
Tcl_ObjCmdProc	generic/tcl.h	/^typedef int (Tcl_ObjCmdProc) (void *clientData, Tcl_Interp *interp,$/;"	t	typeref:typename:int ()(void * clientData,Tcl_Interp * interp,int objc,struct Tcl_Obj * const * objv)
Tcl_ObjCmdProc2	generic/tcl.h	/^typedef int (Tcl_ObjCmdProc2) (void *clientData, Tcl_Interp *interp,$/;"	t	typeref:typename:int ()(void * clientData,Tcl_Interp * interp,Tcl_Size objc,struct Tcl_Obj * const * objv)
Tcl_ObjGetVar2	generic/tclDecls.h	/^#define Tcl_ObjGetVar2 /;"	d
Tcl_ObjGetVar2	generic/tclVar.c	/^Tcl_ObjGetVar2($/;"	f	typeref:typename:Tcl_Obj *
Tcl_ObjInterface	generic/tcl.h	/^typedef struct Tcl_ObjInterface Tcl_ObjInterface;$/;"	t	typeref:struct:Tcl_ObjInterface
Tcl_ObjInterfaceListAllProc	generic/tcl.h	/^typedef int (Tcl_ObjInterfaceListAllProc)(tclObjTypeInterfaceArgsListAll);$/;"	t	typeref:typename:int ()(tclObjTypeInterfaceArgsListAll)
Tcl_ObjInterfaceListAppendProc	generic/tcl.h	/^typedef int (Tcl_ObjInterfaceListAppendProc)(tclObjTypeInterfaceArgsListAppend);$/;"	t	typeref:typename:int ()(tclObjTypeInterfaceArgsListAppend)
Tcl_ObjInterfaceListAppendlistProc	generic/tcl.h	/^typedef int (Tcl_ObjInterfaceListAppendlistProc)(tclObjTypeInterfaceArgsListAppendList);$/;"	t	typeref:typename:int ()(tclObjTypeInterfaceArgsListAppendList)
Tcl_ObjInterfaceListContainsProc	generic/tcl.h	/^typedef int (Tcl_ObjInterfaceListContainsProc)(tclObjTypeInterfaceArgsListContains);$/;"	t	typeref:typename:int ()(tclObjTypeInterfaceArgsListContains)
Tcl_ObjInterfaceListIndexEndProc	generic/tcl.h	/^typedef int (Tcl_ObjInterfaceListIndexEndProc)(tclObjTypeInterfaceArgsListIndexEnd);$/;"	t	typeref:typename:int ()(tclObjTypeInterfaceArgsListIndexEnd)
Tcl_ObjInterfaceListIndexProc	generic/tcl.h	/^typedef int (Tcl_ObjInterfaceListIndexProc)(tclObjTypeInterfaceArgsListIndex);$/;"	t	typeref:typename:int ()(tclObjTypeInterfaceArgsListIndex)
Tcl_ObjInterfaceListIsSortedProc	generic/tcl.h	/^typedef int (Tcl_ObjInterfaceListIsSortedProc)(tclObjTypeInterfaceArgsListIsSorted);$/;"	t	typeref:typename:int ()(tclObjTypeInterfaceArgsListIsSorted)
Tcl_ObjInterfaceListLengthProc	generic/tcl.h	/^typedef int (Tcl_ObjInterfaceListLengthProc)(tclObjTypeInterfaceArgsListLength);$/;"	t	typeref:typename:int ()(tclObjTypeInterfaceArgsListLength)
Tcl_ObjInterfaceListRangeEndProc	generic/tcl.h	/^typedef int (Tcl_ObjInterfaceListRangeEndProc)(tclObjTypeInterfaceArgsListRangeEnd);$/;"	t	typeref:typename:int ()(tclObjTypeInterfaceArgsListRangeEnd)
Tcl_ObjInterfaceListRangeProc	generic/tcl.h	/^typedef int (Tcl_ObjInterfaceListRangeProc)(tclObjTypeInterfaceArgsListRange);$/;"	t	typeref:typename:int ()(tclObjTypeInterfaceArgsListRange)
Tcl_ObjInterfaceListReplaceListProc	generic/tcl.h	/^typedef int (Tcl_ObjInterfaceListReplaceListProc)(tclObjTypeInterfaceArgsListReplaceList);$/;"	t	typeref:typename:int ()(tclObjTypeInterfaceArgsListReplaceList)
Tcl_ObjInterfaceListReplaceProc	generic/tcl.h	/^typedef int (Tcl_ObjInterfaceListReplaceProc)(tclObjTypeInterfaceArgsListReplace);$/;"	t	typeref:typename:int ()(tclObjTypeInterfaceArgsListReplace)
Tcl_ObjInterfaceListReverseProc	generic/tcl.h	/^typedef int (Tcl_ObjInterfaceListReverseProc)(tclObjTypeInterfaceArgsListReverse);$/;"	t	typeref:typename:int ()(tclObjTypeInterfaceArgsListReverse)
Tcl_ObjInterfaceListSetDeepProc	generic/tcl.h	/^typedef int (Tcl_ObjInterfaceListSetDeepProc)(tclObjTypeInterfaceArgsListSetDeep);$/;"	t	typeref:typename:int ()(tclObjTypeInterfaceArgsListSetDeep)
Tcl_ObjInterfaceListSetProc	generic/tcl.h	/^typedef int (Tcl_ObjInterfaceListSetProc)(tclObjTypeInterfaceArgsListSet);$/;"	t	typeref:typename:int ()(tclObjTypeInterfaceArgsListSet)
Tcl_ObjInterfaceSetFnListAll	generic/tclDecls.h	/^#define Tcl_ObjInterfaceSetFnListAll /;"	d
Tcl_ObjInterfaceSetFnListAll	generic/tclObjInterface.c	/^Tcl_ObjInterfaceSetFnListAll($/;"	f	typeref:typename:int
Tcl_ObjInterfaceSetFnListAppend	generic/tclDecls.h	/^#define Tcl_ObjInterfaceSetFnListAppend /;"	d
Tcl_ObjInterfaceSetFnListAppend	generic/tclObjInterface.c	/^Tcl_ObjInterfaceSetFnListAppend($/;"	f	typeref:typename:int
Tcl_ObjInterfaceSetFnListAppendList	generic/tclDecls.h	/^#define Tcl_ObjInterfaceSetFnListAppendList /;"	d
Tcl_ObjInterfaceSetFnListAppendList	generic/tclObjInterface.c	/^Tcl_ObjInterfaceSetFnListAppendList($/;"	f	typeref:typename:int
Tcl_ObjInterfaceSetFnListContains	generic/tclDecls.h	/^#define Tcl_ObjInterfaceSetFnListContains /;"	d
Tcl_ObjInterfaceSetFnListContains	generic/tclObjInterface.c	/^Tcl_ObjInterfaceSetFnListContains($/;"	f	typeref:typename:int
Tcl_ObjInterfaceSetFnListIndex	generic/tclDecls.h	/^#define Tcl_ObjInterfaceSetFnListIndex /;"	d
Tcl_ObjInterfaceSetFnListIndex	generic/tclObjInterface.c	/^Tcl_ObjInterfaceSetFnListIndex($/;"	f	typeref:typename:int
Tcl_ObjInterfaceSetFnListIndexEnd	generic/tclDecls.h	/^#define Tcl_ObjInterfaceSetFnListIndexEnd /;"	d
Tcl_ObjInterfaceSetFnListIndexEnd	generic/tclObjInterface.c	/^Tcl_ObjInterfaceSetFnListIndexEnd($/;"	f	typeref:typename:int
Tcl_ObjInterfaceSetFnListIsSorted	generic/tclDecls.h	/^#define Tcl_ObjInterfaceSetFnListIsSorted /;"	d
Tcl_ObjInterfaceSetFnListIsSorted	generic/tclObjInterface.c	/^Tcl_ObjInterfaceSetFnListIsSorted($/;"	f	typeref:typename:int
Tcl_ObjInterfaceSetFnListLength	generic/tclDecls.h	/^#define Tcl_ObjInterfaceSetFnListLength /;"	d
Tcl_ObjInterfaceSetFnListLength	generic/tclObjInterface.c	/^Tcl_ObjInterfaceSetFnListLength($/;"	f	typeref:typename:int
Tcl_ObjInterfaceSetFnListRange	generic/tclDecls.h	/^#define Tcl_ObjInterfaceSetFnListRange /;"	d
Tcl_ObjInterfaceSetFnListRange	generic/tclObjInterface.c	/^Tcl_ObjInterfaceSetFnListRange($/;"	f	typeref:typename:int
Tcl_ObjInterfaceSetFnListRangeEnd	generic/tclDecls.h	/^#define Tcl_ObjInterfaceSetFnListRangeEnd /;"	d
Tcl_ObjInterfaceSetFnListRangeEnd	generic/tclObjInterface.c	/^Tcl_ObjInterfaceSetFnListRangeEnd($/;"	f	typeref:typename:int
Tcl_ObjInterfaceSetFnListReplace	generic/tclDecls.h	/^#define Tcl_ObjInterfaceSetFnListReplace /;"	d
Tcl_ObjInterfaceSetFnListReplace	generic/tclObjInterface.c	/^Tcl_ObjInterfaceSetFnListReplace($/;"	f	typeref:typename:int
Tcl_ObjInterfaceSetFnListReplaceList	generic/tclDecls.h	/^#define Tcl_ObjInterfaceSetFnListReplaceList /;"	d
Tcl_ObjInterfaceSetFnListReplaceList	generic/tclObjInterface.c	/^int Tcl_ObjInterfaceSetFnListReplaceList($/;"	f	typeref:typename:int
Tcl_ObjInterfaceSetFnListReverse	generic/tclDecls.h	/^#define Tcl_ObjInterfaceSetFnListReverse /;"	d
Tcl_ObjInterfaceSetFnListReverse	generic/tclObjInterface.c	/^Tcl_ObjInterfaceSetFnListReverse($/;"	f	typeref:typename:int
Tcl_ObjInterfaceSetFnListSet	generic/tclDecls.h	/^#define Tcl_ObjInterfaceSetFnListSet /;"	d
Tcl_ObjInterfaceSetFnListSet	generic/tclObjInterface.c	/^Tcl_ObjInterfaceSetFnListSet($/;"	f	typeref:typename:int
Tcl_ObjInterfaceSetFnListSetDeep	generic/tclDecls.h	/^#define Tcl_ObjInterfaceSetFnListSetDeep /;"	d
Tcl_ObjInterfaceSetFnListSetDeep	generic/tclObjInterface.c	/^Tcl_ObjInterfaceSetFnListSetDeep($/;"	f	typeref:typename:int
Tcl_ObjInterfaceSetFnStringIndex	generic/tclDecls.h	/^#define Tcl_ObjInterfaceSetFnStringIndex /;"	d
Tcl_ObjInterfaceSetFnStringIndex	generic/tclObjInterface.c	/^Tcl_ObjInterfaceSetFnStringIndex($/;"	f	typeref:typename:int
Tcl_ObjInterfaceSetFnStringIndexEnd	generic/tclDecls.h	/^#define Tcl_ObjInterfaceSetFnStringIndexEnd /;"	d
Tcl_ObjInterfaceSetFnStringIndexEnd	generic/tclObjInterface.c	/^Tcl_ObjInterfaceSetFnStringIndexEnd($/;"	f	typeref:typename:int
Tcl_ObjInterfaceSetFnStringIsEmpty	generic/tclDecls.h	/^#define Tcl_ObjInterfaceSetFnStringIsEmpty /;"	d
Tcl_ObjInterfaceSetFnStringIsEmpty	generic/tclObjInterface.c	/^Tcl_ObjInterfaceSetFnStringIsEmpty($/;"	f	typeref:typename:int
Tcl_ObjInterfaceSetFnStringLength	generic/tclDecls.h	/^#define Tcl_ObjInterfaceSetFnStringLength /;"	d
Tcl_ObjInterfaceSetFnStringLength	generic/tclObjInterface.c	/^Tcl_ObjInterfaceSetFnStringLength($/;"	f	typeref:typename:int
Tcl_ObjInterfaceSetFnStringRange	generic/tclDecls.h	/^#define Tcl_ObjInterfaceSetFnStringRange /;"	d
Tcl_ObjInterfaceSetFnStringRange	generic/tclObjInterface.c	/^Tcl_ObjInterfaceSetFnStringRange($/;"	f	typeref:typename:int
Tcl_ObjInterfaceSetFnStringRangeEnd	generic/tclDecls.h	/^#define Tcl_ObjInterfaceSetFnStringRangeEnd /;"	d
Tcl_ObjInterfaceSetFnStringRangeEnd	generic/tclObjInterface.c	/^Tcl_ObjInterfaceSetFnStringRangeEnd($/;"	f	typeref:typename:int
Tcl_ObjInterfaceSetVersion	generic/tclDecls.h	/^#define Tcl_ObjInterfaceSetVersion /;"	d
Tcl_ObjInterfaceSetVersion	generic/tclObjInterface.c	/^Tcl_ObjInterfaceSetVersion($/;"	f	typeref:typename:int
Tcl_ObjInterfaceStringIndexEndProc	generic/tcl.h	/^typedef int (Tcl_ObjInterfaceStringIndexEndProc)(tclObjTypeInterfaceArgsStringIndexEnd);$/;"	t	typeref:typename:int ()(tclObjTypeInterfaceArgsStringIndexEnd)
Tcl_ObjInterfaceStringIndexProc	generic/tcl.h	/^typedef int (Tcl_ObjInterfaceStringIndexProc)(tclObjTypeInterfaceArgsStringIndex);$/;"	t	typeref:typename:int ()(tclObjTypeInterfaceArgsStringIndex)
Tcl_ObjInterfaceStringIsEmptyProc	generic/tcl.h	/^typedef int (Tcl_ObjInterfaceStringIsEmptyProc)(tclObjTypeInterfaceArgsStringIsEmpty);$/;"	t	typeref:typename:int ()(tclObjTypeInterfaceArgsStringIsEmpty)
Tcl_ObjInterfaceStringLengthProc	generic/tcl.h	/^typedef int (Tcl_ObjInterfaceStringLengthProc)(tclObjTypeInterfaceArgsStringLength);$/;"	t	typeref:typename:int ()(tclObjTypeInterfaceArgsStringLength)
Tcl_ObjInterfaceStringRangeEndProc	generic/tcl.h	/^typedef int (Tcl_ObjInterfaceStringRangeEndProc)(tclObjTypeInterfaceArgsStringRangeEnd);$/;"	t	typeref:typename:int ()(tclObjTypeInterfaceArgsStringRangeEnd)
Tcl_ObjInterfaceStringRangeProc	generic/tcl.h	/^typedef int (Tcl_ObjInterfaceStringRangeProc)(tclObjTypeInterfaceArgsStringRange);$/;"	t	typeref:typename:int ()(tclObjTypeInterfaceArgsStringRange)
Tcl_ObjInternalRep	generic/tcl.h	/^typedef union Tcl_ObjInternalRep {	\/* The internal representation: *\/$/;"	u
Tcl_ObjInternalRep	generic/tcl.h	/^} Tcl_ObjInternalRep;$/;"	t	typeref:union:Tcl_ObjInternalRep
Tcl_ObjPrintf	generic/tclDecls.h	/^#define Tcl_ObjPrintf /;"	d
Tcl_ObjPrintf	generic/tclStringObj.c	/^Tcl_ObjPrintf($/;"	f	typeref:typename:Tcl_Obj *
Tcl_ObjSetVar2	generic/tclDecls.h	/^#define Tcl_ObjSetVar2 /;"	d
Tcl_ObjSetVar2	generic/tclVar.c	/^Tcl_ObjSetVar2($/;"	f	typeref:typename:Tcl_Obj *
Tcl_ObjType	doc/ObjectType.3	/^.TH Tcl_ObjType 3 9.0 Tcl "Tcl Library Procedures"$/;"	t
Tcl_ObjType	generic/tcl.h	/^typedef struct Tcl_ObjType {$/;"	s
Tcl_ObjType	generic/tcl.h	/^} Tcl_ObjType;$/;"	t	typeref:struct:Tcl_ObjType
Tcl_ObjType	generic/tclDTrace.d	/^typedef struct Tcl_ObjType {$/;"	s	file:
Tcl_ObjTypeSetDupInternalRepProc	generic/tclDecls.h	/^#define Tcl_ObjTypeSetDupInternalRepProc /;"	d
Tcl_ObjTypeSetDupInternalRepProc	generic/tclObjInterface.c	/^Tcl_ObjTypeSetDupInternalRepProc($/;"	f	typeref:typename:int
Tcl_ObjTypeSetFreeInternalRepProc	generic/tclDecls.h	/^#define Tcl_ObjTypeSetFreeInternalRepProc /;"	d
Tcl_ObjTypeSetFreeInternalRepProc	generic/tclObjInterface.c	/^Tcl_ObjTypeSetFreeInternalRepProc($/;"	f	typeref:typename:int
Tcl_ObjTypeSetInterface	generic/tclDecls.h	/^#define Tcl_ObjTypeSetInterface /;"	d
Tcl_ObjTypeSetInterface	generic/tclObjInterface.c	/^Tcl_ObjTypeSetInterface($/;"	f	typeref:typename:int
Tcl_ObjTypeSetName	generic/tclDecls.h	/^#define Tcl_ObjTypeSetName /;"	d
Tcl_ObjTypeSetName	generic/tclObjInterface.c	/^Tcl_ObjTypeSetName($/;"	f	typeref:typename:int
Tcl_ObjTypeSetSetFromAnyProc	generic/tclDecls.h	/^#define Tcl_ObjTypeSetSetFromAnyProc /;"	d
Tcl_ObjTypeSetSetFromAnyProc	generic/tclObjInterface.c	/^Tcl_ObjTypeSetSetFromAnyProc($/;"	f	typeref:typename:int
Tcl_ObjTypeSetUpdateStringProc	generic/tclDecls.h	/^#define Tcl_ObjTypeSetUpdateStringProc /;"	d
Tcl_ObjTypeSetUpdateStringProc	generic/tclObjInterface.c	/^Tcl_ObjTypeSetUpdateStringProc($/;"	f	typeref:typename:int
Tcl_ObjTypeSetVersion	generic/tclDecls.h	/^#define Tcl_ObjTypeSetVersion /;"	d
Tcl_ObjTypeSetVersion	generic/tclObjInterface.c	/^Tcl_ObjTypeSetVersion($/;"	f	typeref:typename:int
Tcl_ObjTypeVersion	generic/tclObj.c	/^void Tcl_ObjTypeVersion(Tcl_Obj *objPtr, int *version) {$/;"	f	typeref:typename:void
Tcl_Object	generic/tclOO.h	/^typedef struct Tcl_Object_ *Tcl_Object;$/;"	t	typeref:struct:Tcl_Object_ *
Tcl_ObjectContext	generic/tclOO.h	/^typedef struct Tcl_ObjectContext_ *Tcl_ObjectContext;$/;"	t	typeref:struct:Tcl_ObjectContext_ *
Tcl_ObjectContextInvokeNext	generic/tclOO.c	/^Tcl_ObjectContextInvokeNext($/;"	f	typeref:typename:int
Tcl_ObjectContextInvokeNext	generic/tclOODecls.h	/^#define Tcl_ObjectContextInvokeNext /;"	d
Tcl_ObjectContextIsFiltering	generic/tclOO.c	/^Tcl_ObjectContextIsFiltering($/;"	f	typeref:typename:int
Tcl_ObjectContextIsFiltering	generic/tclOODecls.h	/^#define Tcl_ObjectContextIsFiltering /;"	d
Tcl_ObjectContextMethod	generic/tclOO.c	/^Tcl_ObjectContextMethod($/;"	f	typeref:typename:Tcl_Method
Tcl_ObjectContextMethod	generic/tclOODecls.h	/^#define Tcl_ObjectContextMethod /;"	d
Tcl_ObjectContextObject	generic/tclOO.c	/^Tcl_ObjectContextObject($/;"	f	typeref:typename:Tcl_Object
Tcl_ObjectContextObject	generic/tclOODecls.h	/^#define Tcl_ObjectContextObject /;"	d
Tcl_ObjectContextSkippedArgs	generic/tclOO.c	/^Tcl_ObjectContextSkippedArgs($/;"	f	typeref:typename:Tcl_Size
Tcl_ObjectContextSkippedArgs	generic/tclOODecls.h	/^#define Tcl_ObjectContextSkippedArgs /;"	d
Tcl_ObjectDeleted	generic/tclOO.c	/^Tcl_ObjectDeleted($/;"	f	typeref:typename:int
Tcl_ObjectDeleted	generic/tclOODecls.h	/^#define Tcl_ObjectDeleted /;"	d
Tcl_ObjectGetMetadata	generic/tclOO.c	/^Tcl_ObjectGetMetadata($/;"	f	typeref:typename:void *
Tcl_ObjectGetMetadata	generic/tclOODecls.h	/^#define Tcl_ObjectGetMetadata /;"	d
Tcl_ObjectGetMethodNameMapper	generic/tclOO.c	/^Tcl_ObjectGetMethodNameMapper($/;"	f	typeref:typename:Tcl_ObjectMapMethodNameProc *
Tcl_ObjectGetMethodNameMapper	generic/tclOODecls.h	/^#define Tcl_ObjectGetMethodNameMapper /;"	d
Tcl_ObjectMapMethodNameProc	generic/tclOO.h	/^typedef int (Tcl_ObjectMapMethodNameProc)(Tcl_Interp *interp,$/;"	t	typeref:typename:int ()(Tcl_Interp * interp,Tcl_Object object,Tcl_Class * startClsPtr,Tcl_Obj * methodNameObj)
Tcl_ObjectMetadataDeleteProc	generic/tclOO.h	/^typedef void (Tcl_ObjectMetadataDeleteProc)(void *clientData);$/;"	t	typeref:typename:void ()(void * clientData)
Tcl_ObjectMetadataType	generic/tclOO.h	/^typedef struct Tcl_ObjectMetadataType {$/;"	s
Tcl_ObjectMetadataType	generic/tclOO.h	/^} Tcl_ObjectMetadataType;$/;"	t	typeref:struct:Tcl_ObjectMetadataType
Tcl_ObjectSetMetadata	generic/tclOO.c	/^Tcl_ObjectSetMetadata($/;"	f	typeref:typename:void
Tcl_ObjectSetMetadata	generic/tclOODecls.h	/^#define Tcl_ObjectSetMetadata /;"	d
Tcl_ObjectSetMethodNameMapper	generic/tclOO.c	/^Tcl_ObjectSetMethodNameMapper($/;"	f	typeref:typename:void
Tcl_ObjectSetMethodNameMapper	generic/tclOODecls.h	/^#define Tcl_ObjectSetMethodNameMapper /;"	d
Tcl_OldStat_	generic/tcl.h	/^typedef struct stat *Tcl_OldStat_;$/;"	t	typeref:struct:stat *
Tcl_OpenCommandChannel	generic/tclDecls.h	/^#define Tcl_OpenCommandChannel /;"	d
Tcl_OpenCommandChannel	generic/tclPipe.c	/^Tcl_OpenCommandChannel($/;"	f	typeref:typename:Tcl_Channel
Tcl_OpenFileChannel	doc/OpenFileChnl.3	/^.TH Tcl_OpenFileChannel 3 8.3 Tcl "Tcl Library Procedures"$/;"	t
Tcl_OpenFileChannel	generic/tclDecls.h	/^#define Tcl_OpenFileChannel /;"	d
Tcl_OpenFileChannel	generic/tclIOUtil.c	/^Tcl_OpenFileChannel($/;"	f	typeref:typename:Tcl_Channel
Tcl_OpenObjCmd	generic/tclIOCmd.c	/^Tcl_OpenObjCmd($/;"	f	typeref:typename:int
Tcl_OpenObjCmd	generic/tclInt.h	/^MODULE_SCOPE Tcl_ObjCmdProc Tcl_OpenObjCmd;$/;"	v	typeref:typename:MODULE_SCOPE Tcl_ObjCmdProc
Tcl_OpenTcpClient	doc/OpenTcp.3	/^.TH Tcl_OpenTcpClient 3 8.7 Tcl "Tcl Library Procedures"$/;"	t
Tcl_OpenTcpClient	generic/tclDecls.h	/^#define Tcl_OpenTcpClient /;"	d
Tcl_OpenTcpClient	unix/tclUnixSock.c	/^Tcl_OpenTcpClient($/;"	f	typeref:typename:Tcl_Channel
Tcl_OpenTcpClient	win/tclWinSock.c	/^Tcl_OpenTcpClient($/;"	f	typeref:typename:Tcl_Channel
Tcl_OpenTcpServer	generic/tclDecls.h	/^#define Tcl_OpenTcpServer /;"	d
Tcl_OpenTcpServer	generic/tclIOSock.c	/^Tcl_OpenTcpServer($/;"	f	typeref:typename:Tcl_Channel
Tcl_OpenTcpServerEx	generic/tclDecls.h	/^#define Tcl_OpenTcpServerEx /;"	d
Tcl_OpenTcpServerEx	unix/tclUnixSock.c	/^Tcl_OpenTcpServerEx($/;"	f	typeref:typename:Tcl_Channel
Tcl_OpenTcpServerEx	win/tclWinSock.c	/^Tcl_OpenTcpServerEx($/;"	f	typeref:typename:Tcl_Channel
Tcl_OutputBuffered	generic/tclDecls.h	/^#define Tcl_OutputBuffered /;"	d
Tcl_OutputBuffered	generic/tclIO.c	/^Tcl_OutputBuffered($/;"	f	typeref:typename:int
Tcl_PackageObjCmd	generic/tclInt.h	/^MODULE_SCOPE Tcl_ObjCmdProc Tcl_PackageObjCmd;$/;"	v	typeref:typename:MODULE_SCOPE Tcl_ObjCmdProc
Tcl_PackageObjCmd	generic/tclPkg.c	/^Tcl_PackageObjCmd($/;"	f	typeref:typename:int
Tcl_Panic	doc/Panic.3	/^.TH Tcl_Panic 3 8.4 Tcl "Tcl Library Procedures"$/;"	t
Tcl_Panic	generic/tclDecls.h	/^#define Tcl_Panic /;"	d
Tcl_Panic	generic/tclPanic.c	/^Tcl_Panic($/;"	f	typeref:typename:TCL_NORETURN void
Tcl_PanicProc	generic/tcl.h	/^typedef void (Tcl_PanicProc) (const char *format, ...);$/;"	t	typeref:typename:void ()(const char * format,...)
Tcl_Parse	generic/tcl.h	/^typedef struct Tcl_Parse {$/;"	s
Tcl_Parse	generic/tcl.h	/^} Tcl_Parse;$/;"	t	typeref:struct:Tcl_Parse
Tcl_ParseArgsObjv	doc/ParseArgs.3	/^.TH Tcl_ParseArgsObjv 3 8.6 Tcl "Tcl Library Procedures"$/;"	t
Tcl_ParseArgsObjv	generic/tclDecls.h	/^#define Tcl_ParseArgsObjv /;"	d
Tcl_ParseArgsObjv	generic/tclIndexObj.c	/^Tcl_ParseArgsObjv($/;"	f	typeref:typename:int
Tcl_ParseBraces	generic/tclDecls.h	/^#define Tcl_ParseBraces /;"	d
Tcl_ParseBraces	generic/tclParse.c	/^Tcl_ParseBraces($/;"	f	typeref:typename:int
Tcl_ParseCommand	doc/ParseCmd.3	/^.TH Tcl_ParseCommand 3 8.3 Tcl "Tcl Library Procedures"$/;"	t
Tcl_ParseCommand	generic/tclDecls.h	/^#define Tcl_ParseCommand /;"	d
Tcl_ParseCommand	generic/tclParse.c	/^Tcl_ParseCommand($/;"	f	typeref:typename:int
Tcl_ParseExpr	generic/tclCompExpr.c	/^Tcl_ParseExpr($/;"	f	typeref:typename:int
Tcl_ParseExpr	generic/tclDecls.h	/^#define Tcl_ParseExpr /;"	d
Tcl_ParseQuotedString	generic/tclDecls.h	/^#define Tcl_ParseQuotedString /;"	d
Tcl_ParseQuotedString	generic/tclParse.c	/^Tcl_ParseQuotedString($/;"	f	typeref:typename:int
Tcl_ParseVar	generic/tclDecls.h	/^#define Tcl_ParseVar /;"	d
Tcl_ParseVar	generic/tclParse.c	/^Tcl_ParseVar($/;"	f	typeref:typename:const char *
Tcl_ParseVarName	generic/tclDecls.h	/^#define Tcl_ParseVarName /;"	d
Tcl_ParseVarName	generic/tclParse.c	/^Tcl_ParseVarName($/;"	f	typeref:typename:int
Tcl_PathPart	generic/tclInt.h	/^typedef enum Tcl_PathPart {$/;"	g
Tcl_PathPart	generic/tclInt.h	/^} Tcl_PathPart;$/;"	t	typeref:enum:Tcl_PathPart
Tcl_PathType	generic/tcl.h	/^typedef enum Tcl_PathType {$/;"	g
Tcl_PathType	generic/tcl.h	/^} Tcl_PathType;$/;"	t	typeref:enum:Tcl_PathType
Tcl_Pid	generic/tcl.h	/^typedef struct Tcl_Pid_ *Tcl_Pid;$/;"	t	typeref:struct:Tcl_Pid_ *
Tcl_PidObjCmd	generic/tclInt.h	/^MODULE_SCOPE Tcl_ObjCmdProc Tcl_PidObjCmd;$/;"	v	typeref:typename:MODULE_SCOPE Tcl_ObjCmdProc
Tcl_PidObjCmd	unix/tclUnixPipe.c	/^Tcl_PidObjCmd($/;"	f	typeref:typename:int
Tcl_PidObjCmd	win/tclWinPipe.c	/^Tcl_PidObjCmd($/;"	f	typeref:typename:int
Tcl_PkgInitStubsCheck	generic/tclPkg.c	/^Tcl_PkgInitStubsCheck($/;"	f	typeref:typename:const char *
Tcl_PkgPresent	generic/tclDecls.h	/^#define Tcl_PkgPresent(/;"	d
Tcl_PkgPresent	generic/tclPkg.c	/^Tcl_PkgPresent($/;"	f	typeref:typename:const char *
Tcl_PkgPresentEx	generic/tclDecls.h	/^#define Tcl_PkgPresentEx /;"	d
Tcl_PkgPresentEx	generic/tclPkg.c	/^Tcl_PkgPresentEx($/;"	f	typeref:typename:const char *
Tcl_PkgProvide	generic/tclDecls.h	/^#define Tcl_PkgProvide(/;"	d
Tcl_PkgProvide	generic/tclPkg.c	/^Tcl_PkgProvide($/;"	f	typeref:typename:int
Tcl_PkgProvideEx	generic/tclDecls.h	/^#define Tcl_PkgProvideEx /;"	d
Tcl_PkgProvideEx	generic/tclPkg.c	/^Tcl_PkgProvideEx($/;"	f	typeref:typename:int
Tcl_PkgRequire	doc/PkgRequire.3	/^.TH Tcl_PkgRequire 3 7.5 Tcl "Tcl Library Procedures"$/;"	t
Tcl_PkgRequire	generic/tclDecls.h	/^#define Tcl_PkgRequire(/;"	d
Tcl_PkgRequire	generic/tclPkg.c	/^Tcl_PkgRequire($/;"	f	typeref:typename:const char *
Tcl_PkgRequireEx	generic/tclDecls.h	/^#define Tcl_PkgRequireEx /;"	d
Tcl_PkgRequireEx	generic/tclPkg.c	/^Tcl_PkgRequireEx($/;"	f	typeref:typename:const char *
Tcl_PkgRequireProc	generic/tclDecls.h	/^#define Tcl_PkgRequireProc /;"	d
Tcl_PkgRequireProc	generic/tclPkg.c	/^Tcl_PkgRequireProc($/;"	f	typeref:typename:int
Tcl_PopCallFrame	generic/tclIntDecls.h	/^#define Tcl_PopCallFrame /;"	d
Tcl_PopCallFrame	generic/tclNamesp.c	/^Tcl_PopCallFrame($/;"	f	typeref:typename:void
Tcl_PosixError	generic/tclDecls.h	/^#define Tcl_PosixError /;"	d
Tcl_PosixError	generic/tclIOUtil.c	/^Tcl_PosixError($/;"	f	typeref:typename:const char *
Tcl_Preserve	doc/Preserve.3	/^.TH Tcl_Preserve 3 7.5 Tcl "Tcl Library Procedures"$/;"	t
Tcl_Preserve	generic/tclDecls.h	/^#define Tcl_Preserve /;"	d
Tcl_Preserve	generic/tclPreserve.c	/^Tcl_Preserve($/;"	f	typeref:typename:void
Tcl_PrintDouble	doc/PrintDbl.3	/^.TH Tcl_PrintDouble 3 8.0 Tcl "Tcl Library Procedures"$/;"	t
Tcl_PrintDouble	generic/tclDecls.h	/^#define Tcl_PrintDouble /;"	d
Tcl_PrintDouble	generic/tclUtil.c	/^Tcl_PrintDouble($/;"	f	typeref:typename:void
Tcl_ProcObjCmd	generic/tclDecls.h	/^#define Tcl_ProcObjCmd /;"	d
Tcl_ProcObjCmd	generic/tclProc.c	/^Tcl_ProcObjCmd($/;"	f	typeref:typename:int
Tcl_PushCallFrame	generic/tclIntDecls.h	/^#define Tcl_PushCallFrame /;"	d
Tcl_PushCallFrame	generic/tclNamesp.c	/^Tcl_PushCallFrame($/;"	f	typeref:typename:int
Tcl_PutEnv	doc/Environment.3	/^.TH Tcl_PutEnv 3 "7.5" Tcl "Tcl Library Procedures"$/;"	t
Tcl_PutEnv	generic/tclDecls.h	/^#define Tcl_PutEnv /;"	d
Tcl_PutEnv	generic/tclEnv.c	/^Tcl_PutEnv($/;"	f	typeref:typename:int
Tcl_PutsObjCmd	generic/tclIOCmd.c	/^Tcl_PutsObjCmd($/;"	f	typeref:typename:int
Tcl_PutsObjCmd	generic/tclInt.h	/^MODULE_SCOPE Tcl_ObjCmdProc Tcl_PutsObjCmd;$/;"	v	typeref:typename:MODULE_SCOPE Tcl_ObjCmdProc
Tcl_PwdObjCmd	generic/tclCmdMZ.c	/^Tcl_PwdObjCmd($/;"	f	typeref:typename:int
Tcl_PwdObjCmd	generic/tclInt.h	/^MODULE_SCOPE Tcl_ObjCmdProc Tcl_PwdObjCmd;$/;"	v	typeref:typename:MODULE_SCOPE Tcl_ObjCmdProc
Tcl_QueryTimeProc	generic/tclDecls.h	/^#define Tcl_QueryTimeProc /;"	d
Tcl_QueryTimeProc	unix/tclUnixTime.c	/^Tcl_QueryTimeProc($/;"	f	typeref:typename:void
Tcl_QueryTimeProc	win/tclWinTime.c	/^Tcl_QueryTimeProc($/;"	f	typeref:typename:void
Tcl_QueueEvent	generic/tclDecls.h	/^#define Tcl_QueueEvent /;"	d
Tcl_QueueEvent	generic/tclNotify.c	/^Tcl_QueueEvent($/;"	f	typeref:typename:void
Tcl_QueuePosition	generic/tcl.h	/^} Tcl_QueuePosition;$/;"	t	typeref:enum:__anon937aefea0a03
Tcl_Read	generic/tclDecls.h	/^#define Tcl_Read /;"	d
Tcl_Read	generic/tclIO.c	/^Tcl_Read($/;"	f	typeref:typename:Tcl_Size
Tcl_ReadChars	generic/tclDecls.h	/^#define Tcl_ReadChars /;"	d
Tcl_ReadChars	generic/tclIO.c	/^Tcl_ReadChars($/;"	f	typeref:typename:Tcl_Size
Tcl_ReadObjCmd	generic/tclIOCmd.c	/^Tcl_ReadObjCmd($/;"	f	typeref:typename:int
Tcl_ReadObjCmd	generic/tclInt.h	/^MODULE_SCOPE Tcl_ObjCmdProc Tcl_ReadObjCmd;$/;"	v	typeref:typename:MODULE_SCOPE Tcl_ObjCmdProc
Tcl_ReadRaw	generic/tclDecls.h	/^#define Tcl_ReadRaw /;"	d
Tcl_ReadRaw	generic/tclIO.c	/^Tcl_ReadRaw($/;"	f	typeref:typename:Tcl_Size
Tcl_Realloc	generic/tclCkalloc.c	/^Tcl_Realloc($/;"	f	typeref:typename:void *
Tcl_Realloc	generic/tclDecls.h	/^#   define Tcl_Realloc(/;"	d
Tcl_Realloc	generic/tclDecls.h	/^#define Tcl_Realloc /;"	d
Tcl_ReapDetachedProcs	generic/tclDecls.h	/^#define Tcl_ReapDetachedProcs /;"	d
Tcl_ReapDetachedProcs	generic/tclPipe.c	/^Tcl_ReapDetachedProcs(void)$/;"	f	typeref:typename:void
Tcl_RecordAndEval	doc/RecordEval.3	/^.TH Tcl_RecordAndEval 3 7.4 Tcl "Tcl Library Procedures"$/;"	t
Tcl_RecordAndEval	generic/tclDecls.h	/^#define Tcl_RecordAndEval /;"	d
Tcl_RecordAndEval	generic/tclHistory.c	/^Tcl_RecordAndEval($/;"	f	typeref:typename:int
Tcl_RecordAndEvalObj	doc/RecEvalObj.3	/^.TH Tcl_RecordAndEvalObj 3 8.0 Tcl "Tcl Library Procedures"$/;"	t
Tcl_RecordAndEvalObj	generic/tclDecls.h	/^#define Tcl_RecordAndEvalObj /;"	d
Tcl_RecordAndEvalObj	generic/tclHistory.c	/^Tcl_RecordAndEvalObj($/;"	f	typeref:typename:int
Tcl_RegExp	generic/tcl.h	/^typedef struct Tcl_RegExp_ *Tcl_RegExp;$/;"	t	typeref:struct:Tcl_RegExp_ *
Tcl_RegExpCompile	generic/tclDecls.h	/^#define Tcl_RegExpCompile /;"	d
Tcl_RegExpCompile	generic/tclRegexp.c	/^Tcl_RegExpCompile($/;"	f	typeref:typename:Tcl_RegExp
Tcl_RegExpExec	generic/tclDecls.h	/^#define Tcl_RegExpExec /;"	d
Tcl_RegExpExec	generic/tclRegexp.c	/^Tcl_RegExpExec($/;"	f	typeref:typename:int
Tcl_RegExpExecObj	generic/tclDecls.h	/^#define Tcl_RegExpExecObj /;"	d
Tcl_RegExpExecObj	generic/tclRegexp.c	/^Tcl_RegExpExecObj($/;"	f	typeref:typename:int
Tcl_RegExpGetInfo	generic/tclDecls.h	/^#define Tcl_RegExpGetInfo /;"	d
Tcl_RegExpGetInfo	generic/tclRegexp.c	/^Tcl_RegExpGetInfo($/;"	f	typeref:typename:void
Tcl_RegExpIndices	generic/tcl.h	/^typedef struct Tcl_RegExpIndices {$/;"	s
Tcl_RegExpIndices	generic/tcl.h	/^} Tcl_RegExpIndices;$/;"	t	typeref:struct:Tcl_RegExpIndices
Tcl_RegExpInfo	generic/tcl.h	/^typedef struct Tcl_RegExpInfo {$/;"	s
Tcl_RegExpInfo	generic/tcl.h	/^} Tcl_RegExpInfo;$/;"	t	typeref:struct:Tcl_RegExpInfo
Tcl_RegExpMatch	doc/RegExp.3	/^.TH Tcl_RegExpMatch 3 8.1 Tcl "Tcl Library Procedures"$/;"	t
Tcl_RegExpMatch	generic/tclDecls.h	/^#define Tcl_RegExpMatch /;"	d
Tcl_RegExpMatch	generic/tclRegexp.c	/^Tcl_RegExpMatch($/;"	f	typeref:typename:int
Tcl_RegExpMatchObj	generic/tclDecls.h	/^#define Tcl_RegExpMatchObj /;"	d
Tcl_RegExpMatchObj	generic/tclRegexp.c	/^Tcl_RegExpMatchObj($/;"	f	typeref:typename:int
Tcl_RegExpRange	generic/tclDecls.h	/^#define Tcl_RegExpRange /;"	d
Tcl_RegExpRange	generic/tclRegexp.c	/^Tcl_RegExpRange($/;"	f	typeref:typename:void
Tcl_RegexpObjCmd	generic/tclCmdMZ.c	/^Tcl_RegexpObjCmd($/;"	f	typeref:typename:int
Tcl_RegexpObjCmd	generic/tclInt.h	/^MODULE_SCOPE Tcl_ObjCmdProc Tcl_RegexpObjCmd;$/;"	v	typeref:typename:MODULE_SCOPE Tcl_ObjCmdProc
Tcl_RegisterChannel	generic/tclDecls.h	/^#define Tcl_RegisterChannel /;"	d
Tcl_RegisterChannel	generic/tclIO.c	/^Tcl_RegisterChannel($/;"	f	typeref:typename:void
Tcl_RegisterConfig	doc/RegConfig.3	/^.TH Tcl_RegisterConfig 3 8.4 Tcl "Tcl Library Procedures"$/;"	t
Tcl_RegisterConfig	generic/tclConfig.c	/^Tcl_RegisterConfig($/;"	f	typeref:typename:void
Tcl_RegisterConfig	generic/tclDecls.h	/^#define Tcl_RegisterConfig /;"	d
Tcl_RegisterObjType	generic/tclDecls.h	/^#define Tcl_RegisterObjType /;"	d
Tcl_RegisterObjType	generic/tclObj.c	/^Tcl_RegisterObjType($/;"	f	typeref:typename:void
Tcl_RegsubObjCmd	generic/tclCmdMZ.c	/^Tcl_RegsubObjCmd($/;"	f	typeref:typename:int
Tcl_RegsubObjCmd	generic/tclInt.h	/^MODULE_SCOPE Tcl_ObjCmdProc Tcl_RegsubObjCmd;$/;"	v	typeref:typename:MODULE_SCOPE Tcl_ObjCmdProc
Tcl_Release	generic/tclDecls.h	/^#define Tcl_Release /;"	d
Tcl_Release	generic/tclPreserve.c	/^Tcl_Release($/;"	f	typeref:typename:void
Tcl_RemoveChannelMode	generic/tclDecls.h	/^#define Tcl_RemoveChannelMode /;"	d
Tcl_RemoveChannelMode	generic/tclIO.c	/^Tcl_RemoveChannelMode($/;"	f	typeref:typename:int
Tcl_RemoveInterpResolvers	generic/tclIntDecls.h	/^#define Tcl_RemoveInterpResolvers /;"	d
Tcl_RemoveInterpResolvers	generic/tclResolve.c	/^Tcl_RemoveInterpResolvers($/;"	f	typeref:typename:int
Tcl_RenameObjCmd	generic/tclCmdMZ.c	/^Tcl_RenameObjCmd($/;"	f	typeref:typename:int
Tcl_RenameObjCmd	generic/tclInt.h	/^MODULE_SCOPE Tcl_ObjCmdProc Tcl_RenameObjCmd;$/;"	v	typeref:typename:MODULE_SCOPE Tcl_ObjCmdProc
Tcl_RepresentationCmd	generic/tclInt.h	/^MODULE_SCOPE Tcl_ObjCmdProc Tcl_RepresentationCmd;$/;"	v	typeref:typename:MODULE_SCOPE Tcl_ObjCmdProc
Tcl_RepresentationCmd	generic/tclObj.c	/^Tcl_RepresentationCmd($/;"	f	typeref:typename:int
Tcl_ResetResult	generic/tclDecls.h	/^#define Tcl_ResetResult /;"	d
Tcl_ResetResult	generic/tclResult.c	/^Tcl_ResetResult($/;"	f	typeref:typename:void
Tcl_ResolveCmdProc	generic/tclInt.h	/^typedef int (Tcl_ResolveCmdProc)(Tcl_Interp *interp, const char *name,$/;"	t	typeref:typename:int ()(Tcl_Interp * interp,const char * name,Tcl_Namespace * context,int flags,Tcl_Command * rPtr)
Tcl_ResolveCompiledVarProc	generic/tclInt.h	/^typedef int (Tcl_ResolveCompiledVarProc)(Tcl_Interp *interp,$/;"	t	typeref:typename:int ()(Tcl_Interp * interp,const char * name,Tcl_Size length,Tcl_Namespace * context,Tcl_ResolvedVarInfo ** rPtr)
Tcl_ResolveRuntimeVarProc	generic/tclInt.h	/^typedef Tcl_Var (Tcl_ResolveRuntimeVarProc)(Tcl_Interp *interp,$/;"	t	typeref:typename:Tcl_Var ()(Tcl_Interp * interp,struct Tcl_ResolvedVarInfo * vinfoPtr)
Tcl_ResolveVarDeleteProc	generic/tclInt.h	/^typedef void (Tcl_ResolveVarDeleteProc)(struct Tcl_ResolvedVarInfo *vinfoPtr);$/;"	t	typeref:typename:void ()(struct Tcl_ResolvedVarInfo * vinfoPtr)
Tcl_ResolveVarProc	generic/tclInt.h	/^typedef int (Tcl_ResolveVarProc)(Tcl_Interp *interp, const char *name,$/;"	t	typeref:typename:int ()(Tcl_Interp * interp,const char * name,Tcl_Namespace * context,int flags,Tcl_Var * rPtr)
Tcl_ResolvedVarInfo	generic/tclInt.h	/^typedef struct Tcl_ResolvedVarInfo {$/;"	s
Tcl_ResolvedVarInfo	generic/tclInt.h	/^} Tcl_ResolvedVarInfo;$/;"	t	typeref:struct:Tcl_ResolvedVarInfo
Tcl_ResolverInfo	generic/tclInt.h	/^typedef struct Tcl_ResolverInfo {$/;"	s
Tcl_ResolverInfo	generic/tclInt.h	/^} Tcl_ResolverInfo;$/;"	t	typeref:struct:Tcl_ResolverInfo
Tcl_RestoreInterpState	generic/tclDecls.h	/^#define Tcl_RestoreInterpState /;"	d
Tcl_RestoreInterpState	generic/tclResult.c	/^Tcl_RestoreInterpState($/;"	f	typeref:typename:int
Tcl_ReturnObjCmd	generic/tclCmdMZ.c	/^Tcl_ReturnObjCmd($/;"	f	typeref:typename:int
Tcl_ReturnObjCmd	generic/tclInt.h	/^MODULE_SCOPE Tcl_ObjCmdProc Tcl_ReturnObjCmd;$/;"	v	typeref:typename:MODULE_SCOPE Tcl_ObjCmdProc
Tcl_SaveInterpState	doc/SaveInterpState.3	/^.TH Tcl_SaveInterpState 3 8.1 Tcl "Tcl Library Procedures"$/;"	t
Tcl_SaveInterpState	generic/tclDecls.h	/^#define Tcl_SaveInterpState /;"	d
Tcl_SaveInterpState	generic/tclResult.c	/^Tcl_SaveInterpState($/;"	f	typeref:typename:Tcl_InterpState
Tcl_ScaleTimeProc	generic/tcl.h	/^typedef void (Tcl_ScaleTimeProc) (Tcl_Time *timebuf, void *clientData);$/;"	t	typeref:typename:void ()(Tcl_Time * timebuf,void * clientData)
Tcl_ScanCountedElement	generic/tclDecls.h	/^#define Tcl_ScanCountedElement /;"	d
Tcl_ScanCountedElement	generic/tclUtil.c	/^Tcl_ScanCountedElement($/;"	f	typeref:typename:Tcl_Size
Tcl_ScanElement	generic/tclDecls.h	/^#define Tcl_ScanElement /;"	d
Tcl_ScanElement	generic/tclUtil.c	/^Tcl_ScanElement($/;"	f	typeref:typename:Tcl_Size
Tcl_ScanObjCmd	generic/tclInt.h	/^MODULE_SCOPE Tcl_ObjCmdProc Tcl_ScanObjCmd;$/;"	v	typeref:typename:MODULE_SCOPE Tcl_ObjCmdProc
Tcl_ScanObjCmd	generic/tclScan.c	/^Tcl_ScanObjCmd($/;"	f	typeref:typename:int
Tcl_Seek	generic/tclDecls.h	/^#define Tcl_Seek /;"	d
Tcl_Seek	generic/tclIO.c	/^Tcl_Seek($/;"	f	typeref:typename:long long
Tcl_SeekObjCmd	generic/tclIOCmd.c	/^Tcl_SeekObjCmd($/;"	f	typeref:typename:int
Tcl_SeekObjCmd	generic/tclInt.h	/^MODULE_SCOPE Tcl_ObjCmdProc Tcl_SeekObjCmd;$/;"	v	typeref:typename:MODULE_SCOPE Tcl_ObjCmdProc
Tcl_SeekOffset	unix/tclUnixPort.h	/^typedef off64_t		Tcl_SeekOffset;$/;"	t	typeref:typename:off64_t
Tcl_SeekOffset	unix/tclUnixPort.h	/^typedef off_t		Tcl_SeekOffset;$/;"	t	typeref:typename:off_t
Tcl_ServiceAll	generic/tclDecls.h	/^#define Tcl_ServiceAll /;"	d
Tcl_ServiceAll	generic/tclNotify.c	/^Tcl_ServiceAll(void)$/;"	f	typeref:typename:int
Tcl_ServiceEvent	generic/tclDecls.h	/^#define Tcl_ServiceEvent /;"	d
Tcl_ServiceEvent	generic/tclNotify.c	/^Tcl_ServiceEvent($/;"	f	typeref:typename:int
Tcl_ServiceModeHook	generic/tclDecls.h	/^#define Tcl_ServiceModeHook /;"	d
Tcl_ServiceModeHook	generic/tclNotify.c	/^Tcl_ServiceModeHook($/;"	f	typeref:typename:void
Tcl_ServiceModeHookProc	generic/tcl.h	/^typedef void (Tcl_ServiceModeHookProc) (int mode);$/;"	t	typeref:typename:void ()(int mode)
Tcl_SetAssocData	doc/AssocData.3	/^.TH Tcl_SetAssocData 3 7.5 Tcl "Tcl Library Procedures"$/;"	t
Tcl_SetAssocData	generic/tclBasic.c	/^Tcl_SetAssocData($/;"	f	typeref:typename:void
Tcl_SetAssocData	generic/tclDecls.h	/^#define Tcl_SetAssocData /;"	d
Tcl_SetBignumObj	generic/tclDecls.h	/^#define Tcl_SetBignumObj /;"	d
Tcl_SetBignumObj	generic/tclObj.c	/^Tcl_SetBignumObj($/;"	f	typeref:typename:void
Tcl_SetBooleanObj	generic/tclDecls.h	/^#define Tcl_SetBooleanObj(/;"	d
Tcl_SetByteArrayLength	generic/tclBinary.c	/^Tcl_SetByteArrayLength($/;"	f	typeref:typename:unsigned char *
Tcl_SetByteArrayLength	generic/tclDecls.h	/^#define Tcl_SetByteArrayLength /;"	d
Tcl_SetByteArrayObj	generic/tclBinary.c	/^Tcl_SetByteArrayObj($/;"	f	typeref:typename:void
Tcl_SetByteArrayObj	generic/tclDecls.h	/^#define Tcl_SetByteArrayObj /;"	d
Tcl_SetChannelBufferSize	generic/tclDecls.h	/^#define Tcl_SetChannelBufferSize /;"	d
Tcl_SetChannelBufferSize	generic/tclIO.c	/^Tcl_SetChannelBufferSize($/;"	f	typeref:typename:void
Tcl_SetChannelError	doc/SetChanErr.3	/^.TH Tcl_SetChannelError 3 8.5 Tcl "Tcl Library Procedures"$/;"	t
Tcl_SetChannelError	generic/tclDecls.h	/^#define Tcl_SetChannelError /;"	d
Tcl_SetChannelError	generic/tclIO.c	/^Tcl_SetChannelError($/;"	f	typeref:typename:void
Tcl_SetChannelErrorInterp	generic/tclDecls.h	/^#define Tcl_SetChannelErrorInterp /;"	d
Tcl_SetChannelErrorInterp	generic/tclIO.c	/^Tcl_SetChannelErrorInterp($/;"	f	typeref:typename:void
Tcl_SetChannelOption	generic/tclDecls.h	/^#define Tcl_SetChannelOption /;"	d
Tcl_SetChannelOption	generic/tclIO.c	/^Tcl_SetChannelOption($/;"	f	typeref:typename:int
Tcl_SetCommandInfo	generic/tclBasic.c	/^Tcl_SetCommandInfo($/;"	f	typeref:typename:int
Tcl_SetCommandInfo	generic/tclDecls.h	/^#define Tcl_SetCommandInfo /;"	d
Tcl_SetCommandInfoFromToken	generic/tclBasic.c	/^Tcl_SetCommandInfoFromToken($/;"	f	typeref:typename:int
Tcl_SetCommandInfoFromToken	generic/tclDecls.h	/^#define Tcl_SetCommandInfoFromToken /;"	d
Tcl_SetDoubleObj	generic/tclDecls.h	/^#define Tcl_SetDoubleObj /;"	d
Tcl_SetDoubleObj	generic/tclObj.c	/^Tcl_SetDoubleObj($/;"	f	typeref:typename:void
Tcl_SetEncodingSearchPath	generic/tclDecls.h	/^#define Tcl_SetEncodingSearchPath /;"	d
Tcl_SetEncodingSearchPath	generic/tclEncoding.c	/^Tcl_SetEncodingSearchPath($/;"	f	typeref:typename:int
Tcl_SetEnsembleFlags	generic/tclDecls.h	/^#define Tcl_SetEnsembleFlags /;"	d
Tcl_SetEnsembleFlags	generic/tclEnsemble.c	/^Tcl_SetEnsembleFlags($/;"	f	typeref:typename:int
Tcl_SetEnsembleMappingDict	generic/tclDecls.h	/^#define Tcl_SetEnsembleMappingDict /;"	d
Tcl_SetEnsembleMappingDict	generic/tclEnsemble.c	/^Tcl_SetEnsembleMappingDict($/;"	f	typeref:typename:int
Tcl_SetEnsembleParameterList	generic/tclDecls.h	/^#define Tcl_SetEnsembleParameterList /;"	d
Tcl_SetEnsembleParameterList	generic/tclEnsemble.c	/^Tcl_SetEnsembleParameterList($/;"	f	typeref:typename:int
Tcl_SetEnsembleSubcommandList	generic/tclDecls.h	/^#define Tcl_SetEnsembleSubcommandList /;"	d
Tcl_SetEnsembleSubcommandList	generic/tclEnsemble.c	/^Tcl_SetEnsembleSubcommandList($/;"	f	typeref:typename:int
Tcl_SetEnsembleUnknownHandler	generic/tclDecls.h	/^#define Tcl_SetEnsembleUnknownHandler /;"	d
Tcl_SetEnsembleUnknownHandler	generic/tclEnsemble.c	/^Tcl_SetEnsembleUnknownHandler($/;"	f	typeref:typename:int
Tcl_SetErrno	doc/SetErrno.3	/^.TH Tcl_SetErrno 3 8.3 Tcl "Tcl Library Procedures"$/;"	t
Tcl_SetErrno	generic/tclDecls.h	/^#define Tcl_SetErrno /;"	d
Tcl_SetErrno	generic/tclIOUtil.c	/^Tcl_SetErrno($/;"	f	typeref:typename:void
Tcl_SetErrorCode	generic/tclDecls.h	/^#define Tcl_SetErrorCode /;"	d
Tcl_SetErrorCode	generic/tclResult.c	/^Tcl_SetErrorCode($/;"	f	typeref:typename:void
Tcl_SetErrorLine	generic/tclDecls.h	/^#define Tcl_SetErrorLine /;"	d
Tcl_SetErrorLine	generic/tclResult.c	/^Tcl_SetErrorLine($/;"	f	typeref:typename:void
Tcl_SetExitProc	generic/tcl.h	/^#define Tcl_SetExitProc(/;"	d
Tcl_SetExitProc	generic/tclEvent.c	/^Tcl_SetExitProc($/;"	f	typeref:typename:Tcl_ExitProc *
Tcl_SetFromAnyProc	generic/tcl.h	/^typedef int (Tcl_SetFromAnyProc) (Tcl_Interp *interp, struct Tcl_Obj *objPtr);$/;"	t	typeref:typename:int ()(Tcl_Interp * interp,struct Tcl_Obj * objPtr)
Tcl_SetHashValue	generic/tcl.h	/^#define Tcl_SetHashValue(/;"	d
Tcl_SetIntObj	generic/tclDecls.h	/^#define Tcl_SetIntObj(/;"	d
Tcl_SetListObj	generic/tclDecls.h	/^#define Tcl_SetListObj /;"	d
Tcl_SetListObj	generic/tclListObj.c	/^Tcl_SetListObj($/;"	f	typeref:typename:void
Tcl_SetLongObj	generic/tclDecls.h	/^#define Tcl_SetLongObj(/;"	d
Tcl_SetMainLoop	generic/tclDecls.h	/^#define Tcl_SetMainLoop /;"	d
Tcl_SetMainLoop	generic/tclMain.c	/^Tcl_SetMainLoop($/;"	f	typeref:typename:void
Tcl_SetMaxBlockTime	generic/tclDecls.h	/^#define Tcl_SetMaxBlockTime /;"	d
Tcl_SetMaxBlockTime	generic/tclNotify.c	/^Tcl_SetMaxBlockTime($/;"	f	typeref:typename:void
Tcl_SetNamespaceResolvers	generic/tclIntDecls.h	/^#define Tcl_SetNamespaceResolvers /;"	d
Tcl_SetNamespaceResolvers	generic/tclResolve.c	/^Tcl_SetNamespaceResolvers($/;"	f	typeref:typename:void
Tcl_SetNamespaceUnknownHandler	generic/tclDecls.h	/^#define Tcl_SetNamespaceUnknownHandler /;"	d
Tcl_SetNamespaceUnknownHandler	generic/tclNamesp.c	/^Tcl_SetNamespaceUnknownHandler($/;"	f	typeref:typename:int
Tcl_SetNotifier	generic/tclDecls.h	/^#define Tcl_SetNotifier /;"	d
Tcl_SetNotifier	generic/tclNotify.c	/^Tcl_SetNotifier($/;"	f	typeref:typename:void
Tcl_SetObjCmd	generic/tclInt.h	/^MODULE_SCOPE Tcl_ObjCmdProc Tcl_SetObjCmd;$/;"	v	typeref:typename:MODULE_SCOPE Tcl_ObjCmdProc
Tcl_SetObjCmd	generic/tclVar.c	/^Tcl_SetObjCmd($/;"	f	typeref:typename:int
Tcl_SetObjErrorCode	generic/tclDecls.h	/^#define Tcl_SetObjErrorCode /;"	d
Tcl_SetObjErrorCode	generic/tclResult.c	/^Tcl_SetObjErrorCode($/;"	f	typeref:typename:void
Tcl_SetObjLength	generic/tclDecls.h	/^#define Tcl_SetObjLength /;"	d
Tcl_SetObjLength	generic/tclStringObj.c	/^Tcl_SetObjLength($/;"	f	typeref:typename:void
Tcl_SetObjResult	generic/tclDecls.h	/^#define Tcl_SetObjResult /;"	d
Tcl_SetObjResult	generic/tclResult.c	/^Tcl_SetObjResult($/;"	f	typeref:typename:void
Tcl_SetPanicProc	generic/tcl.h	/^#define Tcl_SetPanicProc(/;"	d
Tcl_SetPanicProc	generic/tclPanic.c	/^Tcl_SetPanicProc($/;"	f	typeref:typename:const char *
Tcl_SetPreInitScript	generic/tcl.h	/^#define Tcl_SetPreInitScript(/;"	d
Tcl_SetPreInitScript	generic/tclInterp.c	/^Tcl_SetPreInitScript($/;"	f	typeref:typename:const char *
Tcl_SetRecursionLimit	doc/SetRecLmt.3	/^.TH Tcl_SetRecursionLimit 3 7.0 Tcl "Tcl Library Procedures"$/;"	t
Tcl_SetRecursionLimit	generic/tclBasic.c	/^Tcl_SetRecursionLimit($/;"	f	typeref:typename:Tcl_Size
Tcl_SetRecursionLimit	generic/tclDecls.h	/^#define Tcl_SetRecursionLimit /;"	d
Tcl_SetResult	doc/SetResult.3	/^.TH Tcl_SetResult 3 8.7 Tcl "Tcl Library Procedures"$/;"	t
Tcl_SetResult	generic/tclDecls.h	/^#define Tcl_SetResult(/;"	d
Tcl_SetReturnOptions	generic/tclDecls.h	/^#define Tcl_SetReturnOptions /;"	d
Tcl_SetReturnOptions	generic/tclResult.c	/^Tcl_SetReturnOptions($/;"	f	typeref:typename:int
Tcl_SetServiceMode	generic/tclDecls.h	/^#define Tcl_SetServiceMode /;"	d
Tcl_SetServiceMode	generic/tclNotify.c	/^Tcl_SetServiceMode($/;"	f	typeref:typename:int
Tcl_SetStartupScript	generic/tclDecls.h	/^#define Tcl_SetStartupScript /;"	d
Tcl_SetStartupScript	generic/tclMain.c	/^Tcl_SetStartupScript($/;"	f	typeref:typename:void
Tcl_SetStdChannel	generic/tclDecls.h	/^#define Tcl_SetStdChannel /;"	d
Tcl_SetStdChannel	generic/tclIO.c	/^Tcl_SetStdChannel($/;"	f	typeref:typename:void
Tcl_SetStringObj	generic/tclDecls.h	/^#define Tcl_SetStringObj /;"	d
Tcl_SetStringObj	generic/tclStringObj.c	/^Tcl_SetStringObj($/;"	f	typeref:typename:void
Tcl_SetSystemEncoding	generic/tclDecls.h	/^#define Tcl_SetSystemEncoding /;"	d
Tcl_SetSystemEncoding	generic/tclEncoding.c	/^Tcl_SetSystemEncoding($/;"	f	typeref:typename:int
Tcl_SetTimeProc	generic/tclDecls.h	/^#define Tcl_SetTimeProc /;"	d
Tcl_SetTimeProc	unix/tclUnixTime.c	/^Tcl_SetTimeProc($/;"	f	typeref:typename:void
Tcl_SetTimeProc	win/tclWinTime.c	/^Tcl_SetTimeProc($/;"	f	typeref:typename:void
Tcl_SetTimer	generic/tclDecls.h	/^#define Tcl_SetTimer /;"	d
Tcl_SetTimer	generic/tclNotify.c	/^Tcl_SetTimer($/;"	f	typeref:typename:void
Tcl_SetTimerProc	generic/tcl.h	/^typedef void (Tcl_SetTimerProc) (const Tcl_Time *timePtr);$/;"	t	typeref:typename:void ()(const Tcl_Time * timePtr)
Tcl_SetUnicodeObj	generic/tclDecls.h	/^#define Tcl_SetUnicodeObj /;"	d
Tcl_SetUnicodeObj	generic/tclStringObj.c	/^Tcl_SetUnicodeObj($/;"	f	typeref:typename:void
Tcl_SetVar	doc/SetVar.3	/^.TH Tcl_SetVar 3 8.1 Tcl "Tcl Library Procedures"$/;"	t
Tcl_SetVar	generic/tclDecls.h	/^#define Tcl_SetVar(/;"	d
Tcl_SetVar2	generic/tclDecls.h	/^#define Tcl_SetVar2 /;"	d
Tcl_SetVar2	generic/tclVar.c	/^Tcl_SetVar2($/;"	f	typeref:typename:const char *
Tcl_SetVar2Ex	generic/tclDecls.h	/^#define Tcl_SetVar2Ex /;"	d
Tcl_SetVar2Ex	generic/tclVar.c	/^Tcl_SetVar2Ex($/;"	f	typeref:typename:Tcl_Obj *
Tcl_SetWideIntObj	generic/tclDecls.h	/^#define Tcl_SetWideIntObj /;"	d
Tcl_SetWideIntObj	generic/tclObj.c	/^Tcl_SetWideIntObj($/;"	f	typeref:typename:void
Tcl_SetWideUIntObj	generic/tclDecls.h	/^#define Tcl_SetWideUIntObj /;"	d
Tcl_SetWideUIntObj	generic/tclObj.c	/^Tcl_SetWideUIntObj($/;"	f	typeref:typename:void
Tcl_SignalId	doc/Signal.3	/^.TH Tcl_SignalId 3 8.3 Tcl "Tcl Library Procedures"$/;"	t
Tcl_SignalId	generic/tclDecls.h	/^#define Tcl_SignalId /;"	d
Tcl_SignalId	generic/tclPosixStr.c	/^Tcl_SignalId($/;"	f	typeref:typename:const char *
Tcl_SignalMsg	generic/tclDecls.h	/^#define Tcl_SignalMsg /;"	d
Tcl_SignalMsg	generic/tclPosixStr.c	/^Tcl_SignalMsg($/;"	f	typeref:typename:const char *
Tcl_Size	generic/tcl.h	/^typedef ptrdiff_t Tcl_Size;$/;"	t	typeref:typename:ptrdiff_t
Tcl_Size	generic/tclDTrace.d	/^typedef ptrdiff_t Tcl_Size;$/;"	a	file:
Tcl_Size	win/tclWinDde.c	/^#   define Tcl_Size /;"	d	file:
Tcl_Size	win/tclWinReg.c	/^#   define Tcl_Size /;"	d	file:
Tcl_Sleep	doc/Sleep.3	/^.TH Tcl_Sleep 3 7.5 Tcl "Tcl Library Procedures"$/;"	t
Tcl_Sleep	generic/tclDecls.h	/^#define Tcl_Sleep /;"	d
Tcl_Sleep	macosx/tclMacOSXNotify.c	/^Tcl_Sleep($/;"	f	typeref:typename:void
Tcl_Sleep	unix/tclUnixEvent.c	/^Tcl_Sleep($/;"	f	typeref:typename:void
Tcl_Sleep	win/tclWinNotify.c	/^Tcl_Sleep($/;"	f	typeref:typename:void
Tcl_SocketObjCmd	generic/tclIOCmd.c	/^Tcl_SocketObjCmd($/;"	f	typeref:typename:int
Tcl_SocketObjCmd	generic/tclInt.h	/^MODULE_SCOPE Tcl_ObjCmdProc Tcl_SocketObjCmd;$/;"	v	typeref:typename:MODULE_SCOPE Tcl_ObjCmdProc
Tcl_SourceObjCmd	generic/tclCmdMZ.c	/^Tcl_SourceObjCmd($/;"	f	typeref:typename:int
Tcl_SourceObjCmd	generic/tclInt.h	/^MODULE_SCOPE Tcl_ObjCmdProc Tcl_SourceObjCmd;$/;"	v	typeref:typename:MODULE_SCOPE Tcl_ObjCmdProc
Tcl_SourceRCFile	doc/SourceRCFile.3	/^.TH Tcl_SourceRCFile 3 8.3 Tcl "Tcl Library Procedures"$/;"	t
Tcl_SourceRCFile	generic/tclDecls.h	/^#define Tcl_SourceRCFile /;"	d
Tcl_SourceRCFile	generic/tclMain.c	/^Tcl_SourceRCFile($/;"	f	typeref:typename:void
Tcl_SpliceChannel	generic/tclDecls.h	/^#define Tcl_SpliceChannel /;"	d
Tcl_SpliceChannel	generic/tclIO.c	/^Tcl_SpliceChannel($/;"	f	typeref:typename:void
Tcl_SplitList	doc/SplitList.3	/^.TH Tcl_SplitList 3 8.0 Tcl "Tcl Library Procedures"$/;"	t
Tcl_SplitList	generic/tclDecls.h	/^#define Tcl_SplitList /;"	d
Tcl_SplitList	generic/tclUtil.c	/^Tcl_SplitList($/;"	f	typeref:typename:int
Tcl_SplitObjCmd	generic/tclCmdMZ.c	/^Tcl_SplitObjCmd($/;"	f	typeref:typename:int
Tcl_SplitObjCmd	generic/tclInt.h	/^MODULE_SCOPE Tcl_ObjCmdProc Tcl_SplitObjCmd;$/;"	v	typeref:typename:MODULE_SCOPE Tcl_ObjCmdProc
Tcl_SplitPath	doc/SplitPath.3	/^.TH Tcl_SplitPath 3 7.5 Tcl "Tcl Library Procedures"$/;"	t
Tcl_SplitPath	generic/tclDecls.h	/^#define Tcl_SplitPath /;"	d
Tcl_SplitPath	generic/tclFileName.c	/^Tcl_SplitPath($/;"	f	typeref:typename:void
Tcl_StackChannel	doc/ChnlStack.3	/^.TH Tcl_StackChannel 3 8.3 Tcl "Tcl Library Procedures"$/;"	t
Tcl_StackChannel	generic/tclDecls.h	/^#define Tcl_StackChannel /;"	d
Tcl_StackChannel	generic/tclIO.c	/^Tcl_StackChannel($/;"	f	typeref:typename:Tcl_Channel
Tcl_Stat	generic/tclDecls.h	/^#define Tcl_Stat /;"	d
Tcl_Stat	generic/tclIOUtil.c	/^Tcl_Stat($/;"	f	typeref:typename:int
Tcl_StatBuf	generic/tcl.h	/^    typedef struct stat Tcl_StatBuf;$/;"	t	typeref:struct:stat
Tcl_StatBuf	generic/tcl.h	/^    } Tcl_StatBuf;$/;"	t	typeref:struct:__anon937aefea0108
Tcl_StatBuf	generic/tcl.h	/^typedef struct __stat64 Tcl_StatBuf;$/;"	t	typeref:struct:__stat64
Tcl_Stat_	generic/tcl.h	/^typedef Tcl_StatBuf *Tcl_Stat_;$/;"	t	typeref:typename:Tcl_StatBuf *
Tcl_StaticLibrary	doc/StaticLibrary.3	/^.TH Tcl_StaticLibrary 3 7.5 Tcl "Tcl Library Procedures"$/;"	t
Tcl_StaticLibrary	generic/tcl.h	/^#define Tcl_StaticLibrary(/;"	d
Tcl_StaticLibrary	generic/tclIntDecls.h	/^#define Tcl_StaticLibrary /;"	d
Tcl_StaticLibrary	generic/tclLoad.c	/^Tcl_StaticLibrary($/;"	f	typeref:typename:void
Tcl_StoreInternalRep	generic/tclDecls.h	/^#define Tcl_StoreInternalRep /;"	d
Tcl_StoreInternalRep	generic/tclObj.c	/^Tcl_StoreInternalRep($/;"	f	typeref:typename:void
Tcl_StringCaseMatch	generic/tclDecls.h	/^#define Tcl_StringCaseMatch /;"	d
Tcl_StringCaseMatch	generic/tclUtil.c	/^Tcl_StringCaseMatch($/;"	f	typeref:typename:int
Tcl_StringMatch	doc/StrMatch.3	/^.TH Tcl_StringMatch 3 8.5 Tcl "Tcl Library Procedures"$/;"	t
Tcl_StringMatch	generic/tclDecls.h	/^#define Tcl_StringMatch(/;"	d
Tcl_StringObj	doc/StringObj.3	/^.TH Tcl_StringObj 3 8.1 Tcl "Tcl Library Procedures"$/;"	t
Tcl_SubstObj	doc/SubstObj.3	/^.TH Tcl_SubstObj 3 8.4 Tcl "Tcl Library Procedures"$/;"	t
Tcl_SubstObj	generic/tclCompile.c	/^Tcl_SubstObj($/;"	f	typeref:typename:Tcl_Obj *
Tcl_SubstObj	generic/tclDecls.h	/^#define Tcl_SubstObj /;"	d
Tcl_SubstObjCmd	generic/tclCmdMZ.c	/^Tcl_SubstObjCmd($/;"	f	typeref:typename:int
Tcl_SubstObjCmd	generic/tclInt.h	/^MODULE_SCOPE Tcl_ObjCmdProc Tcl_SubstObjCmd;$/;"	v	typeref:typename:MODULE_SCOPE Tcl_ObjCmdProc
Tcl_SwitchObjCmd	generic/tclCmdMZ.c	/^Tcl_SwitchObjCmd($/;"	f	typeref:typename:int
Tcl_SwitchObjCmd	generic/tclInt.h	/^MODULE_SCOPE Tcl_ObjCmdProc Tcl_SwitchObjCmd;$/;"	v	typeref:typename:MODULE_SCOPE Tcl_ObjCmdProc
Tcl_TakeBignumFromObj	generic/tclDecls.h	/^#define Tcl_TakeBignumFromObj /;"	d
Tcl_TakeBignumFromObj	generic/tclObj.c	/^Tcl_TakeBignumFromObj($/;"	f	typeref:typename:int
Tcl_TcpAcceptProc	generic/tcl.h	/^typedef void (Tcl_TcpAcceptProc) (void *callbackData, Tcl_Channel chan,$/;"	t	typeref:typename:void ()(void * callbackData,Tcl_Channel chan,char * address,int port)
Tcl_Tell	generic/tclDecls.h	/^#define Tcl_Tell /;"	d
Tcl_Tell	generic/tclIO.c	/^Tcl_Tell($/;"	f	typeref:typename:long long
Tcl_TellObjCmd	generic/tclIOCmd.c	/^Tcl_TellObjCmd($/;"	f	typeref:typename:int
Tcl_TellObjCmd	generic/tclInt.h	/^MODULE_SCOPE Tcl_ObjCmdProc Tcl_TellObjCmd;$/;"	v	typeref:typename:MODULE_SCOPE Tcl_ObjCmdProc
Tcl_ThreadAlert	generic/tclDecls.h	/^#define Tcl_ThreadAlert /;"	d
Tcl_ThreadAlert	generic/tclNotify.c	/^Tcl_ThreadAlert($/;"	f	typeref:typename:void
Tcl_ThreadCreateProc	generic/tcl.h	/^typedef unsigned (__stdcall Tcl_ThreadCreateProc) (void *clientData);$/;"	t	typeref:typename:unsigned (__stdcall)(void * clientData)
Tcl_ThreadCreateProc	generic/tcl.h	/^typedef void (Tcl_ThreadCreateProc) (void *clientData);$/;"	t	typeref:typename:void ()(void * clientData)
Tcl_ThreadCreateType	generic/tcl.h	/^#   define Tcl_ThreadCreateType	/;"	d
Tcl_ThreadDataKey	generic/tcl.h	/^typedef struct Tcl_ThreadDataKey_ *Tcl_ThreadDataKey;$/;"	t	typeref:struct:Tcl_ThreadDataKey_ *
Tcl_ThreadId	generic/tcl.h	/^typedef struct Tcl_ThreadId_ *Tcl_ThreadId;$/;"	t	typeref:struct:Tcl_ThreadId_ *
Tcl_ThreadQueueEvent	generic/tclDecls.h	/^#define Tcl_ThreadQueueEvent /;"	d
Tcl_ThreadQueueEvent	generic/tclNotify.c	/^Tcl_ThreadQueueEvent($/;"	f	typeref:typename:void
Tcl_ThrowObjCmd	generic/tclCmdMZ.c	/^Tcl_ThrowObjCmd($/;"	f	typeref:typename:int
Tcl_ThrowObjCmd	generic/tclInt.h	/^MODULE_SCOPE Tcl_ObjCmdProc Tcl_ThrowObjCmd;$/;"	v	typeref:typename:MODULE_SCOPE Tcl_ObjCmdProc
Tcl_Time	generic/tcl.h	/^typedef struct Tcl_Time {$/;"	s
Tcl_Time	generic/tcl.h	/^} Tcl_Time;$/;"	t	typeref:struct:Tcl_Time
Tcl_TimeObjCmd	generic/tclCmdMZ.c	/^Tcl_TimeObjCmd($/;"	f	typeref:typename:int
Tcl_TimeObjCmd	generic/tclInt.h	/^MODULE_SCOPE Tcl_ObjCmdProc Tcl_TimeObjCmd;$/;"	v	typeref:typename:MODULE_SCOPE Tcl_ObjCmdProc
Tcl_TimeRateObjCmd	generic/tclCmdMZ.c	/^Tcl_TimeRateObjCmd($/;"	f	typeref:typename:int
Tcl_TimeRateObjCmd	generic/tclInt.h	/^MODULE_SCOPE Tcl_ObjCmdProc Tcl_TimeRateObjCmd;$/;"	v	typeref:typename:MODULE_SCOPE Tcl_ObjCmdProc
Tcl_TimerProc	generic/tcl.h	/^typedef void (Tcl_TimerProc) (void *clientData);$/;"	t	typeref:typename:void ()(void * clientData)
Tcl_TimerToken	generic/tcl.h	/^typedef struct Tcl_TimerToken_ *Tcl_TimerToken;$/;"	t	typeref:struct:Tcl_TimerToken_ *
Tcl_Token	generic/tcl.h	/^typedef struct Tcl_Token {$/;"	s
Tcl_Token	generic/tcl.h	/^} Tcl_Token;$/;"	t	typeref:struct:Tcl_Token
Tcl_TomMath_InitStubs	generic/tclTomMathDecls.h	/^#define Tcl_TomMath_InitStubs(/;"	d
Tcl_Trace	generic/tcl.h	/^typedef struct Tcl_Trace_ *Tcl_Trace;$/;"	t	typeref:struct:Tcl_Trace_ *
Tcl_TraceCommand	doc/TraceCmd.3	/^.TH Tcl_TraceCommand 3 7.4 Tcl "Tcl Library Procedures"$/;"	t
Tcl_TraceCommand	generic/tclDecls.h	/^#define Tcl_TraceCommand /;"	d
Tcl_TraceCommand	generic/tclTrace.c	/^Tcl_TraceCommand($/;"	f	typeref:typename:int
Tcl_TraceObjCmd	generic/tclInt.h	/^MODULE_SCOPE Tcl_ObjCmdProc Tcl_TraceObjCmd;$/;"	v	typeref:typename:MODULE_SCOPE Tcl_ObjCmdProc
Tcl_TraceObjCmd	generic/tclTrace.c	/^Tcl_TraceObjCmd($/;"	f	typeref:typename:int
Tcl_TraceTypeObjCmd	generic/tclTrace.c	/^typedef int (Tcl_TraceTypeObjCmd)(Tcl_Interp *interp, enum traceOptionsEnum optionIndex,$/;"	t	typeref:typename:int ()(Tcl_Interp * interp,enum traceOptionsEnum optionIndex,Tcl_Size objc,Tcl_Obj * const objv[])	file:
Tcl_TraceVar	doc/TraceVar.3	/^.TH Tcl_TraceVar 3 9.0 Tcl "Tcl Library Procedures"$/;"	t
Tcl_TraceVar	generic/tclDecls.h	/^#define Tcl_TraceVar(/;"	d
Tcl_TraceVar2	generic/tclDecls.h	/^#define Tcl_TraceVar2 /;"	d
Tcl_TraceVar2	generic/tclTrace.c	/^Tcl_TraceVar2($/;"	f	typeref:typename:int
Tcl_TransferResult	generic/tclDecls.h	/^#define Tcl_TransferResult /;"	d
Tcl_TransferResult	generic/tclResult.c	/^Tcl_TransferResult($/;"	f	typeref:typename:void
Tcl_TranslateFileName	doc/Translate.3	/^.TH Tcl_TranslateFileName 3 8.1 Tcl "Tcl Library Procedures"$/;"	t
Tcl_TranslateFileName	generic/tclDecls.h	/^#define Tcl_TranslateFileName /;"	d
Tcl_TranslateFileName	generic/tclFileName.c	/^Tcl_TranslateFileName($/;"	f	typeref:typename:char *
Tcl_TruncateChannel	generic/tclDecls.h	/^#define Tcl_TruncateChannel /;"	d
Tcl_TruncateChannel	generic/tclIO.c	/^Tcl_TruncateChannel($/;"	f	typeref:typename:int
Tcl_TryObjCmd	generic/tclCmdMZ.c	/^Tcl_TryObjCmd($/;"	f	typeref:typename:int
Tcl_TryObjCmd	generic/tclInt.h	/^MODULE_SCOPE Tcl_ObjCmdProc Tcl_TryObjCmd;$/;"	v	typeref:typename:MODULE_SCOPE Tcl_ObjCmdProc
Tcl_Ungets	generic/tclDecls.h	/^#define Tcl_Ungets /;"	d
Tcl_Ungets	generic/tclIO.c	/^Tcl_Ungets($/;"	f	typeref:typename:Tcl_Size
Tcl_UniChar	generic/tcl.h	/^typedef int Tcl_UniChar;$/;"	t	typeref:typename:int
Tcl_UniCharAtIndex	generic/tclDecls.h	/^#define Tcl_UniCharAtIndex /;"	d
Tcl_UniCharAtIndex	generic/tclUtf.c	/^Tcl_UniCharAtIndex($/;"	f	typeref:typename:int
Tcl_UniCharIsAlnum	generic/tclDecls.h	/^#define Tcl_UniCharIsAlnum /;"	d
Tcl_UniCharIsAlnum	generic/tclUtf.c	/^Tcl_UniCharIsAlnum($/;"	f	typeref:typename:int
Tcl_UniCharIsAlpha	doc/UniCharIsAlpha.3	/^.TH Tcl_UniCharIsAlpha 3 "8.1" Tcl "Tcl Library Procedures"$/;"	t
Tcl_UniCharIsAlpha	generic/tclDecls.h	/^#define Tcl_UniCharIsAlpha /;"	d
Tcl_UniCharIsAlpha	generic/tclUtf.c	/^Tcl_UniCharIsAlpha($/;"	f	typeref:typename:int
Tcl_UniCharIsControl	generic/tclDecls.h	/^#define Tcl_UniCharIsControl /;"	d
Tcl_UniCharIsControl	generic/tclUtf.c	/^Tcl_UniCharIsControl($/;"	f	typeref:typename:int
Tcl_UniCharIsDigit	generic/tclDecls.h	/^#define Tcl_UniCharIsDigit /;"	d
Tcl_UniCharIsDigit	generic/tclUtf.c	/^Tcl_UniCharIsDigit($/;"	f	typeref:typename:int
Tcl_UniCharIsGraph	generic/tclDecls.h	/^#define Tcl_UniCharIsGraph /;"	d
Tcl_UniCharIsGraph	generic/tclUtf.c	/^Tcl_UniCharIsGraph($/;"	f	typeref:typename:int
Tcl_UniCharIsLower	generic/tclDecls.h	/^#define Tcl_UniCharIsLower /;"	d
Tcl_UniCharIsLower	generic/tclUtf.c	/^Tcl_UniCharIsLower($/;"	f	typeref:typename:int
Tcl_UniCharIsPrint	generic/tclDecls.h	/^#define Tcl_UniCharIsPrint /;"	d
Tcl_UniCharIsPrint	generic/tclUtf.c	/^Tcl_UniCharIsPrint($/;"	f	typeref:typename:int
Tcl_UniCharIsPunct	generic/tclDecls.h	/^#define Tcl_UniCharIsPunct /;"	d
Tcl_UniCharIsPunct	generic/tclUtf.c	/^Tcl_UniCharIsPunct($/;"	f	typeref:typename:int
Tcl_UniCharIsSpace	generic/tclDecls.h	/^#define Tcl_UniCharIsSpace /;"	d
Tcl_UniCharIsSpace	generic/tclUtf.c	/^Tcl_UniCharIsSpace($/;"	f	typeref:typename:int
Tcl_UniCharIsUpper	generic/tclDecls.h	/^#define Tcl_UniCharIsUpper /;"	d
Tcl_UniCharIsUpper	generic/tclUtf.c	/^Tcl_UniCharIsUpper($/;"	f	typeref:typename:int
Tcl_UniCharIsWordChar	generic/tclDecls.h	/^#define Tcl_UniCharIsWordChar /;"	d
Tcl_UniCharIsWordChar	generic/tclUtf.c	/^Tcl_UniCharIsWordChar($/;"	f	typeref:typename:int
Tcl_UniCharLen	generic/tclDecls.h	/^#define Tcl_UniCharLen /;"	d
Tcl_UniCharLen	generic/tclUtf.c	/^Tcl_UniCharLen($/;"	f	typeref:typename:Tcl_Size
Tcl_UniCharToLower	generic/tclDecls.h	/^#define Tcl_UniCharToLower /;"	d
Tcl_UniCharToLower	generic/tclUtf.c	/^Tcl_UniCharToLower($/;"	f	typeref:typename:int
Tcl_UniCharToTitle	generic/tclDecls.h	/^#define Tcl_UniCharToTitle /;"	d
Tcl_UniCharToTitle	generic/tclUtf.c	/^Tcl_UniCharToTitle($/;"	f	typeref:typename:int
Tcl_UniCharToUpper	generic/tclDecls.h	/^#define Tcl_UniCharToUpper /;"	d
Tcl_UniCharToUpper	generic/tclUtf.c	/^Tcl_UniCharToUpper($/;"	f	typeref:typename:int
Tcl_UniCharToUtf	generic/tclDecls.h	/^#define Tcl_UniCharToUtf /;"	d
Tcl_UniCharToUtf	generic/tclUtf.c	/^Tcl_UniCharToUtf($/;"	f	typeref:typename:Tcl_Size
Tcl_UniCharToUtfDString	generic/tclDecls.h	/^#define Tcl_UniCharToUtfDString /;"	d
Tcl_UniCharToUtfDString	generic/tclUtf.c	/^Tcl_UniCharToUtfDString($/;"	f	typeref:typename:char *
Tcl_UnlinkVar	generic/tclDecls.h	/^#define Tcl_UnlinkVar /;"	d
Tcl_UnlinkVar	generic/tclLink.c	/^Tcl_UnlinkVar($/;"	f	typeref:typename:void
Tcl_UnloadObjCmd	generic/tclInt.h	/^MODULE_SCOPE Tcl_ObjCmdProc Tcl_UnloadObjCmd;$/;"	v	typeref:typename:MODULE_SCOPE Tcl_ObjCmdProc
Tcl_UnloadObjCmd	generic/tclLoad.c	/^Tcl_UnloadObjCmd($/;"	f	typeref:typename:int
Tcl_UnregisterChannel	generic/tclDecls.h	/^#define Tcl_UnregisterChannel /;"	d
Tcl_UnregisterChannel	generic/tclIO.c	/^Tcl_UnregisterChannel($/;"	f	typeref:typename:int
Tcl_UnsetObjCmd	generic/tclInt.h	/^MODULE_SCOPE Tcl_ObjCmdProc Tcl_UnsetObjCmd;$/;"	v	typeref:typename:MODULE_SCOPE Tcl_ObjCmdProc
Tcl_UnsetObjCmd	generic/tclVar.c	/^Tcl_UnsetObjCmd($/;"	f	typeref:typename:int
Tcl_UnsetVar	generic/tclDecls.h	/^#define Tcl_UnsetVar(/;"	d
Tcl_UnsetVar2	generic/tclDecls.h	/^#define Tcl_UnsetVar2 /;"	d
Tcl_UnsetVar2	generic/tclVar.c	/^Tcl_UnsetVar2($/;"	f	typeref:typename:int
Tcl_UnstackChannel	generic/tclDecls.h	/^#define Tcl_UnstackChannel /;"	d
Tcl_UnstackChannel	generic/tclIO.c	/^Tcl_UnstackChannel($/;"	f	typeref:typename:int
Tcl_UntraceCommand	generic/tclDecls.h	/^#define Tcl_UntraceCommand /;"	d
Tcl_UntraceCommand	generic/tclTrace.c	/^Tcl_UntraceCommand($/;"	f	typeref:typename:void
Tcl_UntraceVar	generic/tclDecls.h	/^#define Tcl_UntraceVar(/;"	d
Tcl_UntraceVar2	generic/tclDecls.h	/^#define Tcl_UntraceVar2 /;"	d
Tcl_UntraceVar2	generic/tclTrace.c	/^Tcl_UntraceVar2($/;"	f	typeref:typename:void
Tcl_UpVar	doc/UpVar.3	/^.TH Tcl_UpVar 3 7.4 Tcl "Tcl Library Procedures"$/;"	t
Tcl_UpVar	generic/tclDecls.h	/^#define Tcl_UpVar(/;"	d
Tcl_UpVar2	generic/tclDecls.h	/^#define Tcl_UpVar2 /;"	d
Tcl_UpVar2	generic/tclVar.c	/^Tcl_UpVar2($/;"	f	typeref:typename:int
Tcl_UpdateLinkedVar	generic/tclDecls.h	/^#define Tcl_UpdateLinkedVar /;"	d
Tcl_UpdateLinkedVar	generic/tclLink.c	/^Tcl_UpdateLinkedVar($/;"	f	typeref:typename:void
Tcl_UpdateObjCmd	generic/tclEvent.c	/^Tcl_UpdateObjCmd($/;"	f	typeref:typename:int
Tcl_UpdateObjCmd	generic/tclInt.h	/^MODULE_SCOPE Tcl_ObjCmdProc Tcl_UpdateObjCmd;$/;"	v	typeref:typename:MODULE_SCOPE Tcl_ObjCmdProc
Tcl_UpdateStringProc	generic/tcl.h	/^typedef void (Tcl_UpdateStringProc) (struct Tcl_Obj *objPtr);$/;"	t	typeref:typename:void ()(struct Tcl_Obj * objPtr)
Tcl_UplevelObjCmd	generic/tclInt.h	/^MODULE_SCOPE Tcl_ObjCmdProc Tcl_UplevelObjCmd;$/;"	v	typeref:typename:MODULE_SCOPE Tcl_ObjCmdProc
Tcl_UplevelObjCmd	generic/tclProc.c	/^Tcl_UplevelObjCmd($/;"	f	typeref:typename:int
Tcl_UpvarObjCmd	generic/tclInt.h	/^MODULE_SCOPE Tcl_ObjCmdProc Tcl_UpvarObjCmd;$/;"	v	typeref:typename:MODULE_SCOPE Tcl_ObjCmdProc
Tcl_UpvarObjCmd	generic/tclVar.c	/^Tcl_UpvarObjCmd($/;"	f	typeref:typename:int
Tcl_UtfAtIndex	generic/tclDecls.h	/^#define Tcl_UtfAtIndex /;"	d
Tcl_UtfAtIndex	generic/tclUtf.c	/^Tcl_UtfAtIndex($/;"	f	typeref:typename:const char *
Tcl_UtfBackslash	generic/tclDecls.h	/^#define Tcl_UtfBackslash /;"	d
Tcl_UtfBackslash	generic/tclUtf.c	/^Tcl_UtfBackslash($/;"	f	typeref:typename:Tcl_Size
Tcl_UtfCharComplete	generic/tclDecls.h	/^#define Tcl_UtfCharComplete /;"	d
Tcl_UtfCharComplete	generic/tclUtf.c	/^Tcl_UtfCharComplete($/;"	f	typeref:typename:int
Tcl_UtfFindFirst	generic/tclDecls.h	/^#define Tcl_UtfFindFirst /;"	d
Tcl_UtfFindFirst	generic/tclUtf.c	/^Tcl_UtfFindFirst($/;"	f	typeref:typename:const char *
Tcl_UtfFindLast	generic/tclDecls.h	/^#define Tcl_UtfFindLast /;"	d
Tcl_UtfFindLast	generic/tclUtf.c	/^Tcl_UtfFindLast($/;"	f	typeref:typename:const char *
Tcl_UtfNcasecmp	generic/tclDecls.h	/^#define Tcl_UtfNcasecmp /;"	d
Tcl_UtfNcasecmp	generic/tclUtf.c	/^Tcl_UtfNcasecmp($/;"	f	typeref:typename:int
Tcl_UtfNcmp	generic/tclDecls.h	/^#define Tcl_UtfNcmp /;"	d
Tcl_UtfNcmp	generic/tclUtf.c	/^Tcl_UtfNcmp($/;"	f	typeref:typename:int
Tcl_UtfNext	generic/tclDecls.h	/^#define Tcl_UtfNext /;"	d
Tcl_UtfNext	generic/tclUtf.c	/^Tcl_UtfNext($/;"	f	typeref:typename:const char *
Tcl_UtfPrev	generic/tclDecls.h	/^#define Tcl_UtfPrev /;"	d
Tcl_UtfPrev	generic/tclUtf.c	/^Tcl_UtfPrev($/;"	f	typeref:typename:const char *
Tcl_UtfToChar16	generic/tclDecls.h	/^#define Tcl_UtfToChar16 /;"	d
Tcl_UtfToChar16	generic/tclUtf.c	/^Tcl_UtfToChar16($/;"	f	typeref:typename:Tcl_Size
Tcl_UtfToChar16DString	generic/tclDecls.h	/^#define Tcl_UtfToChar16DString /;"	d
Tcl_UtfToChar16DString	generic/tclUtf.c	/^Tcl_UtfToChar16DString($/;"	f	typeref:typename:unsigned short *
Tcl_UtfToExternal	generic/tclDecls.h	/^#define Tcl_UtfToExternal /;"	d
Tcl_UtfToExternal	generic/tclEncoding.c	/^Tcl_UtfToExternal($/;"	f	typeref:typename:int
Tcl_UtfToExternalDString	generic/tclDecls.h	/^#define Tcl_UtfToExternalDString /;"	d
Tcl_UtfToExternalDString	generic/tclEncoding.c	/^Tcl_UtfToExternalDString($/;"	f	typeref:typename:char *
Tcl_UtfToExternalDStringEx	generic/tclDecls.h	/^#define Tcl_UtfToExternalDStringEx /;"	d
Tcl_UtfToExternalDStringEx	generic/tclEncoding.c	/^Tcl_UtfToExternalDStringEx($/;"	f	typeref:typename:int
Tcl_UtfToLower	generic/tclDecls.h	/^#define Tcl_UtfToLower /;"	d
Tcl_UtfToLower	generic/tclUtf.c	/^Tcl_UtfToLower($/;"	f	typeref:typename:Tcl_Size
Tcl_UtfToTitle	generic/tclDecls.h	/^#define Tcl_UtfToTitle /;"	d
Tcl_UtfToTitle	generic/tclUtf.c	/^Tcl_UtfToTitle($/;"	f	typeref:typename:Tcl_Size
Tcl_UtfToUniChar	generic/tclDecls.h	/^#define Tcl_UtfToUniChar /;"	d
Tcl_UtfToUniChar	generic/tclUtf.c	/^Tcl_UtfToUniChar($/;"	f	typeref:typename:Tcl_Size
Tcl_UtfToUniCharDString	generic/tclDecls.h	/^#define Tcl_UtfToUniCharDString /;"	d
Tcl_UtfToUniCharDString	generic/tclUtf.c	/^Tcl_UtfToUniCharDString($/;"	f	typeref:typename:int *
Tcl_UtfToUpper	doc/ToUpper.3	/^.TH Tcl_UtfToUpper 3 "8.1" Tcl "Tcl Library Procedures"$/;"	t
Tcl_UtfToUpper	generic/tclDecls.h	/^#define Tcl_UtfToUpper /;"	d
Tcl_UtfToUpper	generic/tclUtf.c	/^Tcl_UtfToUpper($/;"	f	typeref:typename:Tcl_Size
Tcl_UtfToWChar	generic/tclDecls.h	/^#   define Tcl_UtfToWChar /;"	d
Tcl_UtfToWCharDString	generic/tclDecls.h	/^#   define Tcl_UtfToWCharDString /;"	d
Tcl_UtfToWCharDString	win/tclWinDde.c	/^#   define Tcl_UtfToWCharDString(/;"	d	file:
Tcl_UtfToWCharDString	win/tclWinReg.c	/^#   define Tcl_UtfToWCharDString /;"	d	file:
Tcl_UtfToWCharDString	win/tclWinReg.c	/^#   define Tcl_UtfToWCharDString(/;"	d	file:
Tcl_ValidateAllMemory	generic/tcl.h	/^#   define Tcl_ValidateAllMemory(/;"	d
Tcl_ValidateAllMemory	generic/tclCkalloc.c	/^Tcl_ValidateAllMemory($/;"	f	typeref:typename:void
Tcl_ValidateAllMemory	generic/tclDecls.h	/^#define Tcl_ValidateAllMemory /;"	d
Tcl_Var	generic/tcl.h	/^typedef struct Tcl_Var_ *Tcl_Var;$/;"	t	typeref:struct:Tcl_Var_ *
Tcl_VarEval	generic/tclBasic.c	/^Tcl_VarEval($/;"	f	typeref:typename:int
Tcl_VarEval	generic/tclDecls.h	/^#define Tcl_VarEval /;"	d
Tcl_VarTraceInfo	generic/tclDecls.h	/^#define Tcl_VarTraceInfo(/;"	d
Tcl_VarTraceInfo2	generic/tclDecls.h	/^#define Tcl_VarTraceInfo2 /;"	d
Tcl_VarTraceInfo2	generic/tclTrace.c	/^Tcl_VarTraceInfo2($/;"	f	typeref:typename:void *
Tcl_VarTraceProc	generic/tcl.h	/^typedef char * (Tcl_VarTraceProc) (void *clientData, Tcl_Interp *interp,$/;"	t	typeref:typename:char * ()(void * clientData,Tcl_Interp * interp,const char * part1,const char * part2,int flags)
Tcl_VariableObjCmd	generic/tclInt.h	/^MODULE_SCOPE Tcl_ObjCmdProc Tcl_VariableObjCmd;$/;"	v	typeref:typename:MODULE_SCOPE Tcl_ObjCmdProc
Tcl_VariableObjCmd	generic/tclVar.c	/^Tcl_VariableObjCmd($/;"	f	typeref:typename:int
Tcl_VwaitObjCmd	generic/tclEvent.c	/^Tcl_VwaitObjCmd($/;"	f	typeref:typename:int
Tcl_VwaitObjCmd	generic/tclInt.h	/^MODULE_SCOPE Tcl_ObjCmdProc Tcl_VwaitObjCmd;$/;"	v	typeref:typename:MODULE_SCOPE Tcl_ObjCmdProc
Tcl_WCharLen	generic/tclDecls.h	/^#   define Tcl_WCharLen /;"	d
Tcl_WCharToUtfDString	generic/tclDecls.h	/^#   define Tcl_WCharToUtfDString /;"	d
Tcl_WCharToUtfDString	win/tclWinDde.c	/^#   define Tcl_WCharToUtfDString(/;"	d	file:
Tcl_WCharToUtfDString	win/tclWinReg.c	/^#   define Tcl_WCharToUtfDString /;"	d	file:
Tcl_WCharToUtfDString	win/tclWinReg.c	/^#   define Tcl_WCharToUtfDString(/;"	d	file:
Tcl_WaitForEvent	generic/tclDecls.h	/^#define Tcl_WaitForEvent /;"	d
Tcl_WaitForEvent	generic/tclNotify.c	/^Tcl_WaitForEvent($/;"	f	typeref:typename:int
Tcl_WaitForEventProc	generic/tcl.h	/^typedef int (Tcl_WaitForEventProc) (const Tcl_Time *timePtr);$/;"	t	typeref:typename:int ()(const Tcl_Time * timePtr)
Tcl_WaitPid	generic/tclDecls.h	/^#define Tcl_WaitPid /;"	d
Tcl_WaitPid	unix/tclUnixPipe.c	/^Tcl_WaitPid($/;"	f	typeref:typename:Tcl_Pid
Tcl_WaitPid	win/tclWinPipe.c	/^Tcl_WaitPid($/;"	f	typeref:typename:Tcl_Pid
Tcl_WhileObjCmd	generic/tclCmdMZ.c	/^Tcl_WhileObjCmd($/;"	f	typeref:typename:int
Tcl_WhileObjCmd	generic/tclInt.h	/^MODULE_SCOPE Tcl_ObjCmdProc Tcl_WhileObjCmd;$/;"	v	typeref:typename:MODULE_SCOPE Tcl_ObjCmdProc
Tcl_WideAsDouble	generic/tcl.h	/^#define Tcl_WideAsDouble(/;"	d
Tcl_WideAsLong	generic/tcl.h	/^#define Tcl_WideAsLong(/;"	d
Tcl_WideInt	generic/tcl.h	/^typedef TCL_WIDE_INT_TYPE		Tcl_WideInt;$/;"	t	typeref:typename:TCL_WIDE_INT_TYPE
Tcl_WideUInt	generic/tcl.h	/^typedef unsigned TCL_WIDE_INT_TYPE	Tcl_WideUInt;$/;"	t	typeref:typename:unsigned TCL_WIDE_INT_TYPE
Tcl_WinConvertError	generic/tclPlatDecls.h	/^#define Tcl_WinConvertError /;"	d
Tcl_WinConvertError	generic/tclStubInit.c	/^# define Tcl_WinConvertError /;"	d	file:
Tcl_WinConvertError	win/tclWinError.c	/^Tcl_WinConvertError($/;"	f	typeref:typename:void
Tcl_WinTCharToUtf	generic/tclPlatDecls.h	/^#define Tcl_WinTCharToUtf(/;"	d
Tcl_WinUtfToTChar	generic/tclPlatDecls.h	/^#define Tcl_WinUtfToTChar(/;"	d
Tcl_Write	generic/tclDecls.h	/^#define Tcl_Write /;"	d
Tcl_Write	generic/tclIO.c	/^Tcl_Write($/;"	f	typeref:typename:Tcl_Size
Tcl_WriteChars	generic/tclDecls.h	/^#define Tcl_WriteChars /;"	d
Tcl_WriteChars	generic/tclIO.c	/^Tcl_WriteChars($/;"	f	typeref:typename:Tcl_Size
Tcl_WriteObj	generic/tclDecls.h	/^#define Tcl_WriteObj /;"	d
Tcl_WriteObj	generic/tclIO.c	/^Tcl_WriteObj($/;"	f	typeref:typename:Tcl_Size
Tcl_WriteRaw	generic/tclDecls.h	/^#define Tcl_WriteRaw /;"	d
Tcl_WriteRaw	generic/tclIO.c	/^Tcl_WriteRaw($/;"	f	typeref:typename:Tcl_Size
Tcl_WrongNumArgs	doc/WrongNumArgs.3	/^.TH Tcl_WrongNumArgs 3 8.0 Tcl "Tcl Library Procedures"$/;"	t
Tcl_WrongNumArgs	generic/tclDecls.h	/^#define Tcl_WrongNumArgs /;"	d
Tcl_WrongNumArgs	generic/tclIndexObj.c	/^Tcl_WrongNumArgs($/;"	f	typeref:typename:void
Tcl_ZlibAdler32	generic/tclDecls.h	/^#define Tcl_ZlibAdler32 /;"	d
Tcl_ZlibAdler32	generic/tclZlib.c	/^Tcl_ZlibAdler32($/;"	f	typeref:typename:unsigned int
Tcl_ZlibCRC32	generic/tclDecls.h	/^#define Tcl_ZlibCRC32 /;"	d
Tcl_ZlibCRC32	generic/tclZlib.c	/^Tcl_ZlibCRC32($/;"	f	typeref:typename:unsigned int
Tcl_ZlibDeflate	generic/tclDecls.h	/^#define Tcl_ZlibDeflate /;"	d
Tcl_ZlibDeflate	generic/tclZlib.c	/^Tcl_ZlibDeflate($/;"	f	typeref:typename:int
Tcl_ZlibInflate	generic/tclDecls.h	/^#define Tcl_ZlibInflate /;"	d
Tcl_ZlibInflate	generic/tclZlib.c	/^Tcl_ZlibInflate($/;"	f	typeref:typename:int
Tcl_ZlibStream	generic/tcl.h	/^typedef struct Tcl_ZLibStream_ *Tcl_ZlibStream;$/;"	t	typeref:struct:Tcl_ZLibStream_ *
Tcl_ZlibStreamChecksum	generic/tclDecls.h	/^#define Tcl_ZlibStreamChecksum /;"	d
Tcl_ZlibStreamChecksum	generic/tclZlib.c	/^Tcl_ZlibStreamChecksum($/;"	f	typeref:typename:int
Tcl_ZlibStreamClose	generic/tclDecls.h	/^#define Tcl_ZlibStreamClose /;"	d
Tcl_ZlibStreamClose	generic/tclZlib.c	/^Tcl_ZlibStreamClose($/;"	f	typeref:typename:int
Tcl_ZlibStreamEof	generic/tclDecls.h	/^#define Tcl_ZlibStreamEof /;"	d
Tcl_ZlibStreamEof	generic/tclZlib.c	/^Tcl_ZlibStreamEof($/;"	f	typeref:typename:int
Tcl_ZlibStreamGet	generic/tclDecls.h	/^#define Tcl_ZlibStreamGet /;"	d
Tcl_ZlibStreamGet	generic/tclZlib.c	/^Tcl_ZlibStreamGet($/;"	f	typeref:typename:int
Tcl_ZlibStreamGetCommandName	generic/tclDecls.h	/^#define Tcl_ZlibStreamGetCommandName /;"	d
Tcl_ZlibStreamGetCommandName	generic/tclZlib.c	/^Tcl_ZlibStreamGetCommandName($/;"	f	typeref:typename:Tcl_Obj *
Tcl_ZlibStreamInit	generic/tclDecls.h	/^#define Tcl_ZlibStreamInit /;"	d
Tcl_ZlibStreamInit	generic/tclZlib.c	/^Tcl_ZlibStreamInit($/;"	f	typeref:typename:int
Tcl_ZlibStreamPut	generic/tclDecls.h	/^#define Tcl_ZlibStreamPut /;"	d
Tcl_ZlibStreamPut	generic/tclZlib.c	/^Tcl_ZlibStreamPut($/;"	f	typeref:typename:int
Tcl_ZlibStreamReset	generic/tclDecls.h	/^#define Tcl_ZlibStreamReset /;"	d
Tcl_ZlibStreamReset	generic/tclZlib.c	/^Tcl_ZlibStreamReset($/;"	f	typeref:typename:int
Tcl_ZlibStreamSetCompressionDictionary	generic/tclDecls.h	/^#define Tcl_ZlibStreamSetCompressionDictionary /;"	d
Tcl_ZlibStreamSetCompressionDictionary	generic/tclZlib.c	/^Tcl_ZlibStreamSetCompressionDictionary($/;"	f	typeref:typename:void
TclpAlertNotifier	macosx/tclMacOSXNotify.c	/^TclpAlertNotifier($/;"	f	typeref:typename:void
TclpAlertNotifier	unix/tclUnixNotfy.c	/^TclpAlertNotifier($/;"	f	typeref:typename:void
TclpAlertNotifier	win/tclWinNotify.c	/^TclpAlertNotifier($/;"	f	typeref:typename:void
TclpAlloc	generic/tclAlloc.c	/^TclpAlloc($/;"	f	typeref:typename:void *
TclpAlloc	generic/tclIntDecls.h	/^#define TclpAlloc /;"	d
TclpAlloc	generic/tclThreadAlloc.c	/^TclpAlloc($/;"	f	typeref:typename:void *
TclpCloseFile	generic/tclIntPlatDecls.h	/^#define TclpCloseFile /;"	d
TclpCloseFile	unix/tclUnixPipe.c	/^TclpCloseFile($/;"	f	typeref:typename:int
TclpCloseFile	win/tclWinPipe.c	/^TclpCloseFile($/;"	f	typeref:typename:int
TclpCreateCommandChannel	generic/tclIntPlatDecls.h	/^#define TclpCreateCommandChannel /;"	d
TclpCreateCommandChannel	unix/tclUnixPipe.c	/^TclpCreateCommandChannel($/;"	f	typeref:typename:Tcl_Channel
TclpCreateCommandChannel	win/tclWinPipe.c	/^TclpCreateCommandChannel($/;"	f	typeref:typename:Tcl_Channel
TclpCreateFileHandler	macosx/tclMacOSXNotify.c	/^TclpCreateFileHandler($/;"	f	typeref:typename:void
TclpCreateFileHandler	unix/tclEpollNotfy.c	/^TclpCreateFileHandler($/;"	f	typeref:typename:void
TclpCreateFileHandler	unix/tclKqueueNotfy.c	/^TclpCreateFileHandler($/;"	f	typeref:typename:void
TclpCreateFileHandler	unix/tclSelectNotfy.c	/^TclpCreateFileHandler($/;"	f	typeref:typename:void
TclpCreatePipe	generic/tclIntPlatDecls.h	/^#define TclpCreatePipe /;"	d
TclpCreatePipe	unix/tclUnixPipe.c	/^TclpCreatePipe($/;"	f	typeref:typename:int
TclpCreatePipe	win/tclWinPipe.c	/^TclpCreatePipe($/;"	f	typeref:typename:int
TclpCreateProcess	generic/tclIntPlatDecls.h	/^#define TclpCreateProcess /;"	d
TclpCreateProcess	unix/tclUnixPipe.c	/^TclpCreateProcess($/;"	f	typeref:typename:int
TclpCreateProcess	win/tclWinPipe.c	/^TclpCreateProcess($/;"	f	typeref:typename:int
TclpCreateTempFile	generic/tclIntPlatDecls.h	/^#define TclpCreateTempFile /;"	d
TclpCreateTempFile	unix/tclUnixPipe.c	/^TclpCreateTempFile($/;"	f	typeref:typename:TclFile
TclpCreateTempFile	win/tclWinPipe.c	/^TclpCreateTempFile($/;"	f	typeref:typename:TclFile
TclpCreateTemporaryDirectory	generic/tclIntDecls.h	/^#define TclpCreateTemporaryDirectory /;"	d
TclpCreateTemporaryDirectory	unix/tclUnixFCmd.c	/^TclpCreateTemporaryDirectory($/;"	f	typeref:typename:Tcl_Obj *
TclpCreateTemporaryDirectory	win/tclWinFCmd.c	/^TclpCreateTemporaryDirectory($/;"	f	typeref:typename:Tcl_Obj *
TclpDeleteFile	unix/tclUnixFCmd.c	/^TclpDeleteFile($/;"	f	typeref:typename:int
TclpDeleteFile	win/tclWinFCmd.c	/^TclpDeleteFile($/;"	f	typeref:typename:int
TclpDeleteFileHandler	macosx/tclMacOSXNotify.c	/^TclpDeleteFileHandler($/;"	f	typeref:typename:void
TclpDeleteFileHandler	unix/tclEpollNotfy.c	/^TclpDeleteFileHandler($/;"	f	typeref:typename:void
TclpDeleteFileHandler	unix/tclKqueueNotfy.c	/^TclpDeleteFileHandler($/;"	f	typeref:typename:void
TclpDeleteFileHandler	unix/tclSelectNotfy.c	/^TclpDeleteFileHandler($/;"	f	typeref:typename:void
TclpDlopen	generic/tclLoadNone.c	/^TclpDlopen($/;"	f	typeref:typename:int
TclpDlopen	unix/tclLoadDl.c	/^TclpDlopen($/;"	f	typeref:typename:int
TclpDlopen	unix/tclLoadDyld.c	/^TclpDlopen($/;"	f	typeref:typename:MODULE_SCOPE int
TclpDlopen	unix/tclLoadNext.c	/^TclpDlopen($/;"	f	typeref:typename:int
TclpDlopen	unix/tclLoadOSF.c	/^TclpDlopen($/;"	f	typeref:typename:int
TclpDlopen	unix/tclLoadShl.c	/^TclpDlopen($/;"	f	typeref:typename:int
TclpDlopen	win/tclWinLoad.c	/^TclpDlopen($/;"	f	typeref:typename:int
TclpFilesystemPathType	generic/tclIOUtil.c	/^Tcl_FSFilesystemPathTypeProc	TclpFilesystemPathType;$/;"	v	typeref:typename:Tcl_FSFilesystemPathTypeProc
TclpFilesystemPathType	unix/tclUnixFile.c	/^TclpFilesystemPathType($/;"	f	typeref:typename:Tcl_Obj *
TclpFilesystemPathType	win/tclWinFile.c	/^TclpFilesystemPathType($/;"	f	typeref:typename:Tcl_Obj *
TclpFinalizeCondition	unix/tclUnixThrd.c	/^TclpFinalizeCondition($/;"	f	typeref:typename:void
TclpFinalizeCondition	win/tclWinThrd.c	/^TclpFinalizeCondition($/;"	f	typeref:typename:void
TclpFinalizeMutex	unix/tclUnixThrd.c	/^TclpFinalizeMutex($/;"	f	typeref:typename:void
TclpFinalizeMutex	win/tclWinThrd.c	/^TclpFinalizeMutex($/;"	f	typeref:typename:void
TclpFinalizeNotifier	macosx/tclMacOSXNotify.c	/^TclpFinalizeNotifier($/;"	f	typeref:typename:void
TclpFinalizeNotifier	unix/tclEpollNotfy.c	/^TclpFinalizeNotifier($/;"	f	typeref:typename:void
TclpFinalizeNotifier	unix/tclKqueueNotfy.c	/^TclpFinalizeNotifier($/;"	f	typeref:typename:void
TclpFinalizeNotifier	unix/tclSelectNotfy.c	/^TclpFinalizeNotifier($/;"	f	typeref:typename:void
TclpFinalizeNotifier	win/tclWinNotify.c	/^TclpFinalizeNotifier($/;"	f	typeref:typename:void
TclpFinalizePipes	unix/tclUnixPipe.c	/^TclpFinalizePipes(void)$/;"	f	typeref:typename:void
TclpFinalizePipes	win/tclWinPipe.c	/^TclpFinalizePipes(void)$/;"	f	typeref:typename:void
TclpFinalizeSockets	unix/tclUnixSock.c	/^TclpFinalizeSockets(void)$/;"	f	typeref:typename:void
TclpFinalizeSockets	win/tclWinSock.c	/^TclpFinalizeSockets(void)$/;"	f	typeref:typename:void
TclpFindExecutable	generic/tclIntDecls.h	/^#define TclpFindExecutable /;"	d
TclpFindExecutable	unix/tclUnixFile.c	/^TclpFindExecutable($/;"	f	typeref:typename:void
TclpFindExecutable	win/tclWinFile.c	/^TclpFindExecutable($/;"	f	typeref:typename:void
TclpFindVariable	unix/tclUnixInit.c	/^TclpFindVariable($/;"	f	typeref:typename:Tcl_Size
TclpFindVariable	win/tclWinInit.c	/^TclpFindVariable($/;"	f	typeref:typename:Tcl_Size
TclpFree	generic/tclAlloc.c	/^TclpFree($/;"	f	typeref:typename:void
TclpFree	generic/tclIntDecls.h	/^#define TclpFree /;"	d
TclpFree	generic/tclThreadAlloc.c	/^TclpFree($/;"	f	typeref:typename:void
TclpFreeAllocCache	unix/tclUnixThrd.c	/^TclpFreeAllocCache($/;"	f	typeref:typename:void
TclpFreeAllocCache	win/tclWinThrd.c	/^TclpFreeAllocCache($/;"	f	typeref:typename:void
TclpFreeAllocMutex	unix/tclUnixThrd.c	/^TclpFreeAllocMutex($/;"	f	typeref:typename:void
TclpFreeAllocMutex	win/tclWinThrd.c	/^TclpFreeAllocMutex($/;"	f	typeref:typename:void
TclpGetAllocCache	unix/tclUnixThrd.c	/^TclpGetAllocCache(void)$/;"	f	typeref:typename:void *
TclpGetAllocCache	win/tclWinThrd.c	/^TclpGetAllocCache(void)$/;"	f	typeref:typename:void *
TclpGetClicks	generic/tclIntDecls.h	/^#define TclpGetClicks /;"	d
TclpGetClicks	unix/tclUnixTime.c	/^TclpGetClicks(void)$/;"	f	typeref:typename:unsigned long long
TclpGetClicks	win/tclWinTime.c	/^TclpGetClicks(void)$/;"	f	typeref:typename:unsigned long long
TclpGetCwd	generic/tclIntDecls.h	/^#define TclpGetCwd /;"	d
TclpGetCwd	unix/tclUnixFile.c	/^TclpGetCwd($/;"	f	typeref:typename:const char *
TclpGetCwd	win/tclWinFile.c	/^TclpGetCwd($/;"	f	typeref:typename:const char *
TclpGetDefaultStdChannel	generic/tclIntDecls.h	/^#define TclpGetDefaultStdChannel /;"	d
TclpGetDefaultStdChannel	unix/tclUnixChan.c	/^TclpGetDefaultStdChannel($/;"	f	typeref:typename:Tcl_Channel
TclpGetDefaultStdChannel	win/tclWinChan.c	/^TclpGetDefaultStdChannel($/;"	f	typeref:typename:Tcl_Channel
TclpGetGrGid	unix/tclUnixCompat.c	/^TclpGetGrGid($/;"	f	typeref:struct:group *
TclpGetGrNam	unix/tclUnixCompat.c	/^TclpGetGrNam($/;"	f	typeref:struct:group *
TclpGetHostByAddr	unix/tclUnixCompat.c	/^TclpGetHostByAddr($/;"	f	typeref:struct:hostent *
TclpGetHostByName	unix/tclUnixCompat.c	/^TclpGetHostByName($/;"	f	typeref:struct:hostent *
TclpGetMicroseconds	unix/tclUnixTime.c	/^TclpGetMicroseconds(void)$/;"	f	typeref:typename:long long
TclpGetMicroseconds	win/tclWinTime.c	/^TclpGetMicroseconds(void)$/;"	f	typeref:typename:long long
TclpGetNativeCwd	unix/tclUnixFile.c	/^TclpGetNativeCwd($/;"	f	typeref:typename:void *
TclpGetNativeCwd	win/tclWinFile.c	/^TclpGetNativeCwd($/;"	f	typeref:typename:void *
TclpGetNativePathType	generic/tclFileName.c	/^TclpGetNativePathType($/;"	f	typeref:typename:Tcl_PathType
TclpGetPid	generic/tclIntPlatDecls.h	/^#   define TclpGetPid(/;"	d
TclpGetPid	generic/tclIntPlatDecls.h	/^#define TclpGetPid /;"	d
TclpGetPid	generic/tclStubInit.c	/^#   define TclpGetPid /;"	d	file:
TclpGetPid	generic/tclStubInit.c	/^TclpGetPid($/;"	f	typeref:typename:Tcl_Size
TclpGetPid	win/tclWinPipe.c	/^TclpGetPid($/;"	f	typeref:typename:Tcl_Size
TclpGetPwNam	unix/tclUnixCompat.c	/^TclpGetPwNam($/;"	f	typeref:struct:passwd *
TclpGetPwUid	unix/tclUnixCompat.c	/^TclpGetPwUid($/;"	f	typeref:struct:passwd *
TclpGetSeconds	generic/tclIntDecls.h	/^#define TclpGetSeconds /;"	d
TclpGetSeconds	unix/tclUnixTime.c	/^TclpGetSeconds(void)$/;"	f	typeref:typename:unsigned long long
TclpGetSeconds	win/tclWinTime.c	/^TclpGetSeconds(void)$/;"	f	typeref:typename:unsigned long long
TclpGetUserHome	generic/tclIntDecls.h	/^#define TclpGetUserHome /;"	d
TclpGetUserHome	unix/tclUnixFile.c	/^TclpGetUserHome($/;"	f	typeref:typename:const char *
TclpGetUserHome	win/tclWinFile.c	/^TclpGetUserHome($/;"	f	typeref:typename:const char *
TclpGetUserName	win/tclWinInit.c	/^TclpGetUserName($/;"	f	typeref:typename:const char *
TclpGetWideClicks	unix/tclUnixTime.c	/^TclpGetWideClicks(void)$/;"	f	typeref:typename:long long
TclpGetWideClicks	win/tclWinTime.c	/^TclpGetWideClicks(void)$/;"	f	typeref:typename:long long
TclpGlobalLock	unix/tclUnixThrd.c	/^TclpGlobalLock(void)$/;"	f	typeref:typename:void
TclpGlobalLock	win/tclWinThrd.c	/^TclpGlobalLock(void)$/;"	f	typeref:typename:void
TclpGlobalUnlock	unix/tclUnixThrd.c	/^TclpGlobalUnlock(void)$/;"	f	typeref:typename:void
TclpGlobalUnlock	win/tclWinThrd.c	/^TclpGlobalUnlock(void)$/;"	f	typeref:typename:void
TclpInetNtoa	generic/tclIntPlatDecls.h	/^#define TclpInetNtoa /;"	d
TclpInitAllocCache	unix/tclUnixThrd.c	/^TclpInitAllocCache(void)$/;"	f	typeref:typename:void
TclpInitAllocCache	win/tclWinThrd.c	/^TclpInitAllocCache(void)$/;"	f	typeref:typename:void
TclpInitLibraryPath	unix/tclUnixInit.c	/^TclpInitLibraryPath($/;"	f	typeref:typename:void
TclpInitLibraryPath	win/tclWinInit.c	/^TclpInitLibraryPath($/;"	f	typeref:typename:void
TclpInitLock	unix/tclUnixThrd.c	/^TclpInitLock(void)$/;"	f	typeref:typename:void
TclpInitLock	win/tclWinThrd.c	/^TclpInitLock(void)$/;"	f	typeref:typename:void
TclpInitNotifier	macosx/tclMacOSXNotify.c	/^TclpInitNotifier(void)$/;"	f	typeref:typename:void *
TclpInitNotifier	unix/tclEpollNotfy.c	/^TclpInitNotifier(void)$/;"	f	typeref:typename:void *
TclpInitNotifier	unix/tclKqueueNotfy.c	/^TclpInitNotifier(void)$/;"	f	typeref:typename:void *
TclpInitNotifier	unix/tclSelectNotfy.c	/^TclpInitNotifier(void)$/;"	f	typeref:typename:void *
TclpInitNotifier	win/tclWinNotify.c	/^TclpInitNotifier(void)$/;"	f	typeref:typename:void *
TclpInitPlatform	unix/tclUnixInit.c	/^TclpInitPlatform(void)$/;"	f	typeref:typename:void
TclpInitPlatform	win/tclWinInit.c	/^TclpInitPlatform(void)$/;"	f	typeref:typename:void
TclpInitUnlock	unix/tclUnixThrd.c	/^TclpInitUnlock(void)$/;"	f	typeref:typename:void
TclpInitUnlock	win/tclWinThrd.c	/^TclpInitUnlock(void)$/;"	f	typeref:typename:void
TclpIsAtty	generic/tclIntPlatDecls.h	/^#define TclpIsAtty /;"	d
TclpIsAtty	generic/tclStubInit.c	/^#   define TclpIsAtty /;"	d	file:
TclpLoadMemory	generic/tclLoadNone.c	/^TclpLoadMemory($/;"	f	typeref:typename:MODULE_SCOPE int
TclpLoadMemory	unix/tclLoadDyld.c	/^TclpLoadMemory($/;"	f	typeref:typename:MODULE_SCOPE int
TclpLoadMemoryGetBuffer	generic/tclLoadNone.c	/^TclpLoadMemoryGetBuffer($/;"	f	typeref:typename:MODULE_SCOPE void *
TclpLoadMemoryGetBuffer	unix/tclLoadDyld.c	/^TclpLoadMemoryGetBuffer($/;"	f	typeref:typename:MODULE_SCOPE void *
TclpMakeFile	generic/tclIntPlatDecls.h	/^#define TclpMakeFile /;"	d
TclpMakeFile	unix/tclUnixPipe.c	/^TclpMakeFile($/;"	f	typeref:typename:TclFile
TclpMakeFile	win/tclWinPipe.c	/^TclpMakeFile($/;"	f	typeref:typename:TclFile
TclpMakeTcpClientChannelMode	unix/tclUnixSock.c	/^TclpMakeTcpClientChannelMode($/;"	f	typeref:typename:void *
TclpMatchInDirectory	generic/tclIOUtil.c	/^Tcl_FSMatchInDirectoryProc	TclpMatchInDirectory;$/;"	v	typeref:typename:Tcl_FSMatchInDirectoryProc
TclpMatchInDirectory	unix/tclUnixFile.c	/^TclpMatchInDirectory($/;"	f	typeref:typename:int
TclpMatchInDirectory	win/tclWinFile.c	/^TclpMatchInDirectory($/;"	f	typeref:typename:int
TclpNativeJoinPath	generic/tclFileName.c	/^TclpNativeJoinPath($/;"	f	typeref:typename:void
TclpNativeSplitPath	generic/tclFileName.c	/^TclpNativeSplitPath($/;"	f	typeref:typename:Tcl_Obj *
TclpNativeToNormalized	generic/tclIOUtil.c	/^Tcl_FSInternalToNormalizedProc	TclpNativeToNormalized;$/;"	v	typeref:typename:Tcl_FSInternalToNormalizedProc
TclpNativeToNormalized	unix/tclUnixFile.c	/^TclpNativeToNormalized($/;"	f	typeref:typename:Tcl_Obj *
TclpNativeToNormalized	win/tclWinFile.c	/^TclpNativeToNormalized($/;"	f	typeref:typename:Tcl_Obj *
TclpNewAllocMutex	unix/tclUnixThrd.c	/^TclpNewAllocMutex(void)$/;"	f	typeref:typename:Tcl_Mutex *
TclpNewAllocMutex	win/tclWinThrd.c	/^TclpNewAllocMutex(void)$/;"	f	typeref:typename:Tcl_Mutex *
TclpNotifierData	macosx/tclMacOSXNotify.c	/^TclpNotifierData(void)$/;"	f	typeref:typename:void *
TclpNotifierData	unix/tclUnixNotfy.c	/^TclpNotifierData(void)$/;"	f	typeref:typename:void *
TclpNotifierData	win/tclWinNotify.c	/^TclpNotifierData(void)$/;"	f	typeref:typename:void *
TclpObjAccess	generic/tclIOUtil.c	/^Tcl_FSAccessProc		TclpObjAccess;$/;"	v	typeref:typename:Tcl_FSAccessProc
TclpObjAccess	generic/tclIntDecls.h	/^#define TclpObjAccess /;"	d
TclpObjAccess	unix/tclUnixFile.c	/^TclpObjAccess($/;"	f	typeref:typename:int
TclpObjAccess	win/tclWinFile.c	/^TclpObjAccess($/;"	f	typeref:typename:int
TclpObjChdir	generic/tclIOUtil.c	/^Tcl_FSChdirProc			TclpObjChdir;$/;"	v	typeref:typename:Tcl_FSChdirProc
TclpObjChdir	unix/tclUnixFile.c	/^TclpObjChdir($/;"	f	typeref:typename:int
TclpObjChdir	win/tclWinFile.c	/^TclpObjChdir($/;"	f	typeref:typename:int
TclpObjCopyDirectory	generic/tclIOUtil.c	/^Tcl_FSCopyDirectoryProc		TclpObjCopyDirectory;$/;"	v	typeref:typename:Tcl_FSCopyDirectoryProc
TclpObjCopyDirectory	generic/tclIntDecls.h	/^#define TclpObjCopyDirectory /;"	d
TclpObjCopyDirectory	unix/tclUnixFCmd.c	/^TclpObjCopyDirectory($/;"	f	typeref:typename:int
TclpObjCopyDirectory	win/tclWinFCmd.c	/^TclpObjCopyDirectory($/;"	f	typeref:typename:int
TclpObjCopyFile	generic/tclIOUtil.c	/^Tcl_FSCopyFileProc		TclpObjCopyFile;$/;"	v	typeref:typename:Tcl_FSCopyFileProc
TclpObjCopyFile	generic/tclIntDecls.h	/^#define TclpObjCopyFile /;"	d
TclpObjCopyFile	unix/tclUnixFCmd.c	/^TclpObjCopyFile($/;"	f	typeref:typename:int
TclpObjCopyFile	win/tclWinFCmd.c	/^TclpObjCopyFile($/;"	f	typeref:typename:int
TclpObjCreateDirectory	generic/tclIOUtil.c	/^Tcl_FSCreateDirectoryProc	TclpObjCreateDirectory;$/;"	v	typeref:typename:Tcl_FSCreateDirectoryProc
TclpObjCreateDirectory	generic/tclIntDecls.h	/^#define TclpObjCreateDirectory /;"	d
TclpObjCreateDirectory	unix/tclUnixFCmd.c	/^TclpObjCreateDirectory($/;"	f	typeref:typename:int
TclpObjCreateDirectory	win/tclWinFCmd.c	/^TclpObjCreateDirectory($/;"	f	typeref:typename:int
TclpObjDeleteFile	generic/tclIOUtil.c	/^Tcl_FSDeleteFileProc		TclpObjDeleteFile;$/;"	v	typeref:typename:Tcl_FSDeleteFileProc
TclpObjDeleteFile	generic/tclIntDecls.h	/^#define TclpObjDeleteFile /;"	d
TclpObjDeleteFile	unix/tclUnixFCmd.c	/^TclpObjDeleteFile($/;"	f	typeref:typename:int
TclpObjDeleteFile	win/tclWinFCmd.c	/^TclpObjDeleteFile($/;"	f	typeref:typename:int
TclpObjLink	generic/tclIOUtil.c	/^Tcl_FSLinkProc			TclpObjLink;$/;"	v	typeref:typename:Tcl_FSLinkProc
TclpObjLink	unix/tclUnixFile.c	/^TclpObjLink($/;"	f	typeref:typename:Tcl_Obj *
TclpObjLink	win/tclWinFile.c	/^TclpObjLink($/;"	f	typeref:typename:Tcl_Obj *
TclpObjListVolumes	generic/tclIOUtil.c	/^Tcl_FSListVolumesProc		TclpObjListVolumes;$/;"	v	typeref:typename:Tcl_FSListVolumesProc
TclpObjListVolumes	unix/tclUnixFCmd.c	/^TclpObjListVolumes(void)$/;"	f	typeref:typename:Tcl_Obj *
TclpObjListVolumes	win/tclWinFCmd.c	/^TclpObjListVolumes(void)$/;"	f	typeref:typename:Tcl_Obj *
TclpObjLstat	generic/tclIOUtil.c	/^Tcl_FSLstatProc			TclpObjLstat;$/;"	v	typeref:typename:Tcl_FSLstatProc
TclpObjLstat	unix/tclUnixFile.c	/^TclpObjLstat($/;"	f	typeref:typename:int
TclpObjLstat	win/tclWinFile.c	/^TclpObjLstat($/;"	f	typeref:typename:int
TclpObjNormalizePath	unix/tclUnixFCmd.c	/^TclpObjNormalizePath($/;"	f	typeref:typename:int
TclpObjNormalizePath	win/tclWinFile.c	/^TclpObjNormalizePath($/;"	f	typeref:typename:int
TclpObjRemoveDirectory	generic/tclIOUtil.c	/^Tcl_FSRemoveDirectoryProc	TclpObjRemoveDirectory;$/;"	v	typeref:typename:Tcl_FSRemoveDirectoryProc
TclpObjRemoveDirectory	generic/tclIntDecls.h	/^#define TclpObjRemoveDirectory /;"	d
TclpObjRemoveDirectory	unix/tclUnixFCmd.c	/^TclpObjRemoveDirectory($/;"	f	typeref:typename:int
TclpObjRemoveDirectory	win/tclWinFCmd.c	/^TclpObjRemoveDirectory($/;"	f	typeref:typename:int
TclpObjRenameFile	generic/tclIOUtil.c	/^Tcl_FSRenameFileProc		TclpObjRenameFile;$/;"	v	typeref:typename:Tcl_FSRenameFileProc
TclpObjRenameFile	generic/tclIntDecls.h	/^#define TclpObjRenameFile /;"	d
TclpObjRenameFile	unix/tclUnixFCmd.c	/^TclpObjRenameFile($/;"	f	typeref:typename:int
TclpObjRenameFile	win/tclWinFCmd.c	/^TclpObjRenameFile($/;"	f	typeref:typename:int
TclpObjStat	generic/tclIOUtil.c	/^Tcl_FSStatProc			TclpObjStat;$/;"	v	typeref:typename:Tcl_FSStatProc
TclpObjStat	generic/tclIntDecls.h	/^#define TclpObjStat /;"	d
TclpObjStat	unix/tclUnixFile.c	/^TclpObjStat($/;"	f	typeref:typename:int
TclpObjStat	win/tclWinFile.c	/^TclpObjStat($/;"	f	typeref:typename:int
TclpOpenFile	generic/tclIntPlatDecls.h	/^#define TclpOpenFile /;"	d
TclpOpenFile	unix/tclUnixPipe.c	/^TclpOpenFile($/;"	f	typeref:typename:TclFile
TclpOpenFile	win/tclWinPipe.c	/^TclpOpenFile($/;"	f	typeref:typename:TclFile
TclpOpenFileChannel	generic/tclIntDecls.h	/^#define TclpOpenFileChannel /;"	d
TclpOpenFileChannel	unix/tclUnixChan.c	/^TclpOpenFileChannel($/;"	f	typeref:typename:Tcl_Channel
TclpOpenFileChannel	win/tclWinChan.c	/^TclpOpenFileChannel($/;"	f	typeref:typename:Tcl_Channel
TclpOpenTemporaryFile	unix/tclUnixFCmd.c	/^TclpOpenTemporaryFile($/;"	f	typeref:typename:Tcl_Channel
TclpOpenTemporaryFile	win/tclWinPipe.c	/^TclpOpenTemporaryFile($/;"	f	typeref:typename:Tcl_Channel
TclpReaddir	generic/tclStubInit.c	/^#   define TclpReaddir /;"	d	file:
TclpReadlink	unix/tclUnixFile.c	/^TclpReadlink($/;"	f	typeref:typename:char *
TclpRealloc	generic/tclAlloc.c	/^TclpRealloc($/;"	f	typeref:typename:void *
TclpRealloc	generic/tclIntDecls.h	/^#define TclpRealloc /;"	d
TclpRealloc	generic/tclThreadAlloc.c	/^TclpRealloc($/;"	f	typeref:typename:void *
TclpReleaseFile	unix/tclUnixPort.h	/^#define TclpReleaseFile(/;"	d
TclpReleaseFile	win/tclWinPort.h	/^#define TclpReleaseFile(/;"	d
TclpServiceModeHook	macosx/tclMacOSXNotify.c	/^TclpServiceModeHook($/;"	f	typeref:typename:void
TclpServiceModeHook	unix/tclUnixNotfy.c	/^TclpServiceModeHook($/;"	f	typeref:typename:void
TclpServiceModeHook	win/tclWinNotify.c	/^TclpServiceModeHook($/;"	f	typeref:typename:void
TclpSetAllocCache	unix/tclUnixThrd.c	/^TclpSetAllocCache($/;"	f	typeref:typename:void
TclpSetAllocCache	win/tclWinThrd.c	/^TclpSetAllocCache($/;"	f	typeref:typename:void
TclpSetInitialEncodings	generic/tclIntDecls.h	/^#define TclpSetInitialEncodings /;"	d
TclpSetInitialEncodings	unix/tclUnixInit.c	/^TclpSetInitialEncodings(void)$/;"	f	typeref:typename:void
TclpSetInitialEncodings	win/tclWinInit.c	/^TclpSetInitialEncodings(void)$/;"	f	typeref:typename:void
TclpSetTimer	macosx/tclMacOSXNotify.c	/^TclpSetTimer($/;"	f	typeref:typename:void
TclpSetTimer	unix/tclUnixNotfy.c	/^TclpSetTimer($/;"	f	typeref:typename:void
TclpSetTimer	win/tclWinNotify.c	/^TclpSetTimer($/;"	f	typeref:typename:void
TclpSetVariables	unix/tclUnixInit.c	/^TclpSetVariables($/;"	f	typeref:typename:void
TclpSetVariables	win/tclWinInit.c	/^TclpSetVariables($/;"	f	typeref:typename:void
TclpSysAlloc	unix/tclUnixPort.h	/^#define TclpSysAlloc(/;"	d
TclpSysAlloc	win/tclWinPort.h	/^#define TclpSysAlloc(/;"	d
TclpSysFree	unix/tclUnixPort.h	/^#define TclpSysFree(/;"	d
TclpSysFree	win/tclWinPort.h	/^#define TclpSysFree(/;"	d
TclpSysRealloc	unix/tclUnixPort.h	/^#define TclpSysRealloc(/;"	d
TclpSysRealloc	win/tclWinPort.h	/^#define TclpSysRealloc(/;"	d
TclpTempFileName	unix/tclUnixPipe.c	/^TclpTempFileName(void)$/;"	f	typeref:typename:Tcl_Obj *
TclpTempFileName	win/tclWinPipe.c	/^TclpTempFileName(void)$/;"	f	typeref:typename:Tcl_Obj *
TclpTempFileNameForLibrary	unix/tclUnixPipe.c	/^TclpTempFileNameForLibrary($/;"	f	typeref:typename:Tcl_Obj *
TclpTempFileNameForLibrary	win/tclWinLoad.c	/^TclpTempFileNameForLibrary($/;"	f	typeref:typename:Tcl_Obj *
TclpThreadCreate	unix/tclUnixThrd.c	/^TclpThreadCreate($/;"	f	typeref:typename:int
TclpThreadCreate	win/tclWinThrd.c	/^TclpThreadCreate($/;"	f	typeref:typename:int
TclpThreadCreateKey	unix/tclUnixThrd.c	/^TclpThreadCreateKey(void)$/;"	f	typeref:typename:void *
TclpThreadCreateKey	win/tclWinThrd.c	/^TclpThreadCreateKey(void)$/;"	f	typeref:typename:void *
TclpThreadDeleteKey	unix/tclUnixThrd.c	/^TclpThreadDeleteKey($/;"	f	typeref:typename:void
TclpThreadDeleteKey	win/tclWinThrd.c	/^TclpThreadDeleteKey($/;"	f	typeref:typename:void
TclpThreadExit	unix/tclUnixThrd.c	/^TclpThreadExit($/;"	f	typeref:typename:TCL_NORETURN void
TclpThreadExit	win/tclWinThrd.c	/^TclpThreadExit($/;"	f	typeref:typename:TCL_NORETURN void
TclpThreadGetGlobalTSD	unix/tclUnixThrd.c	/^TclpThreadGetGlobalTSD($/;"	f	typeref:typename:void *
TclpThreadGetGlobalTSD	win/tclWinThrd.c	/^TclpThreadGetGlobalTSD($/;"	f	typeref:typename:void *
TclpThreadSetGlobalTSD	unix/tclUnixThrd.c	/^TclpThreadSetGlobalTSD($/;"	f	typeref:typename:void
TclpThreadSetGlobalTSD	win/tclWinThrd.c	/^TclpThreadSetGlobalTSD($/;"	f	typeref:typename:void
TclpUtfNcmp2	generic/tclIntDecls.h	/^#define TclpUtfNcmp2 /;"	d
TclpUtfNcmp2	generic/tclUtf.c	/^TclpUtfNcmp2($/;"	f	typeref:typename:int
TclpUtime	unix/tclUnixFile.c	/^TclpUtime($/;"	f	typeref:typename:int
TclpUtime	win/tclWinFile.c	/^TclpUtime($/;"	f	typeref:typename:int
TclpWaitForEvent	macosx/tclMacOSXNotify.c	/^TclpWaitForEvent($/;"	f	typeref:typename:int
TclpWaitForEvent	unix/tclEpollNotfy.c	/^TclpWaitForEvent($/;"	f	typeref:typename:int
TclpWaitForEvent	unix/tclKqueueNotfy.c	/^TclpWaitForEvent($/;"	f	typeref:typename:int
TclpWaitForEvent	unix/tclSelectNotfy.c	/^TclpWaitForEvent($/;"	f	typeref:typename:int
TclpWaitForEvent	win/tclWinNotify.c	/^TclpWaitForEvent($/;"	f	typeref:typename:int
TclpWideClickInMicrosec	unix/tclUnixTime.c	/^TclpWideClickInMicrosec(void)$/;"	f	typeref:typename:double
TclpWideClickInMicrosec	win/tclWinTime.c	/^TclpWideClickInMicrosec(void)$/;"	f	typeref:typename:double
TclpWideClicksToNanoseconds	generic/tclInt.h	/^#	define TclpWideClicksToNanoseconds(/;"	d
TclpWideClicksToNanoseconds	unix/tclUnixTime.c	/^TclpWideClicksToNanoseconds($/;"	f	typeref:typename:double
TclplatformtestInit	generic/tclInt.h	/^MODULE_SCOPE Tcl_LibraryInitProc TclplatformtestInit;$/;"	v	typeref:typename:MODULE_SCOPE Tcl_LibraryInitProc
TclplatformtestInit	unix/tclUnixTest.c	/^TclplatformtestInit($/;"	f	typeref:typename:int
TclplatformtestInit	win/tclWinTest.c	/^TclplatformtestInit($/;"	f	typeref:typename:int
TcltestObjectInterfaceInit	generic/tclInt.h	/^MODULE_SCOPE Tcl_LibraryInitProc TcltestObjectInterfaceInit;$/;"	v	typeref:typename:MODULE_SCOPE Tcl_LibraryInitProc
TcltestObjectInterfaceInit	generic/tclTestObjInterface.c	/^int TcltestObjectInterfaceInit(Tcl_Interp *interp) {$/;"	f	typeref:typename:int
TcltestObjectInterfaceListIntegerInit	generic/tclInt.h	/^MODULE_SCOPE Tcl_LibraryInitProc TcltestObjectInterfaceListIntegerInit;$/;"	v	typeref:typename:MODULE_SCOPE Tcl_LibraryInitProc
TcltestObjectInterfaceListIntegerInit	generic/tclTestObjInterfaceInteger.c	/^int TcltestObjectInterfaceListIntegerInit(Tcl_Interp *interp) {$/;"	f	typeref:typename:int
Tcltest_Init	generic/tclTest.c	/^Tcltest_Init($/;"	f	typeref:typename:int
Tcltest_SafeInit	generic/tclTest.c	/^Tcltest_SafeInit($/;"	f	typeref:typename:int
Tclxttest_Init	unix/tclXtTest.c	/^Tclxttest_Init($/;"	f	typeref:typename:DLLEXPORT int
Tclzipfs	doc/zipfs.3	/^.TH Tclzipfs 3 8.7 Tcl "Tcl Library Procedures"$/;"	t
TcpAccept	unix/tclUnixSock.c	/^TcpAccept($/;"	f	typeref:typename:void	file:
TcpAccept	win/tclWinSock.c	/^TcpAccept($/;"	f	typeref:typename:void	file:
TcpAcceptCallbacksDeleteProc	generic/tclIOCmd.c	/^TcpAcceptCallbacksDeleteProc($/;"	f	typeref:typename:void	file:
TcpAcceptCallbacksDeleteProc	generic/tclIOCmd.c	/^static Tcl_InterpDeleteProc	TcpAcceptCallbacksDeleteProc;$/;"	v	typeref:typename:Tcl_InterpDeleteProc	file:
TcpAsyncCallback	unix/tclUnixSock.c	/^TcpAsyncCallback($/;"	f	typeref:typename:void	file:
TcpBlockModeProc	unix/tclUnixSock.c	/^TcpBlockModeProc($/;"	f	typeref:typename:int	file:
TcpBlockModeProc	win/tclWinSock.c	/^TcpBlockModeProc($/;"	f	typeref:typename:int	file:
TcpBlockModeProc	win/tclWinSock.c	/^static Tcl_DriverBlockModeProc	TcpBlockModeProc;$/;"	v	typeref:typename:Tcl_DriverBlockModeProc	file:
TcpClose2Proc	unix/tclUnixSock.c	/^TcpClose2Proc($/;"	f	typeref:typename:int	file:
TcpClose2Proc	win/tclWinSock.c	/^TcpClose2Proc($/;"	f	typeref:typename:int	file:
TcpClose2Proc	win/tclWinSock.c	/^static Tcl_DriverClose2Proc	TcpClose2Proc;$/;"	v	typeref:typename:Tcl_DriverClose2Proc	file:
TcpCloseProc	unix/tclUnixSock.c	/^TcpCloseProc($/;"	f	typeref:typename:int	file:
TcpCloseProc	win/tclWinSock.c	/^TcpCloseProc($/;"	f	typeref:typename:int	file:
TcpConnect	unix/tclUnixSock.c	/^TcpConnect($/;"	f	typeref:typename:int	file:
TcpConnect	win/tclWinSock.c	/^TcpConnect($/;"	f	typeref:typename:int	file:
TcpFdList	unix/tclUnixSock.c	/^typedef struct TcpFdList {$/;"	s	file:
TcpFdList	unix/tclUnixSock.c	/^} TcpFdList;$/;"	t	typeref:struct:TcpFdList	file:
TcpFdList	win/tclWinSock.c	/^typedef struct TcpFdList {$/;"	s	file:
TcpFdList	win/tclWinSock.c	/^} TcpFdList;$/;"	t	typeref:struct:TcpFdList	file:
TcpGetHandleProc	unix/tclUnixSock.c	/^TcpGetHandleProc($/;"	f	typeref:typename:int	file:
TcpGetHandleProc	win/tclWinSock.c	/^TcpGetHandleProc($/;"	f	typeref:typename:int	file:
TcpGetHandleProc	win/tclWinSock.c	/^static Tcl_DriverGetHandleProc	TcpGetHandleProc;$/;"	v	typeref:typename:Tcl_DriverGetHandleProc	file:
TcpGetOptionProc	unix/tclUnixSock.c	/^TcpGetOptionProc($/;"	f	typeref:typename:int	file:
TcpGetOptionProc	win/tclWinSock.c	/^TcpGetOptionProc($/;"	f	typeref:typename:int	file:
TcpGetOptionProc	win/tclWinSock.c	/^static Tcl_DriverGetOptionProc	TcpGetOptionProc;$/;"	v	typeref:typename:Tcl_DriverGetOptionProc	file:
TcpHostPortList	unix/tclUnixSock.c	/^TcpHostPortList($/;"	f	typeref:typename:void	file:
TcpInputProc	unix/tclUnixSock.c	/^TcpInputProc($/;"	f	typeref:typename:int	file:
TcpInputProc	win/tclWinSock.c	/^TcpInputProc($/;"	f	typeref:typename:int	file:
TcpInputProc	win/tclWinSock.c	/^static Tcl_DriverInputProc	TcpInputProc;$/;"	v	typeref:typename:Tcl_DriverInputProc	file:
TcpOutputProc	unix/tclUnixSock.c	/^TcpOutputProc($/;"	f	typeref:typename:int	file:
TcpOutputProc	win/tclWinSock.c	/^TcpOutputProc($/;"	f	typeref:typename:int	file:
TcpOutputProc	win/tclWinSock.c	/^static Tcl_DriverOutputProc	TcpOutputProc;$/;"	v	typeref:typename:Tcl_DriverOutputProc	file:
TcpServerCloseProc	generic/tclIOCmd.c	/^TcpServerCloseProc($/;"	f	typeref:typename:void	file:
TcpSetOptionProc	unix/tclUnixSock.c	/^TcpSetOptionProc($/;"	f	typeref:typename:int	file:
TcpSetOptionProc	win/tclWinSock.c	/^TcpSetOptionProc($/;"	f	typeref:typename:int	file:
TcpSetOptionProc	win/tclWinSock.c	/^static Tcl_DriverSetOptionProc	TcpSetOptionProc;$/;"	v	typeref:typename:Tcl_DriverSetOptionProc	file:
TcpState	generic/tclTest.c	/^struct TcpState {$/;"	s	file:
TcpState	generic/tclTest.c	/^typedef struct TcpState TcpState;$/;"	t	typeref:struct:TcpState	file:
TcpState	unix/tclUnixSock.c	/^struct TcpState {$/;"	s	file:
TcpState	unix/tclUnixSock.c	/^typedef struct TcpState TcpState;$/;"	t	typeref:struct:TcpState	file:
TcpState	win/tclWinSock.c	/^struct TcpState {$/;"	s	file:
TcpState	win/tclWinSock.c	/^typedef struct TcpState TcpState;$/;"	t	typeref:struct:TcpState	file:
TcpStateFlags	win/tclWinSock.c	/^enum TcpStateFlags {$/;"	g	file:
TcpThreadActionProc	unix/tclUnixSock.c	/^TcpThreadActionProc($/;"	f	typeref:typename:void	file:
TcpThreadActionProc	win/tclWinSock.c	/^TcpThreadActionProc($/;"	f	typeref:typename:void	file:
TcpWatchProc	unix/tclUnixSock.c	/^TcpWatchProc($/;"	f	typeref:typename:void	file:
TcpWatchProc	win/tclWinSock.c	/^TcpWatchProc($/;"	f	typeref:typename:void	file:
TcpWatchProc	win/tclWinSock.c	/^static Tcl_DriverWatchProc	TcpWatchProc;$/;"	v	typeref:typename:Tcl_DriverWatchProc	file:
TempFileName	win/tclWinPipe.c	/^TempFileName($/;"	f	typeref:typename:int	file:
Test	compat/zlib/contrib/ada/mtest.adb	/^   Test : array (1 .. 4) of Test_Task;$/;"	v	subprogram:MTest	file:
Test	compat/zlib/contrib/ada/test.adb	/^procedure Test is$/;"	r
TestApplyLambdaObjCmd	generic/tclTest.c	/^int TestApplyLambdaObjCmd ($/;"	f	typeref:typename:int
TestApplyLambdaObjCmd	generic/tclTest.c	/^static Tcl_ObjCmdProc	TestApplyLambdaObjCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
TestAsyncHandler	generic/tclTest.c	/^typedef struct TestAsyncHandler {$/;"	s	file:
TestAsyncHandler	generic/tclTest.c	/^} TestAsyncHandler;$/;"	t	typeref:struct:TestAsyncHandler	file:
TestChannel	generic/tclTest.c	/^typedef struct TestChannel {$/;"	s	file:
TestChannel	generic/tclTest.c	/^} TestChannel;$/;"	t	typeref:struct:TestChannel	file:
TestChannelCmd	generic/tclTest.c	/^TestChannelCmd($/;"	f	typeref:typename:int	file:
TestChannelCmd	generic/tclTest.c	/^static Tcl_CmdProc	TestChannelCmd;$/;"	v	typeref:typename:Tcl_CmdProc	file:
TestChannelEventCmd	generic/tclTest.c	/^TestChannelEventCmd($/;"	f	typeref:typename:int	file:
TestChannelEventCmd	generic/tclTest.c	/^static Tcl_CmdProc	TestChannelEventCmd;$/;"	v	typeref:typename:Tcl_CmdProc	file:
TestCommandTokenRef	generic/tclTest.c	/^typedef struct TestCommandTokenRef {$/;"	s	file:
TestCommandTokenRef	generic/tclTest.c	/^} TestCommandTokenRef;$/;"	t	typeref:struct:TestCommandTokenRef	file:
TestEvent	generic/tclTest.c	/^} TestEvent;$/;"	t	typeref:struct:__anon0e9396a50308	file:
TestExceptionCmd	win/tclWinTest.c	/^TestExceptionCmd($/;"	f	typeref:typename:int	file:
TestExceptionCmd	win/tclWinTest.c	/^static Tcl_ObjCmdProc	TestExceptionCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
TestFileHandlerProc	unix/tclUnixTest.c	/^TestFileHandlerProc($/;"	f	typeref:typename:void	file:
TestFileHandlerProc	unix/tclUnixTest.c	/^static Tcl_FileProc TestFileHandlerProc;$/;"	v	typeref:typename:Tcl_FileProc	file:
TestFilesystemObjCmd	generic/tclTest.c	/^TestFilesystemObjCmd($/;"	f	typeref:typename:int	file:
TestFilesystemObjCmd	generic/tclTest.c	/^static Tcl_ObjCmdProc	TestFilesystemObjCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
TestFindFirstCmd	generic/tclTest.c	/^TestFindFirstCmd($/;"	f	typeref:typename:int	file:
TestFindFirstCmd	generic/tclTest.c	/^static Tcl_ObjCmdProc	TestFindFirstCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
TestFindLastCmd	generic/tclTest.c	/^TestFindLastCmd($/;"	f	typeref:typename:int	file:
TestFindLastCmd	generic/tclTest.c	/^static Tcl_ObjCmdProc	TestFindLastCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
TestGetIndexFromObjStructObjCmd	generic/tclTest.c	/^TestGetIndexFromObjStructObjCmd($/;"	f	typeref:typename:int	file:
TestGetIndexFromObjStructObjCmd	generic/tclTest.c	/^static Tcl_ObjCmdProc	TestGetIndexFromObjStructObjCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
TestGetIntForIndexCmd	generic/tclTest.c	/^TestGetIntForIndexCmd($/;"	f	typeref:typename:int	file:
TestGetIntForIndexCmd	generic/tclTest.c	/^static Tcl_ObjCmdProc	TestGetIntForIndexCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
TestGetUniCharCmd	generic/tclTest.c	/^TestGetUniCharCmd($/;"	f	typeref:typename:int	file:
TestGetUniCharCmd	generic/tclTest.c	/^static Tcl_ObjCmdProc	TestGetUniCharCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
TestHashSystemHashCmd	generic/tclTest.c	/^TestHashSystemHashCmd($/;"	f	typeref:typename:int	file:
TestHashSystemHashCmd	generic/tclTest.c	/^static Tcl_ObjCmdProc	TestHashSystemHashCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
TestInterpResolverCmd	generic/tclTest.c	/^TestInterpResolverCmd($/;"	f	typeref:typename:int	file:
TestInterpResolverCmd	generic/tclTest.c	/^static Tcl_ObjCmdProc	TestInterpResolverCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
TestListInteger	generic/tclTestObjInterfaceInteger.c	/^int TestListInteger($/;"	f	typeref:typename:int
TestListIntegerGetElements	generic/tclTestObjInterfaceInteger.c	/^int TestListIntegerGetElements($/;"	f	typeref:typename:int
TestListObjLength	generic/tclTestObj.c	/^static int TestListObjLength($/;"	f	typeref:typename:int	file:
TestLutilCmd	generic/tclTest.c	/^TestLutilCmd($/;"	f	typeref:typename:int	file:
TestLutilCmd	generic/tclTest.c	/^static Tcl_ObjCmdProc	TestLutilCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
TestNRELevels	generic/tclTest.c	/^TestNRELevels($/;"	f	typeref:typename:int	file:
TestNRELevels	generic/tclTest.c	/^static Tcl_ObjCmdProc	TestNRELevels;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
TestNREUnwind	generic/tclTest.c	/^TestNREUnwind($/;"	f	typeref:typename:int	file:
TestNREUnwind	generic/tclTest.c	/^static Tcl_ObjCmdProc	TestNREUnwind;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
TestNumUtfCharsCmd	generic/tclTest.c	/^TestNumUtfCharsCmd($/;"	f	typeref:typename:int	file:
TestNumUtfCharsCmd	generic/tclTest.c	/^static Tcl_ObjCmdProc	TestNumUtfCharsCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
TestOverlaps	tests/httpTest.tcl	/^proc httpTest::TestOverlaps {someResults n term msg badTrans notPiped} {$/;"	p	namespace:httpTest
TestPipeline	tests/httpTest.tcl	/^proc httpTest::TestPipeline {someResults n Start End msg desc badTrans} {$/;"	p	namespace:httpTest
TestReport	generic/tclTest.c	/^TestReport($/;"	f	typeref:typename:void	file:
TestReportAccess	generic/tclTest.c	/^TestReportAccess($/;"	f	typeref:typename:int	file:
TestReportAccess	generic/tclTest.c	/^static Tcl_FSAccessProc TestReportAccess;$/;"	v	typeref:typename:Tcl_FSAccessProc	file:
TestReportChdir	generic/tclTest.c	/^TestReportChdir($/;"	f	typeref:typename:int	file:
TestReportChdir	generic/tclTest.c	/^static Tcl_FSChdirProc TestReportChdir;$/;"	v	typeref:typename:Tcl_FSChdirProc	file:
TestReportCopyDirectory	generic/tclTest.c	/^TestReportCopyDirectory($/;"	f	typeref:typename:int	file:
TestReportCopyDirectory	generic/tclTest.c	/^static Tcl_FSCopyDirectoryProc TestReportCopyDirectory;$/;"	v	typeref:typename:Tcl_FSCopyDirectoryProc	file:
TestReportCopyFile	generic/tclTest.c	/^TestReportCopyFile($/;"	f	typeref:typename:int	file:
TestReportCopyFile	generic/tclTest.c	/^static Tcl_FSCopyFileProc TestReportCopyFile;$/;"	v	typeref:typename:Tcl_FSCopyFileProc	file:
TestReportCreateDirectory	generic/tclTest.c	/^TestReportCreateDirectory($/;"	f	typeref:typename:int	file:
TestReportCreateDirectory	generic/tclTest.c	/^static Tcl_FSCreateDirectoryProc TestReportCreateDirectory;$/;"	v	typeref:typename:Tcl_FSCreateDirectoryProc	file:
TestReportDeleteFile	generic/tclTest.c	/^TestReportDeleteFile($/;"	f	typeref:typename:int	file:
TestReportDeleteFile	generic/tclTest.c	/^static Tcl_FSDeleteFileProc TestReportDeleteFile;$/;"	v	typeref:typename:Tcl_FSDeleteFileProc	file:
TestReportDupInternalRep	generic/tclTest.c	/^TestReportDupInternalRep($/;"	f	typeref:typename:void *	file:
TestReportDupInternalRep	generic/tclTest.c	/^static Tcl_FSDupInternalRepProc TestReportDupInternalRep;$/;"	v	typeref:typename:Tcl_FSDupInternalRepProc	file:
TestReportFileAttrStrings	generic/tclTest.c	/^TestReportFileAttrStrings($/;"	f	typeref:typename:const char * const *	file:
TestReportFileAttrStrings	generic/tclTest.c	/^static Tcl_FSFileAttrStringsProc TestReportFileAttrStrings;$/;"	v	typeref:typename:Tcl_FSFileAttrStringsProc	file:
TestReportFileAttrsGet	generic/tclTest.c	/^TestReportFileAttrsGet($/;"	f	typeref:typename:int	file:
TestReportFileAttrsGet	generic/tclTest.c	/^static Tcl_FSFileAttrsGetProc TestReportFileAttrsGet;$/;"	v	typeref:typename:Tcl_FSFileAttrsGetProc	file:
TestReportFileAttrsSet	generic/tclTest.c	/^TestReportFileAttrsSet($/;"	f	typeref:typename:int	file:
TestReportFileAttrsSet	generic/tclTest.c	/^static Tcl_FSFileAttrsSetProc TestReportFileAttrsSet;$/;"	v	typeref:typename:Tcl_FSFileAttrsSetProc	file:
TestReportFreeInternalRep	generic/tclTest.c	/^TestReportFreeInternalRep($/;"	f	typeref:typename:void	file:
TestReportFreeInternalRep	generic/tclTest.c	/^static Tcl_FSFreeInternalRepProc TestReportFreeInternalRep;$/;"	v	typeref:typename:Tcl_FSFreeInternalRepProc	file:
TestReportGetNativePath	generic/tclTest.c	/^TestReportGetNativePath($/;"	f	typeref:typename:Tcl_Obj *	file:
TestReportInFilesystem	generic/tclTest.c	/^TestReportInFilesystem($/;"	f	typeref:typename:int	file:
TestReportInFilesystem	generic/tclTest.c	/^static Tcl_FSPathInFilesystemProc TestReportInFilesystem;$/;"	v	typeref:typename:Tcl_FSPathInFilesystemProc	file:
TestReportLink	generic/tclTest.c	/^TestReportLink($/;"	f	typeref:typename:Tcl_Obj *	file:
TestReportLink	generic/tclTest.c	/^static Tcl_FSLinkProc TestReportLink;$/;"	v	typeref:typename:Tcl_FSLinkProc	file:
TestReportLoadFile	generic/tclTest.c	/^TestReportLoadFile($/;"	f	typeref:typename:int	file:
TestReportLstat	generic/tclTest.c	/^TestReportLstat($/;"	f	typeref:typename:int	file:
TestReportLstat	generic/tclTest.c	/^static Tcl_FSLstatProc TestReportLstat;$/;"	v	typeref:typename:Tcl_FSLstatProc	file:
TestReportMatchInDirectory	generic/tclTest.c	/^TestReportMatchInDirectory($/;"	f	typeref:typename:int	file:
TestReportMatchInDirectory	generic/tclTest.c	/^static Tcl_FSMatchInDirectoryProc TestReportMatchInDirectory;$/;"	v	typeref:typename:Tcl_FSMatchInDirectoryProc	file:
TestReportNormalizePath	generic/tclTest.c	/^TestReportNormalizePath($/;"	f	typeref:typename:int	file:
TestReportNormalizePath	generic/tclTest.c	/^static Tcl_FSNormalizePathProc TestReportNormalizePath;$/;"	v	typeref:typename:Tcl_FSNormalizePathProc	file:
TestReportOpenFileChannel	generic/tclTest.c	/^TestReportOpenFileChannel($/;"	f	typeref:typename:Tcl_Channel	file:
TestReportOpenFileChannel	generic/tclTest.c	/^static Tcl_FSOpenFileChannelProc TestReportOpenFileChannel;$/;"	v	typeref:typename:Tcl_FSOpenFileChannelProc	file:
TestReportRemoveDirectory	generic/tclTest.c	/^TestReportRemoveDirectory($/;"	f	typeref:typename:int	file:
TestReportRemoveDirectory	generic/tclTest.c	/^static Tcl_FSRemoveDirectoryProc TestReportRemoveDirectory;$/;"	v	typeref:typename:Tcl_FSRemoveDirectoryProc	file:
TestReportRenameFile	generic/tclTest.c	/^TestReportRenameFile($/;"	f	typeref:typename:int	file:
TestReportRenameFile	generic/tclTest.c	/^static Tcl_FSRenameFileProc TestReportRenameFile;$/;"	v	typeref:typename:Tcl_FSRenameFileProc	file:
TestReportStat	generic/tclTest.c	/^TestReportStat($/;"	f	typeref:typename:int	file:
TestReportStat	generic/tclTest.c	/^static Tcl_FSStatProc TestReportStat;$/;"	v	typeref:typename:Tcl_FSStatProc	file:
TestReportUtime	generic/tclTest.c	/^TestReportUtime($/;"	f	typeref:typename:int	file:
TestReportUtime	generic/tclTest.c	/^static Tcl_FSUtimeProc TestReportUtime;$/;"	v	typeref:typename:Tcl_FSUtimeProc	file:
TestSequence	tests/httpTest.tcl	/^proc httpTest::TestSequence {someResults n msg badTrans} {$/;"	p	namespace:httpTest
TestServiceModeCmd	generic/tclTest.c	/^TestServiceModeCmd($/;"	f	typeref:typename:int	file:
TestServiceModeCmd	generic/tclTest.c	/^static Tcl_CmdProc TestServiceModeCmd;$/;"	v	typeref:typename:Tcl_CmdProc	file:
TestSimpleFilesystemObjCmd	generic/tclTest.c	/^TestSimpleFilesystemObjCmd($/;"	f	typeref:typename:int	file:
TestSimpleFilesystemObjCmd	generic/tclTest.c	/^static Tcl_ObjCmdProc	TestSimpleFilesystemObjCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
TestSizeCmd	generic/tclTest.c	/^TestSizeCmd($/;"	f	typeref:typename:int	file:
TestSizeCmd	generic/tclTest.c	/^static Tcl_ObjCmdProc	TestSizeCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
TestSocketCmd	generic/tclTest.c	/^TestSocketCmd($/;"	f	typeref:typename:int	file:
TestSocketCmd	generic/tclTest.c	/^static Tcl_CmdProc	TestSocketCmd;$/;"	v	typeref:typename:Tcl_CmdProc	file:
TestStringObjIsEmpty	generic/tclTestObj.c	/^static int TestStringObjIsEmpty($/;"	f	typeref:typename:int	file:
TestUtfNextCmd	generic/tclTest.c	/^TestUtfNextCmd($/;"	f	typeref:typename:int	file:
TestUtfNextCmd	generic/tclTest.c	/^static Tcl_ObjCmdProc	TestUtfNextCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
TestUtfPrevCmd	generic/tclTest.c	/^TestUtfPrevCmd($/;"	f	typeref:typename:int	file:
TestUtfPrevCmd	generic/tclTest.c	/^static Tcl_ObjCmdProc	TestUtfPrevCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
TestWrongNumArgsObjCmd	generic/tclTest.c	/^TestWrongNumArgsObjCmd($/;"	f	typeref:typename:int	file:
TestWrongNumArgsObjCmd	generic/tclTest.c	/^static Tcl_ObjCmdProc2	TestWrongNumArgsObjCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc2	file:
Test_Task	compat/zlib/contrib/ada/mtest.adb	/^   task body Test_Task is$/;"	k	subprogram:MTest	file:
Test_Task	compat/zlib/contrib/ada/mtest.adb	/^   task type Test_Task;$/;"	K	subprogram:MTest	file:
TestalarmCmd	unix/tclUnixTest.c	/^TestalarmCmd($/;"	f	typeref:typename:int	file:
TestalarmCmd	unix/tclUnixTest.c	/^static Tcl_ObjCmdProc TestalarmCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
TestasyncCmd	generic/tclTest.c	/^TestasyncCmd($/;"	f	typeref:typename:int	file:
TestasyncCmd	generic/tclTest.c	/^static Tcl_CmdProc	TestasyncCmd;$/;"	v	typeref:typename:Tcl_CmdProc	file:
TestbigdataCmd	generic/tclTestObj.c	/^TestbigdataCmd ($/;"	f	typeref:typename:int	file:
TestbigdataCmd	generic/tclTestObj.c	/^static Tcl_ObjCmdProc	TestbigdataCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
TestbignumobjCmd	generic/tclTestObj.c	/^TestbignumobjCmd($/;"	f	typeref:typename:int	file:
TestbignumobjCmd	generic/tclTestObj.c	/^static Tcl_ObjCmdProc	TestbignumobjCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
TestbooleanobjCmd	generic/tclTestObj.c	/^TestbooleanobjCmd($/;"	f	typeref:typename:int	file:
TestbooleanobjCmd	generic/tclTestObj.c	/^static Tcl_ObjCmdProc	TestbooleanobjCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
TestbumpinterpepochObjCmd	generic/tclTest.c	/^TestbumpinterpepochObjCmd($/;"	f	typeref:typename:int	file:
TestbumpinterpepochObjCmd	generic/tclTest.c	/^static Tcl_ObjCmdProc	TestbumpinterpepochObjCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
TestbytestringObjCmd	generic/tclTest.c	/^TestbytestringObjCmd($/;"	f	typeref:typename:int	file:
TestbytestringObjCmd	generic/tclTest.c	/^static Tcl_ObjCmdProc	TestbytestringObjCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
TestchmodCmd	unix/tclUnixTest.c	/^TestchmodCmd($/;"	f	typeref:typename:int	file:
TestchmodCmd	unix/tclUnixTest.c	/^static Tcl_ObjCmdProc TestchmodCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
TestchmodCmd	win/tclWinTest.c	/^TestchmodCmd($/;"	f	typeref:typename:int	file:
TestchmodCmd	win/tclWinTest.c	/^static Tcl_ObjCmdProc	TestchmodCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
TestcmdinfoObjCmd	generic/tclTest.c	/^TestcmdinfoObjCmd($/;"	f	typeref:typename:int	file:
TestcmdinfoObjCmd	generic/tclTest.c	/^static Tcl_ObjCmdProc	TestcmdinfoObjCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
Testcmdobj2ObjCmd	generic/tclTest.c	/^Testcmdobj2ObjCmd($/;"	f	typeref:typename:int	file:
Testcmdobj2ObjCmd	generic/tclTest.c	/^static Tcl_ObjCmdProc2	Testcmdobj2ObjCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc2	file:
TestcmdtokenCmd	generic/tclTest.c	/^TestcmdtokenCmd($/;"	f	typeref:typename:int	file:
TestcmdtokenCmd	generic/tclTest.c	/^static Tcl_CmdProc	TestcmdtokenCmd;$/;"	v	typeref:typename:Tcl_CmdProc	file:
TestcmdtraceCmd	generic/tclTest.c	/^TestcmdtraceCmd($/;"	f	typeref:typename:int	file:
TestcmdtraceCmd	generic/tclTest.c	/^static Tcl_CmdProc	TestcmdtraceCmd;$/;"	v	typeref:typename:Tcl_CmdProc	file:
TestconcatobjCmd	generic/tclTest.c	/^TestconcatobjCmd($/;"	f	typeref:typename:int	file:
TestconcatobjCmd	generic/tclTest.c	/^static Tcl_CmdProc	TestconcatobjCmd;$/;"	v	typeref:typename:Tcl_CmdProc	file:
TestcpuidCmd	generic/tclTest.c	/^TestcpuidCmd($/;"	f	typeref:typename:int	file:
TestcpuidCmd	generic/tclTest.c	/^static Tcl_ObjCmdProc	TestcpuidCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
TestcreatecommandCmd	generic/tclTest.c	/^TestcreatecommandCmd($/;"	f	typeref:typename:int	file:
TestcreatecommandCmd	generic/tclTest.c	/^static Tcl_CmdProc	TestcreatecommandCmd;$/;"	v	typeref:typename:Tcl_CmdProc	file:
TestdcallCmd	generic/tclTest.c	/^TestdcallCmd($/;"	f	typeref:typename:int	file:
TestdcallCmd	generic/tclTest.c	/^static Tcl_CmdProc	TestdcallCmd;$/;"	v	typeref:typename:Tcl_CmdProc	file:
TestdelCmd	generic/tclTest.c	/^TestdelCmd($/;"	f	typeref:typename:int	file:
TestdelCmd	generic/tclTest.c	/^static Tcl_CmdProc	TestdelCmd;$/;"	v	typeref:typename:Tcl_CmdProc	file:
TestdelassocdataCmd	generic/tclTest.c	/^TestdelassocdataCmd($/;"	f	typeref:typename:int	file:
TestdelassocdataCmd	generic/tclTest.c	/^static Tcl_CmdProc	TestdelassocdataCmd;$/;"	v	typeref:typename:Tcl_CmdProc	file:
TestdoubledigitsObjCmd	generic/tclTest.c	/^TestdoubledigitsObjCmd($/;"	f	typeref:typename:int	file:
TestdoubledigitsObjCmd	generic/tclTest.c	/^static Tcl_ObjCmdProc	TestdoubledigitsObjCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
TestdoubleobjCmd	generic/tclTestObj.c	/^TestdoubleobjCmd($/;"	f	typeref:typename:int	file:
TestdoubleobjCmd	generic/tclTestObj.c	/^static Tcl_ObjCmdProc	TestdoubleobjCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
TestdstringCmd	generic/tclTest.c	/^TestdstringCmd($/;"	f	typeref:typename:int	file:
TestdstringCmd	generic/tclTest.c	/^static Tcl_CmdProc	TestdstringCmd;$/;"	v	typeref:typename:Tcl_CmdProc	file:
TestencodingObjCmd	generic/tclTest.c	/^TestencodingObjCmd($/;"	f	typeref:typename:int	file:
TestencodingObjCmd	generic/tclTest.c	/^static Tcl_ObjCmdProc	TestencodingObjCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
TestevalexObjCmd	generic/tclTest.c	/^TestevalexObjCmd($/;"	f	typeref:typename:int	file:
TestevalexObjCmd	generic/tclTest.c	/^static Tcl_ObjCmdProc	TestevalexObjCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
TestevalobjvObjCmd	generic/tclTest.c	/^TestevalobjvObjCmd($/;"	f	typeref:typename:int	file:
TestevalobjvObjCmd	generic/tclTest.c	/^static Tcl_ObjCmdProc	TestevalobjvObjCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
TesteventDeleteProc	generic/tclTest.c	/^TesteventDeleteProc($/;"	f	typeref:typename:int	file:
TesteventObjCmd	generic/tclTest.c	/^TesteventObjCmd($/;"	f	typeref:typename:int	file:
TesteventObjCmd	generic/tclTest.c	/^static Tcl_ObjCmdProc	TesteventObjCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
TesteventProc	generic/tclTest.c	/^TesteventProc($/;"	f	typeref:typename:int	file:
TesteventloopCmd	unix/tclXtTest.c	/^TesteventloopCmd($/;"	f	typeref:typename:int	file:
TesteventloopCmd	unix/tclXtTest.c	/^static Tcl_ObjCmdProc TesteventloopCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
TesteventloopCmd	win/tclWinTest.c	/^TesteventloopCmd($/;"	f	typeref:typename:int	file:
TesteventloopCmd	win/tclWinTest.c	/^static Tcl_ObjCmdProc	TesteventloopCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
TestexithandlerCmd	generic/tclTest.c	/^TestexithandlerCmd($/;"	f	typeref:typename:int	file:
TestexithandlerCmd	generic/tclTest.c	/^static Tcl_CmdProc	TestexithandlerCmd;$/;"	v	typeref:typename:Tcl_CmdProc	file:
TestexitmainloopCmd	generic/tclTest.c	/^TestexitmainloopCmd($/;"	f	typeref:typename:int	file:
TestexitmainloopCmd	generic/tclTest.c	/^static Tcl_CmdProc	TestexitmainloopCmd;$/;"	v	typeref:typename:Tcl_CmdProc	file:
TestexprdoubleCmd	generic/tclTest.c	/^TestexprdoubleCmd($/;"	f	typeref:typename:int	file:
TestexprdoubleCmd	generic/tclTest.c	/^static Tcl_CmdProc	TestexprdoubleCmd;$/;"	v	typeref:typename:Tcl_CmdProc	file:
TestexprdoubleobjCmd	generic/tclTest.c	/^TestexprdoubleobjCmd($/;"	f	typeref:typename:int	file:
TestexprdoubleobjCmd	generic/tclTest.c	/^static Tcl_ObjCmdProc	TestexprdoubleobjCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
TestexprlongCmd	generic/tclTest.c	/^TestexprlongCmd($/;"	f	typeref:typename:int	file:
TestexprlongCmd	generic/tclTest.c	/^static Tcl_CmdProc	TestexprlongCmd;$/;"	v	typeref:typename:Tcl_CmdProc	file:
TestexprlongobjCmd	generic/tclTest.c	/^TestexprlongobjCmd($/;"	f	typeref:typename:int	file:
TestexprlongobjCmd	generic/tclTest.c	/^static Tcl_ObjCmdProc	TestexprlongobjCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
TestexprparserObjCmd	generic/tclTest.c	/^TestexprparserObjCmd($/;"	f	typeref:typename:int	file:
TestexprparserObjCmd	generic/tclTest.c	/^static Tcl_ObjCmdProc	TestexprparserObjCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
TestexprstringCmd	generic/tclTest.c	/^TestexprstringCmd($/;"	f	typeref:typename:int	file:
TestexprstringCmd	generic/tclTest.c	/^static Tcl_CmdProc	TestexprstringCmd;$/;"	v	typeref:typename:Tcl_CmdProc	file:
TestfeventCmd	generic/tclTest.c	/^TestfeventCmd($/;"	f	typeref:typename:int	file:
TestfeventCmd	generic/tclTest.c	/^static Tcl_CmdProc	TestfeventCmd;$/;"	v	typeref:typename:Tcl_CmdProc	file:
TestfileCmd	generic/tclTest.c	/^TestfileCmd($/;"	f	typeref:typename:int	file:
TestfileCmd	generic/tclTest.c	/^static Tcl_ObjCmdProc	TestfileCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
TestfilehandlerCmd	unix/tclUnixTest.c	/^TestfilehandlerCmd($/;"	f	typeref:typename:int	file:
TestfilehandlerCmd	unix/tclUnixTest.c	/^static Tcl_ObjCmdProc TestfilehandlerCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
TestfilelinkCmd	generic/tclTest.c	/^TestfilelinkCmd($/;"	f	typeref:typename:int	file:
TestfilelinkCmd	generic/tclTest.c	/^static Tcl_ObjCmdProc	TestfilelinkCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
TestfilewaitCmd	unix/tclUnixTest.c	/^TestfilewaitCmd($/;"	f	typeref:typename:int	file:
TestfilewaitCmd	unix/tclUnixTest.c	/^static Tcl_ObjCmdProc TestfilewaitCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
TestfindexecutableCmd	unix/tclUnixTest.c	/^TestfindexecutableCmd($/;"	f	typeref:typename:int	file:
TestfindexecutableCmd	unix/tclUnixTest.c	/^static Tcl_ObjCmdProc TestfindexecutableCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
TestforkCmd	unix/tclUnixTest.c	/^TestforkCmd($/;"	f	typeref:typename:int	file:
TestforkCmd	unix/tclUnixTest.c	/^static Tcl_ObjCmdProc TestforkCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
TestgetassocdataCmd	generic/tclTest.c	/^TestgetassocdataCmd($/;"	f	typeref:typename:int	file:
TestgetassocdataCmd	generic/tclTest.c	/^static Tcl_CmdProc	TestgetassocdataCmd;$/;"	v	typeref:typename:Tcl_CmdProc	file:
TestgetintCmd	generic/tclTest.c	/^TestgetintCmd($/;"	f	typeref:typename:int	file:
TestgetintCmd	generic/tclTest.c	/^static Tcl_CmdProc	TestgetintCmd;$/;"	v	typeref:typename:Tcl_CmdProc	file:
TestgetplatformCmd	generic/tclTest.c	/^TestgetplatformCmd($/;"	f	typeref:typename:int	file:
TestgetplatformCmd	generic/tclTest.c	/^static Tcl_CmdProc	TestgetplatformCmd;$/;"	v	typeref:typename:Tcl_CmdProc	file:
TestgetvarfullnameCmd	generic/tclTest.c	/^TestgetvarfullnameCmd($/;"	f	typeref:typename:int	file:
TestgetvarfullnameCmd	generic/tclTest.c	/^static Tcl_ObjCmdProc	TestgetvarfullnameCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
TestgotsigCmd	unix/tclUnixTest.c	/^TestgotsigCmd($/;"	f	typeref:typename:int	file:
TestgotsigCmd	unix/tclUnixTest.c	/^static Tcl_ObjCmdProc TestgotsigCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
TestindexobjCmd	generic/tclTestObj.c	/^TestindexobjCmd($/;"	f	typeref:typename:int	file:
TestindexobjCmd	generic/tclTestObj.c	/^static Tcl_ObjCmdProc	TestindexobjCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
Testing	libtommath/README.md	/^## Testing$/;"	s	chapter:libtommath
TestinterpdeleteCmd	generic/tclTest.c	/^TestinterpdeleteCmd($/;"	f	typeref:typename:int	file:
TestinterpdeleteCmd	generic/tclTest.c	/^static Tcl_CmdProc	TestinterpdeleteCmd;$/;"	v	typeref:typename:Tcl_CmdProc	file:
TestintobjCmd	generic/tclTestObj.c	/^TestintobjCmd($/;"	f	typeref:typename:int	file:
TestintobjCmd	generic/tclTestObj.c	/^static Tcl_ObjCmdProc	TestintobjCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
TestlinkCmd	generic/tclTest.c	/^TestlinkCmd($/;"	f	typeref:typename:int	file:
TestlinkCmd	generic/tclTest.c	/^static Tcl_CmdProc	TestlinkCmd;$/;"	v	typeref:typename:Tcl_CmdProc	file:
TestlinkarrayCmd	generic/tclTest.c	/^TestlinkarrayCmd($/;"	f	typeref:typename:int	file:
TestlinkarrayCmd	generic/tclTest.c	/^static Tcl_ObjCmdProc	TestlinkarrayCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
TestlistobjCmd	generic/tclTestObj.c	/^TestlistobjCmd($/;"	f	typeref:typename:int	file:
TestlistobjCmd	generic/tclTestObj.c	/^static Tcl_ObjCmdProc	TestlistobjCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
TestlistrepCmd	generic/tclTest.c	/^TestlistrepCmd($/;"	f	typeref:typename:int	file:
TestlistrepCmd	generic/tclTest.c	/^static Tcl_ObjCmdProc	TestlistrepCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
TestlocaleCmd	generic/tclTest.c	/^TestlocaleCmd($/;"	f	typeref:typename:int	file:
TestlocaleCmd	generic/tclTest.c	/^static Tcl_ObjCmdProc	TestlocaleCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
TestlongsizeCmd	generic/tclTest.c	/^TestlongsizeCmd($/;"	f	typeref:typename:int	file:
TestlongsizeCmd	generic/tclTest.c	/^static Tcl_CmdProc	TestlongsizeCmd;$/;"	v	typeref:typename:Tcl_CmdProc	file:
TestmainthreadCmd	generic/tclTest.c	/^TestmainthreadCmd($/;"	f	typeref:typename:int	file:
TestmainthreadCmd	generic/tclTest.c	/^static Tcl_CmdProc	TestmainthreadCmd;$/;"	v	typeref:typename:Tcl_CmdProc	file:
TestobjCmd	generic/tclTestObj.c	/^TestobjCmd($/;"	f	typeref:typename:int	file:
TestobjCmd	generic/tclTestObj.c	/^static Tcl_ObjCmdProc	TestobjCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
TestpanicCmd	generic/tclTest.c	/^TestpanicCmd($/;"	f	typeref:typename:int	file:
TestpanicCmd	generic/tclTest.c	/^static Tcl_CmdProc	TestpanicCmd;$/;"	v	typeref:typename:Tcl_CmdProc	file:
TestparseargsCmd	generic/tclTest.c	/^TestparseargsCmd($/;"	f	typeref:typename:int	file:
TestparseargsCmd	generic/tclTest.c	/^static Tcl_ObjCmdProc	TestparseargsCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
TestparserObjCmd	generic/tclTest.c	/^TestparserObjCmd($/;"	f	typeref:typename:int	file:
TestparserObjCmd	generic/tclTest.c	/^static Tcl_ObjCmdProc	TestparserObjCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
TestparsevarObjCmd	generic/tclTest.c	/^TestparsevarObjCmd($/;"	f	typeref:typename:int	file:
TestparsevarObjCmd	generic/tclTest.c	/^static Tcl_ObjCmdProc	TestparsevarObjCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
TestparsevarnameObjCmd	generic/tclTest.c	/^TestparsevarnameObjCmd($/;"	f	typeref:typename:int	file:
TestparsevarnameObjCmd	generic/tclTest.c	/^static Tcl_ObjCmdProc	TestparsevarnameObjCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
TestplatformChmod	win/tclWinTest.c	/^TestplatformChmod($/;"	f	typeref:typename:int	file:
TestpreferstableObjCmd	generic/tclTest.c	/^TestpreferstableObjCmd($/;"	f	typeref:typename:int	file:
TestpreferstableObjCmd	generic/tclTest.c	/^static Tcl_ObjCmdProc	TestpreferstableObjCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
TestprintObjCmd	generic/tclTest.c	/^TestprintObjCmd($/;"	f	typeref:typename:int	file:
TestprintObjCmd	generic/tclTest.c	/^static Tcl_ObjCmdProc	TestprintObjCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
TestpurebytesobjObjCmd	generic/tclTest.c	/^TestpurebytesobjObjCmd($/;"	f	typeref:typename:int	file:
TestpurebytesobjObjCmd	generic/tclTest.c	/^static Tcl_ObjCmdProc	TestpurebytesobjObjCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
TestregexpObjCmd	generic/tclTest.c	/^TestregexpObjCmd($/;"	f	typeref:typename:int	file:
TestregexpObjCmd	generic/tclTest.c	/^static Tcl_ObjCmdProc	TestregexpObjCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
TestregexpXflags	generic/tclTest.c	/^TestregexpXflags($/;"	f	typeref:typename:void	file:
TestreturnObjCmd	generic/tclTest.c	/^TestreturnObjCmd($/;"	f	typeref:typename:int	file:
TestreturnObjCmd	generic/tclTest.c	/^static Tcl_ObjCmdProc	TestreturnObjCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
Testset2Cmd	generic/tclTest.c	/^Testset2Cmd($/;"	f	typeref:typename:int	file:
Testset2Cmd	generic/tclTest.c	/^static Tcl_CmdProc	Testset2Cmd;$/;"	v	typeref:typename:Tcl_CmdProc	file:
TestsetCmd	generic/tclTest.c	/^TestsetCmd($/;"	f	typeref:typename:int	file:
TestsetCmd	generic/tclTest.c	/^static Tcl_CmdProc	TestsetCmd;$/;"	v	typeref:typename:Tcl_CmdProc	file:
TestsetassocdataCmd	generic/tclTest.c	/^TestsetassocdataCmd($/;"	f	typeref:typename:int	file:
TestsetassocdataCmd	generic/tclTest.c	/^static Tcl_CmdProc	TestsetassocdataCmd;$/;"	v	typeref:typename:Tcl_CmdProc	file:
TestsetbytearraylengthObjCmd	generic/tclTest.c	/^TestsetbytearraylengthObjCmd($/;"	f	typeref:typename:int	file:
TestsetbytearraylengthObjCmd	generic/tclTest.c	/^static Tcl_ObjCmdProc	TestsetbytearraylengthObjCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
TestseterrorcodeCmd	generic/tclTest.c	/^TestseterrorcodeCmd($/;"	f	typeref:typename:int	file:
TestseterrorcodeCmd	generic/tclTest.c	/^static Tcl_CmdProc	TestseterrorcodeCmd;$/;"	v	typeref:typename:Tcl_CmdProc	file:
TestsetmainloopCmd	generic/tclTest.c	/^TestsetmainloopCmd($/;"	f	typeref:typename:int	file:
TestsetmainloopCmd	generic/tclTest.c	/^static Tcl_CmdProc	TestsetmainloopCmd;$/;"	v	typeref:typename:Tcl_CmdProc	file:
TestsetobjerrorcodeCmd	generic/tclTest.c	/^TestsetobjerrorcodeCmd($/;"	f	typeref:typename:int	file:
TestsetobjerrorcodeCmd	generic/tclTest.c	/^static Tcl_ObjCmdProc	TestsetobjerrorcodeCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
TestsetplatformCmd	generic/tclTest.c	/^TestsetplatformCmd($/;"	f	typeref:typename:int	file:
TestsetplatformCmd	generic/tclTest.c	/^static Tcl_CmdProc	TestsetplatformCmd;$/;"	v	typeref:typename:Tcl_CmdProc	file:
TeststaticlibraryCmd	generic/tclTest.c	/^TeststaticlibraryCmd($/;"	f	typeref:typename:int	file:
TeststaticlibraryCmd	generic/tclTest.c	/^static Tcl_CmdProc	TeststaticlibraryCmd;$/;"	v	typeref:typename:Tcl_CmdProc	file:
TeststringbytesObjCmd	generic/tclTest.c	/^TeststringbytesObjCmd($/;"	f	typeref:typename:int	file:
TeststringbytesObjCmd	generic/tclTest.c	/^static Tcl_ObjCmdProc	TeststringbytesObjCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
TeststringobjCmd	generic/tclTestObj.c	/^TeststringobjCmd($/;"	f	typeref:typename:int	file:
TeststringobjCmd	generic/tclTestObj.c	/^static Tcl_ObjCmdProc	TeststringobjCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
TesttranslatefilenameCmd	generic/tclTest.c	/^TesttranslatefilenameCmd($/;"	f	typeref:typename:int	file:
TesttranslatefilenameCmd	generic/tclTest.c	/^static Tcl_CmdProc	TesttranslatefilenameCmd;$/;"	v	typeref:typename:Tcl_CmdProc	file:
TestupvarCmd	generic/tclTest.c	/^TestupvarCmd($/;"	f	typeref:typename:int	file:
TestupvarCmd	generic/tclTest.c	/^static Tcl_CmdProc	TestupvarCmd;$/;"	v	typeref:typename:Tcl_CmdProc	file:
TestvolumetypeCmd	win/tclWinTest.c	/^TestvolumetypeCmd($/;"	f	typeref:typename:int	file:
TestvolumetypeCmd	win/tclWinTest.c	/^static Tcl_ObjCmdProc	TestvolumetypeCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
TestwinclockCmd	win/tclWinTest.c	/^TestwinclockCmd($/;"	f	typeref:typename:int	file:
TestwinclockCmd	win/tclWinTest.c	/^static Tcl_ObjCmdProc	TestwinclockCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
TestwinsleepCmd	win/tclWinTest.c	/^TestwinsleepCmd($/;"	f	typeref:typename:int	file:
TestwinsleepCmd	win/tclWinTest.c	/^static Tcl_ObjCmdProc	TestwinsleepCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
Text	compat/zlib/contrib/ada/buffer_demo.adb	/^   Text : constant String$/;"	n	subprogram:Buffer_Demo	file:
ThreadCancel	generic/tclThreadTest.c	/^ThreadCancel($/;"	f	typeref:typename:int	file:
ThreadClientData	generic/tclEvent.c	/^} ThreadClientData;$/;"	t	typeref:struct:__anon850510a70308	file:
ThreadCreate	generic/tclThreadTest.c	/^ThreadCreate($/;"	f	typeref:typename:int	file:
ThreadCtrl	generic/tclThreadTest.c	/^typedef struct ThreadCtrl {$/;"	s	file:
ThreadCtrl	generic/tclThreadTest.c	/^} ThreadCtrl;$/;"	t	typeref:struct:ThreadCtrl	file:
ThreadDeleteEvent	generic/tclThreadTest.c	/^ThreadDeleteEvent($/;"	f	typeref:typename:int	file:
ThreadErrorProc	generic/tclThreadTest.c	/^ThreadErrorProc($/;"	f	typeref:typename:void	file:
ThreadEvent	generic/tclThreadTest.c	/^typedef struct ThreadEvent {$/;"	s	file:
ThreadEvent	generic/tclThreadTest.c	/^} ThreadEvent;$/;"	t	typeref:struct:ThreadEvent	file:
ThreadEventProc	generic/tclThreadTest.c	/^ThreadEventProc($/;"	f	typeref:typename:int	file:
ThreadEventResult	generic/tclThreadTest.c	/^typedef struct ThreadEventResult {$/;"	s	file:
ThreadEventResult	generic/tclThreadTest.c	/^} ThreadEventResult;$/;"	t	typeref:struct:ThreadEventResult	file:
ThreadExitProc	generic/tclThreadTest.c	/^ThreadExitProc($/;"	f	typeref:typename:void	file:
ThreadFreeProc	generic/tclThreadTest.c	/^ThreadFreeProc($/;"	f	typeref:typename:void	file:
ThreadList	generic/tclThreadTest.c	/^ThreadList($/;"	f	typeref:typename:int	file:
ThreadLocalData	generic/tclOOInt.h	/^typedef struct ThreadLocalData {$/;"	s
ThreadLocalData	generic/tclOOInt.h	/^} ThreadLocalData;$/;"	t	typeref:struct:ThreadLocalData
ThreadObjCmd	generic/tclThreadTest.c	/^ThreadObjCmd($/;"	f	typeref:typename:int	file:
ThreadSafeLocalTime	generic/tclClock.c	/^ThreadSafeLocalTime($/;"	f	typeref:struct:tm *	file:
ThreadSafeLocalTime	generic/tclClockClassic.c	/^ThreadSafeLocalTime($/;"	f	typeref:struct:tm *	file:
ThreadSend	generic/tclThreadTest.c	/^ThreadSend($/;"	f	typeref:typename:int	file:
ThreadSpecificData	generic/tclAsync.c	/^typedef struct ThreadSpecificData {$/;"	s	file:
ThreadSpecificData	generic/tclAsync.c	/^} ThreadSpecificData;$/;"	t	typeref:struct:ThreadSpecificData	file:
ThreadSpecificData	generic/tclEvent.c	/^typedef struct ThreadSpecificData {$/;"	s	file:
ThreadSpecificData	generic/tclEvent.c	/^} ThreadSpecificData;$/;"	t	typeref:struct:ThreadSpecificData	file:
ThreadSpecificData	generic/tclIO.c	/^} ThreadSpecificData;$/;"	t	typeref:struct:__anon5e04fc9d0108	file:
ThreadSpecificData	generic/tclIOCmd.c	/^} ThreadSpecificData;$/;"	t	typeref:struct:__anon5b8cc1910208	file:
ThreadSpecificData	generic/tclIORChan.c	/^} ThreadSpecificData;$/;"	t	typeref:struct:__anon92d8dd290808	file:
ThreadSpecificData	generic/tclIORTrans.c	/^} ThreadSpecificData;$/;"	t	typeref:struct:__anon21e740770808	file:
ThreadSpecificData	generic/tclIOSock.c	/^} ThreadSpecificData;$/;"	t	typeref:struct:__anonf29c1f6d0108	file:
ThreadSpecificData	generic/tclIOUtil.c	/^} ThreadSpecificData;$/;"	t	typeref:struct:__anonf7a439bb0108	file:
ThreadSpecificData	generic/tclMain.c	/^} ThreadSpecificData;$/;"	t	typeref:struct:__anonfdf182ea0108	file:
ThreadSpecificData	generic/tclNamesp.c	/^} ThreadSpecificData;$/;"	t	typeref:struct:__anon357794090108	file:
ThreadSpecificData	generic/tclNotify.c	/^typedef struct ThreadSpecificData {$/;"	s	file:
ThreadSpecificData	generic/tclNotify.c	/^} ThreadSpecificData;$/;"	t	typeref:struct:ThreadSpecificData	file:
ThreadSpecificData	generic/tclObj.c	/^} ThreadSpecificData;$/;"	t	typeref:struct:__anon1f1c87400208	file:
ThreadSpecificData	generic/tclRegexp.c	/^} ThreadSpecificData;$/;"	t	typeref:struct:__anon0c6ba4b00108	file:
ThreadSpecificData	generic/tclThreadTest.c	/^typedef struct ThreadSpecificData {$/;"	s	file:
ThreadSpecificData	generic/tclThreadTest.c	/^} ThreadSpecificData;$/;"	t	typeref:struct:ThreadSpecificData	file:
ThreadSpecificData	generic/tclTimer.c	/^} ThreadSpecificData;$/;"	t	typeref:struct:__anone9e75be60108	file:
ThreadSpecificData	macosx/tclMacOSXNotify.c	/^typedef struct ThreadSpecificData {$/;"	s	file:
ThreadSpecificData	macosx/tclMacOSXNotify.c	/^} ThreadSpecificData;$/;"	t	typeref:struct:ThreadSpecificData	file:
ThreadSpecificData	unix/dltest/pkgua.c	/^typedef struct ThreadSpecificData {$/;"	s	file:
ThreadSpecificData	unix/dltest/pkgua.c	/^} ThreadSpecificData;$/;"	t	typeref:struct:ThreadSpecificData	file:
ThreadSpecificData	unix/tclEpollNotfy.c	/^typedef struct ThreadSpecificData {$/;"	s	file:
ThreadSpecificData	unix/tclEpollNotfy.c	/^} ThreadSpecificData;$/;"	t	typeref:struct:ThreadSpecificData	file:
ThreadSpecificData	unix/tclKqueueNotfy.c	/^typedef struct ThreadSpecificData {$/;"	s	file:
ThreadSpecificData	unix/tclKqueueNotfy.c	/^} ThreadSpecificData;$/;"	t	typeref:struct:ThreadSpecificData	file:
ThreadSpecificData	unix/tclSelectNotfy.c	/^typedef struct ThreadSpecificData {$/;"	s	file:
ThreadSpecificData	unix/tclSelectNotfy.c	/^} ThreadSpecificData;$/;"	t	typeref:struct:ThreadSpecificData	file:
ThreadSpecificData	unix/tclUnixCompat.c	/^}  ThreadSpecificData;$/;"	t	typeref:struct:__anon1c3f21740108	file:
ThreadSpecificData	win/tclWinChan.c	/^} ThreadSpecificData;$/;"	t	typeref:struct:__anon1518b6be0108	file:
ThreadSpecificData	win/tclWinConsole.c	/^} ThreadSpecificData;$/;"	t	typeref:struct:__anonf117b5370208	file:
ThreadSpecificData	win/tclWinDde.c	/^} ThreadSpecificData;$/;"	t	typeref:struct:__anone96dc6f10208	file:
ThreadSpecificData	win/tclWinNotify.c	/^} ThreadSpecificData;$/;"	t	typeref:struct:__anon2be3cfbd0108	file:
ThreadSpecificData	win/tclWinPipe.c	/^} ThreadSpecificData;$/;"	t	typeref:struct:__anon3385f2d20208	file:
ThreadSpecificData	win/tclWinSerial.c	/^} ThreadSpecificData;$/;"	t	typeref:struct:__anonc2b952240108	file:
ThreadSpecificData	win/tclWinSock.c	/^} ThreadSpecificData;$/;"	t	typeref:struct:__anon3aeaf8540308	file:
ThreadSpecificData	win/tclWinThrd.c	/^typedef struct ThreadSpecificData {$/;"	s	file:
ThreadSpecificData	win/tclWinThrd.c	/^} ThreadSpecificData;$/;"	t	typeref:struct:ThreadSpecificData	file:
Threads	doc/Thread.3	/^.TH Threads 3 "8.1" Tcl "Tcl Library Procedures"$/;"	t
TimeInfo	win/tclWinTime.c	/^} TimeInfo;$/;"	t	typeref:struct:__anon3cd8f0330108	file:
TimeLimitCallback	generic/tclInterp.c	/^TimeLimitCallback($/;"	f	typeref:typename:void	file:
TimeOutNow	tests/httpTestScript.tcl	/^proc httpTestScript::TimeOutNow {} {$/;"	p	namespace:httpTestScript
Time_Stamp	compat/zlib/contrib/ada/test.adb	/^   Time_Stamp : Ada.Calendar.Time;$/;"	v	subprogram:Test	file:
TimerCheckProc	generic/tclTimer.c	/^TimerCheckProc($/;"	f	typeref:typename:void	file:
TimerExitProc	generic/tclTimer.c	/^TimerExitProc($/;"	f	typeref:typename:void	file:
TimerHandler	generic/tclTimer.c	/^typedef struct TimerHandler {$/;"	s	file:
TimerHandler	generic/tclTimer.c	/^} TimerHandler;$/;"	t	typeref:struct:TimerHandler	file:
TimerHandlerEventProc	generic/tclTimer.c	/^TimerHandlerEventProc($/;"	f	typeref:typename:int	file:
TimerKill	generic/tclIORTrans.c	/^TimerKill($/;"	f	typeref:typename:void	file:
TimerRun	generic/tclIORTrans.c	/^TimerRun($/;"	f	typeref:typename:void	file:
TimerRunRead	generic/tclIORChan.c	/^TimerRunRead($/;"	f	typeref:typename:void	file:
TimerRunWrite	generic/tclIORChan.c	/^TimerRunWrite($/;"	f	typeref:typename:void	file:
TimerSetup	generic/tclIORTrans.c	/^TimerSetup($/;"	f	typeref:typename:void	file:
TimerSetupProc	generic/tclTimer.c	/^TimerSetupProc($/;"	f	typeref:typename:void	file:
TimerWakeUp	macosx/tclMacOSXNotify.c	/^TimerWakeUp($/;"	f	typeref:typename:void	file:
TimezoneLoaded	generic/tclClock.c	/^TimezoneLoaded($/;"	f	typeref:typename:void	file:
TimezoneTable	generic/tclDate.c	/^static const TABLE TimezoneTable[] = {$/;"	v	typeref:typename:const TABLE[]	file:
TimezoneTable	generic/tclDateClassic.c	/^static const TABLE TimezoneTable[] = {$/;"	v	typeref:typename:const TABLE[]	file:
ToCTime	win/tclWinChan.c	/^ToCTime($/;"	f	typeref:typename:time_t	file:
ToCTime	win/tclWinFile.c	/^ToCTime($/;"	f	typeref:typename:__time64_t	file:
ToDosDate	generic/tclZipfs.c	/^ToDosDate($/;"	f	typeref:typename:int	file:
ToDosTime	generic/tclZipfs.c	/^ToDosTime($/;"	f	typeref:typename:int	file:
ToSeconds	generic/tclDate.c	/^ToSeconds($/;"	f	typeref:typename:int
ToSeconds	generic/tclDateClassic.c	/^ToSeconds($/;"	f	typeref:typename:time_t	file:
To_Thin_Access	compat/zlib/contrib/ada/zlib.adb	/^   function To_Thin_Access is new Ada.Unchecked_Conversion$/;"	r	package:ZLib	file:
TokenAfter	generic/tclCompile.h	/^#define TokenAfter(/;"	d
Tool Command Language	unix/tcl.pc.in	/^Name: Tool Command Language$/;"	N
Total_In	compat/zlib/contrib/ada/zlib-thin.adb	/^   function Total_In (Strm : in Z_Stream) return ULong is$/;"	r	package:ZLib.Thin	file:
Total_In	compat/zlib/contrib/ada/zlib-thin.ads	/^   function Total_In (Strm : in Z_Stream) return ULong;$/;"	R
Total_In	compat/zlib/contrib/ada/zlib.adb	/^   function Total_In (Filter : in Filter_Type) return Count is$/;"	r	package:ZLib	file:
Total_In	compat/zlib/contrib/ada/zlib.ads	/^   function Total_In (Filter : in Filter_Type) return Count;$/;"	R	packspec:ZLib
Total_Out	compat/zlib/contrib/ada/zlib-thin.adb	/^   function Total_Out (Strm : in Z_Stream) return ULong is$/;"	r	package:ZLib.Thin	file:
Total_Out	compat/zlib/contrib/ada/zlib-thin.ads	/^   function Total_Out (Strm : in Z_Stream) return ULong;$/;"	R
Total_Out	compat/zlib/contrib/ada/zlib.adb	/^   function Total_Out (Filter : in Filter_Type) return Count is$/;"	r	package:ZLib	file:
Total_Out	compat/zlib/contrib/ada/zlib.ads	/^   function Total_Out (Filter : in Filter_Type) return Count;$/;"	R	packspec:ZLib
Trace	compat/zlib/zutil.h	/^#  define Trace(/;"	d
Trace	generic/tclInt.h	/^typedef struct Trace {$/;"	s
Trace	generic/tclInt.h	/^} Trace;$/;"	t	typeref:struct:Trace
TraceCommandInfo	generic/tclTrace.c	/^} TraceCommandInfo;$/;"	t	typeref:struct:__anonfe0b53740308	file:
TraceCommandObjCmd	generic/tclTrace.c	/^TraceCommandObjCmd($/;"	f	typeref:typename:int	file:
TraceCommandObjCmd	generic/tclTrace.c	/^static Tcl_TraceTypeObjCmd TraceCommandObjCmd;$/;"	v	typeref:typename:Tcl_TraceTypeObjCmd	file:
TraceCommandProc	generic/tclTrace.c	/^TraceCommandProc($/;"	f	typeref:typename:void	file:
TraceExecutionObjCmd	generic/tclTrace.c	/^TraceExecutionObjCmd($/;"	f	typeref:typename:int	file:
TraceExecutionObjCmd	generic/tclTrace.c	/^static Tcl_TraceTypeObjCmd TraceExecutionObjCmd;$/;"	v	typeref:typename:Tcl_TraceTypeObjCmd	file:
TraceExecutionProc	generic/tclTrace.c	/^TraceExecutionProc($/;"	f	typeref:typename:int	file:
TraceExecutionProc	generic/tclTrace.c	/^static Tcl_CmdObjTraceProc2 TraceExecutionProc;$/;"	v	typeref:typename:Tcl_CmdObjTraceProc2	file:
TraceProc2	unix/dltest/pkgt.c	/^static int TraceProc2 ($/;"	f	typeref:typename:int	file:
TraceSocketCmd	tests/twapiTlsPlus.tcl	/^proc twapiTlsPlus::TraceSocketCmd {args} {$/;"	p	namespace:twapiTlsPlus
TraceVarEx	generic/tclTrace.c	/^TraceVarEx($/;"	f	typeref:typename:int	file:
TraceVarInfo	generic/tclTrace.c	/^} TraceVarInfo;$/;"	t	typeref:struct:__anonfe0b53740108	file:
TraceVarProc	generic/tclTrace.c	/^TraceVarProc($/;"	f	typeref:typename:char *	file:
TraceVariableObjCmd	generic/tclTrace.c	/^TraceVariableObjCmd($/;"	f	typeref:typename:int	file:
TraceVariableObjCmd	generic/tclTrace.c	/^static Tcl_TraceTypeObjCmd TraceVariableObjCmd;$/;"	v	typeref:typename:Tcl_TraceTypeObjCmd	file:
TraceWrapperInfo	generic/tclTrace.c	/^} TraceWrapperInfo;$/;"	t	typeref:struct:__anonfe0b53740508	file:
Tracec	compat/zlib/zutil.h	/^#  define Tracec(/;"	d
Tracecv	compat/zlib/zutil.h	/^#  define Tracecv(/;"	d
Tracev	compat/zlib/zutil.h	/^#  define Tracev(/;"	d
Tracevv	compat/zlib/zutil.h	/^#  define Tracevv(/;"	d
TransformBlockModeProc	generic/tclIOGT.c	/^TransformBlockModeProc($/;"	f	typeref:typename:int	file:
TransformChannelData	generic/tclIOGT.c	/^struct TransformChannelData {$/;"	s	file:
TransformChannelData	generic/tclIOGT.c	/^typedef struct TransformChannelData TransformChannelData;$/;"	t	typeref:struct:TransformChannelData	file:
TransformChannelHandlerTimer	generic/tclIOGT.c	/^TransformChannelHandlerTimer($/;"	f	typeref:typename:void	file:
TransformClear	generic/tclIORTrans.c	/^TransformClear($/;"	f	typeref:typename:void	file:
TransformCloseProc	generic/tclIOGT.c	/^TransformCloseProc($/;"	f	typeref:typename:int	file:
TransformDrain	generic/tclIORTrans.c	/^TransformDrain($/;"	f	typeref:typename:int	file:
TransformFlush	generic/tclIORTrans.c	/^TransformFlush($/;"	f	typeref:typename:int	file:
TransformGetFileHandleProc	generic/tclIOGT.c	/^TransformGetFileHandleProc($/;"	f	typeref:typename:int	file:
TransformGetOptionProc	generic/tclIOGT.c	/^TransformGetOptionProc($/;"	f	typeref:typename:int	file:
TransformInputProc	generic/tclIOGT.c	/^TransformInputProc($/;"	f	typeref:typename:int	file:
TransformLimit	generic/tclIORTrans.c	/^TransformLimit($/;"	f	typeref:typename:int	file:
TransformNotifyProc	generic/tclIOGT.c	/^TransformNotifyProc($/;"	f	typeref:typename:int	file:
TransformOutputProc	generic/tclIOGT.c	/^TransformOutputProc($/;"	f	typeref:typename:int	file:
TransformRead	generic/tclIORTrans.c	/^TransformRead($/;"	f	typeref:typename:int	file:
TransformSetOptionProc	generic/tclIOGT.c	/^TransformSetOptionProc($/;"	f	typeref:typename:int	file:
TransformWatchProc	generic/tclIOGT.c	/^TransformWatchProc($/;"	f	typeref:typename:void	file:
TransformWideSeekProc	generic/tclIOGT.c	/^TransformWideSeekProc($/;"	f	typeref:typename:long long	file:
TransformWrite	generic/tclIORTrans.c	/^TransformWrite($/;"	f	typeref:typename:int	file:
Translate	compat/zlib/contrib/ada/mtest.adb	/^      procedure Translate is new Generic_Translate$/;"	r	task:Test_Task	file:
Translate	compat/zlib/contrib/ada/test.adb	/^   procedure Translate is new ZLib.Generic_Translate$/;"	r	subprogram:Test	file:
Translate	compat/zlib/contrib/ada/zlib.adb	/^   procedure Translate$/;"	r	package:ZLib	file:
Translate	compat/zlib/contrib/ada/zlib.ads	/^   procedure Translate$/;"	R	packspec:ZLib
TranslateInputEOL	generic/tclIO.c	/^TranslateInputEOL($/;"	f	typeref:typename:void	file:
TranslatePath	library/safe.tcl	/^proc ::safe::TranslatePath {child path} {$/;"	p	namespace:::safe
Translate_Auto	compat/zlib/contrib/ada/zlib.adb	/^   procedure Translate_Auto$/;"	R	package:ZLib	file:
Translate_Auto	compat/zlib/contrib/ada/zlib.adb	/^   procedure Translate_Auto$/;"	r	package:ZLib	file:
Translate_GZip	compat/zlib/contrib/ada/zlib.adb	/^   procedure Translate_GZip$/;"	R	package:ZLib	file:
Translate_GZip	compat/zlib/contrib/ada/zlib.adb	/^   procedure Translate_GZip$/;"	r	package:ZLib	file:
TraversalCopy	unix/tclUnixFCmd.c	/^TraversalCopy($/;"	f	typeref:typename:int	file:
TraversalCopy	win/tclWinFCmd.c	/^TraversalCopy($/;"	f	typeref:typename:int	file:
TraversalDelete	unix/tclUnixFCmd.c	/^TraversalDelete($/;"	f	typeref:typename:int	file:
TraversalDelete	win/tclWinFCmd.c	/^TraversalDelete($/;"	f	typeref:typename:int	file:
TraversalProc	unix/tclUnixFCmd.c	/^typedef int (TraversalProc)(Tcl_DString *srcPtr, Tcl_DString *dstPtr,$/;"	t	typeref:typename:int ()(Tcl_DString * srcPtr,Tcl_DString * dstPtr,const Tcl_StatBuf * statBufPtr,int type,Tcl_DString * errorPtr)	file:
TraversalProc	win/tclWinFCmd.c	/^typedef int (TraversalProc)(const WCHAR *srcPtr, const WCHAR *dstPtr,$/;"	t	typeref:typename:int ()(const WCHAR * srcPtr,const WCHAR * dstPtr,int type,Tcl_DString * errorPtr)	file:
TraverseUnixTree	unix/tclUnixFCmd.c	/^TraverseUnixTree($/;"	f	typeref:typename:int	file:
TraverseWinTree	win/tclWinFCmd.c	/^TraverseWinTree($/;"	f	typeref:typename:int	file:
Travis CI	libtommath/README.md	/^### Travis CI$/;"	S	section:libtommath""Build Status
TrimUnreachable	generic/tclOptimize.c	/^TrimUnreachable($/;"	f	typeref:typename:void	file:
TryFinally	generic/tclCmdMZ.c	/^	TryFinally, TryOn, TryTrap$/;"	e	enum:TclNRTryObjCmd::Handlers	file:
TryOn	generic/tclCmdMZ.c	/^	TryFinally, TryOn, TryTrap$/;"	e	enum:TclNRTryObjCmd::Handlers	file:
TryPostBody	generic/tclCmdMZ.c	/^TryPostBody($/;"	f	typeref:typename:int	file:
TryPostBody	generic/tclCmdMZ.c	/^static Tcl_NRPostProc	TryPostBody;$/;"	v	typeref:typename:Tcl_NRPostProc	file:
TryPostFinal	generic/tclCmdMZ.c	/^TryPostFinal($/;"	f	typeref:typename:int	file:
TryPostFinal	generic/tclCmdMZ.c	/^static Tcl_NRPostProc	TryPostFinal;$/;"	v	typeref:typename:Tcl_NRPostProc	file:
TryPostHandler	generic/tclCmdMZ.c	/^TryPostHandler($/;"	f	typeref:typename:int	file:
TryPostHandler	generic/tclCmdMZ.c	/^static Tcl_NRPostProc	TryPostHandler;$/;"	v	typeref:typename:Tcl_NRPostProc	file:
TryTrap	generic/tclCmdMZ.c	/^	TryFinally, TryOn, TryTrap$/;"	e	enum:TclNRTryObjCmd::Handlers	file:
TsdPerf	tools/tsdPerf.c	/^} TsdPerf;$/;"	t	typeref:struct:__anonbb88a94e0108	file:
Tsdperf_Init	tools/tsdPerf.c	/^Tsdperf_Init(Tcl_Interp *interp) {$/;"	f	typeref:typename:int
TtyAttrs	unix/tclUnixChan.c	/^} TtyAttrs;$/;"	t	typeref:struct:__anone1e2a72a0308	file:
TtyCloseProc	unix/tclUnixChan.c	/^TtyCloseProc($/;"	f	typeref:typename:int	file:
TtyGetAttributes	unix/tclUnixChan.c	/^TtyGetAttributes($/;"	f	typeref:typename:void	file:
TtyGetBaud	unix/tclUnixChan.c	/^TtyGetBaud($/;"	f	typeref:typename:int	file:
TtyGetOptionProc	unix/tclUnixChan.c	/^TtyGetOptionProc($/;"	f	typeref:typename:int	file:
TtyGetSpeed	unix/tclUnixChan.c	/^TtyGetSpeed($/;"	f	typeref:typename:speed_t	file:
TtyInit	unix/tclUnixChan.c	/^TtyInit($/;"	f	typeref:typename:void	file:
TtyModemStatusStr	unix/tclUnixChan.c	/^TtyModemStatusStr($/;"	f	typeref:typename:void	file:
TtyParseMode	unix/tclUnixChan.c	/^TtyParseMode($/;"	f	typeref:typename:int	file:
TtySetAttributes	unix/tclUnixChan.c	/^TtySetAttributes($/;"	f	typeref:typename:void	file:
TtySetOptionProc	unix/tclUnixChan.c	/^TtySetOptionProc($/;"	f	typeref:typename:int	file:
TtyState	unix/tclUnixChan.c	/^} TtyState;$/;"	t	typeref:struct:__anone1e2a72a0208	file:
TypeIdx	win/tclWinReg.c	/^	BroadcastIdx, DeleteIdx, GetIdx, KeysIdx, SetIdx, TypeIdx, ValuesIdx$/;"	e	enum:RegistryObjCmd::SubCmdIdx	file:
Types	generic/tclDisassemble.c	/^    enum Types {$/;"	g	function:Tcl_DisassembleObjCmd	file:
TzsetIfNecessary	generic/tclClock.c	/^TzsetIfNecessary(void)$/;"	f	typeref:typename:size_t	file:
TzsetIfNecessary	generic/tclClockClassic.c	/^TzsetIfNecessary(void)$/;"	f	typeref:typename:void	file:
UBITS	generic/regguts.h	/^#define	UBITS	/;"	d
UBRK_CHARACTERX	generic/tclIcu.c	/^    UBRK_CHARACTERX = 0,$/;"	e	enum:UBreakIteratorTypex	file:
UBRK_WORDX	generic/tclIcu.c	/^    UBRK_WORDX = 1$/;"	e	enum:UBreakIteratorTypex	file:
UBreakIterator	generic/tclIcu.c	/^typedef struct UBreakIterator UBreakIterator;$/;"	t	typeref:struct:UBreakIterator	file:
UBreakIteratorTypex	generic/tclIcu.c	/^typedef enum UBreakIteratorTypex {$/;"	g	file:
UBreakIteratorTypex	generic/tclIcu.c	/^} UBreakIteratorTypex;$/;"	t	typeref:enum:UBreakIteratorTypex	file:
UCHAR	generic/tclInt.h	/^#define UCHAR(/;"	d
UCHARP	generic/tclIOGT.c	/^#define UCHARP(/;"	d	file:
UCHARP	generic/tclIORTrans.c	/^#define UCHARP(/;"	d	file:
UCharsetDetector	generic/tclIcu.c	/^typedef struct UCharsetDetector UCharsetDetector;$/;"	t	typeref:struct:UCharsetDetector	file:
UCharsetMatch	generic/tclIcu.c	/^typedef struct UCharsetMatch UCharsetMatch;$/;"	t	typeref:struct:UCharsetMatch	file:
UEnumeration	generic/tclIcu.c	/^typedef struct UEnumeration UEnumeration;$/;"	t	typeref:struct:UEnumeration	file:
UErrorCodex	generic/tclIcu.c	/^typedef enum UErrorCodex {$/;"	g	file:
UErrorCodex	generic/tclIcu.c	/^} UErrorCodex;$/;"	t	typeref:enum:UErrorCodex	file:
UINT2PTR	generic/tclInt.h	/^#   define UINT2PTR(/;"	d
UINT_LEAST16_MAX	generic/tclDate.c	/^# define UINT_LEAST16_MAX /;"	d	file:
UINT_LEAST16_MAX	generic/tclDateClassic.c	/^# define UINT_LEAST16_MAX /;"	d	file:
UINT_LEAST8_MAX	generic/tclDate.c	/^# define UINT_LEAST8_MAX /;"	d	file:
UINT_LEAST8_MAX	generic/tclDateClassic.c	/^# define UINT_LEAST8_MAX /;"	d	file:
UNALIGNED_OK	compat/zlib/zconf.h	/^#  define UNALIGNED_OK$/;"	d
UNALIGNED_OK	compat/zlib/zconf.h.in	/^#  define UNALIGNED_OK$/;"	d	file:
UNARY	generic/tclCompExpr.c	/^#define UNARY	/;"	d	file:
UNARY_MINUS	generic/tclCompExpr.c	/^#define UNARY_MINUS	/;"	d	file:
UNARY_PLUS	generic/tclCompExpr.c	/^#define UNARY_PLUS	/;"	d	file:
UNASSIGNED	generic/tclUniData.c	/^    UNASSIGNED,$/;"	e	enum:__anon910316cb0103	file:
UNDEFINED VARIABLES	doc/TraceVar.3	/^.SH "UNDEFINED VARIABLES"$/;"	s	title:Tcl_TraceVar
UNDER_CE	libtommath/bn_s_mp_rand_platform.c	/^#define UNDER_CE$/;"	d	file:
UNICODE	compat/zlib/contrib/minizip/tinydir.h	/^#define UNICODE$/;"	d
UNICODE_OUT_OF_RANGE	generic/tclUniData.c	/^# define UNICODE_OUT_OF_RANGE(/;"	d	file:
UNICODE_REPLACE_CHAR	generic/tclEncoding.c	/^#define UNICODE_REPLACE_CHAR /;"	d	file:
UNICODE_SELF	generic/tclUtf.c	/^#define UNICODE_SELF	/;"	d	file:
UNIX_ARCHIVE_ATTRIBUTE	unix/tclUnixFCmd.c	/^    UNIX_ARCHIVE_ATTRIBUTE,$/;"	e	enum:__anone64b006a0103	file:
UNIX_DIR	macosx/GNUmakefile	/^UNIX_DIR		:= ${CURDIR}\/..\/unix$/;"	m
UNIX_DIR	unix/Makefile.in	/^UNIX_DIR		= $(TOP_DIR)\/unix$/;"	m
UNIX_GROUP_ATTRIBUTE	macosx/tclMacOSXFCmd.c	/^    UNIX_GROUP_ATTRIBUTE,$/;"	e	enum:__anon5fc3cb980103	file:
UNIX_GROUP_ATTRIBUTE	unix/tclUnixFCmd.c	/^    UNIX_GROUP_ATTRIBUTE,$/;"	e	enum:__anone64b006a0103	file:
UNIX_HDRS	unix/Makefile.in	/^UNIX_HDRS = \\$/;"	m
UNIX_HIDDEN_ATTRIBUTE	unix/tclUnixFCmd.c	/^    UNIX_HIDDEN_ATTRIBUTE,$/;"	e	enum:__anone64b006a0103	file:
UNIX_INVALID_ATTRIBUTE	unix/tclUnixFCmd.c	/^    UNIX_INVALID_ATTRIBUTE$/;"	e	enum:__anone64b006a0103	file:
UNIX_OBJS	unix/Makefile.in	/^UNIX_OBJS = tclUnixChan.o tclUnixEvent.o tclUnixFCmd.o \\$/;"	m
UNIX_OWNER_ATTRIBUTE	macosx/tclMacOSXFCmd.c	/^    UNIX_OWNER_ATTRIBUTE,$/;"	e	enum:__anon5fc3cb980103	file:
UNIX_OWNER_ATTRIBUTE	unix/tclUnixFCmd.c	/^    UNIX_OWNER_ATTRIBUTE, UNIX_PERMISSIONS_ATTRIBUTE,$/;"	e	enum:__anone64b006a0103	file:
UNIX_PERMISSIONS_ATTRIBUTE	macosx/tclMacOSXFCmd.c	/^    UNIX_PERMISSIONS_ATTRIBUTE,$/;"	e	enum:__anon5fc3cb980103	file:
UNIX_PERMISSIONS_ATTRIBUTE	unix/tclUnixFCmd.c	/^    UNIX_OWNER_ATTRIBUTE, UNIX_PERMISSIONS_ATTRIBUTE,$/;"	e	enum:__anone64b006a0103	file:
UNIX_READONLY_ATTRIBUTE	macosx/tclMacOSXFCmd.c	/^    UNIX_READONLY_ATTRIBUTE,$/;"	e	enum:__anon5fc3cb980103	file:
UNIX_READONLY_ATTRIBUTE	unix/tclUnixFCmd.c	/^    UNIX_READONLY_ATTRIBUTE,$/;"	e	enum:__anone64b006a0103	file:
UNIX_SRCS	unix/Makefile.in	/^UNIX_SRCS = \\$/;"	m
UNIX_SYSTEM_ATTRIBUTE	unix/tclUnixFCmd.c	/^    UNIX_SYSTEM_ATTRIBUTE,$/;"	e	enum:__anone64b006a0103	file:
UNLOADFILEPROC	doc/FileSystem.3	/^.SS UNLOADFILEPROC$/;"	S	section:Filesystem""FILESYSTEM EFFICIENCY
UNLOAD_KEEPLIB	generic/tclLoad.c	/^	UNLOAD_NOCOMPLAIN, UNLOAD_KEEPLIB, UNLOAD_LAST$/;"	e	enum:Tcl_UnloadObjCmd::unloadOptionsEnum	file:
UNLOAD_LAST	generic/tclLoad.c	/^	UNLOAD_NOCOMPLAIN, UNLOAD_KEEPLIB, UNLOAD_LAST$/;"	e	enum:Tcl_UnloadObjCmd::unloadOptionsEnum	file:
UNLOAD_NOCOMPLAIN	generic/tclLoad.c	/^	UNLOAD_NOCOMPLAIN, UNLOAD_KEEPLIB, UNLOAD_LAST$/;"	e	enum:Tcl_UnloadObjCmd::unloadOptionsEnum	file:
UNLOCK_NOTIFIER	macosx/tclMacOSXNotify.c	/^#define UNLOCK_NOTIFIER	/;"	d	file:
UNLOCK_NOTIFIER_INIT	macosx/tclMacOSXNotify.c	/^#define UNLOCK_NOTIFIER_INIT	/;"	d	file:
UNLOCK_NOTIFIER_TSD	macosx/tclMacOSXNotify.c	/^#define UNLOCK_NOTIFIER_TSD	/;"	d	file:
UNSELECT	win/tclWinSock.c	/^    UNSELECT = FALSE		\/* Remove socket from select. *\/$/;"	e	enum:SocketSelectOperations	file:
UNSUPPORTED_OPTION	unix/tclUnixChan.c	/^#define UNSUPPORTED_OPTION(/;"	d	file:
UNUSEDCOLOR	generic/regguts.h	/^#define	UNUSEDCOLOR(/;"	d
UNZ_BADZIPFILE	compat/zlib/contrib/minizip/unzip.h	/^#define UNZ_BADZIPFILE /;"	d
UNZ_BUFSIZE	compat/zlib/contrib/minizip/unzip.c	/^#define UNZ_BUFSIZE /;"	d	file:
UNZ_CRCERROR	compat/zlib/contrib/minizip/unzip.h	/^#define UNZ_CRCERROR /;"	d
UNZ_END_OF_LIST_OF_FILE	compat/zlib/contrib/minizip/unzip.h	/^#define UNZ_END_OF_LIST_OF_FILE /;"	d
UNZ_EOF	compat/zlib/contrib/minizip/unzip.h	/^#define UNZ_EOF /;"	d
UNZ_ERRNO	compat/zlib/contrib/minizip/unzip.h	/^#define UNZ_ERRNO /;"	d
UNZ_INTERNALERROR	compat/zlib/contrib/minizip/unzip.h	/^#define UNZ_INTERNALERROR /;"	d
UNZ_MAXFILENAMEINZIP	compat/zlib/contrib/minizip/unzip.c	/^#define UNZ_MAXFILENAMEINZIP /;"	d	file:
UNZ_OBJS	compat/zlib/contrib/minizip/Makefile	/^UNZ_OBJS = miniunz.o unzip.o ioapi.o ..\/..\/libz.a$/;"	m
UNZ_OK	compat/zlib/contrib/minizip/unzip.h	/^#define UNZ_OK /;"	d
UNZ_PARAMERROR	compat/zlib/contrib/minizip/unzip.h	/^#define UNZ_PARAMERROR /;"	d
UP	generic/regguts.h	/^#define	UP(/;"	d
UPDATE_CHECK	compat/zlib/inflate.c	/^#  define UPDATE_CHECK(/;"	d	file:
UPDATE_HASH	compat/zlib/deflate.c	/^#define UPDATE_HASH(/;"	d	file:
UPPERCASE_LETTER	generic/tclUniData.c	/^    UPPERCASE_LETTER,$/;"	e	enum:__anon910316cb0103	file:
URL	unix/tcl.spec	/^URL:           https:\/\/www.tcl-lang.org\/$/;"	t
USED	libtommath/tommath.h	/^#define USED(m)     (MP_DEPRECATED_PRAGMA("USED /;"	d
USEGETWD	unix/configure.ac	/^AC_CHECK_FUNCS(getcwd, , [AC_DEFINE(USEGETWD, 1, [Is getcwd Posix-compliant?])])$/;"	d
USEWIN32IOAPI	compat/zlib/contrib/minizip/miniunz.c	/^#define USEWIN32IOAPI$/;"	d	file:
USEWIN32IOAPI	compat/zlib/contrib/minizip/minizip.c	/^        #define USEWIN32IOAPI$/;"	d	file:
USE_CLASS_CACHE	generic/tclOOInt.h	/^    USE_CLASS_CACHE = 0x4000,	\/* Flag set to say that the object is a pure$/;"	e	enum:ObjectFlags
USE_DECLARER_NS	generic/tclOOInt.h	/^    USE_DECLARER_NS = 0x80	\/* When set, the method will use the namespace$/;"	e	enum:ProceudreMethodFlags
USE_DTRACE	generic/tclCompile.h	/^#define USE_DTRACE /;"	d
USE_DTRACE	unix/configure.ac	/^    AC_DEFINE(USE_DTRACE, 1, [Are we building with DTrace support?])$/;"	d
USE_FIONBIO	unix/tcl.m4	/^	    AC_DEFINE(USE_FIONBIO, 1, [Should we use FIONBIO?])$/;"	d
USE_OS_UNFAIR_LOCK	macosx/tclMacOSXNotify.c	/^#define USE_OS_UNFAIR_LOCK$/;"	d	file:
USE_PUTENV	unix/tclUnixPort.h	/^#   define USE_PUTENV	/;"	d
USE_PUTENV	win/tclWinPort.h	/^#define USE_PUTENV	/;"	d
USE_PUTENV_FOR_UNSET	win/tclWinPort.h	/^#define USE_PUTENV_FOR_UNSET	/;"	d
USE_TCLALLOC	generic/tclInt.h	/^#   define USE_TCLALLOC /;"	d
USE_TCLOO_STUBS	generic/tclOODecls.h	/^#   define USE_TCLOO_STUBS$/;"	d
USE_TCL_STUBS	generic/tclTest.c	/^#   define USE_TCL_STUBS$/;"	d	file:
USE_TCL_STUBS	generic/tclTestABSList.c	/^#   define USE_TCL_STUBS$/;"	d	file:
USE_TCL_STUBS	generic/tclTestObj.c	/^#   define USE_TCL_STUBS$/;"	d	file:
USE_TCL_STUBS	generic/tclTestProcBodyObj.c	/^#   define USE_TCL_STUBS$/;"	d	file:
USE_TCL_STUBS	generic/tclThreadTest.c	/^#   define USE_TCL_STUBS$/;"	d	file:
USE_TCL_STUBS	unix/tclUnixTest.c	/^#   define USE_TCL_STUBS$/;"	d	file:
USE_TCL_STUBS	unix/tclXtNotify.c	/^#   define USE_TCL_STUBS$/;"	d	file:
USE_TCL_STUBS	unix/tclXtTest.c	/^#   define USE_TCL_STUBS$/;"	d	file:
USE_TCL_STUBS	win/tclWinDde.c	/^#   define USE_TCL_STUBS$/;"	d	file:
USE_TCL_STUBS	win/tclWinReg.c	/^#   define USE_TCL_STUBS$/;"	d	file:
USE_TCL_STUBS	win/tclWinTest.c	/^#   define USE_TCL_STUBS$/;"	d	file:
USE_THREAD_ALLOC	generic/tclInt.h	/^#   define USE_THREAD_ALLOC /;"	d
UTF_EXPANSION_FACTOR	generic/tclIO.c	/^#define UTF_EXPANSION_FACTOR	/;"	d	file:
UTIMEPROC	doc/FileSystem.3	/^.SS UTIMEPROC$/;"	S	section:Filesystem""FILESYSTEM OPERATIONS
UWIDE_MAX	generic/tclPort.h	/^#define UWIDE_MAX /;"	d
U_AMBIGUOUS_ALIAS_WARNING	generic/tclIcu.c	/^    U_AMBIGUOUS_ALIAS_WARNING = -122,$/;"	e	enum:UErrorCodex	file:
U_FAILURE	generic/tclIcu.c	/^#define U_FAILURE(/;"	d	file:
U_SUCCESS	generic/tclIcu.c	/^#define U_SUCCESS(/;"	d	file:
U_ZERO_ERRORZ	generic/tclIcu.c	/^    U_ZERO_ERRORZ =  0,		\/**< No error, no warning. *\/$/;"	e	enum:UErrorCodex	file:
Uncompressed_Data	compat/zlib/contrib/ada/buffer_demo.adb	/^         Uncompressed_Data : Stream_Element_Array (1 .. Text'Length);$/;"	v	identifier:Decompress	file:
UniCharIsAscii	generic/tclCmdMZ.c	/^UniCharIsAscii($/;"	f	typeref:typename:int	file:
UniCharIsAscii	generic/tclCompCmdsSZ.c	/^UniCharIsAscii($/;"	f	typeref:typename:int	file:
UniCharIsHexDigit	generic/tclCmdMZ.c	/^UniCharIsHexDigit($/;"	f	typeref:typename:int	file:
UniCharIsHexDigit	generic/tclCompCmdsSZ.c	/^UniCharIsHexDigit($/;"	f	typeref:typename:int	file:
UniCharNcasememcmp	generic/tclStringObj.c	/^UniCharNcasememcmp($/;"	f	typeref:typename:int	file:
UniCharNmemcmp	generic/tclStringObj.c	/^UniCharNmemcmp($/;"	f	typeref:typename:int	file:
UnicodeLength	generic/tclStringObj.c	/^UnicodeLength($/;"	f	typeref:typename:Tcl_Size	file:
UniquePrefixRegexp	library/clockclassic.tcl	/^proc UniquePrefixRegexp { data } {$/;"	p
UnitsTable	generic/tclDate.c	/^static const TABLE UnitsTable[] = {$/;"	v	typeref:typename:const TABLE[]	file:
UnitsTable	generic/tclDateClassic.c	/^static const TABLE UnitsTable[] = {$/;"	v	typeref:typename:const TABLE[]	file:
Unix notifiers available using epoll() or kqueue()	changes.md	/^## Unix notifiers available using epoll() or kqueue()$/;"	s
UnknownHandler	library/tm.tcl	/^proc ::tcl::tm::UnknownHandler {original name args} {$/;"	p	namespace:::tcl::tm
UnlinkNsPath	generic/tclNamesp.c	/^UnlinkNsPath($/;"	f	typeref:typename:void	file:
UnloadFile	unix/tclLoadDl.c	/^UnloadFile($/;"	f	typeref:typename:void	file:
UnloadFile	unix/tclLoadDyld.c	/^UnloadFile($/;"	f	typeref:typename:void	file:
UnloadFile	unix/tclLoadNext.c	/^UnloadFile($/;"	f	typeref:typename:void	file:
UnloadFile	unix/tclLoadOSF.c	/^UnloadFile($/;"	f	typeref:typename:void	file:
UnloadFile	unix/tclLoadShl.c	/^UnloadFile($/;"	f	typeref:typename:void	file:
UnloadFile	win/tclWinLoad.c	/^UnloadFile($/;"	f	typeref:typename:void	file:
UnloadLibrary	generic/tclLoad.c	/^UnloadLibrary($/;"	f	typeref:typename:int	file:
Unlock	generic/tclZipfs.c	/^Unlock(void)$/;"	f	typeref:typename:void	file:
UnlockBucket	generic/tclThreadAlloc.c	/^UnlockBucket($/;"	f	typeref:typename:void	file:
UnmappedIcuNames	library/icu.tcl	/^    proc UnmappedIcuNames {{pat *}} {$/;"	p	namespace:::::tcl::unsupported::icu
UnmappedTclNames	library/icu.tcl	/^    proc UnmappedTclNames {{pat *}} {$/;"	p	namespace:::::tcl::unsupported::icu
UnmarshallErrorResult	generic/tclIORChan.c	/^UnmarshallErrorResult($/;"	f	typeref:typename:void	file:
UnmarshallErrorResult	generic/tclIORTrans.c	/^UnmarshallErrorResult($/;"	f	typeref:typename:void	file:
UnregisterTcpServerInterpCleanupProc	generic/tclIOCmd.c	/^UnregisterTcpServerInterpCleanupProc($/;"	f	typeref:typename:void	file:
UnsafeEnsembleInfo	generic/tclBasic.c	/^} UnsafeEnsembleInfo;$/;"	t	typeref:struct:__anon6e1456070308	file:
Unset	library/http/http.tcl	/^proc http::Unset {connId} {$/;"	p	namespace:http
UnsetTraced	generic/tclExecute.c	/^#define UnsetTraced(/;"	d	file:
UnsetVarStruct	generic/tclVar.c	/^UnsetVarStruct($/;"	f	typeref:typename:void	file:
Unsigned_32	compat/zlib/contrib/ada/zlib.ads	/^   type Unsigned_32 is new Interfaces.Unsigned_32;$/;"	t	packspec:ZLib
UnstackExpiredCatches	generic/tclAssembly.c	/^UnstackExpiredCatches($/;"	f	typeref:typename:void	file:
Unsupported	generic/tclZipfs.c	/^Unsupported($/;"	f	typeref:typename:void	file:
Update	compat/zlib/contrib/dotzlib/DotZLib/ChecksumImpl.cs	/^        public abstract void Update(byte[] data, int offset, int count);$/;"	m	class:DotZLib.ChecksumGeneratorBase
Update	compat/zlib/contrib/dotzlib/DotZLib/ChecksumImpl.cs	/^        public override void Update(byte[] data, int offset, int count)$/;"	m	class:DotZLib.AdlerChecksum
Update	compat/zlib/contrib/dotzlib/DotZLib/ChecksumImpl.cs	/^        public override void Update(byte[] data, int offset, int count)$/;"	m	class:DotZLib.CRC32Checksum
Update	compat/zlib/contrib/dotzlib/DotZLib/ChecksumImpl.cs	/^        public void Update(byte[] data)$/;"	m	class:DotZLib.ChecksumGeneratorBase
Update	compat/zlib/contrib/dotzlib/DotZLib/ChecksumImpl.cs	/^        public void Update(string data)$/;"	m	class:DotZLib.ChecksumGeneratorBase
Update	compat/zlib/contrib/dotzlib/DotZLib/ChecksumImpl.cs	/^        public void Update(string data, Encoding encoding)$/;"	m	class:DotZLib.ChecksumGeneratorBase
Update	compat/zlib/contrib/dotzlib/DotZLib/DotZLib.cs	/^        void Update(byte[] data);$/;"	m	interface:DotZLib.ChecksumGenerator
Update	compat/zlib/contrib/dotzlib/DotZLib/DotZLib.cs	/^        void Update(byte[] data, int offset, int count);$/;"	m	interface:DotZLib.ChecksumGenerator
Update	compat/zlib/contrib/dotzlib/DotZLib/DotZLib.cs	/^        void Update(string data);$/;"	m	interface:DotZLib.ChecksumGenerator
Update	compat/zlib/contrib/dotzlib/DotZLib/DotZLib.cs	/^        void Update(string data, Encoding encoding);$/;"	m	interface:DotZLib.ChecksumGenerator
UpdateInterest	generic/tclIO.c	/^UpdateInterest($/;"	f	typeref:typename:void	file:
UpdateStringOfArithSeries	generic/tclArithSeries.c	/^UpdateStringOfArithSeries(Tcl_Obj *arithSeriesPtr)$/;"	f	typeref:typename:void	file:
UpdateStringOfBignum	generic/tclObj.c	/^UpdateStringOfBignum($/;"	f	typeref:typename:void	file:
UpdateStringOfByteArray	generic/tclBinary.c	/^UpdateStringOfByteArray($/;"	f	typeref:typename:void	file:
UpdateStringOfDict	generic/tclDictObj.c	/^UpdateStringOfDict($/;"	f	typeref:typename:void	file:
UpdateStringOfDict	generic/tclDictObj.c	/^static Tcl_UpdateStringProc	UpdateStringOfDict;$/;"	v	typeref:typename:Tcl_UpdateStringProc	file:
UpdateStringOfDouble	generic/tclObj.c	/^UpdateStringOfDouble($/;"	f	typeref:typename:void	file:
UpdateStringOfFsPath	generic/tclPathObj.c	/^UpdateStringOfFsPath($/;"	f	typeref:typename:void	file:
UpdateStringOfIndex	generic/tclIndexObj.c	/^UpdateStringOfIndex($/;"	f	typeref:typename:void	file:
UpdateStringOfInstName	generic/tclDisassemble.c	/^UpdateStringOfInstName($/;"	f	typeref:typename:void	file:
UpdateStringOfInt	generic/tclObj.c	/^UpdateStringOfInt($/;"	f	typeref:typename:void	file:
UpdateStringOfLString	generic/tclTestABSList.c	/^UpdateStringOfLString(Tcl_Obj *objPtr)$/;"	f	typeref:typename:void	file:
UpdateStringOfLString	generic/tclTestABSList.c	/^static Tcl_UpdateStringProc UpdateStringOfLString;$/;"	v	typeref:typename:Tcl_UpdateStringProc	file:
UpdateStringOfLgen	generic/tclTestABSList.c	/^UpdateStringOfLgen(Tcl_Obj *objPtr)$/;"	f	typeref:typename:void	file:
UpdateStringOfList	generic/tclListObj.c	/^UpdateStringOfList($/;"	f	typeref:typename:void	file:
UpdateStringOfOSType	macosx/tclMacOSXFCmd.c	/^UpdateStringOfOSType($/;"	f	typeref:typename:void	file:
UpdateStringOfString	generic/tclStringObj.c	/^UpdateStringOfString($/;"	f	typeref:typename:void	file:
UpdateStringOfTestIndexHex	generic/tclTestObjInterface.c	/^UpdateStringOfTestIndexHex($/;"	f	typeref:typename:void	file:
UpdateStringOfTestListInteger	generic/tclTestObjInterfaceInteger.c	/^static void UpdateStringOfTestListInteger(Tcl_Obj *listPtr) {$/;"	f	typeref:typename:void	file:
UpdateTimeEachSecond	win/tclWinTime.c	/^UpdateTimeEachSecond(void)$/;"	f	typeref:typename:void	file:
UpdateWaitingListAndServiceEvents	macosx/tclMacOSXNotify.c	/^UpdateWaitingListAndServiceEvents($/;"	f	typeref:typename:void	file:
UpdateWordBreakREs	library/word.tcl	/^    proc UpdateWordBreakREs args {$/;"	p	namespace:::::tcl
Uplevel_Callback	generic/tclProc.c	/^Uplevel_Callback($/;"	f	typeref:typename:int	file:
Uplevel_Callback	generic/tclProc.c	/^static Tcl_NRPostProc Uplevel_Callback;$/;"	v	typeref:typename:Tcl_NRPostProc	file:
UsesAssemblyCode	compat/zlib/contrib/dotzlib/DotZLib/DotZLib.cs	/^        public bool UsesAssemblyCode { get { return 0 != (_flags & 0x200); } }$/;"	p	class:DotZLib.Info
Utf	doc/Utf.3	/^.TH Utf 3 "8.1" Tcl "Tcl Library Procedures"$/;"	t
Utf16ToUtfProc	generic/tclEncoding.c	/^Utf16ToUtfProc($/;"	f	typeref:typename:int	file:
Utf16ToUtfProc	generic/tclEncoding.c	/^static Tcl_EncodingConvertProc	Utf16ToUtfProc;$/;"	v	typeref:typename:Tcl_EncodingConvertProc	file:
Utf32ToUtfProc	generic/tclEncoding.c	/^Utf32ToUtfProc($/;"	f	typeref:typename:int	file:
Utf32ToUtfProc	generic/tclEncoding.c	/^static Tcl_EncodingConvertProc	Utf32ToUtfProc;$/;"	v	typeref:typename:Tcl_EncodingConvertProc	file:
UtfExtWrapper	generic/tclTest.c	/^static int UtfExtWrapper($/;"	f	typeref:typename:int	file:
UtfNcasememcmp	generic/tclStringObj.c	/^UtfNcasememcmp($/;"	f	typeref:typename:int	file:
UtfNmemcmp	generic/tclStringObj.c	/^UtfNmemcmp($/;"	f	typeref:typename:int	file:
UtfToUcs2Proc	generic/tclEncoding.c	/^UtfToUcs2Proc($/;"	f	typeref:typename:int	file:
UtfToUcs2Proc	generic/tclEncoding.c	/^static Tcl_EncodingConvertProc	UtfToUcs2Proc;$/;"	v	typeref:typename:Tcl_EncodingConvertProc	file:
UtfToUtf16Proc	generic/tclEncoding.c	/^UtfToUtf16Proc($/;"	f	typeref:typename:int	file:
UtfToUtf16Proc	generic/tclEncoding.c	/^static Tcl_EncodingConvertProc	UtfToUtf16Proc;$/;"	v	typeref:typename:Tcl_EncodingConvertProc	file:
UtfToUtf32Proc	generic/tclEncoding.c	/^UtfToUtf32Proc($/;"	f	typeref:typename:int	file:
UtfToUtf32Proc	generic/tclEncoding.c	/^static Tcl_EncodingConvertProc	UtfToUtf32Proc;$/;"	v	typeref:typename:Tcl_EncodingConvertProc	file:
UtfToUtfProc	generic/tclEncoding.c	/^UtfToUtfProc($/;"	f	typeref:typename:int	file:
UtfToUtfProc	generic/tclEncoding.c	/^static Tcl_EncodingConvertProc	UtfToUtfProc;$/;"	v	typeref:typename:Tcl_EncodingConvertProc	file:
UtfTransformFn	generic/tclTest.c	/^UtfTransformFn(Tcl_Interp *interp, Tcl_Encoding encoding, const char *src,$/;"	t	typeref:typename:int ()(Tcl_Interp * interp,Tcl_Encoding encoding,const char * src,Tcl_Size srcLen,int flags,Tcl_EncodingState * statePtr,char * dst,Tcl_Size dstLen,int * srcReadPtr,int * dstWrotePtr,int * dstCharsPtr)	file:
Utils	compat/zlib/contrib/dotzlib/DotZLib/UnitTests.cs	/^    internal class Utils$/;"	c	namespace:DotZLibTests
UueDigits	generic/tclBinary.c	/^static const char UueDigits[65] = {$/;"	v	typeref:typename:const char[65]	file:
VALGRIND	unix/Makefile.in	/^VALGRIND		= valgrind$/;"	m
VALGRINDARGS	unix/Makefile.in	/^VALGRINDARGS		= --tool=memcheck --num-callers=24 \\$/;"	m
VARIABLE	generic/tclCompExpr.c	/^#define VARIABLE	/;"	d	file:
VARIABLES	doc/tclsh.1	/^.SH "VARIABLES"$/;"	s	title:tclsh
VARPTR_KEY	generic/tclTestObj.c	/^#define VARPTR_KEY /;"	d	file:
VAR_ALL_HASH	generic/tclInt.h	/^#define VAR_ALL_HASH /;"	d
VAR_ALL_TRACES	generic/tclInt.h	/^#define VAR_ALL_TRACES /;"	d
VAR_ARGUMENT	generic/tclInt.h	/^#define VAR_ARGUMENT	/;"	d
VAR_ARRAY	generic/tclInt.h	/^#define VAR_ARRAY	/;"	d
VAR_ARRAY_ELEMENT	generic/tclInt.h	/^#define VAR_ARRAY_ELEMENT	/;"	d
VAR_CONSTANT	generic/tclInt.h	/^#define VAR_CONSTANT	/;"	d
VAR_DEAD_HASH	generic/tclInt.h	/^#define VAR_DEAD_HASH	/;"	d
VAR_IN_HASHTABLE	generic/tclInt.h	/^#define VAR_IN_HASHTABLE	/;"	d
VAR_IS_ARGS	generic/tclInt.h	/^#define VAR_IS_ARGS	/;"	d
VAR_LINK	generic/tclInt.h	/^#define VAR_LINK	/;"	d
VAR_NAMESPACE_VAR	generic/tclInt.h	/^#define VAR_NAMESPACE_VAR	/;"	d
VAR_RESOLVED	generic/tclInt.h	/^#define VAR_RESOLVED	/;"	d
VAR_SEARCH_ACTIVE	generic/tclInt.h	/^#define VAR_SEARCH_ACTIVE	/;"	d
VAR_TEMPORARY	generic/tclInt.h	/^#define VAR_TEMPORARY	/;"	d
VAR_TRACED_ARRAY	generic/tclInt.h	/^#define VAR_TRACED_ARRAY	/;"	d
VAR_TRACED_READ	generic/tclInt.h	/^#define VAR_TRACED_READ	/;"	d
VAR_TRACED_UNSET	generic/tclInt.h	/^#define VAR_TRACED_UNSET	/;"	d
VAR_TRACED_WRITE	generic/tclInt.h	/^#define VAR_TRACED_WRITE	/;"	d
VAR_TRACE_ACTIVE	generic/tclInt.h	/^#define VAR_TRACE_ACTIVE	/;"	d
VC_MANIFEST_EMBED_DLL	win/tcl.m4	/^    AC_SUBST(VC_MANIFEST_EMBED_DLL)$/;"	s
VC_MANIFEST_EMBED_EXE	win/tcl.m4	/^    AC_SUBST(VC_MANIFEST_EMBED_EXE)$/;"	s
VER	win/Makefile.in	/^VER			= @TCL_MAJOR_VERSION@@TCL_MINOR_VERSION@$/;"	m
VERR	generic/regcomp.c	/^#define VERR(/;"	d	file:
VERR	generic/regexec.c	/^#define VERR(/;"	d	file:
VERSION	compat/zlib/CMakeLists.txt	/^set(VERSION "1.3.1")$/;"	v
VERSION	doc/CrtChannel.3	/^.SS VERSION$/;"	S	section:Tcl_CreateChannel""TCL_CHANNELTYPE
VERSION	doc/FileSystem.3	/^.SS VERSION$/;"	S	section:Filesystem""FILESYSTEM INFRASTRUCTURE
VERSION	macosx/GNUmakefile	/^VERSION			:= $(shell awk -F= '\/^TCL_VERSION\/ {print $$2; nextfile}' ${UNIX_DIR}\/configure.ac)$/;"	m
VERSION	unix/Makefile.in	/^VERSION			= @TCL_VERSION@$/;"	m
VERSION	win/Makefile.in	/^VERSION = @TCL_VERSION@$/;"	m
VERSIONMADEBY	compat/zlib/contrib/minizip/zip.c	/^# define VERSIONMADEBY /;"	d	file:
VERSION_ERROR	compat/zlib/contrib/ada/zlib.adb	/^       VERSION_ERROR);$/;"	l	type:Return_Code_Enum	file:
VIRTUAL FILESYSTEM INTERFACE	doc/FileSystem.3	/^.SS "VIRTUAL FILESYSTEM INTERFACE"$/;"	S	section:Filesystem""REFERENCE COUNT MANAGEMENT
VIRTUALIZED TIME	doc/GetTime.3	/^.SS "VIRTUALIZED TIME"$/;"	S	section:Tcl_GetTime""DESCRIPTION
VISERR	generic/regcomp.c	/^#define	VISERR(/;"	d	file:
VISERR	generic/regexec.c	/^#define	VISERR(/;"	d	file:
VOLATILE	macosx/tclMacOSXNotify.c	/^#define VOLATILE /;"	d	file:
VOLATILE	macosx/tclMacOSXNotify.c	/^#define VOLATILE$/;"	d	file:
VOL_BUF_SIZE	win/tclWinFile.c	/^#define VOL_BUF_SIZE /;"	d	file:
VOL_BUF_SIZE	win/tclWinTest.c	/^#define VOL_BUF_SIZE /;"	d	file:
VPATH	compat/zlib/nintendods/Makefile	/^export VPATH	:=	$(foreach dir,$(SOURCES),$(CURDIR)\/$(dir)) \\$/;"	m
VPATH	win/Makefile.in	/^VPATH = $(GENERIC_DIR):$(WIN_DIR):$(COMPAT_DIR):$(ZLIB_DIR):$(TOMMATH_DIR)$/;"	m
VS_VERSION_INFO	compat/zlib/win32/zlib1.rc	/^VS_VERSION_INFO		VERSIONINFO$/;"	v
VS_VERSION_INFO	win/tcl.rc	/^VS_VERSION_INFO VERSIONINFO$/;"	v
VS_VERSION_INFO	win/tclsh.rc	/^VS_VERSION_INFO VERSIONINFO$/;"	v
VS_VERSION_INFO	win/tcltest.rc	/^VS_VERSION_INFO VERSIONINFO$/;"	v
V_Flush	compat/zlib/contrib/ada/zlib.adb	/^      V_Flush    : Flush_Mode := Flush;$/;"	v	subprogram:Read	file:
Val	compat/zlib/contrib/iostream2/zstream.h	/^    struct Val { unsigned char byte; size_t word; } val;$/;"	s	class:zstringlen
ValidateFormat	generic/tclScan.c	/^ValidateFormat($/;"	f	typeref:typename:int	file:
ValidateMemory	generic/tclCkalloc.c	/^ValidateMemory($/;"	f	typeref:typename:void	file:
ValidatePcAndStackTop	generic/tclExecute.c	/^ValidatePcAndStackTop($/;"	f	typeref:typename:void	file:
Value	compat/zlib/contrib/dotzlib/DotZLib/ChecksumImpl.cs	/^        public uint Value { get { return _current; } }$/;"	p	class:DotZLib.ChecksumGeneratorBase
Value	compat/zlib/contrib/dotzlib/DotZLib/DotZLib.cs	/^        uint Value { get; }$/;"	p	interface:DotZLib.ChecksumGenerator
ValuesIdx	win/tclWinReg.c	/^	BroadcastIdx, DeleteIdx, GetIdx, KeysIdx, SetIdx, TypeIdx, ValuesIdx$/;"	e	enum:RegistryObjCmd::SubCmdIdx	file:
Var	generic/tclInt.h	/^typedef struct Var {$/;"	s
Var	generic/tclInt.h	/^} Var;$/;"	t	typeref:struct:Var
VarClassList	generic/tclOOInt.h	/^typedef LIST_DYNAMIC(Class *) VarClassList;$/;"	t
VarHashCreateVar	generic/tclExecute.c	/^VarHashCreateVar($/;"	f	typeref:typename:Var *	file:
VarHashCreateVar	generic/tclVar.c	/^VarHashCreateVar($/;"	f	typeref:typename:Var *	file:
VarHashDeleteEntry	generic/tclVar.c	/^#define VarHashDeleteEntry(/;"	d	file:
VarHashDeleteTable	generic/tclVar.c	/^#define VarHashDeleteTable(/;"	d	file:
VarHashFindVar	generic/tclExecute.c	/^#define VarHashFindVar(/;"	d	file:
VarHashFindVar	generic/tclVar.c	/^#define VarHashFindVar(/;"	d	file:
VarHashFirstEntry	generic/tclVar.c	/^#define VarHashFirstEntry(/;"	d	file:
VarHashFirstVar	generic/tclVar.c	/^VarHashFirstVar($/;"	f	typeref:typename:Var *	file:
VarHashGetKey	generic/tclInt.h	/^#define VarHashGetKey(/;"	d
VarHashGetValue	generic/tclExecute.c	/^#define VarHashGetValue(/;"	d	file:
VarHashGetValue	generic/tclVar.c	/^#define VarHashGetValue(/;"	d	file:
VarHashInvalidateEntry	generic/tclVar.c	/^#define VarHashInvalidateEntry(/;"	d	file:
VarHashNextEntry	generic/tclVar.c	/^#define VarHashNextEntry(/;"	d	file:
VarHashNextVar	generic/tclVar.c	/^VarHashNextVar($/;"	f	typeref:typename:Var *	file:
VarHashRefCount	generic/tclInt.h	/^#define VarHashRefCount(/;"	d
VarInHash	generic/tclInt.h	/^typedef struct VarInHash {$/;"	s
VarInHash	generic/tclInt.h	/^} VarInHash;$/;"	t	typeref:struct:VarInHash
VarName	library/safe.tcl	/^proc ::safe::VarName {child} {$/;"	p	namespace:::safe
VarPtrDeleteProc	generic/tclTestObj.c	/^VarPtrDeleteProc($/;"	f	typeref:typename:void	file:
VarTrace	generic/tclInt.h	/^typedef struct VarTrace {$/;"	s
VarTrace	generic/tclInt.h	/^} VarTrace;$/;"	t	typeref:struct:VarTrace
VariableNameList	generic/tclOOInt.h	/^typedef LIST_STATIC(Tcl_Obj *) VariableNameList;$/;"	t
Version	compat/zlib/contrib/ada/zlib.adb	/^   function Version return String is$/;"	r	package:ZLib	file:
Version	compat/zlib/contrib/ada/zlib.ads	/^   function Version return String;$/;"	R	packspec:ZLib
Version	compat/zlib/contrib/dotzlib/DotZLib/DotZLib.cs	/^        public static string Version { get { return zlibVersion(); } }$/;"	p	class:DotZLib.Info
Version	unix/tcl.spec	/^Version:       9.0b4$/;"	t
Visible_Symbols	compat/zlib/contrib/ada/mtest.adb	/^   subtype Visible_Symbols is Stream_Element range 16#20# .. 16#7E#;$/;"	u	subprogram:MTest	file:
Visible_Symbols	compat/zlib/contrib/ada/read.adb	/^   subtype Visible_Symbols$/;"	u	subprogram:Read	file:
Visible_Symbols	compat/zlib/contrib/ada/test.adb	/^      subtype Visible_Symbols is Stream_Element range 16#20# .. 16#7E#;$/;"	u	subprogram:Generate_File	file:
VwaitChannelReadProc	generic/tclEvent.c	/^VwaitChannelReadProc($/;"	f	typeref:typename:void	file:
VwaitChannelWriteProc	generic/tclEvent.c	/^VwaitChannelWriteProc($/;"	f	typeref:typename:void	file:
VwaitItem	generic/tclEvent.c	/^} VwaitItem;$/;"	t	typeref:struct:__anon850510a70208	file:
VwaitTimeoutProc	generic/tclEvent.c	/^VwaitTimeoutProc($/;"	f	typeref:typename:void	file:
VwaitVarProc	generic/tclEvent.c	/^VwaitVarProc($/;"	f	typeref:typename:char *	file:
W	compat/zlib/crc32.c	/^#      define W /;"	d	file:
W	compat/zlib/crc32.c	/^#    define W /;"	d	file:
W	compat/zlib/crc32.c	/^#    define W Z_TESTW$/;"	d	file:
WAIT	tests/httpTestScript.tcl	/^proc httpTestScript::WAIT {t} {$/;"	p	namespace:httpTestScript
WAIT_STATUS_TYPE	unix/tclUnixPort.h	/^#   define WAIT_STATUS_TYPE	/;"	d
WAIT_STATUS_TYPE	win/tclWinPort.h	/^#   define WAIT_STATUS_TYPE /;"	d
WALLOCALIGN	generic/tclExecute.c	/^#define WALLOCALIGN /;"	d	file:
WANT_ITCLPRIVATE	generic/tclOOCall.c	/^#define WANT_ITCLPRIVATE(/;"	d	file:
WANT_PRIVATE	generic/tclOOCall.c	/^#define WANT_PRIVATE(/;"	d	file:
WANT_PUBLIC	generic/tclOOCall.c	/^#define WANT_PUBLIC(/;"	d	file:
WANT_UNEXPORTED	generic/tclOOCall.c	/^#define WANT_UNEXPORTED(/;"	d	file:
WARNING	doc/Async.3	/^.SH WARNING$/;"	s	title:Tcl_AsyncCreate
WATCHPROC	doc/CrtChannel.3	/^.SS WATCHPROC$/;"	S	section:Tcl_CreateChannel""TCL_CHANNELTYPE
WBDRY	generic/regcomp.c	/^#define	WBDRY	/;"	d	file:
WBITS_AUTODETECT	generic/tclZlib.c	/^    WBITS_AUTODETECT = (MAX_WBITS | 32)	\/* Auto-detect format from its header *\/$/;"	e	enum:WBitsFlags	file:
WBITS_GZIP	generic/tclZlib.c	/^    WBITS_GZIP = (MAX_WBITS | 16),	\/* Gzip-format compressed data *\/$/;"	e	enum:WBitsFlags	file:
WBITS_RAW	generic/tclZlib.c	/^    WBITS_RAW = (-MAX_WBITS),		\/* RAW compressed data *\/$/;"	e	enum:WBitsFlags	file:
WBITS_ZLIB	generic/tclZlib.c	/^    WBITS_ZLIB = (MAX_WBITS),		\/* Zlib-format compressed data *\/$/;"	e	enum:WBitsFlags	file:
WBitsFlags	generic/tclZlib.c	/^enum WBitsFlags {$/;"	g	file:
WCHAR	generic/tclClock.c	/^#define WCHAR /;"	d	file:
WCHAR	generic/tclClockClassic.c	/^#define WCHAR /;"	d	file:
WCHAR	generic/tclIOUtil.c	/^#define WCHAR /;"	d	file:
WCHAR	unix/tclUnixPort.h	/^    typedef unsigned short WCHAR;$/;"	t	typeref:typename:unsigned short
WEAK_IMPORT_ATTRIBUTE	unix/tclUnixPort.h	/^#		define WEAK_IMPORT_ATTRIBUTE	/;"	d
WEAK_IMPORT_COPYFILE	macosx/tclMacOSXFCmd.c	/^#define WEAK_IMPORT_COPYFILE$/;"	d	file:
WEAK_IMPORT_NL_LANGINFO	unix/tclUnixInit.c	/^#	    define WEAK_IMPORT_NL_LANGINFO$/;"	d	file:
WEAK_IMPORT_PTHREAD_ATFORK	macosx/tclMacOSXNotify.c	/^#define WEAK_IMPORT_PTHREAD_ATFORK$/;"	d	file:
WEAK_IMPORT_SPINLOCKLOCK	macosx/tclMacOSXNotify.c	/^#define WEAK_IMPORT_SPINLOCKLOCK$/;"	d	file:
WEXITSTATUS	unix/tclUnixPort.h	/^#   define WEXITSTATUS(/;"	d
WEXITSTATUS	win/tclWinPort.h	/^#   define WEXITSTATUS(/;"	d
WHITE	generic/regguts.h	/^#define	WHITE	/;"	d
WHOLE-ARRAY TRACES	doc/TraceVar.3	/^.SH "WHOLE-ARRAY TRACES"$/;"	s	title:Tcl_TraceVar
WIDECHAR	compat/zlib/gzguts.h	/^#  define WIDECHAR$/;"	d
WIDESEEKPROC	doc/CrtChannel.3	/^.SS "WIDESEEKPROC"$/;"	S	section:Tcl_CreateChannel""TCL_CHANNELTYPE
WIDE_MAX	generic/tclPort.h	/^#define WIDE_MAX ((Tcl_WideInt)(UWIDE_MAX /;"	d
WIDE_MIN	generic/tclPort.h	/^#define WIDE_MIN /;"	d
WIDE_RESULT	generic/tclExecute.c	/^#define WIDE_RESULT(/;"	d	file:
WIFEXITED	unix/tclUnixPort.h	/^#   define WIFEXITED(/;"	d
WIFEXITED	win/tclWinPort.h	/^#   define WIFEXITED(/;"	d
WIFSIGNALED	unix/tclUnixPort.h	/^#   define WIFSIGNALED(/;"	d
WIFSIGNALED	win/tclWinPort.h	/^#   define WIFSIGNALED(/;"	d
WIFSTOPPED	unix/tclUnixPort.h	/^#   define WIFSTOPPED(/;"	d
WIFSTOPPED	win/tclWinPort.h	/^#   define WIFSTOPPED(/;"	d
WIN32	compat/zlib/contrib/minizip/configure.ac	/^AM_CONDITIONAL([WIN32], [test "${WIN32}" = "yes"])$/;"	c
WIN32	compat/zlib/zconf.h	/^#    define WIN32$/;"	d
WIN32	compat/zlib/zconf.h.in	/^#    define WIN32$/;"	d	file:
WIN32FILE_IOWIN	compat/zlib/contrib/minizip/iowin32.c	/^} WIN32FILE_IOWIN;$/;"	t	typeref:struct:__anonbfe475c30108	file:
WIN32_LEAN_AND_MEAN	compat/zlib/contrib/minizip/tinydir.h	/^#  define WIN32_LEAN_AND_MEAN$/;"	d
WIN32_LEAN_AND_MEAN	compat/zlib/zconf.h	/^#      define WIN32_LEAN_AND_MEAN$/;"	d
WIN32_LEAN_AND_MEAN	compat/zlib/zconf.h.in	/^#      define WIN32_LEAN_AND_MEAN$/;"	d	file:
WIN32_LEAN_AND_MEAN	libtommath/bn_s_mp_rand_platform.c	/^#define WIN32_LEAN_AND_MEAN$/;"	d	file:
WIN32_LEAN_AND_MEAN	win/tclAppInit.c	/^#define WIN32_LEAN_AND_MEAN$/;"	d	file:
WIN32_LEAN_AND_MEAN	win/tclWinPort.h	/^#define WIN32_LEAN_AND_MEAN$/;"	d
WINAPI_FAMILY_ONE_PARTITION	compat/zlib/contrib/minizip/iowin32.c	/^#define WINAPI_FAMILY_ONE_PARTITION(/;"	d	file:
WINDOWS	compat/zlib/zconf.h	/^#  define WINDOWS$/;"	d
WINDOWS	compat/zlib/zconf.h.in	/^#  define WINDOWS$/;"	d	file:
WINE	win/Makefile.in	/^WINE			= @WINE@$/;"	m
WINSIZE	compat/zlib/examples/zran.c	/^#define WINSIZE /;"	d	file:
WINVER	win/tclWinPort.h	/^#   define WINVER /;"	d
WIN_ARCHIVE_ATTRIBUTE	win/tclWinFCmd.c	/^    WIN_ARCHIVE_ATTRIBUTE,$/;"	e	enum:__anon19810ffe0103	file:
WIN_DIR	win/Makefile.in	/^WIN_DIR			= $(TOP_DIR)\/win$/;"	m
WIN_DIR_NATIVE	win/Makefile.in	/^WIN_DIR_NATIVE		= $(shell $(CYGPATH) '$(WIN_DIR)')$/;"	m
WIN_FILE	win/tclWinPipe.c	/^#define WIN_FILE	/;"	d	file:
WIN_HIDDEN_ATTRIBUTE	win/tclWinFCmd.c	/^    WIN_HIDDEN_ATTRIBUTE,$/;"	e	enum:__anon19810ffe0103	file:
WIN_INIT	compat/zlib/deflate.h	/^#define WIN_INIT /;"	d
WIN_LONGNAME_ATTRIBUTE	win/tclWinFCmd.c	/^    WIN_LONGNAME_ATTRIBUTE,$/;"	e	enum:__anon19810ffe0103	file:
WIN_OBJS	win/Makefile.in	/^WIN_OBJS = \\$/;"	m
WIN_READONLY_ATTRIBUTE	win/tclWinFCmd.c	/^    WIN_READONLY_ATTRIBUTE,$/;"	e	enum:__anon19810ffe0103	file:
WIN_SHORTNAME_ATTRIBUTE	win/tclWinFCmd.c	/^    WIN_SHORTNAME_ATTRIBUTE,$/;"	e	enum:__anon19810ffe0103	file:
WIN_SYSTEM_ATTRIBUTE	win/tclWinFCmd.c	/^    WIN_SYSTEM_ATTRIBUTE$/;"	e	enum:__anon19810ffe0103	file:
WIN_THREAD_BLOCKED	win/tclWinThrd.c	/^#define WIN_THREAD_BLOCKED	/;"	d	file:
WIN_THREAD_RUNNING	win/tclWinThrd.c	/^#define WIN_THREAD_RUNNING	/;"	d	file:
WIN_THREAD_UNINIT	win/tclWinThrd.c	/^#define WIN_THREAD_UNINIT	/;"	d	file:
WM_WAKEUP	win/tclWinNotify.c	/^#define WM_WAKEUP	/;"	d	file:
WMask	compat/zlib/contrib/gcc_gvmat64/gvmat64.S	/^#define WMask            [ rcx + dsWMask]/;"	d	file:
WNDCLASSW	unix/tclSelectNotfy.c	/^} WNDCLASSW;$/;"	t	typeref:struct:__anon69aa703c0408	file:
WNOHANG	unix/tclUnixPort.h	/^#   define WNOHANG /;"	d
WNOHANG	win/tclWinPort.h	/^#   define WNOHANG /;"	d
WORDS_BIGENDIAN	generic/tclInt.h	/^#	     define WORDS_BIGENDIAN /;"	d
WORDS_BIGENDIAN	unix/tclConfig.h.in	/^#  define WORDS_BIGENDIAN /;"	d	file:
WORD_BITS	generic/tclUtf.c	/^#define WORD_BITS /;"	d	file:
WORK	generic/regexec.c	/^#define	WORK	/;"	d	file:
WRITEBUFFERSIZE	compat/zlib/contrib/minizip/miniunz.c	/^#define WRITEBUFFERSIZE /;"	d	file:
WRITEBUFFERSIZE	compat/zlib/contrib/minizip/minizip.c	/^#define WRITEBUFFERSIZE /;"	d	file:
WRITE_16	compat/zlib/contrib/minizip/mztools.c	/^#define WRITE_16(/;"	d	file:
WRITE_32	compat/zlib/contrib/minizip/mztools.c	/^#define WRITE_32(/;"	d	file:
WRITE_8	compat/zlib/contrib/minizip/mztools.c	/^#define WRITE_8(/;"	d	file:
WSAEWOULDBLOCK	unix/tclUnixPort.h	/^#   define WSAEWOULDBLOCK /;"	d
WSIZE	compat/zlib/contrib/infback9/infback9.c	/^#define WSIZE /;"	d	file:
WSTOPSIG	unix/tclUnixPort.h	/^#   define WSTOPSIG(/;"	d
WSTOPSIG	win/tclWinPort.h	/^#   define WSTOPSIG(/;"	d
WTERMSIG	unix/tclUnixPort.h	/^#   define WTERMSIG(/;"	d
WTERMSIG	win/tclWinPort.h	/^#   define WTERMSIG(/;"	d
WUNTRACED	unix/tclUnixPort.h	/^#   define WUNTRACED /;"	d
WUNTRACED	win/tclWinPort.h	/^#   define WUNTRACED /;"	d
W_OK	unix/tclUnixPort.h	/^#   define W_OK	/;"	d
W_OK	win/tclWinPort.h	/^#    define W_OK /;"	d
WaitForConnect	unix/tclUnixSock.c	/^WaitForConnect($/;"	f	typeref:typename:int	file:
WaitForConnect	win/tclWinSock.c	/^WaitForConnect($/;"	f	typeref:typename:int	file:
WaitForRead	win/tclWinPipe.c	/^WaitForRead($/;"	f	typeref:typename:int	file:
WaitForSocketEvent	win/tclWinSock.c	/^WaitForSocketEvent($/;"	f	typeref:typename:int	file:
WaitInfo	compat/waitpid.c	/^typedef struct WaitInfo {$/;"	s	file:
WaitInfo	compat/waitpid.c	/^} WaitInfo;$/;"	t	typeref:struct:WaitInfo	file:
WaitProcessStatus	generic/tclProcess.c	/^WaitProcessStatus($/;"	f	typeref:typename:TclProcessWaitStatus
WeekdayOnOrBefore	generic/tclClock.c	/^WeekdayOnOrBefore($/;"	f	typeref:typename:Tcl_WideInt	file:
WeekdayOnOrBefore	generic/tclClockClassic.c	/^WeekdayOnOrBefore($/;"	f	typeref:typename:Tcl_WideInt	file:
WeekdayOnOrBefore	library/clock.tcl	/^proc ::tcl::clock::WeekdayOnOrBefore { weekday j } {$/;"	p	namespace:::tcl::clock
WeekdayOnOrBefore	library/clockclassic.tcl	/^proc WeekdayOnOrBefore { weekday j } {$/;"	p
WhenFinished	tests/httpTestScript.tcl	/^proc httpTestScript::WhenFinished {hToken} {$/;"	p	namespace:httpTestScript
WideFieldAt	generic/tclClockFmt.c	/^#define WideFieldAt(/;"	d	file:
WidePwrSmallExpon	generic/tclExecute.c	/^WidePwrSmallExpon($/;"	f	typeref:typename:Tcl_WideInt	file:
WillRead	generic/tclIO.c	/^WillRead($/;"	f	typeref:typename:int	file:
WillWrite	generic/tclIO.c	/^WillWrite($/;"	f	typeref:typename:void	file:
WinCondition	win/tclWinThrd.c	/^} WinCondition;$/;"	t	typeref:struct:__anon3cc991560108	file:
WinFile	win/tclWinPipe.c	/^} WinFile;$/;"	t	typeref:struct:__anon3385f2d20108	file:
WinIsDrive	win/tclWinFile.c	/^WinIsDrive($/;"	f	typeref:typename:int	file:
WinIsReserved	win/tclWinFile.c	/^WinIsReserved($/;"	f	typeref:typename:size_t	file:
WinLink	win/tclWinFile.c	/^WinLink($/;"	f	typeref:typename:int	file:
WinReadLink	win/tclWinFile.c	/^WinReadLink($/;"	f	typeref:typename:Tcl_Obj *	file:
WinReadLinkDirectory	win/tclWinFile.c	/^WinReadLinkDirectory($/;"	f	typeref:typename:Tcl_Obj *	file:
WinSymLinkDirectory	win/tclWinFile.c	/^WinSymLinkDirectory($/;"	f	typeref:typename:int	file:
WinThread	win/tclWinThrd.c	/^} WinThread;$/;"	t	typeref:struct:__anon3cc991560308	file:
Win_Bits	compat/zlib/contrib/ada/zlib.adb	/^      Win_Bits : Thin.Int := Thin.Int (Window_Bits);$/;"	v	subprogram:Deflate_Init	file:
Win_Bits	compat/zlib/contrib/ada/zlib.adb	/^      Win_Bits : Thin.Int := Thin.Int (Window_Bits);$/;"	v	subprogram:Inflate_Init	file:
Window_Bits_Type	compat/zlib/contrib/ada/zlib.ads	/^   type Window_Bits_Type is new Integer range 8 .. 15;$/;"	t	packspec:ZLib
WrapNotify	unix/tclUnixSock.c	/^WrapNotify($/;"	f	typeref:typename:void	file:
WrapNotify	unix/tclUnixSock.c	/^static Tcl_FileProc	WrapNotify;$/;"	v	typeref:typename:Tcl_FileProc	file:
Write	compat/zlib/contrib/ada/zlib-streams.adb	/^      procedure Write (Item : in Stream_Element_Array) is$/;"	r	subprogram:Write	file:
Write	compat/zlib/contrib/ada/zlib-streams.adb	/^      procedure Write (Item : in Stream_Element_Array);$/;"	R	subprogram:Write	file:
Write	compat/zlib/contrib/ada/zlib-streams.adb	/^      procedure Write is new ZLib.Write$/;"	r	subprogram:Write	file:
Write	compat/zlib/contrib/ada/zlib-streams.adb	/^   procedure Write$/;"	r	package:ZLib.Streams	file:
Write	compat/zlib/contrib/ada/zlib-streams.ads	/^   procedure Write$/;"	R	packspec:ZLib.Streams
Write	compat/zlib/contrib/ada/zlib.adb	/^   procedure Write$/;"	r	package:ZLib	file:
Write	compat/zlib/contrib/ada/zlib.ads	/^      with procedure Write$/;"	f	subprogspec:Flush	file:
Write	compat/zlib/contrib/ada/zlib.ads	/^   procedure Write$/;"	R	packspec:ZLib
Write	compat/zlib/contrib/delphi/ZLib.pas	/^    function Write(const Buffer; Count: Longint): Longint; override;$/;"	f	typeref:typename:Longint
Write	compat/zlib/contrib/dotzlib/DotZLib/GZipStream.cs	/^        public override void Write(byte[] buffer, int offset, int count)$/;"	m	class:DotZLib.GZipStream
Write	generic/tclIO.c	/^Write($/;"	f	typeref:typename:Tcl_Size	file:
Write	library/http/http.tcl	/^proc http::Write {token} {$/;"	p	namespace:http
WriteByte	compat/zlib/contrib/dotzlib/DotZLib/GZipStream.cs	/^        public override void WriteByte(byte value)$/;"	m	class:DotZLib.GZipStream
WriteBytes	generic/tclIO.c	/^#define WriteBytes(/;"	d	file:
WriteChars	generic/tclIO.c	/^#define WriteChars(/;"	d	file:
WriteConsoleChars	win/tclWinConsole.c	/^WriteConsoleChars($/;"	f	typeref:typename:DWORD	file:
WriteLock	generic/tclZipfs.c	/^WriteLock(void)$/;"	f	typeref:typename:void	file:
WriteProperty	generic/tclOOProp.c	/^WriteProperty($/;"	f	typeref:typename:int	file:
WriteTraced	generic/tclExecute.c	/^#define WriteTraced(/;"	d	file:
Write_EndOfCentralDirectoryRecord	compat/zlib/contrib/minizip/zip.c	/^local int Write_EndOfCentralDirectoryRecord(zip64_internal* zi, uLong size_centraldir, ZPOS64_T /;"	f	typeref:typename:local int
Write_GlobalComment	compat/zlib/contrib/minizip/zip.c	/^local int Write_GlobalComment(zip64_internal* zi, const char* global_comment) {$/;"	f	typeref:typename:local int
Write_LocalFileHeader	compat/zlib/contrib/minizip/zip.c	/^local int Write_LocalFileHeader(zip64_internal* zi, const char* filename, uInt size_extrafield_l/;"	f	typeref:typename:local int
Write_Total_In	compat/zlib/contrib/ada/zlib-streams.adb	/^   function Write_Total_In (Stream : in Stream_Type) return Count is$/;"	r	package:ZLib.Streams	file:
Write_Total_In	compat/zlib/contrib/ada/zlib-streams.ads	/^   function Write_Total_In (Stream : in Stream_Type) return Count;$/;"	R	packspec:ZLib.Streams
Write_Total_Out	compat/zlib/contrib/ada/zlib-streams.adb	/^   function Write_Total_Out (Stream : in Stream_Type) return Count is$/;"	r	package:ZLib.Streams	file:
Write_Total_Out	compat/zlib/contrib/ada/zlib-streams.ads	/^   function Write_Total_Out (Stream : in Stream_Type) return Count;$/;"	R	packspec:ZLib.Streams
Write_Zip64EndOfCentralDirectoryLocator	compat/zlib/contrib/minizip/zip.c	/^local int Write_Zip64EndOfCentralDirectoryLocator(zip64_internal* zi, ZPOS64_T zip64eocd_pos_inz/;"	f	typeref:typename:local int
Write_Zip64EndOfCentralDirectoryRecord	compat/zlib/contrib/minizip/zip.c	/^local int Write_Zip64EndOfCentralDirectoryRecord(zip64_internal* zi, uLong size_centraldir, ZPOS/;"	f	typeref:typename:local int
Writer	compat/zlib/contrib/ada/zlib-streams.ads	/^      Writer     : Filter_Type;$/;"	c	type:Stream_Type	file:
XTTEST_OBJS	unix/Makefile.in	/^XTTEST_OBJS = xtTestInit.o tclTest.o tclTestObj.o tclTestObjInterface.o \\$/;"	m
X_OK	unix/tclUnixPort.h	/^#   define X_OK	/;"	d
X_OK	win/tclWinPort.h	/^#    define X_OK /;"	d
YYABORT	generic/tclDate.c	/^#define YYABORT /;"	d	file:
YYABORT	generic/tclDateClassic.c	/^#define YYABORT /;"	d	file:
YYACCEPT	generic/tclDate.c	/^#define YYACCEPT /;"	d	file:
YYACCEPT	generic/tclDateClassic.c	/^#define YYACCEPT /;"	d	file:
YYBACKUP	generic/tclDate.c	/^#define YYBACKUP(/;"	d	file:
YYBACKUP	generic/tclDateClassic.c	/^#define YYBACKUP(/;"	d	file:
YYBISON	generic/tclDate.c	/^#define YYBISON /;"	d	file:
YYBISON	generic/tclDateClassic.c	/^#define YYBISON /;"	d	file:
YYBISON_VERSION	generic/tclDate.c	/^#define YYBISON_VERSION /;"	d	file:
YYBISON_VERSION	generic/tclDateClassic.c	/^#define YYBISON_VERSION /;"	d	file:
YYCOPY	generic/tclDate.c	/^#   define YYCOPY(/;"	d	file:
YYCOPY	generic/tclDateClassic.c	/^#   define YYCOPY(/;"	d	file:
YYCOPY_NEEDED	generic/tclDate.c	/^# define YYCOPY_NEEDED /;"	d	file:
YYCOPY_NEEDED	generic/tclDateClassic.c	/^# define YYCOPY_NEEDED /;"	d	file:
YYDEBUG	generic/tclDate.c	/^# define YYDEBUG /;"	d	file:
YYDEBUG	generic/tclDateClassic.c	/^# define YYDEBUG /;"	d	file:
YYDPRINTF	generic/tclDate.c	/^# define YYDPRINTF(/;"	d	file:
YYDPRINTF	generic/tclDateClassic.c	/^# define YYDPRINTF(/;"	d	file:
YYEMPTY	generic/tclDate.c	/^    YYEMPTY = -2,$/;"	e	enum:yytokentype	file:
YYEMPTY	generic/tclDateClassic.c	/^    YYEMPTY = -2,$/;"	e	enum:yytokentype	file:
YYENOMEM	generic/tclDate.c	/^enum { YYENOMEM = -2 };$/;"	e	enum:__anone8f8f7230203	file:
YYENOMEM	generic/tclDateClassic.c	/^enum { YYENOMEM = -2 };$/;"	e	enum:__anon0f5179650103	file:
YYEOF	generic/tclDate.c	/^    YYEOF = 0,                     \/* "end of file"  *\/$/;"	e	enum:yytokentype	file:
YYEOF	generic/tclDateClassic.c	/^    YYEOF = 0,                     \/* "end of file"  *\/$/;"	e	enum:yytokentype	file:
YYERRCODE	generic/tclDate.c	/^#define YYERRCODE /;"	d	file:
YYERRCODE	generic/tclDateClassic.c	/^#define YYERRCODE /;"	d	file:
YYERROR	generic/tclDate.c	/^#define YYERROR /;"	d	file:
YYERROR	generic/tclDateClassic.c	/^#define YYERROR /;"	d	file:
YYFINAL	generic/tclDate.c	/^#define YYFINAL /;"	d	file:
YYFINAL	generic/tclDateClassic.c	/^#define YYFINAL /;"	d	file:
YYFPRINTF	generic/tclDate.c	/^#  define YYFPRINTF /;"	d	file:
YYFPRINTF	generic/tclDateClassic.c	/^#  define YYFPRINTF /;"	d	file:
YYFREE	generic/tclDate.c	/^#   define YYFREE /;"	d	file:
YYFREE	generic/tclDate.c	/^#define YYFREE(/;"	d	file:
YYFREE	generic/tclDateClassic.c	/^#   define YYFREE /;"	d	file:
YYFREE	generic/tclDateClassic.c	/^#define YYFREE(/;"	d	file:
YYINITDEPTH	generic/tclDate.c	/^# define YYINITDEPTH /;"	d	file:
YYINITDEPTH	generic/tclDateClassic.c	/^# define YYINITDEPTH /;"	d	file:
YYLAST	generic/tclDate.c	/^#define YYLAST /;"	d	file:
YYLAST	generic/tclDateClassic.c	/^#define YYLAST /;"	d	file:
YYLLOC_DEFAULT	generic/tclDate.c	/^# define YYLLOC_DEFAULT(/;"	d	file:
YYLLOC_DEFAULT	generic/tclDateClassic.c	/^# define YYLLOC_DEFAULT(/;"	d	file:
YYLOCATION_PRINT	generic/tclDate.c	/^#   define YYLOCATION_PRINT /;"	d	file:
YYLOCATION_PRINT	generic/tclDate.c	/^#   define YYLOCATION_PRINT(/;"	d	file:
YYLOCATION_PRINT	generic/tclDateClassic.c	/^#   define YYLOCATION_PRINT /;"	d	file:
YYLOCATION_PRINT	generic/tclDateClassic.c	/^#   define YYLOCATION_PRINT(/;"	d	file:
YYLTYPE	generic/tclDate.c	/^struct YYLTYPE$/;"	s	file:
YYLTYPE	generic/tclDate.c	/^typedef struct YYLTYPE YYLTYPE;$/;"	t	typeref:struct:YYLTYPE	file:
YYLTYPE	generic/tclDateClassic.c	/^struct YYLTYPE$/;"	s	file:
YYLTYPE	generic/tclDateClassic.c	/^typedef struct YYLTYPE YYLTYPE;$/;"	t	typeref:struct:YYLTYPE	file:
YYLTYPE_IS_DECLARED	generic/tclDate.c	/^# define YYLTYPE_IS_DECLARED /;"	d	file:
YYLTYPE_IS_DECLARED	generic/tclDateClassic.c	/^# define YYLTYPE_IS_DECLARED /;"	d	file:
YYLTYPE_IS_TRIVIAL	generic/tclDate.c	/^# define YYLTYPE_IS_TRIVIAL /;"	d	file:
YYLTYPE_IS_TRIVIAL	generic/tclDateClassic.c	/^# define YYLTYPE_IS_TRIVIAL /;"	d	file:
YYMALLOC	generic/tclDate.c	/^#   define YYMALLOC /;"	d	file:
YYMALLOC	generic/tclDate.c	/^#define YYMALLOC	/;"	d	file:
YYMALLOC	generic/tclDateClassic.c	/^#   define YYMALLOC /;"	d	file:
YYMALLOC	generic/tclDateClassic.c	/^#define YYMALLOC	/;"	d	file:
YYMAXDEPTH	generic/tclDate.c	/^# define YYMAXDEPTH /;"	d	file:
YYMAXDEPTH	generic/tclDateClassic.c	/^# define YYMAXDEPTH /;"	d	file:
YYMAXUTOK	generic/tclDate.c	/^#define YYMAXUTOK /;"	d	file:
YYMAXUTOK	generic/tclDateClassic.c	/^#define YYMAXUTOK /;"	d	file:
YYNNTS	generic/tclDate.c	/^#define YYNNTS /;"	d	file:
YYNNTS	generic/tclDateClassic.c	/^#define YYNNTS /;"	d	file:
YYNOMEM	generic/tclDate.c	/^#define YYNOMEM /;"	d	file:
YYNOMEM	generic/tclDateClassic.c	/^#define YYNOMEM /;"	d	file:
YYNRULES	generic/tclDate.c	/^#define YYNRULES /;"	d	file:
YYNRULES	generic/tclDateClassic.c	/^#define YYNRULES /;"	d	file:
YYNSTATES	generic/tclDate.c	/^#define YYNSTATES /;"	d	file:
YYNSTATES	generic/tclDateClassic.c	/^#define YYNSTATES /;"	d	file:
YYNTOKENS	generic/tclDate.c	/^#define YYNTOKENS /;"	d	file:
YYNTOKENS	generic/tclDateClassic.c	/^#define YYNTOKENS /;"	d	file:
YYPACT_NINF	generic/tclDate.c	/^#define YYPACT_NINF /;"	d	file:
YYPACT_NINF	generic/tclDateClassic.c	/^#define YYPACT_NINF /;"	d	file:
YYPOPSTACK	generic/tclDate.c	/^#define YYPOPSTACK(/;"	d	file:
YYPOPSTACK	generic/tclDateClassic.c	/^#define YYPOPSTACK(/;"	d	file:
YYPTRDIFF_MAXIMUM	generic/tclDate.c	/^#  define YYPTRDIFF_MAXIMUM /;"	d	file:
YYPTRDIFF_MAXIMUM	generic/tclDateClassic.c	/^#  define YYPTRDIFF_MAXIMUM /;"	d	file:
YYPTRDIFF_T	generic/tclDate.c	/^#  define YYPTRDIFF_T /;"	d	file:
YYPTRDIFF_T	generic/tclDateClassic.c	/^#  define YYPTRDIFF_T /;"	d	file:
YYPULL	generic/tclDate.c	/^#define YYPULL /;"	d	file:
YYPULL	generic/tclDateClassic.c	/^#define YYPULL /;"	d	file:
YYPURE	generic/tclDate.c	/^#define YYPURE /;"	d	file:
YYPURE	generic/tclDateClassic.c	/^#define YYPURE /;"	d	file:
YYPUSH	generic/tclDate.c	/^#define YYPUSH /;"	d	file:
YYPUSH	generic/tclDateClassic.c	/^#define YYPUSH /;"	d	file:
YYRECOVERING	generic/tclDate.c	/^#define YYRECOVERING(/;"	d	file:
YYRECOVERING	generic/tclDateClassic.c	/^#define YYRECOVERING(/;"	d	file:
YYRHSLOC	generic/tclDate.c	/^#define YYRHSLOC(/;"	d	file:
YYRHSLOC	generic/tclDateClassic.c	/^#define YYRHSLOC(/;"	d	file:
YYSIZEOF	generic/tclDate.c	/^#define YYSIZEOF(/;"	d	file:
YYSIZEOF	generic/tclDateClassic.c	/^#define YYSIZEOF(/;"	d	file:
YYSIZE_MAXIMUM	generic/tclDate.c	/^#define YYSIZE_MAXIMUM /;"	d	file:
YYSIZE_MAXIMUM	generic/tclDateClassic.c	/^#define YYSIZE_MAXIMUM /;"	d	file:
YYSIZE_T	generic/tclDate.c	/^#  define YYSIZE_T /;"	d	file:
YYSIZE_T	generic/tclDateClassic.c	/^#  define YYSIZE_T /;"	d	file:
YYSKELETON_NAME	generic/tclDate.c	/^#define YYSKELETON_NAME /;"	d	file:
YYSKELETON_NAME	generic/tclDateClassic.c	/^#define YYSKELETON_NAME /;"	d	file:
YYSTACK_ALLOC	generic/tclDate.c	/^#    define YYSTACK_ALLOC /;"	d	file:
YYSTACK_ALLOC	generic/tclDate.c	/^#  define YYSTACK_ALLOC /;"	d	file:
YYSTACK_ALLOC	generic/tclDateClassic.c	/^#    define YYSTACK_ALLOC /;"	d	file:
YYSTACK_ALLOC	generic/tclDateClassic.c	/^#  define YYSTACK_ALLOC /;"	d	file:
YYSTACK_ALLOC_MAXIMUM	generic/tclDate.c	/^#   define YYSTACK_ALLOC_MAXIMUM /;"	d	file:
YYSTACK_ALLOC_MAXIMUM	generic/tclDateClassic.c	/^#   define YYSTACK_ALLOC_MAXIMUM /;"	d	file:
YYSTACK_BYTES	generic/tclDate.c	/^# define YYSTACK_BYTES(/;"	d	file:
YYSTACK_BYTES	generic/tclDateClassic.c	/^# define YYSTACK_BYTES(/;"	d	file:
YYSTACK_FREE	generic/tclDate.c	/^#  define YYSTACK_FREE /;"	d	file:
YYSTACK_FREE	generic/tclDate.c	/^#  define YYSTACK_FREE(/;"	d	file:
YYSTACK_FREE	generic/tclDateClassic.c	/^#  define YYSTACK_FREE /;"	d	file:
YYSTACK_FREE	generic/tclDateClassic.c	/^#  define YYSTACK_FREE(/;"	d	file:
YYSTACK_GAP_MAXIMUM	generic/tclDate.c	/^# define YYSTACK_GAP_MAXIMUM /;"	d	file:
YYSTACK_GAP_MAXIMUM	generic/tclDateClassic.c	/^# define YYSTACK_GAP_MAXIMUM /;"	d	file:
YYSTACK_RELOCATE	generic/tclDate.c	/^# define YYSTACK_RELOCATE(/;"	d	file:
YYSTACK_RELOCATE	generic/tclDateClassic.c	/^# define YYSTACK_RELOCATE(/;"	d	file:
YYSTYPE	generic/tclDate.c	/^typedef union YYSTYPE YYSTYPE;$/;"	t	typeref:union:YYSTYPE	file:
YYSTYPE	generic/tclDate.c	/^union YYSTYPE$/;"	u	file:
YYSTYPE	generic/tclDateClassic.c	/^typedef union YYSTYPE YYSTYPE;$/;"	t	typeref:union:YYSTYPE	file:
YYSTYPE	generic/tclDateClassic.c	/^union YYSTYPE$/;"	u	file:
YYSTYPE_IS_DECLARED	generic/tclDate.c	/^# define YYSTYPE_IS_DECLARED /;"	d	file:
YYSTYPE_IS_DECLARED	generic/tclDateClassic.c	/^# define YYSTYPE_IS_DECLARED /;"	d	file:
YYSTYPE_IS_TRIVIAL	generic/tclDate.c	/^# define YYSTYPE_IS_TRIVIAL /;"	d	file:
YYSTYPE_IS_TRIVIAL	generic/tclDateClassic.c	/^# define YYSTYPE_IS_TRIVIAL /;"	d	file:
YYSYMBOL_20_	generic/tclDateClassic.c	/^  YYSYMBOL_20_ = 20,                       \/* ':'  *\/$/;"	e	enum:yysymbol_kind_t	file:
YYSYMBOL_21_	generic/tclDateClassic.c	/^  YYSYMBOL_21_ = 21,                       \/* ','  *\/$/;"	e	enum:yysymbol_kind_t	file:
YYSYMBOL_22_	generic/tclDateClassic.c	/^  YYSYMBOL_22_ = 22,                       \/* '\/'  *\/$/;"	e	enum:yysymbol_kind_t	file:
YYSYMBOL_23_	generic/tclDateClassic.c	/^  YYSYMBOL_23_ = 23,                       \/* '-'  *\/$/;"	e	enum:yysymbol_kind_t	file:
YYSYMBOL_24_	generic/tclDate.c	/^  YYSYMBOL_24_ = 24,                       \/* ':'  *\/$/;"	e	enum:yysymbol_kind_t	file:
YYSYMBOL_24_	generic/tclDateClassic.c	/^  YYSYMBOL_24_ = 24,                       \/* '.'  *\/$/;"	e	enum:yysymbol_kind_t	file:
YYSYMBOL_25_	generic/tclDate.c	/^  YYSYMBOL_25_ = 25,                       \/* ','  *\/$/;"	e	enum:yysymbol_kind_t	file:
YYSYMBOL_25_	generic/tclDateClassic.c	/^  YYSYMBOL_25_ = 25,                       \/* '+'  *\/$/;"	e	enum:yysymbol_kind_t	file:
YYSYMBOL_26_	generic/tclDate.c	/^  YYSYMBOL_26_ = 26,                       \/* '-'  *\/$/;"	e	enum:yysymbol_kind_t	file:
YYSYMBOL_27_	generic/tclDate.c	/^  YYSYMBOL_27_ = 27,                       \/* '\/'  *\/$/;"	e	enum:yysymbol_kind_t	file:
YYSYMBOL_28_T_	generic/tclDate.c	/^  YYSYMBOL_28_T_ = 28,                     \/* 'T'  *\/$/;"	e	enum:yysymbol_kind_t	file:
YYSYMBOL_29_	generic/tclDate.c	/^  YYSYMBOL_29_ = 29,                       \/* '.'  *\/$/;"	e	enum:yysymbol_kind_t	file:
YYSYMBOL_30_	generic/tclDate.c	/^  YYSYMBOL_30_ = 30,                       \/* '+'  *\/$/;"	e	enum:yysymbol_kind_t	file:
YYSYMBOL_INTNUM	generic/tclDate.c	/^  YYSYMBOL_INTNUM = 51,                    \/* INTNUM  *\/$/;"	e	enum:yysymbol_kind_t	file:
YYSYMBOL_SP	generic/tclDate.c	/^  YYSYMBOL_SP = 23,                        \/* SP  *\/$/;"	e	enum:yysymbol_kind_t	file:
YYSYMBOL_YYACCEPT	generic/tclDate.c	/^  YYSYMBOL_YYACCEPT = 31,                  \/* $accept  *\/$/;"	e	enum:yysymbol_kind_t	file:
YYSYMBOL_YYACCEPT	generic/tclDateClassic.c	/^  YYSYMBOL_YYACCEPT = 26,                  \/* $accept  *\/$/;"	e	enum:yysymbol_kind_t	file:
YYSYMBOL_YYEMPTY	generic/tclDate.c	/^  YYSYMBOL_YYEMPTY = -2,$/;"	e	enum:yysymbol_kind_t	file:
YYSYMBOL_YYEMPTY	generic/tclDateClassic.c	/^  YYSYMBOL_YYEMPTY = -2,$/;"	e	enum:yysymbol_kind_t	file:
YYSYMBOL_YYEOF	generic/tclDate.c	/^  YYSYMBOL_YYEOF = 0,                      \/* "end of file"  *\/$/;"	e	enum:yysymbol_kind_t	file:
YYSYMBOL_YYEOF	generic/tclDateClassic.c	/^  YYSYMBOL_YYEOF = 0,                      \/* "end of file"  *\/$/;"	e	enum:yysymbol_kind_t	file:
YYSYMBOL_YYUNDEF	generic/tclDate.c	/^  YYSYMBOL_YYUNDEF = 2,                    \/* "invalid token"  *\/$/;"	e	enum:yysymbol_kind_t	file:
YYSYMBOL_YYUNDEF	generic/tclDateClassic.c	/^  YYSYMBOL_YYUNDEF = 2,                    \/* "invalid token"  *\/$/;"	e	enum:yysymbol_kind_t	file:
YYSYMBOL_YYerror	generic/tclDate.c	/^  YYSYMBOL_YYerror = 1,                    \/* error  *\/$/;"	e	enum:yysymbol_kind_t	file:
YYSYMBOL_YYerror	generic/tclDateClassic.c	/^  YYSYMBOL_YYerror = 1,                    \/* error  *\/$/;"	e	enum:yysymbol_kind_t	file:
YYSYMBOL_comma	generic/tclDate.c	/^  YYSYMBOL_comma = 37,                     \/* comma  *\/$/;"	e	enum:yysymbol_kind_t	file:
YYSYMBOL_date	generic/tclDate.c	/^  YYSYMBOL_date = 40,                      \/* date  *\/$/;"	e	enum:yysymbol_kind_t	file:
YYSYMBOL_date	generic/tclDateClassic.c	/^  YYSYMBOL_date = 32,                      \/* date  *\/$/;"	e	enum:yysymbol_kind_t	file:
YYSYMBOL_day	generic/tclDate.c	/^  YYSYMBOL_day = 38,                       \/* day  *\/$/;"	e	enum:yysymbol_kind_t	file:
YYSYMBOL_day	generic/tclDateClassic.c	/^  YYSYMBOL_day = 31,                       \/* day  *\/$/;"	e	enum:yysymbol_kind_t	file:
YYSYMBOL_iexdate	generic/tclDate.c	/^  YYSYMBOL_iexdate = 39,                   \/* iexdate  *\/$/;"	e	enum:yysymbol_kind_t	file:
YYSYMBOL_iextime	generic/tclDate.c	/^  YYSYMBOL_iextime = 34,                   \/* iextime  *\/$/;"	e	enum:yysymbol_kind_t	file:
YYSYMBOL_iso	generic/tclDate.c	/^  YYSYMBOL_iso = 45,                       \/* iso  *\/$/;"	e	enum:yysymbol_kind_t	file:
YYSYMBOL_iso	generic/tclDateClassic.c	/^  YYSYMBOL_iso = 34,                       \/* iso  *\/$/;"	e	enum:yysymbol_kind_t	file:
YYSYMBOL_isodate	generic/tclDate.c	/^  YYSYMBOL_isodate = 43,                   \/* isodate  *\/$/;"	e	enum:yysymbol_kind_t	file:
YYSYMBOL_isosep	generic/tclDate.c	/^  YYSYMBOL_isosep = 42,                    \/* isosep  *\/$/;"	e	enum:yysymbol_kind_t	file:
YYSYMBOL_isotime	generic/tclDate.c	/^  YYSYMBOL_isotime = 44,                   \/* isotime  *\/$/;"	e	enum:yysymbol_kind_t	file:
YYSYMBOL_item	generic/tclDate.c	/^  YYSYMBOL_item = 33,                      \/* item  *\/$/;"	e	enum:yysymbol_kind_t	file:
YYSYMBOL_item	generic/tclDateClassic.c	/^  YYSYMBOL_item = 28,                      \/* item  *\/$/;"	e	enum:yysymbol_kind_t	file:
YYSYMBOL_number	generic/tclDateClassic.c	/^  YYSYMBOL_number = 40,                    \/* number  *\/$/;"	e	enum:yysymbol_kind_t	file:
YYSYMBOL_numitem	generic/tclDate.c	/^  YYSYMBOL_numitem = 52,                   \/* numitem  *\/$/;"	e	enum:yysymbol_kind_t	file:
YYSYMBOL_o_merid	generic/tclDate.c	/^  YYSYMBOL_o_merid = 53                    \/* o_merid  *\/$/;"	e	enum:yysymbol_kind_t	file:
YYSYMBOL_o_merid	generic/tclDateClassic.c	/^  YYSYMBOL_o_merid = 41                    \/* o_merid  *\/$/;"	e	enum:yysymbol_kind_t	file:
YYSYMBOL_ordMonth	generic/tclDate.c	/^  YYSYMBOL_ordMonth = 41,                  \/* ordMonth  *\/$/;"	e	enum:yysymbol_kind_t	file:
YYSYMBOL_ordMonth	generic/tclDateClassic.c	/^  YYSYMBOL_ordMonth = 33,                  \/* ordMonth  *\/$/;"	e	enum:yysymbol_kind_t	file:
YYSYMBOL_relspec	generic/tclDate.c	/^  YYSYMBOL_relspec = 47,                   \/* relspec  *\/$/;"	e	enum:yysymbol_kind_t	file:
YYSYMBOL_relspec	generic/tclDateClassic.c	/^  YYSYMBOL_relspec = 36,                   \/* relspec  *\/$/;"	e	enum:yysymbol_kind_t	file:
YYSYMBOL_relunits	generic/tclDate.c	/^  YYSYMBOL_relunits = 48,                  \/* relunits  *\/$/;"	e	enum:yysymbol_kind_t	file:
YYSYMBOL_relunits	generic/tclDateClassic.c	/^  YYSYMBOL_relunits = 37,                  \/* relunits  *\/$/;"	e	enum:yysymbol_kind_t	file:
YYSYMBOL_sign	generic/tclDate.c	/^  YYSYMBOL_sign = 49,                      \/* sign  *\/$/;"	e	enum:yysymbol_kind_t	file:
YYSYMBOL_sign	generic/tclDateClassic.c	/^  YYSYMBOL_sign = 38,                      \/* sign  *\/$/;"	e	enum:yysymbol_kind_t	file:
YYSYMBOL_spec	generic/tclDate.c	/^  YYSYMBOL_spec = 32,                      \/* spec  *\/$/;"	e	enum:yysymbol_kind_t	file:
YYSYMBOL_spec	generic/tclDateClassic.c	/^  YYSYMBOL_spec = 27,                      \/* spec  *\/$/;"	e	enum:yysymbol_kind_t	file:
YYSYMBOL_tAGO	generic/tclDate.c	/^  YYSYMBOL_tAGO = 3,                       \/* tAGO  *\/$/;"	e	enum:yysymbol_kind_t	file:
YYSYMBOL_tAGO	generic/tclDateClassic.c	/^  YYSYMBOL_tAGO = 3,                       \/* tAGO  *\/$/;"	e	enum:yysymbol_kind_t	file:
YYSYMBOL_tDAY	generic/tclDate.c	/^  YYSYMBOL_tDAY = 4,                       \/* tDAY  *\/$/;"	e	enum:yysymbol_kind_t	file:
YYSYMBOL_tDAY	generic/tclDateClassic.c	/^  YYSYMBOL_tDAY = 4,                       \/* tDAY  *\/$/;"	e	enum:yysymbol_kind_t	file:
YYSYMBOL_tDAYZONE	generic/tclDate.c	/^  YYSYMBOL_tDAYZONE = 5,                   \/* tDAYZONE  *\/$/;"	e	enum:yysymbol_kind_t	file:
YYSYMBOL_tDAYZONE	generic/tclDateClassic.c	/^  YYSYMBOL_tDAYZONE = 5,                   \/* tDAYZONE  *\/$/;"	e	enum:yysymbol_kind_t	file:
YYSYMBOL_tDAY_UNIT	generic/tclDate.c	/^  YYSYMBOL_tDAY_UNIT = 21,                 \/* tDAY_UNIT  *\/$/;"	e	enum:yysymbol_kind_t	file:
YYSYMBOL_tDAY_UNIT	generic/tclDateClassic.c	/^  YYSYMBOL_tDAY_UNIT = 18,                 \/* tDAY_UNIT  *\/$/;"	e	enum:yysymbol_kind_t	file:
YYSYMBOL_tDST	generic/tclDate.c	/^  YYSYMBOL_tDST = 17,                      \/* tDST  *\/$/;"	e	enum:yysymbol_kind_t	file:
YYSYMBOL_tDST	generic/tclDateClassic.c	/^  YYSYMBOL_tDST = 16,                      \/* tDST  *\/$/;"	e	enum:yysymbol_kind_t	file:
YYSYMBOL_tEPOCH	generic/tclDate.c	/^  YYSYMBOL_tEPOCH = 16,                    \/* tEPOCH  *\/$/;"	e	enum:yysymbol_kind_t	file:
YYSYMBOL_tEPOCH	generic/tclDateClassic.c	/^  YYSYMBOL_tEPOCH = 15,                    \/* tEPOCH  *\/$/;"	e	enum:yysymbol_kind_t	file:
YYSYMBOL_tID	generic/tclDate.c	/^  YYSYMBOL_tID = 6,                        \/* tID  *\/$/;"	e	enum:yysymbol_kind_t	file:
YYSYMBOL_tID	generic/tclDateClassic.c	/^  YYSYMBOL_tID = 6,                        \/* tID  *\/$/;"	e	enum:yysymbol_kind_t	file:
YYSYMBOL_tISOBAS6	generic/tclDate.c	/^  YYSYMBOL_tISOBAS6 = 19,                  \/* tISOBAS6  *\/$/;"	e	enum:yysymbol_kind_t	file:
YYSYMBOL_tISOBAS8	generic/tclDate.c	/^  YYSYMBOL_tISOBAS8 = 18,                  \/* tISOBAS8  *\/$/;"	e	enum:yysymbol_kind_t	file:
YYSYMBOL_tISOBASE	generic/tclDateClassic.c	/^  YYSYMBOL_tISOBASE = 17,                  \/* tISOBASE  *\/$/;"	e	enum:yysymbol_kind_t	file:
YYSYMBOL_tISOBASL	generic/tclDate.c	/^  YYSYMBOL_tISOBASL = 20,                  \/* tISOBASL  *\/$/;"	e	enum:yysymbol_kind_t	file:
YYSYMBOL_tMERIDIAN	generic/tclDate.c	/^  YYSYMBOL_tMERIDIAN = 7,                  \/* tMERIDIAN  *\/$/;"	e	enum:yysymbol_kind_t	file:
YYSYMBOL_tMERIDIAN	generic/tclDateClassic.c	/^  YYSYMBOL_tMERIDIAN = 7,                  \/* tMERIDIAN  *\/$/;"	e	enum:yysymbol_kind_t	file:
YYSYMBOL_tMONTH	generic/tclDate.c	/^  YYSYMBOL_tMONTH = 8,                     \/* tMONTH  *\/$/;"	e	enum:yysymbol_kind_t	file:
YYSYMBOL_tMONTH	generic/tclDateClassic.c	/^  YYSYMBOL_tMONTH = 8,                     \/* tMONTH  *\/$/;"	e	enum:yysymbol_kind_t	file:
YYSYMBOL_tMONTH_UNIT	generic/tclDate.c	/^  YYSYMBOL_tMONTH_UNIT = 9,                \/* tMONTH_UNIT  *\/$/;"	e	enum:yysymbol_kind_t	file:
YYSYMBOL_tMONTH_UNIT	generic/tclDateClassic.c	/^  YYSYMBOL_tMONTH_UNIT = 9,                \/* tMONTH_UNIT  *\/$/;"	e	enum:yysymbol_kind_t	file:
YYSYMBOL_tNEXT	generic/tclDate.c	/^  YYSYMBOL_tNEXT = 22,                     \/* tNEXT  *\/$/;"	e	enum:yysymbol_kind_t	file:
YYSYMBOL_tNEXT	generic/tclDateClassic.c	/^  YYSYMBOL_tNEXT = 19,                     \/* tNEXT  *\/$/;"	e	enum:yysymbol_kind_t	file:
YYSYMBOL_tSEC_UNIT	generic/tclDate.c	/^  YYSYMBOL_tSEC_UNIT = 11,                 \/* tSEC_UNIT  *\/$/;"	e	enum:yysymbol_kind_t	file:
YYSYMBOL_tSEC_UNIT	generic/tclDateClassic.c	/^  YYSYMBOL_tSEC_UNIT = 11,                 \/* tSEC_UNIT  *\/$/;"	e	enum:yysymbol_kind_t	file:
YYSYMBOL_tSNUMBER	generic/tclDateClassic.c	/^  YYSYMBOL_tSNUMBER = 12,                  \/* tSNUMBER  *\/$/;"	e	enum:yysymbol_kind_t	file:
YYSYMBOL_tSTARDATE	generic/tclDate.c	/^  YYSYMBOL_tSTARDATE = 10,                 \/* tSTARDATE  *\/$/;"	e	enum:yysymbol_kind_t	file:
YYSYMBOL_tSTARDATE	generic/tclDateClassic.c	/^  YYSYMBOL_tSTARDATE = 10,                 \/* tSTARDATE  *\/$/;"	e	enum:yysymbol_kind_t	file:
YYSYMBOL_tUNUMBER	generic/tclDate.c	/^  YYSYMBOL_tUNUMBER = 12,                  \/* tUNUMBER  *\/$/;"	e	enum:yysymbol_kind_t	file:
YYSYMBOL_tUNUMBER	generic/tclDateClassic.c	/^  YYSYMBOL_tUNUMBER = 13,                  \/* tUNUMBER  *\/$/;"	e	enum:yysymbol_kind_t	file:
YYSYMBOL_tZONE	generic/tclDate.c	/^  YYSYMBOL_tZONE = 13,                     \/* tZONE  *\/$/;"	e	enum:yysymbol_kind_t	file:
YYSYMBOL_tZONE	generic/tclDateClassic.c	/^  YYSYMBOL_tZONE = 14,                     \/* tZONE  *\/$/;"	e	enum:yysymbol_kind_t	file:
YYSYMBOL_tZONEwO2	generic/tclDate.c	/^  YYSYMBOL_tZONEwO2 = 15,                  \/* tZONEwO2  *\/$/;"	e	enum:yysymbol_kind_t	file:
YYSYMBOL_tZONEwO4	generic/tclDate.c	/^  YYSYMBOL_tZONEwO4 = 14,                  \/* tZONEwO4  *\/$/;"	e	enum:yysymbol_kind_t	file:
YYSYMBOL_time	generic/tclDate.c	/^  YYSYMBOL_time = 35,                      \/* time  *\/$/;"	e	enum:yysymbol_kind_t	file:
YYSYMBOL_time	generic/tclDateClassic.c	/^  YYSYMBOL_time = 29,                      \/* time  *\/$/;"	e	enum:yysymbol_kind_t	file:
YYSYMBOL_trek	generic/tclDate.c	/^  YYSYMBOL_trek = 46,                      \/* trek  *\/$/;"	e	enum:yysymbol_kind_t	file:
YYSYMBOL_trek	generic/tclDateClassic.c	/^  YYSYMBOL_trek = 35,                      \/* trek  *\/$/;"	e	enum:yysymbol_kind_t	file:
YYSYMBOL_unit	generic/tclDate.c	/^  YYSYMBOL_unit = 50,                      \/* unit  *\/$/;"	e	enum:yysymbol_kind_t	file:
YYSYMBOL_unit	generic/tclDateClassic.c	/^  YYSYMBOL_unit = 39,                      \/* unit  *\/$/;"	e	enum:yysymbol_kind_t	file:
YYSYMBOL_zone	generic/tclDate.c	/^  YYSYMBOL_zone = 36,                      \/* zone  *\/$/;"	e	enum:yysymbol_kind_t	file:
YYSYMBOL_zone	generic/tclDateClassic.c	/^  YYSYMBOL_zone = 30,                      \/* zone  *\/$/;"	e	enum:yysymbol_kind_t	file:
YYTABLE_NINF	generic/tclDate.c	/^#define YYTABLE_NINF /;"	d	file:
YYTABLE_NINF	generic/tclDateClassic.c	/^#define YYTABLE_NINF /;"	d	file:
YYTOKENTYPE	generic/tclDate.c	/^# define YYTOKENTYPE$/;"	d	file:
YYTOKENTYPE	generic/tclDateClassic.c	/^# define YYTOKENTYPE$/;"	d	file:
YYTRANSLATE	generic/tclDate.c	/^#define YYTRANSLATE(/;"	d	file:
YYTRANSLATE	generic/tclDateClassic.c	/^#define YYTRANSLATE(/;"	d	file:
YYUNDEF	generic/tclDate.c	/^    YYUNDEF = 257,                 \/* "invalid token"  *\/$/;"	e	enum:yytokentype	file:
YYUNDEF	generic/tclDateClassic.c	/^    YYUNDEF = 257,                 \/* "invalid token"  *\/$/;"	e	enum:yytokentype	file:
YY_	generic/tclDate.c	/^#   define YY_(/;"	d	file:
YY_	generic/tclDate.c	/^#  define YY_(/;"	d	file:
YY_	generic/tclDateClassic.c	/^#   define YY_(/;"	d	file:
YY_	generic/tclDateClassic.c	/^#  define YY_(/;"	d	file:
YY_ACCESSING_SYMBOL	generic/tclDate.c	/^#define YY_ACCESSING_SYMBOL(/;"	d	file:
YY_ACCESSING_SYMBOL	generic/tclDateClassic.c	/^#define YY_ACCESSING_SYMBOL(/;"	d	file:
YY_ASSERT	generic/tclDate.c	/^#define YY_ASSERT(/;"	d	file:
YY_ASSERT	generic/tclDateClassic.c	/^#define YY_ASSERT(/;"	d	file:
YY_ATTRIBUTE_PURE	generic/tclDate.c	/^#  define YY_ATTRIBUTE_PURE /;"	d	file:
YY_ATTRIBUTE_PURE	generic/tclDate.c	/^#  define YY_ATTRIBUTE_PURE$/;"	d	file:
YY_ATTRIBUTE_PURE	generic/tclDateClassic.c	/^#  define YY_ATTRIBUTE_PURE /;"	d	file:
YY_ATTRIBUTE_PURE	generic/tclDateClassic.c	/^#  define YY_ATTRIBUTE_PURE$/;"	d	file:
YY_ATTRIBUTE_UNUSED	generic/tclDate.c	/^#  define YY_ATTRIBUTE_UNUSED /;"	d	file:
YY_ATTRIBUTE_UNUSED	generic/tclDate.c	/^#  define YY_ATTRIBUTE_UNUSED$/;"	d	file:
YY_ATTRIBUTE_UNUSED	generic/tclDateClassic.c	/^#  define YY_ATTRIBUTE_UNUSED /;"	d	file:
YY_ATTRIBUTE_UNUSED	generic/tclDateClassic.c	/^#  define YY_ATTRIBUTE_UNUSED$/;"	d	file:
YY_CAST	generic/tclDate.c	/^#   define YY_CAST(/;"	d	file:
YY_CAST	generic/tclDateClassic.c	/^#   define YY_CAST(/;"	d	file:
YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN	generic/tclDate.c	/^#  define YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN /;"	d	file:
YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN	generic/tclDate.c	/^# define YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN$/;"	d	file:
YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN	generic/tclDateClassic.c	/^#  define YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN /;"	d	file:
YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN	generic/tclDateClassic.c	/^# define YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN$/;"	d	file:
YY_IGNORE_MAYBE_UNINITIALIZED_END	generic/tclDate.c	/^# define YY_IGNORE_MAYBE_UNINITIALIZED_END /;"	d	file:
YY_IGNORE_MAYBE_UNINITIALIZED_END	generic/tclDate.c	/^# define YY_IGNORE_MAYBE_UNINITIALIZED_END$/;"	d	file:
YY_IGNORE_MAYBE_UNINITIALIZED_END	generic/tclDateClassic.c	/^# define YY_IGNORE_MAYBE_UNINITIALIZED_END /;"	d	file:
YY_IGNORE_MAYBE_UNINITIALIZED_END	generic/tclDateClassic.c	/^# define YY_IGNORE_MAYBE_UNINITIALIZED_END$/;"	d	file:
YY_IGNORE_USELESS_CAST_BEGIN	generic/tclDate.c	/^# define YY_IGNORE_USELESS_CAST_BEGIN /;"	d	file:
YY_IGNORE_USELESS_CAST_BEGIN	generic/tclDate.c	/^# define YY_IGNORE_USELESS_CAST_BEGIN$/;"	d	file:
YY_IGNORE_USELESS_CAST_BEGIN	generic/tclDateClassic.c	/^# define YY_IGNORE_USELESS_CAST_BEGIN /;"	d	file:
YY_IGNORE_USELESS_CAST_BEGIN	generic/tclDateClassic.c	/^# define YY_IGNORE_USELESS_CAST_BEGIN$/;"	d	file:
YY_IGNORE_USELESS_CAST_END	generic/tclDate.c	/^# define YY_IGNORE_USELESS_CAST_END /;"	d	file:
YY_IGNORE_USELESS_CAST_END	generic/tclDate.c	/^# define YY_IGNORE_USELESS_CAST_END$/;"	d	file:
YY_IGNORE_USELESS_CAST_END	generic/tclDateClassic.c	/^# define YY_IGNORE_USELESS_CAST_END /;"	d	file:
YY_IGNORE_USELESS_CAST_END	generic/tclDateClassic.c	/^# define YY_IGNORE_USELESS_CAST_END$/;"	d	file:
YY_INITIAL_VALUE	generic/tclDate.c	/^# define YY_INITIAL_VALUE(/;"	d	file:
YY_INITIAL_VALUE	generic/tclDateClassic.c	/^# define YY_INITIAL_VALUE(/;"	d	file:
YY_LOCATION_PRINT	generic/tclDate.c	/^#   define YY_LOCATION_PRINT /;"	d	file:
YY_LOCATION_PRINT	generic/tclDate.c	/^#   define YY_LOCATION_PRINT(/;"	d	file:
YY_LOCATION_PRINT	generic/tclDateClassic.c	/^#   define YY_LOCATION_PRINT /;"	d	file:
YY_LOCATION_PRINT	generic/tclDateClassic.c	/^#   define YY_LOCATION_PRINT(/;"	d	file:
YY_NULLPTR	generic/tclDate.c	/^#    define YY_NULLPTR /;"	d	file:
YY_NULLPTR	generic/tclDate.c	/^#   define YY_NULLPTR /;"	d	file:
YY_NULLPTR	generic/tclDateClassic.c	/^#    define YY_NULLPTR /;"	d	file:
YY_NULLPTR	generic/tclDateClassic.c	/^#   define YY_NULLPTR /;"	d	file:
YY_REDUCE_PRINT	generic/tclDate.c	/^# define YY_REDUCE_PRINT(/;"	d	file:
YY_REDUCE_PRINT	generic/tclDateClassic.c	/^# define YY_REDUCE_PRINT(/;"	d	file:
YY_REINTERPRET_CAST	generic/tclDate.c	/^#   define YY_REINTERPRET_CAST(/;"	d	file:
YY_REINTERPRET_CAST	generic/tclDateClassic.c	/^#   define YY_REINTERPRET_CAST(/;"	d	file:
YY_STACK_PRINT	generic/tclDate.c	/^# define YY_STACK_PRINT(/;"	d	file:
YY_STACK_PRINT	generic/tclDateClassic.c	/^# define YY_STACK_PRINT(/;"	d	file:
YY_STDINT_H	generic/tclDate.c	/^#  define YY_STDINT_H$/;"	d	file:
YY_STDINT_H	generic/tclDateClassic.c	/^#  define YY_STDINT_H$/;"	d	file:
YY_SYMBOL_PRINT	generic/tclDate.c	/^# define YY_SYMBOL_PRINT(/;"	d	file:
YY_SYMBOL_PRINT	generic/tclDateClassic.c	/^# define YY_SYMBOL_PRINT(/;"	d	file:
YY_USE	generic/tclDate.c	/^# define YY_USE(/;"	d	file:
YY_USE	generic/tclDateClassic.c	/^# define YY_USE(/;"	d	file:
YYerror	generic/tclDate.c	/^    YYerror = 256,                 \/* error  *\/$/;"	e	enum:yytokentype	file:
YYerror	generic/tclDateClassic.c	/^    YYerror = 256,                 \/* error  *\/$/;"	e	enum:yytokentype	file:
ZALLOC	compat/zlib/zutil.h	/^#define ZALLOC(/;"	d
ZAPCNFA	generic/regguts.h	/^#define	ZAPCNFA(/;"	d
ZCALLBACK	compat/zlib/contrib/minizip/ioapi.h	/^   #define ZCALLBACK /;"	d
ZCLOSE64	compat/zlib/contrib/minizip/ioapi.h	/^#define ZCLOSE64(/;"	d
ZCONF_H	compat/zlib/zconf.h	/^#define ZCONF_H$/;"	d
ZCONF_H	compat/zlib/zconf.h.in	/^#define ZCONF_H$/;"	d	file:
ZCR_SEED2	compat/zlib/contrib/minizip/crypt.h	/^#    define ZCR_SEED2 /;"	d
ZERO	generic/tclStrToD.c	/^	INITIAL, SIGNUM, ZERO, ZERO_X,$/;"	e	enum:TclParseNumber::State	file:
ZERO_B	generic/tclStrToD.c	/^	ZERO_O, ZERO_B, ZERO_D, BINARY,$/;"	e	enum:TclParseNumber::State	file:
ZERO_D	generic/tclStrToD.c	/^	ZERO_O, ZERO_B, ZERO_D, BINARY,$/;"	e	enum:TclParseNumber::State	file:
ZERO_O	generic/tclStrToD.c	/^	ZERO_O, ZERO_B, ZERO_D, BINARY,$/;"	e	enum:TclParseNumber::State	file:
ZERO_X	generic/tclStrToD.c	/^	INITIAL, SIGNUM, ZERO, ZERO_X,$/;"	e	enum:TclParseNumber::State	file:
ZERROR64	compat/zlib/contrib/minizip/ioapi.h	/^#define ZERROR64(/;"	d
ZEXPORT	compat/zlib/zconf.h	/^#      define ZEXPORT /;"	d
ZEXPORT	compat/zlib/zconf.h	/^#    define ZEXPORT /;"	d
ZEXPORT	compat/zlib/zconf.h	/^#  define ZEXPORT$/;"	d
ZEXPORT	compat/zlib/zconf.h.in	/^#      define ZEXPORT /;"	d	file:
ZEXPORT	compat/zlib/zconf.h.in	/^#    define ZEXPORT /;"	d	file:
ZEXPORT	compat/zlib/zconf.h.in	/^#  define ZEXPORT$/;"	d	file:
ZEXPORTVA	compat/zlib/zconf.h	/^#      define ZEXPORTVA /;"	d
ZEXPORTVA	compat/zlib/zconf.h	/^#  define ZEXPORTVA$/;"	d
ZEXPORTVA	compat/zlib/zconf.h.in	/^#      define ZEXPORTVA /;"	d	file:
ZEXPORTVA	compat/zlib/zconf.h.in	/^#  define ZEXPORTVA$/;"	d	file:
ZEXTERN	compat/zlib/zconf.h	/^#        define ZEXTERN /;"	d
ZEXTERN	compat/zlib/zconf.h	/^#  define ZEXTERN /;"	d
ZEXTERN	compat/zlib/zconf.h.in	/^#        define ZEXTERN /;"	d	file:
ZEXTERN	compat/zlib/zconf.h.in	/^#  define ZEXTERN /;"	d	file:
ZE_F_CRC_COMPARED	generic/tclZipfs.c	/^    ZE_F_CRC_COMPARED = 1,	\/* If 1, the CRC has been compared. *\/$/;"	e	enum:ZipEntryFlags	file:
ZE_F_CRC_CORRECT	generic/tclZipfs.c	/^    ZE_F_CRC_CORRECT = 2,	\/* Only meaningful if ZE_F_CRC_COMPARED is 1 *\/$/;"	e	enum:ZipEntryFlags	file:
ZE_F_VOLUME	generic/tclZipfs.c	/^    ZE_F_VOLUME = 4		\/* Entry corresponds to \/\/zipfs:\/ *\/$/;"	e	enum:ZipEntryFlags	file:
ZFREE	compat/zlib/zutil.h	/^#define ZFREE(/;"	d
ZFSTREAM_H	compat/zlib/contrib/iostream3/zfstream.h	/^#define ZFSTREAM_H$/;"	d
ZINC	compat/zlib/Makefile.in	/^ZINC=$/;"	m
ZINCOUT	compat/zlib/Makefile.in	/^ZINCOUT=-I.$/;"	m
ZIP64ENDHEADERMAGIC	compat/zlib/contrib/minizip/zip.c	/^#define ZIP64ENDHEADERMAGIC /;"	d	file:
ZIP64ENDLOCHEADERMAGIC	compat/zlib/contrib/minizip/zip.c	/^#define ZIP64ENDLOCHEADERMAGIC /;"	d	file:
ZIPFS VIRTUAL FILE SYSTEM	doc/tclsh.1	/^.SH "ZIPFS VIRTUAL FILE SYSTEM"$/;"	s	title:tclsh
ZIPFS_APP_MOUNT	generic/tclZipfs.c	/^#define ZIPFS_APP_MOUNT	/;"	d	file:
ZIPFS_BUILD	unix/Makefile.in	/^ZIPFS_BUILD		= @ZIPFS_BUILD@$/;"	m
ZIPFS_BUILD	unix/configure.ac	/^       AC_DEFINE(ZIPFS_BUILD, 1, [Are we building with zipfs enabled?])\\$/;"	d
ZIPFS_BUILD	unix/configure.ac	/^       AC_DEFINE(ZIPFS_BUILD, 2, [Are we building with zipfs enabled?])$/;"	d
ZIPFS_BUILD	unix/configure.ac	/^AC_SUBST(ZIPFS_BUILD)$/;"	s
ZIPFS_BUILD	win/Makefile.in	/^ZIPFS_BUILD	        = @ZIPFS_BUILD@$/;"	m
ZIPFS_BUILD	win/configure.ac	/^       AC_DEFINE(ZIPFS_BUILD, 1, [Are we building with zipfs enabled?])\\$/;"	d
ZIPFS_BUILD	win/configure.ac	/^       AC_DEFINE(ZIPFS_BUILD, 2, [Are we building with zipfs enabled?])$/;"	d
ZIPFS_BUILD	win/configure.ac	/^AC_SUBST(ZIPFS_BUILD)$/;"	s
ZIPFS_ERROR	generic/tclZipfs.c	/^#define ZIPFS_ERROR(/;"	d	file:
ZIPFS_ERROR_CODE	generic/tclZipfs.c	/^#define ZIPFS_ERROR_CODE(/;"	d	file:
ZIPFS_FALLBACK_ENCODING	generic/tclZipfs.c	/^#define ZIPFS_FALLBACK_ENCODING	/;"	d	file:
ZIPFS_MAX_DIR_SIZE	generic/tclZipfs.c	/^#define ZIPFS_MAX_DIR_SIZE	/;"	d	file:
ZIPFS_MEM_ERROR	generic/tclZipfs.c	/^#define ZIPFS_MEM_ERROR(/;"	d	file:
ZIPFS_PASSBUF_SIZE	generic/tclZipfs.c	/^#define ZIPFS_PASSBUF_SIZE	/;"	d	file:
ZIPFS_POSIX_ERROR	generic/tclZipfs.c	/^#define ZIPFS_POSIX_ERROR(/;"	d	file:
ZIPFS_ROOTDIR_DEPTH	generic/tclZipfs.c	/^#define ZIPFS_ROOTDIR_DEPTH	/;"	d	file:
ZIPFS_VOLUME	generic/tclZipfs.c	/^#define ZIPFS_VOLUME	/;"	d	file:
ZIPFS_VOLUME_LEN	generic/tclZipfs.c	/^#define ZIPFS_VOLUME_LEN	/;"	d	file:
ZIPFS_ZIP_MOUNT	generic/tclZipfs.c	/^#define ZIPFS_ZIP_MOUNT	/;"	d	file:
ZIPNAME	unix/Makefile.in	/^ZIPNAME	 = tcl${MAJOR_VERSION}${MINOR_VERSION}${PATCH_LEVEL}-src.zip$/;"	m
ZIP_ATTR_ARCHIVE	generic/tclZipfs.c	/^    ZIP_ATTR_ARCHIVE,$/;"	e	enum:ZipFileAttrs	file:
ZIP_ATTR_COMPSIZE	generic/tclZipfs.c	/^    ZIP_ATTR_COMPSIZE,$/;"	e	enum:ZipFileAttrs	file:
ZIP_ATTR_CRC	generic/tclZipfs.c	/^    ZIP_ATTR_CRC$/;"	e	enum:ZipFileAttrs	file:
ZIP_ATTR_MOUNT	generic/tclZipfs.c	/^    ZIP_ATTR_MOUNT,$/;"	e	enum:ZipFileAttrs	file:
ZIP_ATTR_OFFSET	generic/tclZipfs.c	/^    ZIP_ATTR_OFFSET,$/;"	e	enum:ZipFileAttrs	file:
ZIP_ATTR_PERMISSIONS	generic/tclZipfs.c	/^    ZIP_ATTR_PERMISSIONS,$/;"	e	enum:ZipFileAttrs	file:
ZIP_ATTR_UNCOMPSIZE	generic/tclZipfs.c	/^    ZIP_ATTR_UNCOMPSIZE,$/;"	e	enum:ZipFileAttrs	file:
ZIP_BADZIPFILE	compat/zlib/contrib/minizip/zip.h	/^#define ZIP_BADZIPFILE /;"	d
ZIP_CENTRAL_END_SIG	generic/tclZipfs.c	/^#define ZIP_CENTRAL_END_SIG	/;"	d	file:
ZIP_CENTRAL_HEADER_SIG	generic/tclZipfs.c	/^#define ZIP_CENTRAL_HEADER_SIG	/;"	d	file:
ZIP_COMPMETH_DEFLATED	generic/tclZipfs.c	/^    ZIP_COMPMETH_DEFLATED = 8$/;"	e	enum:ZipCompressionMethods	file:
ZIP_COMPMETH_STORED	generic/tclZipfs.c	/^    ZIP_COMPMETH_STORED = 0,$/;"	e	enum:ZipCompressionMethods	file:
ZIP_CRYPT_HDR_LEN	generic/tclZipfs.c	/^    ZIP_CRYPT_HDR_LEN = 12	\/\/ sizeof(ZipCrypt)$/;"	e	enum:ZipCryptOffsets	file:
ZIP_EOF	compat/zlib/contrib/minizip/zip.h	/^#define ZIP_EOF /;"	d
ZIP_ERRNO	compat/zlib/contrib/minizip/zip.h	/^#define ZIP_ERRNO /;"	d
ZIP_INSTALL_OBJS	unix/Makefile.in	/^ZIP_INSTALL_OBJS	= @ZIP_INSTALL_OBJS@$/;"	m
ZIP_INSTALL_OBJS	unix/tcl.m4	/^    AC_SUBST(ZIP_INSTALL_OBJS)$/;"	s
ZIP_INSTALL_OBJS	win/Makefile.in	/^ZIP_INSTALL_OBJS =  @ZIP_INSTALL_OBJS@$/;"	m
ZIP_INSTALL_OBJS	win/tcl.m4	/^    AC_SUBST(ZIP_INSTALL_OBJS)$/;"	s
ZIP_INTERNALERROR	compat/zlib/contrib/minizip/zip.h	/^#define ZIP_INTERNALERROR /;"	d
ZIP_LOCAL_FLAGS_UTF8	generic/tclZipfs.c	/^#define ZIP_LOCAL_FLAGS_UTF8	/;"	d	file:
ZIP_LOCAL_HEADER_SIG	generic/tclZipfs.c	/^#define ZIP_LOCAL_HEADER_SIG	/;"	d	file:
ZIP_MAX_FILE_SIZE	generic/tclZipfs.c	/^#define ZIP_MAX_FILE_SIZE	/;"	d	file:
ZIP_MIN_VERSION	generic/tclZipfs.c	/^#define ZIP_MIN_VERSION	/;"	d	file:
ZIP_OBJS	compat/zlib/contrib/minizip/Makefile	/^ZIP_OBJS = minizip.o zip.o   ioapi.o ..\/..\/libz.a$/;"	m
ZIP_OK	compat/zlib/contrib/minizip/zip.h	/^#define ZIP_OK /;"	d
ZIP_PARAMERROR	compat/zlib/contrib/minizip/zip.h	/^#define ZIP_PARAMERROR /;"	d
ZIP_PASSWORD_END_SIG	generic/tclZipfs.c	/^#define ZIP_PASSWORD_END_SIG	/;"	d	file:
ZIP_PROG	unix/tcl.m4	/^    AC_SUBST(ZIP_PROG)$/;"	s
ZIP_PROG	win/tcl.m4	/^    AC_SUBST(ZIP_PROG)$/;"	s
ZIP_PROG_OPTIONS	unix/Makefile.in	/^ZIP_PROG_OPTIONS	= @ZIP_PROG_OPTIONS@$/;"	m
ZIP_PROG_OPTIONS	unix/tcl.m4	/^    AC_SUBST(ZIP_PROG_OPTIONS)$/;"	s
ZIP_PROG_OPTIONS	win/Makefile.in	/^ZIP_PROG_OPTIONS		= @ZIP_PROG_OPTIONS@$/;"	m
ZIP_PROG_OPTIONS	win/tcl.m4	/^    AC_SUBST(ZIP_PROG_OPTIONS)$/;"	s
ZIP_PROG_VFSSEARCH	unix/Makefile.in	/^ZIP_PROG_VFSSEARCH	= @ZIP_PROG_VFSSEARCH@$/;"	m
ZIP_PROG_VFSSEARCH	unix/tcl.m4	/^    AC_SUBST(ZIP_PROG_VFSSEARCH)$/;"	s
ZIP_PROG_VFSSEARCH	win/Makefile.in	/^ZIP_PROG_VFSSEARCH  = @ZIP_PROG_VFSSEARCH@$/;"	m
ZIP_PROG_VFSSEARCH	win/tcl.m4	/^    AC_SUBST(ZIP_PROG_VFSSEARCH)$/;"	s
ZIP_SIG_LEN	generic/tclZipfs.c	/^#define ZIP_SIG_LEN	/;"	d	file:
ZLIB	compat/zlib/examples/zran.c	/^#define ZLIB /;"	d	file:
ZLIB	compat/zlib/zlib.3	/^.TH ZLIB 3 "22 Jan 2024"$/;"	t
ZLIB STREAMS	doc/TclZlib.3	/^.SS "ZLIB STREAMS"$/;"	S	section:TclZlib""DESCRIPTION
ZLIB_BUILD_EXAMPLES	compat/zlib/CMakeLists.txt	/^option(ZLIB_BUILD_EXAMPLES "Enable Zlib Examples" ON)$/;"	D
ZLIB_DIR	unix/Makefile.in	/^ZLIB_DIR		= ${COMPAT_DIR}\/zlib$/;"	m
ZLIB_DIR	win/Makefile.in	/^ZLIB_DIR		= $(COMPAT_DIR)\/zlib$/;"	m
ZLIB_DIR_NATIVE	win/Makefile.in	/^ZLIB_DIR_NATIVE		= $(shell $(CYGPATH) '$(ZLIB_DIR)')$/;"	m
ZLIB_DLL_FILE	win/Makefile.in	/^ZLIB_DLL_FILE		= zlib1.dll$/;"	m
ZLIB_DLL_FILE	win/configure.ac	/^  AC_SUBST(ZLIB_DLL_FILE,[\\${ZLIB_DLL_FILE}])$/;"	s
ZLIB_DLL_SRCS	compat/zlib/CMakeLists.txt	/^    set(ZLIB_DLL_SRCS ${CMAKE_CURRENT_BINARY_DIR}\/zlib1rc.obj)$/;"	v
ZLIB_DLL_SRCS	compat/zlib/CMakeLists.txt	/^    set(ZLIB_DLL_SRCS$/;"	v
ZLIB_FILEFUNC_MODE_CREATE	compat/zlib/contrib/minizip/ioapi.h	/^#define ZLIB_FILEFUNC_MODE_CREATE /;"	d
ZLIB_FILEFUNC_MODE_EXISTING	compat/zlib/contrib/minizip/ioapi.h	/^#define ZLIB_FILEFUNC_MODE_EXISTING /;"	d
ZLIB_FILEFUNC_MODE_READ	compat/zlib/contrib/minizip/ioapi.h	/^#define ZLIB_FILEFUNC_MODE_READ /;"	d
ZLIB_FILEFUNC_MODE_READWRITEFILTER	compat/zlib/contrib/minizip/ioapi.h	/^#define ZLIB_FILEFUNC_MODE_READWRITEFILTER /;"	d
ZLIB_FILEFUNC_MODE_WRITE	compat/zlib/contrib/minizip/ioapi.h	/^#define ZLIB_FILEFUNC_MODE_WRITE /;"	d
ZLIB_FILEFUNC_SEEK_CUR	compat/zlib/contrib/minizip/ioapi.h	/^#define ZLIB_FILEFUNC_SEEK_CUR /;"	d
ZLIB_FILEFUNC_SEEK_END	compat/zlib/contrib/minizip/ioapi.h	/^#define ZLIB_FILEFUNC_SEEK_END /;"	d
ZLIB_FILEFUNC_SEEK_SET	compat/zlib/contrib/minizip/ioapi.h	/^#define ZLIB_FILEFUNC_SEEK_SET /;"	d
ZLIB_H	compat/zlib/zlib.h	/^#define ZLIB_H$/;"	d
ZLIB_INCLUDE	unix/Makefile.in	/^ZLIB_INCLUDE		= @ZLIB_INCLUDE@$/;"	m
ZLIB_INCLUDE	unix/configure.ac	/^  AC_SUBST(ZLIB_INCLUDE,[-I\\${ZLIB_DIR}])$/;"	s
ZLIB_INTERNAL	compat/zlib/compress.c	/^#define ZLIB_INTERNAL$/;"	d	file:
ZLIB_INTERNAL	compat/zlib/gzguts.h	/^#  define ZLIB_INTERNAL /;"	d
ZLIB_INTERNAL	compat/zlib/gzguts.h	/^#  define ZLIB_INTERNAL$/;"	d
ZLIB_INTERNAL	compat/zlib/test/infcover.c	/^#define ZLIB_INTERNAL$/;"	d	file:
ZLIB_INTERNAL	compat/zlib/uncompr.c	/^#define ZLIB_INTERNAL$/;"	d	file:
ZLIB_INTERNAL	compat/zlib/zutil.h	/^#  define ZLIB_INTERNAL /;"	d
ZLIB_INTERNAL	compat/zlib/zutil.h	/^#  define ZLIB_INTERNAL$/;"	d
ZLIB_LIB	compat/zlib/contrib/delphi/zlibd32.mak	/^ZLIB_LIB = zlib.lib$/;"	m
ZLIB_LIB	compat/zlib/contrib/pascal/zlibd32.mak	/^ZLIB_LIB = zlib.lib$/;"	m
ZLIB_LIB	compat/zlib/watcom/watcom_f.mak	/^ZLIB_LIB = zlib_f.lib$/;"	m
ZLIB_LIB	compat/zlib/watcom/watcom_l.mak	/^ZLIB_LIB = zlib_l.lib$/;"	m
ZLIB_LIBS	win/configure.ac	/^        AC_SUBST(ZLIB_LIBS,[\\${ZLIB_DIR_NATIVE}\/win64-arm\/libz.dll.a])$/;"	s
ZLIB_LIBS	win/configure.ac	/^        AC_SUBST(ZLIB_LIBS,[\\${ZLIB_DIR_NATIVE}\/win64-arm\/zdll.lib])$/;"	s
ZLIB_LIBS	win/configure.ac	/^        AC_SUBST(ZLIB_LIBS,[\\${ZLIB_DIR_NATIVE}\/win64\/libz.dll.a])$/;"	s
ZLIB_LIBS	win/configure.ac	/^        AC_SUBST(ZLIB_LIBS,[\\${ZLIB_DIR_NATIVE}\/win64\/zdll.lib])$/;"	s
ZLIB_LIBS	win/configure.ac	/^    AC_SUBST(ZLIB_LIBS,[\\${ZLIB_DIR_NATIVE}\/win32\/zdll.lib])$/;"	s
ZLIB_MODE_RAW	generic/tclZipfs.c	/^#define ZLIB_MODE_RAW	/;"	d	file:
ZLIB_OBJS	unix/Makefile.in	/^ZLIB_OBJS = Zadler32.o Zcompress.o Zcrc32.o Zdeflate.o Zinfback.o \\$/;"	m
ZLIB_OBJS	unix/configure.ac	/^  AC_SUBST(ZLIB_OBJS,[\\${ZLIB_OBJS}])$/;"	s
ZLIB_OBJS	win/Makefile.in	/^ZLIB_OBJS = \\$/;"	m
ZLIB_OBJS	win/configure.ac	/^  AC_SUBST(ZLIB_OBJS,[\\${ZLIB_OBJS}])$/;"	s
ZLIB_PC	compat/zlib/CMakeLists.txt	/^set(ZLIB_PC ${CMAKE_CURRENT_BINARY_DIR}\/zlib.pc)$/;"	v
ZLIB_PRIVATE_HDRS	compat/zlib/CMakeLists.txt	/^set(ZLIB_PRIVATE_HDRS$/;"	v
ZLIB_PUBLIC_HDRS	compat/zlib/CMakeLists.txt	/^set(ZLIB_PUBLIC_HDRS$/;"	v
ZLIB_SRCS	compat/zlib/CMakeLists.txt	/^set(ZLIB_SRCS$/;"	v
ZLIB_SRCS	unix/Makefile.in	/^ZLIB_SRCS = \\$/;"	m
ZLIB_SRCS	unix/configure.ac	/^  AC_SUBST(ZLIB_SRCS,[\\${ZLIB_SRCS}])$/;"	s
ZLIB_VERNUM	compat/zlib/zlib.h	/^#define ZLIB_VERNUM /;"	d
ZLIB_VERSION	compat/zlib/contrib/ada/zlib-thin.adb	/^   ZLIB_VERSION  : constant Chars_Ptr := zlibVersion;$/;"	n	package:ZLib.Thin	file:
ZLIB_VERSION	compat/zlib/zlib.h	/^#define ZLIB_VERSION /;"	d
ZLIB_VER_MAJOR	compat/zlib/zlib.h	/^#define ZLIB_VER_MAJOR /;"	d
ZLIB_VER_MINOR	compat/zlib/zlib.h	/^#define ZLIB_VER_MINOR /;"	d
ZLIB_VER_REVISION	compat/zlib/zlib.h	/^#define ZLIB_VER_REVISION /;"	d
ZLIB_VER_SUBREVISION	compat/zlib/zlib.h	/^#define ZLIB_VER_SUBREVISION /;"	d
ZLib	compat/zlib/contrib/ada/zlib.adb	/^package body ZLib is$/;"	p
ZLib	compat/zlib/contrib/ada/zlib.ads	/^package ZLib is$/;"	P
ZLib.Streams	compat/zlib/contrib/ada/zlib-streams.adb	/^package body ZLib.Streams is$/;"	p
ZLib.Streams	compat/zlib/contrib/ada/zlib-streams.ads	/^package ZLib.Streams is$/;"	P
ZLib.Thin	compat/zlib/contrib/ada/zlib-thin.adb	/^package body ZLib.Thin is$/;"	p
ZLibException	compat/zlib/contrib/dotzlib/DotZLib/DotZLib.cs	/^        public ZLibException(int errorCode) : base(String.Format("ZLib error {0}", errorCode))$/;"	m	class:DotZLib.ZLibException
ZLibException	compat/zlib/contrib/dotzlib/DotZLib/DotZLib.cs	/^        public ZLibException(int errorCode, string msg) : base(String.Format("ZLib error {0} {1}/;"	m	class:DotZLib.ZLibException
ZLibException	compat/zlib/contrib/dotzlib/DotZLib/DotZLib.cs	/^    public class ZLibException : ApplicationException$/;"	c	namespace:DotZLib
ZLib_Error	compat/zlib/contrib/ada/zlib.ads	/^   ZLib_Error   : exception;$/;"	x	packspec:ZLib
ZOPEN64	compat/zlib/contrib/minizip/ioapi.h	/^#define ZOPEN64(/;"	d
ZPOS64_T	compat/zlib/contrib/minizip/ioapi.h	/^typedef  64BIT_INT_CUSTOM_TYPE ZPOS64_T;$/;"	t	typeref:typename:64BIT_INT_CUSTOM_TYPE
ZPOS64_T	compat/zlib/contrib/minizip/ioapi.h	/^typedef uint64_t ZPOS64_T;$/;"	t	typeref:typename:uint64_t
ZPOS64_T	compat/zlib/contrib/minizip/ioapi.h	/^typedef unsigned __int64 ZPOS64_T;$/;"	t	typeref:typename:unsigned __int64
ZPOS64_T	compat/zlib/contrib/minizip/ioapi.h	/^typedef unsigned long long int ZPOS64_T;$/;"	t	typeref:typename:unsigned long long int
ZREAD64	compat/zlib/contrib/minizip/ioapi.h	/^#define ZREAD64(/;"	d
ZSEEK64	compat/zlib/contrib/minizip/ioapi.h	/^#define ZSEEK64(/;"	d
ZSTREAM__H	compat/zlib/contrib/iostream2/zstream.h	/^#define ZSTREAM__H$/;"	d
ZSWAP32	compat/zlib/zutil.h	/^#define ZSWAP32(/;"	d
ZStream	compat/zlib/contrib/dotzlib/DotZLib/DotZLib.cs	/^    internal struct ZStream$/;"	s	namespace:DotZLib
ZTELL64	compat/zlib/contrib/minizip/ioapi.h	/^#define ZTELL64(/;"	d
ZUTIL_H	compat/zlib/zutil.h	/^#define ZUTIL_H$/;"	d
ZWRITE64	compat/zlib/contrib/minizip/ioapi.h	/^#define ZWRITE64(/;"	d
Z_ASCII	compat/zlib/zlib.h	/^#define Z_ASCII /;"	d
Z_BATCH	compat/zlib/crc32.c	/^#define Z_BATCH /;"	d	file:
Z_BATCH_MIN	compat/zlib/crc32.c	/^#define Z_BATCH_MIN /;"	d	file:
Z_BATCH_ZEROS	compat/zlib/crc32.c	/^#define Z_BATCH_ZEROS /;"	d	file:
Z_BEST_COMPRESSION	compat/zlib/zlib.h	/^#define Z_BEST_COMPRESSION /;"	d
Z_BEST_SPEED	compat/zlib/zlib.h	/^#define Z_BEST_SPEED /;"	d
Z_BINARY	compat/zlib/zlib.h	/^#define Z_BINARY /;"	d
Z_BLOCK	compat/zlib/zlib.h	/^#define Z_BLOCK /;"	d
Z_BUFSIZE	compat/zlib/contrib/minizip/zip.c	/^#define Z_BUFSIZE /;"	d	file:
Z_BUF_ERROR	compat/zlib/zlib.h	/^#define Z_BUF_ERROR /;"	d
Z_BZIP2ED	compat/zlib/contrib/minizip/unzip.h	/^#define Z_BZIP2ED /;"	d
Z_BZIP2ED	compat/zlib/contrib/minizip/zip.h	/^#define Z_BZIP2ED /;"	d
Z_DATA_ERROR	compat/zlib/zlib.h	/^#define Z_DATA_ERROR /;"	d
Z_DEFAULT_COMPRESSION	compat/zlib/zlib.h	/^#define Z_DEFAULT_COMPRESSION /;"	d
Z_DEFAULT_STRATEGY	compat/zlib/zlib.h	/^#define Z_DEFAULT_STRATEGY /;"	d
Z_DEFLATED	compat/zlib/zlib.h	/^#define Z_DEFLATED /;"	d
Z_ERRNO	compat/zlib/zlib.h	/^#define Z_ERRNO /;"	d
Z_FILTERED	compat/zlib/zlib.h	/^#define Z_FILTERED /;"	d
Z_FINISH	compat/zlib/zlib.h	/^#define Z_FINISH /;"	d
Z_FIXED	compat/zlib/zlib.h	/^#define Z_FIXED /;"	d
Z_FULL_FLUSH	compat/zlib/zlib.h	/^#define Z_FULL_FLUSH /;"	d
Z_File_Name	compat/zlib/contrib/ada/test.adb	/^   Z_File_Name   : constant String := "testzlib.zlb";$/;"	n	subprogram:Test	file:
Z_HAVE_STDARG_H	compat/zlib/zconf.h	/^#  define Z_HAVE_STDARG_H$/;"	d
Z_HAVE_STDARG_H	compat/zlib/zconf.h.in	/^#  define Z_HAVE_STDARG_H$/;"	d	file:
Z_HAVE_UNISTD_H	compat/zlib/zconf.h	/^#    define Z_HAVE_UNISTD_H$/;"	d
Z_HAVE_UNISTD_H	compat/zlib/zconf.h	/^#  define Z_HAVE_UNISTD_H$/;"	d
Z_HAVE_UNISTD_H	compat/zlib/zconf.h.in	/^#    define Z_HAVE_UNISTD_H$/;"	d	file:
Z_HAVE_UNISTD_H	compat/zlib/zconf.h.in	/^#  define Z_HAVE_UNISTD_H$/;"	d	file:
Z_HUFFMAN_ONLY	compat/zlib/zlib.h	/^#define Z_HUFFMAN_ONLY /;"	d
Z_LARGE64	compat/zlib/zconf.h	/^#  define Z_LARGE64$/;"	d
Z_LARGE64	compat/zlib/zconf.h.in	/^#  define Z_LARGE64$/;"	d	file:
Z_LFS64	compat/zlib/zconf.h	/^#  define Z_LFS64$/;"	d
Z_LFS64	compat/zlib/zconf.h.in	/^#  define Z_LFS64$/;"	d	file:
Z_MAXFILENAMEINZIP	compat/zlib/contrib/minizip/zip.c	/^#define Z_MAXFILENAMEINZIP /;"	d	file:
Z_MEM_ERROR	compat/zlib/zlib.h	/^#define Z_MEM_ERROR /;"	d
Z_NEED_DICT	compat/zlib/zlib.h	/^#define Z_NEED_DICT /;"	d
Z_NO_COMPRESSION	compat/zlib/zlib.h	/^#define Z_NO_COMPRESSION /;"	d
Z_NO_FLUSH	compat/zlib/zlib.h	/^#define Z_NO_FLUSH /;"	d
Z_NULL	compat/zlib/zlib.h	/^#define Z_NULL /;"	d
Z_OK	compat/zlib/zlib.h	/^#define Z_OK /;"	d
Z_PARTIAL_FLUSH	compat/zlib/zlib.h	/^#define Z_PARTIAL_FLUSH /;"	d
Z_PREFIX_SET	compat/zlib/zconf.h	/^#  define Z_PREFIX_SET$/;"	d
Z_PREFIX_SET	compat/zlib/zconf.h.in	/^#  define Z_PREFIX_SET$/;"	d	file:
Z_RLE	compat/zlib/zlib.h	/^#define Z_RLE /;"	d
Z_STREAM_END	compat/zlib/zlib.h	/^#define Z_STREAM_END /;"	d
Z_STREAM_ERROR	compat/zlib/zlib.h	/^#define Z_STREAM_ERROR /;"	d
Z_SYNC_FLUSH	compat/zlib/zlib.h	/^#define Z_SYNC_FLUSH /;"	d
Z_Stream	compat/zlib/contrib/ada/zlib.adb	/^   type Z_Stream is new Thin.Z_Stream;$/;"	t	package:ZLib	file:
Z_Stream_Access	compat/zlib/contrib/ada/zlib.ads	/^   type Z_Stream_Access is access all Z_Stream;$/;"	t	packspec:ZLib	file:
Z_Stream_Size	compat/zlib/contrib/ada/zlib-thin.adb	/^   Z_Stream_Size : constant Int := Z_Stream'Size \/ System.Storage_Unit;$/;"	n	package:ZLib.Thin	file:
Z_TEXT	compat/zlib/zlib.h	/^#define Z_TEXT /;"	d
Z_TREES	compat/zlib/zlib.h	/^#define Z_TREES /;"	d
Z_U4	compat/zlib/zconf.h	/^#    define Z_U4 /;"	d
Z_U4	compat/zlib/zconf.h.in	/^#    define Z_U4 /;"	d	file:
Z_U8	compat/zlib/zutil.h	/^#    define Z_U8 /;"	d
Z_UNKNOWN	compat/zlib/zlib.h	/^#define Z_UNKNOWN /;"	d
Z_VERSION_ERROR	compat/zlib/zlib.h	/^#define Z_VERSION_ERROR /;"	d
Z_WANT64	compat/zlib/zconf.h	/^#  define Z_WANT64$/;"	d
Z_WANT64	compat/zlib/zconf.h.in	/^#  define Z_WANT64$/;"	d	file:
Zadler32.o	unix/Makefile.in	/^Zadler32.o: $(ZLIB_DIR)\/adler32.c$/;"	t
Zcompress.o	unix/Makefile.in	/^Zcompress.o: $(ZLIB_DIR)\/compress.c$/;"	t
Zcrc32.o	unix/Makefile.in	/^Zcrc32.o:    $(ZLIB_DIR)\/crc32.c$/;"	t
Zdeflate.o	unix/Makefile.in	/^Zdeflate.o:  $(ZLIB_DIR)\/deflate.c$/;"	t
ZeroTransferTimerProc	generic/tclIO.c	/^ZeroTransferTimerProc($/;"	f	typeref:typename:void	file:
Zinfback.o	unix/Makefile.in	/^Zinfback.o:  $(ZLIB_DIR)\/infback.c$/;"	t
Zinffast.o	unix/Makefile.in	/^Zinffast.o:  $(ZLIB_DIR)\/inffast.c$/;"	t
Zinflate.o	unix/Makefile.in	/^Zinflate.o:  $(ZLIB_DIR)\/inflate.c$/;"	t
Zinftrees.o	unix/Makefile.in	/^Zinftrees.o: $(ZLIB_DIR)\/inftrees.c$/;"	t
Zip filesystems and attached archives.	changes.md	/^## Zip filesystems and attached archives.$/;"	s
ZipAddFile	generic/tclZipfs.c	/^ZipAddFile($/;"	f	typeref:typename:int	file:
ZipCentralHeaderOffsets	generic/tclZipfs.c	/^enum ZipCentralHeaderOffsets {$/;"	g	file:
ZipCentralSignatureOffsets	generic/tclZipfs.c	/^enum ZipCentralSignatureOffsets {$/;"	g	file:
ZipChannel	generic/tclZipfs.c	/^typedef struct ZipChannel {$/;"	s	file:
ZipChannel	generic/tclZipfs.c	/^} ZipChannel;$/;"	t	typeref:struct:ZipChannel	file:
ZipChannelClose	generic/tclZipfs.c	/^ZipChannelClose($/;"	f	typeref:typename:int	file:
ZipChannelClose	generic/tclZipfs.c	/^static Tcl_DriverClose2Proc	ZipChannelClose;$/;"	v	typeref:typename:Tcl_DriverClose2Proc	file:
ZipChannelGetFile	generic/tclZipfs.c	/^ZipChannelGetFile($/;"	f	typeref:typename:int	file:
ZipChannelGetFile	generic/tclZipfs.c	/^static Tcl_DriverGetHandleProc	ZipChannelGetFile;$/;"	v	typeref:typename:Tcl_DriverGetHandleProc	file:
ZipChannelOpen	generic/tclZipfs.c	/^ZipChannelOpen($/;"	f	typeref:typename:Tcl_Channel	file:
ZipChannelRead	generic/tclZipfs.c	/^ZipChannelRead($/;"	f	typeref:typename:int	file:
ZipChannelRead	generic/tclZipfs.c	/^static Tcl_DriverInputProc	ZipChannelRead;$/;"	v	typeref:typename:Tcl_DriverInputProc	file:
ZipChannelWatchChannel	generic/tclZipfs.c	/^ZipChannelWatchChannel($/;"	f	typeref:typename:void	file:
ZipChannelWatchChannel	generic/tclZipfs.c	/^static Tcl_DriverWatchProc	ZipChannelWatchChannel;$/;"	v	typeref:typename:Tcl_DriverWatchProc	file:
ZipChannelWideSeek	generic/tclZipfs.c	/^ZipChannelWideSeek($/;"	f	typeref:typename:long long	file:
ZipChannelWideSeek	generic/tclZipfs.c	/^static Tcl_DriverWideSeekProc	ZipChannelWideSeek;$/;"	v	typeref:typename:Tcl_DriverWideSeekProc	file:
ZipChannelWritable	generic/tclZipfs.c	/^ZipChannelWritable($/;"	f	typeref:typename:int	file:
ZipChannelWrite	generic/tclZipfs.c	/^ZipChannelWrite($/;"	f	typeref:typename:int	file:
ZipChannelWrite	generic/tclZipfs.c	/^static Tcl_DriverOutputProc	ZipChannelWrite;$/;"	v	typeref:typename:Tcl_DriverOutputProc	file:
ZipCompressionMethods	generic/tclZipfs.c	/^enum ZipCompressionMethods {$/;"	g	file:
ZipCryptOffsets	generic/tclZipfs.c	/^enum ZipCryptOffsets {$/;"	g	file:
ZipEntry	generic/tclZipfs.c	/^typedef struct ZipEntry {$/;"	s	file:
ZipEntry	generic/tclZipfs.c	/^} ZipEntry;$/;"	t	typeref:struct:ZipEntry	file:
ZipEntryAccess	generic/tclZipfs.c	/^ZipEntryAccess($/;"	f	typeref:typename:int	file:
ZipEntryFlags	generic/tclZipfs.c	/^enum ZipEntryFlags {$/;"	g	file:
ZipEntryNameLength	generic/tclZipfs.c	/^ZipEntryNameLength($/;"	f	typeref:typename:Tcl_Size	file:
ZipEntryStat	generic/tclZipfs.c	/^ZipEntryStat($/;"	f	typeref:typename:int	file:
ZipFS	generic/tclZipfs.c	/^} ZipFS = {$/;"	v	typeref:struct:ZipFSGlobals
ZipFSAccessProc	generic/tclZipfs.c	/^ZipFSAccessProc($/;"	f	typeref:typename:int	file:
ZipFSAccessProc	generic/tclZipfs.c	/^static Tcl_FSAccessProc			ZipFSAccessProc;$/;"	v	typeref:typename:Tcl_FSAccessProc	file:
ZipFSCanonicalObjCmd	generic/tclZipfs.c	/^ZipFSCanonicalObjCmd($/;"	f	typeref:typename:int	file:
ZipFSCatalogFilesystem	generic/tclZipfs.c	/^ZipFSCatalogFilesystem($/;"	f	typeref:typename:int	file:
ZipFSCloseArchive	generic/tclZipfs.c	/^ZipFSCloseArchive($/;"	f	typeref:typename:void	file:
ZipFSExistsObjCmd	generic/tclZipfs.c	/^ZipFSExistsObjCmd($/;"	f	typeref:typename:int	file:
ZipFSFileAttrStringsProc	generic/tclZipfs.c	/^ZipFSFileAttrStringsProc($/;"	f	typeref:typename:const char * const *	file:
ZipFSFileAttrStringsProc	generic/tclZipfs.c	/^static Tcl_FSFileAttrStringsProc	ZipFSFileAttrStringsProc;$/;"	v	typeref:typename:Tcl_FSFileAttrStringsProc	file:
ZipFSFileAttrsGetProc	generic/tclZipfs.c	/^ZipFSFileAttrsGetProc($/;"	f	typeref:typename:int	file:
ZipFSFileAttrsGetProc	generic/tclZipfs.c	/^static Tcl_FSFileAttrsGetProc		ZipFSFileAttrsGetProc;$/;"	v	typeref:typename:Tcl_FSFileAttrsGetProc	file:
ZipFSFileAttrsSetProc	generic/tclZipfs.c	/^ZipFSFileAttrsSetProc($/;"	f	typeref:typename:int	file:
ZipFSFileAttrsSetProc	generic/tclZipfs.c	/^static Tcl_FSFileAttrsSetProc		ZipFSFileAttrsSetProc;$/;"	v	typeref:typename:Tcl_FSFileAttrsSetProc	file:
ZipFSFilesystemPathTypeProc	generic/tclZipfs.c	/^ZipFSFilesystemPathTypeProc($/;"	f	typeref:typename:Tcl_Obj *	file:
ZipFSFilesystemPathTypeProc	generic/tclZipfs.c	/^static Tcl_FSFilesystemPathTypeProc	ZipFSFilesystemPathTypeProc;$/;"	v	typeref:typename:Tcl_FSFilesystemPathTypeProc	file:
ZipFSFilesystemSeparatorProc	generic/tclZipfs.c	/^ZipFSFilesystemSeparatorProc($/;"	f	typeref:typename:Tcl_Obj *	file:
ZipFSFilesystemSeparatorProc	generic/tclZipfs.c	/^static Tcl_FSFilesystemSeparatorProc	ZipFSFilesystemSeparatorProc;$/;"	v	typeref:typename:Tcl_FSFilesystemSeparatorProc	file:
ZipFSFind	generic/tclZipfs.c	/^ZipFSFind($/;"	f	typeref:typename:Tcl_Obj *	file:
ZipFSFindTOC	generic/tclZipfs.c	/^ZipFSFindTOC($/;"	f	typeref:typename:int	file:
ZipFSGlobals	generic/tclZipfs.c	/^static struct ZipFSGlobals {$/;"	s	file:
ZipFSInfoObjCmd	generic/tclZipfs.c	/^ZipFSInfoObjCmd($/;"	f	typeref:typename:int	file:
ZipFSLMkImgObjCmd	generic/tclZipfs.c	/^ZipFSLMkImgObjCmd($/;"	f	typeref:typename:int	file:
ZipFSLMkZipObjCmd	generic/tclZipfs.c	/^ZipFSLMkZipObjCmd($/;"	f	typeref:typename:int	file:
ZipFSListObjCmd	generic/tclZipfs.c	/^ZipFSListObjCmd($/;"	f	typeref:typename:int	file:
ZipFSListVolumesProc	generic/tclZipfs.c	/^ZipFSListVolumesProc(void)$/;"	f	typeref:typename:Tcl_Obj *	file:
ZipFSListVolumesProc	generic/tclZipfs.c	/^static Tcl_FSListVolumesProc		ZipFSListVolumesProc;$/;"	v	typeref:typename:Tcl_FSListVolumesProc	file:
ZipFSLoadFile	generic/tclZipfs.c	/^ZipFSLoadFile($/;"	f	typeref:typename:int	file:
ZipFSLoadFile	generic/tclZipfs.c	/^static Tcl_FSLoadFileProc2		ZipFSLoadFile;$/;"	v	typeref:typename:Tcl_FSLoadFileProc2	file:
ZipFSLookup	generic/tclZipfs.c	/^ZipFSLookup($/;"	f	typeref:typename:ZipEntry *	file:
ZipFSLookupZip	generic/tclZipfs.c	/^ZipFSLookupZip($/;"	f	typeref:typename:ZipFile *	file:
ZipFSMatchInDirectoryProc	generic/tclZipfs.c	/^ZipFSMatchInDirectoryProc($/;"	f	typeref:typename:int	file:
ZipFSMatchInDirectoryProc	generic/tclZipfs.c	/^static Tcl_FSMatchInDirectoryProc	ZipFSMatchInDirectoryProc;$/;"	v	typeref:typename:Tcl_FSMatchInDirectoryProc	file:
ZipFSMatchMountPoints	generic/tclZipfs.c	/^ZipFSMatchMountPoints($/;"	f	typeref:typename:void	file:
ZipFSMkImgObjCmd	generic/tclZipfs.c	/^ZipFSMkImgObjCmd($/;"	f	typeref:typename:int	file:
ZipFSMkKeyObjCmd	generic/tclZipfs.c	/^ZipFSMkKeyObjCmd($/;"	f	typeref:typename:int	file:
ZipFSMkZipObjCmd	generic/tclZipfs.c	/^ZipFSMkZipObjCmd($/;"	f	typeref:typename:int	file:
ZipFSMkZipOrImg	generic/tclZipfs.c	/^ZipFSMkZipOrImg($/;"	f	typeref:typename:int	file:
ZipFSMountBufferObjCmd	generic/tclZipfs.c	/^ZipFSMountBufferObjCmd($/;"	f	typeref:typename:int	file:
ZipFSMountObjCmd	generic/tclZipfs.c	/^ZipFSMountObjCmd($/;"	f	typeref:typename:int	file:
ZipFSOpenArchive	generic/tclZipfs.c	/^ZipFSOpenArchive($/;"	f	typeref:typename:int	file:
ZipFSOpenFileChannelProc	generic/tclZipfs.c	/^ZipFSOpenFileChannelProc($/;"	f	typeref:typename:Tcl_Channel	file:
ZipFSOpenFileChannelProc	generic/tclZipfs.c	/^static Tcl_FSOpenFileChannelProc	ZipFSOpenFileChannelProc;$/;"	v	typeref:typename:Tcl_FSOpenFileChannelProc	file:
ZipFSPathInFilesystemProc	generic/tclZipfs.c	/^ZipFSPathInFilesystemProc($/;"	f	typeref:typename:int	file:
ZipFSPathInFilesystemProc	generic/tclZipfs.c	/^static Tcl_FSPathInFilesystemProc	ZipFSPathInFilesystemProc;$/;"	v	typeref:typename:Tcl_FSPathInFilesystemProc	file:
ZipFSRootObjCmd	generic/tclZipfs.c	/^ZipFSRootObjCmd($/;"	f	typeref:typename:int	file:
ZipFSStatProc	generic/tclZipfs.c	/^ZipFSStatProc($/;"	f	typeref:typename:int	file:
ZipFSStatProc	generic/tclZipfs.c	/^static Tcl_FSStatProc			ZipFSStatProc;$/;"	v	typeref:typename:Tcl_FSStatProc	file:
ZipFSTclLibraryObjCmd	generic/tclZipfs.c	/^ZipFSTclLibraryObjCmd($/;"	f	typeref:typename:int	file:
ZipFSUnmountObjCmd	generic/tclZipfs.c	/^ZipFSUnmountObjCmd($/;"	f	typeref:typename:int	file:
ZipFile	generic/tclZipfs.c	/^typedef struct ZipFile {$/;"	s	file:
ZipFile	generic/tclZipfs.c	/^} ZipFile;$/;"	t	typeref:struct:ZipFile	file:
ZipFileAttrs	generic/tclZipfs.c	/^enum ZipFileAttrs {$/;"	g	file:
ZipLocalHeaderOffsets	generic/tclZipfs.c	/^enum ZipLocalHeaderOffsets {$/;"	g	file:
ZipMapArchive	generic/tclZipfs.c	/^ZipMapArchive($/;"	f	typeref:typename:int	file:
ZipReadInt	generic/tclZipfs.c	/^ZipReadInt($/;"	f	typeref:typename:unsigned int	file:
ZipReadShort	generic/tclZipfs.c	/^ZipReadShort($/;"	f	typeref:typename:unsigned short	file:
ZipWriteInt	generic/tclZipfs.c	/^ZipWriteInt($/;"	f	typeref:typename:void	file:
ZipWriteShort	generic/tclZipfs.c	/^ZipWriteShort($/;"	f	typeref:typename:void	file:
ZipfsAppHookFindTclInit	generic/tclZipfs.c	/^ZipfsAppHookFindTclInit($/;"	f	typeref:typename:int	file:
ZipfsSetup	generic/tclZipfs.c	/^ZipfsSetup(void)$/;"	f	typeref:typename:void	file:
ZlibChannelData	generic/tclZlib.c	/^} ZlibChannelData;$/;"	t	typeref:struct:__anon1d0b6d960308	file:
ZlibChannelDataFlags	generic/tclZlib.c	/^enum ZlibChannelDataFlags {$/;"	g	file:
ZlibCmd	generic/tclZlib.c	/^ZlibCmd($/;"	f	typeref:typename:int	file:
ZlibCmd	generic/tclZlib.c	/^static Tcl_ObjCmdProc		ZlibCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
ZlibPushSubcmd	generic/tclZlib.c	/^ZlibPushSubcmd($/;"	f	typeref:typename:int	file:
ZlibStackChannelTransform	generic/tclZlib.c	/^ZlibStackChannelTransform($/;"	f	typeref:typename:Tcl_Channel	file:
ZlibStreamAddCmd	generic/tclZlib.c	/^ZlibStreamAddCmd($/;"	f	typeref:typename:int	file:
ZlibStreamAddCmd	generic/tclZlib.c	/^static Tcl_ObjCmdProc		ZlibStreamAddCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
ZlibStreamCleanup	generic/tclZlib.c	/^ZlibStreamCleanup($/;"	f	typeref:typename:void
ZlibStreamCmd	generic/tclZlib.c	/^ZlibStreamCmd($/;"	f	typeref:typename:int	file:
ZlibStreamCmd	generic/tclZlib.c	/^static Tcl_ObjCmdProc		ZlibStreamCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
ZlibStreamCmdDelete	generic/tclZlib.c	/^ZlibStreamCmdDelete($/;"	f	typeref:typename:void	file:
ZlibStreamCmdDelete	generic/tclZlib.c	/^static Tcl_CmdDeleteProc	ZlibStreamCmdDelete;$/;"	v	typeref:typename:Tcl_CmdDeleteProc	file:
ZlibStreamHandle	generic/tclZlib.c	/^} ZlibStreamHandle;$/;"	t	typeref:struct:__anon1d0b6d960208	file:
ZlibStreamHandleFlags	generic/tclZlib.c	/^enum ZlibStreamHandleFlags {$/;"	g	file:
ZlibStreamHeaderCmd	generic/tclZlib.c	/^ZlibStreamHeaderCmd($/;"	f	typeref:typename:int	file:
ZlibStreamHeaderCmd	generic/tclZlib.c	/^static Tcl_ObjCmdProc		ZlibStreamHeaderCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
ZlibStreamPutCmd	generic/tclZlib.c	/^ZlibStreamPutCmd($/;"	f	typeref:typename:int	file:
ZlibStreamPutCmd	generic/tclZlib.c	/^static Tcl_ObjCmdProc		ZlibStreamPutCmd;$/;"	v	typeref:typename:Tcl_ObjCmdProc	file:
ZlibStreamSubcmd	generic/tclZlib.c	/^ZlibStreamSubcmd($/;"	f	typeref:typename:int	file:
ZlibTransformBlockMode	generic/tclZlib.c	/^ZlibTransformBlockMode($/;"	f	typeref:typename:int	file:
ZlibTransformBlockMode	generic/tclZlib.c	/^static Tcl_DriverBlockModeProc	ZlibTransformBlockMode;$/;"	v	typeref:typename:Tcl_DriverBlockModeProc	file:
ZlibTransformClose	generic/tclZlib.c	/^ZlibTransformClose($/;"	f	typeref:typename:int	file:
ZlibTransformClose	generic/tclZlib.c	/^static Tcl_DriverClose2Proc	ZlibTransformClose;$/;"	v	typeref:typename:Tcl_DriverClose2Proc	file:
ZlibTransformEventHandler	generic/tclZlib.c	/^ZlibTransformEventHandler($/;"	f	typeref:typename:int	file:
ZlibTransformEventHandler	generic/tclZlib.c	/^static Tcl_DriverHandlerProc	ZlibTransformEventHandler;$/;"	v	typeref:typename:Tcl_DriverHandlerProc	file:
ZlibTransformEventTimerKill	generic/tclZlib.c	/^ZlibTransformEventTimerKill($/;"	f	typeref:typename:void	file:
ZlibTransformFlush	generic/tclZlib.c	/^ZlibTransformFlush($/;"	f	typeref:typename:int	file:
ZlibTransformGetHandle	generic/tclZlib.c	/^ZlibTransformGetHandle($/;"	f	typeref:typename:int	file:
ZlibTransformGetHandle	generic/tclZlib.c	/^static Tcl_DriverGetHandleProc	ZlibTransformGetHandle;$/;"	v	typeref:typename:Tcl_DriverGetHandleProc	file:
ZlibTransformGetOption	generic/tclZlib.c	/^ZlibTransformGetOption($/;"	f	typeref:typename:int	file:
ZlibTransformGetOption	generic/tclZlib.c	/^static Tcl_DriverGetOptionProc	ZlibTransformGetOption;$/;"	v	typeref:typename:Tcl_DriverGetOptionProc	file:
ZlibTransformInput	generic/tclZlib.c	/^ZlibTransformInput($/;"	f	typeref:typename:int	file:
ZlibTransformInput	generic/tclZlib.c	/^static Tcl_DriverInputProc	ZlibTransformInput;$/;"	v	typeref:typename:Tcl_DriverInputProc	file:
ZlibTransformOutput	generic/tclZlib.c	/^ZlibTransformOutput($/;"	f	typeref:typename:int	file:
ZlibTransformOutput	generic/tclZlib.c	/^static Tcl_DriverOutputProc	ZlibTransformOutput;$/;"	v	typeref:typename:Tcl_DriverOutputProc	file:
ZlibTransformSetOption	generic/tclZlib.c	/^ZlibTransformSetOption(			\/* not used *\/$/;"	f	typeref:typename:int	file:
ZlibTransformSetOption	generic/tclZlib.c	/^static Tcl_DriverSetOptionProc	ZlibTransformSetOption;$/;"	v	typeref:typename:Tcl_DriverSetOptionProc	file:
ZlibTransformTimerRun	generic/tclZlib.c	/^ZlibTransformTimerRun($/;"	f	typeref:typename:void	file:
ZlibTransformWatch	generic/tclZlib.c	/^ZlibTransformWatch($/;"	f	typeref:typename:void	file:
ZlibTransformWatch	generic/tclZlib.c	/^static Tcl_DriverWatchProc	ZlibTransformWatch;$/;"	v	typeref:typename:Tcl_DriverWatchProc	file:
Ztrees.o	unix/Makefile.in	/^Ztrees.o:    $(ZLIB_DIR)\/trees.c$/;"	t
Zuncompr.o	unix/Makefile.in	/^Zuncompr.o:  $(ZLIB_DIR)\/uncompr.c$/;"	t
Zzutil.o	unix/Makefile.in	/^Zzutil.o:    $(ZLIB_DIR)\/zutil.c$/;"	t
_AC_LIBOBJS_NORMALIZE	unix/configure.ac	/^define([_AC_LIBOBJS_NORMALIZE],[])$/;"	d
_CLCKTOK_TYPE	generic/tclDate.h	/^typedef enum _CLCKTOK_TYPE {$/;"	g
_CRT_SECURE_NO_DEPRECATE	win/nmakehlp.c	/^#define _CRT_SECURE_NO_DEPRECATE$/;"	d	file:
_CRT_SECURE_NO_WARNINGS	compat/zlib/contrib/minizip/ioapi.c	/^        #define _CRT_SECURE_NO_WARNINGS$/;"	d	file:
_CRT_glob	compat/zlib/contrib/untgz/untgz.c	/^int _CRT_glob = 0;      \/* disable argument globbing in MinGW *\/$/;"	v	typeref:typename:int
_CRT_glob	win/tclAppInit.c	/^int _CRT_glob = 0;$/;"	v	typeref:typename:int
_DARWIN_C_SOURCE	unix/configure.ac	/^	    AC_DEFINE(_DARWIN_C_SOURCE, 1,$/;"	d
_DSTMODE	generic/tclDate.c	/^typedef enum _DSTMODE {$/;"	g	file:
_DSTMODE	generic/tclDateClassic.c	/^typedef enum _DSTMODE {$/;"	g	file:
_FAKE_RFC2553_H	compat/fake-rfc2553.h	/^#define _FAKE_RFC2553_H$/;"	d
_FILE_OFFSET_BIT	compat/zlib/contrib/minizip/ioapi.h	/^                #define _FILE_OFFSET_BIT /;"	d
_FILE_OFFSET_BIT	compat/zlib/contrib/minizip/miniunz.c	/^                #define _FILE_OFFSET_BIT /;"	d	file:
_FILE_OFFSET_BIT	compat/zlib/contrib/minizip/minizip.c	/^                #define _FILE_OFFSET_BIT /;"	d	file:
_FPU_GETCW	generic/tclStrToD.c	/^#  define _FPU_GETCW(/;"	d	file:
_FPU_SETCW	generic/tclStrToD.c	/^#  define _FPU_SETCW(/;"	d	file:
_GNU_SOURCE	unix/tclEpollNotfy.c	/^#   define _GNU_SOURCE	/;"	d	file:
_LARGEFILE64_SOURCE	compat/zlib/contrib/minizip/ioapi.h	/^                #define _LARGEFILE64_SOURCE$/;"	d
_LARGEFILE64_SOURCE	compat/zlib/contrib/minizip/miniunz.c	/^                #define _LARGEFILE64_SOURCE$/;"	d	file:
_LARGEFILE64_SOURCE	compat/zlib/contrib/minizip/minizip.c	/^                #define _LARGEFILE64_SOURCE$/;"	d	file:
_LARGEFILE_SOURCE	compat/zlib/gzguts.h	/^#    define _LARGEFILE_SOURCE /;"	d
_MCW_EM	win/tclWinThrd.c	/^#   define	_MCW_EM	/;"	d	file:
_MCW_PC	win/tclWinThrd.c	/^#   define	_MCW_PC	/;"	d	file:
_MCW_RC	win/tclWinThrd.c	/^#   define	_MCW_RC	/;"	d	file:
_MERIDIAN	generic/tclDate.h	/^typedef enum _MERIDIAN {$/;"	g
_MERIDIAN	generic/tclDateClassic.c	/^typedef enum _MERIDIAN {$/;"	g	file:
_OE_SOCKETS	unix/tcl.m4	/^	    AC_DEFINE(_OE_SOCKETS, 1,	# needed in sys\/socket.h$/;"	d
_POSIX2_RE_DUP_MAX	generic/regguts.h	/^#define	_POSIX2_RE_DUP_MAX /;"	d
_POSIX_PTHREAD_SEMANTICS	unix/tcl.m4	/^	    AC_DEFINE(_POSIX_PTHREAD_SEMANTICS, 1,$/;"	d
_POSIX_SOURCE	compat/zlib/gzguts.h	/^#  define _POSIX_SOURCE$/;"	d
_REENTRANT	unix/tcl.m4	/^	    AC_DEFINE(_REENTRANT, 1, [Do we want the reentrant OS API?])$/;"	d
_REENTRANT	unix/tcl.m4	/^    AC_DEFINE(_REENTRANT, 1, [Do we want the reentrant OS API?])$/;"	d
_REGEX_H_	generic/regex.h	/^#define	_REGEX_H_	/;"	d
_REPARSE_DATA_BUFFER	win/tclWinFile.c	/^typedef struct _REPARSE_DATA_BUFFER {$/;"	s	file:
_SS_MAXSIZE	compat/fake-rfc2553.h	/^# define	_SS_MAXSIZE	/;"	d
_SS_PADSIZE	compat/fake-rfc2553.h	/^# define       _SS_PADSIZE /;"	d
_STRING	compat/string.h	/^#define _STRING$/;"	d
_TABLE	generic/tclDateClassic.c	/^typedef struct _TABLE {$/;"	s	file:
_TCHAR_DEFINED	generic/tclPlatDecls.h	/^#   define _TCHAR_DEFINED$/;"	d
_TCHAR_DEFINED	win/tclWinPort.h	/^#   define _TCHAR_DEFINED$/;"	d
_TCL	generic/tcl.h	/^#define _TCL$/;"	d
_TCLCLOCK_H	generic/tclDate.h	/^#define _TCLCLOCK_H$/;"	d
_TCLCOMPILATION	generic/tclCompile.h	/^#define _TCLCOMPILATION /;"	d
_TCLCONFIG	unix/tclConfig.h.in	/^    #define _TCLCONFIG$/;"	d	file:
_TCLDECLS	generic/tclDecls.h	/^#define _TCLDECLS$/;"	d
_TCLFILESYSTEM	generic/tclFileSystem.h	/^#define _TCLFILESYSTEM$/;"	d
_TCLINT	generic/tclInt.h	/^#define _TCLINT$/;"	d
_TCLINTDECLS	generic/tclIntDecls.h	/^#define _TCLINTDECLS$/;"	d
_TCLINTPLATDECLS	generic/tclIntPlatDecls.h	/^#define _TCLINTPLATDECLS$/;"	d
_TCLOODECLS	generic/tclOODecls.h	/^#define _TCLOODECLS$/;"	d
_TCLOOINTDECLS	generic/tclOOIntDecls.h	/^#define _TCLOOINTDECLS$/;"	d
_TCLPLATDECLS	generic/tclPlatDecls.h	/^#define _TCLPLATDECLS$/;"	d
_TCLPORT	generic/tclPort.h	/^#define _TCLPORT$/;"	d
_TCLREGEXP	generic/tclRegexp.h	/^#define _TCLREGEXP$/;"	d
_TCLSTRIDXTREE_H	generic/tclStrIdxTree.h	/^#define _TCLSTRIDXTREE_H$/;"	d
_TCLSTRINGREP	generic/tclStringRep.h	/^#define _TCLSTRINGREP$/;"	d
_TCLTOMMATHDECLS	generic/tclTomMathDecls.h	/^#define _TCLTOMMATHDECLS$/;"	d
_TCLUNIXPORT	unix/tclUnixPort.h	/^#define _TCLUNIXPORT$/;"	d
_TCLWININT	win/tclWinInt.h	/^#define _TCLWININT$/;"	d
_TCLWINPORT	win/tclWinPort.h	/^#define _TCLWINPORT$/;"	d
_THREAD_SAFE	unix/tcl.m4	/^    AC_DEFINE(_THREAD_SAFE, 1, [Do we want the thread-safe OS API?])$/;"	d
_TIME_BITS	unix/tcl.m4	/^		AC_DEFINE(_TIME_BITS, 64, [_TIME_BITS=64 enables 64-bit time_t.])$/;"	d
_TINYDIR_DIR	compat/zlib/contrib/minizip/tinydir.h	/^#define _TINYDIR_DIR /;"	d
_TINYDIR_DRIVE_MAX	compat/zlib/contrib/minizip/tinydir.h	/^#define _TINYDIR_DRIVE_MAX /;"	d
_TINYDIR_FILENAME_MAX	compat/zlib/contrib/minizip/tinydir.h	/^#define _TINYDIR_FILENAME_MAX /;"	d
_TINYDIR_FREE	compat/zlib/contrib/minizip/tinydir.h	/^	#define _TINYDIR_FREE(/;"	d
_TINYDIR_FUNC	compat/zlib/contrib/minizip/tinydir.h	/^# define _TINYDIR_FUNC /;"	d
_TINYDIR_HAS_DIRFD	compat/zlib/contrib/minizip/tinydir.h	/^# define _TINYDIR_HAS_DIRFD$/;"	d
_TINYDIR_HAS_FPATHCONF	compat/zlib/contrib/minizip/tinydir.h	/^# define _TINYDIR_HAS_FPATHCONF$/;"	d
_TINYDIR_HAS_READDIR_R	compat/zlib/contrib/minizip/tinydir.h	/^# define _TINYDIR_HAS_READDIR_R$/;"	d
_TINYDIR_MALLOC	compat/zlib/contrib/minizip/tinydir.h	/^	#define _TINYDIR_MALLOC(/;"	d
_TINYDIR_PATH_EXTRA	compat/zlib/contrib/minizip/tinydir.h	/^# define _TINYDIR_PATH_EXTRA /;"	d
_TINYDIR_PATH_MAX	compat/zlib/contrib/minizip/tinydir.h	/^# define _TINYDIR_PATH_MAX /;"	d
_TINYDIR_PATH_MAX	compat/zlib/contrib/minizip/tinydir.h	/^#define _TINYDIR_PATH_MAX /;"	d
_TINYDIR_USE_FPATHCONF	compat/zlib/contrib/minizip/tinydir.h	/^# define _TINYDIR_USE_FPATHCONF$/;"	d
_TINYDIR_USE_READDIR	compat/zlib/contrib/minizip/tinydir.h	/^# define _TINYDIR_USE_READDIR$/;"	d
_UNICODE	compat/zlib/contrib/minizip/tinydir.h	/^#define _UNICODE$/;"	d
_WIN32_WINNT	libtommath/bn_s_mp_rand_platform.c	/^#define _WIN32_WINNT /;"	d	file:
_WIN32_WINNT	win/tclWinPort.h	/^#   define _WIN32_WINNT /;"	d
_XOPEN_SOURCE	unix/tcl.m4	/^	    AC_DEFINE(_XOPEN_SOURCE, 1, [Do we want to use the XOPEN network library?])$/;"	d
_XOPEN_SOURCE_EXTENDED	unix/tcl.m4	/^	    AC_DEFINE(_XOPEN_SOURCE_EXTENDED, 1, [Do we want to use the XOPEN network library?])$/;"	d
_ZLIBIOAPI64_H	compat/zlib/contrib/minizip/ioapi.h	/^#define _ZLIBIOAPI64_H$/;"	d
__MINGW_USE_VC2005_COMPAT	win/tclWinPort.h	/^#   define __MINGW_USE_VC2005_COMPAT$/;"	d
__REG_NOCHAR	generic/regcustom.h	/^#define	__REG_NOCHAR	/;"	d
__REG_NOCHAR	generic/regex.h	/^#define	__REG_NOCHAR	/;"	d
__REG_NOFRONT	generic/regcustom.h	/^#define	__REG_NOFRONT	/;"	d
__REG_NOFRONT	generic/regex.h	/^#define	__REG_NOFRONT	/;"	d
__REG_WIDE_COMPILE	generic/regcustom.h	/^#define	__REG_WIDE_COMPILE	/;"	d
__REG_WIDE_COMPILE	generic/regex.h	/^#define	__REG_WIDE_COMPILE	/;"	d
__REG_WIDE_EXEC	generic/regcustom.h	/^#define	__REG_WIDE_EXEC	/;"	d
__REG_WIDE_EXEC	generic/regex.h	/^#define	__REG_WIDE_EXEC	/;"	d
__REG_WIDE_T	generic/regcustom.h	/^#define	__REG_WIDE_T	/;"	d
__REG_WIDE_T	generic/regex.h	/^#define	__REG_WIDE_T	/;"	d
__USE_FILE_OFFSET64	compat/zlib/contrib/minizip/ioapi.h	/^                #define __USE_FILE_OFFSET64$/;"	d
__USE_FILE_OFFSET64	compat/zlib/contrib/minizip/miniunz.c	/^                #define __USE_FILE_OFFSET64$/;"	d	file:
__USE_FILE_OFFSET64	compat/zlib/contrib/minizip/minizip.c	/^                #define __USE_FILE_OFFSET64$/;"	d	file:
__USE_LARGEFILE64	compat/zlib/contrib/minizip/ioapi.h	/^                #define __USE_LARGEFILE64$/;"	d
__USE_LARGEFILE64	compat/zlib/contrib/minizip/miniunz.c	/^                #define __USE_LARGEFILE64$/;"	d	file:
__USE_LARGEFILE64	compat/zlib/contrib/minizip/minizip.c	/^                #define __USE_LARGEFILE64$/;"	d	file:
__accept__	tests/remote.tcl	/^proc __accept__ {s a p} {$/;"	p
__anon004fe33e0108	unix/tclUnixPipe.c	/^typedef struct {$/;"	s	file:
__anon02ea70180108	generic/tclIndexObj.c	/^typedef struct {$/;"	s	file:
__anon0627b8d90108	generic/tclProc.c	/^typedef struct {$/;"	s	file:
__anon07b4e8c0010a	unix/tclUnixSock.c	/^typedef union {$/;"	u	file:
__anon07b4e8c00203	unix/tclUnixSock.c	/^    enum { LOOKUP, SOCKET, BIND, LISTEN } howfar = LOOKUP;$/;"	g	function:Tcl_OpenTcpServerEx	file:
__anon095e08b00108	unix/tclUnixTest.c	/^typedef struct {$/;"	s	file:
__anon099381c20108	unix/tclUnixThrd.c	/^typedef struct {$/;"	s	file:
__anon0c1044aa0108	generic/tclScan.c	/^typedef struct {$/;"	s	file:
__anon0c1044aa0208	generic/tclScan.c	/^typedef struct {$/;"	s	file:
__anon0c6ba4b00108	generic/tclRegexp.c	/^typedef struct {$/;"	s	file:
__anon0cbcdfbb0108	libtommath/bn_mp_prime_rabin_miller_trials.c	/^static const struct {$/;"	s	file:
__anon0dbab4280103	generic/tclCompCmdsSZ.c	/^    enum {Switch_Exact, Switch_Glob, Switch_Regexp} mode;$/;"	g	function:TclCompileSwitchCmd	file:
__anon0dbab4280203	generic/tclCompCmdsSZ.c	/^    enum {Switch_Exact, Switch_Glob, Switch_Regexp};$/;"	g	function:IssueSwitchChainedTests	file:
__anon0dc3d9d70108	macosx/tclMacOSXNotify.c	/^typedef struct {$/;"	s	file:
__anon0dc3d9d70208	macosx/tclMacOSXNotify.c	/^typedef struct {$/;"	s	file:
__anon0e9396a50108	generic/tclTest.c	/^typedef struct {$/;"	s	file:
__anon0e9396a50208	generic/tclTest.c	/^typedef struct {$/;"	s	file:
__anon0e9396a50308	generic/tclTest.c	/^typedef struct {$/;"	s	file:
__anon0e9396a50408	generic/tclTest.c	/^    static const struct {$/;"	s	function:UtfExtWrapper	file:
__anon0e9396a50503	generic/tclTest.c	/^    enum {$/;"	g	function:TestlistrepCmd	file:
__anon0e9396a50608	generic/tclTest.c	/^    struct {$/;"	s	function:TestbytestringObjCmd	file:
__anon0f5179650103	generic/tclDateClassic.c	/^enum { YYENOMEM = -2 };$/;"	g	file:
__anon103dd3350108	generic/tclDecls.h	/^typedef struct {$/;"	s
__anon1518b6be0108	win/tclWinChan.c	/^typedef struct {$/;"	s	file:
__anon1518b6be0208	win/tclWinChan.c	/^typedef struct {$/;"	s	file:
__anon19810ffe0103	win/tclWinFCmd.c	/^enum {$/;"	g	file:
__anon1c302b04010a	win/tclWinFile.c	/^    union {$/;"	u	struct:_REPARSE_DATA_BUFFER	file:
__anon1c302b040208	win/tclWinFile.c	/^	struct {$/;"	s	union:_REPARSE_DATA_BUFFER::__anon1c302b04010a	file:
__anon1c302b040308	win/tclWinFile.c	/^	struct {$/;"	s	union:_REPARSE_DATA_BUFFER::__anon1c302b04010a	file:
__anon1c302b040408	win/tclWinFile.c	/^	struct {$/;"	s	union:_REPARSE_DATA_BUFFER::__anon1c302b04010a	file:
__anon1c302b040508	win/tclWinFile.c	/^typedef struct {$/;"	s	file:
__anon1c3f21740108	unix/tclUnixCompat.c	/^typedef struct {$/;"	s	file:
__anon1d0b6d960108	generic/tclZlib.c	/^typedef struct {$/;"	s	file:
__anon1d0b6d960208	generic/tclZlib.c	/^typedef struct {$/;"	s	file:
__anon1d0b6d960308	generic/tclZlib.c	/^typedef struct {$/;"	s	file:
__anon1d0b6d960408	generic/tclZlib.c	/^    typedef struct {$/;"	s	function:ZlibStreamSubcmd	file:
__anon1e6e59ce0108	generic/tclEnv.c	/^static struct {$/;"	s	file:
__anon1eb0af660108	generic/tclIcu.c	/^static struct {$/;"	s	file:
__anon1eb6b355010a	generic/tclInt.h	/^    union {$/;"	u	struct:Var
__anon1eb6b355020a	generic/tclInt.h	/^    union {$/;"	u	struct:CmdFrame
__anon1eb6b3550308	generic/tclInt.h	/^	struct {$/;"	s	union:CmdFrame::__anon1eb6b355020a
__anon1eb6b3550408	generic/tclInt.h	/^	struct {$/;"	s	union:CmdFrame::__anon1eb6b355020a
__anon1eb6b3550508	generic/tclInt.h	/^typedef struct {$/;"	s
__anon1eb6b3550608	generic/tclInt.h	/^typedef struct {$/;"	s
__anon1eb6b3550708	generic/tclInt.h	/^typedef struct {$/;"	s
__anon1eb6b3550808	generic/tclInt.h	/^    struct {$/;"	s	struct:Interp
__anon1eb6b3550908	generic/tclInt.h	/^    struct {$/;"	s	struct:Interp
__anon1eb6b3550a0a	generic/tclInt.h	/^    union {$/;"	u	struct:TclMaxAlignment
__anon1eb6b3550b03	generic/tclInt.h	/^typedef enum {$/;"	g
__anon1f1c87400108	generic/tclObj.c	/^typedef struct {$/;"	s	file:
__anon1f1c87400208	generic/tclObj.c	/^typedef struct {$/;"	s	file:
__anon1f3382670108	generic/tclPkg.c	/^typedef struct {$/;"	s	file:
__anon21e740770108	generic/tclIORTrans.c	/^typedef struct {$/;"	s	file:
__anon21e740770208	generic/tclIORTrans.c	/^typedef struct {$/;"	s	file:
__anon21e740770308	generic/tclIORTrans.c	/^typedef struct {$/;"	s	file:
__anon21e740770403	generic/tclIORTrans.c	/^typedef enum {$/;"	g	file:
__anon21e740770503	generic/tclIORTrans.c	/^typedef enum {$/;"	g	file:
__anon21e740770608	generic/tclIORTrans.c	/^typedef struct {$/;"	s	file:
__anon21e740770708	generic/tclIORTrans.c	/^typedef struct {$/;"	s	file:
__anon21e740770808	generic/tclIORTrans.c	/^typedef struct {$/;"	s	file:
__anon2388ba180108	win/tclWinInit.c	/^typedef struct {$/;"	s	file:
__anon2388ba18020a	win/tclWinInit.c	/^    union {$/;"	u	function:TclpSetVariables	file:
__anon298490c40108	generic/tclResult.c	/^typedef struct {$/;"	s	file:
__anon29d79193010a	generic/tclOOInt.h	/^    union {$/;"	u	struct:Method
__anon2be3cfbd0108	win/tclWinNotify.c	/^typedef struct {$/;"	s	file:
__anon3259ecee0108	compat/zlib/contrib/minizip/unzip.c	/^{$/;"	s	file:
__anon3259ecee0208	compat/zlib/contrib/minizip/unzip.c	/^{$/;"	s	file:
__anon3385f2d20108	win/tclWinPipe.c	/^typedef struct {$/;"	s	file:
__anon3385f2d20208	win/tclWinPipe.c	/^typedef struct {$/;"	s	file:
__anon3385f2d20308	win/tclWinPipe.c	/^typedef struct {$/;"	s	file:
__anon3385f2d20403	win/tclWinPipe.c	/^    enum {CL_ESCAPE = 1, CL_QUOTE = 2, CL_UNPAIRED = 4};$/;"	g	function:BuildCommandLine	file:
__anon357794090108	generic/tclNamesp.c	/^typedef struct {$/;"	s	file:
__anon357794090208	generic/tclNamesp.c	/^typedef struct {$/;"	s	file:
__anon361a15920108	compat/zlib/gzguts.h	/^typedef struct {$/;"	s
__anon3a4776f00108	generic/tclAlloc.c	/^    struct {$/;"	s	union:overhead	file:
__anon3aeaf854010a	win/tclWinSock.c	/^typedef union {$/;"	u	file:
__anon3aeaf8540208	win/tclWinSock.c	/^typedef struct {$/;"	s	file:
__anon3aeaf8540308	win/tclWinSock.c	/^typedef struct {$/;"	s	file:
__anon3ba6a9150103	libtommath/tommath.h	/^typedef enum {$/;"	g
__anon3ba6a9150203	libtommath/tommath.h	/^typedef enum {$/;"	g
__anon3ba6a9150303	libtommath/tommath.h	/^typedef enum {$/;"	g
__anon3ba6a9150403	libtommath/tommath.h	/^typedef enum {$/;"	g
__anon3ba6a9150503	libtommath/tommath.h	/^typedef enum {$/;"	g
__anon3ba6a9150603	libtommath/tommath.h	/^typedef enum {$/;"	g
__anon3c9418440108	win/tclWinTest.c	/^    struct {$/;"	s	function:TestplatformChmod	file:
__anon3cc991560108	win/tclWinThrd.c	/^typedef struct {$/;"	s	file:
__anon3cc991560208	win/tclWinThrd.c	/^typedef struct {$/;"	s	file:
__anon3cc991560308	win/tclWinThrd.c	/^typedef struct {$/;"	s	file:
__anon3cd8f0330108	win/tclWinTime.c	/^typedef struct {$/;"	s	file:
__anon3cd8f0330208	win/tclWinTime.c	/^static struct {$/;"	s	file:
__anon43415cec0108	unix/tclKqueueNotfy.c	/^typedef struct {$/;"	s	file:
__anon46b45ffb0108	generic/tclConfig.c	/^typedef struct {$/;"	s	file:
__anon4d1cb8920108	generic/tclThreadStorage.c	/^static struct {$/;"	s	file:
__anon4d1cb8920208	generic/tclThreadStorage.c	/^typedef struct {$/;"	s	file:
__anon4d1cb892030a	generic/tclThreadStorage.c	/^typedef union {$/;"	u	file:
__anon52a4be880108	compat/zlib/examples/gzjoin.c	/^typedef struct {$/;"	s	file:
__anon5b8cc1910108	generic/tclIOCmd.c	/^typedef struct {$/;"	s	file:
__anon5b8cc1910208	generic/tclIOCmd.c	/^typedef struct {$/;"	s	file:
__anon5b8cc1910303	generic/tclIOCmd.c	/^    enum { FcopySize, FcopyCommand };$/;"	g	function:Tcl_FcopyObjCmd	file:
__anon5bfe4c340103	compat/zlib/examples/gznorm.c	/^    enum {              \/\/ BETWEEN -> HEAD -> BLOCK -> TAIL -> BETWEEN -> ...$/;"	g	function:gzip_normalize	file:
__anon5e04fc9d0108	generic/tclIO.c	/^typedef struct {$/;"	s	file:
__anon5e0846e30108	generic/tclOO.c	/^static const struct {$/;"	s	file:
__anon5fc3cb980103	macosx/tclMacOSXFCmd.c	/^enum {$/;"	g	file:
__anon5fc3cb980203	macosx/tclMacOSXFCmd.c	/^enum {$/;"	g	file:
__anon5fc3cb980308	macosx/tclMacOSXFCmd.c	/^typedef struct {$/;"	s	file:
__anon670f38f30108	generic/tclOODecls.h	/^typedef struct {$/;"	s
__anon688852650108	win/tclWin32Dll.c	/^    struct {$/;"	s	function:TclWinCPUID	file:
__anon69aa703c0108	unix/tclSelectNotfy.c	/^typedef struct {$/;"	s	file:
__anon69aa703c0208	unix/tclSelectNotfy.c	/^typedef struct {$/;"	s	file:
__anon69aa703c0308	unix/tclSelectNotfy.c	/^typedef struct {$/;"	s	file:
__anon69aa703c0408	unix/tclSelectNotfy.c	/^typedef struct {$/;"	s	file:
__anon6bf0a2910103	compat/zlib/inflate.h	/^typedef enum {$/;"	g
__anon6e1456070108	generic/tclBasic.c	/^typedef struct {$/;"	s	file:
__anon6e1456070208	generic/tclBasic.c	/^typedef struct {$/;"	s	file:
__anon6e1456070308	generic/tclBasic.c	/^typedef struct {$/;"	s	file:
__anon6e1456070408	generic/tclBasic.c	/^typedef struct {$/;"	s	file:
__anon6e1456070508	generic/tclBasic.c	/^typedef struct {$/;"	s	file:
__anon6e145607060a	generic/tclBasic.c	/^    union {$/;"	u	struct:__anon6e1456070508	file:
__anon6e145607070a	generic/tclBasic.c	/^    union {$/;"	u	function:Tcl_CreateInterp	file:
__anon6e1456070808	generic/tclBasic.c	/^typedef struct {$/;"	s	file:
__anon78703c4e0108	compat/zlib/inftrees.h	/^typedef struct {$/;"	s
__anon78703c4e0203	compat/zlib/inftrees.h	/^typedef enum {$/;"	g
__anon7add25cb0108	compat/zlib/contrib/minizip/zip.c	/^{$/;"	s	file:
__anon7add25cb0208	compat/zlib/contrib/minizip/zip.c	/^{$/;"	s	file:
__anon7add25d00108	compat/zlib/contrib/minizip/zip.h	/^{$/;"	s
__anon7b9136110208	unix/tclXtNotify.c	/^typedef struct {$/;"	s	file:
__anon7c22d3770108	generic/tclHistory.c	/^typedef struct {$/;"	s	file:
__anon80eb2aca0108	compat/zlib/contrib/infback9/inftree9.h	/^typedef struct {$/;"	s
__anon80eb2aca0203	compat/zlib/contrib/infback9/inftree9.h	/^typedef enum {$/;"	g
__anon850510a70108	generic/tclEvent.c	/^typedef struct {$/;"	s	file:
__anon850510a70208	generic/tclEvent.c	/^typedef struct {$/;"	s	file:
__anon850510a70308	generic/tclEvent.c	/^typedef struct {$/;"	s	file:
__anon850510a70408	generic/tclEvent.c	/^static const struct {$/;"	s	file:
__anon882f36730108	generic/tclCompExpr.c	/^typedef struct {$/;"	s	file:
__anon882f3673020a	generic/tclCompExpr.c	/^    union {$/;"	u	struct:__anon882f36730108	file:
__anon88dcedc20108	generic/tclTestProcBodyObj.c	/^typedef struct {$/;"	s	file:
__anon8c3fe00a0108	generic/tclBinary.c	/^typedef struct {$/;"	s	file:
__anon8c3fe00a0203	generic/tclBinary.c	/^    enum {OPT_STRICT };$/;"	g	function:BinaryDecodeHex	file:
__anon8c3fe00a0303	generic/tclBinary.c	/^    enum { OPT_MAXLEN, OPT_WRAPCHAR };$/;"	g	function:BinaryEncode64	file:
__anon8c3fe00a0403	generic/tclBinary.c	/^    enum { OPT_MAXLEN, OPT_WRAPCHAR };$/;"	g	function:BinaryEncodeUu	file:
__anon8c3fe00a0503	generic/tclBinary.c	/^    enum { OPT_STRICT };$/;"	g	function:BinaryDecodeUu	file:
__anon8c3fe00a0603	generic/tclBinary.c	/^    enum { OPT_STRICT };$/;"	g	function:BinaryDecode64	file:
__anon8f2dd5280103	compat/zlib/contrib/untgz/untgz.c	/^enum { TGZ_EXTRACT, TGZ_LIST, TGZ_INVALID };$/;"	g	file:
__anon910316cb0103	generic/tclUniData.c	/^enum {$/;"	g	file:
__anon913711770108	generic/tclInterp.c	/^typedef struct {$/;"	s	file:
__anon913711770208	generic/tclInterp.c	/^typedef struct {$/;"	s	file:
__anon913711770308	generic/tclInterp.c	/^typedef struct {$/;"	s	file:
__anon913711770408	generic/tclInterp.c	/^typedef struct {$/;"	s	file:
__anon913711770508	generic/tclInterp.c	/^typedef struct {$/;"	s	file:
__anon913711770608	generic/tclInterp.c	/^typedef struct {$/;"	s	file:
__anon91be715e0108	generic/tclCkalloc.c	/^typedef struct {$/;"	s	file:
__anon92d8dd290108	generic/tclIORChan.c	/^typedef struct {$/;"	s	file:
__anon92d8dd290208	generic/tclIORChan.c	/^typedef struct {$/;"	s	file:
__anon92d8dd290303	generic/tclIORChan.c	/^typedef enum {$/;"	g	file:
__anon92d8dd290403	generic/tclIORChan.c	/^typedef enum {$/;"	g	file:
__anon92d8dd290503	generic/tclIORChan.c	/^typedef enum {$/;"	g	file:
__anon92d8dd290608	generic/tclIORChan.c	/^typedef struct {$/;"	s	file:
__anon92d8dd290708	generic/tclIORChan.c	/^typedef struct {$/;"	s	file:
__anon92d8dd290808	generic/tclIORChan.c	/^typedef struct {$/;"	s	file:
__anon92d8dd290908	generic/tclIORChan.c	/^typedef struct {$/;"	s	file:
__anon937aefea0108	generic/tcl.h	/^    typedef struct {$/;"	s
__anon937aefea0208	generic/tcl.h	/^	struct {long tv_sec;} st_atim;$/;"	s	struct:__anon937aefea0108
__anon937aefea0308	generic/tcl.h	/^	struct {long tv_sec;} st_mtim;$/;"	s	struct:__anon937aefea0108
__anon937aefea0408	generic/tcl.h	/^	struct {long tv_sec;} st_ctim;$/;"	s	struct:__anon937aefea0108
__anon937aefea0508	generic/tcl.h	/^    struct {			\/*   - internal rep as two pointers. *\/$/;"	s	union:Tcl_ObjInternalRep
__anon937aefea0608	generic/tcl.h	/^    struct {			\/*   - internal rep as a pointer and a long, *\/$/;"	s	union:Tcl_ObjInternalRep
__anon937aefea0708	generic/tcl.h	/^typedef struct {$/;"	s
__anon937aefea080a	generic/tcl.h	/^    union {			\/* Key has one of these forms: *\/$/;"	u	struct:Tcl_HashEntry
__anon937aefea0908	generic/tcl.h	/^typedef struct {$/;"	s
__anon937aefea0a03	generic/tcl.h	/^typedef enum {$/;"	g
__anon937aefea0b08	generic/tcl.h	/^typedef struct {$/;"	s
__anon93c67ca50108	generic/tclStrToD.c	/^    struct {$/;"	s	union:Double	file:
__anon93c67ca5020a	generic/tclStrToD.c	/^    union {$/;"	u	function:MakeNaN	file:
__anon93c67ca5030a	generic/tclStrToD.c	/^    union {$/;"	u	function:TclInitDoubleConversion	file:
__anon999f4b180108	generic/tclExecute.c	/^typedef struct {$/;"	s	file:
__anon9d4ca4100108	compat/zlib/examples/gzappend.c	/^typedef struct {$/;"	s	file:
__anona23b32490108	libtommath/bn_s_mp_rand_jenkins.c	/^typedef struct {$/;"	s	file:
__anona412af430108	win/nmakehlp.c	/^typedef struct {$/;"	s	file:
__anona96b9a380108	unix/tclEpollNotfy.c	/^typedef struct {$/;"	s	file:
__anonb2501df00108	generic/tclEnsemble.c	/^typedef struct {$/;"	s	file:
__anonb87ae84e0108	unix/tclLoadAix.c	/^typedef struct {$/;"	s	file:
__anonb87ae84e0208	unix/tclLoadAix.c	/^typedef struct {$/;"	s	file:
__anonbb88a94e0108	tools/tsdPerf.c	/^typedef struct {$/;"	s	file:
__anonbfe475c30108	compat/zlib/contrib/minizip/iowin32.c	/^{$/;"	s	file:
__anonc2b952240108	win/tclWinSerial.c	/^typedef struct {$/;"	s	file:
__anonc2b952240208	win/tclWinSerial.c	/^typedef struct {$/;"	s	file:
__anonc87062e20108	generic/regex.h	/^typedef struct {$/;"	s
__anonc87062e20208	generic/regex.h	/^typedef struct {$/;"	s
__anonc87062e20308	generic/regex.h	/^typedef struct {$/;"	s
__anoncff33eb90108	unix/tclLoadDyld.c	/^typedef struct {$/;"	s	file:
__anond46bc7710108	generic/tclClock.c	/^    struct {$/;"	s	function:ConvertLocalToUTCUsingTable	file:
__anond46bc7710208	generic/tclClock.c	/^    typedef struct {$/;"	s	function:ClockSafeCatchCmd	file:
__anond5eb1cce010a	generic/tclCmdIL.c	/^    union {			\/* The value that we sorting by. *\/$/;"	u	struct:SortElement	file:
__anond5eb1cce020a	generic/tclCmdIL.c	/^    union {			\/* Object being sorted, or its index. *\/$/;"	u	struct:SortElement	file:
__anond5eb1cce0308	generic/tclCmdIL.c	/^typedef struct {$/;"	s	file:
__anond5eb1cce0403	generic/tclCmdIL.c	/^typedef enum {$/;"	g	file:
__anond5eb1cce0503	generic/tclCmdIL.c	/^typedef enum {$/;"	g	file:
__anond5ed89e00103	generic/tclCmdMZ.c	/^    enum {$/;"	g	function:TclSubstOptions	file:
__anond731f19e0103	compat/zlib/deflate.c	/^typedef enum {$/;"	g	file:
__anond731f1a3010a	compat/zlib/deflate.h	/^    union {$/;"	u	struct:ct_data_s
__anond731f1a3020a	compat/zlib/deflate.h	/^    union {$/;"	u	struct:ct_data_s
__anond76bba880108	generic/tclArithSeries.c	/^typedef struct {$/;"	s	file:
__anond76bba880208	generic/tclArithSeries.c	/^typedef struct {$/;"	s	file:
__anond76bba880308	generic/tclArithSeries.c	/^typedef struct {$/;"	s	file:
__anond8412d640108	generic/tclDictObj.c	/^typedef struct {$/;"	s	file:
__anondb7a8e8c0108	generic/tclEncoding.c	/^typedef struct {$/;"	s	file:
__anondb7a8e8c0208	generic/tclEncoding.c	/^typedef struct {$/;"	s	file:
__anondb7a8e8c0308	generic/tclEncoding.c	/^typedef struct {$/;"	s	file:
__anondb7a8e8c0408	generic/tclEncoding.c	/^typedef struct {$/;"	s	file:
__anondb7a8e8c050a	generic/tclEncoding.c	/^    union {$/;"	u	function:TclInitEncodingSubsystem	file:
__anondf8925f30108	generic/tclClockClassic.c	/^typedef struct {$/;"	s	file:
__anondf8925f30208	generic/tclClockClassic.c	/^typedef struct {$/;"	s	file:
__anone1e2a72a0108	unix/tclUnixChan.c	/^typedef struct {$/;"	s	file:
__anone1e2a72a0208	unix/tclUnixChan.c	/^typedef struct {$/;"	s	file:
__anone1e2a72a0308	unix/tclUnixChan.c	/^typedef struct {$/;"	s	file:
__anone1e2a72a0408	unix/tclUnixChan.c	/^static const struct {int baud; speed_t speed;} speeds[] = {$/;"	s	file:
__anone579f3dd0108	generic/tclThread.c	/^typedef struct {$/;"	s	file:
__anone59fb5e80108	generic/tclThreadAlloc.c	/^    struct {$/;"	s	union:Block	file:
__anone59fb5e8020a	generic/tclThreadAlloc.c	/^	union {$/;"	u	struct:Block::__anone59fb5e80108	file:
__anone59fb5e80308	generic/tclThreadAlloc.c	/^	    struct {$/;"	s	union:Block::__anone59fb5e80108::__anone59fb5e8020a	file:
__anone59fb5e80408	generic/tclThreadAlloc.c	/^typedef struct {$/;"	s	file:
__anone59fb5e80508	generic/tclThreadAlloc.c	/^static struct {$/;"	s	file:
__anone64b006a0103	unix/tclUnixFCmd.c	/^enum {$/;"	g	file:
__anone79d5a530103	generic/tclCompile.h	/^typedef enum {$/;"	g
__anone79d5a530208	generic/tclCompile.h	/^typedef struct {$/;"	s
__anone79d5a530308	generic/tclCompile.h	/^typedef struct {$/;"	s
__anone79d5a530408	generic/tclCompile.h	/^typedef struct {$/;"	s
__anone79d5a530508	generic/tclCompile.h	/^typedef struct {$/;"	s
__anone79d5a530603	generic/tclCompile.h	/^typedef enum {$/;"	g
__anone79d5a530708	generic/tclCompile.h	/^typedef struct {$/;"	s
__anone79d5a530808	generic/tclCompile.h	/^typedef struct {$/;"	s
__anone79d5a53090a	generic/tclCompile.h	/^    union {$/;"	u	struct:__anone79d5a530808
__anone89463850103	generic/tclAssembly.c	/^typedef enum {$/;"	g	file:
__anone8f8f7230108	generic/tclDate.c	/^typedef struct {$/;"	s	file:
__anone8f8f7230203	generic/tclDate.c	/^enum { YYENOMEM = -2 };$/;"	g	file:
__anone8f8f7280108	generic/tclDate.h	/^    struct {$/;"	s	struct:ClockClientData
__anone8f8f7280208	generic/tclDate.h	/^    struct {$/;"	s	struct:ClockScanToken
__anone8f8f7280308	generic/tclDate.h	/^    struct {$/;"	s	struct:ClockFormatToken
__anone9498b710108	generic/tclPreserve.c	/^typedef struct {$/;"	s	file:
__anone9498b710208	generic/tclPreserve.c	/^typedef struct {$/;"	s	file:
__anone96dc6f10108	win/tclWinDde.c	/^typedef struct {$/;"	s	file:
__anone96dc6f10208	win/tclWinDde.c	/^typedef struct {$/;"	s	file:
__anone9e75be60108	generic/tclTimer.c	/^typedef struct {$/;"	s	file:
__anonea7b679d0108	compat/zlib/examples/enough.c	/^typedef struct {$/;"	s	file:
__anonea7b679d0208	compat/zlib/examples/enough.c	/^struct {$/;"	s	file:
__anoneca7f3ad0108	generic/tclPathObj.c	/^typedef struct {$/;"	s	file:
__anonee13ff67010a	libtommath/bn_mp_set_double.c	/^   union {$/;"	u	function:mp_set_double	file:
__anonf052aa840108	unix/tclUnixInit.c	/^typedef struct {$/;"	s	file:
__anonf052aa84020a	unix/tclUnixInit.c	/^    union {$/;"	u	struct:__anonf052aa840108	file:
__anonf052aa840308	unix/tclUnixInit.c	/^	struct {$/;"	s	union:__anonf052aa840108::__anonf052aa84020a	file:
__anonf052aa840408	unix/tclUnixInit.c	/^typedef struct {$/;"	s	file:
__anonf052aa840508	unix/tclUnixInit.c	/^typedef struct {$/;"	s	file:
__anonf117b5370108	win/tclWinConsole.c	/^typedef struct {$/;"	s	file:
__anonf117b5370208	win/tclWinConsole.c	/^typedef struct {$/;"	s	file:
__anonf28101a00103	compat/zlib/contrib/infback9/inflate9.h	/^typedef enum {$/;"	g
__anonf29c1f6d0108	generic/tclIOSock.c	/^typedef struct {$/;"	s	file:
__anonf2feabe80108	generic/tclStringRep.h	/^typedef struct {$/;"	s
__anonf52f7cd20108	generic/regc_locale.c	/^typedef struct {$/;"	s	file:
__anonf7a439bb0108	generic/tclIOUtil.c	/^typedef struct {$/;"	s	file:
__anonfc2fcf730108	generic/tclLink.c	/^typedef struct {$/;"	s	file:
__anonfc2fcf73020a	generic/tclLink.c	/^    union {$/;"	u	struct:__anonfc2fcf730108	file:
__anonfdf182ea0108	generic/tclMain.c	/^typedef struct {$/;"	s	file:
__anonfdf182ea0203	generic/tclMain.c	/^typedef enum {$/;"	g	file:
__anonfdf182ea0308	generic/tclMain.c	/^typedef struct {$/;"	s	file:
__anonfe0b53740108	generic/tclTrace.c	/^typedef struct {$/;"	s	file:
__anonfe0b53740208	generic/tclTrace.c	/^typedef struct {$/;"	s	file:
__anonfe0b53740308	generic/tclTrace.c	/^typedef struct {$/;"	s	file:
__anonfe0b53740408	generic/tclTrace.c	/^typedef struct {$/;"	s	file:
__anonfe0b53740508	generic/tclTrace.c	/^typedef struct {$/;"	s	file:
__dlfcn_h__	compat/dlfcn.h	/^#define __dlfcn_h__$/;"	d
__doCommands__	tests/remote.tcl	/^proc __doCommands__ {l s} {$/;"	p
__has_builtin	generic/tclBasic.c	/^#define __has_builtin(/;"	d	file:
__readAndExecute__	tests/remote.tcl	/^proc __readAndExecute__ {s} {$/;"	p
__ss_pad2	compat/fake-rfc2553.h	/^	char		__ss_pad2[_SS_PADSIZE];$/;"	m	struct:sockaddr_storage	typeref:typename:char[]
_adjust_maxcount	tests-perf/test-performance.tcl	/^proc _adjust_maxcount {reptime maxcount} {$/;"	p	namespace:::::tclTestPerf
_buffer	compat/zlib/contrib/dotzlib/DotZLib/CircularBuffer.cs	/^        private byte[] _buffer;$/;"	f	class:DotZLib.CircularBuffer	file:
_capacity	compat/zlib/contrib/dotzlib/DotZLib/CircularBuffer.cs	/^        private int _capacity;$/;"	f	class:DotZLib.CircularBuffer	file:
_checksum	compat/zlib/contrib/dotzlib/DotZLib/CodecBase.cs	/^        private uint _checksum = 0;$/;"	f	class:DotZLib.CodecBase	file:
_current	compat/zlib/contrib/dotzlib/DotZLib/ChecksumImpl.cs	/^        protected uint _current;$/;"	f	class:DotZLib.ChecksumGeneratorBase
_d	compat/zlib/contrib/minizip/tinydir.h	/^	_TINYDIR_DIR *_d;$/;"	m	struct:tinydir_dir	typeref:typename:_TINYDIR_DIR *
_dist_code	compat/zlib/trees.c	/^uch _dist_code[DIST_CODE_LEN];$/;"	v	typeref:typename:uch[]
_dist_code	compat/zlib/trees.h	/^const uch ZLIB_INTERNAL _dist_code[DIST_CODE_LEN] = {$/;"	v	typeref:typename:const uch ZLIB_INTERNAL[]
_dist_code	compat/zlib/zconf.h	/^#  define _dist_code            z__dist_code$/;"	d
_dist_code	compat/zlib/zconf.h.in	/^#  define _dist_code            z__dist_code$/;"	d	file:
_e	compat/zlib/contrib/minizip/tinydir.h	/^	struct _tinydir_dirent *_e;$/;"	m	struct:tinydir_dir	typeref:struct:_tinydir_dirent *
_ep	compat/zlib/contrib/minizip/tinydir.h	/^	struct _tinydir_dirent *_ep;$/;"	m	struct:tinydir_dir	typeref:struct:_tinydir_dirent *
_f	compat/zlib/contrib/minizip/tinydir.h	/^	WIN32_FIND_DATA _f;$/;"	m	struct:tinydir_dir	typeref:typename:WIN32_FIND_DATA
_files	compat/zlib/contrib/minizip/tinydir.h	/^	tinydir_file *_files;$/;"	m	struct:tinydir_dir	typeref:typename:tinydir_file *
_flags	compat/zlib/contrib/dotzlib/DotZLib/DotZLib.cs	/^        private uint _flags;$/;"	f	class:DotZLib.Info	file:
_free	compat/zlib/contrib/delphi/ZLib.pas	/^procedure _free(Block: Pointer); cdecl;$/;"	p
_free	compat/zlib/contrib/pascal/zlibpas.pas	/^procedure _free(Block: Pointer); cdecl;$/;"	p
_get_new_file_path_obj	tests-perf/file.perf.tcl	/^proc _get_new_file_path_obj [list [list p [info script]]] {$/;"	p	namespace:::::tclTestPerf-File
_get_test_chan	tests-perf/chan.perf.tcl	/^proc _get_test_chan {{bufSize 4096}} {$/;"	p	namespace:::::tclTestPerf-Chan
_gzFile	compat/zlib/contrib/dotzlib/DotZLib/GZipStream.cs	/^        private IntPtr _gzFile;$/;"	f	class:DotZLib.GZipStream	file:
_h	compat/zlib/contrib/minizip/tinydir.h	/^	HANDLE _h;$/;"	m	struct:tinydir_dir	typeref:typename:HANDLE
_hInput	compat/zlib/contrib/dotzlib/DotZLib/CodecBase.cs	/^        private GCHandle _hInput;$/;"	f	class:DotZLib.CodecBase	file:
_hOutput	compat/zlib/contrib/dotzlib/DotZLib/CodecBase.cs	/^        private GCHandle _hOutput;$/;"	f	class:DotZLib.CodecBase	file:
_halloc	compat/zlib/zutil.c	/^#  define _halloc /;"	d	file:
_hasRegistry	library/clock.tcl	/^proc ::tcl::clock::_hasRegistry {} {$/;"	p	namespace:::tcl::clock
_head	compat/zlib/contrib/dotzlib/DotZLib/CircularBuffer.cs	/^        private int _head;$/;"	f	class:DotZLib.CircularBuffer	file:
_hfree	compat/zlib/zutil.c	/^#  define _hfree /;"	d	file:
_inBuffer	compat/zlib/contrib/dotzlib/DotZLib/CodecBase.cs	/^        private byte[] _inBuffer = new byte[kBufferSize];$/;"	f	class:DotZLib.CodecBase	file:
_isDisposed	compat/zlib/contrib/dotzlib/DotZLib/CodecBase.cs	/^        protected bool _isDisposed = false;$/;"	f	class:DotZLib.CodecBase
_isDisposed	compat/zlib/contrib/dotzlib/DotZLib/GZipStream.cs	/^        private bool _isDisposed = false;$/;"	f	class:DotZLib.GZipStream	file:
_isWriting	compat/zlib/contrib/dotzlib/DotZLib/GZipStream.cs	/^        private bool _isWriting;$/;"	f	class:DotZLib.GZipStream	file:
_isdirectory	library/install.tcl	/^proc ::practcl::_isdirectory name {$/;"	p	namespace:::practcl
_length_code	compat/zlib/trees.c	/^uch _length_code[MAX_MATCH-MIN_MATCH+1];$/;"	v	typeref:typename:uch[]
_length_code	compat/zlib/trees.h	/^const uch ZLIB_INTERNAL _length_code[MAX_MATCH-MIN_MATCH+1]= {$/;"	v	typeref:typename:const uch ZLIB_INTERNAL[]
_length_code	compat/zlib/zconf.h	/^#  define _length_code          z__length_code$/;"	d
_length_code	compat/zlib/zconf.h.in	/^#  define _length_code          z__length_code$/;"	d	file:
_malloc	compat/zlib/contrib/delphi/ZLib.pas	/^function _malloc(Size: Integer): Pointer; cdecl;$/;"	f	typeref:typename:Pointer
_malloc	compat/zlib/contrib/pascal/zlibpas.pas	/^function _malloc(Size: Integer): Pointer; cdecl;$/;"	f	typeref:typename:Pointer
_memcpy	compat/zlib/contrib/delphi/ZLib.pas	/^procedure _memcpy(dest, source: Pointer; count: Integer); cdecl;$/;"	p
_memcpy	compat/zlib/contrib/pascal/zlibpas.pas	/^procedure _memcpy(dest, source: Pointer; count: Integer); cdecl;$/;"	p
_memset	compat/zlib/contrib/delphi/ZLib.pas	/^procedure _memset(P: Pointer; B: Byte; count: Integer); cdecl;$/;"	p
_memset	compat/zlib/contrib/pascal/zlibpas.pas	/^procedure _memset(P: Pointer; B: Byte; count: Integer); cdecl;$/;"	p
_outBuffer	compat/zlib/contrib/dotzlib/DotZLib/CodecBase.cs	/^        private byte[] _outBuffer = new byte[kBufferSize];$/;"	f	class:DotZLib.CodecBase	file:
_pkgindex_directory	library/install.tcl	/^proc ::practcl::_pkgindex_directory {path} {$/;"	p	namespace:::practcl
_pkgindex_path_subdir	library/install.tcl	/^proc ::practcl::_pkgindex_path_subdir {path} {$/;"	p	namespace:::practcl
_s	compat/zlib/contrib/minizip/tinydir.h	/^	struct _stat _s;$/;"	m	struct:tinydir_file	typeref:struct:_stat
_s	compat/zlib/contrib/minizip/tinydir.h	/^	struct stat _s;$/;"	m	struct:tinydir_file	typeref:struct:stat
_size	compat/zlib/contrib/dotzlib/DotZLib/CircularBuffer.cs	/^        private int _size;$/;"	f	class:DotZLib.CircularBuffer	file:
_tail	compat/zlib/contrib/dotzlib/DotZLib/CircularBuffer.cs	/^        private int _tail;$/;"	f	class:DotZLib.CircularBuffer	file:
_tcscmp	generic/tclMain.c	/^#   define _tcscmp /;"	d	file:
_test_get_commands	tests-perf/test-performance.tcl	/^proc _test_get_commands {lst} {$/;"	p	namespace:::::tclTestPerf
_test_iter	tests-perf/test-performance.tcl	/^proc _test_iter {args} {$/;"	p	namespace:::::tclTestPerf
_test_out_total	tests-perf/test-performance.tcl	/^proc _test_out_total {} {$/;"	p	namespace:::::tclTestPerf
_test_run	tests-perf/test-performance.tcl	/^proc _test_run {args} {$/;"	p	namespace:::::tclTestPerf
_test_start	tests-perf/test-performance.tcl	/^proc _test_start {reptime} {$/;"	p	namespace:::::tclTestPerf
_tinydir_char_t	compat/zlib/contrib/minizip/tinydir.h	/^# define _tinydir_char_t /;"	d
_tinydir_closedir	compat/zlib/contrib/minizip/tinydir.h	/^#define _tinydir_closedir /;"	d
_tinydir_dirent	compat/zlib/contrib/minizip/tinydir.h	/^#define _tinydir_dirent /;"	d
_tinydir_dirent_buf_size	compat/zlib/contrib/minizip/tinydir.h	/^size_t _tinydir_dirent_buf_size(_TINYDIR_DIR *dirp)$/;"	f	typeref:typename:_TINYDIR_FUNC size_t
_tinydir_file_cmp	compat/zlib/contrib/minizip/tinydir.h	/^int _tinydir_file_cmp(const void *a, const void *b)$/;"	f	typeref:typename:_TINYDIR_FUNC int
_tinydir_get_ext	compat/zlib/contrib/minizip/tinydir.h	/^void _tinydir_get_ext(tinydir_file *file)$/;"	f	typeref:typename:_TINYDIR_FUNC void
_tinydir_opendir	compat/zlib/contrib/minizip/tinydir.h	/^#define _tinydir_opendir /;"	d
_tinydir_readdir	compat/zlib/contrib/minizip/tinydir.h	/^#define _tinydir_readdir /;"	d
_tinydir_strcat	compat/zlib/contrib/minizip/tinydir.h	/^# define _tinydir_strcat /;"	d
_tinydir_strcmp	compat/zlib/contrib/minizip/tinydir.h	/^# define _tinydir_strcmp /;"	d
_tinydir_strcpy	compat/zlib/contrib/minizip/tinydir.h	/^# define _tinydir_strcpy /;"	d
_tinydir_strlen	compat/zlib/contrib/minizip/tinydir.h	/^# define _tinydir_strlen /;"	d
_tinydir_strncmp	compat/zlib/contrib/minizip/tinydir.h	/^# define _tinydir_strncmp /;"	d
_tinydir_strrchr	compat/zlib/contrib/minizip/tinydir.h	/^# define _tinydir_strrchr /;"	d
_tmain	win/cat.c	/^_tmain(void)$/;"	f	typeref:typename:int
_tr_align	compat/zlib/trees.c	/^void ZLIB_INTERNAL _tr_align(deflate_state *s) {$/;"	f	typeref:typename:void ZLIB_INTERNAL
_tr_align	compat/zlib/zconf.h	/^#  define _tr_align             z__tr_align$/;"	d
_tr_align	compat/zlib/zconf.h.in	/^#  define _tr_align             z__tr_align$/;"	d	file:
_tr_flush_bits	compat/zlib/trees.c	/^void ZLIB_INTERNAL _tr_flush_bits(deflate_state *s) {$/;"	f	typeref:typename:void ZLIB_INTERNAL
_tr_flush_bits	compat/zlib/zconf.h	/^#  define _tr_flush_bits        z__tr_flush_bits$/;"	d
_tr_flush_bits	compat/zlib/zconf.h.in	/^#  define _tr_flush_bits        z__tr_flush_bits$/;"	d	file:
_tr_flush_block	compat/zlib/trees.c	/^void ZLIB_INTERNAL _tr_flush_block(deflate_state *s, charf *buf,$/;"	f	typeref:typename:void ZLIB_INTERNAL
_tr_flush_block	compat/zlib/zconf.h	/^#  define _tr_flush_block       z__tr_flush_block$/;"	d
_tr_flush_block	compat/zlib/zconf.h.in	/^#  define _tr_flush_block       z__tr_flush_block$/;"	d	file:
_tr_init	compat/zlib/trees.c	/^void ZLIB_INTERNAL _tr_init(deflate_state *s) {$/;"	f	typeref:typename:void ZLIB_INTERNAL
_tr_init	compat/zlib/zconf.h	/^#  define _tr_init              z__tr_init$/;"	d
_tr_init	compat/zlib/zconf.h.in	/^#  define _tr_init              z__tr_init$/;"	d	file:
_tr_stored_block	compat/zlib/trees.c	/^void ZLIB_INTERNAL _tr_stored_block(deflate_state *s, charf *buf,$/;"	f	typeref:typename:void ZLIB_INTERNAL
_tr_stored_block	compat/zlib/zconf.h	/^#  define _tr_stored_block      z__tr_stored_block$/;"	d
_tr_stored_block	compat/zlib/zconf.h.in	/^#  define _tr_stored_block      z__tr_stored_block$/;"	d	file:
_tr_tally	compat/zlib/trees.c	/^int ZLIB_INTERNAL _tr_tally(deflate_state *s, unsigned dist, unsigned lc) {$/;"	f	typeref:typename:int ZLIB_INTERNAL
_tr_tally	compat/zlib/zconf.h	/^#  define _tr_tally             z__tr_tally$/;"	d
_tr_tally	compat/zlib/zconf.h.in	/^#  define _tr_tally             z__tr_tally$/;"	d	file:
_tr_tally_dist	compat/zlib/deflate.h	/^# define _tr_tally_dist(/;"	d
_tr_tally_lit	compat/zlib/deflate.h	/^# define _tr_tally_lit(/;"	d
_unz64_H	compat/zlib/contrib/minizip/unzip.h	/^#define _unz64_H$/;"	d
_zip12_H	compat/zlib/contrib/minizip/zip.h	/^#define _zip12_H$/;"	d
_zip_tools_H	compat/zlib/contrib/minizip/mztools.h	/^#define _zip_tools_H$/;"	d
_ztream	compat/zlib/contrib/dotzlib/DotZLib/CodecBase.cs	/^        internal ZStream _ztream = new ZStream();$/;"	f	class:DotZLib.CodecBase	file:
a	generic/regguts.h	/^    struct arc a[ABSIZE];$/;"	m	struct:arcbatch	typeref:struct:arc[]
a	libtommath/bn_s_mp_rand_jenkins.c	/^   uint64_t a;$/;"	m	struct:__anona23b32490108	typeref:typename:uint64_t	file:
aCopyList	generic/tclCmdAH.c	/^    Tcl_Obj **aCopyList;	\/* Copies of value list arguments. *\/$/;"	m	struct:ForeachState	typeref:typename:Tcl_Obj **	file:
abort	tools/ucm2tests.tcl	/^proc ucm::abort {msg} {$/;"	p	namespace:ucm
abs_builddir	unix/Makefile.in	/^abs_builddir = @abs_builddir@$/;"	m
acceptEventCount	win/tclWinSock.c	/^    volatile int acceptEventCount;$/;"	m	struct:TcpState	typeref:typename:volatile int	file:
acceptProc	unix/tclUnixSock.c	/^    Tcl_TcpAcceptProc *acceptProc; \/* Proc to call on accept. *\/$/;"	m	struct:TcpState	typeref:typename:Tcl_TcpAcceptProc *	file:
acceptProc	win/tclWinSock.c	/^    Tcl_TcpAcceptProc *acceptProc;$/;"	m	struct:TcpState	typeref:typename:Tcl_TcpAcceptProc *	file:
acceptProcData	unix/tclUnixSock.c	/^    void *acceptProcData;  \/* The data for the accept proc. *\/$/;"	m	struct:TcpState	typeref:typename:void *	file:
acceptProcData	win/tclWinSock.c	/^    void *acceptProcData;	\/* The data for the accept proc. *\/$/;"	m	struct:TcpState	typeref:typename:void *	file:
access	compat/zlib/contrib/untgz/untgz.c	/^#    define access(path,mode)   _access(/;"	d	file:
accessProc	generic/tcl.h	/^    Tcl_FSAccessProc *accessProc;$/;"	m	struct:Tcl_Filesystem	typeref:typename:Tcl_FSAccessProc *
accumulatorObj	generic/tclDictObj.c	/^    Tcl_Obj *accumulatorObj;	\/* The dictionary used to accumulate the$/;"	m	struct:__anond8412d640108	typeref:typename:Tcl_Obj *	file:
action	macosx/GNUmakefile	/^clean-%:		action := clean-$/;"	m
action	macosx/GNUmakefile	/^distclean-%:		action := distclean-$/;"	m
action	macosx/GNUmakefile	/^install-%:		action := install-$/;"	m
action	macosx/GNUmakefile	/^test-%:			action := test-$/;"	m
action_needed	compat/zlib/os400/make.sh	/^action_needed()$/;"	f
activationCount	generic/tclInt.h	/^    Tcl_Size activationCount;	\/* Number of "activations" or active call$/;"	m	struct:Namespace	typeref:typename:Tcl_Size
active	generic/tclInt.h	/^	int active;		\/* Flag values defining which limits have been$/;"	m	struct:Interp::__anon1eb6b3550808	typeref:typename:int
activeCmdTracePtr	generic/tclInt.h	/^    ActiveCommandTrace *activeCmdTracePtr;$/;"	m	struct:Interp	typeref:typename:ActiveCommandTrace *
activeInterpTracePtr	generic/tclInt.h	/^    ActiveInterpTrace *activeInterpTracePtr;$/;"	m	struct:Interp	typeref:typename:ActiveInterpTrace *
activeVarTracePtr	generic/tclInt.h	/^    ActiveVarTrace *activeVarTracePtr;$/;"	m	struct:Interp	typeref:typename:ActiveVarTrace *
adapt	library/cookiejar/idna.tcl	/^    proc adapt {delta first numchars} {$/;"	p	namespace:::::tcl::idna
add	library/clockclassic.tcl	/^proc add { clockval args } {$/;"	p
add	library/tm.tcl	/^proc ::tcl::tm::add {args} {$/;"	p	namespace:::tcl::tm
addFileToZip	compat/zlib/contrib/minizip/minizip.c	/^void addFileToZip(zipFile zf, const char *filenameinzip, const char *password, int opt_exclude_p/;"	f	typeref:typename:void
addObj	generic/tclHistory.c	/^    Tcl_Obj *addObj;		\/* == "add" *\/$/;"	m	struct:__anon7c22d3770108	typeref:typename:Tcl_Obj *	file:
addOptions	generic/tclZlib.c	/^    enum addOptions {$/;"	g	function:ZlibStreamAddCmd	file:
addPage	tools/uniParse.tcl	/^proc uni::addPage {info} {$/;"	p	namespace:uni
addPathToZip	compat/zlib/contrib/minizip/minizip.c	/^void addPathToZip(zipFile zf, const char *filenameinzip, const char *password, int opt_exclude_p/;"	f	typeref:typename:void
addPlatformGuard	tools/genStubs.tcl	/^proc genStubs::addPlatformGuard {plat iftxt {eltxt {}} {withCygwin 0}} {$/;"	p	namespace:genStubs
add_data_in_datablock	compat/zlib/contrib/minizip/zip.c	/^local int add_data_in_datablock(linkedlist_data* ll, const void* buf, uLong len) {$/;"	f	typeref:typename:local int
add_point	compat/zlib/examples/zran.c	/^static struct deflate_index *add_point(struct deflate_index *index, int bits,$/;"	f	typeref:struct:deflate_index *	file:
add_position_when_writing_offset	compat/zlib/contrib/minizip/zip.c	/^    ZPOS64_T add_position_when_writing_offset;$/;"	m	struct:__anon7add25cb0208	typeref:typename:ZPOS64_T	file:
addchr	generic/regc_cvec.c	/^addchr($/;"	f	typeref:typename:void	file:
addr	generic/tclLink.c	/^    void *addr;			\/* Location of C variable. *\/$/;"	m	struct:__anonfc2fcf730108	typeref:typename:void *	file:
addr	unix/tclLoadAix.c	/^    void *addr;			\/* Its relocated virtual address. *\/$/;"	m	struct:__anonb87ae84e0108	typeref:typename:void *	file:
addr	unix/tclUnixSock.c	/^    struct addrinfo *addr;	\/* Iterator over addrlist. *\/$/;"	m	struct:TcpState	typeref:struct:addrinfo *	file:
addr	win/tclWinSock.c	/^    struct addrinfo *addr;	\/* Iterator over addrlist. *\/$/;"	m	struct:TcpState	typeref:struct:addrinfo *	file:
addrange	generic/regc_cvec.c	/^addrange($/;"	f	typeref:typename:void	file:
address	unix/tclUnixSock.c	/^} address;$/;"	t	typeref:union:__anon07b4e8c0010a	file:
address	win/tclWinSock.c	/^} address;$/;"	t	typeref:union:__anon3aeaf854010a	file:
addrinfo	compat/fake-rfc2553.h	/^struct addrinfo {$/;"	s
addrlist	unix/tclUnixSock.c	/^    struct addrinfo *addrlist;	\/* Addresses to connect to. *\/$/;"	m	struct:TcpState	typeref:struct:addrinfo *	file:
addrlist	win/tclWinSock.c	/^    struct addrinfo *addrlist;	\/* Addresses to connect to. *\/$/;"	m	struct:TcpState	typeref:struct:addrinfo *	file:
adler	compat/zlib/contrib/dotzlib/DotZLib/DotZLib.cs	/^        public uint adler;$/;"	f	struct:DotZLib.ZStream
adler	compat/zlib/zlib.h	/^    uLong   adler;      \/* Adler-32 or CRC-32 value of the uncompressed data *\/$/;"	m	struct:z_stream_s	typeref:typename:uLong
adler1	compat/zlib/contrib/dotzlib/DotZLib/UnitTests.cs	/^        private uint adler1;$/;"	f	class:DotZLibTests.DeflateInflateTests	file:
adler2	compat/zlib/contrib/dotzlib/DotZLib/UnitTests.cs	/^        private uint adler2;$/;"	f	class:DotZLibTests.DeflateInflateTests	file:
adler32	compat/zlib/adler32.c	/^uLong ZEXPORT adler32(uLong adler, const Bytef *buf, uInt len) {$/;"	f	typeref:typename:uLong ZEXPORT
adler32	compat/zlib/contrib/ada/zlib-thin.ads	/^   function adler32$/;"	R
adler32	compat/zlib/contrib/delphi/ZLib.pas	/^procedure adler32; external;$/;"	p
adler32	compat/zlib/contrib/dotzlib/DotZLib/ChecksumImpl.cs	/^        private static extern uint adler32(uint adler, int data, uint length);$/;"	m	class:DotZLib.AdlerChecksum	file:
adler32	compat/zlib/contrib/pascal/zlibpas.pas	/^function adler32(adler: LongInt; const buf: PChar; len: Integer): LongInt;$/;"	f	typeref:typename:LongInt
adler32	compat/zlib/contrib/pascal/zlibpas.pas	/^function adler32; external;$/;"	f
adler32	compat/zlib/zconf.h	/^#  define adler32               z_adler32$/;"	d
adler32	compat/zlib/zconf.h.in	/^#  define adler32               z_adler32$/;"	d	file:
adler32.$(HOST_OBJEXT)	unix/Makefile.in	/^adler32.$(HOST_OBJEXT):$/;"	t
adler32.$(HOST_OBJEXT)	win/Makefile.in	/^adler32.$(HOST_OBJEXT):$/;"	t
adler32.lo	compat/zlib/Makefile.in	/^adler32.lo zutil.lo: $(SRCDIR)zutil.h $(SRCDIR)zlib.h zconf.h$/;"	t
adler32.lo	compat/zlib/Makefile.in	/^adler32.lo: $(SRCDIR)adler32.c$/;"	t
adler32.o	compat/zlib/Makefile.in	/^adler32.o zutil.o: $(SRCDIR)zutil.h $(SRCDIR)zlib.h zconf.h$/;"	t
adler32.o	compat/zlib/Makefile.in	/^adler32.o: $(SRCDIR)adler32.c$/;"	t
adler32.obj	compat/zlib/contrib/delphi/zlibd32.mak	/^adler32.obj: adler32.c zlib.h zconf.h$/;"	t
adler32.obj	compat/zlib/contrib/pascal/zlibd32.mak	/^adler32.obj: adler32.c zlib.h zconf.h$/;"	t
adler32_combine	compat/zlib/adler32.c	/^uLong ZEXPORT adler32_combine(uLong adler1, uLong adler2, z_off_t len2) {$/;"	f	typeref:typename:uLong ZEXPORT
adler32_combine	compat/zlib/contrib/pascal/zlibpas.pas	/^function adler32_combine(adler1, adler2, len2: LongInt): LongInt;$/;"	f	typeref:typename:LongInt
adler32_combine	compat/zlib/contrib/pascal/zlibpas.pas	/^function adler32_combine; external;$/;"	f
adler32_combine	compat/zlib/zconf.h	/^#  define adler32_combine       z_adler32_combine$/;"	d
adler32_combine	compat/zlib/zconf.h.in	/^#  define adler32_combine       z_adler32_combine$/;"	d	file:
adler32_combine	compat/zlib/zlib.h	/^#    define adler32_combine adler32_combine6/;"	d
adler32_combine64	compat/zlib/adler32.c	/^uLong ZEXPORT adler32_combine64(uLong adler1, uLong adler2, z_off64_t len2) {$/;"	f	typeref:typename:uLong ZEXPORT
adler32_combine64	compat/zlib/zconf.h	/^#  define adler32_combine64     z_adler32_combine64$/;"	d
adler32_combine64	compat/zlib/zconf.h.in	/^#  define adler32_combine64     z_adler32_combine64$/;"	d	file:
adler32_combine_	compat/zlib/adler32.c	/^local uLong adler32_combine_(uLong adler1, uLong adler2, z_off64_t len2) {$/;"	f	typeref:typename:local uLong
adler32_z	compat/zlib/adler32.c	/^uLong ZEXPORT adler32_z(uLong adler, const Bytef *buf, z_size_t len) {$/;"	f	typeref:typename:uLong ZEXPORT
adler32_z	compat/zlib/zconf.h	/^#  define adler32_z             z_adler32_z$/;"	d
adler32_z	compat/zlib/zconf.h.in	/^#  define adler32_z             z_adler32_z$/;"	d	file:
afterId	generic/tclTimer.c	/^    int afterId;		\/* For unique identifiers of after events. *\/$/;"	m	struct:__anone9e75be60108	typeref:typename:int	file:
afterSubCmdsEnum	generic/tclTimer.c	/^    enum afterSubCmdsEnum {AFTER_CANCEL, AFTER_IDLE, AFTER_INFO};$/;"	g	function:Tcl_AfterObjCmd	file:
ai_addr	compat/fake-rfc2553.h	/^	struct sockaddr *ai_addr;	\/* binary address *\/$/;"	m	struct:addrinfo	typeref:struct:sockaddr *
ai_addrlen	compat/fake-rfc2553.h	/^	size_t	ai_addrlen;	\/* length of ai_addr *\/$/;"	m	struct:addrinfo	typeref:typename:size_t
ai_canonname	compat/fake-rfc2553.h	/^	char	*ai_canonname;	\/* canonical name for hostname *\/$/;"	m	struct:addrinfo	typeref:typename:char *
ai_family	compat/fake-rfc2553.h	/^	int	ai_family;	\/* PF_xxx *\/$/;"	m	struct:addrinfo	typeref:typename:int
ai_flags	compat/fake-rfc2553.h	/^	int	ai_flags;	\/* AI_PASSIVE, AI_CANONNAME *\/$/;"	m	struct:addrinfo	typeref:typename:int
ai_next	compat/fake-rfc2553.h	/^	struct addrinfo *ai_next;	\/* next structure in linked list *\/$/;"	m	struct:addrinfo	typeref:struct:addrinfo *
ai_protocol	compat/fake-rfc2553.h	/^	int	ai_protocol;	\/* 0 or IPPROTO_xxx for IPv4 and IPv6 *\/$/;"	m	struct:addrinfo	typeref:typename:int
ai_socktype	compat/fake-rfc2553.h	/^	int	ai_socktype;	\/* SOCK_xxx *\/$/;"	m	struct:addrinfo	typeref:typename:int
alertNotifierProc	generic/tcl.h	/^    Tcl_AlertNotifierProc *alertNotifierProc;$/;"	m	struct:Tcl_NotifierProcs	typeref:typename:Tcl_AlertNotifierProc *
aliasEntryPtr	generic/tclInterp.c	/^    Tcl_HashEntry *aliasEntryPtr;$/;"	m	struct:__anon913711770108	typeref:typename:Tcl_HashEntry *	file:
aliasTable	generic/tclInterp.c	/^    Tcl_HashTable aliasTable;	\/* Table which maps from names of commands in$/;"	m	struct:__anon913711770208	typeref:typename:Tcl_HashTable	file:
aligned	generic/tclInt.h	/^    } aligned;$/;"	m	struct:TclMaxAlignment	typeref:union:TclMaxAlignment::__anon1eb6b3550a0a
all	compat/zlib/Makefile	/^all:$/;"	t
all	compat/zlib/Makefile.in	/^all: static shared$/;"	t
all	compat/zlib/contrib/delphi/zlibd32.mak	/^all: $(ZLIB_LIB) example.exe minigzip.exe$/;"	t
all	compat/zlib/contrib/minizip/Makefile	/^all: miniunz minizip$/;"	t
all	compat/zlib/contrib/pascal/zlibd32.mak	/^all: $(ZLIB_LIB) example.exe minigzip.exe$/;"	t
all	compat/zlib/nintendods/Makefile	/^all: $(BUILD)$/;"	t
all	compat/zlib/watcom/watcom_f.mak	/^all: $(ZLIB_LIB) example.exe minigzip.exe$/;"	t
all	compat/zlib/watcom/watcom_l.mak	/^all: $(ZLIB_LIB) example.exe minigzip.exe$/;"	t
all	generic/tclInt.h	/^	int (*all)(tclObjTypeInterfaceArgsListAll);$/;"	m	struct:ObjInterface::list	typeref:typename:int (*)(tclObjTypeInterfaceArgsListAll)
all	macosx/GNUmakefile	/^all			: ${all}$/;"	t
all	macosx/GNUmakefile	/^all			:= ${styles}$/;"	m
all	unix/Makefile.in	/^all: binaries libraries doc packages$/;"	t
all	unix/dltest/Makefile.in	/^all: embtest tcl9pkga${SHLIB_SUFFIX} tcl9pkgb${SHLIB_SUFFIX} tcl9pkgc${SHLIB_SUFFIX} \\$/;"	t
all	win/Makefile.in	/^all: binaries libraries doc packages$/;"	t
all	win/vctool.bat	/^:all$/;"	l
all64	compat/zlib/Makefile.in	/^all64: example64$(EXE) minigzip64$(EXE)$/;"	t
allReadableCache	generic/tclOOInt.h	/^    Tcl_Obj *allReadableCache;	\/* The cache of all readable properties$/;"	m	struct:PropertyStorage	typeref:typename:Tcl_Obj *
allSigMask	macosx/tclMacOSXNotify.c	/^static sigset_t allSigMask;$/;"	v	typeref:typename:sigset_t	file:
allSigMask	unix/tclSelectNotfy.c	/^static sigset_t allSigMask;$/;"	v	typeref:typename:sigset_t	file:
allWritableCache	generic/tclOOInt.h	/^    Tcl_Obj *allWritableCache;	\/* The cache of all writable properties$/;"	m	struct:PropertyStorage	typeref:typename:Tcl_Obj *
allcases	generic/regc_locale.c	/^allcases($/;"	f	typeref:struct:cvec *	file:
alldist	unix/Makefile.in	/^alldist: dist$/;"	t
alloc	generic/tclTomMath.h	/^	int used, alloc;$/;"	m	struct:mp_int	typeref:typename:int
alloc	libtommath/tommath.h	/^   int used, alloc;$/;"	m	struct:mp_int	typeref:typename:int
allocBreakTargets	generic/tclCompile.h	/^    Tcl_Size allocBreakTargets;	\/* The size of the breakTargets array. *\/$/;"	m	struct:ExceptionAux	typeref:typename:Tcl_Size
allocCache	generic/tclInt.h	/^    AllocCache *allocCache;	\/* Allocator cache for stack frames. *\/$/;"	m	struct:Interp	typeref:typename:AllocCache *
allocContinueTargets	generic/tclCompile.h	/^    Tcl_Size allocContinueTargets;$/;"	m	struct:ExceptionAux	typeref:typename:Tcl_Size
allocEntryProc	generic/tcl.h	/^    Tcl_AllocHashEntryProc *allocEntryProc;$/;"	m	struct:Tcl_HashKeyType	typeref:typename:Tcl_AllocHashEntryProc *
allocHead	generic/tclCkalloc.c	/^static struct mem_header *allocHead = NULL;  \/* List of allocated structures *\/$/;"	v	typeref:struct:mem_header *	file:
allocInit	generic/tclAlloc.c	/^static int allocInit = 0;$/;"	v	typeref:typename:int	file:
allocLock	unix/tclUnixThrd.c	/^static PMutex allocLock;$/;"	v	typeref:typename:PMutex	file:
allocLock	win/tclWinThrd.c	/^} allocLock;$/;"	v	typeref:struct:Tcl_Mutex_
allocLockInit	unix/tclUnixThrd.c	/^allocLockInit(void)$/;"	f	typeref:typename:void	file:
allocLockInitOnce	unix/tclUnixThrd.c	/^static pthread_once_t allocLockInitOnce = PTHREAD_ONCE_INIT;$/;"	v	typeref:typename:pthread_once_t	file:
allocLockPtr	unix/tclUnixThrd.c	/^static PMutex *allocLockPtr = &allocLock;$/;"	v	typeref:typename:PMutex *	file:
allocLockPtr	win/tclWinThrd.c	/^static Tcl_Mutex allocLockPtr = &allocLock;$/;"	v	typeref:typename:Tcl_Mutex	file:
allocMutex	win/tclWinThrd.c	/^} allocMutex;$/;"	t	typeref:struct:__anon3cc991560208	file:
allocMutexPtr	generic/tclAlloc.c	/^static Tcl_Mutex *allocMutexPtr;$/;"	v	typeref:typename:Tcl_Mutex *	file:
allocOnce	win/tclWinThrd.c	/^static int allocOnce = 0;$/;"	v	typeref:typename:int	file:
alloc_func	compat/zlib/zconf.h	/^#  define alloc_func            z_alloc_func$/;"	d
alloc_func	compat/zlib/zconf.h.in	/^#  define alloc_func            z_alloc_func$/;"	d	file:
alloc_func	compat/zlib/zlib.h	/^typedef voidpf (*alloc_func)(voidpf opaque, uInt items, uInt size);$/;"	t	typeref:typename:voidpf (*)(voidpf opaque,uInt items,uInt size)
alloc_tracing	generic/tclCkalloc.c	/^static int alloc_tracing = FALSE;$/;"	v	typeref:typename:int	file:
alloca	generic/tclDate.c	/^#    define alloca _alloca$/;"	d	file:
alloca	generic/tclDateClassic.c	/^#    define alloca _alloca$/;"	d	file:
allocarc	generic/regc_nfa.c	/^allocarc($/;"	f	typeref:struct:arc *	file:
allocate_new_datablock	compat/zlib/contrib/minizip/zip.c	/^local linkedlist_datablock_internal* allocate_new_datablock(void) {$/;"	f	typeref:typename:local linkedlist_datablock_internal *
allocated	generic/tclBinary.c	/^    Tcl_Size allocated;		\/* The amount of space actually allocated$/;"	m	struct:__anon8c3fe00a0108	typeref:typename:Tcl_Size	file:
allocated	generic/tclIOGT.c	/^    size_t allocated;		\/* Allocated size of the buffer area. *\/$/;"	m	struct:ResultBuffer	typeref:typename:size_t	file:
allocated	generic/tclIORTrans.c	/^    size_t allocated;		\/* Allocated size of the buffer area. *\/$/;"	m	struct:__anon21e740770108	typeref:typename:size_t	file:
allocated	generic/tclStringRep.h	/^    Tcl_Size allocated;		\/* The amount of space allocated for$/;"	m	struct:__anonf2feabe80108	typeref:typename:Tcl_Size
allocated	generic/tclTestABSList.c	/^    Tcl_Size allocated; \/\/ num bytes allocated$/;"	m	struct:LString	typeref:typename:Tcl_Size	file:
allocated	generic/tclThreadStorage.c	/^    sig_atomic_t allocated;	\/* The size of the table in the current$/;"	m	struct:__anon4d1cb8920208	typeref:typename:sig_atomic_t	file:
alphaCharTable	generic/regc_locale.c	/^static const chr alphaCharTable[] = {$/;"	v	typeref:typename:const chr[]	file:
alphaRangeTable	generic/regc_locale.c	/^static const crange alphaRangeTable[] = {$/;"	v	typeref:typename:const crange[]	file:
analyze	generic/regc_nfa.c	/^analyze($/;"	f	typeref:typename:long	file:
ao_buffer	generic/tclZlib.c	/^	ao_buffer, ao_dictionary, ao_finalize, ao_flush, ao_fullflush$/;"	e	enum:ZlibStreamAddCmd::addOptions	file:
ao_dictionary	generic/tclZlib.c	/^	ao_buffer, ao_dictionary, ao_finalize, ao_flush, ao_fullflush$/;"	e	enum:ZlibStreamAddCmd::addOptions	file:
ao_finalize	generic/tclZlib.c	/^	ao_buffer, ao_dictionary, ao_finalize, ao_flush, ao_fullflush$/;"	e	enum:ZlibStreamAddCmd::addOptions	file:
ao_flush	generic/tclZlib.c	/^	ao_buffer, ao_dictionary, ao_finalize, ao_flush, ao_fullflush$/;"	e	enum:ZlibStreamAddCmd::addOptions	file:
ao_fullflush	generic/tclZlib.c	/^	ao_buffer, ao_dictionary, ao_finalize, ao_flush, ao_fullflush$/;"	e	enum:ZlibStreamAddCmd::addOptions	file:
appContext	unix/tclXtNotify.c	/^    XtAppContext appContext;	\/* The context used by the Xt notifier. Can be$/;"	m	struct:NotifierState	typeref:typename:XtAppContext	file:
appContextCreated	unix/tclXtNotify.c	/^    int appContextCreated;	\/* Was it created by us? *\/$/;"	m	struct:NotifierState	typeref:typename:int	file:
appExitPtr	generic/tclEvent.c	/^static Tcl_ExitProc *appExitPtr = NULL;$/;"	v	typeref:typename:Tcl_ExitProc *	file:
append	generic/tclInt.h	/^	int (*append)(tclObjTypeInterfaceArgsListAppend);$/;"	m	struct:ObjInterface::list	typeref:typename:int (*)(tclObjTypeInterfaceArgsListAppend)
append_bits	compat/zlib/examples/zran.c	/^static inline void append_bits(unsigned value, int bits,$/;"	f	typeref:typename:void	file:
appendlist	generic/tclInt.h	/^	int (*appendlist)(tclObjTypeInterfaceArgsListAppendList);$/;"	m	struct:ObjInterface::list	typeref:typename:int (*)(tclObjTypeInterfaceArgsListAppendList)
applyDSTOffset	tools/tclZIC.tcl	/^proc applyDSTOffset {nextDSTOffset year startSecs$/;"	p
applyNoRule	tools/tclZIC.tcl	/^proc applyNoRule {year startSecs stdGMTOffset DSTOffset nextGMTOffset$/;"	p
applyRules	tools/tclZIC.tcl	/^proc applyRules {ruleSet year startSecs stdGMTOffset DSTOffset nextGMTOffset$/;"	p
aprintf	compat/zlib/examples/gznorm.c	/^local char *aprintf(char *fmt, ...) {$/;"	f	typeref:typename:local char *
arc	generic/regguts.h	/^struct arc {$/;"	s
arcbatch	generic/regguts.h	/^struct arcbatch {		\/* for bulk allocation of arcs *\/$/;"	s
arch_abi	unix/tclLoadDyld.c	/^#	define arch_abi /;"	d	file:
arcp	generic/regexec.c	/^struct arcp {			\/* "pointer" to an outarc *\/$/;"	s	file:
arcs	generic/regguts.h	/^    struct arc *arcs;		\/* color chain *\/$/;"	m	struct:colordesc	typeref:struct:arc *
arcs	generic/regguts.h	/^    struct carc *arcs;		\/* the area for the lists *\/$/;"	m	struct:cnfa	typeref:struct:carc *
argc	generic/tclIORTrans.c	/^    int argc;			\/* Number of preallocated words - 2. *\/$/;"	m	struct:__anon21e740770208	typeref:typename:int	file:
argcList	generic/tclCmdAH.c	/^    Tcl_Size *argcList;		\/* Array of value list sizes. *\/$/;"	m	struct:ForeachState	typeref:typename:Tcl_Size *	file:
argv	generic/tclIORTrans.c	/^    Tcl_Obj **argv;		\/* Preallocated array for calling the handler.$/;"	m	struct:__anon21e740770208	typeref:typename:Tcl_Obj **	file:
argvList	generic/tclCmdAH.c	/^    Tcl_Obj ***argvList;	\/* Array of value lists. *\/$/;"	m	struct:ForeachState	typeref:typename:Tcl_Obj ***	file:
arithSeriesType	generic/tclArithSeries.c	/^static ObjectType arithSeriesType = {$/;"	v	typeref:typename:ObjectType	file:
arrayDefaultOptionsEnum	generic/tclVar.c	/^    enum arrayDefaultOptionsEnum { OPT_GET, OPT_SET, OPT_EXISTS, OPT_UNSET } option;$/;"	g	function:ArrayDefaultCmd	file:
arrayNamesOptionsEnum	generic/tclVar.c	/^    enum arrayNamesOptionsEnum {OPT_EXACT, OPT_GLOB, OPT_REGEXP} mode = OPT_GLOB;$/;"	g	function:ArrayNamesCmd	file:
arrayPtr	generic/tclInt.h	/^    struct Var *arrayPtr;	\/* The array containing the variables, if they$/;"	m	struct:TclVarHashTable	typeref:struct:Var *
aryPtr	generic/tclLink.c	/^	void *aryPtr;		\/* Generic array. *\/$/;"	m	union:__anonfc2fcf730108::__anonfc2fcf73020a	typeref:typename:void *	file:
assembleCodeType	generic/tclAssembly.c	/^static const Tcl_ObjType assembleCodeType = {$/;"	v	typeref:typename:const Tcl_ObjType	file:
assignNumber	generic/tclArithSeries.c	/^assignNumber($/;"	f	typeref:typename:int	file:
assocData	generic/tclInt.h	/^    Tcl_HashTable *assocData;	\/* Hash table for associating data with this$/;"	m	struct:Interp	typeref:typename:Tcl_HashTable *
assocPtr	generic/tclTimer.c	/^    struct AfterAssocData *assocPtr;$/;"	m	struct:AfterInfo	typeref:struct:AfterAssocData *	file:
async	generic/tclBasic.c	/^    Tcl_AsyncHandler async;	\/* Async handler token for script$/;"	m	struct:__anon6e1456070108	typeref:typename:Tcl_AsyncHandler	file:
asyncActive	generic/tclAsync.c	/^    int asyncActive;		\/* Indicates whether Tcl_AsyncInvoke is$/;"	m	struct:ThreadSpecificData	typeref:typename:int	file:
asyncCancel	generic/tclInt.h	/^    Tcl_AsyncHandler asyncCancel;$/;"	m	struct:Interp	typeref:typename:Tcl_AsyncHandler
asyncCancelMsg	generic/tclInt.h	/^    Tcl_Obj *asyncCancelMsg;	\/* Error message set by async cancel handler$/;"	m	struct:Interp	typeref:typename:Tcl_Obj *
asyncPending	macosx/tclMacOSXNotify.c	/^static int asyncPending = 0;$/;"	v	typeref:typename:int	file:
asyncPending	unix/tclEpollNotfy.c	/^    int asyncPending;		\/* True when signal triggered thread. *\/$/;"	m	struct:ThreadSpecificData	typeref:typename:int	file:
asyncPending	unix/tclKqueueNotfy.c	/^    int asyncPending;		\/* True when signal triggered thread. *\/$/;"	m	struct:ThreadSpecificData	typeref:typename:int	file:
asyncPending	unix/tclSelectNotfy.c	/^static int asyncPending = 0;$/;"	v	typeref:typename:int	file:
asyncReady	generic/tclAsync.c	/^    int asyncReady;		\/* This is set to 1 whenever a handler becomes$/;"	m	struct:ThreadSpecificData	typeref:typename:int	file:
asyncReadyPtr	generic/tclInt.h	/^    int *asyncReadyPtr;		\/* Pointer to the asyncReady indicator for$/;"	m	struct:Interp	typeref:typename:int *
atCmdStart	generic/tclCompile.h	/^    int atCmdStart;		\/* Flag to say whether an INST_START_CMD$/;"	m	struct:CompileEnv	typeref:typename:int
atForkInit	macosx/tclMacOSXNotify.c	/^static int atForkInit = 0;$/;"	v	typeref:typename:int	file:
atForkInit	unix/tclSelectNotfy.c	/^static int atForkInit = 0;$/;"	v	typeref:typename:int	file:
atoi	generic/tclIOUtil.c	/^#define atoi(/;"	d	file:
attach	compat/zlib/contrib/iostream/zfstream.cpp	/^gzfilebuf *gzfilebuf::attach( int file_descriptor,$/;"	f	class:gzfilebuf	typeref:typename:gzfilebuf *
attach	compat/zlib/contrib/iostream/zfstream.cpp	/^void gzfilestream_common::attach( int fd, int io_mode ) {$/;"	f	class:gzfilestream_common	typeref:typename:void
attach	compat/zlib/contrib/iostream3/zfstream.cc	/^gzfilebuf::attach(int fd,$/;"	f	class:gzfilebuf	typeref:typename:gzfilebuf *
attach	compat/zlib/contrib/iostream3/zfstream.cc	/^gzifstream::attach(int fd,$/;"	f	class:gzifstream	typeref:typename:void
attach	compat/zlib/contrib/iostream3/zfstream.cc	/^gzofstream::attach(int fd,$/;"	f	class:gzofstream	typeref:typename:void
attemptckalloc	generic/tcl.h	/^#   define attemptckalloc /;"	d
attemptckrealloc	generic/tcl.h	/^#	define attemptckrealloc /;"	d
attemptckrealloc	generic/tcl.h	/^#	define attemptckrealloc(/;"	d
attr_item	compat/zlib/contrib/untgz/untgz.c	/^struct attr_item$/;"	s	file:
attributeArray	unix/tclUnixFCmd.c	/^static const int attributeArray[] = {$/;"	v	typeref:typename:const int[]	file:
attributeArray	win/tclWinFCmd.c	/^static const int attributeArray[] = {FILE_ATTRIBUTE_ARCHIVE, FILE_ATTRIBUTE_HIDDEN,$/;"	v	typeref:typename:const int[]	file:
auto_import	library/init.tcl	/^proc auto_import {pattern} {$/;"	p
auto_load	library/init.tcl	/^proc auto_load {cmd {namespace {}}} {$/;"	p
auto_load_index	library/init.tcl	/^proc auto_load_index {} {$/;"	p
auto_mkindex	library/auto.tcl	/^proc auto_mkindex {dir args} {$/;"	p
auto_mkindex_old	library/auto.tcl	/^proc auto_mkindex_old {dir args} {$/;"	p
auto_mkindex_parser	library/auto.tcl	/^namespace eval auto_mkindex_parser {$/;"	n
auto_qualify	library/init.tcl	/^proc auto_qualify {cmd namespace} {$/;"	p
auto_reset	library/auto.tcl	/^proc auto_reset {} {$/;"	p
autopurge	generic/tclProcess.c	/^static int autopurge = 1;	\/* Autopurge flag. *\/$/;"	v	typeref:typename:int	file:
auxDataArrayEnd	generic/tclCompile.h	/^    Tcl_Size auxDataArrayEnd;	\/* Index after last aux data array entry. *\/$/;"	m	struct:CompileEnv	typeref:typename:Tcl_Size
auxDataArrayNext	generic/tclCompile.h	/^    Tcl_Size auxDataArrayNext;	\/* Next free compile aux data array index.$/;"	m	struct:CompileEnv	typeref:typename:Tcl_Size
auxDataArrayPtr	generic/tclCompile.h	/^    AuxData *auxDataArrayPtr;	\/* Points to auxiliary data array start. *\/$/;"	m	struct:CompileEnv	typeref:typename:AuxData *
auxDataArrayPtr	generic/tclCompile.h	/^    AuxData *auxDataArrayPtr;	\/* Points to the start of the auxiliary data$/;"	m	struct:ByteCode	typeref:typename:AuxData *
auxNumLevels	generic/tclInt.h	/^    Tcl_Size auxNumLevels;	\/* While the coroutine is running the$/;"	m	struct:CoroutineData	typeref:typename:Tcl_Size
auxObjList	generic/tclExecute.c	/^    Tcl_Obj *auxObjList;	\/* level: they record the state when a new *\/$/;"	m	struct:__anon999f4b180108	typeref:typename:Tcl_Obj *	file:
auxObjList	generic/tclExecute.c	/^#define auxObjList	(TD->auxObjList)/;"	d	file:
availPtr	generic/tclPkg.c	/^    PkgAvail *availPtr;		\/* First in list of all available versions of$/;"	m	struct:__anon1f3382670108	typeref:typename:PkgAvail *	file:
avail_in	compat/zlib/contrib/dotzlib/DotZLib/DotZLib.cs	/^        public uint avail_in;$/;"	f	struct:DotZLib.ZStream
avail_in	compat/zlib/zlib.h	/^    uInt     avail_in;  \/* number of bytes available at next_in *\/$/;"	m	struct:z_stream_s	typeref:typename:uInt
avail_in_this_block	compat/zlib/contrib/minizip/zip.c	/^  uLong  avail_in_this_block;$/;"	m	struct:linkedlist_datablock_internal_s	typeref:typename:uLong	file:
avail_out	compat/zlib/contrib/dotzlib/DotZLib/DotZLib.cs	/^        public uint avail_out;$/;"	f	struct:DotZLib.ZStream
avail_out	compat/zlib/zlib.h	/^    uInt     avail_out; \/* remaining free space at next_out *\/$/;"	m	struct:z_stream_s	typeref:typename:uInt
b	generic/tclThreadAlloc.c	/^    } b;$/;"	m	union:Block	typeref:struct:Block::__anone59fb5e80108	file:
b	libtommath/bn_s_mp_rand_jenkins.c	/^   uint64_t b;$/;"	m	struct:__anona23b32490108	typeref:typename:uint64_t	file:
back	compat/zlib/examples/gzlog.c	/^    int back;       \/* location of first block id in bits back from first *\/$/;"	m	struct:log	typeref:typename:int	file:
back	compat/zlib/inflate.h	/^    int back;                   \/* bits back of last unprocessed length\/lit *\/$/;"	m	struct:inflate_state	typeref:typename:int
backD	generic/regc_lex.c	/^static const chr backD[] = {	\/* \\D *\/$/;"	v	typeref:typename:const chr[]	file:
backS	generic/regc_lex.c	/^static const chr backS[] = {	\/* \\S *\/$/;"	v	typeref:typename:const chr[]	file:
backW	generic/regc_lex.c	/^static const chr backW[] = {	\/* \\W *\/$/;"	v	typeref:typename:const chr[]	file:
backd	generic/regc_lex.c	/^static const chr backd[] = {	\/* \\d *\/$/;"	v	typeref:typename:const chr[]	file:
backs	generic/regc_lex.c	/^static const chr backs[] = {	\/* \\s *\/$/;"	v	typeref:typename:const chr[]	file:
backslashify	tools/loadICU.tcl	/^proc backslashify { string } {$/;"	p
backup-text	tools/tcltk-man2html-utils.tcl	/^proc backup-text {n} {$/;"	p
backw	generic/regc_lex.c	/^static const chr backw[] = {	\/* \\w *\/$/;"	v	typeref:typename:const chr[]	file:
bail	compat/zlib/examples/gzjoin.c	/^local int bail(char *why1, char *why2)$/;"	f	typeref:typename:local int
base	generic/tclArithSeries.c	/^    ArithSeries base;$/;"	m	struct:__anond76bba880208	typeref:typename:ArithSeries	file:
base	generic/tclArithSeries.c	/^    ArithSeries base;$/;"	m	struct:__anond76bba880308	typeref:typename:ArithSeries	file:
base	generic/tclIORChan.c	/^    ForwardParamBase base;	\/* "Supertype". MUST COME FIRST. *\/$/;"	m	struct:ForwardParamBlock	typeref:typename:ForwardParamBase	file:
base	generic/tclIORChan.c	/^    ForwardParamBase base;	\/* "Supertype". MUST COME FIRST. *\/$/;"	m	struct:ForwardParamGetOpt	typeref:typename:ForwardParamBase	file:
base	generic/tclIORChan.c	/^    ForwardParamBase base;	\/* "Supertype". MUST COME FIRST. *\/$/;"	m	struct:ForwardParamInput	typeref:typename:ForwardParamBase	file:
base	generic/tclIORChan.c	/^    ForwardParamBase base;	\/* "Supertype". MUST COME FIRST. *\/$/;"	m	struct:ForwardParamOutput	typeref:typename:ForwardParamBase	file:
base	generic/tclIORChan.c	/^    ForwardParamBase base;	\/* "Supertype". MUST COME FIRST. *\/$/;"	m	struct:ForwardParamSeek	typeref:typename:ForwardParamBase	file:
base	generic/tclIORChan.c	/^    ForwardParamBase base;	\/* "Supertype". MUST COME FIRST. *\/$/;"	m	struct:ForwardParamSetOpt	typeref:typename:ForwardParamBase	file:
base	generic/tclIORChan.c	/^    ForwardParamBase base;	\/* "Supertype". MUST COME FIRST. *\/$/;"	m	struct:ForwardParamTruncate	typeref:typename:ForwardParamBase	file:
base	generic/tclIORChan.c	/^    ForwardParamBase base;	\/* "Supertype". MUST COME FIRST. *\/$/;"	m	struct:ForwardParamWatch	typeref:typename:ForwardParamBase	file:
base	generic/tclIORChan.c	/^    ForwardParamBase base;$/;"	m	union:ForwardParam	typeref:typename:ForwardParamBase	file:
base	generic/tclIORTrans.c	/^    ForwardParamBase base;	\/* "Supertype". MUST COME FIRST. *\/$/;"	m	struct:ForwardParamLimit	typeref:typename:ForwardParamBase	file:
base	generic/tclIORTrans.c	/^    ForwardParamBase base;	\/* "Supertype". MUST COME FIRST. *\/$/;"	m	struct:ForwardParamTransform	typeref:typename:ForwardParamBase	file:
base	generic/tclIORTrans.c	/^    ForwardParamBase base;$/;"	m	union:ForwardParam	typeref:typename:ForwardParamBase	file:
base	tools/tclsh.svg	/^     showgrid="false" \/>$/;"	i
baseObj	generic/tclDate.h	/^    Tcl_Obj *baseObj;		\/* Base (scan and add) or clockValue (format) *\/$/;"	m	struct:ClockFmtScnCmdArgs	typeref:typename:Tcl_Obj *
baseOffset	generic/tclZipfs.c	/^    size_t baseOffset;		\/* Archive start *\/$/;"	m	struct:ZipFile	typeref:typename:size_t	file:
base_dist	compat/zlib/trees.c	/^local int base_dist[D_CODES];$/;"	v	typeref:typename:local int[]
base_dist	compat/zlib/trees.h	/^local const int base_dist[D_CODES] = {$/;"	v	typeref:typename:local const int[]
base_length	compat/zlib/trees.c	/^local int base_length[LENGTH_CODES];$/;"	v	typeref:typename:local int[]
base_length	compat/zlib/trees.h	/^local const int base_length[LENGTH_CODES] = {$/;"	v	typeref:typename:local const int[]
baud	unix/tclUnixChan.c	/^    int baud;$/;"	m	struct:__anone1e2a72a0308	typeref:typename:int	file:
baud	unix/tclUnixChan.c	/^static const struct {int baud; speed_t speed;} speeds[] = {$/;"	m	struct:__anone1e2a72a0408	typeref:typename:int	file:
bcFramePtr	generic/tclExecute.c	/^#define	bcFramePtr	/;"	d	file:
bclose	compat/zlib/examples/gzjoin.c	/^local void bclose(bin *in)$/;"	f	typeref:typename:local void
been_here	compat/zlib/examples/enough.c	/^local int been_here(int syms, int left, int len, int mem, int rem) {$/;"	f	typeref:typename:local int
before	generic/regc_locale.c	/^before($/;"	f	typeref:typename:int	file:
beg	compat/zlib/contrib/inflate86/inffas86.c	/^\/* 40   20 *\/ unsigned char FAR *beg;   \/*          inflate()'s init next_out *\/$/;"	m	struct:inflate_fast::inffast_ar	typeref:typename:unsigned char FAR *	file:
begin	generic/regguts.h	/^    struct state *begin;	\/* outarcs from here... *\/$/;"	m	struct:subre	typeref:struct:state *
begin_pos	compat/zlib/contrib/minizip/zip.c	/^    ZPOS64_T begin_pos;            \/* position of the beginning of the zipfile *\/$/;"	m	struct:__anon7add25cb0208	typeref:typename:ZPOS64_T	file:
begun	compat/zlib/crc32.c	/^    atomic_flag begun;$/;"	m	struct:once_s	typeref:typename:atomic_flag	file:
begun	compat/zlib/crc32.c	/^    volatile int begun;$/;"	m	struct:once_s	typeref:typename:volatile int	file:
bestlen	compat/zlib/contrib/asm686/match.S	/^#define	bestlen	/;"	d	file:
bget	compat/zlib/examples/gzjoin.c	/^#define bget(/;"	d	file:
bget4	compat/zlib/examples/gzjoin.c	/^local unsigned long bget4(bin *in)$/;"	f	typeref:typename:local unsigned long
bi_buf	compat/zlib/deflate.h	/^    ush bi_buf;$/;"	m	struct:internal_state	typeref:typename:ush
bi_flush	compat/zlib/trees.c	/^local void bi_flush(deflate_state *s) {$/;"	f	typeref:typename:local void
bi_reverse	compat/zlib/trees.c	/^local unsigned bi_reverse(unsigned code, int len) {$/;"	f	typeref:typename:local unsigned
bi_valid	compat/zlib/deflate.h	/^    int bi_valid;$/;"	m	struct:internal_state	typeref:typename:int
bi_windup	compat/zlib/trees.c	/^local void bi_windup(deflate_state *s) {$/;"	f	typeref:typename:local void
bigBlocks	generic/tclAlloc.c	/^static struct block bigBlocks={	\/* Big blocks aren't suballocated. *\/$/;"	v	typeref:struct:block	file:
big_t	compat/zlib/examples/enough.c	/^typedef uintmax_t big_t;    \/\/ type for code counting$/;"	t	typeref:typename:uintmax_t	file:
bigtens	generic/tclStrToD.c	/^static const double bigtens[] = {$/;"	v	typeref:typename:const double[]	file:
bin	compat/zlib/examples/gzjoin.c	/^} bin;$/;"	t	typeref:struct:__anon52a4be880108	file:
bin_PROGRAMS	compat/zlib/contrib/minizip/Makefile.am	/^bin_PROGRAMS = miniunzip minizip$/;"	m
binaries	unix/Makefile.in	/^binaries: ${LIB_FILE} ${TCL_EXE}$/;"	t
binaries	win/Makefile.in	/^binaries: $(TCL_STUB_LIB_FILE) @LIBRARIES@ winextensions ${TCL_ZIP_FILE} $(TCLSH)$/;"	t
binaryEncoding	generic/tclIO.c	/^    Tcl_Encoding binaryEncoding;$/;"	m	struct:__anon5e04fc9d0108	typeref:typename:Tcl_Encoding	file:
binaryMap	generic/tclBinary.c	/^static const EnsembleImplMap binaryMap[] = {$/;"	v	typeref:typename:const EnsembleImplMap[]	file:
bindir	unix/Makefile.in	/^bindir			= @bindir@$/;"	m
bindir	win/Makefile.in	/^bindir			= @bindir@$/;"	m
bindir_native	win/Makefile.in	/^bindir_native	= $(shell $(CYGPATH) '$(bindir)')$/;"	m
bit	generic/tclRegexp.c	/^	int bit;$/;"	m	struct:TclRegAbout::infoname	typeref:typename:int	file:
bitSize	compat/zlib/contrib/dotzlib/DotZLib/DotZLib.cs	/^        private static int bitSize(uint bits)$/;"	m	class:DotZLib.Info	file:
bitbuf	compat/zlib/contrib/blast/blast.c	/^    int bitbuf;                 \/* bit buffer *\/$/;"	m	struct:state	typeref:typename:int	file:
bitbuf	compat/zlib/contrib/puff/puff.c	/^    int bitbuf;                 \/* bit buffer *\/$/;"	m	struct:state	typeref:typename:int	file:
bitcnt	compat/zlib/contrib/blast/blast.c	/^    int bitcnt;                 \/* number of bits in bit buffer *\/$/;"	m	struct:state	typeref:typename:int	file:
bitcnt	compat/zlib/contrib/puff/puff.c	/^    int bitcnt;                 \/* number of bits in bit buffer *\/$/;"	m	struct:state	typeref:typename:int	file:
bits	compat/zlib/contrib/blast/blast.c	/^local int bits(struct state *s, int need)$/;"	f	typeref:typename:local int
bits	compat/zlib/contrib/infback9/inftree9.h	/^    unsigned char bits;         \/* bits in this part of the code *\/$/;"	m	struct:__anon80eb2aca0108	typeref:typename:unsigned char
bits	compat/zlib/contrib/inflate86/inffas86.c	/^\/* 88   44 *\/ unsigned bits;            \/* ebx rbx  local strm->bits *\/$/;"	m	struct:inflate_fast::inffast_ar	typeref:typename:unsigned	file:
bits	compat/zlib/contrib/puff/puff.c	/^local int bits(struct state *s, int need)$/;"	f	typeref:typename:local int
bits	compat/zlib/examples/zran.h	/^    int bits;           \/\/ 0, or number of bits (1-7) from byte at in-1$/;"	m	struct:point	typeref:typename:int
bits	compat/zlib/inflate.h	/^    unsigned bits;              \/* number of bits in "in" *\/$/;"	m	struct:inflate_state	typeref:typename:unsigned
bits	compat/zlib/inftrees.h	/^    unsigned char bits;         \/* bits in this part of the code *\/$/;"	m	struct:__anon78703c4e0108	typeref:typename:unsigned char
bits	libtommath/bn_mp_set_double.c	/^      uint64_t bits;$/;"	m	union:mp_set_double::__anonee13ff67010a	typeref:typename:uint64_t	file:
bits_sent	compat/zlib/deflate.h	/^    ulg bits_sent;      \/* bit length of compressed data sent mod 2^32 *\/$/;"	m	struct:internal_state	typeref:typename:ulg
bl_count	compat/zlib/deflate.h	/^    ush bl_count[MAX_BITS+1];$/;"	m	struct:internal_state	typeref:typename:ush[]
bl_desc	compat/zlib/deflate.h	/^    struct tree_desc_s bl_desc;              \/* desc. for bit length tree *\/$/;"	m	struct:internal_state	typeref:struct:tree_desc_s
bl_order	compat/zlib/trees.c	/^local const uch bl_order[BL_CODES]$/;"	v	typeref:typename:local const uch[]
bl_tree	compat/zlib/deflate.h	/^    struct ct_data_s bl_tree[2*BL_CODES+1];  \/* Huffman tree for bit lengths *\/$/;"	m	struct:internal_state	typeref:struct:ct_data_s[]
blast	compat/zlib/contrib/blast/Makefile	/^blast: blast.c blast.h$/;"	t
blast	compat/zlib/contrib/blast/blast.c	/^int blast(blast_in infun, void *inhow, blast_out outfun, void *outhow,$/;"	f	typeref:typename:int
blast_in	compat/zlib/contrib/blast/blast.h	/^typedef unsigned (*blast_in)(void *how, unsigned char **buf);$/;"	t	typeref:typename:unsigned (*)(void * how,unsigned char ** buf)
blast_out	compat/zlib/contrib/blast/blast.h	/^typedef int (*blast_out)(void *how, unsigned char *buf, unsigned len);$/;"	t	typeref:typename:int (*)(void * how,unsigned char * buf,unsigned len)
blink	generic/tclCkalloc.c	/^    struct mem_header *blink;$/;"	m	struct:mem_header	typeref:struct:mem_header *	file:
bload	compat/zlib/examples/gzjoin.c	/^local int bload(bin *in)$/;"	f	typeref:typename:local int
block	generic/regguts.h	/^    union tree *block;		\/* block of solid color, if any *\/$/;"	m	struct:colordesc	typeref:union:tree *
block	generic/tclAlloc.c	/^struct block {$/;"	s	file:
block	generic/tclIORChan.c	/^    struct ForwardParamBlock block;$/;"	m	union:ForwardParam	typeref:struct:ForwardParamBlock	file:
blockList	generic/tclAlloc.c	/^static struct block *blockList;	\/* Tracks the suballocated blocks. *\/$/;"	v	typeref:struct:block *	file:
blockModeProc	generic/tcl.h	/^    Tcl_DriverBlockModeProc *blockModeProc;$/;"	m	struct:Tcl_ChannelType	typeref:typename:Tcl_DriverBlockModeProc *
blockReqSize	generic/tclThreadAlloc.c	/^#define blockReqSize	/;"	d	file:
blockSize	generic/tclThreadAlloc.c	/^    size_t blockSize;		\/* Bucket blocksize. *\/$/;"	m	struct:__anone59fb5e80508	typeref:typename:size_t	file:
blockTime	generic/tclNotify.c	/^    Tcl_Time blockTime;		\/* If blockTimeSet is 1, gives the maximum$/;"	m	struct:ThreadSpecificData	typeref:typename:Tcl_Time	file:
blockTime	win/tclWinSerial.c	/^    int blockTime;		\/* Maximum blocktime in msec. *\/$/;"	m	struct:SerialInfo	typeref:typename:int	file:
blockTimeSet	generic/tclNotify.c	/^    int blockTimeSet;		\/* 0 means there is no maximum block time:$/;"	m	struct:ThreadSpecificData	typeref:typename:int	file:
block_done	compat/zlib/deflate.c	/^    block_done,     \/* block flush performed *\/$/;"	e	enum:__anond731f19e0103	file:
block_start	compat/zlib/deflate.h	/^    long block_start;$/;"	m	struct:internal_state	typeref:typename:long
block_state	compat/zlib/deflate.c	/^} block_state;$/;"	t	typeref:enum:__anond731f19e0103	file:
blow-chunks	tests/httpd11.tcl	/^proc blow-chunks {data {ochan stdout} {compression gzip}} {$/;"	p
bn_mp_add.o	unix/Makefile.in	/^bn_mp_add.o: $(TOMMATH_DIR)\/bn_mp_add.c $(MATHHDRS)$/;"	t
bn_mp_add_d.o	unix/Makefile.in	/^bn_mp_add_d.o: $(TOMMATH_DIR)\/bn_mp_add_d.c $(MATHHDRS)$/;"	t
bn_mp_and.o	unix/Makefile.in	/^bn_mp_and.o: $(TOMMATH_DIR)\/bn_mp_and.c $(MATHHDRS)$/;"	t
bn_mp_clamp.o	unix/Makefile.in	/^bn_mp_clamp.o: $(TOMMATH_DIR)\/bn_mp_clamp.c $(MATHHDRS)$/;"	t
bn_mp_clear.o	unix/Makefile.in	/^bn_mp_clear.o: $(TOMMATH_DIR)\/bn_mp_clear.c $(MATHHDRS)$/;"	t
bn_mp_clear_multi.o	unix/Makefile.in	/^bn_mp_clear_multi.o: $(TOMMATH_DIR)\/bn_mp_clear_multi.c $(MATHHDRS)$/;"	t
bn_mp_cmp.o	unix/Makefile.in	/^bn_mp_cmp.o: $(TOMMATH_DIR)\/bn_mp_cmp.c $(MATHHDRS)$/;"	t
bn_mp_cmp_d.o	unix/Makefile.in	/^bn_mp_cmp_d.o: $(TOMMATH_DIR)\/bn_mp_cmp_d.c $(MATHHDRS)$/;"	t
bn_mp_cmp_mag.o	unix/Makefile.in	/^bn_mp_cmp_mag.o: $(TOMMATH_DIR)\/bn_mp_cmp_mag.c $(MATHHDRS)$/;"	t
bn_mp_cnt_lsb.o	unix/Makefile.in	/^bn_mp_cnt_lsb.o: $(TOMMATH_DIR)\/bn_mp_cnt_lsb.c $(MATHHDRS)$/;"	t
bn_mp_copy.o	unix/Makefile.in	/^bn_mp_copy.o: $(TOMMATH_DIR)\/bn_mp_copy.c $(MATHHDRS)$/;"	t
bn_mp_count_bits.o	unix/Makefile.in	/^bn_mp_count_bits.o: $(TOMMATH_DIR)\/bn_mp_count_bits.c $(MATHHDRS)$/;"	t
bn_mp_div.o	unix/Makefile.in	/^bn_mp_div.o: $(TOMMATH_DIR)\/bn_mp_div.c $(MATHHDRS)$/;"	t
bn_mp_div_2.o	unix/Makefile.in	/^bn_mp_div_2.o: $(TOMMATH_DIR)\/bn_mp_div_2.c $(MATHHDRS)$/;"	t
bn_mp_div_2d.o	unix/Makefile.in	/^bn_mp_div_2d.o: $(TOMMATH_DIR)\/bn_mp_div_2d.c $(MATHHDRS)$/;"	t
bn_mp_div_d.o	unix/Makefile.in	/^bn_mp_div_d.o: $(TOMMATH_DIR)\/bn_mp_div_d.c $(MATHHDRS)$/;"	t
bn_mp_exch.o	unix/Makefile.in	/^bn_mp_exch.o: $(TOMMATH_DIR)\/bn_mp_exch.c $(MATHHDRS)$/;"	t
bn_mp_expt_n.o	unix/Makefile.in	/^bn_mp_expt_n.o: $(TOMMATH_DIR)\/bn_mp_expt_n.c $(MATHHDRS)$/;"	t
bn_mp_get_mag_u64.o	unix/Makefile.in	/^bn_mp_get_mag_u64.o: $(TOMMATH_DIR)\/bn_mp_get_mag_u64.c $(MATHHDRS)$/;"	t
bn_mp_grow.o	unix/Makefile.in	/^bn_mp_grow.o: $(TOMMATH_DIR)\/bn_mp_grow.c $(MATHHDRS)$/;"	t
bn_mp_init.o	unix/Makefile.in	/^bn_mp_init.o: $(TOMMATH_DIR)\/bn_mp_init.c $(MATHHDRS)$/;"	t
bn_mp_init_copy.o	unix/Makefile.in	/^bn_mp_init_copy.o: $(TOMMATH_DIR)\/bn_mp_init_copy.c $(MATHHDRS)$/;"	t
bn_mp_init_i64.o	unix/Makefile.in	/^bn_mp_init_i64.o:$(TOMMATH_DIR)\/bn_mp_init_i64.c $(MATHHDRS)$/;"	t
bn_mp_init_multi.o	unix/Makefile.in	/^bn_mp_init_multi.o: $(TOMMATH_DIR)\/bn_mp_init_multi.c $(MATHHDRS)$/;"	t
bn_mp_init_set.o	unix/Makefile.in	/^bn_mp_init_set.o: $(TOMMATH_DIR)\/bn_mp_init_set.c $(MATHHDRS)$/;"	t
bn_mp_init_size.o	unix/Makefile.in	/^bn_mp_init_size.o:$(TOMMATH_DIR)\/bn_mp_init_size.c $(MATHHDRS)$/;"	t
bn_mp_init_u64.o	unix/Makefile.in	/^bn_mp_init_u64.o:$(TOMMATH_DIR)\/bn_mp_init_u64.c $(MATHHDRS)$/;"	t
bn_mp_lshd.o	unix/Makefile.in	/^bn_mp_lshd.o: $(TOMMATH_DIR)\/bn_mp_lshd.c $(MATHHDRS)$/;"	t
bn_mp_mod.o	unix/Makefile.in	/^bn_mp_mod.o: $(TOMMATH_DIR)\/bn_mp_mod.c $(MATHHDRS)$/;"	t
bn_mp_mod_2d.o	unix/Makefile.in	/^bn_mp_mod_2d.o: $(TOMMATH_DIR)\/bn_mp_mod_2d.c $(MATHHDRS)$/;"	t
bn_mp_mul.o	unix/Makefile.in	/^bn_mp_mul.o: $(TOMMATH_DIR)\/bn_mp_mul.c $(MATHHDRS)$/;"	t
bn_mp_mul_2.o	unix/Makefile.in	/^bn_mp_mul_2.o: $(TOMMATH_DIR)\/bn_mp_mul_2.c $(MATHHDRS)$/;"	t
bn_mp_mul_2d.o	unix/Makefile.in	/^bn_mp_mul_2d.o: $(TOMMATH_DIR)\/bn_mp_mul_2d.c $(MATHHDRS)$/;"	t
bn_mp_mul_d.o	unix/Makefile.in	/^bn_mp_mul_d.o: $(TOMMATH_DIR)\/bn_mp_mul_d.c $(MATHHDRS)$/;"	t
bn_mp_neg.o	unix/Makefile.in	/^bn_mp_neg.o: $(TOMMATH_DIR)\/bn_mp_neg.c $(MATHHDRS)$/;"	t
bn_mp_or.o	unix/Makefile.in	/^bn_mp_or.o: $(TOMMATH_DIR)\/bn_mp_or.c $(MATHHDRS)$/;"	t
bn_mp_pack.o	unix/Makefile.in	/^bn_mp_pack.o: $(TOMMATH_DIR)\/bn_mp_pack.c $(MATHHDRS)$/;"	t
bn_mp_pack_count.o	unix/Makefile.in	/^bn_mp_pack_count.o: $(TOMMATH_DIR)\/bn_mp_pack_count.c $(MATHHDRS)$/;"	t
bn_mp_radix_size.o	unix/Makefile.in	/^bn_mp_radix_size.o: $(TOMMATH_DIR)\/bn_mp_radix_size.c $(MATHHDRS)$/;"	t
bn_mp_radix_smap.o	unix/Makefile.in	/^bn_mp_radix_smap.o: $(TOMMATH_DIR)\/bn_mp_radix_smap.c $(MATHHDRS)$/;"	t
bn_mp_read_radix.o	unix/Makefile.in	/^bn_mp_read_radix.o: $(TOMMATH_DIR)\/bn_mp_read_radix.c $(MATHHDRS)$/;"	t
bn_mp_rshd.o	unix/Makefile.in	/^bn_mp_rshd.o: $(TOMMATH_DIR)\/bn_mp_rshd.c $(MATHHDRS)$/;"	t
bn_mp_set_i64.o	unix/Makefile.in	/^bn_mp_set_i64.o: $(TOMMATH_DIR)\/bn_mp_set_i64.c $(MATHHDRS)$/;"	t
bn_mp_set_u64.o	unix/Makefile.in	/^bn_mp_set_u64.o: $(TOMMATH_DIR)\/bn_mp_set_u64.c $(MATHHDRS)$/;"	t
bn_mp_shrink.o	unix/Makefile.in	/^bn_mp_shrink.o: $(TOMMATH_DIR)\/bn_mp_shrink.c $(MATHHDRS)$/;"	t
bn_mp_signed_rsh.o	unix/Makefile.in	/^bn_mp_signed_rsh.o: $(TOMMATH_DIR)\/bn_mp_signed_rsh.c $(MATHHDRS)$/;"	t
bn_mp_sqr.o	unix/Makefile.in	/^bn_mp_sqr.o: $(TOMMATH_DIR)\/bn_mp_sqr.c $(MATHHDRS)$/;"	t
bn_mp_sqrt.o	unix/Makefile.in	/^bn_mp_sqrt.o: $(TOMMATH_DIR)\/bn_mp_sqrt.c $(MATHHDRS)$/;"	t
bn_mp_sub.o	unix/Makefile.in	/^bn_mp_sub.o: $(TOMMATH_DIR)\/bn_mp_sub.c $(MATHHDRS)$/;"	t
bn_mp_sub_d.o	unix/Makefile.in	/^bn_mp_sub_d.o: $(TOMMATH_DIR)\/bn_mp_sub_d.c $(MATHHDRS)$/;"	t
bn_mp_to_radix.o	unix/Makefile.in	/^bn_mp_to_radix.o: $(TOMMATH_DIR)\/bn_mp_to_radix.c $(MATHHDRS)$/;"	t
bn_mp_to_ubin.o	unix/Makefile.in	/^bn_mp_to_ubin.o: $(TOMMATH_DIR)\/bn_mp_to_ubin.c $(MATHHDRS)$/;"	t
bn_mp_ubin_size.o	unix/Makefile.in	/^bn_mp_ubin_size.o: $(TOMMATH_DIR)\/bn_mp_ubin_size.c $(MATHHDRS)$/;"	t
bn_mp_unpack.o	unix/Makefile.in	/^bn_mp_unpack.o: $(TOMMATH_DIR)\/bn_mp_unpack.c $(MATHHDRS)$/;"	t
bn_mp_xor.o	unix/Makefile.in	/^bn_mp_xor.o: $(TOMMATH_DIR)\/bn_mp_xor.c $(MATHHDRS)$/;"	t
bn_mp_zero.o	unix/Makefile.in	/^bn_mp_zero.o: $(TOMMATH_DIR)\/bn_mp_zero.c $(MATHHDRS)$/;"	t
bn_reverse	generic/tclTomMathDecls.h	/^#define bn_reverse /;"	d
bn_reverse	libtommath/bn_deprecated.c	/^void bn_reverse(unsigned char *s, int len)$/;"	f	typeref:typename:void
bn_s_mp_add.o	unix/Makefile.in	/^bn_s_mp_add.o: $(TOMMATH_DIR)\/bn_s_mp_add.c $(MATHHDRS)$/;"	t
bn_s_mp_balance_mul.o	unix/Makefile.in	/^bn_s_mp_balance_mul.o: $(TOMMATH_DIR)\/bn_s_mp_balance_mul.c $(MATHHDRS)$/;"	t
bn_s_mp_div_3.o	unix/Makefile.in	/^bn_s_mp_div_3.o: $(TOMMATH_DIR)\/bn_s_mp_div_3.c $(MATHHDRS)$/;"	t
bn_s_mp_karatsuba_mul.o	unix/Makefile.in	/^bn_s_mp_karatsuba_mul.o: $(TOMMATH_DIR)\/bn_s_mp_karatsuba_mul.c $(MATHHDRS)$/;"	t
bn_s_mp_karatsuba_sqr.o	unix/Makefile.in	/^bn_s_mp_karatsuba_sqr.o: $(TOMMATH_DIR)\/bn_s_mp_karatsuba_sqr.c $(MATHHDRS)$/;"	t
bn_s_mp_mul_digs.o	unix/Makefile.in	/^bn_s_mp_mul_digs.o: $(TOMMATH_DIR)\/bn_s_mp_mul_digs.c $(MATHHDRS)$/;"	t
bn_s_mp_mul_digs_fast.o	unix/Makefile.in	/^bn_s_mp_mul_digs_fast.o: $(TOMMATH_DIR)\/bn_s_mp_mul_digs_fast.c $(MATHHDRS)$/;"	t
bn_s_mp_reverse.o	unix/Makefile.in	/^bn_s_mp_reverse.o: $(TOMMATH_DIR)\/bn_s_mp_reverse.c $(MATHHDRS)$/;"	t
bn_s_mp_sqr.o	unix/Makefile.in	/^bn_s_mp_sqr.o: $(TOMMATH_DIR)\/bn_s_mp_sqr.c $(MATHHDRS)$/;"	t
bn_s_mp_sqr_fast.o	unix/Makefile.in	/^bn_s_mp_sqr_fast.o: $(TOMMATH_DIR)\/bn_s_mp_sqr_fast.c $(MATHHDRS)$/;"	t
bn_s_mp_sub.o	unix/Makefile.in	/^bn_s_mp_sub.o: $(TOMMATH_DIR)\/bn_s_mp_sub.c $(MATHHDRS)$/;"	t
bn_s_mp_toom_mul.o	unix/Makefile.in	/^bn_s_mp_toom_mul.o: $(TOMMATH_DIR)\/bn_s_mp_toom_mul.c $(MATHHDRS)$/;"	t
bn_s_mp_toom_sqr.o	unix/Makefile.in	/^bn_s_mp_toom_sqr.o: $(TOMMATH_DIR)\/bn_s_mp_toom_sqr.c $(MATHHDRS)$/;"	t
body	generic/tclCkalloc.c	/^    char body[TCLFLEXARRAY];	\/* First byte of client's space. Actual size$/;"	m	struct:mem_header	typeref:typename:char[]	file:
body	generic/tclInt.h	/^    Tcl_Obj *body;		\/* Loop body. *\/$/;"	m	struct:ForIterData	typeref:typename:Tcl_Obj *
bodyIdx	generic/tclCmdAH.c	/^    Tcl_Size bodyIdx;		\/* The argument index of the body. *\/$/;"	m	struct:ForeachState	typeref:typename:Tcl_Size	file:
bodyPtr	generic/tclCmdAH.c	/^    Tcl_Obj *bodyPtr;		\/* The script body of the command. *\/$/;"	m	struct:ForeachState	typeref:typename:Tcl_Obj *	file:
bodyPtr	generic/tclInt.h	/^    Tcl_Obj *bodyPtr;		\/* Points to the ByteCode object for$/;"	m	struct:Proc	typeref:typename:Tcl_Obj *
bool	macosx/tclMacOSXNotify.c	/^#define bool /;"	d	file:
bopen	compat/zlib/examples/gzjoin.c	/^local bin *bopen(char *name)$/;"	f	typeref:typename:local bin *
bos	generic/regguts.h	/^    color bos[2];		\/* colors, if any, assigned to BOS and BOL *\/$/;"	m	struct:cnfa	typeref:typename:color[2]
bos	generic/regguts.h	/^    color bos[2];		\/* colors, if any, assigned to BOS and BOL *\/$/;"	m	struct:nfa	typeref:typename:color[2]
bottomChanPtr	generic/tclIO.h	/^    Channel *bottomChanPtr;	\/* Refers to bottommost channel in a stack.$/;"	m	struct:ChannelState	typeref:typename:Channel *
bounds	generic/tclUtf.c	/^static const unsigned char bounds[28] = {$/;"	v	typeref:typename:const unsigned char[28]	file:
bracket	generic/regcomp.c	/^bracket($/;"	f	typeref:typename:void	file:
brackpart	generic/regcomp.c	/^brackpart($/;"	f	typeref:typename:void	file:
braid	compat/zlib/crc32.c	/^local void braid(z_crc_t ltl[][256], z_word_t big[][256], int n, int w) {$/;"	f	typeref:typename:local void
brbackd	generic/regc_lex.c	/^static const chr brbackd[] = {	\/* \\d within brackets *\/$/;"	v	typeref:typename:const chr[]	file:
brbacks	generic/regc_lex.c	/^static const chr brbacks[] = {	\/* \\s within brackets *\/$/;"	v	typeref:typename:const chr[]	file:
brbackw	generic/regc_lex.c	/^static const chr brbackw[] = {	\/* \\w within brackets *\/$/;"	v	typeref:typename:const chr[]	file:
breakOffset	generic/tclCompile.h	/^    Tcl_Size breakOffset;	\/* If LOOP_EXCEPTION_RANGE, the target PC$/;"	m	struct:__anone79d5a530208	typeref:typename:Tcl_Size
breakTargets	generic/tclCompile.h	/^    TCL_HASH_TYPE *breakTargets;\/* The offsets of the INST_JUMP4 instructions$/;"	m	struct:ExceptionAux	typeref:typename:TCL_HASH_TYPE *
break_on_malloc	generic/tclCkalloc.c	/^static size_t break_on_malloc = 0;$/;"	v	typeref:typename:size_t	file:
breakconstraintloop	generic/regc_nfa.c	/^breakconstraintloop(struct nfa * nfa, struct state * sinitial)$/;"	f	typeref:typename:void	file:
brenext	generic/regc_lex.c	/^brenext($/;"	f	typeref:typename:int	file:
bskip	compat/zlib/examples/gzjoin.c	/^local void bskip(bin *in, unsigned skip)$/;"	f	typeref:typename:local void
bstream	compat/zlib/contrib/minizip/unzip.c	/^    bz_stream bstream;          \/* bzLib stream structure for bziped *\/$/;"	m	struct:__anon3259ecee0108	typeref:typename:bz_stream	file:
bstream	compat/zlib/contrib/minizip/zip.c	/^    bz_stream bstream;          \/* bzLib stream structure for bziped *\/$/;"	m	struct:__anon7add25cb0108	typeref:typename:bz_stream	file:
bucket	generic/tclThreadAlloc.c	/^		unsigned char bucket;	\/* Bucket block allocated from. *\/$/;"	m	struct:Block::__anone59fb5e80108::__anone59fb5e8020a::__anone59fb5e80308	typeref:typename:unsigned char	file:
bucketIndex	generic/tclAlloc.c	/^#define bucketIndex	/;"	d	file:
bucketInfo	generic/tclThreadAlloc.c	/^} bucketInfo[NBUCKETS];$/;"	v	typeref:struct:__anone59fb5e80508[]
buckets	generic/tcl.h	/^    Tcl_HashEntry **buckets;	\/* Pointer to bucket array. Each element$/;"	m	struct:Tcl_HashTable	typeref:typename:Tcl_HashEntry **
buckets	generic/tclInt.h	/^    LiteralEntry **buckets;	\/* Pointer to bucket array. Each element$/;"	m	struct:LiteralTable	typeref:typename:LiteralEntry **
buckets	generic/tclThreadAlloc.c	/^    Bucket buckets[NBUCKETS];	\/* The buckets for this thread *\/$/;"	m	struct:Cache	typeref:typename:Bucket[]	file:
buf	compat/zlib/examples/gzappend.c	/^    unsigned char *buf;         \/* buffer *\/$/;"	m	struct:__anon9d4ca4100108	typeref:typename:unsigned char *	file:
buf	compat/zlib/examples/gzjoin.c	/^    unsigned char *buf;     \/* allocated buffer of length CHUNK *\/$/;"	m	struct:__anon52a4be880108	typeref:typename:unsigned char *	file:
buf	generic/tclIO.h	/^    char buf[TCLFLEXARRAY];	\/* Placeholder for real buffer. The real$/;"	m	struct:ChannelBuffer	typeref:typename:char[]
buf	generic/tclIOGT.c	/^    unsigned char *buf;		\/* Reference to the buffer area. *\/$/;"	m	struct:ResultBuffer	typeref:typename:unsigned char *	file:
buf	generic/tclIORChan.c	/^    char *buf;			\/* O: Where to store the read bytes *\/$/;"	m	struct:ForwardParamInput	typeref:typename:char *	file:
buf	generic/tclIORChan.c	/^    const char *buf;		\/* I: Where the bytes to write come from *\/$/;"	m	struct:ForwardParamOutput	typeref:typename:const char *	file:
buf	generic/tclIORTrans.c	/^    char *buf;			\/* I: Bytes to transform,$/;"	m	struct:ForwardParamTransform	typeref:typename:char *	file:
buf	generic/tclIORTrans.c	/^    unsigned char *buf;		\/* Reference to the buffer area. *\/$/;"	m	struct:__anon21e740770108	typeref:typename:unsigned char *	file:
bufLength	generic/tclIO.h	/^    Tcl_Size bufLength;		\/* How big is the buffer? *\/$/;"	m	struct:ChannelBuffer	typeref:typename:Tcl_Size
bufPtr	generic/tclIO.c	/^    ChannelBuffer *bufPtr;	\/* The current buffer of raw bytes being$/;"	m	struct:GetsState	typeref:typename:ChannelBuffer *	file:
bufPtr	win/tclWinConsole.c	/^    char *bufPtr;		\/* Pointer to buffer storage *\/$/;"	m	struct:RingBuffer	typeref:typename:char *	file:
bufSize	generic/tclIO.c	/^    Tcl_Size bufSize;		\/* Size of appended buffer. *\/$/;"	m	struct:CopyState	typeref:typename:Tcl_Size	file:
bufSize	generic/tclIO.h	/^    Tcl_Size bufSize;		\/* What size buffers to allocate? *\/$/;"	m	struct:ChannelState	typeref:typename:Tcl_Size
buffer	compat/zlib/contrib/iostream/zfstream.h	/^  gzfilebuf buffer;$/;"	m	class:gzfilestream_common	typeref:typename:gzfilebuf
buffer	compat/zlib/contrib/iostream3/zfstream.h	/^  char_type* buffer;$/;"	m	class:gzfilebuf	typeref:typename:char_type *
buffer	compat/zlib/contrib/untgz/untgz.c	/^  char               buffer[BLOCKSIZE];$/;"	m	union:tar_buffer	typeref:typename:char[]	file:
buffer	generic/tclIO.c	/^    char buffer[TCLFLEXARRAY];	\/* Copy buffer, this must be the last$/;"	m	struct:CopyState	typeref:typename:char[]	file:
buffer	win/nmakehlp.c	/^    char buffer[STATICBUFFERSIZE];$/;"	m	struct:__anona412af430108	typeref:typename:char[]	file:
buffer	win/tclWinConsole.c	/^    RingBuffer buffer;		\/* Buffer for data transferred between console$/;"	m	struct:ConsoleHandleInfo	typeref:typename:RingBuffer	file:
buffer_size	compat/zlib/contrib/iostream3/zfstream.h	/^  std::streamsize buffer_size;$/;"	m	class:gzfilebuf	typeref:typename:std::streamsize
buffered_data	compat/zlib/contrib/minizip/zip.c	/^    Byte buffered_data[Z_BUFSIZE];\/* buffer contain compressed data to be writ*\/$/;"	m	struct:__anon7add25cb0108	typeref:typename:Byte[]	file:
build-${PROJECT}	macosx/GNUmakefile	/^build-${PROJECT}:	target = ${BUILD_TARGET}$/;"	t
build-${PROJECT}	macosx/GNUmakefile	/^build-${PROJECT}: ${objdir}\/Makefile$/;"	t
buildInfoObjCmd	generic/tclBasic.c	/^buildInfoObjCmd($/;"	f	typeref:typename:int	file:
buildInfoObjCmd2	generic/tclBasic.c	/^buildInfoObjCmd2($/;"	f	typeref:typename:int	file:
buildTables	tools/uniParse.tcl	/^proc uni::buildTables {data} {$/;"	p	namespace:uni
build_bl_tree	compat/zlib/trees.c	/^local int build_bl_tree(deflate_state *s) {$/;"	f	typeref:typename:local int
build_tree	compat/zlib/trees.c	/^local void build_tree(deflate_state *s, tree_desc *desc) {$/;"	f	typeref:typename:local void
builtInCmds	generic/tclBasic.c	/^static const CmdInfo builtInCmds[] = {$/;"	v	typeref:typename:const CmdInfo[]	file:
burp	tests-perf/comparePerf.tcl	/^proc perf::compare::burp {test_sets} {$/;"	p	namespace:perf::compare
bye	compat/zlib/examples/gzappend.c	/^local void bye(char *msg1, char *msg2)$/;"	f	typeref:typename:local void
bypassSpaces	generic/tclDate.c	/^bypassSpaces($/;"	f	typeref:typename:const char *	file:
byte	compat/zlib/contrib/iostream2/zstream.h	/^    struct Val { unsigned char byte; size_t word; } val;$/;"	m	struct:zstringlen::Val	typeref:typename:unsigned char
byteArrEqual	compat/zlib/contrib/dotzlib/DotZLib/UnitTests.cs	/^        public static bool byteArrEqual( byte[] lhs, byte[] rhs )$/;"	m	class:DotZLibTests.Utils
byteCodeCount	generic/tclInt.h	/^    size_t byteCodeCount[32];	\/* ByteCode size distribution. *\/$/;"	m	struct:ByteCodeStats	typeref:typename:size_t[32]
byte_before_the_zipfile	compat/zlib/contrib/minizip/unzip.c	/^    ZPOS64_T byte_before_the_zipfile;\/* byte before the zipfile, (>0 for sfx)*\/$/;"	m	struct:__anon3259ecee0108	typeref:typename:ZPOS64_T	file:
byte_before_the_zipfile	compat/zlib/contrib/minizip/unzip.c	/^    ZPOS64_T byte_before_the_zipfile;\/* byte before the zipfile, (>0 for sfx)*\/$/;"	m	struct:__anon3259ecee0208	typeref:typename:ZPOS64_T	file:
byte_swap	compat/zlib/crc32.c	/^local z_word_t byte_swap(z_word_t word) {$/;"	f	typeref:typename:local z_word_t
bytes	generic/tcl.h	/^    char *bytes;		\/* This points to the first byte of the$/;"	m	struct:Tcl_Obj	typeref:typename:char *
bytes	generic/tclBinary.c	/^    unsigned char bytes[TCLFLEXARRAY];	\/* The array of bytes. The actual size of this$/;"	m	struct:__anon8c3fe00a0108	typeref:typename:unsigned char[]	file:
bytes	generic/tclDTrace.d	/^    char *bytes;$/;"	m	struct:Tcl_Obj	file:
bytes	generic/tclLink.c	/^    Tcl_Size bytes;		\/* Size of C variable array. This is 0 when$/;"	m	struct:__anonfc2fcf730108	typeref:typename:Tcl_Size	file:
bytesWrote	generic/tclIO.c	/^    int bytesWrote;		\/* The number of bytes of UTF-8 data$/;"	m	struct:GetsState	typeref:typename:int	file:
bythirds	compat/zlib/contrib/puff/pufftest.c	/^local size_t bythirds(size_t size)$/;"	f	typeref:typename:local size_t
c	generic/tclBasic.c	/^	char c[sizeof(short)];$/;"	m	union:Tcl_CreateInterp::__anon6e145607070a	typeref:typename:char[]	file:
c	generic/tclEncoding.c	/^	char c;$/;"	m	union:TclInitEncodingSubsystem::__anondb7a8e8c050a	typeref:typename:char	file:
c	generic/tclLink.c	/^	char c;$/;"	m	union:__anonfc2fcf730108::__anonfc2fcf73020a	typeref:typename:char	file:
c	libtommath/bn_s_mp_rand_jenkins.c	/^   uint64_t c;$/;"	m	struct:__anona23b32490108	typeref:typename:uint64_t	file:
cPtr	generic/tclLink.c	/^	char *cPtr;		\/* char array *\/$/;"	m	union:__anonfc2fcf730108::__anonfc2fcf73020a	typeref:typename:char *	file:
cache	generic/tclEnv.c	/^    char **cache;		\/* Array containing all of the environment$/;"	m	struct:__anon1e6e59ce0108	typeref:typename:char **	file:
cacheSize	generic/tclEnv.c	/^    Tcl_Size cacheSize;		\/* Number of env strings in cache. *\/$/;"	m	struct:__anon1e6e59ce0108	typeref:typename:Tcl_Size	file:
cachedBlocking	unix/tclUnixSock.c	/^    int cachedBlocking;		\/* Cache blocking mode of async socket. *\/$/;"	m	struct:TcpState	typeref:typename:int	file:
cachedBlocking	win/tclWinSock.c	/^    int cachedBlocking;		\/* Cache blocking mode of async socket. *\/$/;"	m	struct:TcpState	typeref:typename:int	file:
cachedNameObj	generic/tclOOInt.h	/^    Tcl_Obj *cachedNameObj;	\/* Cache of the name of the object. *\/$/;"	m	struct:Object	typeref:typename:Tcl_Obj *
cachedObjectVar	generic/tclOOMethod.c	/^    Tcl_Var cachedObjectVar;	\/* TODO: When to flush this cache? Can class$/;"	m	struct:OOResVarInfo	typeref:typename:Tcl_Var	file:
caddr_t	generic/tclAlloc.c	/^typedef size_t caddr_t;$/;"	t	typeref:typename:size_t	file:
calibrationInterv	win/tclWinTime.c	/^    DWORD calibrationInterv;	\/* Calibration interval in seconds (start 1$/;"	m	struct:__anon3cd8f0330108	typeref:typename:DWORD	file:
calibrationThread	win/tclWinTime.c	/^    HANDLE calibrationThread;	\/* Handle to the thread that keeps the virtual$/;"	m	struct:__anon3cd8f0330108	typeref:typename:HANDLE	file:
callChainPtr	generic/tclOOCall.c	/^    CallChain *callChainPtr;	\/* The call chain being built. *\/$/;"	m	struct:ChainBuilder	typeref:typename:CallChain *	file:
callLiteral	generic/tclInt.h	/^    Tcl_Obj *callLiteral;	\/* "CALL" literal for [info errorstack] *\/$/;"	m	struct:Interp	typeref:typename:Tcl_Obj *
callProc	generic/tclOO.h	/^    Tcl_MethodCallProc *callProc;$/;"	m	struct:Tcl_MethodType	typeref:typename:Tcl_MethodCallProc *
callProc	generic/tclOO.h	/^    Tcl_MethodCallProc2 *callProc;$/;"	m	struct:Tcl_MethodType2	typeref:typename:Tcl_MethodCallProc2 *
callPtr	generic/tclOOInt.h	/^    CallChain *callPtr;		\/* The actual call chain. *\/$/;"	m	struct:CallContext	typeref:typename:CallChain *
callSiteFlags	generic/tclOOInt.h	/^    int callSiteFlags;		\/* Flags from the call chain. Only interested$/;"	m	struct:ProcedureMethod	typeref:typename:int
call_zopen64	compat/zlib/contrib/minizip/ioapi.c	/^voidpf call_zopen64 (const zlib_filefunc64_32_def* pfilefunc, const void*filename, int mode) {$/;"	f	typeref:typename:voidpf
call_zseek64	compat/zlib/contrib/minizip/ioapi.c	/^long call_zseek64 (const zlib_filefunc64_32_def* pfilefunc,voidpf filestream, ZPOS64_T offset, i/;"	f	typeref:typename:long
call_ztell64	compat/zlib/contrib/minizip/ioapi.c	/^ZPOS64_T call_ztell64 (const zlib_filefunc64_32_def* pfilefunc, voidpf filestream) {$/;"	f	typeref:typename:ZPOS64_T
callbackPtr	generic/tclInt.h	/^    struct NRE_callback *callbackPtr;$/;"	m	struct:ExecEnv	typeref:struct:NRE_callback *
callbacks	generic/tclInt.h	/^	Tcl_HashTable callbacks;\/* Mapping from (interp,type) pair to data$/;"	m	struct:Interp::__anon1eb6b3550808	typeref:typename:Tcl_HashTable
caller	generic/tclInt.h	/^    CorContext caller;		\/* Caller's saved execution context. *\/$/;"	m	struct:CoroutineData	typeref:typename:CorContext
callerEEPtr	generic/tclInt.h	/^    struct ExecEnv *callerEEPtr;\/* The execution environment for the caller of$/;"	m	struct:CoroutineData	typeref:struct:ExecEnv *
callerPtr	generic/tclInt.h	/^    struct CallFrame *callerPtr;\/* Value of interp->framePtr when this$/;"	m	struct:CallFrame	typeref:struct:CallFrame *
callerVarPtr	generic/tclInt.h	/^    struct CallFrame *callerVarPtr;$/;"	m	struct:CallFrame	typeref:struct:CallFrame *
caltdissect	generic/regexec.c	/^caltdissect($/;"	f	typeref:typename:int	file:
cancelTable	generic/tclBasic.c	/^static Tcl_HashTable cancelTable;$/;"	v	typeref:typename:Tcl_HashTable	file:
cancelTableInitialized	generic/tclBasic.c	/^static int cancelTableInitialized = 0;	\/* 0 means not yet initialized. *\/$/;"	v	typeref:typename:int	file:
capacity	win/tclWinConsole.c	/^    Tcl_Size capacity;		\/* Size of the buffer in RingBufferChar *\/$/;"	m	struct:RingBuffer	typeref:typename:Tcl_Size	file:
carc	generic/regguts.h	/^struct carc {$/;"	s
carc_cmp	generic/regc_nfa.c	/^carc_cmp($/;"	f	typeref:typename:int	file:
carcsort	generic/regc_nfa.c	/^carcsort($/;"	f	typeref:typename:void	file:
casecmp	generic/regc_locale.c	/^casecmp($/;"	f	typeref:typename:int	file:
cat	tools/mkVfs.tcl	/^proc cat fname {$/;"	p
cat32.$(OBJEXT)	win/Makefile.in	/^cat32.$(OBJEXT): cat.c$/;"	t
catchDepth	generic/tclAssembly.c	/^    int catchDepth;		\/* Number of nested catches in which the basic$/;"	m	struct:BasicBlock	typeref:typename:int	file:
catchOffset	generic/tclCompile.h	/^    Tcl_Size catchOffset;	\/* If a CATCH_EXCEPTION_RANGE, the target PC$/;"	m	struct:__anone79d5a530208	typeref:typename:Tcl_Size
catchState	generic/tclAssembly.c	/^    enum BasicBlockCatchState catchState;$/;"	m	struct:BasicBlock	typeref:enum:BasicBlockCatchState	file:
catchTop	generic/tclExecute.c	/^    Tcl_Obj **catchTop;		\/* These fields are used on return TO this *\/$/;"	m	struct:__anon999f4b180108	typeref:typename:Tcl_Obj **	file:
catchTop	generic/tclExecute.c	/^#define catchTop	(TD->catchTop)/;"	d	file:
caterr	unix/tclLoadAix.c	/^caterr($/;"	f	typeref:typename:void	file:
cbClsExtra	unix/tclSelectNotfy.c	/^    int cbClsExtra;$/;"	m	struct:__anon69aa703c0408	typeref:typename:int	file:
cbWndExtra	unix/tclSelectNotfy.c	/^    int cbWndExtra;$/;"	m	struct:__anon69aa703c0408	typeref:typename:int	file:
cbracket	generic/regcomp.c	/^cbracket($/;"	f	typeref:typename:void	file:
cbrdissect	generic/regexec.c	/^cbrdissect($/;"	f	typeref:typename:int	file:
cc	tools/tclsh.svg	/^   inkscape:export-ydpi="8.4399996">$/;"	n	uri:http://creativecommons.org/ns#
cclass	generic/regc_locale.c	/^cclass($/;"	f	typeref:struct:cvec *	file:
ccolor	generic/regguts.h	/^    color ccolor[BYTTAB];$/;"	m	struct:colors	typeref:typename:color[]
ccondissect	generic/regexec.c	/^ccondissect($/;"	f	typeref:typename:int	file:
ccrc	compat/zlib/examples/gzlog.c	/^    ulong ccrc;     \/* crc of compressed data *\/$/;"	m	struct:log	typeref:typename:ulong	file:
cd	generic/regguts.h	/^    struct colordesc *cd;$/;"	m	struct:colormap	typeref:struct:colordesc *
cdissect	generic/regexec.c	/^cdissect($/;"	f	typeref:typename:int	file:
cdspace	generic/regguts.h	/^    struct colordesc cdspace[NINLINECDS];$/;"	m	struct:colormap	typeref:struct:colordesc[]
cdtors	unix/tclLoadAix.c	/^    CdtorPtr cdtors;		\/* optional C++ constructors *\/$/;"	m	struct:Module	typeref:typename:CdtorPtr	file:
celt	generic/regcustom.h	/^typedef int celt;		\/* Type to hold chr, or NOCELT *\/$/;"	t	typeref:typename:int
central_dir	compat/zlib/contrib/minizip/zip.c	/^    linkedlist_data central_dir;\/* datablock with central dir in construction*\/$/;"	m	struct:__anon7add25cb0208	typeref:typename:linkedlist_data	file:
central_header	compat/zlib/contrib/minizip/zip.c	/^    char* central_header;       \/* central header data for the current file *\/$/;"	m	struct:__anon7add25cb0108	typeref:typename:char *	file:
central_pos	compat/zlib/contrib/minizip/unzip.c	/^    ZPOS64_T central_pos;          \/* position of the beginning of the central dir*\/$/;"	m	struct:__anon3259ecee0208	typeref:typename:ZPOS64_T	file:
cfg	generic/tclPkgConfig.c	/^static Tcl_Config const cfg[] = {$/;"	v	typeref:typename:Tcl_Config const[]	file:
cfgMethods	generic/tclOO.c	/^}, cfgMethods[] = {$/;"	v	typeref:typename:const DeclaredClassMethod[]	file:
cflags	generic/regcomp.c	/^    int cflags;			\/* copy of compile flags *\/$/;"	m	struct:vars	typeref:typename:int	file:
cflags	generic/regguts.h	/^    int cflags;			\/* copy of compile flags *\/$/;"	m	struct:guts	typeref:typename:int
chPtr	generic/tclIO.h	/^    struct ChannelHandler *chPtr;\/* List of channel handlers registered for$/;"	m	struct:ChannelState	typeref:struct:ChannelHandler *
chain	generic/regguts.h	/^    struct subre *chain;	\/* for bookkeeping and error cleanup *\/$/;"	m	struct:subre	typeref:struct:subre *
chain	generic/tclDictObj.c	/^    Tcl_Obj *chain;		\/* Linked list used for invalidating the$/;"	m	struct:Dict	typeref:typename:Tcl_Obj *	file:
chain	generic/tclOOInt.h	/^    MInvoke *chain;		\/* Array of call chain entries. May point to$/;"	m	struct:CallChain	typeref:typename:MInvoke *
chainCache	generic/tclOOInt.h	/^    Tcl_HashTable *chainCache;	\/* Place to keep unused contexts. This table$/;"	m	struct:Object	typeref:typename:Tcl_HashTable *
chainHashType	generic/tclDictObj.c	/^static const Tcl_HashKeyType chainHashType = {$/;"	v	typeref:typename:const Tcl_HashKeyType	file:
chainlenwmask	compat/zlib/contrib/asm686/match.S	/^#define	chainlenwmask	/;"	d	file:
chainlenwmask	compat/zlib/contrib/gcc_gvmat64/gvmat64.S	/^#define chainlenwmask /;"	d	file:
chan	generic/tclIORChan.c	/^    Tcl_Channel chan;		\/* Back reference to generic channel$/;"	m	struct:__anon92d8dd290108	typeref:typename:Tcl_Channel	file:
chan	generic/tclIORTrans.c	/^    Tcl_Channel chan;		\/* Back reference to the channel of the$/;"	m	struct:__anon21e740770208	typeref:typename:Tcl_Channel	file:
chan	generic/tclTest.c	/^    Tcl_Channel chan;		\/* Detached channel *\/$/;"	m	struct:TestChannel	typeref:typename:Tcl_Channel	file:
chan	generic/tclZipfs.c	/^    Tcl_Channel chan;		\/* Channel handle or NULL *\/$/;"	m	struct:ZipFile	typeref:typename:Tcl_Channel	file:
chan	generic/tclZlib.c	/^    Tcl_Channel chan;		\/* Reference to the channel itself. *\/$/;"	m	struct:__anon1d0b6d960308	typeref:typename:Tcl_Channel	file:
chanInfoPtr	win/tclWinConsole.c	/^    ConsoleChannelInfo *chanInfoPtr;$/;"	m	struct:__anonf117b5370108	typeref:typename:ConsoleChannelInfo *	file:
chanMsg	generic/tclIO.h	/^    Tcl_Obj *chanMsg;$/;"	m	struct:ChannelState	typeref:typename:Tcl_Obj *
chanMsg	generic/tclInt.h	/^    Tcl_Obj *chanMsg;		\/* Error message set by channel drivers, for$/;"	m	struct:Interp	typeref:typename:Tcl_Obj *
chanObjType	generic/tclIO.c	/^static const Tcl_ObjType chanObjType = {$/;"	v	typeref:typename:const Tcl_ObjType	file:
chanPtr	generic/tclIO.c	/^    Channel *chanPtr;		\/* The channel structure for this channel. *\/$/;"	m	struct:ChannelHandler	typeref:typename:Channel *	file:
chanPtr	generic/tclIO.h	/^    struct Channel *chanPtr;	\/* The channel for which this script is$/;"	m	struct:EventScriptRecord	typeref:struct:Channel *
change_file_date	compat/zlib/contrib/minizip/miniunz.c	/^static void change_file_date(const char *filename, uLong dosdate, tm_unz tmu_date) {$/;"	f	typeref:typename:void	file:
changearctarget	generic/regc_nfa.c	/^changearctarget(struct arc * a, struct state * newto)$/;"	f	typeref:typename:void	file:
changeover	generic/tclDate.h	/^    int changeover;$/;"	m	struct:ClockLastTZOffs	typeref:typename:int
channel	generic/tclTest.c	/^    Tcl_Channel channel;	\/* Channel associated with this socket. *\/$/;"	m	struct:TcpState	typeref:typename:Tcl_Channel	file:
channel	unix/tclUnixChan.c	/^    Tcl_Channel channel;	\/* Channel associated with this file. *\/$/;"	m	struct:__anone1e2a72a0108	typeref:typename:Tcl_Channel	file:
channel	unix/tclUnixPipe.c	/^    Tcl_Channel channel;	\/* Channel associated with this file. *\/$/;"	m	struct:__anon004fe33e0108	typeref:typename:Tcl_Channel	file:
channel	unix/tclUnixSock.c	/^    Tcl_Channel channel;	\/* Channel associated with this file. *\/$/;"	m	struct:TcpState	typeref:typename:Tcl_Channel	file:
channel	win/tclWinChan.c	/^    Tcl_Channel channel;	\/* Pointer to channel structure. *\/$/;"	m	struct:FileInfo	typeref:typename:Tcl_Channel	file:
channel	win/tclWinConsole.c	/^    Tcl_Channel channel;	\/* Pointer to channel structure. *\/$/;"	m	struct:ConsoleChannelInfo	typeref:typename:Tcl_Channel	file:
channel	win/tclWinPipe.c	/^    Tcl_Channel channel;	\/* Pointer to channel structure. *\/$/;"	m	struct:PipeInfo	typeref:typename:Tcl_Channel	file:
channel	win/tclWinSerial.c	/^    Tcl_Channel channel;	\/* Pointer to channel structure. *\/$/;"	m	struct:SerialInfo	typeref:typename:Tcl_Channel	file:
channel	win/tclWinSock.c	/^    Tcl_Channel channel;	\/* Channel associated with this socket. *\/$/;"	m	struct:TcpState	typeref:typename:Tcl_Channel	file:
channelName	generic/tclIO.h	/^    char *channelName;		\/* The name of the channel instance in Tcl$/;"	m	struct:ChannelState	typeref:typename:char *
char	tools/index.tcl	/^proc char name {}$/;"	p
charf	compat/zlib/zconf.h	/^#  define charf                 z_charf$/;"	d
charf	compat/zlib/zconf.h	/^typedef char  FAR charf;$/;"	t	typeref:typename:char FAR
charf	compat/zlib/zconf.h.in	/^#  define charf                 z_charf$/;"	d	file:
charf	compat/zlib/zconf.h.in	/^typedef char  FAR charf;$/;"	t	typeref:typename:char FAR	file:
charmap	compat/strncasecmp.c	/^static const unsigned char charmap[] = {$/;"	v	typeref:typename:const unsigned char[]	file:
chars	generic/tclScan.c	/^    Tcl_UniChar *chars;$/;"	m	struct:__anon0c1044aa0208	typeref:typename:Tcl_UniChar *	file:
charsWrote	generic/tclIO.c	/^    int charsWrote;		\/* The corresponding number of UTF-8$/;"	m	struct:GetsState	typeref:typename:int	file:
chdirProc	generic/tcl.h	/^    Tcl_FSChdirProc *chdirProc;	\/* Called by 'Tcl_FSChdir()'.  For a virtual$/;"	m	struct:Tcl_Filesystem	typeref:typename:Tcl_FSChdirProc *
check	compat/zlib/Makefile.in	/^check: test$/;"	t
check	compat/zlib/examples/gun.c	/^    int check;                  \/* true if checking crc and total *\/$/;"	m	struct:outd	typeref:typename:int	file:
check	compat/zlib/inflate.h	/^    unsigned long check;        \/* protected copy of check value *\/$/;"	m	struct:inflate_state	typeref:typename:unsigned long
checkCommand	generic/tclTestProcBodyObj.c	/^static const char checkCommand[] = "check";$/;"	v	typeref:typename:const char[]	file:
checkForwardRuleRefs	tools/tclZIC.tcl	/^proc checkForwardRuleRefs {} {$/;"	p
checkLAConstraint	generic/rege_dfa.c	/^checkLAConstraint($/;"	f	typeref:typename:int	file:
checkMasks	macosx/tclMacOSXNotify.c	/^    SelectMasks checkMasks;	\/* This structure is used to build up the$/;"	m	struct:ThreadSpecificData	typeref:typename:SelectMasks	file:
checkMasks	unix/tclSelectNotfy.c	/^    SelectMasks checkMasks;	\/* This structure is used to build up the$/;"	m	struct:ThreadSpecificData	typeref:typename:SelectMasks	file:
checkProc	generic/tclNotify.c	/^    Tcl_EventCheckProc *checkProc;$/;"	m	struct:EventSource	typeref:typename:Tcl_EventCheckProc *	file:
check_exist_file	compat/zlib/contrib/minizip/minizip.c	/^static int check_exist_file(const char* filename) {$/;"	f	typeref:typename:int	file:
check_match	compat/zlib/deflate.c	/^#  define check_match(/;"	d	file:
check_match	compat/zlib/deflate.c	/^local void check_match(deflate_state *s, IPos start, IPos match, int length) {$/;"	f	typeref:typename:local void
checkdoc	unix/Makefile.in	/^checkdoc: $(TCL_LIB_FILE)$/;"	t
checkexports	unix/Makefile.in	/^checkexports: $(TCL_LIB_FILE)$/;"	t
checkstubs	unix/Makefile.in	/^checkstubs: $(TCL_LIB_FILE)$/;"	t
checkuchar	unix/Makefile.in	/^checkuchar:$/;"	t
chew	tests-perf/comparePerf.tcl	/^proc perf::compare::chew {test_sets} {$/;"	p	namespace:perf::compare
child	generic/tclInterp.c	/^    Child child;		\/* Information necessary for this interp to$/;"	m	struct:__anon913711770408	typeref:typename:Child	file:
childCmd	generic/tclInterp.c	/^    Tcl_Command	childCmd;	\/* Command for alias in child interp. *\/$/;"	m	struct:Target	typeref:typename:Tcl_Command	file:
childCmd	generic/tclInterp.c	/^    Tcl_Command childCmd;	\/* Source command in child interpreter, bound$/;"	m	struct:__anon913711770108	typeref:typename:Tcl_Command	file:
childCmdOptionsEnum	generic/tclInterp.c	/^    enum childCmdOptionsEnum {$/;"	g	function:NRChildCmd	file:
childEntryPtr	generic/tclInterp.c	/^    Tcl_HashEntry *childEntryPtr;$/;"	m	struct:__anon913711770208	typeref:typename:Tcl_HashEntry *	file:
childInterp	generic/tclInterp.c	/^    Tcl_Interp	*childInterp;	\/* The child interpreter. *\/$/;"	m	struct:__anon913711770208	typeref:typename:Tcl_Interp *	file:
childInterp	generic/tclInterp.c	/^    Tcl_Interp *childInterp;	\/* Child Interpreter. *\/$/;"	m	struct:Target	typeref:typename:Tcl_Interp *	file:
childTable	generic/tclInt.h	/^    Tcl_HashTable childTable;	\/* Contains any child namespaces. Indexed by$/;"	m	struct:Namespace	typeref:typename:Tcl_HashTable
childTable	generic/tclInterp.c	/^    Tcl_HashTable childTable;	\/* Hash table for child interpreters. Maps$/;"	m	struct:__anon913711770308	typeref:typename:Tcl_HashTable	file:
childTablePtr	generic/tclInt.h	/^    Tcl_HashTable *childTablePtr;$/;"	m	struct:Namespace	typeref:typename:Tcl_HashTable *
childTree	generic/tclStrIdxTree.h	/^    TclStrIdxTree childTree;$/;"	m	struct:TclStrIdx	typeref:typename:TclStrIdxTree
childhook	library/auto.tcl	/^proc auto_mkindex_parser::childhook {cmd} {$/;"	p	namespace:auto_mkindex_parser
chksum	compat/zlib/contrib/untgz/untgz.c	/^  char chksum[8];               \/* 148 *\/$/;"	m	struct:tar_header	typeref:typename:char[8]	file:
chmod	compat/zlib/contrib/untgz/untgz.c	/^#    define chmod(path,mode)    _chmod(/;"	d	file:
chr	generic/regcustom.h	/^typedef Tcl_UniChar chr;	\/* The type itself. *\/$/;"	t	typeref:typename:Tcl_UniChar
chrnamed	generic/regc_lex.c	/^chrnamed($/;"	f	typeref:typename:chr	file:
chrs	generic/regguts.h	/^    chr *chrs;			\/* pointer to vector of chrs *\/$/;"	m	struct:cvec	typeref:typename:chr *
chrspace	generic/regguts.h	/^    size_t chrspace;		\/* number of chrs possible *\/$/;"	m	struct:cvec	typeref:typename:size_t
ci	compat/zlib/contrib/minizip/zip.c	/^    curfile64_info ci;            \/* info on the file currently writing *\/$/;"	m	struct:__anon7add25cb0208	typeref:typename:curfile64_info	file:
citerdissect	generic/regexec.c	/^citerdissect(struct vars * v,$/;"	f	typeref:typename:int	file:
ckalloc	generic/tcl.h	/^#   define ckalloc /;"	d
ckallocInit	generic/tclCkalloc.c	/^static int ckallocInit = 0;$/;"	v	typeref:typename:int	file:
ckallocMutexPtr	generic/tclCkalloc.c	/^static Tcl_Mutex *ckallocMutexPtr;$/;"	v	typeref:typename:Tcl_Mutex *	file:
ckfree	generic/tcl.h	/^#	define ckfree /;"	d
ckfree	generic/tcl.h	/^#	define ckfree(/;"	d
ckrealloc	generic/tcl.h	/^#	define ckrealloc /;"	d
ckrealloc	generic/tcl.h	/^#	define ckrealloc(/;"	d
clNext	generic/tclAssembly.c	/^    Tcl_Size* clNext;		\/* Invisible continuation line for$/;"	m	struct:AssemblyEnv	typeref:typename:Tcl_Size *	file:
clNext	generic/tclCompile.h	/^    Tcl_Size *clNext;		\/* If not NULL, it refers to the next slot in$/;"	m	struct:CompileEnv	typeref:typename:Tcl_Size *
claims	generic/tclIOUtil.c	/^    size_t claims;$/;"	m	struct:__anonf7a439bb0108	typeref:typename:size_t	file:
classChainCache	generic/tclOOInt.h	/^    Tcl_HashTable *classChainCache;$/;"	m	struct:Class	typeref:typename:Tcl_HashTable *
classCls	generic/tclOOInt.h	/^    Class *classCls;		\/* The class of all classes. *\/$/;"	m	struct:Foundation	typeref:typename:Class *
classConstructor	generic/tclOO.c	/^static const Tcl_MethodType classConstructor = {$/;"	v	typeref:typename:const Tcl_MethodType	file:
classMethods	generic/tclOOInt.h	/^    Tcl_HashTable classMethods;	\/* Hash table of all methods. Hash maps from$/;"	m	struct:Class	typeref:typename:Tcl_HashTable
className	unix/tclSelectNotfy.c	/^static const wchar_t className[] = L"TclNotifier";$/;"	v	typeref:typename:const wchar_t[]	file:
className	win/tclWinNotify.c	/^static const WCHAR className[] = L"TclNotifier";$/;"	v	typeref:typename:const WCHAR[]	file:
className	win/tclWinSock.c	/^static const WCHAR className[] = L"TclSocket";$/;"	v	typeref:typename:const WCHAR[]	file:
classPtr	generic/tclOOInt.h	/^    Class *classPtr;		\/* This is non-NULL for all classes, and NULL$/;"	m	struct:Object	typeref:typename:Class *
classes	generic/regc_locale.c	/^    enum classes {$/;"	g	function:cclass	file:
clean	compat/zlib/Makefile.in	/^clean: minizip-clean$/;"	t
clean	compat/zlib/contrib/blast/Makefile	/^clean:$/;"	t
clean	compat/zlib/contrib/delphi/zlibd32.mak	/^clean:$/;"	t
clean	compat/zlib/contrib/minizip/Makefile	/^clean:$/;"	t
clean	compat/zlib/contrib/pascal/zlibd32.mak	/^clean:$/;"	t
clean	compat/zlib/contrib/puff/Makefile	/^clean:$/;"	t
clean	compat/zlib/contrib/untgz/Makefile	/^clean:$/;"	t
clean	compat/zlib/nintendods/Makefile	/^clean:$/;"	t
clean	compat/zlib/watcom/watcom_f.mak	/^clean: .SYMBOLIC$/;"	t
clean	compat/zlib/watcom/watcom_l.mak	/^clean: .SYMBOLIC$/;"	t
clean	macosx/GNUmakefile	/^clean			: ${clean}$/;"	t
clean	macosx/GNUmakefile	/^clean			:= ${styles:%=clean-%}$/;"	m
clean	tools/encoding/Makefile	/^clean:$/;"	t
clean	unix/Makefile.in	/^clean: clean-packages$/;"	t
clean	unix/dltest/Makefile.in	/^clean:$/;"	t
clean	win/Makefile.in	/^clean: cleanhelp clean-packages$/;"	t
clean-${PROJECT}	macosx/GNUmakefile	/^clean-${PROJECT} distclean-${PROJECT} test-${PROJECT}: \\$/;"	t
clean-${PROJECT}	macosx/GNUmakefile	/^clean-${PROJECT}: %-${PROJECT}:$/;"	t
clean-%	macosx/GNUmakefile	/^clean-%:		action := clean-$/;"	t
clean-packages	unix/Makefile.in	/^clean-packages:$/;"	t
clean-packages	win/Makefile.in	/^clean-packages:$/;"	t
cleanUp	compat/zlib/contrib/dotzlib/DotZLib/GZipStream.cs	/^        private void cleanUp(bool isDisposing)$/;"	m	class:DotZLib.GZipStream	file:
cleanhelp	win/Makefile.in	/^cleanhelp:$/;"	t
cleanst	generic/regcomp.c	/^cleanst($/;"	f	typeref:typename:void	file:
cleanup	compat/zlib/examples/enough.c	/^local void cleanup(void) {$/;"	f	typeref:typename:local void
cleanup	generic/regc_nfa.c	/^cleanup($/;"	f	typeref:typename:void	file:
cleanup	library/auto.tcl	/^    proc cleanup {} {$/;"	p	namespace:::auto_mkindex_parser
cleanup	library/http/http.tcl	/^proc http::cleanup {token} {$/;"	p	namespace:http
cleanupHttpTest	tests/httpTest.tcl	/^proc httpTest::cleanupHttpTest {} {$/;"	p	namespace:httpTest
cleanupHttpTestScript	tests/httpTestScript.tcl	/^proc httpTestScript::cleanupHttpTestScript {} {$/;"	p	namespace:httpTestScript
clearFlags	generic/tclDate.h	/^    unsigned short clearFlags;$/;"	m	struct:ClockScanTokenMap	typeref:typename:unsigned short
clearcvec	generic/regc_cvec.c	/^clearcvec($/;"	f	typeref:struct:cvec *	file:
cleartraverse	generic/regc_nfa.c	/^cleartraverse($/;"	f	typeref:typename:void	file:
clen	compat/zlib/examples/gzlog.c	/^    ulong clen;     \/* length (modulo 2^32) of compressed data *\/$/;"	m	struct:log	typeref:typename:ulong	file:
clientData	generic/tcl.h	/^    void *clientData;		\/* Application stores something here with$/;"	m	struct:Tcl_HashEntry	typeref:typename:void *
clientData	generic/tcl.h	/^    void *clientData;		\/* Arbitrary value associated with encoding$/;"	m	struct:Tcl_EncodingType	typeref:typename:void *
clientData	generic/tcl.h	/^    void *clientData;		\/* Arbitrary value associated with this$/;"	m	struct:Tcl_Namespace	typeref:typename:void *
clientData	generic/tcl.h	/^    void *clientData;		\/* ClientData for string proc. *\/$/;"	m	struct:__anon937aefea0708	typeref:typename:void *
clientData	generic/tcl.h	/^    void *clientData;		\/* Word to pass to function callbacks. *\/$/;"	m	struct:__anon937aefea0b08	typeref:typename:void *
clientData	generic/tclAsync.c	/^    void *clientData;		\/* Value to pass to handler when it is$/;"	m	struct:AsyncHandler	typeref:typename:void *	file:
clientData	generic/tclBasic.c	/^    void *clientData;		\/* Not used. *\/$/;"	m	struct:__anon6e1456070108	typeref:typename:void *	file:
clientData	generic/tclBasic.c	/^    void *clientData; \/* Arbitrary value to pass to proc function. *\/$/;"	m	struct:__anon6e1456070808	typeref:typename:void *	file:
clientData	generic/tclClock.c	/^    void *clientData;		\/* Any clientData to give the command (if NULL$/;"	m	struct:ClockCommand	typeref:typename:void *	file:
clientData	generic/tclCompile.h	/^    void *clientData;		\/* The compilation data itself. *\/$/;"	m	struct:AuxData	typeref:typename:void *
clientData	generic/tclEncoding.c	/^    void *clientData;		\/* Arbitrary value associated with encoding$/;"	m	struct:__anondb7a8e8c0108	typeref:typename:void *	file:
clientData	generic/tclEvent.c	/^    void *clientData;		\/* One word of information to pass to proc. *\/$/;"	m	struct:ExitHandler	typeref:typename:void *	file:
clientData	generic/tclEvent.c	/^    void *clientData;		\/* The one argument to Main() *\/$/;"	m	struct:__anon850510a70308	typeref:typename:void *	file:
clientData	generic/tclIO.c	/^    void *clientData;		\/* Arbitrary one-word data to pass$/;"	m	struct:CloseCallback	typeref:typename:void *	file:
clientData	generic/tclIO.c	/^    void *clientData;		\/* Argument to pass to procedure. *\/$/;"	m	struct:ChannelHandler	typeref:typename:void *	file:
clientData	generic/tclIOUtil.c	/^    void *clientData;		\/* Client-specific data for the filesystem$/;"	m	struct:FilesystemRecord	typeref:typename:void *	file:
clientData	generic/tclInt.h	/^    void *clientData;		\/* An arbitrary value associated with this$/;"	m	struct:Namespace	typeref:typename:void *
clientData	generic/tclInt.h	/^    void *clientData;		\/* Any clientData to give the command. *\/$/;"	m	struct:__anon1eb6b3550708	typeref:typename:void *
clientData	generic/tclInt.h	/^    void *clientData;		\/* Arbitrary value passed to string proc. *\/$/;"	m	struct:Command	typeref:typename:void *
clientData	generic/tclInt.h	/^    void *clientData;		\/* Arbitrary value to pass to proc. *\/$/;"	m	struct:Trace	typeref:typename:void *
clientData	generic/tclInt.h	/^    void *clientData;		\/* Argument to pass to proc. *\/$/;"	m	struct:CommandTrace	typeref:typename:void *
clientData	generic/tclInt.h	/^    void *clientData;		\/* Argument to pass to proc. *\/$/;"	m	struct:VarTrace	typeref:typename:void *
clientData	generic/tclInt.h	/^    void *clientData;		\/* Client data is the load handle in the$/;"	m	struct:Tcl_LoadHandle_	typeref:typename:void *
clientData	generic/tclInt.h	/^    void *clientData;		\/* Context for above function, or Tcl_Obj* if$/;"	m	struct:__anon1eb6b3550508	typeref:typename:void *
clientData	generic/tclInt.h	/^    void *clientData;		\/* Pointer to some context that is used by$/;"	m	struct:CallFrame	typeref:typename:void *
clientData	generic/tclInt.h	/^    void *clientData;		\/* Value to pass to proc. *\/$/;"	m	struct:AssocData	typeref:typename:void *
clientData	generic/tclInterp.c	/^    void *clientData;		\/* Opaque argument to the handler callback. *\/$/;"	m	struct:LimitHandler	typeref:typename:void *	file:
clientData	generic/tclNotify.c	/^    void *clientData;		\/* Opaque handle for platform specific$/;"	m	struct:ThreadSpecificData	typeref:typename:void *	file:
clientData	generic/tclNotify.c	/^    void *clientData;$/;"	m	struct:EventSource	typeref:typename:void *	file:
clientData	generic/tclOOInt.h	/^    void *clientData;		\/* Type-specific data. *\/$/;"	m	struct:Method	typeref:typename:void *
clientData	generic/tclOOInt.h	/^    void *clientData;$/;"	m	struct:ProcedureMethod	typeref:typename:void *
clientData	generic/tclPkg.c	/^    const void *clientData;	\/* Client data. *\/$/;"	m	struct:__anon1f3382670108	typeref:typename:const void *	file:
clientData	generic/tclPreserve.c	/^    void *clientData;		\/* Address of preserved block. *\/$/;"	m	struct:__anone9498b710108	typeref:typename:void *	file:
clientData	generic/tclTimer.c	/^    void *clientData;		\/* Argument to pass to proc. *\/$/;"	m	struct:TimerHandler	typeref:typename:void *	file:
clientData	generic/tclTimer.c	/^    void *clientData;		\/* Value to pass to proc. *\/$/;"	m	struct:IdleHandler	typeref:typename:void *	file:
clientData	generic/tclTrace.c	/^    void *clientData;		\/* Client data from Tcl_CreateTrace *\/$/;"	m	struct:__anonfe0b53740408	typeref:typename:void *	file:
clientData	generic/tclTrace.c	/^    void *clientData;$/;"	m	struct:__anonfe0b53740508	typeref:typename:void *	file:
clientData	macosx/tclMacOSXNotify.c	/^    void *clientData;		\/* Argument to pass to proc. *\/$/;"	m	struct:FileHandler	typeref:typename:void *	file:
clientData	unix/tclEpollNotfy.c	/^    void *clientData;		\/* Argument to pass to proc. *\/$/;"	m	struct:FileHandler	typeref:typename:void *	file:
clientData	unix/tclKqueueNotfy.c	/^    void *clientData;		\/* Argument to pass to proc. *\/$/;"	m	struct:FileHandler	typeref:typename:void *	file:
clientData	unix/tclSelectNotfy.c	/^    void *clientData;		\/* Argument to pass to proc. *\/$/;"	m	struct:FileHandler	typeref:typename:void *	file:
clientData	unix/tclXtNotify.c	/^    void *clientData;		\/* Argument to pass to proc. *\/$/;"	m	struct:FileHandler	typeref:typename:void *	file:
clientData	win/tclWinInt.h	/^    void *clientData;		\/* Referenced data of the main thread *\/$/;"	m	struct:TclPipeThreadInfo	typeref:typename:void *
clientDataPtr	generic/tclPkg.c	/^    void *clientDataPtr;$/;"	m	struct:Require	typeref:typename:void *	file:
clientDataPtr	generic/tclPkg.c	/^    void *clientDataPtr;$/;"	m	struct:RequireProcArgs	typeref:typename:void *	file:
clockCommands	generic/tclClock.c	/^static const struct ClockCommand clockCommands[] = {$/;"	v	typeref:typename:const struct ClockCommand[]	file:
clockCommands	generic/tclClockClassic.c	/^static const struct ClockCommand clockCommands[] = {$/;"	v	typeref:typename:const struct ClockCommand[]	file:
cloneClientdataProc	generic/tclOOInt.h	/^    TclOO_PmCDCloneProc *cloneClientdataProc;$/;"	m	struct:ProcedureMethod	typeref:typename:TclOO_PmCDCloneProc *
cloneProc	generic/tclOO.h	/^    Tcl_CloneProc *cloneProc;	\/* How to copy the metadata, or NULL if the$/;"	m	struct:Tcl_ObjectMetadataType	typeref:typename:Tcl_CloneProc *
cloneProc	generic/tclOO.h	/^    Tcl_CloneProc *cloneProc;	\/* How to copy this method's type-specific$/;"	m	struct:Tcl_MethodType	typeref:typename:Tcl_CloneProc *
cloneProc	generic/tclOO.h	/^    Tcl_CloneProc *cloneProc;	\/* How to copy this method's type-specific$/;"	m	struct:Tcl_MethodType2	typeref:typename:Tcl_CloneProc *
clonedName	generic/tclOOInt.h	/^    Tcl_Obj *clonedName;	\/* Shared object containing the name of a$/;"	m	struct:Foundation	typeref:typename:Tcl_Obj *
cloneouts	generic/regc_nfa.c	/^cloneouts($/;"	f	typeref:typename:void	file:
clonesuccessorstates	generic/regc_nfa.c	/^clonesuccessorstates($/;"	f	typeref:typename:void	file:
close	compat/zlib/contrib/iostream/zfstream.cpp	/^gzfilebuf *gzfilebuf::close() {$/;"	f	class:gzfilebuf	typeref:typename:gzfilebuf *
close	compat/zlib/contrib/iostream/zfstream.cpp	/^void gzfilestream_common::close() {$/;"	f	class:gzfilestream_common	typeref:typename:void
close	compat/zlib/contrib/iostream2/zstream.h	/^        int close() {$/;"	f	class:izstream	typeref:typename:int
close	compat/zlib/contrib/iostream2/zstream.h	/^        int close() {$/;"	f	class:ozstream	typeref:typename:int
close	compat/zlib/contrib/iostream3/zfstream.cc	/^gzfilebuf::close()$/;"	f	class:gzfilebuf	typeref:typename:gzfilebuf *
close	compat/zlib/contrib/iostream3/zfstream.cc	/^gzifstream::close()$/;"	f	class:gzifstream	typeref:typename:void
close	compat/zlib/contrib/iostream3/zfstream.cc	/^gzofstream::close()$/;"	f	class:gzofstream	typeref:typename:void
close	compat/zlib/gzguts.h	/^#  define close _close$/;"	d
close2Proc	generic/tcl.h	/^    Tcl_DriverClose2Proc *close2Proc;$/;"	m	struct:Tcl_ChannelType	typeref:typename:Tcl_DriverClose2Proc *
closeCbPtr	generic/tclIO.h	/^    struct CloseCallback *closeCbPtr;$/;"	m	struct:ChannelState	typeref:struct:CloseCallback *
closeMode	unix/tclUnixChan.c	/^    int closeMode;		\/* One of CLOSE_DEFAULT, CLOSE_DRAIN or$/;"	m	struct:__anone1e2a72a0208	typeref:typename:int	file:
closeOutput	tools/mkdepend.tcl	/^proc closeOutput {} {$/;"	p
closeProc	generic/tcl.h	/^    void *closeProc;		\/* Not used any more. *\/$/;"	m	struct:Tcl_ChannelType	typeref:typename:void *
close_file_func	compat/zlib/contrib/minizip/ioapi.h	/^typedef int      (ZCALLBACK *close_file_func)     (voidpf opaque, voidpf stream);$/;"	t	typeref:typename:int (ZCALLBACK *)(voidpf opaque,voidpf stream)
clsDefinitionNs	generic/tclOOInt.h	/^    Tcl_Obj *clsDefinitionNs;	\/* Name of the namespace to use for$/;"	m	struct:Class	typeref:typename:Tcl_Obj *
clsMethods	generic/tclOO.c	/^}, clsMethods[] = {$/;"	v	typeref:typename:const DeclaredClassMethod[]	file:
cm	generic/regcomp.c	/^    struct colormap *cm;	\/* character color map *\/$/;"	m	struct:vars	typeref:struct:colormap *	file:
cm	generic/regexec.c	/^    struct colormap *cm;$/;"	m	struct:dfa	typeref:struct:colormap *	file:
cm	generic/regguts.h	/^    struct colormap *cm;	\/* the color map *\/$/;"	m	struct:nfa	typeref:struct:colormap *
cmap	generic/regguts.h	/^    struct colormap cmap;$/;"	m	struct:guts	typeref:struct:colormap
cmd	generic/tclIORChan.c	/^    Tcl_Obj *cmd;		\/* Callback command prefix *\/$/;"	m	struct:__anon92d8dd290108	typeref:typename:Tcl_Obj *	file:
cmd	generic/tclInt.h	/^    const char *cmd;		\/* The executed command, if possible... *\/$/;"	m	struct:CmdFrame	typeref:typename:const char *
cmd	generic/tclOOInt.h	/^    Command cmd;		\/* Space used to connect to [info frame] *\/$/;"	m	struct:ProcedureMethod	typeref:typename:Command
cmd	generic/tclProc.c	/^    Command cmd;$/;"	m	struct:__anon0627b8d90108	typeref:typename:Command	file:
cmd	generic/tclZlib.c	/^    Tcl_Command cmd;		\/* Token for the associated Tcl command. *\/$/;"	m	struct:__anon1d0b6d960208	typeref:typename:Tcl_Command	file:
cmdCount	generic/tclInt.h	/^	Tcl_Size cmdCount;	\/* Limit for how many commands to execute in$/;"	m	struct:Interp::__anon1eb6b3550808	typeref:typename:Tcl_Size
cmdCount	generic/tclInt.h	/^    Tcl_Size cmdCount;		\/* Total number of times a command procedure$/;"	m	struct:Interp	typeref:typename:Tcl_Size
cmdEpoch	generic/tclInt.h	/^    Tcl_Size cmdEpoch;		\/* Incremented to invalidate any references$/;"	m	struct:Command	typeref:typename:Tcl_Size
cmdEpoch	generic/tclObj.c	/^    Tcl_Size cmdEpoch;		\/* Value of the command's cmdEpoch when this$/;"	m	struct:ResolvedCmdName	typeref:typename:Tcl_Size	file:
cmdFrame	generic/tclExecute.c	/^    CmdFrame cmdFrame;		\/* codePtr was received for NR execution. *\/$/;"	m	struct:__anon999f4b180108	typeref:typename:CmdFrame	file:
cmdFramePtr	generic/tclInt.h	/^    CmdFrame *cmdFramePtr;	\/* Points to the command frame containing the$/;"	m	struct:Interp	typeref:typename:CmdFrame *
cmdFramePtr	generic/tclInt.h	/^    CmdFrame *cmdFramePtr;	\/* See Interp.cmdFramePtr *\/$/;"	m	struct:CorContext	typeref:typename:CmdFrame *
cmdGranularity	generic/tclInt.h	/^	int cmdGranularity;	\/* Mod factor used to determine how often to$/;"	m	struct:Interp::__anon1eb6b3550808	typeref:typename:int
cmdHandlers	generic/tclInt.h	/^	LimitHandler *cmdHandlers;$/;"	m	struct:Interp::__anon1eb6b3550808	typeref:typename:LimitHandler *
cmdIndex	generic/tclCompile.h	/^    int cmdIndex;		\/* Index of the first command after the one$/;"	m	struct:JumpFixup	typeref:typename:int
cmdLine	generic/tclAssembly.c	/^    Tcl_Size cmdLine;		\/* Current line number within the assembly$/;"	m	struct:AssemblyEnv	typeref:typename:Tcl_Size	file:
cmdMapEnd	generic/tclCompile.h	/^    Tcl_Size cmdMapEnd;		\/* Index after last CmdLocation entry. *\/$/;"	m	struct:CompileEnv	typeref:typename:Tcl_Size
cmdMapPtr	generic/tclCompile.h	/^    CmdLocation *cmdMapPtr;	\/* Points to start of CmdLocation array.$/;"	m	struct:CompileEnv	typeref:typename:CmdLocation *
cmdName	generic/tclTestProcBodyObj.c	/^    const char *cmdName;		\/* command name *\/$/;"	m	struct:__anon88dcedc20108	typeref:typename:const char *	file:
cmdObj	generic/tclInt.h	/^    Tcl_Obj *cmdObj;$/;"	m	struct:CmdFrame	typeref:typename:Tcl_Obj *
cmdPrefix	generic/tclEvent.c	/^    Tcl_Obj *cmdPrefix;		\/* First word(s) of the handler command *\/$/;"	m	struct:__anon850510a70108	typeref:typename:Tcl_Obj *	file:
cmdPtr	generic/tclIO.c	/^    Tcl_Obj *cmdPtr;		\/* Command to be invoked at completion. *\/$/;"	m	struct:CopyState	typeref:typename:Tcl_Obj *	file:
cmdPtr	generic/tclInt.h	/^    struct Command *cmdPtr;	\/* Command that's being traced. *\/$/;"	m	struct:ActiveCommandTrace	typeref:struct:Command *
cmdPtr	generic/tclInt.h	/^    struct Command *cmdPtr;	\/* Points to the Command structure for this$/;"	m	struct:Proc	typeref:struct:Command *
cmdPtr	generic/tclInt.h	/^    struct Command *cmdPtr;	\/* The command handle for the coroutine. *\/$/;"	m	struct:CoroutineData	typeref:struct:Command *
cmdPtr	generic/tclObj.c	/^    Command *cmdPtr;		\/* A cached Command pointer. *\/$/;"	m	struct:ResolvedCmdName	typeref:typename:Command *	file:
cmdRefEpoch	generic/tclInt.h	/^    Tcl_Size cmdRefEpoch;	\/* Incremented if a newly added command$/;"	m	struct:Namespace	typeref:typename:Tcl_Size
cmdResProc	generic/tclInt.h	/^    Tcl_ResolveCmdProc *cmdResProc;$/;"	m	struct:Namespace	typeref:typename:Tcl_ResolveCmdProc *
cmdResProc	generic/tclInt.h	/^    Tcl_ResolveCmdProc *cmdResProc;$/;"	m	struct:ResolverScheme	typeref:typename:Tcl_ResolveCmdProc *
cmdResProc	generic/tclInt.h	/^    Tcl_ResolveCmdProc *cmdResProc;$/;"	m	struct:Tcl_ResolverInfo	typeref:typename:Tcl_ResolveCmdProc *
cmdTable	generic/tclInt.h	/^    Tcl_HashTable cmdTable;	\/* Contains all the commands currently$/;"	m	struct:Namespace	typeref:typename:Tcl_HashTable
cmdTrace	generic/tclTest.c	/^static Tcl_Trace cmdTrace;$/;"	v	typeref:typename:Tcl_Trace	file:
cmdWrapper2Proc	generic/tclBasic.c	/^cmdWrapper2Proc($/;"	f	typeref:typename:int	file:
cmdWrapperDeleteProc	generic/tclBasic.c	/^cmdWrapperDeleteProc($/;"	f	typeref:typename:void	file:
cmdWrapperNreProc	generic/tclBasic.c	/^cmdWrapperNreProc($/;"	f	typeref:typename:int	file:
cmdWrapperProc	generic/tclBasic.c	/^cmdWrapperProc($/;"	f	typeref:typename:int	file:
cmp	generic/regc_locale.c	/^cmp($/;"	f	typeref:typename:int	file:
cmtreefree	generic/regc_color.c	/^cmtreefree($/;"	f	typeref:typename:void	file:
cname	generic/regc_locale.c	/^static const struct cname {$/;"	s	file:
cnames	generic/regc_locale.c	/^} cnames[] = {$/;"	v	typeref:typename:const struct cname[]
cnfa	generic/regexec.c	/^    struct cnfa *cnfa;$/;"	m	struct:dfa	typeref:struct:cnfa *	file:
cnfa	generic/regguts.h	/^    struct cnfa cnfa;		\/* compacted NFA, if any *\/$/;"	m	struct:subre	typeref:struct:cnfa
cnfa	generic/regguts.h	/^struct cnfa {$/;"	s
co	generic/regexec.c	/^    color co;$/;"	m	struct:arcp	typeref:typename:color	file:
co	generic/regguts.h	/^    color co;			\/* COLORLESS is list terminator *\/$/;"	m	struct:carc	typeref:typename:color
co	generic/regguts.h	/^    color co;$/;"	m	struct:arc	typeref:typename:color
code	compat/zlib/contrib/infback9/inftree9.h	/^} code;$/;"	t	typeref:struct:__anon80eb2aca0108
code	compat/zlib/deflate.h	/^        ush  code;       \/* bit string *\/$/;"	m	union:ct_data_s::__anond731f1a3010a	typeref:typename:ush
code	compat/zlib/examples/enough.c	/^    int *code;          \/\/ number of symbols assigned to each bit length$/;"	m	struct:__anonea7b679d0208	typeref:typename:int *	file:
code	compat/zlib/inftrees.h	/^} code;$/;"	t	typeref:struct:__anon78703c4e0108
code	generic/regc_locale.c	/^    const char code;$/;"	m	struct:cname	typeref:typename:const char	file:
code	generic/regerror.c	/^    int code;$/;"	m	struct:rerr	typeref:typename:int	file:
code	generic/tclIORChan.c	/^    int code;			\/* O: Ok\/Fail of the cmd handler *\/$/;"	m	struct:__anon92d8dd290608	typeref:typename:int	file:
code	generic/tclIORTrans.c	/^    int code;			\/* O: Ok\/Fail of the cmd handler *\/$/;"	m	struct:__anon21e740770608	typeref:typename:int	file:
code	generic/tclProcess.c	/^    int code;			\/* Error code, exit status or signal$/;"	m	struct:ProcessInfo	typeref:typename:int	file:
code	generic/tclThreadTest.c	/^    int code;			\/* Return value of Tcl_Eval *\/$/;"	m	struct:ThreadEventResult	typeref:typename:int	file:
codeDeltaStart	generic/tclCompile.h	/^    unsigned char *codeDeltaStart;$/;"	m	struct:ByteCode	typeref:typename:unsigned char *
codeEnd	generic/tclCompile.h	/^    unsigned char *codeEnd;	\/* Points just after the last allocated code$/;"	m	struct:CompileEnv	typeref:typename:unsigned char *
codeLengthStart	generic/tclCompile.h	/^    unsigned char *codeLengthStart;$/;"	m	struct:ByteCode	typeref:typename:unsigned char *
codeNext	generic/tclCompile.h	/^    unsigned char *codeNext;	\/* Points to next code array byte to use. *\/$/;"	m	struct:CompileEnv	typeref:typename:unsigned char *
codeOffset	generic/tclCompile.h	/^    Tcl_Size codeOffset;	\/* Offset of first byte of command code. *\/$/;"	m	struct:__anone79d5a530308	typeref:typename:Tcl_Size
codeOffset	generic/tclCompile.h	/^    Tcl_Size codeOffset;	\/* Offset of the first instruction byte of the$/;"	m	struct:__anone79d5a530208	typeref:typename:Tcl_Size
codeOffset	generic/tclCompile.h	/^    unsigned int codeOffset;	\/* Offset of the first byte of the one-byte$/;"	m	struct:JumpFixup	typeref:typename:unsigned int
codePtr	generic/tclExecute.c	/^    ByteCode *codePtr;		\/* Constant until the BC returns *\/$/;"	m	struct:__anon999f4b180108	typeref:typename:ByteCode *	file:
codePtr	generic/tclExecute.c	/^#define codePtr		(TD->codePtr)/;"	d	file:
codePtr	generic/tclInt.h	/^	    const void *codePtr;\/* Byte code currently executed... *\/$/;"	m	struct:CmdFrame::__anon1eb6b355020a::__anon1eb6b3550408	typeref:typename:const void *
codeStart	generic/tclCompile.h	/^    unsigned char *codeStart;	\/* Points to the first byte of the code. *\/$/;"	m	struct:CompileEnv	typeref:typename:unsigned char *
codeStart	generic/tclCompile.h	/^    unsigned char *codeStart;	\/* Points to the first byte of the code. This$/;"	m	struct:ByteCode	typeref:typename:unsigned char *
code_t	compat/zlib/examples/enough.c	/^typedef uintmax_t code_t;   \/\/ type for bit pattern counting$/;"	t	typeref:typename:uintmax_t	file:
codes	compat/zlib/contrib/infback9/inflate9.h	/^    code codes[ENOUGH];         \/* space for code tables *\/$/;"	m	struct:inflate_state	typeref:typename:code[]
codes	compat/zlib/contrib/puff/puff.c	/^local int codes(struct state *s,$/;"	f	typeref:typename:local int
codes	compat/zlib/inflate.h	/^    code codes[ENOUGH];         \/* space for code tables *\/$/;"	m	struct:inflate_state	typeref:typename:code[]
codetype	compat/zlib/contrib/infback9/inftree9.h	/^} codetype;$/;"	t	typeref:enum:__anon80eb2aca0203
codetype	compat/zlib/inftrees.h	/^} codetype;$/;"	t	typeref:enum:__anon78703c4e0203
collationKey	generic/tclCmdIL.c	/^    } collationKey;$/;"	m	struct:SortElement	typeref:union:SortElement::__anond5eb1cce010a	file:
color	generic/regguts.h	/^typedef short color;		\/* colors of characters *\/$/;"	t	typeref:typename:short
colorchain	generic/regc_color.c	/^colorchain($/;"	f	typeref:typename:void	file:
colorchain	generic/regguts.h	/^    struct arc *colorchain;	\/* color's arc chain *\/$/;"	m	struct:arc	typeref:struct:arc *
colorchainRev	generic/regguts.h	/^    struct arc *colorchainRev;	\/* back-link in color's arc chain *\/$/;"	m	struct:arc	typeref:struct:arc *
colorcomplement	generic/regc_color.c	/^colorcomplement($/;"	f	typeref:typename:void	file:
colordesc	generic/regguts.h	/^struct colordesc {$/;"	s
colormap	generic/regguts.h	/^struct colormap {$/;"	s
colors	generic/regguts.h	/^    struct colors colors;$/;"	m	union:tree	typeref:struct:colors
colors	generic/regguts.h	/^struct colors {$/;"	s
combine	generic/regc_nfa.c	/^combine($/;"	f	typeref:typename:int	file:
comm_max	compat/zlib/zlib.h	/^    uInt    comm_max;   \/* space at comment (only when reading header) *\/$/;"	m	struct:gz_header_s	typeref:typename:uInt
comma	generic/tclGetDate.y	/^comma	: ','$/;"	l
command	generic/tclIOGT.c	/^    Tcl_Obj *command;		\/* Tcl code to execute for a buffer *\/$/;"	m	struct:TransformChannelData	typeref:typename:Tcl_Obj *	file:
command	generic/tclOOInt.h	/^    Tcl_Command command;	\/* Reference to this object's public$/;"	m	struct:Object	typeref:typename:Tcl_Command
command	generic/tclTest.c	/^    Tcl_Obj *command;		\/* Command to evaluate when the event occurs *\/$/;"	m	struct:__anon0e9396a50308	typeref:typename:Tcl_Obj *	file:
command	generic/tclTest.c	/^    char *command;		\/* Command to invoke when the handler is$/;"	m	struct:TestAsyncHandler	typeref:typename:char *	file:
command	generic/tclTrace.c	/^    char command[TCLFLEXARRAY];	\/* Space for Tcl command to invoke. Actual$/;"	m	struct:__anonfe0b53740108	typeref:typename:char[]	file:
command	generic/tclTrace.c	/^    char command[TCLFLEXARRAY];	\/* Space for Tcl command to invoke. Actual$/;"	m	struct:__anonfe0b53740308	typeref:typename:char[]	file:
command	library/auto.tcl	/^proc auto_mkindex_parser::command {name arglist body} {$/;"	p	namespace:auto_mkindex_parser
commandInit	library/auto.tcl	/^proc auto_mkindex_parser::commandInit {name arglist body} {$/;"	p	namespace:auto_mkindex_parser
commandName	generic/tclBasic.c	/^    const char *commandName;	\/* The name of the command within the$/;"	m	struct:__anon6e1456070308	typeref:typename:const char *	file:
commandPathArray	generic/tclInt.h	/^    NamespacePathEntry *commandPathArray;$/;"	m	struct:Namespace	typeref:typename:NamespacePathEntry *
commandPathLength	generic/tclInt.h	/^    Tcl_Size commandPathLength;	\/* The length of the explicit path. *\/$/;"	m	struct:Namespace	typeref:typename:Tcl_Size
commandPathSourceList	generic/tclInt.h	/^    NamespacePathEntry *commandPathSourceList;$/;"	m	struct:Namespace	typeref:typename:NamespacePathEntry *
commandPtr	generic/tclMain.c	/^    Tcl_Obj *commandPtr;	\/* Used to assemble lines of input into Tcl$/;"	m	struct:__anonfdf182ea0308	typeref:typename:Tcl_Obj *	file:
commandPtr	generic/tclTimer.c	/^    Tcl_Obj *commandPtr;	\/* Command to execute. *\/$/;"	m	struct:AfterInfo	typeref:typename:Tcl_Obj *	file:
commandSize	generic/tcl.h	/^    Tcl_Size commandSize;	\/* Number of bytes in command, including first$/;"	m	struct:Tcl_Parse	typeref:typename:Tcl_Size
commandStart	generic/tcl.h	/^    const char *commandStart;	\/* First character in first word of$/;"	m	struct:Tcl_Parse	typeref:typename:const char *
commandTypeInit	generic/tclBasic.c	/^static int commandTypeInit = 0;$/;"	v	typeref:typename:int	file:
commandTypeTable	generic/tclBasic.c	/^static Tcl_HashTable commandTypeTable;$/;"	v	typeref:typename:Tcl_HashTable	file:
commands	generic/tclTestProcBodyObj.c	/^static const CmdTable commands[] = {$/;"	v	typeref:typename:const CmdTable[]	file:
comment	compat/zlib/zlib.h	/^    Bytef   *comment;   \/* pointer to zero-terminated comment or Z_NULL *\/$/;"	m	struct:gz_header_s	typeref:typename:Bytef *
comment	tests-perf/listPerf.tcl	/^    proc comment {args} {$/;"	p	namespace:::perf::list
commentSize	generic/tcl.h	/^    Tcl_Size commentSize;	\/* Number of bytes in comments (up through$/;"	m	struct:Tcl_Parse	typeref:typename:Tcl_Size
commentStart	generic/tcl.h	/^    const char *commentStart;	\/* Pointer to # that begins the first of one$/;"	m	struct:Tcl_Parse	typeref:typename:const char *
compDictObj	generic/tclZlib.c	/^    Tcl_Obj *compDictObj;	\/* Byte-array object containing compression$/;"	m	struct:__anon1d0b6d960208	typeref:typename:Tcl_Obj *	file:
compDictObj	generic/tclZlib.c	/^    Tcl_Obj *compDictObj;	\/* Byte-array object containing compression$/;"	m	struct:__anon1d0b6d960308	typeref:typename:Tcl_Obj *	file:
compDictObj	generic/tclZlib.c	/^#define compDictObj	/;"	d	file:
compact	generic/regc_nfa.c	/^compact($/;"	f	typeref:typename:void	file:
comparator	generic/tclCompile.h	/^    int (*comparator)(int);	\/* Function to test if a single unicode$/;"	m	struct:StringClassDesc	typeref:typename:int (*)(int)
compare	generic/regguts.h	/^    int (*compare) (const chr *, const chr *, size_t);$/;"	m	struct:guts	typeref:typename:int (*)(const chr *,const chr *,size_t)
compare	tools/checkLibraryDoc.tcl	/^proc compare {list1 list2} {$/;"	p
compareCmdPtr	generic/tclCmdIL.c	/^    Tcl_Obj *compareCmdPtr;	\/* The Tcl comparison command when sortMode is$/;"	m	struct:__anond5eb1cce0308	typeref:typename:Tcl_Obj *	file:
compareKeysProc	generic/tcl.h	/^    Tcl_CompareHashKeysProc *compareKeysProc;$/;"	m	struct:Tcl_HashKeyType	typeref:typename:Tcl_CompareHashKeysProc *
compatLock	unix/tclUnixCompat.c	/^static Tcl_Mutex compatLock;$/;"	v	typeref:typename:Tcl_Mutex	file:
compile	generic/regcomp.c	/^compile($/;"	f	typeref:typename:int
compile	generic/regcustom.h	/^#define	compile	/;"	d
compile	win/vctool.bat	/^:compile$/;"	l
compileEpoch	generic/tclCompile.h	/^    Tcl_Size compileEpoch;	\/* Value of iPtr->compileEpoch when this$/;"	m	struct:ByteCode	typeref:typename:Tcl_Size
compileEpoch	generic/tclInt.h	/^    Tcl_Size compileEpoch;	\/* Holds the current "compilation epoch" for$/;"	m	struct:Interp	typeref:typename:Tcl_Size
compileProc	generic/tclBasic.c	/^    CompileProc *compileProc;	\/* Function called to compile command. *\/$/;"	m	struct:__anon6e1456070208	typeref:typename:CompileProc *	file:
compileProc	generic/tclBasic.c	/^    CompileProc *compileProc;	\/* Function called to compile command. *\/$/;"	m	struct:__anon6e1456070508	typeref:typename:CompileProc *	file:
compileProc	generic/tclClock.c	/^    CompileProc *compileProc;	\/* The compiler for the command. *\/$/;"	m	struct:ClockCommand	typeref:typename:CompileProc *	file:
compileProc	generic/tclInt.h	/^    CompileProc *compileProc;	\/* Procedure called to compile command. NULL$/;"	m	struct:Command	typeref:typename:CompileProc *
compileProc	generic/tclInt.h	/^    CompileProc *compileProc;	\/* The compiler for the subcommand. *\/$/;"	m	struct:__anon1eb6b3550708	typeref:typename:CompileProc *
compiledLocals	generic/tclInt.h	/^    Var *compiledLocals;	\/* Points to the array of local variables$/;"	m	struct:CallFrame	typeref:typename:Var *
compiledProcPtr	generic/tclInt.h	/^    Proc *compiledProcPtr;	\/* If a procedure is being compiled, a pointer$/;"	m	struct:Interp	typeref:typename:Proc *
compiledVarResProc	generic/tclInt.h	/^    Tcl_ResolveCompiledVarProc *compiledVarResProc;$/;"	m	struct:Namespace	typeref:typename:Tcl_ResolveCompiledVarProc *
compiledVarResProc	generic/tclInt.h	/^    Tcl_ResolveCompiledVarProc *compiledVarResProc;$/;"	m	struct:ResolverScheme	typeref:typename:Tcl_ResolveCompiledVarProc *
compiledVarResProc	generic/tclInt.h	/^    Tcl_ResolveCompiledVarProc *compiledVarResProc;$/;"	m	struct:Tcl_ResolverInfo	typeref:typename:Tcl_ResolveCompiledVarProc *
complete	generic/tclUtf.c	/^static const unsigned char complete[256] = {$/;"	v	typeref:typename:const unsigned char[256]	file:
complicatedFind	generic/regexec.c	/^complicatedFind($/;"	f	typeref:typename:int	file:
complicatedFindLoop	generic/regexec.c	/^complicatedFindLoop($/;"	f	typeref:typename:int	file:
compress	compat/zlib/compress.c	/^int ZEXPORT compress(Bytef *dest, uLongf *destLen, const Bytef *source,$/;"	f	typeref:typename:int ZEXPORT
compress	compat/zlib/contrib/ada/zlib-thin.ads	/^   function compress$/;"	R
compress	compat/zlib/contrib/pascal/zlibpas.pas	/^function compress(dest: PChar; var destLen: LongInt;$/;"	f
compress	compat/zlib/contrib/pascal/zlibpas.pas	/^function compress; external;$/;"	f
compress	compat/zlib/zconf.h	/^#    define compress              z_compress$/;"	d
compress	compat/zlib/zconf.h.in	/^#    define compress              z_compress$/;"	d	file:
compress.$(HOST_OBJEXT)	unix/Makefile.in	/^compress.$(HOST_OBJEXT):$/;"	t
compress.$(HOST_OBJEXT)	win/Makefile.in	/^compress.$(HOST_OBJEXT):$/;"	t
compress.lo	compat/zlib/Makefile.in	/^compress.lo example.lo minigzip.lo uncompr.lo: $(SRCDIR)zlib.h zconf.h$/;"	t
compress.lo	compat/zlib/Makefile.in	/^compress.lo: $(SRCDIR)compress.c$/;"	t
compress.o	compat/zlib/Makefile.in	/^compress.o example.o minigzip.o uncompr.o: $(SRCDIR)zlib.h zconf.h$/;"	t
compress.o	compat/zlib/Makefile.in	/^compress.o: $(SRCDIR)compress.c$/;"	t
compress.obj	compat/zlib/contrib/delphi/zlibd32.mak	/^compress.obj: compress.c zlib.h zconf.h$/;"	t
compress.obj	compat/zlib/contrib/pascal/zlibd32.mak	/^compress.obj: compress.c zlib.h zconf.h$/;"	t
compress2	compat/zlib/compress.c	/^int ZEXPORT compress2(Bytef *dest, uLongf *destLen, const Bytef *source,$/;"	f	typeref:typename:int ZEXPORT
compress2	compat/zlib/contrib/ada/zlib-thin.ads	/^   function compress2$/;"	R
compress2	compat/zlib/contrib/pascal/zlibpas.pas	/^function compress2(dest: PChar; var destLen: LongInt;$/;"	f
compress2	compat/zlib/contrib/pascal/zlibpas.pas	/^function compress2; external;$/;"	f
compress2	compat/zlib/zconf.h	/^#    define compress2             z_compress2$/;"	d
compress2	compat/zlib/zconf.h.in	/^#    define compress2             z_compress2$/;"	d	file:
compressBound	compat/zlib/compress.c	/^uLong ZEXPORT compressBound(uLong sourceLen) {$/;"	f	typeref:typename:uLong ZEXPORT
compressBound	compat/zlib/contrib/ada/zlib-thin.ads	/^   function compressBound (Source_Len : in ULong) return ULong;$/;"	R
compressBound	compat/zlib/contrib/delphi/ZLib.pas	/^procedure compressBound; external;$/;"	p
compressBound	compat/zlib/contrib/pascal/zlibpas.pas	/^function compressBound(sourceLen: LongInt): LongInt;$/;"	f	typeref:typename:LongInt
compressBound	compat/zlib/contrib/pascal/zlibpas.pas	/^function compressBound; external;$/;"	f
compressBound	compat/zlib/zconf.h	/^#    define compressBound         z_compressBound$/;"	d
compressBound	compat/zlib/zconf.h.in	/^#    define compressBound         z_compressBound$/;"	d	file:
compressMethod	generic/tclZipfs.c	/^    int compressMethod;		\/* Compress method *\/$/;"	m	struct:ZipEntry	typeref:typename:int	file:
compress_block	compat/zlib/trees.c	/^local void compress_block(deflate_state *s, const ct_data *ltree,$/;"	f	typeref:typename:local void
compress_func	compat/zlib/deflate.c	/^typedef block_state (*compress_func)(deflate_state *s, int flush);$/;"	t	typeref:typename:block_state (*)(deflate_state * s,int flush)	file:
compressedData	compat/zlib/contrib/dotzlib/DotZLib/UnitTests.cs	/^        private ArrayList compressedData = new ArrayList();$/;"	f	class:DotZLibTests.DeflateInflateTests	file:
compressed_len	compat/zlib/deflate.h	/^    ulg compressed_len; \/* total bit length of compressed file mod 2^32 *\/$/;"	m	struct:internal_state	typeref:typename:ulg
compressed_size	compat/zlib/contrib/minizip/unzip.h	/^    ZPOS64_T compressed_size;   \/* compressed size                 8 bytes *\/$/;"	m	struct:unz_file_info64_s	typeref:typename:ZPOS64_T
compressed_size	compat/zlib/contrib/minizip/unzip.h	/^    uLong compressed_size;      \/* compressed size                 4 bytes *\/$/;"	m	struct:unz_file_info_s	typeref:typename:uLong
compression_method	compat/zlib/contrib/minizip/unzip.c	/^    uLong compression_method;   \/* compression method (0==store) *\/$/;"	m	struct:__anon3259ecee0108	typeref:typename:uLong	file:
compression_method	compat/zlib/contrib/minizip/unzip.h	/^    uLong compression_method;   \/* compression method              2 bytes *\/$/;"	m	struct:unz_file_info64_s	typeref:typename:uLong
compression_method	compat/zlib/contrib/minizip/unzip.h	/^    uLong compression_method;   \/* compression method              2 bytes *\/$/;"	m	struct:unz_file_info_s	typeref:typename:uLong
concat_describe	tests-perf/listPerf.tcl	/^    proc concat_describe {canonicality len elemlen} {$/;"	p	namespace:::perf::list
concat_perf	tests-perf/listPerf.tcl	/^    proc concat_perf {} {$/;"	p	namespace:::perf::list
cond	generic/tclInt.h	/^    Tcl_Obj *cond;		\/* Loop condition expression. *\/$/;"	m	struct:ForIterData	typeref:typename:Tcl_Obj *
cond	generic/tclThreadJoin.c	/^    Tcl_Condition cond;		\/* This is the condition a thread has to wait$/;"	m	struct:JoinableThread	typeref:typename:Tcl_Condition	file:
condEvent	win/tclWinThrd.c	/^    HANDLE condEvent;		\/* Per-thread condition event *\/$/;"	m	struct:ThreadSpecificData	typeref:typename:HANDLE	file:
condLock	win/tclWinThrd.c	/^    CRITICAL_SECTION condLock;	\/* Lock to serialize queuing on the$/;"	m	struct:__anon3cc991560108	typeref:typename:CRITICAL_SECTION	file:
condRecord	generic/tclThread.c	/^static SyncObjRecord condRecord = {0, 0, NULL};$/;"	v	typeref:typename:SyncObjRecord	file:
condWait	generic/tclThreadTest.c	/^    Tcl_Condition condWait;	\/* This condition variable is used to$/;"	m	struct:ThreadCtrl	typeref:typename:Tcl_Condition	file:
config	compat/zlib/deflate.c	/^} config;$/;"	t	typeref:struct:config_s	file:
config	library/http/http.tcl	/^proc http::config {args} {$/;"	p	namespace:http
config_s	compat/zlib/deflate.c	/^typedef struct config_s {$/;"	s	file:
configuration_table	compat/zlib/deflate.c	/^local const config configuration_table[10] = {$/;"	v	typeref:typename:local const config[10]
configuration_table	compat/zlib/deflate.c	/^local const config configuration_table[2] = {$/;"	v	typeref:typename:local const config[2]
configure-packages	unix/Makefile.in	/^configure-packages:$/;"	t
connectError	unix/tclUnixSock.c	/^    int connectError;		\/* Cache SO_ERROR of async socket. *\/$/;"	m	struct:TcpState	typeref:typename:int	file:
connectError	win/tclWinSock.c	/^    int connectError;		\/* Cache status of async socket. *\/$/;"	m	struct:TcpState	typeref:typename:int	file:
console	win/tclWinConsole.c	/^    HANDLE console;		\/* Console handle *\/$/;"	m	struct:ConsoleHandleInfo	typeref:typename:HANDLE	file:
consoleChannelType	win/tclWinConsole.c	/^static const Tcl_ChannelType consoleChannelType = {$/;"	v	typeref:typename:const Tcl_ChannelType	file:
consoleThread	win/tclWinConsole.c	/^    HANDLE consoleThread;	\/* Handle to thread doing actual i\/o on the$/;"	m	struct:ConsoleHandleInfo	typeref:typename:HANDLE	file:
consoleThreadCV	win/tclWinConsole.c	/^    CONDITION_VARIABLE consoleThreadCV;\/* For awakening console thread *\/$/;"	m	struct:ConsoleHandleInfo	typeref:typename:CONDITION_VARIABLE	file:
const	compat/zlib/zconf.h	/^#    define const /;"	d
const	compat/zlib/zconf.h.in	/^#    define const /;"	d	file:
constant	generic/tclCompExpr.c	/^    unsigned char constant;	\/* Flag marking constant subexpressions. *\/$/;"	m	struct:__anon882f36730108	typeref:typename:unsigned char	file:
constants	generic/tclInt.h	/^    Tcl_Obj *constants[2];	\/* Pointers to constant "0" and "1" objs. *\/$/;"	m	struct:ExecEnv	typeref:typename:Tcl_Obj * [2]
construct	compat/zlib/contrib/blast/blast.c	/^local int construct(struct huffman *h, const unsigned char *rep, int n)$/;"	f	typeref:typename:local int
construct	compat/zlib/contrib/puff/puff.c	/^local int construct(struct huffman *h, const short *length, int n)$/;"	f	typeref:typename:local int
constructorChainPtr	generic/tclOOInt.h	/^    CallChain *constructorChainPtr;$/;"	m	struct:Class	typeref:typename:CallChain *
constructorName	generic/tclOOInt.h	/^    Tcl_Obj *constructorName;	\/* Shared object containing the "name" of a$/;"	m	struct:Foundation	typeref:typename:Tcl_Obj *
constructorPtr	generic/tclOOInt.h	/^    Method *constructorPtr;	\/* Method record of the class constructor (if$/;"	m	struct:Class	typeref:typename:Method *
contains	generic/tclInt.h	/^	int (*contains)(tclObjTypeInterfaceArgsListContains);$/;"	m	struct:ObjInterface::list	typeref:typename:int (*)(tclObjTypeInterfaceArgsListContains)
continueOffset	generic/tclCompile.h	/^    Tcl_Size continueOffset;	\/* If LOOP_EXCEPTION_RANGE and not TCL_INDEX_NONE,$/;"	m	struct:__anone79d5a530208	typeref:typename:Tcl_Size
continueTargets	generic/tclCompile.h	/^    TCL_HASH_TYPE *continueTargets;$/;"	m	struct:ExceptionAux	typeref:typename:TCL_HASH_TYPE *
controlCharTable	generic/regc_locale.c	/^static const chr controlCharTable[] = {$/;"	v	typeref:typename:const chr[]	file:
controlRangeTable	generic/regc_locale.c	/^static const crange controlRangeTable[] = {$/;"	v	typeref:typename:const crange[]	file:
convertErrCode	tools/regexpTestLib.tcl	/^proc convertErrCode {code} {$/;"	p
convertNamePattern	tools/tclZIC.tcl	/^proc convertNamePattern {pattern flag} {$/;"	p
convertTestLine	tools/regexpTestLib.tcl	/^proc convertTestLine {currentLine len lineNum srcLineNum} {$/;"	p
convertTimeOfDay	tools/tclZIC.tcl	/^proc convertTimeOfDay {seconds stdGMTOffset DSTOffset timeOfDay flag} {$/;"	p
convertfromOptions	generic/tclCmdAH.c	/^    enum convertfromOptions { PROFILE, FAILINDEX } optIndex;$/;"	g	function:EncodingConvertParseOptions	file:
copyDir	library/install.tcl	/^proc ::practcl::copyDir {d1 d2 {toplevel 1}} {$/;"	p	namespace:::practcl
copyDir	tools/installData.tcl	/^proc copyDir {d1 d2} {$/;"	p
copyDir	tools/mkVfs.tcl	/^proc copyDir {d1 d2} {$/;"	p
copyDirectoryProc	generic/tcl.h	/^    Tcl_FSCopyDirectoryProc *copyDirectoryProc;$/;"	m	struct:Tcl_Filesystem	typeref:typename:Tcl_FSCopyDirectoryProc *
copyFileProc	generic/tcl.h	/^    Tcl_FSCopyFileProc *copyFileProc;$/;"	m	struct:Tcl_Filesystem	typeref:typename:Tcl_FSCopyFileProc *
copyInput	compat/zlib/contrib/dotzlib/DotZLib/CodecBase.cs	/^        protected void copyInput(byte[] data, int startIndex, int count)$/;"	m	class:DotZLib.CodecBase
copy_hfile	compat/zlib/os400/make.sh	/^copy_hfile()$/;"	f
copyins	generic/regc_nfa.c	/^copyins($/;"	f	typeref:typename:void	file:
copymeta	compat/zlib/examples/gun.c	/^local void copymeta(char *from, char *to)$/;"	f	typeref:typename:local void
copyout	tools/tcltk-man2html-utils.tcl	/^proc copyout {copyrights {level {}}} {$/;"	p
copyouts	generic/regc_nfa.c	/^copyouts($/;"	f	typeref:typename:void	file:
copyright	tools/tcltk-man2html-utils.tcl	/^proc copyright {copyright {level {}}} {$/;"	p
copysign	generic/tclStrToD.c	/^#define copysign _copysign$/;"	d	file:
corPtr	generic/tclInt.h	/^    struct CoroutineData *corPtr;$/;"	m	struct:ExecEnv	typeref:struct:CoroutineData *
corefoundation	unix/tcl.m4	/^	    AC_ARG_ENABLE(corefoundation,$/;"	e
count	compat/zlib/contrib/blast/blast.c	/^    short *count;       \/* number of symbols of each length *\/$/;"	m	struct:huffman	typeref:typename:short *	file:
count	compat/zlib/contrib/puff/puff.c	/^    short *count;       \/* number of symbols of each length *\/$/;"	m	struct:huffman	typeref:typename:short *	file:
count	compat/zlib/examples/enough.c	/^local big_t count(int syms, int left, int len) {$/;"	f	typeref:typename:local big_t
count	generic/tclClockFmt.c	/^    unsigned count;$/;"	m	struct:ClockFmtScnStorage_GC	typeref:typename:unsigned	file:
counter	generic/tclThreadStorage.c	/^    sig_atomic_t counter;	\/* The number of different Tcl TSDs used$/;"	m	struct:__anon4d1cb8920108	typeref:typename:sig_atomic_t	file:
counter	unix/tclUnixThrd.c	/^    int counter;$/;"	m	struct:PMutex	typeref:typename:int	file:
cov	compat/zlib/contrib/puff/Makefile	/^cov: puft$/;"	t
cover	compat/zlib/Makefile.in	/^cover: infcover$/;"	t
cover_back	compat/zlib/test/infcover.c	/^local void cover_back(void)$/;"	f	typeref:typename:local void
cover_fast	compat/zlib/test/infcover.c	/^local void cover_fast(void)$/;"	f	typeref:typename:local void
cover_inflate	compat/zlib/test/infcover.c	/^local void cover_inflate(void)$/;"	f	typeref:typename:local void
cover_support	compat/zlib/test/infcover.c	/^local void cover_support(void)$/;"	f	typeref:typename:local void
cover_trees	compat/zlib/test/infcover.c	/^local void cover_trees(void)$/;"	f	typeref:typename:local void
cover_wrap	compat/zlib/test/infcover.c	/^local void cover_wrap(void)$/;"	f	typeref:typename:local void
cp1252	generic/tclUtf.c	/^static const unsigned short cp1252[32] = {$/;"	v	typeref:typename:const unsigned short[32]	file:
cparc	generic/regc_nfa.c	/^cparc($/;"	f	typeref:typename:void	file:
cptsmalloced	generic/regexec.c	/^    int cptsmalloced;		\/* were the areas individually malloced? *\/$/;"	m	struct:dfa	typeref:typename:int	file:
crange	generic/regc_locale.c	/^} crange;$/;"	t	typeref:struct:__anonf52f7cd20108	file:
crc	compat/zlib/contrib/minizip/unzip.h	/^    uLong crc;                  \/* crc-32                          4 bytes *\/$/;"	m	struct:unz_file_info64_s	typeref:typename:uLong
crc	compat/zlib/contrib/minizip/unzip.h	/^    uLong crc;                  \/* crc-32                          4 bytes *\/$/;"	m	struct:unz_file_info_s	typeref:typename:uLong
crc	compat/zlib/examples/gun.c	/^    unsigned long crc;$/;"	m	struct:outd	typeref:typename:unsigned long	file:
crc32	compat/zlib/contrib/ada/zlib-thin.ads	/^   function crc32$/;"	R
crc32	compat/zlib/contrib/delphi/ZLib.pas	/^procedure crc32; external;$/;"	p
crc32	compat/zlib/contrib/dotzlib/DotZLib/ChecksumImpl.cs	/^        private static extern uint crc32(uint crc, int data, uint length);$/;"	m	class:DotZLib.CRC32Checksum	file:
crc32	compat/zlib/contrib/minizip/unzip.c	/^    uLong crc32;                \/* crc32 of all data uncompressed *\/$/;"	m	struct:__anon3259ecee0108	typeref:typename:uLong	file:
crc32	compat/zlib/contrib/minizip/zip.c	/^    uLong crc32;$/;"	m	struct:__anon7add25cb0108	typeref:typename:uLong	file:
crc32	compat/zlib/contrib/pascal/zlibpas.pas	/^function crc32(crc: LongInt; const buf: PChar; len: Integer): LongInt;$/;"	f	typeref:typename:LongInt
crc32	compat/zlib/contrib/pascal/zlibpas.pas	/^function crc32; external;$/;"	f
crc32	compat/zlib/crc32.c	/^unsigned long ZEXPORT crc32(unsigned long crc, const unsigned char FAR *buf,$/;"	f	typeref:typename:unsigned long ZEXPORT
crc32	compat/zlib/zconf.h	/^#  define crc32                 z_crc32$/;"	d
crc32	compat/zlib/zconf.h.in	/^#  define crc32                 z_crc32$/;"	d	file:
crc32	generic/tclZipfs.c	/^    int crc32;			\/* CRC-32 as stored in ZIP *\/$/;"	m	struct:ZipEntry	typeref:typename:int	file:
crc32.$(HOST_OBJEXT)	unix/Makefile.in	/^crc32.$(HOST_OBJEXT):$/;"	t
crc32.$(HOST_OBJEXT)	win/Makefile.in	/^crc32.$(HOST_OBJEXT):$/;"	t
crc32.lo	compat/zlib/Makefile.in	/^crc32.lo: $(SRCDIR)crc32.c$/;"	t
crc32.lo	compat/zlib/Makefile.in	/^crc32.lo: $(SRCDIR)zutil.h $(SRCDIR)zlib.h zconf.h $(SRCDIR)crc32.h$/;"	t
crc32.o	compat/zlib/Makefile.in	/^crc32.o: $(SRCDIR)crc32.c$/;"	t
crc32.o	compat/zlib/Makefile.in	/^crc32.o: $(SRCDIR)zutil.h $(SRCDIR)zlib.h zconf.h $(SRCDIR)crc32.h$/;"	t
crc32.obj	compat/zlib/contrib/delphi/zlibd32.mak	/^crc32.obj: crc32.c zlib.h zconf.h crc32.h$/;"	t
crc32.obj	compat/zlib/contrib/pascal/zlibd32.mak	/^crc32.obj: crc32.c zlib.h zconf.h crc32.h$/;"	t
crc32_combine	compat/zlib/contrib/pascal/zlibpas.pas	/^function crc32_combine(crc1, crc2, len2: LongInt): LongInt;$/;"	f	typeref:typename:LongInt
crc32_combine	compat/zlib/contrib/pascal/zlibpas.pas	/^function crc32_combine; external;$/;"	f
crc32_combine	compat/zlib/crc32.c	/^uLong ZEXPORT crc32_combine(uLong crc1, uLong crc2, z_off_t len2) {$/;"	f	typeref:typename:uLong ZEXPORT
crc32_combine	compat/zlib/zconf.h	/^#  define crc32_combine         z_crc32_combine$/;"	d
crc32_combine	compat/zlib/zconf.h.in	/^#  define crc32_combine         z_crc32_combine$/;"	d	file:
crc32_combine	compat/zlib/zlib.h	/^#    define crc32_combine crc32_combine6/;"	d
crc32_combine64	compat/zlib/crc32.c	/^uLong ZEXPORT crc32_combine64(uLong crc1, uLong crc2, z_off64_t len2) {$/;"	f	typeref:typename:uLong ZEXPORT
crc32_combine64	compat/zlib/zconf.h	/^#  define crc32_combine64       z_crc32_combine64$/;"	d
crc32_combine64	compat/zlib/zconf.h.in	/^#  define crc32_combine64       z_crc32_combine64$/;"	d	file:
crc32_combine_gen	compat/zlib/crc32.c	/^uLong ZEXPORT crc32_combine_gen(z_off_t len2) {$/;"	f	typeref:typename:uLong ZEXPORT
crc32_combine_gen	compat/zlib/zconf.h	/^#  define crc32_combine_gen     z_crc32_combine_gen$/;"	d
crc32_combine_gen	compat/zlib/zconf.h.in	/^#  define crc32_combine_gen     z_crc32_combine_gen$/;"	d	file:
crc32_combine_gen	compat/zlib/zlib.h	/^#    define crc32_combine_gen crc32_combine_gen6/;"	d
crc32_combine_gen64	compat/zlib/crc32.c	/^uLong ZEXPORT crc32_combine_gen64(z_off64_t len2) {$/;"	f	typeref:typename:uLong ZEXPORT
crc32_combine_gen64	compat/zlib/zconf.h	/^#  define crc32_combine_gen64   z_crc32_combine_gen64$/;"	d
crc32_combine_gen64	compat/zlib/zconf.h.in	/^#  define crc32_combine_gen64   z_crc32_combine_gen64$/;"	d	file:
crc32_combine_op	compat/zlib/crc32.c	/^uLong ZEXPORT crc32_combine_op(uLong crc1, uLong crc2, uLong op) {$/;"	f	typeref:typename:uLong ZEXPORT
crc32_combine_op	compat/zlib/zconf.h	/^#  define crc32_combine_op      z_crc32_combine_op$/;"	d
crc32_combine_op	compat/zlib/zconf.h.in	/^#  define crc32_combine_op      z_crc32_combine_op$/;"	d	file:
crc32_wait	compat/zlib/contrib/minizip/unzip.c	/^    uLong crc32_wait;           \/* crc32 we must obtain after decompress all *\/$/;"	m	struct:__anon3259ecee0108	typeref:typename:uLong	file:
crc32_z	compat/zlib/crc32.c	/^unsigned long ZEXPORT crc32_z(unsigned long crc, const unsigned char FAR *buf,$/;"	f	typeref:typename:unsigned long ZEXPORT
crc32_z	compat/zlib/zconf.h	/^#  define crc32_z               z_crc32_z$/;"	d
crc32_z	compat/zlib/zconf.h.in	/^#  define crc32_z               z_crc32_z$/;"	d	file:
crc32tab	generic/tclZipfs.c	/^static const z_crc_t* crc32tab;$/;"	v	typeref:typename:const z_crc_t *	file:
crc_big_table	compat/zlib/crc32.c	/^   local z_word_t FAR crc_big_table[256];$/;"	v	typeref:typename:local z_word_t FAR[256]
crc_big_table	compat/zlib/crc32.h	/^local const z_word_t FAR crc_big_table[] = {$/;"	v	typeref:typename:local const z_word_t FAR[]
crc_braid_big_table	compat/zlib/crc32.c	/^   local z_word_t FAR crc_braid_big_table[W][256];$/;"	v	typeref:typename:local z_word_t FAR[][256]
crc_braid_big_table	compat/zlib/crc32.h	/^local const z_word_t FAR crc_braid_big_table[][256] = {$/;"	v	typeref:typename:local const z_word_t FAR[][256]
crc_braid_table	compat/zlib/crc32.c	/^   local z_crc_t FAR crc_braid_table[W][256];$/;"	v	typeref:typename:local z_crc_t FAR[][256]
crc_braid_table	compat/zlib/crc32.h	/^local const z_crc_t FAR crc_braid_table[][256] = {$/;"	v	typeref:typename:local const z_crc_t FAR[][256]
crc_table	compat/zlib/crc32.c	/^local z_crc_t FAR crc_table[256];$/;"	v	typeref:typename:local z_crc_t FAR[256]
crc_table	compat/zlib/crc32.h	/^local const z_crc_t FAR crc_table[] = {$/;"	v	typeref:typename:local const z_crc_t FAR[]
crc_word	compat/zlib/crc32.c	/^local z_crc_t crc_word(z_word_t data) {$/;"	f	typeref:typename:local z_crc_t
crc_word_big	compat/zlib/crc32.c	/^local z_word_t crc_word_big(z_word_t data) {$/;"	f	typeref:typename:local z_word_t
createDirectoryProc	generic/tcl.h	/^    Tcl_FSCreateDirectoryProc *createDirectoryProc;$/;"	m	struct:Tcl_Filesystem	typeref:typename:Tcl_FSCreateDirectoryProc *
createFileHandlerProc	generic/tcl.h	/^    Tcl_CreateFileHandlerProc *createFileHandlerProc;$/;"	m	struct:Tcl_NotifierProcs	typeref:typename:Tcl_CreateFileHandlerProc *
createInternalRepProc	generic/tcl.h	/^    Tcl_FSCreateInternalRepProc *createInternalRepProc;$/;"	m	struct:Tcl_Filesystem	typeref:typename:Tcl_FSCreateInternalRepProc *
createProc	generic/tcl.h	/^    Tcl_HashEntry *(*createProc) (Tcl_HashTable *tablePtr, const char *key,$/;"	m	struct:Tcl_HashTable	typeref:typename:Tcl_HashEntry * (*)(Tcl_HashTable * tablePtr,const char * key,int * newPtr)
createTime	generic/tclCompile.h	/^    Tcl_Time createTime;	\/* Absolute time when the ByteCode was$/;"	m	struct:ByteCode	typeref:typename:Tcl_Time
createarc	generic/regc_nfa.c	/^createarc($/;"	f	typeref:typename:void	file:
creationEpoch	generic/tclOOInt.h	/^    Tcl_Size creationEpoch;	\/* Unique value to make comparisons of objects$/;"	m	struct:Object	typeref:typename:Tcl_Size
creator	macosx/tclMacOSXFCmd.c	/^    u_int32_t creator;$/;"	m	struct:finderinfo	typeref:typename:u_int32_t	file:
creatorNsPtr	generic/tclInt.h	/^    Namespace *creatorNsPtr;	\/* Where does this path entry point from? This$/;"	m	struct:NamespacePathEntry	typeref:typename:Namespace *
crevcondissect	generic/regexec.c	/^crevcondissect($/;"	f	typeref:typename:int	file:
creviterdissect	generic/regexec.c	/^creviterdissect(struct vars * v,$/;"	f	typeref:typename:int	file:
crit	win/tclWinNotify.c	/^    CRITICAL_SECTION crit;	\/* Monitor for this notifier. *\/$/;"	m	struct:__anon2be3cfbd0108	typeref:typename:CRITICAL_SECTION	file:
crit	win/tclWinThrd.c	/^    CRITICAL_SECTION crit;$/;"	m	struct:Tcl_Mutex_	typeref:typename:CRITICAL_SECTION	file:
cross-reference	tools/tcltk-man2html-utils.tcl	/^proc cross-reference {ref} {$/;"	p
crypt_header_size	compat/zlib/contrib/minizip/zip.c	/^    unsigned crypt_header_size;$/;"	m	struct:__anon7add25cb0108	typeref:typename:unsigned	file:
crypthead	compat/zlib/contrib/minizip/crypt.h	/^static unsigned crypthead(const char* passwd,       \/* password string *\/$/;"	f	typeref:typename:unsigned
cs	win/tclWinTime.c	/^    CRITICAL_SECTION cs;	\/* Mutex guarding this structure. *\/$/;"	m	struct:__anon3cd8f0330108	typeref:typename:CRITICAL_SECTION	file:
csPtrR	generic/tclIO.h	/^    struct CopyState *csPtrR;	\/* State of background copy for which channel$/;"	m	struct:ChannelState	typeref:struct:CopyState *
csPtrW	generic/tclIO.h	/^    struct CopyState *csPtrW;	\/* State of background copy for which channel$/;"	m	struct:ChannelState	typeref:struct:CopyState *
csWrite	win/tclWinSerial.c	/^    CRITICAL_SECTION csWrite;	\/* Writer thread synchronisation. *\/$/;"	m	struct:SerialInfo	typeref:typename:CRITICAL_SECTION	file:
cstrquote	unix/Makefile.in	/^cstrquote = "$(call shdqesc,$(subst \\,\\\\,$(1)))"$/;"	m
ct_data	compat/zlib/deflate.h	/^} FAR ct_data;$/;"	t	typeref:struct:ct_data_s FAR
ct_data_s	compat/zlib/deflate.h	/^typedef struct ct_data_s {$/;"	s
curCatchDepth	generic/tclAssembly.c	/^    int curCatchDepth;		\/* Current depth of catches *\/$/;"	m	struct:AssemblyEnv	typeref:typename:int	file:
curCode	generic/tclTrace.c	/^    int curCode;		\/* Return code for the current command *\/$/;"	m	struct:__anonfe0b53740308	typeref:typename:int	file:
curCounterFreq	win/tclWinTime.c	/^    LARGE_INTEGER curCounterFreq;$/;"	m	struct:__anon3cd8f0330108	typeref:typename:LARGE_INTEGER	file:
curEvalFlags	generic/tclExecute.c	/^#define curEvalFlags	/;"	d	file:
curFlags	generic/tclTrace.c	/^    int curFlags;		\/* Trace flags for the current command *\/$/;"	m	struct:__anonfe0b53740308	typeref:typename:int	file:
curOutPtr	generic/tclIO.h	/^    ChannelBuffer *curOutPtr;	\/* Current output buffer being filled. *\/$/;"	m	struct:ChannelState	typeref:typename:ChannelBuffer *
curTagPtr	generic/tclCkalloc.c	/^static MemTag *curTagPtr = NULL;\/* Tag to use in all future mem_headers (set$/;"	v	typeref:typename:MemTag *	file:
cur_file_info	compat/zlib/contrib/minizip/unzip.c	/^    unz_file_info64 cur_file_info; \/* public info about the current file in zip*\/$/;"	m	struct:__anon3259ecee0208	typeref:typename:unz_file_info64	file:
cur_file_info_internal	compat/zlib/contrib/minizip/unzip.c	/^    unz_file_info64_internal cur_file_info_internal; \/* private info about it*\/$/;"	m	struct:__anon3259ecee0208	typeref:typename:unz_file_info64_internal	file:
curfile64_info	compat/zlib/contrib/minizip/zip.c	/^} curfile64_info;$/;"	t	typeref:struct:__anon7add25cb0108	file:
curmatch	compat/zlib/contrib/asm686/match.S	/^#define	curmatch	/;"	d	file:
currStackDepth	generic/tclCompile.h	/^    Tcl_Size currStackDepth;	\/* Current stack depth. *\/$/;"	m	struct:CompileEnv	typeref:typename:Tcl_Size
curr_bb	generic/tclAssembly.c	/^    BasicBlock* curr_bb;	\/* Current basic block *\/$/;"	m	struct:AssemblyEnv	typeref:typename:BasicBlock *	file:
currentAuxBytes	generic/tclInt.h	/^    double currentAuxBytes;	\/* Current auxiliary information bytes. *\/$/;"	m	struct:ByteCodeStats	typeref:typename:double
currentByteCodeBytes	generic/tclInt.h	/^    double currentByteCodeBytes;\/* Code bytes in all current ByteCodes. *\/$/;"	m	struct:ByteCodeStats	typeref:typename:double
currentCmdMapBytes	generic/tclInt.h	/^    double currentCmdMapBytes;	\/* Current src<->code map bytes. *\/$/;"	m	struct:ByteCodeStats	typeref:typename:double
currentConversations	win/tclWinDde.c	/^    Conversation *currentConversations;$/;"	m	struct:__anone96dc6f10208	typeref:typename:Conversation *	file:
currentExceptBytes	generic/tclInt.h	/^    double currentExceptBytes;	\/* Current exception table bytes. *\/$/;"	m	struct:ByteCodeStats	typeref:typename:double
currentInput	generic/tclZlib.c	/^    Tcl_Obj *currentInput;	\/* Pointer to what is currently being$/;"	m	struct:__anon1d0b6d960208	typeref:typename:Tcl_Obj *	file:
currentInstBytes	generic/tclInt.h	/^    double currentInstBytes;	\/* Instruction bytes-current ByteCodes. *\/$/;"	m	struct:ByteCodeStats	typeref:typename:double
currentLitBytes	generic/tclInt.h	/^    double currentLitBytes;	\/* Current literal bytes. *\/$/;"	m	struct:ByteCodeStats	typeref:typename:double
currentLitStringBytes	generic/tclInt.h	/^    double currentLitStringBytes;$/;"	m	struct:ByteCodeStats	typeref:typename:double
currentLocale	generic/tclDate.h	/^    Tcl_Obj *currentLocale;$/;"	m	struct:ClockClientData	typeref:typename:Tcl_Obj *
currentLocaleDict	generic/tclDate.h	/^    Tcl_Obj *currentLocaleDict;$/;"	m	struct:ClockClientData	typeref:typename:Tcl_Obj *
currentSrcBytes	generic/tclInt.h	/^    double currentSrcBytes;	\/* Src bytes for all current ByteCodes. *\/$/;"	m	struct:ByteCodeStats	typeref:typename:double
currentTimeout	unix/tclXtNotify.c	/^    XtIntervalId currentTimeout;\/* Handle of current timer. *\/$/;"	m	struct:NotifierState	typeref:typename:XtIntervalId	file:
currentYearCentury	generic/tclDate.h	/^    int currentYearCentury;$/;"	m	struct:ClockClientData	typeref:typename:int
current_bytes_malloced	generic/tclCkalloc.c	/^static size_t current_bytes_malloced = 0;$/;"	v	typeref:typename:size_t	file:
current_file_ok	compat/zlib/contrib/minizip/unzip.c	/^    ZPOS64_T current_file_ok;      \/* flag about the usability of the current file*\/$/;"	m	struct:__anon3259ecee0208	typeref:typename:ZPOS64_T	file:
current_malloc_packets	generic/tclCkalloc.c	/^static size_t current_malloc_packets = 0;$/;"	v	typeref:typename:size_t	file:
cursor	generic/tclZipfs.c	/^    Tcl_Size cursor;		\/* Seek position for next read or write*\/$/;"	m	struct:ZipChannel	typeref:typename:Tcl_Size	file:
cv	generic/regcomp.c	/^    struct cvec *cv;		\/* interface cvec *\/$/;"	m	struct:vars	typeref:struct:cvec *	file:
cv2	generic/regcomp.c	/^    struct cvec *cv2;		\/* utility cvec *\/$/;"	m	struct:vars	typeref:struct:cvec *	file:
cvec	generic/regguts.h	/^struct cvec {$/;"	s
cwdClientData	generic/tclIOUtil.c	/^    void *cwdClientData;$/;"	m	struct:__anonf7a439bb0108	typeref:typename:void *	file:
cwdClientData	generic/tclIOUtil.c	/^static void *cwdClientData = NULL;$/;"	v	typeref:typename:void *	file:
cwdPathEpoch	generic/tclIOUtil.c	/^    size_t cwdPathEpoch;	\/* Compared with the global cwdPathEpoch to$/;"	m	struct:__anonf7a439bb0108	typeref:typename:size_t	file:
cwdPathEpoch	generic/tclIOUtil.c	/^static size_t cwdPathEpoch = 0;	    \/* The pathname of the current directory *\/$/;"	v	typeref:typename:size_t	file:
cwdPathPtr	generic/tclIOUtil.c	/^    Tcl_Obj *cwdPathPtr;	\/* A private copy of cwdPathPtr. Updated when$/;"	m	struct:__anonf7a439bb0108	typeref:typename:Tcl_Obj *	file:
cwdPtr	generic/tclPathObj.c	/^    Tcl_Obj *cwdPtr;		\/*  If NULL, either translatedPtr exists or$/;"	m	struct:__anoneca7f3ad0108	typeref:typename:Tcl_Obj *	file:
d	generic/tclLink.c	/^	double d;$/;"	m	union:__anonfc2fcf730108::__anonfc2fcf73020a	typeref:typename:double	file:
d	generic/tclStrToD.c	/^    double d;$/;"	m	union:Double	typeref:typename:double	file:
d	libtommath/bn_s_mp_rand_jenkins.c	/^   uint64_t d;$/;"	m	struct:__anona23b32490108	typeref:typename:uint64_t	file:
dPtr	generic/tclLink.c	/^	double *dPtr;		\/* double array *\/$/;"	m	union:__anonfc2fcf730108::__anonfc2fcf73020a	typeref:typename:double *	file:
d_buf	compat/zlib/deflate.h	/^    ushf *d_buf;          \/* buffer for distances *\/$/;"	m	struct:internal_state	typeref:typename:ushf *
d_code	compat/zlib/deflate.h	/^#define d_code(/;"	d
d_desc	compat/zlib/deflate.h	/^    struct tree_desc_s d_desc;               \/* desc. for distance tree *\/$/;"	m	struct:internal_state	typeref:struct:tree_desc_s
dad	compat/zlib/deflate.h	/^        ush  dad;        \/* father node in Huffman tree *\/$/;"	m	union:ct_data_s::__anond731f1a3020a	typeref:typename:ush
dash	tools/index.tcl	/^proc dash {} {$/;"	p
data	compat/zlib/contrib/minizip/zip.c	/^  unsigned char data[SIZEDATA_INDATABLOCK];$/;"	m	struct:linkedlist_datablock_internal_s	typeref:typename:unsigned char[]	file:
data	generic/tclDate.h	/^    const void *data;$/;"	m	struct:ClockScanTokenMap	typeref:typename:const void *
data	generic/tclDate.h	/^    void *data;$/;"	m	struct:ClockFormatTokenMap	typeref:typename:void *
data	generic/tclInt.h	/^    void *data[4];$/;"	m	struct:NRE_callback	typeref:typename:void * [4]
data	generic/tclInt.h	/^    } data;$/;"	m	struct:CmdFrame	typeref:union:CmdFrame::__anon1eb6b355020a
data	generic/tclZipfs.c	/^    unsigned char *data;	\/* File data if written *\/$/;"	m	struct:ZipEntry	typeref:typename:unsigned char *	file:
data	generic/tclZipfs.c	/^    unsigned char *data;	\/* Memory mapped or malloc'ed file *\/$/;"	m	struct:ZipFile	typeref:typename:unsigned char *	file:
data	macosx/tclMacOSXFCmd.c	/^    u_int32_t data[8];$/;"	m	struct:__anon5fc3cb980308	typeref:typename:u_int32_t[8]	file:
data	unix/tclUnixChan.c	/^    int data;$/;"	m	struct:__anone1e2a72a0308	typeref:typename:int	file:
dataKey	generic/tclAsync.c	/^static Tcl_ThreadDataKey dataKey;$/;"	v	typeref:typename:Tcl_ThreadDataKey	file:
dataKey	generic/tclEvent.c	/^static Tcl_ThreadDataKey dataKey;$/;"	v	typeref:typename:Tcl_ThreadDataKey	file:
dataKey	generic/tclIO.c	/^static Tcl_ThreadDataKey dataKey;$/;"	v	typeref:typename:Tcl_ThreadDataKey	file:
dataKey	generic/tclIOCmd.c	/^static Tcl_ThreadDataKey dataKey;$/;"	v	typeref:typename:Tcl_ThreadDataKey	file:
dataKey	generic/tclIORChan.c	/^static Tcl_ThreadDataKey dataKey;$/;"	v	typeref:typename:Tcl_ThreadDataKey	file:
dataKey	generic/tclIORTrans.c	/^static Tcl_ThreadDataKey dataKey;$/;"	v	typeref:typename:Tcl_ThreadDataKey	file:
dataKey	generic/tclIOSock.c	/^static Tcl_ThreadDataKey dataKey;$/;"	v	typeref:typename:Tcl_ThreadDataKey	file:
dataKey	generic/tclMain.c	/^static Tcl_ThreadDataKey dataKey;$/;"	v	typeref:typename:Tcl_ThreadDataKey	file:
dataKey	generic/tclNamesp.c	/^static Tcl_ThreadDataKey dataKey;$/;"	v	typeref:typename:Tcl_ThreadDataKey	file:
dataKey	generic/tclNotify.c	/^static Tcl_ThreadDataKey dataKey;$/;"	v	typeref:typename:Tcl_ThreadDataKey	file:
dataKey	generic/tclObj.c	/^static Tcl_ThreadDataKey dataKey;$/;"	v	typeref:typename:Tcl_ThreadDataKey	file:
dataKey	generic/tclRegexp.c	/^static Tcl_ThreadDataKey dataKey;$/;"	v	typeref:typename:Tcl_ThreadDataKey	file:
dataKey	generic/tclThreadTest.c	/^static Tcl_ThreadDataKey dataKey;$/;"	v	typeref:typename:Tcl_ThreadDataKey	file:
dataKey	generic/tclTimer.c	/^static Tcl_ThreadDataKey dataKey;$/;"	v	typeref:typename:Tcl_ThreadDataKey	file:
dataKey	macosx/tclMacOSXNotify.c	/^static Tcl_ThreadDataKey dataKey;$/;"	v	typeref:typename:Tcl_ThreadDataKey	file:
dataKey	unix/dltest/pkgua.c	/^static Tcl_ThreadDataKey dataKey;$/;"	v	typeref:typename:Tcl_ThreadDataKey	file:
dataKey	unix/tclEpollNotfy.c	/^static Tcl_ThreadDataKey dataKey;$/;"	v	typeref:typename:Tcl_ThreadDataKey	file:
dataKey	unix/tclKqueueNotfy.c	/^static Tcl_ThreadDataKey dataKey;$/;"	v	typeref:typename:Tcl_ThreadDataKey	file:
dataKey	unix/tclSelectNotfy.c	/^static Tcl_ThreadDataKey dataKey;$/;"	v	typeref:typename:Tcl_ThreadDataKey	file:
dataKey	unix/tclUnixCompat.c	/^static Tcl_ThreadDataKey dataKey;$/;"	v	typeref:typename:Tcl_ThreadDataKey	file:
dataKey	win/tclWinChan.c	/^static Tcl_ThreadDataKey dataKey;$/;"	v	typeref:typename:Tcl_ThreadDataKey	file:
dataKey	win/tclWinConsole.c	/^static Tcl_ThreadDataKey dataKey;$/;"	v	typeref:typename:Tcl_ThreadDataKey	file:
dataKey	win/tclWinDde.c	/^static Tcl_ThreadDataKey dataKey;$/;"	v	typeref:typename:Tcl_ThreadDataKey	file:
dataKey	win/tclWinNotify.c	/^static Tcl_ThreadDataKey dataKey;$/;"	v	typeref:typename:Tcl_ThreadDataKey	file:
dataKey	win/tclWinPipe.c	/^static Tcl_ThreadDataKey dataKey;$/;"	v	typeref:typename:Tcl_ThreadDataKey	file:
dataKey	win/tclWinSerial.c	/^static Tcl_ThreadDataKey dataKey;$/;"	v	typeref:typename:Tcl_ThreadDataKey	file:
dataKey	win/tclWinSock.c	/^static Tcl_ThreadDataKey dataKey;$/;"	v	typeref:typename:Tcl_ThreadDataKey	file:
dataKey	win/tclWinThrd.c	/^static Tcl_ThreadDataKey dataKey;$/;"	v	typeref:typename:Tcl_ThreadDataKey	file:
dataPtr	generic/tclDate.h	/^    ClockClientData *dataPtr;	\/* Pointer to literal pool, etc. *\/$/;"	m	struct:ClockFmtScnCmdArgs	typeref:typename:ClockClientData *
data_type	compat/zlib/contrib/dotzlib/DotZLib/DotZLib.cs	/^        int data_type;$/;"	f	struct:DotZLib.ZStream
data_type	compat/zlib/zlib.h	/^    int     data_type;  \/* best guess about the data type: binary or text$/;"	m	struct:z_stream_s	typeref:typename:int
datarootdir	unix/Makefile.in	/^datarootdir		= @datarootdir@$/;"	m
datarootdir	win/Makefile.in	/^datarootdir		= @datarootdir@$/;"	m
datatypes	generic/tclCmdIL.c	/^    enum datatypes {$/;"	g	function:Tcl_LsearchObjCmd	file:
date	generic/tclDate.h	/^	TclDateFields date;$/;"	m	struct:ClockClientData::__anone8f8f7280108	typeref:typename:TclDateFields
date	generic/tclDate.h	/^    TclDateFields date;$/;"	m	struct:DateFormat	typeref:typename:TclDateFields
date	generic/tclDate.h	/^    TclDateFields date;$/;"	m	struct:DateInfo	typeref:typename:TclDateFields
date	generic/tclGetDate.y	/^date	: tUNUMBER '\/' tUNUMBER {$/;"	l
date	generic/tclGetDateClassic.y	/^date	: tUNUMBER '\/' tUNUMBER {$/;"	l
dateCentury	generic/tclDate.h	/^    int dateCentury;$/;"	m	struct:DateInfo	typeref:typename:int
dateDSTmode	generic/tclDate.h	/^    int dateDSTmode;$/;"	m	struct:DateInfo	typeref:typename:int
dateDSTmode	generic/tclDateClassic.c	/^    int dateDSTmode;$/;"	m	struct:DateInfo	typeref:typename:int	file:
dateDay	generic/tclDateClassic.c	/^    time_t dateDay;$/;"	m	struct:DateInfo	typeref:typename:time_t	file:
dateDayNumber	generic/tclDateClassic.c	/^    time_t dateDayNumber;$/;"	m	struct:DateInfo	typeref:typename:time_t	file:
dateDayOrdinal	generic/tclDate.h	/^    int dateDayOrdinal;$/;"	m	struct:DateInfo	typeref:typename:int
dateDayOrdinal	generic/tclDateClassic.c	/^    time_t dateDayOrdinal;$/;"	m	struct:DateInfo	typeref:typename:time_t	file:
dateDigitCount	generic/tclDate.h	/^    int dateDigitCount;$/;"	m	struct:DateInfo	typeref:typename:int
dateDigitCount	generic/tclDateClassic.c	/^    int dateDigitCount;$/;"	m	struct:DateInfo	typeref:typename:int	file:
dateEnd	generic/tclDate.h	/^    const char *dateEnd;$/;"	m	struct:DateInfo	typeref:typename:const char *
dateHaveDate	generic/tclDateClassic.c	/^    int dateHaveDate;$/;"	m	struct:DateInfo	typeref:typename:int	file:
dateHaveDay	generic/tclDateClassic.c	/^    int dateHaveDay;$/;"	m	struct:DateInfo	typeref:typename:int	file:
dateHaveOrdinalMonth	generic/tclDateClassic.c	/^    int dateHaveOrdinalMonth;$/;"	m	struct:DateInfo	typeref:typename:int	file:
dateHaveRel	generic/tclDateClassic.c	/^    int dateHaveRel;$/;"	m	struct:DateInfo	typeref:typename:int	file:
dateHaveTime	generic/tclDateClassic.c	/^    int dateHaveTime;$/;"	m	struct:DateInfo	typeref:typename:int	file:
dateHaveZone	generic/tclDateClassic.c	/^    int dateHaveZone;$/;"	m	struct:DateInfo	typeref:typename:int	file:
dateHour	generic/tclDateClassic.c	/^    time_t dateHour;$/;"	m	struct:DateInfo	typeref:typename:time_t	file:
dateInput	generic/tclDate.h	/^    const char *dateInput;$/;"	m	struct:DateInfo	typeref:typename:const char *
dateInput	generic/tclDateClassic.c	/^    const char *dateInput;$/;"	m	struct:DateInfo	typeref:typename:const char *	file:
dateMeridian	generic/tclDate.h	/^    MERIDIAN dateMeridian;$/;"	m	struct:DateInfo	typeref:typename:MERIDIAN
dateMeridian	generic/tclDateClassic.c	/^    MERIDIAN dateMeridian;$/;"	m	struct:DateInfo	typeref:typename:MERIDIAN	file:
dateMinutes	generic/tclDateClassic.c	/^    time_t dateMinutes;$/;"	m	struct:DateInfo	typeref:typename:time_t	file:
dateMonth	generic/tclDateClassic.c	/^    time_t dateMonth;$/;"	m	struct:DateInfo	typeref:typename:time_t	file:
dateMonthOrdinal	generic/tclDate.h	/^    int dateMonthOrdinal;$/;"	m	struct:DateInfo	typeref:typename:int
dateMonthOrdinal	generic/tclDateClassic.c	/^    time_t dateMonthOrdinal;$/;"	m	struct:DateInfo	typeref:typename:time_t	file:
dateMonthOrdinalIncr	generic/tclDate.h	/^    int dateMonthOrdinalIncr;$/;"	m	struct:DateInfo	typeref:typename:int
dateRelDay	generic/tclDate.h	/^    Tcl_WideInt dateRelDay;$/;"	m	struct:DateInfo	typeref:typename:Tcl_WideInt
dateRelDay	generic/tclDateClassic.c	/^    time_t dateRelDay;$/;"	m	struct:DateInfo	typeref:typename:time_t	file:
dateRelMonth	generic/tclDate.h	/^    Tcl_WideInt dateRelMonth;$/;"	m	struct:DateInfo	typeref:typename:Tcl_WideInt
dateRelMonth	generic/tclDateClassic.c	/^    time_t dateRelMonth;$/;"	m	struct:DateInfo	typeref:typename:time_t	file:
dateRelPointer	generic/tclDate.h	/^    Tcl_WideInt *dateRelPointer;$/;"	m	struct:DateInfo	typeref:typename:Tcl_WideInt *
dateRelPointer	generic/tclDateClassic.c	/^    time_t *dateRelPointer;$/;"	m	struct:DateInfo	typeref:typename:time_t *	file:
dateRelSeconds	generic/tclDate.h	/^    Tcl_WideInt dateRelSeconds;$/;"	m	struct:DateInfo	typeref:typename:Tcl_WideInt
dateRelSeconds	generic/tclDateClassic.c	/^    time_t dateRelSeconds;$/;"	m	struct:DateInfo	typeref:typename:time_t	file:
dateSeconds	generic/tclDateClassic.c	/^    time_t dateSeconds;$/;"	m	struct:DateInfo	typeref:typename:time_t	file:
dateSpaceCount	generic/tclDate.h	/^    int dateSpaceCount;$/;"	m	struct:DateInfo	typeref:typename:int
dateStart	generic/tclDate.h	/^    const char *dateStart;$/;"	m	struct:DateInfo	typeref:typename:const char *
dateStart	generic/tclDateClassic.c	/^    const char *dateStart;$/;"	m	struct:DateInfo	typeref:typename:const char *	file:
dateTimezone	generic/tclDate.h	/^    int dateTimezone;$/;"	m	struct:DateInfo	typeref:typename:int
dateTimezone	generic/tclDateClassic.c	/^    time_t dateTimezone;$/;"	m	struct:DateInfo	typeref:typename:time_t	file:
dateYear	generic/tclDateClassic.c	/^    time_t dateYear;$/;"	m	struct:DateInfo	typeref:typename:time_t	file:
day	generic/tclGetDate.y	/^day	: tDAY {$/;"	l
day	generic/tclGetDateClassic.y	/^day	: tDAY {$/;"	l
dayOfMonth	generic/tclClockClassic.c	/^    int dayOfMonth;		\/* Day of the month *\/$/;"	m	struct:__anondf8925f30208	typeref:typename:int	file:
dayOfMonth	generic/tclDate.h	/^    int dayOfMonth;		\/* Day of the month *\/$/;"	m	struct:TclDateFields	typeref:typename:int
dayOfWeek	generic/tclClockClassic.c	/^    int dayOfWeek;		\/* Day of the week *\/$/;"	m	struct:__anondf8925f30208	typeref:typename:int	file:
dayOfWeek	generic/tclDate.h	/^    int dayOfWeek;		\/* Day of the week *\/$/;"	m	struct:TclDateFields	typeref:typename:int
dayOfYear	generic/tclClockClassic.c	/^    int dayOfYear;		\/* Day of the year (1 January == 1) *\/$/;"	m	struct:__anondf8925f30208	typeref:typename:int	file:
dayOfYear	generic/tclDate.h	/^    int dayOfYear;		\/* Day of the year (1 January == 1) *\/$/;"	m	struct:TclDateFields	typeref:typename:int
daysInPriorMonths	generic/tclClock.c	/^static const int daysInPriorMonths[2][13] = {$/;"	v	typeref:typename:const int[2][13]	file:
daysInPriorMonths	generic/tclClockClassic.c	/^static const int daysInPriorMonths[2][13] = {$/;"	v	typeref:typename:const int[2][13]	file:
db2_name	compat/zlib/os400/make.sh	/^db2_name()$/;"	f
dbl	libtommath/bn_mp_set_double.c	/^      double   dbl;$/;"	m	union:mp_set_double::__anonee13ff67010a	typeref:typename:double	file:
dc	tools/tclsh.svg	/^   inkscape:export-ydpi="8.4399996">$/;"	n	uri:http://purl.org/dc/elements/1.1/
dcode	compat/zlib/contrib/inflate86/inffas86.c	/^\/* 72   36 *\/ code const FAR *dcode;    \/*     r11  local strm->distcode *\/$/;"	m	struct:inflate_fast::inffast_ar	typeref:typename:code const FAR *	file:
ddeInstance	win/tclWinDde.c	/^static DWORD ddeInstance;	\/* The application instance handle given to us$/;"	v	typeref:typename:DWORD	file:
ddeIsServer	win/tclWinDde.c	/^static int ddeIsServer = 0;$/;"	v	typeref:typename:int	file:
ddeServiceGlobal	win/tclWinDde.c	/^static HSZ ddeServiceGlobal = 0;$/;"	v	typeref:typename:HSZ	file:
dead	generic/tclIORChan.c	/^    int dead;			\/* Boolean signal that some operations$/;"	m	struct:__anon92d8dd290108	typeref:typename:int	file:
dead	generic/tclIORTrans.c	/^    int dead;			\/* Boolean signal that some operations$/;"	m	struct:__anon21e740770208	typeref:typename:int	file:
deadList	compat/waitpid.c	/^static WaitInfo *deadList = NULL;$/;"	v	typeref:typename:WaitInfo *	file:
declare	tools/genStubs.tcl	/^proc genStubs::declare {args} {$/;"	p	namespace:genStubs
declaringClassPtr	generic/tclOOInt.h	/^    Class *declaringClassPtr;	\/* The class that declares this method, or$/;"	m	struct:Method	typeref:typename:Class *
declaringObjectPtr	generic/tclOOInt.h	/^    Object *declaringObjectPtr;	\/* The object that declares this method, or$/;"	m	struct:Method	typeref:typename:Object *
decode	compat/zlib/contrib/blast/blast.c	/^local int decode(struct state *s, struct huffman *h)$/;"	f	typeref:typename:local int
decode	compat/zlib/contrib/puff/puff.c	/^local int decode(struct state *s, const struct huffman *h)$/;"	f	typeref:typename:local int
decodeMap	generic/tclBinary.c	/^static const EnsembleImplMap decodeMap[] = {$/;"	v	typeref:typename:const EnsembleImplMap[]	file:
decomp	compat/zlib/contrib/blast/blast.c	/^local int decomp(struct state *s)$/;"	f	typeref:typename:local int
decrypt_byte	compat/zlib/contrib/minizip/crypt.h	/^static int decrypt_byte(unsigned long* pkeys, const z_crc_t* pcrc_32_tab) {$/;"	f	typeref:typename:int
def	compat/zlib/examples/zpipe.c	/^int def(FILE *source, FILE *dest, int level)$/;"	f	typeref:typename:int
defFlags	generic/tclDate.h	/^    int defFlags;		    \/* Default flags (from configure), ATM$/;"	m	struct:ClockClientData	typeref:typename:int
defValuePtr	generic/tclInt.h	/^    Tcl_Obj *defValuePtr;	\/* Pointer to the default value of an$/;"	m	struct:CompiledLocal	typeref:typename:Tcl_Obj *
defaultInfoMap	generic/tclCmdIL.c	/^static const EnsembleImplMap defaultInfoMap[] = {$/;"	v	typeref:typename:const EnsembleImplMap[]	file:
defaultLibraryDir	unix/tclUnixInit.c	/^static const char defaultLibraryDir[] = TCL_LIBRARY;$/;"	v	typeref:typename:const char[]	file:
defaultLibraryDir	win/tclWinInit.c	/^static ProcessGlobalValue defaultLibraryDir =$/;"	v	typeref:typename:ProcessGlobalValue	file:
defaultLocale	generic/tclDate.h	/^    Tcl_Obj *defaultLocale;$/;"	m	struct:ClockClientData	typeref:typename:Tcl_Obj *
defaultLocaleDict	generic/tclDate.h	/^    Tcl_Obj *defaultLocaleDict;$/;"	m	struct:ClockClientData	typeref:typename:Tcl_Obj *
defaultNamespaceMap	generic/tclNamesp.c	/^static const EnsembleImplMap defaultNamespaceMap[] = {$/;"	v	typeref:typename:const EnsembleImplMap[]	file:
defaultObj	generic/tclVar.c	/^    Tcl_Obj *defaultObj;$/;"	m	struct:ArrayVarHashTable	typeref:typename:Tcl_Obj *	file:
deferredCallbacks	generic/tclInt.h	/^    struct NRE_callback *deferredCallbacks;$/;"	m	struct:Interp	typeref:struct:NRE_callback *
defineCmds	generic/tclOO.c	/^} defineCmds[] = {$/;"	v	typeref:typename:const struct __anon5e0846e30108[]
defineName	generic/tclOOInt.h	/^    Tcl_Obj *defineName;	\/* Fully qualified name of oo::define. *\/$/;"	m	struct:Foundation	typeref:typename:Tcl_Obj *
definerCls	generic/tclOOCall.c	/^    Class *definerCls;$/;"	m	struct:DefineEntry	typeref:typename:Class *	file:
definition	generic/tclOOInt.h	/^    Tcl_MethodType definition;	\/* How to call the method. *\/$/;"	m	struct:DeclaredClassMethod	typeref:typename:Tcl_MethodType
deflate	compat/zlib/contrib/delphi/ZLib.pas	/^function deflate(var strm: TZStreamRec; flush: Integer): Integer; external;$/;"	f	typeref:typename:Integer
deflate	compat/zlib/contrib/dotzlib/DotZLib/Deflater.cs	/^        private static extern int deflate(ref ZStream sz, int flush);$/;"	m	class:DotZLib.Deflater	file:
deflate	compat/zlib/contrib/pascal/zlibpas.pas	/^function deflate(var strm: z_stream; flush: Integer): Integer;$/;"	f	typeref:typename:Integer
deflate	compat/zlib/contrib/pascal/zlibpas.pas	/^function deflate; external;$/;"	f
deflate	compat/zlib/deflate.c	/^int ZEXPORT deflate(z_streamp strm, int flush) {$/;"	f	typeref:typename:int ZEXPORT
deflate	compat/zlib/zconf.h	/^#  define deflate               z_deflate$/;"	d
deflate	compat/zlib/zconf.h.in	/^#  define deflate               z_deflate$/;"	d	file:
deflate.$(HOST_OBJEXT)	unix/Makefile.in	/^deflate.$(HOST_OBJEXT):$/;"	t
deflate.$(HOST_OBJEXT)	win/Makefile.in	/^deflate.$(HOST_OBJEXT):$/;"	t
deflate.lo	compat/zlib/Makefile.in	/^deflate.lo: $(SRCDIR)deflate.c$/;"	t
deflate.lo	compat/zlib/Makefile.in	/^deflate.lo: $(SRCDIR)deflate.h $(SRCDIR)zutil.h $(SRCDIR)zlib.h zconf.h$/;"	t
deflate.o	compat/zlib/Makefile.in	/^deflate.o: $(SRCDIR)deflate.c$/;"	t
deflate.o	compat/zlib/Makefile.in	/^deflate.o: $(SRCDIR)deflate.h $(SRCDIR)zutil.h $(SRCDIR)zlib.h zconf.h$/;"	t
deflate.obj	compat/zlib/contrib/delphi/zlibd32.mak	/^deflate.obj: deflate.c deflate.h zutil.h zlib.h zconf.h$/;"	t
deflate.obj	compat/zlib/contrib/pascal/zlibd32.mak	/^deflate.obj: deflate.c deflate.h zutil.h zlib.h zconf.h$/;"	t
deflateBound	compat/zlib/contrib/ada/zlib-thin.ads	/^   function deflateBound$/;"	R
deflateBound	compat/zlib/contrib/pascal/zlibpas.pas	/^function deflateBound(var strm: z_stream; sourceLen: LongInt): LongInt;$/;"	f	typeref:typename:LongInt
deflateBound	compat/zlib/contrib/pascal/zlibpas.pas	/^function deflateBound; external;$/;"	f
deflateBound	compat/zlib/deflate.c	/^uLong ZEXPORT deflateBound(z_streamp strm, uLong sourceLen) {$/;"	f	typeref:typename:uLong ZEXPORT
deflateBound	compat/zlib/zconf.h	/^#  define deflateBound          z_deflateBound$/;"	d
deflateBound	compat/zlib/zconf.h.in	/^#  define deflateBound          z_deflateBound$/;"	d	file:
deflateCopy	compat/zlib/contrib/ada/zlib-thin.ads	/^   function deflateCopy (dest : Z_Streamp; source : Z_Streamp) return Int;$/;"	R
deflateCopy	compat/zlib/contrib/pascal/zlibpas.pas	/^function deflateCopy(var dest, source: z_stream): Integer;$/;"	f	typeref:typename:Integer
deflateCopy	compat/zlib/contrib/pascal/zlibpas.pas	/^function deflateCopy; external;$/;"	f
deflateCopy	compat/zlib/deflate.c	/^int ZEXPORT deflateCopy(z_streamp dest, z_streamp source) {$/;"	f	typeref:typename:int ZEXPORT
deflateCopy	compat/zlib/zconf.h	/^#  define deflateCopy           z_deflateCopy$/;"	d
deflateCopy	compat/zlib/zconf.h.in	/^#  define deflateCopy           z_deflateCopy$/;"	d	file:
deflateEnd	compat/zlib/contrib/delphi/ZLib.pas	/^function deflateEnd(var strm: TZStreamRec): Integer; external;$/;"	f	typeref:typename:Integer
deflateEnd	compat/zlib/contrib/dotzlib/DotZLib/Deflater.cs	/^        private static extern int deflateEnd(ref ZStream sz);$/;"	m	class:DotZLib.Deflater	file:
deflateEnd	compat/zlib/contrib/pascal/zlibpas.pas	/^function deflateEnd(var strm: z_stream): Integer;$/;"	f	typeref:typename:Integer
deflateEnd	compat/zlib/contrib/pascal/zlibpas.pas	/^function deflateEnd; external;$/;"	f
deflateEnd	compat/zlib/deflate.c	/^int ZEXPORT deflateEnd(z_streamp strm) {$/;"	f	typeref:typename:int ZEXPORT
deflateEnd	compat/zlib/zconf.h	/^#  define deflateEnd            z_deflateEnd$/;"	d
deflateEnd	compat/zlib/zconf.h.in	/^#  define deflateEnd            z_deflateEnd$/;"	d	file:
deflateGetDictionary	compat/zlib/deflate.c	/^int ZEXPORT deflateGetDictionary(z_streamp strm, Bytef *dictionary,$/;"	f	typeref:typename:int ZEXPORT
deflateGetDictionary	compat/zlib/zconf.h	/^#  define deflateGetDictionary  z_deflateGetDictionary$/;"	d
deflateGetDictionary	compat/zlib/zconf.h.in	/^#  define deflateGetDictionary  z_deflateGetDictionary$/;"	d	file:
deflateInit	compat/zlib/contrib/ada/zlib-thin.ads	/^   function deflateInit$/;"	R
deflateInit	compat/zlib/contrib/pascal/zlibpas.pas	/^function deflateInit(var strm: z_stream; level: Integer): Integer;$/;"	f	typeref:typename:Integer
deflateInit	compat/zlib/zconf.h	/^#  define deflateInit           z_deflateInit$/;"	d
deflateInit	compat/zlib/zconf.h.in	/^#  define deflateInit           z_deflateInit$/;"	d	file:
deflateInit	compat/zlib/zlib.h	/^#  define deflateInit(/;"	d
deflateInit2	compat/zlib/contrib/ada/zlib-thin.ads	/^   function deflateInit2$/;"	R
deflateInit2	compat/zlib/contrib/pascal/zlibpas.pas	/^function deflateInit2(var strm: z_stream; level, method, windowBits, memLevel,$/;"	f
deflateInit2	compat/zlib/contrib/pascal/zlibpas.pas	/^function deflateInit2(var strm: z_stream; level, method, windowBits,$/;"	f
deflateInit2	compat/zlib/zconf.h	/^#  define deflateInit2          z_deflateInit2$/;"	d
deflateInit2	compat/zlib/zconf.h.in	/^#  define deflateInit2          z_deflateInit2$/;"	d	file:
deflateInit2	compat/zlib/zlib.h	/^#  define deflateInit2(/;"	d
deflateInit2_	compat/zlib/contrib/delphi/ZLib.pas	/^procedure deflateInit2_; external;$/;"	p
deflateInit2_	compat/zlib/contrib/pascal/zlibpas.pas	/^function deflateInit2_(var strm: z_stream;$/;"	f
deflateInit2_	compat/zlib/contrib/pascal/zlibpas.pas	/^function deflateInit2_; external;$/;"	f
deflateInit2_	compat/zlib/deflate.c	/^int ZEXPORT deflateInit2_(z_streamp strm, int level, int method,$/;"	f	typeref:typename:int ZEXPORT
deflateInit2_	compat/zlib/zconf.h	/^#  define deflateInit2_         z_deflateInit2_$/;"	d
deflateInit2_	compat/zlib/zconf.h.in	/^#  define deflateInit2_         z_deflateInit2_$/;"	d	file:
deflateInit_	compat/zlib/contrib/delphi/ZLib.pas	/^function deflateInit_(var strm: TZStreamRec; level: Integer; version: PChar;$/;"	f
deflateInit_	compat/zlib/contrib/dotzlib/DotZLib/Deflater.cs	/^        private static extern int deflateInit_(ref ZStream sz, int level, string vs, int size);$/;"	m	class:DotZLib.Deflater	file:
deflateInit_	compat/zlib/contrib/pascal/zlibpas.pas	/^function deflateInit_(var strm: z_stream; level: Integer;$/;"	f
deflateInit_	compat/zlib/contrib/pascal/zlibpas.pas	/^function deflateInit_; external;$/;"	f
deflateInit_	compat/zlib/deflate.c	/^int ZEXPORT deflateInit_(z_streamp strm, int level, const char *version,$/;"	f	typeref:typename:int ZEXPORT
deflateInit_	compat/zlib/zconf.h	/^#  define deflateInit_          z_deflateInit_$/;"	d
deflateInit_	compat/zlib/zconf.h.in	/^#  define deflateInit_          z_deflateInit_$/;"	d	file:
deflateParams	compat/zlib/contrib/ada/zlib-thin.ads	/^   function deflateParams$/;"	R
deflateParams	compat/zlib/contrib/delphi/ZLib.pas	/^procedure deflateParams; external;$/;"	p
deflateParams	compat/zlib/contrib/pascal/zlibpas.pas	/^function deflateParams(var strm: z_stream; level, strategy: Integer): Integer;$/;"	f	typeref:typename:Integer
deflateParams	compat/zlib/contrib/pascal/zlibpas.pas	/^function deflateParams; external;$/;"	f
deflateParams	compat/zlib/deflate.c	/^int ZEXPORT deflateParams(z_streamp strm, int level, int strategy) {$/;"	f	typeref:typename:int ZEXPORT
deflateParams	compat/zlib/zconf.h	/^#  define deflateParams         z_deflateParams$/;"	d
deflateParams	compat/zlib/zconf.h.in	/^#  define deflateParams         z_deflateParams$/;"	d	file:
deflatePending	compat/zlib/contrib/pascal/zlibpas.pas	/^function deflatePending(var strm: z_stream; var pending: Integer; var bits: Integer): Integer;$/;"	f	typeref:typename:Integer
deflatePending	compat/zlib/contrib/pascal/zlibpas.pas	/^function deflatePending; external;$/;"	f
deflatePending	compat/zlib/deflate.c	/^int ZEXPORT deflatePending(z_streamp strm, unsigned *pending, int *bits) {$/;"	f	typeref:typename:int ZEXPORT
deflatePending	compat/zlib/zconf.h	/^#  define deflatePending        z_deflatePending$/;"	d
deflatePending	compat/zlib/zconf.h.in	/^#  define deflatePending        z_deflatePending$/;"	d	file:
deflatePrime	compat/zlib/contrib/pascal/zlibpas.pas	/^function deflatePrime(var strm: z_stream; bits, value: Integer): Integer;$/;"	f	typeref:typename:Integer
deflatePrime	compat/zlib/contrib/pascal/zlibpas.pas	/^function deflatePrime; external;$/;"	f
deflatePrime	compat/zlib/deflate.c	/^int ZEXPORT deflatePrime(z_streamp strm, int bits, int value) {$/;"	f	typeref:typename:int ZEXPORT
deflatePrime	compat/zlib/zconf.h	/^#  define deflatePrime          z_deflatePrime$/;"	d
deflatePrime	compat/zlib/zconf.h.in	/^#  define deflatePrime          z_deflatePrime$/;"	d	file:
deflateReset	compat/zlib/contrib/ada/zlib-thin.ads	/^   function deflateReset (strm : Z_Streamp) return Int; -- zlib.h:495$/;"	R
deflateReset	compat/zlib/contrib/dotzlib/DotZLib/Deflater.cs	/^        private static extern int deflateReset(ref ZStream sz);$/;"	m	class:DotZLib.Deflater	file:
deflateReset	compat/zlib/contrib/pascal/zlibpas.pas	/^function deflateReset(var strm: z_stream): Integer;$/;"	f	typeref:typename:Integer
deflateReset	compat/zlib/contrib/pascal/zlibpas.pas	/^function deflateReset; external;$/;"	f
deflateReset	compat/zlib/deflate.c	/^int ZEXPORT deflateReset(z_streamp strm) {$/;"	f	typeref:typename:int ZEXPORT
deflateReset	compat/zlib/zconf.h	/^#  define deflateReset          z_deflateReset$/;"	d
deflateReset	compat/zlib/zconf.h.in	/^#  define deflateReset          z_deflateReset$/;"	d	file:
deflateResetKeep	compat/zlib/deflate.c	/^int ZEXPORT deflateResetKeep(z_streamp strm) {$/;"	f	typeref:typename:int ZEXPORT
deflateResetKeep	compat/zlib/zconf.h	/^#  define deflateResetKeep      z_deflateResetKeep$/;"	d
deflateResetKeep	compat/zlib/zconf.h.in	/^#  define deflateResetKeep      z_deflateResetKeep$/;"	d	file:
deflateSetDictionary	compat/zlib/contrib/ada/zlib-thin.ads	/^   function deflateSetDictionary$/;"	R
deflateSetDictionary	compat/zlib/contrib/pascal/zlibpas.pas	/^function deflateSetDictionary(var strm: z_stream; const dictionary: PChar;$/;"	f
deflateSetDictionary	compat/zlib/contrib/pascal/zlibpas.pas	/^function deflateSetDictionary; external;$/;"	f
deflateSetDictionary	compat/zlib/deflate.c	/^int ZEXPORT deflateSetDictionary(z_streamp strm, const Bytef *dictionary,$/;"	f	typeref:typename:int ZEXPORT
deflateSetDictionary	compat/zlib/zconf.h	/^#  define deflateSetDictionary  z_deflateSetDictionary$/;"	d
deflateSetDictionary	compat/zlib/zconf.h.in	/^#  define deflateSetDictionary  z_deflateSetDictionary$/;"	d	file:
deflateSetHeader	compat/zlib/contrib/pascal/zlibpas.pas	/^function deflateSetHeader(var strm: z_stream; head: gz_header): Integer;$/;"	f	typeref:typename:Integer
deflateSetHeader	compat/zlib/contrib/pascal/zlibpas.pas	/^function deflateSetHeader; external;$/;"	f
deflateSetHeader	compat/zlib/deflate.c	/^int ZEXPORT deflateSetHeader(z_streamp strm, gz_headerp head) {$/;"	f	typeref:typename:int ZEXPORT
deflateSetHeader	compat/zlib/zconf.h	/^#  define deflateSetHeader      z_deflateSetHeader$/;"	d
deflateSetHeader	compat/zlib/zconf.h.in	/^#  define deflateSetHeader      z_deflateSetHeader$/;"	d	file:
deflateStateCheck	compat/zlib/deflate.c	/^local int deflateStateCheck(z_streamp strm) {$/;"	f	typeref:typename:local int
deflateTune	compat/zlib/contrib/pascal/zlibpas.pas	/^function deflateTune(var strm: z_stream; good_length, max_lazy, nice_length, max_chain: Integer)/;"	f	typeref:typename:Integer
deflateTune	compat/zlib/contrib/pascal/zlibpas.pas	/^function deflateTune; external;$/;"	f
deflateTune	compat/zlib/deflate.c	/^int ZEXPORT deflateTune(z_streamp strm, int good_length, int max_lazy,$/;"	f	typeref:typename:int ZEXPORT
deflateTune	compat/zlib/zconf.h	/^#  define deflateTune           z_deflateTune$/;"	d
deflateTune	compat/zlib/zconf.h.in	/^#  define deflateTune           z_deflateTune$/;"	d	file:
deflate_copyright	compat/zlib/deflate.c	/^const char deflate_copyright[] =$/;"	v	typeref:typename:const char[]
deflate_copyright	compat/zlib/zconf.h	/^#  define deflate_copyright     z_deflate_copyright$/;"	d
deflate_copyright	compat/zlib/zconf.h.in	/^#  define deflate_copyright     z_deflate_copyright$/;"	d	file:
deflate_fast	compat/zlib/deflate.c	/^local block_state deflate_fast(deflate_state *s, int flush) {$/;"	f	typeref:typename:local block_state
deflate_huff	compat/zlib/deflate.c	/^local block_state deflate_huff(deflate_state *s, int flush) {$/;"	f	typeref:typename:local block_state
deflate_index	compat/zlib/examples/zran.h	/^struct deflate_index {$/;"	s
deflate_index_build	compat/zlib/examples/zran.c	/^int deflate_index_build(FILE *in, off_t span, struct deflate_index **built) {$/;"	f	typeref:typename:int
deflate_index_extract	compat/zlib/examples/zran.c	/^ptrdiff_t deflate_index_extract(FILE *in, struct deflate_index *index,$/;"	f	typeref:typename:ptrdiff_t
deflate_index_free	compat/zlib/examples/zran.c	/^void deflate_index_free(struct deflate_index *index) {$/;"	f	typeref:typename:void
deflate_rle	compat/zlib/deflate.c	/^local block_state deflate_rle(deflate_state *s, int flush) {$/;"	f	typeref:typename:local block_state
deflate_slow	compat/zlib/deflate.c	/^local block_state deflate_slow(deflate_state *s, int flush) {$/;"	f	typeref:typename:local block_state
deflate_state	compat/zlib/deflate.h	/^} FAR deflate_state;$/;"	t	typeref:struct:internal_state FAR
deflate_stored	compat/zlib/deflate.c	/^local block_state deflate_stored(deflate_state *s, int flush) {$/;"	f	typeref:typename:local block_state
deflatestate	compat/zlib/contrib/asm686/match.S	/^#define	deflatestate	/;"	d	file:
defs2311	tools/tclsh.svg	/^     id="defs2311" \/>$/;"	i
delInterp	generic/tclTest.c	/^static Tcl_Interp *delInterp;$/;"	v	typeref:typename:Tcl_Interp *	file:
delProc	generic/tclInt.h	/^    Tcl_CmdObjTraceDeleteProc *delProc;$/;"	m	struct:Trace	typeref:typename:Tcl_CmdObjTraceDeleteProc *
delProc	generic/tclTrace.c	/^    Tcl_CmdObjTraceDeleteProc *delProc;$/;"	m	struct:__anonfe0b53740508	typeref:typename:Tcl_CmdObjTraceDeleteProc *	file:
delString	generic/tclTest.c	/^static Tcl_DString delString;$/;"	v	typeref:typename:Tcl_DString	file:
deleteClientdataProc	generic/tclOOInt.h	/^    TclOO_PmCDDeleteProc *deleteClientdataProc;$/;"	m	struct:ProcedureMethod	typeref:typename:TclOO_PmCDDeleteProc *
deleteCmd	generic/tclTest.c	/^    char *deleteCmd;		\/* Script to execute when command is deleted.$/;"	m	struct:__anon0e9396a50108	typeref:typename:char *	file:
deleteData	generic/tcl.h	/^    void *deleteData;		\/* Value to pass to deleteProc (usually the$/;"	m	struct:__anon937aefea0708	typeref:typename:void *
deleteData	generic/tclBasic.c	/^    void *deleteData; \/* Arbitrary value to pass to deleteProc function. *\/$/;"	m	struct:__anon6e1456070808	typeref:typename:void *	file:
deleteData	generic/tclInt.h	/^    void *deleteData;		\/* Arbitrary value passed to deleteProc. *\/$/;"	m	struct:Command	typeref:typename:void *
deleteFileHandlerProc	generic/tcl.h	/^    Tcl_DeleteFileHandlerProc *deleteFileHandlerProc;$/;"	m	struct:Tcl_NotifierProcs	typeref:typename:Tcl_DeleteFileHandlerProc *
deleteFileProc	generic/tcl.h	/^    Tcl_FSDeleteFileProc *deleteFileProc;$/;"	m	struct:Tcl_Filesystem	typeref:typename:Tcl_FSDeleteFileProc *
deleteProc	generic/tcl.h	/^    Tcl_CmdDeleteProc *deleteProc;$/;"	m	struct:__anon937aefea0708	typeref:typename:Tcl_CmdDeleteProc *
deleteProc	generic/tcl.h	/^    Tcl_NamespaceDeleteProc *deleteProc;$/;"	m	struct:Tcl_Namespace	typeref:typename:Tcl_NamespaceDeleteProc *
deleteProc	generic/tclBasic.c	/^    Tcl_CmdDeleteProc *deleteProc;$/;"	m	struct:__anon6e1456070808	typeref:typename:Tcl_CmdDeleteProc *	file:
deleteProc	generic/tclInt.h	/^    Tcl_CmdDeleteProc *deleteProc;$/;"	m	struct:Command	typeref:typename:Tcl_CmdDeleteProc *
deleteProc	generic/tclInt.h	/^    Tcl_NamespaceDeleteProc *deleteProc;$/;"	m	struct:Namespace	typeref:typename:Tcl_NamespaceDeleteProc *
deleteProc	generic/tclInt.h	/^    Tcl_ResolveVarDeleteProc *deleteProc;$/;"	m	struct:Tcl_ResolvedVarInfo	typeref:typename:Tcl_ResolveVarDeleteProc *
deleteProc	generic/tclInterp.c	/^    Tcl_LimitHandlerDeleteProc *deleteProc;$/;"	m	struct:LimitHandler	typeref:typename:Tcl_LimitHandlerDeleteProc *	file:
deleteProc	generic/tclOO.h	/^    Tcl_MethodDeleteProc *deleteProc;$/;"	m	struct:Tcl_MethodType	typeref:typename:Tcl_MethodDeleteProc *
deleteProc	generic/tclOO.h	/^    Tcl_MethodDeleteProc *deleteProc;$/;"	m	struct:Tcl_MethodType2	typeref:typename:Tcl_MethodDeleteProc *
deleteProc	generic/tclOO.h	/^    Tcl_ObjectMetadataDeleteProc *deleteProc;$/;"	m	struct:Tcl_ObjectMetadataType	typeref:typename:Tcl_ObjectMetadataDeleteProc *
deletionCount	generic/tclObj.c	/^    int deletionCount;		\/* Count of the number of invocations of$/;"	m	struct:PendingObjData	typeref:typename:int	file:
deletionStack	generic/tclObj.c	/^    Tcl_Obj *deletionStack;	\/* Stack of objects that have had TclFreeObj()$/;"	m	struct:PendingObjData	typeref:typename:Tcl_Obj *	file:
delsub	generic/regc_nfa.c	/^delsub($/;"	f	typeref:typename:void	file:
deltraverse	generic/regc_nfa.c	/^deltraverse($/;"	f	typeref:typename:void	file:
demos	compat/zlib/contrib/minizip/configure.ac	/^AC_ARG_ENABLE([demos], AC_HELP_STRING([--enable-demos], [build example programs]))$/;"	e
depend	unix/Makefile.in	/^depend:$/;"	t
depend	win/Makefile.in	/^depend:$/;"	t
deploy_make_args	macosx/GNUmakefile	/^deploy_make_args	:= BUILD_STYLE=Deployment INSTALL_TARGET=install-strip \\$/;"	m
depth	compat/zlib/deflate.h	/^    uch depth[2*L_CODES+1];$/;"	m	struct:internal_state	typeref:typename:uch[]
depth	generic/tclZipfs.c	/^    int depth;			\/* Number of slashes in path. *\/$/;"	m	struct:ZipEntry	typeref:typename:int	file:
destroystate	generic/regc_nfa.c	/^destroystate($/;"	f	typeref:typename:void	file:
destructorChainPtr	generic/tclOOInt.h	/^    CallChain *destructorChainPtr;$/;"	m	struct:Class	typeref:typename:CallChain *
destructorName	generic/tclOOInt.h	/^    Tcl_Obj *destructorName;	\/* Shared object containing the "name" of a$/;"	m	struct:Foundation	typeref:typename:Tcl_Obj *
destructorPtr	generic/tclOOInt.h	/^    Method *destructorPtr;	\/* Method record of the class destructor (if$/;"	m	struct:Class	typeref:typename:Method *
detList	generic/tclPipe.c	/^static Detached *detList = NULL;\/* List of all detached proceses. *\/$/;"	v	typeref:typename:Detached *	file:
details	generic/regexec.c	/^    rm_detail_t *details;$/;"	m	struct:vars	typeref:typename:rm_detail_t *	file:
details	generic/tclRegexp.h	/^    rm_detail_t details;	\/* Detailed information on match (currently$/;"	m	struct:TclRegexp	typeref:typename:rm_detail_t
detect_data_type	compat/zlib/trees.c	/^local int detect_data_type(deflate_state *s) {$/;"	f	typeref:typename:local int
develop_make_args	macosx/GNUmakefile	/^develop_make_args	:= BUILD_STYLE=Development CONFIGURE_ARGS=--enable-symbols$/;"	m
devmajor	compat/zlib/contrib/untgz/untgz.c	/^  char devmajor[8];             \/* 329 *\/$/;"	m	struct:tar_header	typeref:typename:char[8]	file:
devminor	compat/zlib/contrib/untgz/untgz.c	/^  char devminor[8];             \/* 337 *\/$/;"	m	struct:tar_header	typeref:typename:char[8]	file:
dfa	generic/regexec.c	/^    struct dfa dfa;$/;"	m	struct:smalldfa	typeref:struct:dfa	file:
dfa	generic/regexec.c	/^struct dfa {$/;"	s	file:
dfa1	generic/regexec.c	/^    struct smalldfa dfa1;$/;"	m	struct:vars	typeref:struct:smalldfa	file:
dfa2	generic/regexec.c	/^    struct smalldfa dfa2;$/;"	m	struct:vars	typeref:struct:smalldfa	file:
dictId	compat/zlib/test/example.c	/^static uLong dictId;    \/* Adler32 value of the dictionary *\/$/;"	v	typeref:typename:uLong	file:
dictIteratorType	generic/tclExecute.c	/^static const Tcl_ObjType dictIteratorType = {$/;"	v	typeref:typename:const Tcl_ObjType	file:
dictObjInterface	generic/tclDictObj.c	/^ObjInterface dictObjInterface;$/;"	v	typeref:typename:ObjInterface
dictUpdateInfoType	generic/tclCompCmds.c	/^static const AuxDataType dictUpdateInfoType = {$/;"	v	typeref:typename:const AuxDataType	file:
dictionary	compat/zlib/test/example.c	/^static const char dictionary[] = "hello";$/;"	v	typeref:typename:const char[]	file:
dictionaryPtr	generic/tcl.h	/^    Tcl_Dict dictionaryPtr;	\/* Reference to dictionary being searched. *\/$/;"	m	struct:__anon937aefea0908	typeref:typename:Tcl_Dict
digitRangeTable	generic/regc_locale.c	/^static const crange digitRangeTable[] = {$/;"	v	typeref:typename:const crange[]	file:
direct	compat/zlib/gzguts.h	/^    int direct;             \/* 0 if processing gzip, 1 if transparent *\/$/;"	m	struct:__anon361a15920108	typeref:typename:int
directoryOffset	generic/tclZipfs.c	/^    size_t directoryOffset;	\/* Archive directory start *\/$/;"	m	struct:ZipFile	typeref:typename:size_t	file:
directorySize	generic/tclZipfs.c	/^    size_t directorySize;	\/* Size of archive directory *\/$/;"	m	struct:ZipFile	typeref:typename:size_t	file:
dirty	win/tclWinChan.c	/^    int dirty;			\/* Boolean flag. Set if the OS may have data$/;"	m	struct:FileInfo	typeref:typename:int	file:
disable_buffer	compat/zlib/contrib/iostream3/zfstream.cc	/^gzfilebuf::disable_buffer()$/;"	f	class:gzfilebuf	typeref:typename:void
disassembleProc	generic/tclCompile.h	/^    AuxDataPrintProc *disassembleProc;$/;"	m	struct:AuxDataType	typeref:typename:AuxDataPrintProc *
disk_num_start	compat/zlib/contrib/minizip/unzip.h	/^    uLong disk_num_start;       \/* disk number start               2 bytes *\/$/;"	m	struct:unz_file_info64_s	typeref:typename:uLong
disk_num_start	compat/zlib/contrib/minizip/unzip.h	/^    uLong disk_num_start;       \/* disk number start               2 bytes *\/$/;"	m	struct:unz_file_info_s	typeref:typename:uLong
dist	compat/zlib/contrib/inflate86/inffas86.c	/^\/*112   68 *\/ unsigned dist;            \/*     r15  match distance *\/$/;"	m	struct:inflate_fast::inffast_ar	typeref:typename:unsigned	file:
dist	unix/Makefile.in	/^dist: $(UNIX_DIR)\/configure $(UNIX_DIR)\/tclConfig.h.in $(UNIX_DIR)\/tcl.pc.in genstubs \\$/;"	t
dist-packages	unix/Makefile.in	/^dist-packages: configure-packages$/;"	t
distbits	compat/zlib/inflate.h	/^    unsigned distbits;          \/* index bits for distcode *\/$/;"	m	struct:inflate_state	typeref:typename:unsigned
distclean	compat/zlib/Makefile	/^distclean:$/;"	t
distclean	compat/zlib/Makefile.in	/^distclean: clean zconf zconf.h.cmakein$/;"	t
distclean	macosx/GNUmakefile	/^distclean		: ${distclean}$/;"	t
distclean	macosx/GNUmakefile	/^distclean		:= ${styles:%=distclean-%}$/;"	m
distclean	unix/Makefile.in	/^distclean: distclean-packages clean$/;"	t
distclean	unix/dltest/Makefile.in	/^distclean: clean$/;"	t
distclean	win/Makefile.in	/^distclean: distclean-packages clean$/;"	t
distclean-${PROJECT}	macosx/GNUmakefile	/^clean-${PROJECT} distclean-${PROJECT} test-${PROJECT}: \\$/;"	t
distclean-${PROJECT}	macosx/GNUmakefile	/^distclean-${PROJECT}: %-${PROJECT}: clean-${PROJECT}$/;"	t
distclean-%	macosx/GNUmakefile	/^distclean-%:		action := distclean-$/;"	t
distclean-packages	unix/Makefile.in	/^distclean-packages:$/;"	t
distclean-packages	win/Makefile.in	/^distclean-packages:$/;"	t
distcode	compat/zlib/inflate.h	/^    code const FAR *distcode;   \/* starting table for distance codes *\/$/;"	m	struct:inflate_state	typeref:typename:code const FAR *
distfix	compat/zlib/contrib/infback9/inffix9.h	/^    static const code distfix[32] = {$/;"	v	typeref:typename:const code[32]
distfix	compat/zlib/inffixed.h	/^    static const code distfix[32] = {$/;"	v	typeref:typename:const code[32]
divideRules	tools/tclZIC.tcl	/^proc divideRules {ruleSet year} {$/;"	p
divider	generic/tclDate.h	/^    unsigned short divider;$/;"	m	struct:ClockFormatTokenMap	typeref:typename:unsigned short
divmod	generic/tclDate.h	/^    unsigned short divmod;$/;"	m	struct:ClockFormatTokenMap	typeref:typename:unsigned short
dl	compat/zlib/deflate.h	/^    } dl;$/;"	m	struct:ct_data_s	typeref:union:ct_data_s::__anond731f1a3020a
dlHandle	unix/tclLoadDyld.c	/^    void *dlHandle;$/;"	m	struct:__anoncff33eb90108	typeref:typename:void *	file:
dl_info	compat/dlfcn.h	/^struct dl_info {$/;"	s
dlclose	unix/tclLoadAix.c	/^dlclose($/;"	f	typeref:typename:int
dlerror	generic/tclStubCall.c	/^#   define dlerror(/;"	d	file:
dlerror	unix/tclLoadAix.c	/^dlerror(void)$/;"	f	typeref:typename:char *
dll-unloading	unix/configure.ac	/^AC_ARG_ENABLE(dll-unloading,$/;"	e
dllDirectoryName	win/tclWinLoad.c	/^static WCHAR *dllDirectoryName = NULL;$/;"	v	typeref:typename:WCHAR *	file:
dllDirectoryNameMutex	win/tclWinLoad.c	/^static Tcl_Mutex dllDirectoryNameMutex;$/;"	v	typeref:typename:Tcl_Mutex	file:
dlopen	generic/tclStubCall.c	/^#   define dlopen(/;"	d	file:
dlopen	unix/tclLoadAix.c	/^dlopen($/;"	f	typeref:typename:void *
dlsym	generic/tclStubCall.c	/^#   define dlsym(/;"	d	file:
dlsym	unix/tclLoadAix.c	/^dlsym($/;"	f	typeref:typename:void *
dltest.marker	unix/Makefile.in	/^dltest.marker: ${STUB_LIB_FILE}$/;"	t
dltest_suffix	unix/dltest/Makefile.in	/^dltest_suffix: tcl9pkga${DLTEST_SUFFIX} tcl9pkgb${DLTEST_SUFFIX} tcl9pkgc${DLTEST_SUFFIX} \\$/;"	t
dmask	compat/zlib/contrib/inflate86/inffas86.c	/^\/*104   60 *\/ unsigned dmask;           \/*     r13  mask for dcode *\/$/;"	m	struct:inflate_fast::inffast_ar	typeref:typename:unsigned	file:
dmax	compat/zlib/inflate.h	/^    unsigned dmax;              \/* zlib header max distance (INFLATE_STRICT) *\/$/;"	m	struct:inflate_state	typeref:typename:unsigned
doNothing	generic/tclStubInit.c	/^doNothing(void)$/;"	f	typeref:typename:void	file:
doReset	unix/tclUnixChan.c	/^    int doReset;		\/* Whether we should do a terminal reset on$/;"	m	struct:__anone1e2a72a0208	typeref:typename:int	file:
do_banner	compat/zlib/contrib/minizip/miniunz.c	/^static void do_banner(void) {$/;"	f	typeref:typename:void	file:
do_banner	compat/zlib/contrib/minizip/minizip.c	/^static void do_banner(void) {$/;"	f	typeref:typename:void	file:
do_extract	compat/zlib/contrib/minizip/miniunz.c	/^static int do_extract(unzFile uf, int opt_extract_without_path, int opt_overwrite, const char* p/;"	f	typeref:typename:int	file:
do_extract_currentfile	compat/zlib/contrib/minizip/miniunz.c	/^static int do_extract_currentfile(unzFile uf, const int* popt_extract_without_path, int* popt_ov/;"	f	typeref:typename:int	file:
do_extract_onefile	compat/zlib/contrib/minizip/miniunz.c	/^static int do_extract_onefile(unzFile uf, const char* filename, int opt_extract_without_path, in/;"	f	typeref:typename:int	file:
do_help	compat/zlib/contrib/minizip/miniunz.c	/^static void do_help(void) {$/;"	f	typeref:typename:void	file:
do_help	compat/zlib/contrib/minizip/minizip.c	/^static void do_help(void) {$/;"	f	typeref:typename:void	file:
do_list	compat/zlib/contrib/minizip/miniunz.c	/^static int do_list(unzFile uf) {$/;"	f	typeref:typename:int	file:
dobuilds	win/vctool.bat	/^:dobuilds$/;"	l
doc	unix/Makefile.in	/^doc:$/;"	t
doc	win/Makefile.in	/^doc:$/;"	t
docs	compat/zlib/Makefile.in	/^docs: zlib.3.pdf$/;"	t
done	compat/zlib/crc32.c	/^    atomic_int done;$/;"	m	struct:once_s	typeref:typename:atomic_int	file:
done	compat/zlib/crc32.c	/^    volatile int done;$/;"	m	struct:once_s	typeref:typename:volatile int	file:
done	compat/zlib/examples/enough.c	/^    struct tab *done;   \/\/ states already evaluated array$/;"	m	struct:__anonea7b679d0208	typeref:struct:tab *	file:
done	compat/zlib/zlib.h	/^    int     done;       \/* true when done reading gzip header (not used$/;"	m	struct:gz_header_s	typeref:typename:int
done	generic/tclIORChan.c	/^    Tcl_Condition done;		\/* Condition variable the forwarder blocks$/;"	m	struct:ForwardingResult	typeref:typename:Tcl_Condition	file:
done	generic/tclIORTrans.c	/^    Tcl_Condition done;		\/* Condition variable the forwarder blocks$/;"	m	struct:ForwardingResult	typeref:typename:Tcl_Condition	file:
done	generic/tclThreadJoin.c	/^    int done;			\/* Boolean flag. Initialized to 0 and set to 1$/;"	m	struct:JoinableThread	typeref:typename:int	file:
done	generic/tclThreadTest.c	/^    Tcl_Condition done;		\/* Signaled when the script completes *\/$/;"	m	struct:ThreadEventResult	typeref:typename:Tcl_Condition	file:
done	win/vctool.bat	/^:done$/;"	l
donePtr	generic/tclEvent.c	/^    int *donePtr;		\/* Pointer to flag to signal or NULL. *\/$/;"	m	struct:__anon850510a70208	typeref:typename:int *	file:
dosDate	compat/zlib/contrib/minizip/unzip.h	/^    uLong dosDate;              \/* last mod file date in Dos fmt   4 bytes *\/$/;"	m	struct:unz_file_info64_s	typeref:typename:uLong
dosDate	compat/zlib/contrib/minizip/unzip.h	/^    uLong dosDate;              \/* last mod file date in Dos fmt   4 bytes *\/$/;"	m	struct:unz_file_info_s	typeref:typename:uLong
dosDate	compat/zlib/contrib/minizip/zip.c	/^    uLong dosDate;$/;"	m	struct:__anon7add25cb0108	typeref:typename:uLong	file:
dosDate	compat/zlib/contrib/minizip/zip.h	/^    uLong       dosDate;       \/* if dos_date == 0, tmu_date is used      *\/$/;"	m	struct:__anon7add25d00108	typeref:typename:uLong
doubleValue	generic/tcl.h	/^    double doubleValue;		\/*   - a double-precision floating value. *\/$/;"	m	union:Tcl_ObjInternalRep	typeref:typename:double
doubleValue	generic/tclCmdIL.c	/^	double doubleValue;$/;"	m	union:SortElement::__anond5eb1cce010a	typeref:typename:double	file:
doubleValue	generic/tclDTrace.d	/^	double doubleValue;$/;"	m	union:Tcl_Obj.__anon1	file:
dovec	generic/regcomp.c	/^dovec($/;"	f	typeref:typename:void	file:
downChanPtr	generic/tclIO.h	/^    struct Channel *downChanPtr;\/* Refers to channel this one was stacked$/;"	m	struct:Channel	typeref:struct:Channel *
downShift	generic/tcl.h	/^    int downShift;		\/* Shift count used in hashing function.$/;"	m	struct:Tcl_HashTable	typeref:typename:int
dp	generic/tclTomMath.h	/^	mp_digit *dp;$/;"	m	struct:mp_int	typeref:typename:mp_digit *
dp	libtommath/tommath.h	/^   mp_digit *dp;$/;"	m	struct:mp_int	typeref:typename:mp_digit *
dpow5	generic/tclStrToD.c	/^static const mp_digit dpow5[13] = {$/;"	v	typeref:typename:const mp_digit[13]	file:
driveLetter	win/tclWin32Dll.c	/^    WCHAR driveLetter;		\/* Drive letter corresponding to the volume$/;"	m	struct:MountPointMap	typeref:typename:WCHAR	file:
driveLetterLookup	win/tclWin32Dll.c	/^MountPointMap *driveLetterLookup = NULL;$/;"	v	typeref:typename:MountPointMap *
dropstate	generic/regc_nfa.c	/^dropstate($/;"	f	typeref:typename:void	file:
dsGoodMatch	compat/zlib/contrib/asm686/match.S	/^#define	dsGoodMatch	/;"	d	file:
dsGoodMatch	compat/zlib/contrib/gcc_gvmat64/gvmat64.S	/^#define dsGoodMatch /;"	d	file:
dsLookahead	compat/zlib/contrib/asm686/match.S	/^#define	dsLookahead	/;"	d	file:
dsLookahead	compat/zlib/contrib/gcc_gvmat64/gvmat64.S	/^#define dsLookahead /;"	d	file:
dsMatchLen	compat/zlib/contrib/asm686/match.S	/^#define	dsMatchLen	/;"	d	file:
dsMatchLen	compat/zlib/contrib/gcc_gvmat64/gvmat64.S	/^#define dsMatchLen /;"	d	file:
dsMatchStart	compat/zlib/contrib/asm686/match.S	/^#define	dsMatchStart	/;"	d	file:
dsMatchStart	compat/zlib/contrib/gcc_gvmat64/gvmat64.S	/^#define dsMatchStart /;"	d	file:
dsMaxChainLen	compat/zlib/contrib/asm686/match.S	/^#define	dsMaxChainLen	/;"	d	file:
dsMaxChainLen	compat/zlib/contrib/gcc_gvmat64/gvmat64.S	/^#define dsMaxChainLen /;"	d	file:
dsNiceMatch	compat/zlib/contrib/asm686/match.S	/^#define	dsNiceMatch	/;"	d	file:
dsNiceMatch	compat/zlib/contrib/gcc_gvmat64/gvmat64.S	/^#define dsNiceMatch /;"	d	file:
dsPrev	compat/zlib/contrib/asm686/match.S	/^#define	dsPrev	/;"	d	file:
dsPrev	compat/zlib/contrib/gcc_gvmat64/gvmat64.S	/^#define dsPrev /;"	d	file:
dsPrevLen	compat/zlib/contrib/asm686/match.S	/^#define	dsPrevLen	/;"	d	file:
dsPrevLen	compat/zlib/contrib/gcc_gvmat64/gvmat64.S	/^#define dsPrevLen /;"	d	file:
dsPrevMatch	compat/zlib/contrib/asm686/match.S	/^#define	dsPrevMatch	/;"	d	file:
dsPrevMatch	compat/zlib/contrib/gcc_gvmat64/gvmat64.S	/^#define dsPrevMatch /;"	d	file:
dsStrStart	compat/zlib/contrib/asm686/match.S	/^#define	dsStrStart	/;"	d	file:
dsStrStart	compat/zlib/contrib/gcc_gvmat64/gvmat64.S	/^#define dsStrStart /;"	d	file:
dsWMask	compat/zlib/contrib/asm686/match.S	/^#define	dsWMask	/;"	d	file:
dsWMask	compat/zlib/contrib/gcc_gvmat64/gvmat64.S	/^#define dsWMask /;"	d	file:
dsWSize	compat/zlib/contrib/asm686/match.S	/^#define	dsWSize	/;"	d	file:
dsWSize	compat/zlib/contrib/gcc_gvmat64/gvmat64.S	/^#define dsWSize /;"	d	file:
dsWindow	compat/zlib/contrib/asm686/match.S	/^#define	dsWindow	/;"	d	file:
dsWindow	compat/zlib/contrib/gcc_gvmat64/gvmat64.S	/^#define dsWindow /;"	d	file:
dst	generic/tclIORChan.c	/^    Tcl_ThreadId dst;		\/* Thread the op was forwarded to. *\/$/;"	m	struct:ForwardingResult	typeref:typename:Tcl_ThreadId	file:
dst	generic/tclIORTrans.c	/^    Tcl_ThreadId dst;		\/* Thread the op was forwarded to. *\/$/;"	m	struct:ForwardingResult	typeref:typename:Tcl_ThreadId	file:
dstPtr	generic/tcl.h	/^    void *dstPtr;		\/* Address of value to be modified; usage$/;"	m	struct:__anon937aefea0b08	typeref:typename:void *
dstPtr	generic/tclIO.c	/^    char **dstPtr;		\/* Pointer into objPtr's string rep where$/;"	m	struct:GetsState	typeref:typename:char **	file:
dstThreadId	generic/tclThreadTest.c	/^    Tcl_ThreadId dstThreadId;	\/* Id of target thread, in case it dies *\/$/;"	m	struct:ThreadEventResult	typeref:typename:Tcl_ThreadId	file:
dsti	generic/tclIORChan.c	/^    Tcl_Interp *dsti;		\/* Interpreter in the thread the op was$/;"	m	struct:ForwardingResult	typeref:typename:Tcl_Interp *	file:
dsti	generic/tclIORTrans.c	/^    Tcl_Interp *dsti;		\/* Interpreter in the thread the op was$/;"	m	struct:ForwardingResult	typeref:typename:Tcl_Interp *	file:
dstring	generic/tclTest.c	/^static Tcl_DString dstring;$/;"	v	typeref:typename:Tcl_DString	file:
dtrace	unix/configure.ac	/^AC_ARG_ENABLE(dtrace,$/;"	e
dummy	win/tclWinFile.c	/^    REPARSE_DATA_BUFFER dummy;$/;"	m	struct:__anon1c302b040508	typeref:typename:REPARSE_DATA_BUFFER	file:
dummy1	generic/tcl.h	/^    int dummy1;$/;"	m	struct:Tcl_CallFrame	typeref:typename:int
dummy10	generic/tcl.h	/^    void *dummy10;$/;"	m	struct:Tcl_CallFrame	typeref:typename:void *
dummy11	generic/tcl.h	/^    void *dummy11;$/;"	m	struct:Tcl_CallFrame	typeref:typename:void *
dummy12	generic/tcl.h	/^    void *dummy12;$/;"	m	struct:Tcl_CallFrame	typeref:typename:void *
dummy13	generic/tcl.h	/^    void *dummy13;$/;"	m	struct:Tcl_CallFrame	typeref:typename:void *
dummy2	generic/tcl.h	/^    Tcl_Size dummy2;$/;"	m	struct:Tcl_CallFrame	typeref:typename:Tcl_Size
dummy3	generic/tcl.h	/^    void *dummy3;$/;"	m	struct:Tcl_CallFrame	typeref:typename:void *
dummy4	generic/tcl.h	/^    void *dummy4;$/;"	m	struct:Tcl_CallFrame	typeref:typename:void *
dummy5	generic/tcl.h	/^    void *dummy5;$/;"	m	struct:Tcl_CallFrame	typeref:typename:void *
dummy6	generic/tcl.h	/^    Tcl_Size dummy6;$/;"	m	struct:Tcl_CallFrame	typeref:typename:Tcl_Size
dummy7	generic/tcl.h	/^    void *dummy7;$/;"	m	struct:Tcl_CallFrame	typeref:typename:void *
dummy8	generic/tcl.h	/^    void *dummy8;$/;"	m	struct:Tcl_CallFrame	typeref:typename:void *
dummy9	generic/tcl.h	/^    Tcl_Size dummy9;$/;"	m	struct:Tcl_CallFrame	typeref:typename:Tcl_Size
dummyBuf	win/tclWinFile.c	/^    WCHAR dummyBuf[MAX_PATH * 3];$/;"	m	struct:__anon1c302b040508	typeref:typename:WCHAR[]	file:
dump	generic/regcomp.c	/^dump($/;"	f	typeref:typename:void	file:
dump	tools/checkLibraryDoc.tcl	/^proc dump {list title file} {$/;"	p
dumpFile	generic/tclCkalloc.c	/^static char dumpFile[100];	\/* Records where to dump memory allocation$/;"	v	typeref:typename:char[100]	file:
dumparc	generic/regc_nfa.c	/^dumparc($/;"	f	typeref:typename:void	file:
dumparcs	generic/regc_nfa.c	/^dumparcs($/;"	f	typeref:typename:void	file:
dumpchr	generic/regc_color.c	/^dumpchr($/;"	f	typeref:typename:void	file:
dumpcnfa	generic/regc_nfa.c	/^dumpcnfa($/;"	f	typeref:typename:void	file:
dumpcolors	generic/regc_color.c	/^dumpcolors($/;"	f	typeref:typename:void	file:
dumpcstate	generic/regc_nfa.c	/^dumpcstate($/;"	f	typeref:typename:void	file:
dumpnfa	generic/regc_nfa.c	/^dumpnfa($/;"	f	typeref:typename:void	file:
dumpst	generic/regcomp.c	/^dumpst($/;"	f	typeref:typename:void	file:
dumpstate	generic/regc_nfa.c	/^dumpstate($/;"	f	typeref:typename:void	file:
dupIntRepProc	generic/tcl.h	/^    Tcl_DupInternalRepProc *dupIntRepProc;$/;"	m	struct:Tcl_ObjType	typeref:typename:Tcl_DupInternalRepProc *
dupIntRepProc	generic/tclDTrace.d	/^    void *dupIntRepProc;$/;"	m	struct:Tcl_ObjType	file:
dupIntRepProc	generic/tclInt.h	/^    Tcl_DupInternalRepProc *dupIntRepProc;$/;"	m	struct:ObjectType	typeref:typename:Tcl_DupInternalRepProc *
dupInternalRepProc	generic/tcl.h	/^    Tcl_FSDupInternalRepProc *dupInternalRepProc;$/;"	m	struct:Tcl_Filesystem	typeref:typename:Tcl_FSDupInternalRepProc *
dupProc	generic/tclCompile.h	/^    AuxDataDupProc *dupProc;	\/* Callback procedure to invoke when the aux$/;"	m	struct:AuxDataType	typeref:typename:AuxDataDupProc *
dupedKeys	generic/tclDictObj.c	/^    int dupedKeys;		\/* Whether there are duplicate keys in the$/;"	m	struct:Dict	typeref:typename:int	file:
dupnfa	generic/regc_nfa.c	/^dupnfa($/;"	f	typeref:typename:void	file:
duptraverse	generic/regc_nfa.c	/^duptraverse($/;"	f	typeref:typename:void	file:
dv	generic/tclStrToD.c	/^	double dv;$/;"	m	union:MakeNaN::__anon93c67ca5020a	typeref:typename:double	file:
dv	generic/tclStrToD.c	/^	double dv;$/;"	m	union:TclInitDoubleConversion::__anon93c67ca5030a	typeref:typename:double	file:
dw0	win/tclWin32Dll.c	/^	DWORD dw0;$/;"	m	struct:TclWinCPUID::__anon688852650108	typeref:typename:DWORD	file:
dw1	win/tclWin32Dll.c	/^	DWORD dw1;$/;"	m	struct:TclWinCPUID::__anon688852650108	typeref:typename:DWORD	file:
dw2	win/tclWin32Dll.c	/^	DWORD dw2;$/;"	m	struct:TclWinCPUID::__anon688852650108	typeref:typename:DWORD	file:
dw3	win/tclWin32Dll.c	/^	DWORD dw3;$/;"	m	struct:TclWinCPUID::__anon688852650108	typeref:typename:DWORD	file:
dwActiveProcessorMask	unix/tclUnixInit.c	/^    void *dwActiveProcessorMask;$/;"	m	struct:__anonf052aa840108	typeref:typename:void *	file:
dwAllocationGranularity	unix/tclUnixInit.c	/^    unsigned int dwAllocationGranularity;$/;"	m	struct:__anonf052aa840108	typeref:typename:unsigned int	file:
dwBuildNumber	unix/tclUnixInit.c	/^    unsigned int dwBuildNumber;$/;"	m	struct:__anonf052aa840408	typeref:typename:unsigned int	file:
dwMajorVersion	unix/tclUnixInit.c	/^    unsigned int dwMajorVersion;$/;"	m	struct:__anonf052aa840408	typeref:typename:unsigned int	file:
dwMinorVersion	unix/tclUnixInit.c	/^    unsigned int dwMinorVersion;$/;"	m	struct:__anonf052aa840408	typeref:typename:unsigned int	file:
dwNumberOfProcessors	unix/tclUnixInit.c	/^    unsigned int dwNumberOfProcessors;$/;"	m	struct:__anonf052aa840108	typeref:typename:unsigned int	file:
dwOSVersionInfoSize	unix/tclUnixInit.c	/^    unsigned int dwOSVersionInfoSize;$/;"	m	struct:__anonf052aa840408	typeref:typename:unsigned int	file:
dwOemId	unix/tclUnixInit.c	/^	unsigned int  dwOemId;$/;"	m	union:__anonf052aa840108::__anonf052aa84020a	typeref:typename:unsigned int	file:
dwPageSize	unix/tclUnixInit.c	/^    unsigned int dwPageSize;$/;"	m	struct:__anonf052aa840108	typeref:typename:unsigned int	file:
dwPlatformId	unix/tclUnixInit.c	/^    unsigned int dwPlatformId;$/;"	m	struct:__anonf052aa840408	typeref:typename:unsigned int	file:
dwProcessId	win/tclWinPipe.c	/^    int dwProcessId;$/;"	m	struct:ProcInfo	typeref:typename:int	file:
dwProcessorType	unix/tclUnixInit.c	/^    unsigned int dwProcessorType;$/;"	m	struct:__anonf052aa840108	typeref:typename:unsigned int	file:
dyldLibHeader	unix/tclLoadDyld.c	/^    const struct mach_header *dyldLibHeader;$/;"	m	struct:__anoncff33eb90108	typeref:typename:const struct mach_header *	file:
dyn_dtree	compat/zlib/deflate.h	/^    struct ct_data_s dyn_dtree[2*D_CODES+1]; \/* distance tree *\/$/;"	m	struct:internal_state	typeref:struct:ct_data_s[]
dyn_ltree	compat/zlib/deflate.h	/^    struct ct_data_s dyn_ltree[HEAP_SIZE];   \/* literal and length tree *\/$/;"	m	struct:internal_state	typeref:struct:ct_data_s[]
dyn_tree	compat/zlib/deflate.h	/^    ct_data *dyn_tree;           \/* the dynamic tree *\/$/;"	m	struct:tree_desc_s	typeref:typename:ct_data *
dynamic	compat/zlib/contrib/puff/puff.c	/^local int dynamic(struct state *s)$/;"	f	typeref:typename:local int
earlyDeleteProc	generic/tclInt.h	/^    Tcl_NamespaceDeleteProc *earlyDeleteProc;$/;"	m	struct:Namespace	typeref:typename:Tcl_NamespaceDeleteProc *
ebp	compat/zlib/contrib/inflate86/inffas86.c	/^\/*  8    4 *\/ void *ebp;                \/* ebp save *\/$/;"	m	struct:inflate_fast::inffast_ar	typeref:typename:void *	file:
ebp	win/tclWinInt.h	/^    void *ebp;$/;"	m	struct:TCLEXCEPTION_REGISTRATION	typeref:typename:void *
ecVar	generic/tclInt.h	/^    Tcl_Obj *ecVar;		\/* cached ref to ::errorCode variable. *\/$/;"	m	struct:Interp	typeref:typename:Tcl_Obj *
eclass	generic/regc_locale.c	/^eclass($/;"	f	typeref:struct:cvec *	file:
eePtr	generic/tclInt.h	/^    struct ExecEnv *eePtr;	\/* The special execution environment (stacks,$/;"	m	struct:CoroutineData	typeref:struct:ExecEnv *
efi	generic/tclOOInt.h	/^    ExtraFrameInfo efi;		\/* Space used to store data for [info frame] *\/$/;"	m	struct:ProcedureMethod	typeref:typename:ExtraFrameInfo
efi	generic/tclProc.c	/^    ExtraFrameInfo efi;$/;"	m	struct:__anon0627b8d90108	typeref:typename:ExtraFrameInfo	file:
eflags	generic/regexec.c	/^    int eflags;			\/* copies of arguments *\/$/;"	m	struct:vars	typeref:typename:int	file:
eiVar	generic/tclInt.h	/^    Tcl_Obj *eiVar;		\/* cached ref to ::errorInfo variable. *\/$/;"	m	struct:Interp	typeref:typename:Tcl_Obj *
element	generic/regc_locale.c	/^element($/;"	f	typeref:typename:celt	file:
elements	generic/tclArithSeries.c	/^    Tcl_Obj **elements;$/;"	m	struct:__anond76bba880108	typeref:typename:Tcl_Obj **	file:
elements	generic/tclTestABSList.c	/^    Tcl_Obj**elements;	\/\/ elements array, allocated when GetElements is$/;"	m	struct:LString	typeref:typename:Tcl_Obj **	file:
elems	compat/zlib/trees.c	/^    int     elems;               \/* max number of elements in the tree *\/$/;"	m	struct:static_tree_desc_s	typeref:typename:int	file:
embedded	macosx/GNUmakefile	/^embedded		: embedded-deploy$/;"	t
embedded	macosx/GNUmakefile	/^embedded		:= ${styles:%=embedded-%}$/;"	m
embedded-manifest	win/tcl.m4	/^    AC_ARG_ENABLE(embedded-manifest,$/;"	e
embedded_make_args	macosx/GNUmakefile	/^embedded_make_args	:= EMBEDDED_BUILD=1$/;"	m
embtest	unix/dltest/Makefile.in	/^embtest: embtest.o$/;"	t
embtest.o	unix/dltest/Makefile.in	/^embtest.o: $(SRC_DIR)\/embtest.c$/;"	t
emitDeclarations	tools/genStubs.tcl	/^proc genStubs::emitDeclarations {name textVar} {$/;"	p	namespace:genStubs
emitHeader	tools/genStubs.tcl	/^proc genStubs::emitHeader {name} {$/;"	p	namespace:genStubs
emitInit	tools/genStubs.tcl	/^proc genStubs::emitInit {name textVar} {$/;"	p	namespace:genStubs
emitInits	tools/genStubs.tcl	/^proc genStubs::emitInits {} {$/;"	p	namespace:genStubs
emitMacros	tools/genStubs.tcl	/^proc genStubs::emitMacros {name textVar} {$/;"	p	namespace:genStubs
emitRange	tools/uniClass.tcl	/^proc emitRange {first last} {$/;"	p
emitSlots	tools/genStubs.tcl	/^proc genStubs::emitSlots {name textVar} {$/;"	p	namespace:genStubs
empty	macosx/GNUmakefile	/^empty			:=$/;"	m
emptyObjPtr	generic/tclInt.h	/^    Tcl_Obj *emptyObjPtr;	\/* Points to an object holding an empty$/;"	m	struct:Interp	typeref:typename:Tcl_Obj *
emptyPage	generic/tclEncoding.c	/^static unsigned short emptyPage[256];$/;"	v	typeref:typename:unsigned short[256]	file:
emptyreachable	generic/regc_nfa.c	/^emptyreachable($/;"	f	typeref:struct:state *	file:
enable_buffer	compat/zlib/contrib/iostream3/zfstream.cc	/^gzfilebuf::enable_buffer()$/;"	f	class:gzfilebuf	typeref:typename:void
enclosingCatch	generic/tclAssembly.c	/^    struct BasicBlock* enclosingCatch;$/;"	m	struct:BasicBlock	typeref:struct:BasicBlock *	file:
encodeMap	generic/tclBinary.c	/^static const EnsembleImplMap encodeMap[] = {$/;"	v	typeref:typename:const EnsembleImplMap[]	file:
encoding	generic/tclConfig.c	/^    char *encoding;$/;"	m	struct:__anon46b45ffb0108	typeref:typename:char *	file:
encoding	generic/tclIO.c	/^    Tcl_Encoding encoding;	\/* The encoding to use to convert raw bytes$/;"	m	struct:GetsState	typeref:typename:Tcl_Encoding	file:
encoding	generic/tclIO.h	/^    Tcl_Encoding encoding;	\/* Encoding to apply when reading or writing$/;"	m	struct:ChannelState	typeref:typename:Tcl_Encoding
encoding	generic/tclInt.h	/^    Tcl_Encoding encoding;	\/* system encoding when global string was$/;"	m	struct:ProcessGlobalValue	typeref:typename:Tcl_Encoding
encoding	generic/tclMain.c	/^    Tcl_Obj *encoding;		\/* The encoding of the startup script file. *\/$/;"	m	struct:__anonfdf182ea0108	typeref:typename:Tcl_Obj *	file:
encoding	unix/tcl.m4	/^    AC_ARG_WITH(encoding,$/;"	w
encoding	unix/tclUnixInit.c	/^    const char *encoding;$/;"	m	struct:__anonf052aa840508	typeref:typename:const char *	file:
encoding	win/tcl.m4	/^    AC_ARG_WITH(encoding, [  --with-encoding         encoding for configuration values], with_tc/;"	w
encodingFileMap	generic/tclEncoding.c	/^static ProcessGlobalValue encodingFileMap = {$/;"	v	typeref:typename:ProcessGlobalValue	file:
encodingName	generic/tcl.h	/^    const char *encodingName;	\/* The name of the encoding, e.g. "euc-jp".$/;"	m	struct:Tcl_EncodingType	typeref:typename:const char *
encodingProfiles	generic/tclEncoding.c	/^} encodingProfiles[] = {$/;"	v	typeref:typename:const struct TclEncodingProfiles[]
encodingPtr	generic/tclEncoding.c	/^    Encoding *encodingPtr;	\/* Encoding loaded using above name, or NULL$/;"	m	struct:__anondb7a8e8c0308	typeref:typename:Encoding *	file:
encodingSearchPath	generic/tclEncoding.c	/^static ProcessGlobalValue encodingSearchPath = {$/;"	v	typeref:typename:ProcessGlobalValue	file:
encodingTable	generic/tclEncoding.c	/^static Tcl_HashTable encodingTable;$/;"	v	typeref:typename:Tcl_HashTable	file:
encodingType	generic/tclEncoding.c	/^static const Tcl_ObjType encodingType = {$/;"	v	typeref:typename:const Tcl_ObjType	file:
encodings	tools/encoding/Makefile	/^encodings: clean txt2enc $(EUC_ENCODINGS)$/;"	t
encodingsInitialized	generic/tclEncoding.c	/^static int encodingsInitialized = 0;$/;"	v	typeref:typename:int	file:
encrypt	compat/zlib/contrib/minizip/zip.c	/^    int  encrypt;$/;"	m	struct:__anon7add25cb0108	typeref:typename:int	file:
encrypted	compat/zlib/contrib/minizip/unzip.c	/^    int encrypted;$/;"	m	struct:__anon3259ecee0208	typeref:typename:int	file:
end	compat/zlib/contrib/inflate86/inffas86.c	/^\/* 48   24 *\/ unsigned char FAR *end;   \/*     r10  while out < end *\/$/;"	m	struct:inflate_fast::inffast_ar	typeref:typename:unsigned char FAR *	file:
end	compat/zlib/examples/gzlog.c	/^    char *end;      \/* end of path, for appending suffices such as ".gz" *\/$/;"	m	struct:log	typeref:typename:char *	file:
end	generic/regc_locale.c	/^    chr end;$/;"	m	struct:__anonf52f7cd20108	typeref:typename:chr	file:
end	generic/regguts.h	/^    struct state *end;		\/* ...ending in inarcs here *\/$/;"	m	struct:subre	typeref:struct:state *
end	generic/tcl.h	/^    Tcl_Size end;		\/* Character offset of first character after$/;"	m	struct:Tcl_RegExpIndices	typeref:typename:Tcl_Size
end	generic/tcl.h	/^    const char *end;		\/* Points to the character just after the last$/;"	m	struct:Tcl_Parse	typeref:typename:const char *
end	generic/tclArithSeries.c	/^    Tcl_WideInt end;$/;"	m	struct:__anond76bba880208	typeref:typename:Tcl_WideInt	file:
end	generic/tclArithSeries.c	/^    double end;$/;"	m	struct:__anond76bba880308	typeref:typename:double	file:
end	generic/tclCompile.h	/^    Tcl_Size end;		\/* Index of last usable entry in array. *\/$/;"	m	struct:JumpFixupArray	typeref:typename:Tcl_Size
end	generic/tclDate.h	/^	const char *end;$/;"	m	struct:ClockFormatToken::__anone8f8f7280308	typeref:typename:const char *
end	generic/tclDate.h	/^	const char *end;$/;"	m	struct:ClockScanToken::__anone8f8f7280208	typeref:typename:const char *
end	generic/tclScan.c	/^    Tcl_UniChar end;$/;"	m	struct:__anon0c1044aa0108	typeref:typename:Tcl_UniChar	file:
end	win/buildall.vc.bat	/^:end$/;"	l
endDistance	generic/tclDate.h	/^    unsigned short endDistance;$/;"	m	struct:ClockScanToken	typeref:typename:unsigned short
endOffset	generic/tclAssembly.c	/^    int endOffset;		\/* End offset in the bytecode array *\/$/;"	m	struct:CodeRange	typeref:typename:int	file:
endOffsetType	generic/tclUtil.c	/^static const Tcl_ObjType endOffsetType = {$/;"	v	typeref:typename:const Tcl_ObjType	file:
endPtr	generic/tclInt.h	/^    Tcl_Obj **endPtr;		\/* Where the stack end is. *\/$/;"	m	struct:ExecStack	typeref:typename:Tcl_Obj **
enough	compat/zlib/examples/enough.c	/^local void enough(int syms) {$/;"	f	typeref:typename:local void
ensembleCmdType	generic/tclEnsemble.c	/^static const Tcl_ObjType ensembleCmdType = {$/;"	v	typeref:typename:const Tcl_ObjType	file:
ensembleConfigOptions	generic/tclEnsemble.c	/^static const char *const ensembleConfigOptions[] = {$/;"	v	typeref:typename:const char * const[]	file:
ensembleCreateOptions	generic/tclEnsemble.c	/^static const char *const ensembleCreateOptions[] = {$/;"	v	typeref:typename:const char * const[]	file:
ensembleNsName	generic/tclBasic.c	/^    const char *ensembleNsName;	\/* The ensemble's name within ::tcl. NULL for$/;"	m	struct:__anon6e1456070308	typeref:typename:const char *	file:
ensembleRewrite	generic/tclInt.h	/^    } ensembleRewrite;$/;"	m	struct:Interp	typeref:struct:Interp::__anon1eb6b3550908
ensembleSubcommands	generic/tclEnsemble.c	/^static const char *const ensembleSubcommands[] = {$/;"	v	typeref:typename:const char * const[]	file:
ensembles	generic/tclInt.h	/^    Tcl_Ensemble *ensembles;	\/* List of structures that contain the details$/;"	m	struct:Namespace	typeref:typename:Tcl_Ensemble *
entries	generic/tclZipfs.c	/^    struct ZipEntry *entries;	\/* List of files in archive *\/$/;"	m	struct:ZipFile	typeref:struct:ZipEntry *	file:
entry	generic/tclDictObj.c	/^    Tcl_HashEntry entry;$/;"	m	struct:ChainEntry	typeref:typename:Tcl_HashEntry	file:
entry	generic/tclInt.h	/^    Tcl_HashEntry entry;	\/* The hash table entry that refers to this$/;"	m	struct:VarInHash	typeref:typename:Tcl_HashEntry
entry	unix/tclLoadAix.c	/^    void *entry;		\/* entry point from load *\/$/;"	m	struct:Module	typeref:typename:void *	file:
entryChainHead	generic/tclDictObj.c	/^    ChainEntry *entryChainHead;	\/* Linked list of all entries in the$/;"	m	struct:Dict	typeref:typename:ChainEntry *	file:
entryChainTail	generic/tclDictObj.c	/^    ChainEntry *entryChainTail;	\/* Other end of linked list of all entries in$/;"	m	struct:Dict	typeref:typename:ChainEntry *	file:
entryPtr	generic/tclInterp.c	/^    Tcl_HashEntry *entryPtr;	\/* The entry in the hash table maintained by$/;"	m	struct:__anon913711770508	typeref:typename:Tcl_HashEntry *	file:
env	compat/zlib/contrib/blast/blast.c	/^    jmp_buf env;$/;"	m	struct:state	typeref:typename:jmp_buf	file:
env	compat/zlib/contrib/puff/puff.c	/^    jmp_buf env;$/;"	m	struct:state	typeref:typename:jmp_buf	file:
env	generic/tclEnv.c	/^} env;$/;"	v	typeref:struct:__anon1e6e59ce0108
envEpoch	generic/tclClock.c	/^    size_t envEpoch;		\/* Last env epoch, for faster signaling,$/;"	m	struct:ClockTzStatic	typeref:typename:size_t	file:
envPtr	generic/tclAssembly.c	/^    CompileEnv* envPtr;		\/* Compilation environment being used for code$/;"	m	struct:AssemblyEnv	typeref:typename:CompileEnv *	file:
environ	unix/tclUnixPort.h	/^#	define environ	_environ$/;"	d
environ	unix/tclUnixPort.h	/^#   define environ	/;"	d
environ	win/tclWinPort.h	/^#   define environ _environ$/;"	d
eof	compat/zlib/gzguts.h	/^    int eof;                \/* true if end of input file reached *\/$/;"	m	struct:__anon361a15920108	typeref:typename:int
eofPending	generic/tclIOGT.c	/^    int eofPending;		\/* Flag: EOF seen down, not raised up *\/$/;"	m	struct:TransformChannelData	typeref:typename:int	file:
eofPending	generic/tclIORTrans.c	/^    int eofPending;		\/* Flag: EOF seen down, but not raised up *\/$/;"	m	struct:__anon21e740770208	typeref:typename:int	file:
eos	generic/regguts.h	/^    color eos[2];		\/* colors, if any, assigned to EOS and EOL *\/$/;"	m	struct:cnfa	typeref:typename:color[2]
eos	generic/regguts.h	/^    color eos[2];		\/* colors, if any, assigned to EOS and EOL *\/$/;"	m	struct:nfa	typeref:typename:color[2]
epoch	generic/tcl.h	/^    TCL_HASH_TYPE epoch;	\/* Epoch marker for dictionary being searched,$/;"	m	struct:__anon937aefea0908	typeref:typename:TCL_HASH_TYPE
epoch	generic/tclClock.c	/^    size_t epoch;		\/* Epoch, signals that TZ changed. *\/$/;"	m	struct:ClockTzStatic	typeref:typename:size_t	file:
epoch	generic/tclDictObj.c	/^    size_t epoch;		\/* Epoch counter *\/$/;"	m	struct:Dict	typeref:typename:size_t	file:
epoch	generic/tclEnsemble.c	/^    Tcl_Size epoch;		\/* Used to confirm when the data in this$/;"	m	struct:__anonb2501df00108	typeref:typename:Tcl_Size	file:
epoch	generic/tclIO.c	/^    Tcl_Size epoch;		\/* The epoch of the channel when the lookup$/;"	m	struct:ResolvedChanName	typeref:typename:Tcl_Size	file:
epoch	generic/tclIO.h	/^    Tcl_Size epoch;		\/* Used to test validity of stored channelname$/;"	m	struct:ChannelState	typeref:typename:Tcl_Size
epoch	generic/tclInt.h	/^    Tcl_Size epoch;		\/* Epoch counter to detect changes in the$/;"	m	struct:ProcessGlobalValue	typeref:typename:Tcl_Size
epoch	generic/tclInt.h	/^    Tcl_Size epoch;		\/* The epoch at which this ensemble's table of$/;"	m	struct:EnsembleConfig	typeref:typename:Tcl_Size
epoch	generic/tclOOInt.h	/^    Tcl_Size epoch;		\/* Global (class structure) epoch counter$/;"	m	struct:CallChain	typeref:typename:Tcl_Size
epoch	generic/tclOOInt.h	/^    Tcl_Size epoch;		\/* Per-object epoch, incremented when the way$/;"	m	struct:Object	typeref:typename:Tcl_Size
epoch	generic/tclOOInt.h	/^    Tcl_Size epoch;		\/* Used to invalidate method chains when the$/;"	m	struct:Foundation	typeref:typename:Tcl_Size
epoch	generic/tclOOInt.h	/^    int epoch;			\/* The epoch that the caches are valid for. *\/$/;"	m	struct:PropertyStorage	typeref:typename:int
epoch	tools/genStubs.tcl	/^proc genStubs::epoch {value} {$/;"	p	namespace:genStubs
eras	generic/tclClock.c	/^static const char *const eras[] = { "CE", "BCE", NULL };$/;"	v	typeref:typename:const char * const[]	file:
eras	generic/tclClockClassic.c	/^static const char *const eras[] = { "CE", "BCE", NULL };$/;"	v	typeref:typename:const char * const[]	file:
err	compat/zlib/gzguts.h	/^    int err;                \/* error code *\/$/;"	m	struct:__anon361a15920108	typeref:typename:int
err	compat/zlib/test/minigzip.c	/^    int err;$/;"	m	struct:gzFile_s	typeref:typename:int	file:
err	generic/regcomp.c	/^    int err;			\/* error code (0 if none) *\/$/;"	m	struct:vars	typeref:typename:int	file:
err	generic/regexec.c	/^    int err;			\/* error code if any (0 none) *\/$/;"	m	struct:vars	typeref:typename:int	file:
errFlags	generic/tclDate.h	/^    int errFlags;		\/* Signals error (part of date\/time found twice) *\/$/;"	m	struct:DateInfo	typeref:typename:int
errProc	generic/tclOOInt.h	/^    ProcErrorProc *errProc;	\/* Replacement error handler. *\/$/;"	m	struct:ProcedureMethod	typeref:typename:ProcErrorProc *
errProc	generic/tclOOMethod.c	/^    ProcErrorProc *errProc;	\/* The error handler for the body. *\/$/;"	m	struct:PMFrameData	typeref:typename:ProcErrorProc *	file:
errbuf	unix/tclLoadAix.c	/^static char errbuf[BUFSIZ];$/;"	v	typeref:typename:char[]	file:
errno	compat/zlib/zutil.c	/^    int errno = 0;$/;"	v	typeref:typename:int
error	compat/zlib/contrib/iostream2/zstream.h	/^        const char* error(int* errnum) {$/;"	f	class:izstream	typeref:typename:const char *
error	compat/zlib/contrib/iostream2/zstream.h	/^        const char* error(int* errnum) {$/;"	f	class:ozstream	typeref:typename:const char *
error	compat/zlib/contrib/minizip/iowin32.c	/^    int error;$/;"	m	struct:__anonbfe475c30108	typeref:typename:int	file:
error	compat/zlib/contrib/untgz/untgz.c	/^void error(const char *msg)$/;"	f	typeref:typename:void
error	compat/zlib/test/minigzip.c	/^static void error(const char *msg) {$/;"	f	typeref:typename:void	file:
error	generic/tclProcess.c	/^    Tcl_Obj *error;		\/* Error code. *\/$/;"	m	struct:ProcessInfo	typeref:typename:Tcl_Obj *	file:
error	library/http/http.tcl	/^proc http::error {token} {$/;"	p	namespace:http
error	win/buildall.vc.bat	/^:error$/;"	l
error	win/tclWinSerial.c	/^    DWORD error;		\/* pending error code returned by$/;"	m	struct:SerialInfo	typeref:typename:DWORD	file:
error	win/vctool.bat	/^:error$/;"	l
errorCode	generic/tclClock.c	/^	Tcl_Obj *errorCode;$/;"	m	struct:ClockSafeCatchCmd::__anond46bc7710208	typeref:typename:Tcl_Obj *	file:
errorCode	generic/tclInt.h	/^    Tcl_Obj *errorCode;		\/* errorCode value (now as a Tcl_Obj). *\/$/;"	m	struct:Interp	typeref:typename:Tcl_Obj *
errorCode	generic/tclResult.c	/^    Tcl_Obj *errorCode;$/;"	m	struct:__anon298490c40108	typeref:typename:Tcl_Obj *	file:
errorCode	generic/tclThreadTest.c	/^    char *errorCode;		\/* Copy of errorCode variable *\/$/;"	m	struct:ThreadEventResult	typeref:typename:char *	file:
errorFile	unix/tclUnixPipe.c	/^    TclFile errorFile;		\/* Error output from pipe. *\/$/;"	m	struct:__anon004fe33e0108	typeref:typename:TclFile	file:
errorFile	win/tclWinPipe.c	/^    TclFile errorFile;		\/* Error output from pipe. *\/$/;"	m	struct:PipeInfo	typeref:typename:TclFile	file:
errorInfo	generic/tclClock.c	/^	Tcl_Obj *errorInfo;		\/* the "state" of the interp. *\/$/;"	m	struct:ClockSafeCatchCmd::__anond46bc7710208	typeref:typename:Tcl_Obj *	file:
errorInfo	generic/tclInt.h	/^    Tcl_Obj *errorInfo;		\/* errorInfo value (now as a Tcl_Obj). *\/$/;"	m	struct:Interp	typeref:typename:Tcl_Obj *
errorInfo	generic/tclResult.c	/^    Tcl_Obj *errorInfo;		\/* the "state" of the interp. *\/$/;"	m	struct:__anon298490c40108	typeref:typename:Tcl_Obj *	file:
errorInfo	generic/tclThreadTest.c	/^    char *errorInfo;		\/* Copy of errorInfo variable *\/$/;"	m	struct:ThreadEventResult	typeref:typename:char *	file:
errorLine	generic/tclInt.h	/^    int errorLine;		\/* When TCL_ERROR is returned, this gives the$/;"	m	struct:Interp	typeref:typename:int
errorMsg	generic/tclEvent.c	/^    Tcl_Obj *errorMsg;		\/* Copy of the error message (the interp's$/;"	m	struct:BgError	typeref:typename:Tcl_Obj *	file:
errorMsg	generic/tclIOSock.c	/^    Tcl_DString errorMsg;	\/* UTF-8 encoded error-message *\/$/;"	m	struct:__anonf29c1f6d0108	typeref:typename:Tcl_DString	file:
errorProcString	generic/tclThreadTest.c	/^static char *errorProcString;$/;"	v	typeref:typename:char *	file:
errorStack	generic/tclClock.c	/^	Tcl_Obj *errorStack;$/;"	m	struct:ClockSafeCatchCmd::__anond46bc7710208	typeref:typename:Tcl_Obj *	file:
errorStack	generic/tclInt.h	/^    Tcl_Obj *errorStack;	\/* [info errorstack] value (as a Tcl_Obj). *\/$/;"	m	struct:Interp	typeref:typename:Tcl_Obj *
errorStack	generic/tclResult.c	/^    Tcl_Obj *errorStack;$/;"	m	struct:__anon298490c40108	typeref:typename:Tcl_Obj *	file:
errorTable	win/tclWinError.c	/^static const unsigned char errorTable[] = {$/;"	v	typeref:typename:const unsigned char[]	file:
errorThreadId	generic/tclThreadTest.c	/^static Tcl_ThreadId errorThreadId;$/;"	v	typeref:typename:Tcl_ThreadId	file:
errorType	generic/tcl.h	/^    int errorType;		\/* One of the parsing error types defined$/;"	m	struct:Tcl_Parse	typeref:typename:int
errvalid	unix/tclLoadAix.c	/^static int errvalid;$/;"	v	typeref:typename:int	file:
esPtr	generic/tclExecute.c	/^#define esPtr	/;"	d	file:
esp	compat/zlib/contrib/inflate86/inffas86.c	/^\/*  0    0 *\/ void *esp;                \/* esp save *\/$/;"	m	struct:inflate_fast::inffast_ar	typeref:typename:void *	file:
esp	win/tclWinInt.h	/^    void *esp;$/;"	m	struct:TCLEXCEPTION_REGISTRATION	typeref:typename:void *
euc-cn.txt	tools/encoding/Makefile	/^euc-cn.txt: ascii.txt gb2312.txt Makefile$/;"	t
euc-jp.txt	tools/encoding/Makefile	/^euc-jp.txt: ascii.txt jis0208.txt Makefile$/;"	t
euc-kr.txt	tools/encoding/Makefile	/^euc-kr.txt: ascii.txt ksc5601.txt Makefile$/;"	t
evControl	win/tclWinInt.h	/^    HANDLE evControl;		\/* Auto-reset event used by the main thread to$/;"	m	struct:TclPipeThreadInfo	typeref:typename:HANDLE
evPtr	generic/tclIORChan.c	/^    ForwardingEvent *evPtr;	\/* Event the result belongs to. *\/$/;"	m	struct:ForwardingResult	typeref:typename:ForwardingEvent *	file:
evPtr	generic/tclIORTrans.c	/^    ForwardingEvent *evPtr;	\/* Event the result belongs to. *\/$/;"	m	struct:ForwardingResult	typeref:typename:ForwardingEvent *	file:
evWakeUp	win/tclWinInt.h	/^    HANDLE evWakeUp;		\/* Optional wake-up event worker set by shutdown *\/$/;"	m	struct:TclPipeThreadInfo	typeref:typename:HANDLE
evWritable	win/tclWinSerial.c	/^    HANDLE evWritable;		\/* Manual-reset event to signal when the$/;"	m	struct:SerialInfo	typeref:typename:HANDLE	file:
eval	generic/tclInt.h	/^	} eval;$/;"	m	union:CmdFrame::__anon1eb6b355020a	typeref:struct:CmdFrame::__anon1eb6b355020a::__anon1eb6b3550308
evalFlags	generic/tclInt.h	/^    int evalFlags;		\/* Flags to control next call to Tcl_Eval.$/;"	m	struct:Interp	typeref:typename:int
event	generic/tclIORChan.c	/^    Tcl_Event event;		\/* Basic event data, has to be first item *\/$/;"	m	struct:__anon92d8dd290708	typeref:typename:Tcl_Event	file:
event	generic/tclIORTrans.c	/^    Tcl_Event event;		\/* Basic event data, has to be first item *\/$/;"	m	struct:__anon21e740770708	typeref:typename:Tcl_Event	file:
event	generic/tclThreadTest.c	/^    Tcl_Event event;		\/* Must be first *\/$/;"	m	struct:ThreadEvent	typeref:typename:Tcl_Event	file:
event	unix/tclSelectNotfy.c	/^    void *event;		\/* Any other thread alerts a notifier that an$/;"	m	struct:ThreadSpecificData	typeref:typename:void *	file:
event	win/tclWinNotify.c	/^    HANDLE event;		\/* Event object used to wake up the notifier$/;"	m	struct:__anon2be3cfbd0108	typeref:typename:HANDLE	file:
eventOptions	generic/tclIORChan.c	/^static const char *const eventOptions[] = {$/;"	v	typeref:typename:const char * const[]	file:
eventPtr	generic/tclThreadTest.c	/^    struct ThreadEvent *eventPtr;	\/* Back pointer *\/$/;"	m	struct:ThreadEventResult	typeref:struct:ThreadEvent *	file:
eventReady	unix/tclSelectNotfy.c	/^    int eventReady;		\/* True if an event is ready to be processed.$/;"	m	struct:ThreadSpecificData	typeref:typename:int	file:
events	generic/tclIORChan.c	/^    int events;$/;"	m	struct:__anon92d8dd290908	typeref:typename:int	file:
eventsFd	unix/tclEpollNotfy.c	/^    int eventsFd;		\/* epoll(7) file descriptor used to wait for$/;"	m	struct:ThreadSpecificData	typeref:typename:int	file:
eventsFd	unix/tclKqueueNotfy.c	/^    int eventsFd;		\/* kqueue(2) file descriptor used to wait for$/;"	m	struct:ThreadSpecificData	typeref:typename:int	file:
examine	compat/zlib/examples/enough.c	/^local void examine(int syms, int left, int len, int mem, int rem) {$/;"	f	typeref:typename:local void
example	compat/zlib/CMakeLists.txt	/^    add_executable(example test\/example.c)$/;"	t
example$(EXE)	compat/zlib/Makefile.in	/^example$(EXE): example.o $(STATICLIB)$/;"	t
example.exe	compat/zlib/contrib/delphi/zlibd32.mak	/^example.exe: example.obj $(ZLIB_LIB)$/;"	t
example.exe	compat/zlib/contrib/pascal/zlibd32.mak	/^example.exe: example.obj $(ZLIB_LIB)$/;"	t
example.exe	compat/zlib/watcom/watcom_f.mak	/^example.exe: $(ZLIB_LIB) example.obj$/;"	t
example.exe	compat/zlib/watcom/watcom_l.mak	/^example.exe: $(ZLIB_LIB) example.obj$/;"	t
example.lo	compat/zlib/Makefile.in	/^compress.lo example.lo minigzip.lo uncompr.lo: $(SRCDIR)zlib.h zconf.h$/;"	t
example.o	compat/zlib/Makefile.in	/^compress.o example.o minigzip.o uncompr.o: $(SRCDIR)zlib.h zconf.h$/;"	t
example.o	compat/zlib/Makefile.in	/^example.o: $(SRCDIR)test\/example.c $(SRCDIR)zlib.h zconf.h$/;"	t
example.obj	compat/zlib/contrib/delphi/zlibd32.mak	/^example.obj: test\/example.c zlib.h zconf.h$/;"	t
example.obj	compat/zlib/contrib/pascal/zlibd32.mak	/^example.obj: test\/example.c zlib.h zconf.h$/;"	t
example64	compat/zlib/CMakeLists.txt	/^        add_executable(example64 test\/example.c)$/;"	t
example64$(EXE)	compat/zlib/Makefile.in	/^example64$(EXE): example64.o $(STATICLIB)$/;"	t
example64.o	compat/zlib/Makefile.in	/^example64.o: $(SRCDIR)test\/example.c $(SRCDIR)zlib.h zconf.h$/;"	t
examplesh$(EXE)	compat/zlib/Makefile.in	/^examplesh$(EXE): example.o $(SHAREDLIBV)$/;"	t
exceeded	generic/tclInt.h	/^	int exceeded;		\/* Which limits have been exceeded, described$/;"	m	struct:Interp::__anon1eb6b3550808	typeref:typename:int
except	unix/tclXtNotify.c	/^    XtInputId except;		\/* Xt exception callback handle. *\/$/;"	m	struct:FileHandler	typeref:typename:XtInputId	file:
exceptArrayEnd	generic/tclCompile.h	/^    Tcl_Size exceptArrayEnd;	\/* Index after the last ExceptionRange array$/;"	m	struct:CompileEnv	typeref:typename:Tcl_Size
exceptArrayNext	generic/tclCompile.h	/^    Tcl_Size exceptArrayNext;	\/* Next free ExceptionRange array index.$/;"	m	struct:CompileEnv	typeref:typename:Tcl_Size
exceptArrayPtr	generic/tclCompile.h	/^    ExceptionRange *exceptArrayPtr;$/;"	m	struct:ByteCode	typeref:typename:ExceptionRange *
exceptArrayPtr	generic/tclCompile.h	/^    ExceptionRange *exceptArrayPtr;$/;"	m	struct:CompileEnv	typeref:typename:ExceptionRange *
exceptAuxArrayPtr	generic/tclCompile.h	/^    ExceptionAux *exceptAuxArrayPtr;$/;"	m	struct:CompileEnv	typeref:typename:ExceptionAux *
exceptDepth	generic/tclCompile.h	/^    Tcl_Size exceptDepth;	\/* Current exception range nesting level;$/;"	m	struct:CompileEnv	typeref:typename:Tcl_Size
exceptIndex	generic/tclCompile.h	/^    int exceptIndex;		\/* Index of the first range entry in the$/;"	m	struct:JumpFixup	typeref:typename:int
exception	unix/tclSelectNotfy.c	/^    fd_set exception;$/;"	m	struct:__anon69aa703c0108	typeref:typename:fd_set	file:
exception	win/tclWinPort.h	/^#   define exception _exception$/;"	d
exceptional	macosx/tclMacOSXNotify.c	/^    fd_set exceptional;$/;"	m	struct:__anon0dc3d9d70208	typeref:typename:fd_set	file:
exclude	generic/tclScan.c	/^    int exclude;		\/* 1 if this is an exclusion set. *\/$/;"	m	struct:__anon0c1044aa0208	typeref:typename:int	file:
exec	generic/regcustom.h	/^#define	exec	/;"	d
exec	generic/regexec.c	/^exec($/;"	f	typeref:typename:int
execEnvPtr	generic/tclInt.h	/^    struct ExecEnv *execEnvPtr;	\/* Execution environment for Tcl bytecode$/;"	m	struct:Interp	typeref:struct:ExecEnv *
execInitialized	generic/tclExecute.c	/^static int execInitialized = 0;$/;"	v	typeref:typename:int	file:
execOptionsEnum	generic/tclIOCmd.c	/^    enum execOptionsEnum {$/;"	g	function:Tcl_ExecObjCmd	file:
execStackPtr	generic/tclInt.h	/^    ExecStack *execStackPtr;	\/* Points to the first item in the evaluation$/;"	m	struct:ExecEnv	typeref:typename:ExecStack *
exec_prefix	compat/zlib/Makefile.in	/^exec_prefix = ${prefix}$/;"	m
exec_prefix	compat/zlib/contrib/minizip/minizip.pc.in	/^exec_prefix=@exec_prefix@$/;"	v
exec_prefix	compat/zlib/zlib.pc.in	/^exec_prefix=@exec_prefix@$/;"	v
exec_prefix	unix/Makefile.in	/^exec_prefix		= @exec_prefix@$/;"	m
exec_prefix	unix/tcl.pc.in	/^exec_prefix=@exec_prefix@$/;"	v
exec_prefix	win/Makefile.in	/^exec_prefix		= @exec_prefix@$/;"	m
executableName	generic/tclUtil.c	/^static ProcessGlobalValue executableName = {$/;"	v	typeref:typename:ProcessGlobalValue	file:
exitEvent	win/tclWinTime.c	/^    HANDLE exitEvent;		\/* Event to signal out of an exit handler to$/;"	m	struct:__anon3cd8f0330108	typeref:typename:HANDLE	file:
exitMainLoop	generic/tclTest.c	/^static int exitMainLoop = 0;$/;"	v	typeref:typename:int	file:
expand-next-text	tools/tcltk-man2html-utils.tcl	/^proc expand-next-text {n} {$/;"	p
expandCount	generic/tclCompile.h	/^    Tcl_Size expandCount;	\/* Number of INST_EXPAND_START instructions$/;"	m	struct:CompileEnv	typeref:typename:Tcl_Size
expandTarget	generic/tclCompile.h	/^    Tcl_Size expandTarget;	\/* The number of expansions expected on the$/;"	m	struct:ExceptionAux	typeref:typename:Tcl_Size
expandTargetDepth	generic/tclCompile.h	/^    Tcl_Size expandTargetDepth;	\/* The stack depth expected at the outermost$/;"	m	struct:ExceptionAux	typeref:typename:Tcl_Size
expected	generic/tclBasic.c	/^    const char *expected;	\/* For error message, what argument(s)$/;"	m	struct:__anon6e1456070508	typeref:typename:const char *	file:
expected	generic/tclCompile.h	/^    const char *expected;$/;"	m	struct:__anone79d5a530808	typeref:typename:const char *
explain	generic/regerror.c	/^    const char *explain;$/;"	m	struct:rerr	typeref:typename:const char *	file:
export	tools/genStubs.tcl	/^proc genStubs::export {args} {$/;"	p	namespace:genStubs
exportArrayPtr	generic/tclInt.h	/^    char **exportArrayPtr;	\/* Points to an array of string patterns$/;"	m	struct:Namespace	typeref:typename:char **
exportIt	generic/tclTestProcBodyObj.c	/^    int exportIt;		\/* if 1, export the command *\/$/;"	m	struct:__anon88dcedc20108	typeref:typename:int	file:
exportLookupEpoch	generic/tclInt.h	/^    Tcl_Size exportLookupEpoch;	\/* Incremented whenever a command is added to$/;"	m	struct:Namespace	typeref:typename:Tcl_Size
exports	unix/tclLoadAix.c	/^    ExportPtr exports;		\/* the array of exports *\/$/;"	m	struct:Module	typeref:typename:ExportPtr	file:
exprInt	generic/tclStubInit.c	/^exprInt($/;"	f	typeref:typename:int	file:
exprIntObj	generic/tclStubInit.c	/^exprIntObj($/;"	f	typeref:typename:int	file:
extCmdMapPtr	generic/tclCompile.h	/^    ExtCmdLoc *extCmdMapPtr;	\/* Extended command location information for$/;"	m	struct:CompileEnv	typeref:typename:ExtCmdLoc *
extendStart	generic/tcl.h	/^    Tcl_Size extendStart;	\/* The offset at which a subsequent match$/;"	m	struct:Tcl_RegExpInfo	typeref:typename:Tcl_Size
extendedFileInfo	macosx/tclMacOSXFCmd.c	/^    u_int32_t extendedFileInfo[4];$/;"	m	struct:finderinfo	typeref:typename:u_int32_t[4]	file:
extension	compat/zlib/contrib/minizip/tinydir.h	/^	_tinydir_char_t *extension;$/;"	m	struct:tinydir_file	typeref:typename:_tinydir_char_t *
external_fa	compat/zlib/contrib/minizip/unzip.h	/^    uLong external_fa;          \/* external file attributes        4 bytes *\/$/;"	m	struct:unz_file_info64_s	typeref:typename:uLong
external_fa	compat/zlib/contrib/minizip/unzip.h	/^    uLong external_fa;          \/* external file attributes        4 bytes *\/$/;"	m	struct:unz_file_info_s	typeref:typename:uLong
external_fa	compat/zlib/contrib/minizip/zip.h	/^    uLong       external_fa;    \/* external file attributes        4 bytes *\/$/;"	m	struct:__anon7add25d00108	typeref:typename:uLong
extra	compat/zlib/inflate.h	/^    unsigned extra;             \/* extra bits needed *\/$/;"	m	struct:inflate_state	typeref:typename:unsigned
extra	compat/zlib/zlib.h	/^    Bytef   *extra;     \/* pointer to extra field or Z_NULL if none *\/$/;"	m	struct:gz_header_s	typeref:typename:Bytef *
extraByte	win/tclWinPipe.c	/^    char extraByte;		\/* Buffer for extra character consumed by$/;"	m	struct:PipeInfo	typeref:typename:char	file:
extra_base	compat/zlib/trees.c	/^    int     extra_base;          \/* base index for extra_bits *\/$/;"	m	struct:static_tree_desc_s	typeref:typename:int	file:
extra_bits	compat/zlib/trees.c	/^    const intf *extra_bits;      \/* extra bits for each code or NULL *\/$/;"	m	struct:static_tree_desc_s	typeref:typename:const intf *	file:
extra_blbits	compat/zlib/trees.c	/^local const int extra_blbits[BL_CODES]\/* extra bits for each bit length code *\/$/;"	v	typeref:typename:local const int[]
extra_dbits	compat/zlib/trees.c	/^local const int extra_dbits[D_CODES] \/* extra bits for each distance code *\/$/;"	v	typeref:typename:local const int[]
extra_lbits	compat/zlib/trees.c	/^local const int extra_lbits[LENGTH_CODES] \/* extra bits for each length code *\/$/;"	v	typeref:typename:local const int[]
extra_len	compat/zlib/zlib.h	/^    uInt    extra_len;  \/* extra field length (valid if extra != Z_NULL) *\/$/;"	m	struct:gz_header_s	typeref:typename:uInt
extra_max	compat/zlib/zlib.h	/^    uInt    extra_max;  \/* space at extra (only when reading header) *\/$/;"	m	struct:gz_header_s	typeref:typename:uInt
f	generic/tclLink.c	/^	float f;$/;"	m	union:__anonfc2fcf730108::__anonfc2fcf73020a	typeref:typename:float	file:
fPtr	generic/tclLink.c	/^	float *fPtr;		\/* float array *\/$/;"	m	union:__anonfc2fcf730108::__anonfc2fcf73020a	typeref:typename:float *	file:
fPtr	generic/tclOOInt.h	/^    Foundation *fPtr;		\/* The basis for the object system, which is$/;"	m	struct:Object	typeref:typename:Foundation *
fake-rfc2553.o	unix/Makefile.in	/^fake-rfc2553.o: $(COMPAT_DIR)\/fake-rfc2553.c$/;"	t
fake_freeaddrinfo	compat/fake-rfc2553.c	/^fake_freeaddrinfo(struct addrinfo *ai)$/;"	f	typeref:typename:void
fake_gai_strerror	compat/fake-rfc2553.c	/^fake_gai_strerror(int err)$/;"	f	typeref:typename:const char *
fake_getaddrinfo	compat/fake-rfc2553.c	/^fake_getaddrinfo(const char *hostname, const char *servname,$/;"	f	typeref:typename:int
fake_getnameinfo	compat/fake-rfc2553.c	/^int fake_getnameinfo(const struct sockaddr *sa, size_t salen, char *host,$/;"	f	typeref:typename:int
fallback	generic/tclEncoding.c	/^    int fallback;		\/* Character (in this encoding) to substitute$/;"	m	struct:__anondb7a8e8c0208	typeref:typename:int	file:
fallback	generic/tclEncoding.c	/^    int fallback;		\/* Character (in this encoding) to substitute$/;"	m	struct:__anondb7a8e8c0408	typeref:typename:int	file:
fallbackEntryEncoding	generic/tclZipfs.c	/^    char *fallbackEntryEncoding;\/* The fallback encoding for ZIP entries when$/;"	m	struct:ZipFSGlobals	typeref:typename:char *	file:
fast_mp_invmod	libtommath/bn_deprecated.c	/^mp_err fast_mp_invmod(const mp_int *a, const mp_int *b, mp_int *c)$/;"	f	typeref:typename:mp_err
fast_mp_montgomery_reduce	libtommath/bn_deprecated.c	/^mp_err fast_mp_montgomery_reduce(mp_int *x, const mp_int *n, mp_digit rho)$/;"	f	typeref:typename:mp_err
fast_s_mp_mul_digs	libtommath/bn_deprecated.c	/^mp_err fast_s_mp_mul_digs(const mp_int *a, const mp_int *b, mp_int *c, int digs)$/;"	f	typeref:typename:mp_err
fast_s_mp_mul_high_digs	libtommath/bn_deprecated.c	/^mp_err fast_s_mp_mul_high_digs(const mp_int *a, const mp_int *b, mp_int *c, int digs)$/;"	f	typeref:typename:mp_err
fast_s_mp_sqr	libtommath/bn_deprecated.c	/^mp_err fast_s_mp_sqr(const mp_int *a, mp_int *b)$/;"	f	typeref:typename:mp_err
fatal	tools/tcltk-man2html-utils.tcl	/^proc fatal {msg} {$/;"	p
fc	compat/zlib/deflate.h	/^    } fc;$/;"	m	struct:ct_data_s	typeref:union:ct_data_s::__anond731f1a3010a
fclose_file_func	compat/zlib/contrib/minizip/ioapi.c	/^static int ZCALLBACK fclose_file_func(voidpf opaque, voidpf stream) {$/;"	f	typeref:typename:int ZCALLBACK	file:
fd	compat/zlib/examples/gzappend.c	/^    int fd;                     \/* file descriptor *\/$/;"	m	struct:__anon9d4ca4100108	typeref:typename:int	file:
fd	compat/zlib/examples/gzjoin.c	/^    int fd;                 \/* file descriptor *\/$/;"	m	struct:__anon52a4be880108	typeref:typename:int	file:
fd	compat/zlib/examples/gzlog.c	/^    int fd;         \/* file descriptor for .gz file, opened read\/write *\/$/;"	m	struct:log	typeref:typename:int	file:
fd	compat/zlib/gzguts.h	/^    int fd;                 \/* file descriptor *\/$/;"	m	struct:__anon361a15920108	typeref:typename:int
fd	macosx/tclMacOSXNotify.c	/^    int fd;			\/* File descriptor that is ready. Used to find$/;"	m	struct:__anon0dc3d9d70108	typeref:typename:int	file:
fd	macosx/tclMacOSXNotify.c	/^    int fd;$/;"	m	struct:FileHandler	typeref:typename:int	file:
fd	unix/tclEpollNotfy.c	/^    int fd;			\/* File descriptor that is ready. Used to find$/;"	m	struct:__anona96b9a380108	typeref:typename:int	file:
fd	unix/tclEpollNotfy.c	/^    int fd;$/;"	m	struct:FileHandler	typeref:typename:int	file:
fd	unix/tclKqueueNotfy.c	/^    int fd;			\/* File descriptor that is ready. Used to find$/;"	m	struct:__anon43415cec0108	typeref:typename:int	file:
fd	unix/tclKqueueNotfy.c	/^    int fd;			\/* File descriptor that this is describing a$/;"	m	struct:FileHandler	typeref:typename:int	file:
fd	unix/tclSelectNotfy.c	/^    int fd;			\/* File descriptor that is ready. Used to find$/;"	m	struct:__anon69aa703c0208	typeref:typename:int	file:
fd	unix/tclSelectNotfy.c	/^    int fd;$/;"	m	struct:FileHandler	typeref:typename:int	file:
fd	unix/tclUnixChan.c	/^    int fd;			\/* File handle. *\/$/;"	m	struct:__anone1e2a72a0108	typeref:typename:int	file:
fd	unix/tclUnixSock.c	/^    int fd;$/;"	m	struct:TcpFdList	typeref:typename:int	file:
fd	unix/tclXtNotify.c	/^    int fd;			\/* File descriptor that is ready. Used to find$/;"	m	struct:__anon7b9136110208	typeref:typename:int	file:
fd	unix/tclXtNotify.c	/^    int fd;$/;"	m	struct:FileHandler	typeref:typename:int	file:
fd	win/tclWinSock.c	/^    SOCKET fd;$/;"	m	struct:TcpFdList	typeref:typename:SOCKET	file:
fdFlags	macosx/tclMacOSXFCmd.c	/^    u_int16_t fdFlags;$/;"	m	struct:finderinfo	typeref:typename:u_int16_t	file:
fd_mask	unix/tclUnixPort.h	/^	typedef long	fd_mask;$/;"	t	typeref:typename:long
fds	unix/tclUnixSock.c	/^    TcpFdList fds;		\/* The file descriptors of the sockets. *\/$/;"	m	struct:TcpState	typeref:typename:TcpFdList	file:
ferror_file_func	compat/zlib/contrib/minizip/ioapi.c	/^static int ZCALLBACK ferror_file_func(voidpf opaque, voidpf stream) {$/;"	f	typeref:typename:int ZCALLBACK	file:
fetchProc	generic/tclInt.h	/^    Tcl_ResolveRuntimeVarProc *fetchProc;$/;"	m	struct:Tcl_ResolvedVarInfo	typeref:typename:Tcl_ResolveRuntimeVarProc *
fields	generic/tclInt.h	/^    ExtraFrameInfoField fields[2];$/;"	m	struct:__anon1eb6b3550608	typeref:typename:ExtraFrameInfoField[2]
file	compat/zlib/contrib/iostream/zfstream.h	/^  gzFile file;$/;"	m	class:gzfilebuf	typeref:typename:gzFile
file	compat/zlib/contrib/iostream3/zfstream.h	/^  gzFile file;$/;"	m	class:gzfilebuf	typeref:typename:gzFile
file	compat/zlib/examples/gzappend.c	/^} file;$/;"	t	typeref:struct:__anon9d4ca4100108	file:
file	compat/zlib/test/minigzip.c	/^    FILE *file;$/;"	m	struct:gzFile_s	typeref:typename:FILE *	file:
file	generic/tclCkalloc.c	/^    const char *file;$/;"	m	struct:mem_header	typeref:typename:const char *	file:
file	generic/tclObj.c	/^    const char *file;		\/* The name of the source file calling this$/;"	m	struct:__anon1f1c87400108	typeref:typename:const char *	file:
fileAttrStringsProc	generic/tcl.h	/^    Tcl_FSFileAttrStringsProc *fileAttrStringsProc;$/;"	m	struct:Tcl_Filesystem	typeref:typename:Tcl_FSFileAttrStringsProc *
fileAttrsGetProc	generic/tcl.h	/^    Tcl_FSFileAttrsGetProc *fileAttrsGetProc;$/;"	m	struct:Tcl_Filesystem	typeref:typename:Tcl_FSFileAttrsGetProc *
fileAttrsSetProc	generic/tcl.h	/^    Tcl_FSFileAttrsSetProc *fileAttrsSetProc;$/;"	m	struct:Tcl_Filesystem	typeref:typename:Tcl_FSFileAttrsSetProc *
fileChannelType	unix/tclUnixChan.c	/^static const Tcl_ChannelType fileChannelType = {$/;"	v	typeref:typename:const Tcl_ChannelType	file:
fileChannelType	win/tclWinChan.c	/^static const Tcl_ChannelType fileChannelType = {$/;"	v	typeref:typename:const Tcl_ChannelType	file:
fileHash	generic/tclZipfs.c	/^    Tcl_HashTable fileHash;	\/* File name to ZipEntry mapping *\/$/;"	m	struct:ZipFSGlobals	typeref:typename:Tcl_HashTable	file:
fileName	generic/tclLoad.c	/^    char *fileName;		\/* Name of the file from which the library was$/;"	m	struct:LoadedLibrary	typeref:typename:char *	file:
filePtr	unix/tclEpollNotfy.c	/^    FileHandler *filePtr;$/;"	m	struct:PlatformEventData	typeref:typename:FileHandler *	file:
filePtr	unix/tclKqueueNotfy.c	/^    FileHandler *filePtr;$/;"	m	struct:PlatformEventData	typeref:typename:FileHandler *	file:
fileState	unix/tclUnixChan.c	/^    FileState fileState;$/;"	m	struct:__anone1e2a72a0208	typeref:typename:FileState	file:
fileTimeLastCall	win/tclWinTime.c	/^    ULARGE_INTEGER fileTimeLastCall;$/;"	m	struct:__anon3cd8f0330108	typeref:typename:ULARGE_INTEGER	file:
fileTimeSample	win/tclWinTime.c	/^    unsigned long long fileTimeSample[SAMPLES];$/;"	m	struct:__anon3cd8f0330108	typeref:typename:unsigned long long[]	file:
file_compress	compat/zlib/test/minigzip.c	/^static void file_compress(char *file, char *mode) {$/;"	f	typeref:typename:void	file:
file_in_zip64_read_info_s	compat/zlib/contrib/minizip/unzip.c	/^} file_in_zip64_read_info_s;$/;"	t	typeref:struct:__anon3259ecee0108	file:
file_uncompress	compat/zlib/test/minigzip.c	/^static void file_uncompress(char *file) {$/;"	f	typeref:typename:void	file:
filehandlers	unix/tclUnixSock.c	/^    int filehandlers;		\/* Caches FileHandlers that get set up while$/;"	m	struct:TcpState	typeref:typename:int	file:
fileinfobuf	macosx/tclMacOSXFCmd.c	/^} fileinfobuf;$/;"	t	typeref:struct:__anon5fc3cb980308	file:
fileno	compat/zlib/test/minigzip.c	/^#  define fileno(/;"	d	file:
filestream	compat/zlib/contrib/minizip/unzip.c	/^    voidpf filestream;        \/* io structure of the zipfile *\/$/;"	m	struct:__anon3259ecee0108	typeref:typename:voidpf	file:
filestream	compat/zlib/contrib/minizip/unzip.c	/^    voidpf filestream;        \/* io structure of the zipfile *\/$/;"	m	struct:__anon3259ecee0208	typeref:typename:voidpf	file:
filestream	compat/zlib/contrib/minizip/zip.c	/^    voidpf filestream;        \/* io structure of the zipfile *\/$/;"	m	struct:__anon7add25cb0208	typeref:typename:voidpf	file:
filesystemEpoch	generic/tclIOUtil.c	/^    size_t filesystemEpoch;$/;"	m	struct:__anonf7a439bb0108	typeref:typename:size_t	file:
filesystemEpoch	generic/tclPathObj.c	/^    size_t filesystemEpoch;	\/* Used to ensure the path representation was$/;"	m	struct:__anoneca7f3ad0108	typeref:typename:size_t	file:
filesystemList	generic/tclIOUtil.c	/^    FilesystemRecord *filesystemList;$/;"	m	struct:__anonf7a439bb0108	typeref:typename:FilesystemRecord *	file:
filesystemList	generic/tclIOUtil.c	/^static FilesystemRecord *filesystemList = &nativeFilesystemRecord;$/;"	v	typeref:typename:FilesystemRecord *	file:
filesystemPathTypeProc	generic/tcl.h	/^    Tcl_FSFilesystemPathTypeProc *filesystemPathTypeProc;$/;"	m	struct:Tcl_Filesystem	typeref:typename:Tcl_FSFilesystemPathTypeProc *
filesystemSeparatorProc	generic/tcl.h	/^    Tcl_FSFilesystemSeparatorProc *filesystemSeparatorProc;$/;"	m	struct:Tcl_Filesystem	typeref:typename:Tcl_FSFilesystemSeparatorProc *
filetime	compat/zlib/contrib/minizip/minizip.c	/^static int filetime(const char *f, tm_zip *tmzip, uLong *dt) {$/;"	f	typeref:typename:int	file:
fill_fopen64_filefunc	compat/zlib/contrib/minizip/ioapi.c	/^void fill_fopen64_filefunc(zlib_filefunc64_def* pzlib_filefunc_def) {$/;"	f	typeref:typename:void
fill_fopen_filefunc	compat/zlib/contrib/minizip/ioapi.c	/^void fill_fopen_filefunc(zlib_filefunc_def* pzlib_filefunc_def) {$/;"	f	typeref:typename:void
fill_win32_filefunc	compat/zlib/contrib/minizip/iowin32.c	/^void fill_win32_filefunc(zlib_filefunc_def* pzlib_filefunc_def) {$/;"	f	typeref:typename:void
fill_win32_filefunc64	compat/zlib/contrib/minizip/iowin32.c	/^void fill_win32_filefunc64(zlib_filefunc64_def* pzlib_filefunc_def) {$/;"	f	typeref:typename:void
fill_win32_filefunc64A	compat/zlib/contrib/minizip/iowin32.c	/^void fill_win32_filefunc64A(zlib_filefunc64_def* pzlib_filefunc_def) {$/;"	f	typeref:typename:void
fill_win32_filefunc64W	compat/zlib/contrib/minizip/iowin32.c	/^void fill_win32_filefunc64W(zlib_filefunc64_def* pzlib_filefunc_def) {$/;"	f	typeref:typename:void
fill_window	compat/zlib/deflate.c	/^local void fill_window(deflate_state *s) {$/;"	f	typeref:typename:local void
fill_zlib_filefunc64_32_def_from_filefunc32	compat/zlib/contrib/minizip/ioapi.c	/^void fill_zlib_filefunc64_32_def_from_filefunc32(zlib_filefunc64_32_def* p_filefunc64_32, const /;"	f	typeref:typename:void
fillbuf	compat/zlib/contrib/iostream/zfstream.cpp	/^int gzfilebuf::fillbuf() {$/;"	f	class:gzfilebuf	typeref:typename:int
fillcheck	generic/regc_color.c	/^fillcheck($/;"	f	typeref:typename:void	file:
filled_in_this_block	compat/zlib/contrib/minizip/zip.c	/^  uLong  filled_in_this_block;$/;"	m	struct:linkedlist_datablock_internal_s	typeref:typename:uLong	file:
filter	tools/checkLibraryDoc.tcl	/^proc filter {code docs dir pkg {outFile stdout}} {$/;"	p
filterDeclarer	generic/tclOOInt.h	/^    Class *filterDeclarer;	\/* What class decided to add the filter; if$/;"	m	struct:MInvoke	typeref:typename:Class *
filterLength	generic/tclOOCall.c	/^    size_t filterLength;	\/* Number of entries in the call chain that$/;"	m	struct:ChainBuilder	typeref:typename:size_t	file:
filters	generic/tclOOInt.h	/^    FilterList filters;		\/* List of filter names, used for generation$/;"	m	struct:Class	typeref:typename:FilterList
filters	generic/tclOOInt.h	/^    FilterList filters;		\/* List of filter names. *\/$/;"	m	struct:Object	typeref:typename:FilterList
final	generic/tclEncoding.c	/^    char final[16];		\/* String to emit or expect after last char in$/;"	m	struct:__anondb7a8e8c0408	typeref:typename:char[16]	file:
finalLen	generic/tclEncoding.c	/^    unsigned finalLen;		\/* Length of following string. *\/$/;"	m	struct:__anondb7a8e8c0408	typeref:typename:unsigned	file:
finalStackDepth	generic/tclAssembly.c	/^    int finalStackDepth;	\/* Relative stack depth on exit *\/$/;"	m	struct:BasicBlock	typeref:typename:int	file:
finalizeNotifierProc	generic/tcl.h	/^    Tcl_FinalizeNotifierProc *finalizeNotifierProc;$/;"	m	struct:Tcl_NotifierProcs	typeref:typename:Tcl_FinalizeNotifierProc *
findEarliestRule	tools/tclZIC.tcl	/^proc findEarliestRule {remainingRules year stdGMTOffset DSTOffset} {$/;"	p
findMain	unix/tclLoadAix.c	/^findMain(void)$/;"	f	typeref:typename:void *	file:
findProc	generic/tcl.h	/^    Tcl_HashEntry *(*findProc) (Tcl_HashTable *tablePtr, const char *key);$/;"	m	struct:Tcl_HashTable	typeref:typename:Tcl_HashEntry * (*)(Tcl_HashTable * tablePtr,const char * key)
findSymbolProcPtr	generic/tclInt.h	/^    TclFindSymbolProc* findSymbolProcPtr;$/;"	m	struct:Tcl_LoadHandle_	typeref:typename:TclFindSymbolProc *
findarc	generic/regc_nfa.c	/^findarc($/;"	f	typeref:struct:arc *	file:
findconstraintloop	generic/regc_nfa.c	/^findconstraintloop(struct nfa * nfa, struct state * s)$/;"	f	typeref:typename:int	file:
finderinfo	macosx/tclMacOSXFCmd.c	/^typedef	struct finderinfo {$/;"	s	file:
finderinfo	macosx/tclMacOSXFCmd.c	/^} __attribute__ ((__packed__)) finderinfo;$/;"	t	typeref:struct:finderinfo	file:
fini	compat/dlfcn.h	/^	void (*fini) (void);$/;"	m	struct:dl_info	typeref:typename:void (*)(void)
finish_done	compat/zlib/deflate.c	/^    finish_done     \/* finish done, accept no more input or output *\/$/;"	e	enum:__anond731f19e0103	file:
finish_started	compat/zlib/deflate.c	/^    finish_started, \/* finish started, need only more output at next deflate *\/$/;"	e	enum:__anond731f19e0103	file:
first	compat/zlib/contrib/blast/blast.c	/^    int first;                  \/* true to check distances (for first 4K) *\/$/;"	m	struct:state	typeref:typename:int	file:
first	compat/zlib/examples/gzlog.c	/^    off_t first;    \/* offset of first stored block first length byte *\/$/;"	m	struct:log	typeref:typename:off_t	file:
first	compat/zlib/test/infcover.c	/^    struct mem_item *first;     \/* pointer to first item in list, or NULL *\/$/;"	m	struct:mem_zone	typeref:struct:mem_item *	file:
firstAfterPtr	generic/tclTimer.c	/^    AfterInfo *firstAfterPtr;	\/* First in list of all "after" commands still$/;"	m	struct:AfterAssocData	typeref:typename:AfterInfo *	file:
firstBgPtr	generic/tclEvent.c	/^    BgError *firstBgPtr;	\/* First in list of all background errors$/;"	m	struct:__anon850510a70108	typeref:typename:BgError *	file:
firstCSPtr	generic/tclIO.c	/^    ChannelState *firstCSPtr;	\/* List of all channels currently open,$/;"	m	struct:__anon5e04fc9d0108	typeref:typename:ChannelState *	file:
firstCachePtr	generic/tclThreadAlloc.c	/^static Cache *firstCachePtr = &sharedCache;$/;"	v	typeref:typename:Cache *	file:
firstCommandTokenRef	generic/tclTest.c	/^static TestCommandTokenRef *firstCommandTokenRef = NULL;$/;"	v	typeref:typename:TestCommandTokenRef *	file:
firstDetached	generic/tclTest.c	/^static TestChannel *firstDetached;$/;"	v	typeref:typename:TestChannel *	file:
firstEventPtr	generic/tclNotify.c	/^    Tcl_Event *firstEventPtr;	\/* First pending event, or NULL if none. *\/$/;"	m	struct:ThreadSpecificData	typeref:typename:Tcl_Event *	file:
firstEventSourcePtr	generic/tclNotify.c	/^    EventSource *firstEventSourcePtr;$/;"	m	struct:ThreadSpecificData	typeref:typename:EventSource *	file:
firstExitPtr	generic/tclEvent.c	/^    ExitHandler *firstExitPtr;	\/* First in list of all exit handlers for this$/;"	m	struct:ThreadSpecificData	typeref:typename:ExitHandler *	file:
firstExitPtr	generic/tclEvent.c	/^static ExitHandler *firstExitPtr = NULL;$/;"	v	typeref:typename:ExitHandler *	file:
firstFileHandlerPtr	macosx/tclMacOSXNotify.c	/^    FileHandler *firstFileHandlerPtr;$/;"	m	struct:ThreadSpecificData	typeref:typename:FileHandler *	file:
firstFileHandlerPtr	unix/tclEpollNotfy.c	/^    FileHandler *firstFileHandlerPtr;$/;"	m	struct:ThreadSpecificData	typeref:typename:FileHandler *	file:
firstFileHandlerPtr	unix/tclKqueueNotfy.c	/^    FileHandler *firstFileHandlerPtr;$/;"	m	struct:ThreadSpecificData	typeref:typename:FileHandler *	file:
firstFileHandlerPtr	unix/tclSelectNotfy.c	/^    FileHandler *firstFileHandlerPtr;$/;"	m	struct:ThreadSpecificData	typeref:typename:FileHandler *	file:
firstFileHandlerPtr	unix/tclXtNotify.c	/^    FileHandler *firstFileHandlerPtr;$/;"	m	struct:NotifierState	typeref:typename:FileHandler *	file:
firstFilePtr	win/tclWinChan.c	/^    FileInfo *firstFilePtr;$/;"	m	struct:__anon1518b6be0108	typeref:typename:FileInfo *	file:
firstLateExitPtr	generic/tclEvent.c	/^static ExitHandler *firstLateExitPtr = NULL;$/;"	v	typeref:typename:ExitHandler *	file:
firstLibraryPtr	generic/tclLoad.c	/^static LoadedLibrary *firstLibraryPtr = NULL;$/;"	v	typeref:typename:LoadedLibrary *	file:
firstLocalPtr	generic/tclInt.h	/^    CompiledLocal *firstLocalPtr;$/;"	m	struct:Proc	typeref:typename:CompiledLocal *
firstNotifierPtr	generic/tclNotify.c	/^static ThreadSpecificData *firstNotifierPtr = NULL;$/;"	v	typeref:typename:ThreadSpecificData *	file:
firstObjPtr	generic/tclInt.h	/^    Tcl_Obj *firstObjPtr;	\/* List of free objects for thread. *\/$/;"	m	struct:AllocCache	typeref:typename:Tcl_Obj *
firstObjPtr	generic/tclThreadAlloc.c	/^    Tcl_Obj *firstObjPtr;	\/* List of free objects for thread *\/$/;"	m	struct:Cache	typeref:typename:Tcl_Obj *	file:
firstPipePtr	win/tclWinPipe.c	/^    PipeInfo *firstPipePtr;$/;"	m	struct:__anon3385f2d20208	typeref:typename:PipeInfo *	file:
firstPtr	generic/tclStrIdxTree.h	/^    TclStrIdx *firstPtr;$/;"	m	struct:TclStrIdxTree	typeref:typename:TclStrIdx *
firstPtr	generic/tclThreadAlloc.c	/^    Block *firstPtr;		\/* First block available *\/$/;"	m	struct:__anone59fb5e80408	typeref:typename:Block *	file:
firstPtr	win/tclWinThrd.c	/^    struct ThreadSpecificData *firstPtr;	\/* Queue pointers *\/$/;"	m	struct:__anon3cc991560108	typeref:struct:ThreadSpecificData *	file:
firstReadyFileHandlerPtr	unix/tclEpollNotfy.c	/^    struct PlatformReadyFileHandlerList firstReadyFileHandlerPtr;$/;"	m	struct:ThreadSpecificData	typeref:struct:PlatformReadyFileHandlerList	file:
firstReadyFileHandlerPtr	unix/tclKqueueNotfy.c	/^    struct PlatformReadyFileHandlerList firstReadyFileHandlerPtr;$/;"	m	struct:ThreadSpecificData	typeref:struct:PlatformReadyFileHandlerList	file:
firstSerialPtr	win/tclWinSerial.c	/^    SerialInfo *firstSerialPtr;$/;"	m	struct:__anonc2b952240108	typeref:typename:SerialInfo *	file:
firstTimerHandlerPtr	generic/tclTimer.c	/^    TimerHandler *firstTimerHandlerPtr;	\/* First event in queue. *\/$/;"	m	struct:__anone9e75be60108	typeref:typename:TimerHandler *	file:
firstUsed	generic/tclInt.h	/^    Tcl_Size firstUsed;		\/* Index of first slot in use within slots[] *\/$/;"	m	struct:ListStore	typeref:typename:Tcl_Size
firstValueTemp	generic/tclCompile.h	/^    Tcl_Size firstValueTemp;	\/* Index of the first temp var in a proc frame$/;"	m	struct:ForeachInfo	typeref:typename:Tcl_Size
first_block	compat/zlib/contrib/minizip/zip.c	/^    linkedlist_datablock_internal* first_block;$/;"	m	struct:linkedlist_data_s	typeref:typename:linkedlist_datablock_internal *	file:
first_column	generic/tclDate.c	/^  int first_column;$/;"	m	struct:YYLTYPE	typeref:typename:int	file:
first_column	generic/tclDateClassic.c	/^  int first_column;$/;"	m	struct:YYLTYPE	typeref:typename:int	file:
first_line	generic/tclDate.c	/^  int first_line;$/;"	m	struct:YYLTYPE	typeref:typename:int	file:
first_line	generic/tclDateClassic.c	/^  int first_line;$/;"	m	struct:YYLTYPE	typeref:typename:int	file:
fix	generic/tclEnsemble.c	/^    Tcl_Obj *fix;		\/* Corrected spelling, if needed. *\/$/;"	m	struct:__anonb2501df00108	typeref:typename:Tcl_Obj *	file:
fixconstraintloops	generic/regc_nfa.c	/^fixconstraintloops($/;"	f	typeref:typename:void	file:
fixed	compat/zlib/contrib/puff/puff.c	/^local int fixed(struct state *s)$/;"	f	typeref:typename:local int
fixedtables	compat/zlib/infback.c	/^local void fixedtables(struct inflate_state FAR *state) {$/;"	f	typeref:typename:local void
fixedtables	compat/zlib/inflate.c	/^local void fixedtables(struct inflate_state FAR *state) {$/;"	f	typeref:typename:local void
fixempties	generic/regc_nfa.c	/^fixempties($/;"	f	typeref:typename:void	file:
fixup	generic/tclCompile.h	/^    JumpFixup *fixup;		\/* Points to start of jump fixup array. *\/$/;"	m	struct:JumpFixupArray	typeref:typename:JumpFixup *
flag	compat/zlib/contrib/minizip/unzip.h	/^    uLong flag;                 \/* general purpose bit flag        2 bytes *\/$/;"	m	struct:unz_file_info64_s	typeref:typename:uLong
flag	compat/zlib/contrib/minizip/unzip.h	/^    uLong flag;                 \/* general purpose bit flag        2 bytes *\/$/;"	m	struct:unz_file_info_s	typeref:typename:uLong
flag	compat/zlib/contrib/minizip/zip.c	/^    uLong flag;                 \/* flag of the file currently writing *\/$/;"	m	struct:__anon7add25cb0108	typeref:typename:uLong	file:
flag	generic/regguts.h	/^    char flag;			\/* marks special states *\/$/;"	m	struct:state	typeref:typename:char
flag	generic/tclOO.c	/^    int flag;$/;"	m	struct:__anon5e0846e30108	typeref:typename:int	file:
flag	generic/tclTest.c	/^	int flag;$/;"	m	struct:UtfExtWrapper::__anon0e9396a50408	typeref:typename:int	file:
flagKey	generic/tclTest.c	/^	const char *flagKey;$/;"	m	struct:UtfExtWrapper::__anon0e9396a50408	typeref:typename:const char *	file:
flags	compat/zlib/inflate.h	/^    int flags;                  \/* gzip header method and flags, 0 if zlib, or$/;"	m	struct:inflate_state	typeref:typename:int
flags	generic/regexec.c	/^    int flags;$/;"	m	struct:sset	typeref:typename:int	file:
flags	generic/regguts.h	/^    char flags;$/;"	m	struct:subre	typeref:typename:char
flags	generic/regguts.h	/^    int flags;$/;"	m	struct:cnfa	typeref:typename:int
flags	generic/regguts.h	/^    int flags;$/;"	m	struct:colordesc	typeref:typename:int
flags	generic/tcl.h	/^    int flags;			\/* Flags, see above for details. *\/$/;"	m	struct:Tcl_HashKeyType	typeref:typename:int
flags	generic/tclAssembly.c	/^    int flags;			\/* Boolean flags *\/$/;"	m	struct:BasicBlock	typeref:typename:int	file:
flags	generic/tclAssembly.c	/^    int flags;			\/* Compilation flags (TCL_EVAL_DIRECT) *\/$/;"	m	struct:AssemblyEnv	typeref:typename:int	file:
flags	generic/tclBasic.c	/^    int flags;			\/* Additional flags *\/$/;"	m	struct:__anon6e1456070108	typeref:typename:int	file:
flags	generic/tclBasic.c	/^    int flags;			\/* Various flag bits, as defined below. *\/$/;"	m	struct:__anon6e1456070208	typeref:typename:int	file:
flags	generic/tclClock.c	/^	int flags;			\/* Each remaining field saves the *\/$/;"	m	struct:ClockSafeCatchCmd::__anond46bc7710208	typeref:typename:int	file:
flags	generic/tclCompile.h	/^    unsigned int flags;		\/* flags describing state for the codebyte.$/;"	m	struct:ByteCode	typeref:typename:unsigned int
flags	generic/tclDate.h	/^    int flags;			\/* 0 or CLF_CTZ *\/$/;"	m	struct:TclDateFields	typeref:typename:int
flags	generic/tclDate.h	/^    int flags;			\/* Flags control scanning *\/$/;"	m	struct:ClockFmtScnCmdArgs	typeref:typename:int
flags	generic/tclDate.h	/^    int flags;			\/* Signals parts of date\/time get found *\/$/;"	m	struct:DateInfo	typeref:typename:int
flags	generic/tclDate.h	/^    unsigned short flags;$/;"	m	struct:ClockFormatTokenMap	typeref:typename:unsigned short
flags	generic/tclDate.h	/^    unsigned short flags;$/;"	m	struct:ClockScanTokenMap	typeref:typename:unsigned short
flags	generic/tclIO.h	/^    int	flags;			\/* OR'ed combination of the flags defined$/;"	m	struct:ChannelState	typeref:typename:int
flags	generic/tclIOGT.c	/^    int flags;			\/* Currently CHANNEL_ASYNC or zero. *\/$/;"	m	struct:TransformChannelData	typeref:typename:int	file:
flags	generic/tclInt.h	/^    int flags;			\/* Flag bits for the local variable. Same as$/;"	m	struct:CompiledLocal	typeref:typename:int
flags	generic/tclInt.h	/^    int flags;			\/* Flags governing the trace - see$/;"	m	struct:Trace	typeref:typename:int
flags	generic/tclInt.h	/^    int flags;			\/* LISTSTORE_* flags *\/$/;"	m	struct:ListStore	typeref:typename:int
flags	generic/tclInt.h	/^    int flags;			\/* Miscellaneous bits of information about$/;"	m	struct:Command	typeref:typename:int
flags	generic/tclInt.h	/^    int flags;			\/* Miscellaneous bits of information about$/;"	m	struct:Var	typeref:typename:int
flags	generic/tclInt.h	/^    int flags;			\/* OR'ed combo of TCL_ENSEMBLE_PREFIX,$/;"	m	struct:EnsembleConfig	typeref:typename:int
flags	generic/tclInt.h	/^    int flags;			\/* OR-ed combination of the namespace status$/;"	m	struct:Namespace	typeref:typename:int
flags	generic/tclInt.h	/^    int flags;			\/* Various flag bits. See below. *\/$/;"	m	struct:Interp	typeref:typename:int
flags	generic/tclInt.h	/^    int flags;			\/* What events the trace procedure is$/;"	m	struct:CommandTrace	typeref:typename:int
flags	generic/tclInt.h	/^    int flags;			\/* What events the trace procedure is$/;"	m	struct:VarTrace	typeref:typename:int
flags	generic/tclInterp.c	/^    int flags;			\/* The state of this particular handler. *\/$/;"	m	struct:LimitHandler	typeref:typename:int	file:
flags	generic/tclLink.c	/^    int flags;			\/* Miscellaneous one-bit values; see below for$/;"	m	struct:__anonfc2fcf730108	typeref:typename:int	file:
flags	generic/tclOOInt.h	/^    int flags;			\/* Assorted flags, see below. *\/$/;"	m	struct:CallChain	typeref:typename:int
flags	generic/tclOOInt.h	/^    int flags;			\/* Assorted flags. *\/$/;"	m	struct:Class	typeref:typename:int
flags	generic/tclOOInt.h	/^    int flags;			\/* Assorted flags. Includes whether this$/;"	m	struct:Method	typeref:typename:int
flags	generic/tclOOInt.h	/^    int flags;			\/* Flags to control features. *\/$/;"	m	struct:ProcedureMethod	typeref:typename:int
flags	generic/tclOOInt.h	/^    int flags;			\/* See ObjectFlags. *\/$/;"	m	struct:Object	typeref:typename:int
flags	generic/tclPathObj.c	/^    int flags;			\/* Flags to describe interpretation - see$/;"	m	struct:__anoneca7f3ad0108	typeref:typename:int	file:
flags	generic/tclRegexp.h	/^    int flags;			\/* Regexp compile flags. *\/$/;"	m	struct:TclRegexp	typeref:typename:int
flags	generic/tclResult.c	/^    int flags;			\/* Each remaining field saves the *\/$/;"	m	struct:__anon298490c40108	typeref:typename:int	file:
flags	generic/tclTest.c	/^    int flags;			\/* ORed combination of various bitfields. *\/$/;"	m	struct:TcpState	typeref:typename:int	file:
flags	generic/tclThreadTest.c	/^    int flags;			\/* Initial value of the "flags" field in the$/;"	m	struct:ThreadCtrl	typeref:typename:int	file:
flags	generic/tclThreadTest.c	/^    int flags;			\/* See the TP_ defines below... *\/$/;"	m	struct:ThreadSpecificData	typeref:typename:int	file:
flags	generic/tclTrace.c	/^    int flags;			\/* Operations for which Tcl command is to be$/;"	m	struct:__anonfe0b53740108	typeref:typename:int	file:
flags	generic/tclTrace.c	/^    int flags;			\/* Operations for which Tcl command is to be$/;"	m	struct:__anonfe0b53740308	typeref:typename:int	file:
flags	generic/tclZipfs.c	/^    int flags;$/;"	m	struct:ZipEntry	typeref:typename:int	file:
flags	generic/tclZlib.c	/^    int flags;			\/* General flag bits, see below... *\/$/;"	m	struct:__anon1d0b6d960308	typeref:typename:int	file:
flags	generic/tclZlib.c	/^    int flags;			\/* Miscellaneous flag bits. *\/$/;"	m	struct:__anon1d0b6d960208	typeref:typename:int	file:
flags	unix/tclUnixSock.c	/^    int flags;			\/* OR'ed combination of the bitfields defined$/;"	m	struct:TcpState	typeref:typename:int	file:
flags	win/tclWinChan.c	/^    int flags;			\/* State flags, see above for a list. *\/$/;"	m	struct:FileInfo	typeref:typename:int	file:
flags	win/tclWinConsole.c	/^    int flags;			\/* State flags *\/$/;"	m	struct:ConsoleChannelInfo	typeref:typename:int	file:
flags	win/tclWinConsole.c	/^    int flags;$/;"	m	struct:ConsoleHandleInfo	typeref:typename:int	file:
flags	win/tclWinPipe.c	/^    int flags;			\/* State flags, see above for a list. *\/$/;"	m	struct:PipeInfo	typeref:typename:int	file:
flags	win/tclWinSerial.c	/^    int flags;			\/* State flags, see above for a list. *\/$/;"	m	struct:SerialInfo	typeref:typename:int	file:
flags	win/tclWinSock.c	/^    int flags;			\/* Bit field comprised of the flags described$/;"	m	struct:TcpState	typeref:typename:int	file:
flags	win/tclWinThrd.c	/^    int flags;			\/* See flags below *\/$/;"	m	struct:ThreadSpecificData	typeref:typename:int	file:
flink	generic/tclCkalloc.c	/^    struct mem_header *flink;$/;"	m	struct:mem_header	typeref:struct:mem_header *	file:
flush	compat/zlib/contrib/iostream2/zstream.h	/^        int flush(int _flush) {$/;"	f	class:ozstream	typeref:typename:int
flush	generic/tclZlib.c	/^    int flush;			\/* Stores the flush param for deferred the$/;"	m	struct:__anon1d0b6d960208	typeref:typename:int	file:
flushProc	generic/tcl.h	/^    Tcl_DriverFlushProc *flushProc;$/;"	m	struct:Tcl_ChannelType	typeref:typename:Tcl_DriverFlushProc *
flush_pending	compat/zlib/deflate.c	/^local void flush_pending(z_streamp strm) {$/;"	f	typeref:typename:local void
flushbuf	compat/zlib/contrib/iostream/zfstream.cpp	/^int gzfilebuf::flushbuf() {$/;"	f	class:gzfilebuf	typeref:typename:int
fmtMinAlloc	generic/tclDate.h	/^    size_t fmtMinAlloc;$/;"	m	struct:ClockFmtScnStorage	typeref:typename:size_t
fmtTok	generic/tclDate.h	/^    ClockFormatToken *fmtTok;$/;"	m	struct:ClockFmtScnStorage	typeref:typename:ClockFormatToken *
fmtTokC	generic/tclDate.h	/^    unsigned fmtTokC;$/;"	m	struct:ClockFmtScnStorage	typeref:typename:unsigned
fmtproc	generic/tclDate.h	/^    ClockFormatTokenProc *fmtproc;$/;"	m	struct:ClockFormatTokenMap	typeref:typename:ClockFormatTokenProc *
fn	generic/tclBasic.c	/^    BuiltinUnaryFunc *fn;	\/* Real function pointer *\/$/;"	m	struct:__anon6e1456070408	typeref:typename:BuiltinUnaryFunc *	file:
fn_u_cleanup	generic/tclIcu.c	/^typedef void        (*fn_u_cleanup)(void);$/;"	t	typeref:typename:void (*)(void)	file:
fn_u_errorName	generic/tclIcu.c	/^typedef const char *(*fn_u_errorName)(UErrorCodex);$/;"	t	typeref:typename:const char * (*)(UErrorCodex)	file:
fn_ubrk_close	generic/tclIcu.c	/^typedef void	(*fn_ubrk_close)(UBreakIterator *);$/;"	t	typeref:typename:void (*)(UBreakIterator *)	file:
fn_ubrk_following	generic/tclIcu.c	/^typedef int32_t	(*fn_ubrk_following)(UBreakIterator *, int32_t);$/;"	t	typeref:typename:int32_t (*)(UBreakIterator *,int32_t)	file:
fn_ubrk_next	generic/tclIcu.c	/^typedef int32_t	(*fn_ubrk_next)(UBreakIterator *);$/;"	t	typeref:typename:int32_t (*)(UBreakIterator *)	file:
fn_ubrk_open	generic/tclIcu.c	/^typedef UBreakIterator *(*fn_ubrk_open)($/;"	t	typeref:typename:UBreakIterator * (*)(UBreakIteratorTypex,const char *,const uint16_t *,int32_t,UErrorCodex *)	file:
fn_ubrk_preceding	generic/tclIcu.c	/^typedef int32_t	(*fn_ubrk_preceding)(UBreakIterator *, int32_t);$/;"	t	typeref:typename:int32_t (*)(UBreakIterator *,int32_t)	file:
fn_ubrk_previous	generic/tclIcu.c	/^typedef int32_t	(*fn_ubrk_previous)(UBreakIterator *);$/;"	t	typeref:typename:int32_t (*)(UBreakIterator *)	file:
fn_ubrk_setText	generic/tclIcu.c	/^typedef void	(*fn_ubrk_setText)($/;"	t	typeref:typename:void (*)(UBreakIterator *,const void *,int32_t,UErrorCodex *)	file:
fn_ucnv_countAliases	generic/tclIcu.c	/^typedef uint16_t    (*fn_ucnv_countAliases)(const char *, UErrorCodex *);$/;"	t	typeref:typename:uint16_t (*)(const char *,UErrorCodex *)	file:
fn_ucnv_countAvailable	generic/tclIcu.c	/^typedef int32_t     (*fn_ucnv_countAvailable)(void);$/;"	t	typeref:typename:int32_t (*)(void)	file:
fn_ucnv_getAlias	generic/tclIcu.c	/^typedef const char *(*fn_ucnv_getAlias)(const char *, uint16_t, UErrorCodex *);$/;"	t	typeref:typename:const char * (*)(const char *,uint16_t,UErrorCodex *)	file:
fn_ucnv_getAvailableName	generic/tclIcu.c	/^typedef const char *(*fn_ucnv_getAvailableName)(int32_t);$/;"	t	typeref:typename:const char * (*)(int32_t)	file:
fn_ucsdet_close	generic/tclIcu.c	/^typedef void               (*fn_ucsdet_close)(UCharsetDetector *ucsd);$/;"	t	typeref:typename:void (*)(UCharsetDetector * ucsd)	file:
fn_ucsdet_detect	generic/tclIcu.c	/^typedef const UCharsetMatch *  (*fn_ucsdet_detect)($/;"	t	typeref:typename:const UCharsetMatch * (*)(UCharsetDetector * ucsd,UErrorCodex * status)	file:
fn_ucsdet_detectAll	generic/tclIcu.c	/^typedef const UCharsetMatch ** (*fn_ucsdet_detectAll)($/;"	t	typeref:typename:const UCharsetMatch ** (*)(UCharsetDetector * ucsd,int32_t * matchesFound,UErrorCodex * status)	file:
fn_ucsdet_getAllDetectableCharsets	generic/tclIcu.c	/^typedef UEnumeration *     (*fn_ucsdet_getAllDetectableCharsets)($/;"	t	typeref:typename:UEnumeration * (*)(UCharsetDetector * ucsd,UErrorCodex * status)	file:
fn_ucsdet_getName	generic/tclIcu.c	/^typedef const char *       (*fn_ucsdet_getName)($/;"	t	typeref:typename:const char * (*)(const UCharsetMatch * ucsm,UErrorCodex * status)	file:
fn_ucsdet_open	generic/tclIcu.c	/^typedef UCharsetDetector * (*fn_ucsdet_open)(UErrorCodex *status);$/;"	t	typeref:typename:UCharsetDetector * (*)(UErrorCodex * status)	file:
fn_ucsdet_setText	generic/tclIcu.c	/^typedef void               (*fn_ucsdet_setText)(UCharsetDetector *ucsd,$/;"	t	typeref:typename:void (*)(UCharsetDetector * ucsd,const char * textIn,int32_t len,UErrorCodex * status)	file:
fn_uenum_close	generic/tclIcu.c	/^typedef void        (*fn_uenum_close)(UEnumeration *);$/;"	t	typeref:typename:void (*)(UEnumeration *)	file:
fn_uenum_count	generic/tclIcu.c	/^typedef int32_t     (*fn_uenum_count)(UEnumeration *, UErrorCodex *);$/;"	t	typeref:typename:int32_t (*)(UEnumeration *,UErrorCodex *)	file:
fn_uenum_next	generic/tclIcu.c	/^typedef const char *(*fn_uenum_next)(UEnumeration *, int32_t *, UErrorCodex *);$/;"	t	typeref:typename:const char * (*)(UEnumeration *,int32_t *,UErrorCodex *)	file:
fname	compat/zlib/contrib/untgz/untgz.c	/^  char              *fname;$/;"	m	struct:attr_item	typeref:typename:char *	file:
fns	generic/regguts.h	/^struct fns {$/;"	s
font	tools/index.tcl	/^proc font type {}$/;"	p
fopen64	compat/zlib/contrib/minizip/ioapi.h	/^ #define fopen64 /;"	d
fopen64	compat/zlib/contrib/minizip/ioapi.h	/^#define fopen64 /;"	d
fopen64_file_func	compat/zlib/contrib/minizip/ioapi.c	/^static voidpf ZCALLBACK fopen64_file_func(voidpf opaque, const void* filename, int mode) {$/;"	f	typeref:typename:voidpf ZCALLBACK	file:
fopen_file_func	compat/zlib/contrib/minizip/ioapi.c	/^static voidpf ZCALLBACK fopen_file_func(voidpf opaque, const char* filename, int mode) {$/;"	f	typeref:typename:voidpf ZCALLBACK	file:
forAllStubs	tools/genStubs.tcl	/^proc genStubs::forAllStubs {name slotProc onAll textVar$/;"	p	namespace:genStubs
foreachInfoType	generic/tclCompCmds.c	/^static const AuxDataType foreachInfoType = {$/;"	v	typeref:typename:const AuxDataType	file:
foreachLine	library/foreachline.tcl	/^proc foreachLine {varName filename body} {$/;"	p
foreach_describe	tests-perf/listPerf.tcl	/^    proc foreach_describe {share_mode len} {$/;"	p	namespace:::perf::list
foreach_perf	tests-perf/listPerf.tcl	/^    proc foreach_perf {} {$/;"	p	namespace:::perf::list
foreignExceptionBase	generic/tclAssembly.c	/^    int foreignExceptionBase;	\/* Base index of foreign exceptions *\/$/;"	m	struct:BasicBlock	typeref:typename:int	file:
foreignExceptionCount	generic/tclAssembly.c	/^    int foreignExceptionCount;	\/* Count of foreign exceptions *\/$/;"	m	struct:BasicBlock	typeref:typename:int	file:
foreignExceptions	generic/tclAssembly.c	/^    ExceptionRange* foreignExceptions;$/;"	m	struct:BasicBlock	typeref:typename:ExceptionRange *	file:
fork	unix/tclUnixPipe.c	/^#define fork vfork$/;"	d	file:
format	generic/tclZlib.c	/^    int format;			\/* Flags from the TCL_ZLIB_FORMAT_* *\/$/;"	m	struct:__anon1d0b6d960208	typeref:typename:int	file:
format	generic/tclZlib.c	/^    int format;			\/* What format of data is going on the wire.$/;"	m	struct:__anon1d0b6d960308	typeref:typename:int	file:
format	library/clockclassic.tcl	/^proc format { args } {$/;"	p
formatObj	generic/tclClockClassic.c	/^#define formatObj /;"	d	file:
formatObj	generic/tclDate.h	/^    Tcl_Obj *formatObj;		\/* Format *\/$/;"	m	struct:ClockFmtScnCmdArgs	typeref:typename:Tcl_Obj *
format_timings	tests-perf/listPerf.tcl	/^    proc format_timings {us iters} {$/;"	p	namespace:::perf::list
forwardList	generic/tclIORChan.c	/^static ForwardingResult *forwardList = NULL;$/;"	v	typeref:typename:ForwardingResult *	file:
forwardList	generic/tclIORTrans.c	/^static ForwardingResult *forwardList = NULL;$/;"	v	typeref:typename:ForwardingResult *	file:
fp	compat/zlib/contrib/iostream2/zstream.h	/^        gzFile fp() { return m_fp; }$/;"	f	class:izstream	typeref:typename:gzFile
fp	compat/zlib/contrib/iostream2/zstream.h	/^        gzFile fp() { return m_fp; }$/;"	f	class:ozstream	typeref:typename:gzFile
fpControl	win/tclWinThrd.c	/^    unsigned int fpControl;	\/* Floating point control word from the$/;"	m	struct:__anon3cc991560308	typeref:typename:unsigned int	file:
fpu_control_t	generic/tclStrToD.c	/^typedef unsigned int	fpu_control_t __attribute__ ((__mode__ (__HI__)));$/;"	t	typeref:typename:unsigned int	file:
frameIndex	generic/tclInt.h	/^    Tcl_Size frameIndex;	\/* Index in the array of compiler-assigned$/;"	m	struct:CompiledLocal	typeref:typename:Tcl_Size
framePtr	generic/tclInt.h	/^    CallFrame *framePtr;	\/* Points to top-most in stack of all nested$/;"	m	struct:Interp	typeref:typename:CallFrame *
framePtr	generic/tclInt.h	/^    CallFrame *framePtr;	\/* Procedure activation record, may be$/;"	m	struct:CmdFrame	typeref:typename:CallFrame *
framePtr	generic/tclInt.h	/^    CallFrame *framePtr;	\/* See Interp.framePtr *\/$/;"	m	struct:CorContext	typeref:typename:CallFrame *
framePtr	generic/tclInt.h	/^    CmdFrame *framePtr;		\/* CmdFrame to access. *\/$/;"	m	struct:CFWord	typeref:typename:CmdFrame *
framePtr	generic/tclInt.h	/^    CmdFrame *framePtr;		\/* CmdFrame to access. *\/$/;"	m	struct:CFWordBC	typeref:typename:CmdFrame *
framePtr	generic/tclOOMethod.c	/^    CallFrame *framePtr;	\/* Reference to the call frame itself (it's$/;"	m	struct:PMFrameData	typeref:typename:CallFrame *	file:
framework	unix/tcl.m4	/^	AC_ARG_ENABLE(framework,$/;"	e
fread_file_func	compat/zlib/contrib/minizip/ioapi.c	/^static uLong ZCALLBACK fread_file_func(voidpf opaque, voidpf stream, void* buf, uLong size) {$/;"	f	typeref:typename:uLong ZCALLBACK	file:
free	generic/regguts.h	/^    color free;			\/* beginning of free chain (if non-0) *\/$/;"	m	struct:colormap	typeref:typename:color
free	generic/regguts.h	/^    struct arc *free;		\/* chain of free arcs *\/$/;"	m	struct:state	typeref:struct:arc *
free	generic/regguts.h	/^    struct state *free;		\/* free list *\/$/;"	m	struct:nfa	typeref:struct:state *
free	generic/regguts.h	/^    void (*free) (regex_t *);$/;"	m	struct:fns	typeref:typename:void (*)(regex_t *)
freeDFA	generic/rege_dfa.c	/^freeDFA($/;"	f	typeref:typename:void	file:
freeEntryProc	generic/tcl.h	/^    Tcl_FreeHashEntryProc *freeEntryProc;$/;"	m	struct:Tcl_HashKeyType	typeref:typename:Tcl_FreeHashEntryProc *
freeIntRepProc	generic/tcl.h	/^    Tcl_FreeInternalRepProc *freeIntRepProc;$/;"	m	struct:Tcl_ObjType	typeref:typename:Tcl_FreeInternalRepProc *
freeIntRepProc	generic/tclDTrace.d	/^    void *freeIntRepProc;$/;"	m	struct:Tcl_ObjType	file:
freeIntRepProc	generic/tclInt.h	/^    Tcl_FreeInternalRepProc *freeIntRepProc;$/;"	m	struct:ObjectType	typeref:typename:Tcl_FreeInternalRepProc *
freeInternalRepProc	generic/tcl.h	/^    Tcl_FSFreeInternalRepProc *freeInternalRepProc;$/;"	m	struct:Tcl_Filesystem	typeref:typename:Tcl_FSFreeInternalRepProc *
freeProc	generic/tcl.h	/^    Tcl_FreeProc *freeProc;	\/* If non-NULL, function to call when this$/;"	m	struct:Tcl_EncodingType	typeref:typename:Tcl_FreeProc *
freeProc	generic/tclCompile.h	/^    AuxDataFreeProc *freeProc;	\/* Callback procedure to invoke when the aux$/;"	m	struct:AuxDataType	typeref:typename:AuxDataFreeProc *
freeProc	generic/tclEncoding.c	/^    Tcl_EncodingFreeProc *freeProc;$/;"	m	struct:__anondb7a8e8c0108	typeref:typename:Tcl_EncodingFreeProc *	file:
freeProc	generic/tclPreserve.c	/^    Tcl_FreeProc *freeProc;	\/* Function to call to free. *\/$/;"	m	struct:__anone9498b710108	typeref:typename:Tcl_FreeProc *	file:
freeRep	generic/tclTestABSList.c	/^freeRep(Tcl_Obj* lstringObj)$/;"	f	typeref:typename:void	file:
free_datablock	compat/zlib/contrib/minizip/zip.c	/^local void free_datablock(linkedlist_datablock_internal* ldi) {$/;"	f	typeref:typename:local void
free_func	compat/zlib/zconf.h	/^#  define free_func             z_free_func$/;"	d
free_func	compat/zlib/zconf.h.in	/^#  define free_func             z_free_func$/;"	d	file:
free_func	compat/zlib/zlib.h	/^typedef void   (*free_func)(voidpf opaque, voidpf address);$/;"	t	typeref:typename:void (*)(voidpf opaque,voidpf address)
free_linkedlist	compat/zlib/contrib/minizip/zip.c	/^local void free_linkedlist(linkedlist_data* ll) {$/;"	f	typeref:typename:local void
freeaddrinfo	compat/fake-rfc2553.h	/^#define freeaddrinfo(a)         (fake_freeaddrinfo(/;"	d
freearc	generic/regc_nfa.c	/^freearc($/;"	f	typeref:typename:void	file:
freechain	generic/regguts.h	/^#define	freechain outchain	\/* we do not maintain "freechainR/;"	d
freecm	generic/regc_color.c	/^freecm($/;"	f	typeref:typename:void	file:
freecnfa	generic/regc_nfa.c	/^freecnfa($/;"	f	typeref:typename:void	file:
freecolor	generic/regc_color.c	/^freecolor($/;"	f	typeref:typename:void	file:
freecvec	generic/regc_cvec.c	/^freecvec($/;"	f	typeref:typename:void	file:
freelacons	generic/regcomp.c	/^freelacons($/;"	f	typeref:typename:void	file:
freenfa	generic/regc_nfa.c	/^freenfa($/;"	f	typeref:typename:void	file:
freesrnode	generic/regcomp.c	/^freesrnode($/;"	f	typeref:typename:void	file:
freestate	generic/regc_nfa.c	/^freestate($/;"	f	typeref:typename:void	file:
freesubre	generic/regcomp.c	/^freesubre($/;"	f	typeref:typename:void	file:
freev	generic/regcomp.c	/^freev($/;"	f	typeref:typename:int	file:
freq	compat/zlib/deflate.h	/^        ush  freq;       \/* frequency count *\/$/;"	m	union:ct_data_s::__anond731f1a3010a	typeref:typename:ush
from	generic/regguts.h	/^    struct state *from;		\/* where it's from (and contained within) *\/$/;"	m	struct:arc	typeref:struct:state *
fromUnicode	generic/tclEncoding.c	/^    unsigned short **fromUnicode;$/;"	m	struct:__anondb7a8e8c0208	typeref:typename:unsigned short **	file:
fromUtfCmd	generic/tclTest.c	/^    char *fromUtfCmd;$/;"	m	struct:__anon0e9396a50208	typeref:typename:char *	file:
fromUtfProc	generic/tcl.h	/^    Tcl_EncodingConvertProc *fromUtfProc;$/;"	m	struct:Tcl_EncodingType	typeref:typename:Tcl_EncodingConvertProc *
fromUtfProc	generic/tclEncoding.c	/^    Tcl_EncodingConvertProc *fromUtfProc;$/;"	m	struct:__anondb7a8e8c0108	typeref:typename:Tcl_EncodingConvertProc *	file:
fsPathType	generic/tclPathObj.c	/^static const Tcl_ObjType fsPathType = {$/;"	v	typeref:typename:const Tcl_ObjType	file:
fsPtr	generic/tclIOUtil.c	/^    const Tcl_Filesystem *fsPtr;\/* Pointer to filesystem dispatch table. *\/$/;"	m	struct:FilesystemRecord	typeref:typename:const Tcl_Filesystem *	file:
fsPtr	generic/tclPathObj.c	/^    const Tcl_Filesystem *fsPtr;\/* The Tcl_Filesystem that claims this path *\/$/;"	m	struct:__anoneca7f3ad0108	typeref:typename:const Tcl_Filesystem *	file:
fseek64_file_func	compat/zlib/contrib/minizip/ioapi.c	/^static long ZCALLBACK fseek64_file_func(voidpf opaque, voidpf stream, ZPOS64_T offset, int origi/;"	f	typeref:typename:long ZCALLBACK	file:
fseek_file_func	compat/zlib/contrib/minizip/ioapi.c	/^static long ZCALLBACK fseek_file_func(voidpf opaque, voidpf stream, uLong offset, int origin) {$/;"	f	typeref:typename:long ZCALLBACK	file:
fseeko64	compat/zlib/contrib/minizip/ioapi.h	/^  #define fseeko64 /;"	d
fseeko64	compat/zlib/contrib/minizip/ioapi.h	/^#define fseeko64 /;"	d
ftell64_file_func	compat/zlib/contrib/minizip/ioapi.c	/^static ZPOS64_T ZCALLBACK ftell64_file_func(voidpf opaque, voidpf stream) {$/;"	f	typeref:typename:ZPOS64_T ZCALLBACK	file:
ftell_file_func	compat/zlib/contrib/minizip/ioapi.c	/^static long ZCALLBACK ftell_file_func(voidpf opaque, voidpf stream) {$/;"	f	typeref:typename:long ZCALLBACK	file:
ftello64	compat/zlib/contrib/minizip/ioapi.h	/^  #define ftello64 /;"	d
ftello64	compat/zlib/contrib/minizip/ioapi.h	/^#define ftello64 /;"	d
fullName	generic/tcl.h	/^    char *fullName;		\/* The namespace's fully qualified name. This$/;"	m	struct:Tcl_Namespace	typeref:typename:char *
fullName	generic/tclInt.h	/^    char *fullName;		\/* The namespace's fully qualified name. This$/;"	m	struct:Namespace	typeref:typename:char *
fullNameObj	generic/tclOOInt.h	/^    Tcl_Obj *fullNameObj;	\/* Name used at the instance namespace level. *\/$/;"	m	struct:PrivateVariableMapping	typeref:typename:Tcl_Obj *
fullname	library/auto.tcl	/^proc auto_mkindex_parser::fullname {name} {$/;"	p	namespace:auto_mkindex_parser
func	compat/zlib/contrib/iostream/zfstream.h	/^  gzofstream &(*func)(gzofstream &, T);$/;"	m	class:gzomanip	typeref:typename:gzofstream & (*)(gzofstream &,T)
func	compat/zlib/contrib/iostream3/zfstream.h	/^    (*func)(gzofstream&, T1, T2);$/;"	m	class:gzomanip2	typeref:typename:gzofstream & (*)(gzofstream &,T1,T2)
func	compat/zlib/deflate.c	/^   compress_func func;$/;"	m	struct:config_s	typeref:typename:compress_func	file:
functions	generic/regcomp.c	/^static const struct fns functions = {$/;"	v	typeref:typename:const struct fns	file:
fwdMethodType	generic/tclOOMethod.c	/^static const Tcl_MethodType fwdMethodType = {$/;"	v	typeref:typename:const Tcl_MethodType	file:
fwrite_file_func	compat/zlib/contrib/minizip/ioapi.c	/^static uLong ZCALLBACK fwrite_file_func(voidpf opaque, voidpf stream, const void* buf, uLong siz/;"	f	typeref:typename:uLong ZCALLBACK	file:
g	compat/zlib/examples/enough.c	/^} g;$/;"	v	typeref:struct:__anonea7b679d0208
g	generic/regexec.c	/^    struct guts *g;$/;"	m	struct:vars	typeref:struct:guts *	file:
g2392	tools/tclsh.svg	/^       transform="matrix(0.9671783,0,0,0.9671783,10.08245,12.003966)">$/;"	i
gConsoleHandleInfoList	win/tclWinConsole.c	/^static ConsoleHandleInfo *gConsoleHandleInfoList;$/;"	v	typeref:typename:ConsoleHandleInfo *	file:
gConsoleLock	win/tclWinConsole.c	/^SRWLOCK gConsoleLock;$/;"	v	typeref:typename:SRWLOCK
gInitialized	win/tclWinConsole.c	/^static int gInitialized = 0;$/;"	v	typeref:typename:int	file:
gWatchingChannelList	win/tclWinConsole.c	/^static ConsoleChannelInfo *gWatchingChannelList;$/;"	v	typeref:typename:ConsoleChannelInfo *	file:
gai_strerror	compat/fake-rfc2553.h	/^#define gai_strerror(a)         (fake_gai_strerror(/;"	d
gai_strerror	generic/tclIOSock.c	/^gai_strerror($/;"	f	typeref:typename:const char *	file:
gbuf	unix/tclUnixCompat.c	/^    char *gbuf;$/;"	m	struct:__anon1c3f21740108	typeref:typename:char *	file:
gbuf	unix/tclUnixCompat.c	/^    char gbuf[2048];$/;"	m	struct:__anon1c3f21740108	typeref:typename:char[2048]	file:
gbuflen	unix/tclUnixCompat.c	/^    int gbuflen;$/;"	m	struct:__anon1c3f21740108	typeref:typename:int	file:
gcd	compat/zlib/examples/gzappend.c	/^local unsigned gcd(unsigned a, unsigned b)$/;"	f	typeref:typename:local unsigned
gdb	unix/Makefile.in	/^gdb: ${TCL_EXE}$/;"	t
gdb	win/Makefile.in	/^gdb: binaries$/;"	t
gdb-script	unix/Makefile.in	/^gdb-script: ${TCLTEST_EXE}$/;"	t
gdb-test	unix/Makefile.in	/^gdb-test: ${TCLTEST_EXE}$/;"	t
gdb-test	win/Makefile.in	/^gdb-test: tcltest$/;"	t
genFnObj	generic/tclTestABSList.c	/^    Tcl_Obj *genFnObj;  \/\/ The preformed command as a list. Index is set in$/;"	m	struct:LgenSeries	typeref:typename:Tcl_Obj *	file:
genStubs	tools/genStubs.tcl	/^namespace eval genStubs {$/;"	n
genTable	tools/uniClass.tcl	/^proc genTable {type} {$/;"	p
gen_bitlen	compat/zlib/trees.c	/^local void gen_bitlen(deflate_state *s, tree_desc *desc) {$/;"	f	typeref:typename:local void
gen_codes	compat/zlib/trees.c	/^local void gen_codes(ct_data *tree, int max_code, ushf *bl_count) {$/;"	f	typeref:typename:local void
gen_trees_header	compat/zlib/trees.c	/^void gen_trees_header(void) {$/;"	f	typeref:typename:void
gendate	unix/Makefile.in	/^gendate:$/;"	t
gendate	win/Makefile.in	/^gendate:$/;"	t
gendateclassic	unix/Makefile.in	/^gendateclassic:$/;"	t
generate_boilerplate	tools/ucm2tests.tcl	/^proc ucm::generate_boilerplate {} {$/;"	p	namespace:ucm
generate_tests	tools/ucm2tests.tcl	/^proc ucm::generate_tests {} {$/;"	p	namespace:ucm
generation	generic/tclTimer.c	/^    int generation;		\/* Used to distinguish older handlers from$/;"	m	struct:IdleHandler	typeref:typename:int	file:
generic	library/platform/platform.tcl	/^proc ::platform::generic {} {$/;"	p	namespace:::platform
generic	library/platform/shell.tcl	/^proc ::platform::shell::generic {shell} {$/;"	p	namespace:::platform::shell
genscript	unix/Makefile.in	/^genscript:$/;"	t
genscript	win/Makefile.in	/^genscript:$/;"	t
genstubs	unix/Makefile.in	/^genstubs:$/;"	t
genstubs	win/Makefile.in	/^genstubs:$/;"	t
get-chunks	tests/httpd11.tcl	/^proc get-chunks {data {compression gzip}} {$/;"	p
get?	tests/httpd11.tcl	/^proc ::tcl::dict::get? {dict key} {$/;"	p	namespace:::tcl::dict
getCwdProc	generic/tcl.h	/^    Tcl_FSGetCwdProc *getCwdProc;$/;"	m	struct:Tcl_Filesystem	typeref:typename:Tcl_FSGetCwdProc *
getElementsProc	generic/tclDTrace.d	/^    void *getElementsProc;$/;"	m	struct:Tcl_ObjType	file:
getFileCrc	compat/zlib/contrib/minizip/minizip.c	/^static int getFileCrc(const char* filenameinzip, void* buf, unsigned long size_buf, unsigned lon/;"	f	typeref:typename:int	file:
getGroup	tools/uniParse.tcl	/^proc uni::getGroup {value} {$/;"	p	namespace:uni
getHandleProc	generic/tcl.h	/^    Tcl_DriverGetHandleProc *getHandleProc;$/;"	m	struct:Tcl_ChannelType	typeref:typename:Tcl_DriverGetHandleProc *
getOpt	generic/tclIORChan.c	/^    struct ForwardParamGetOpt getOpt;$/;"	m	union:ForwardParam	typeref:struct:ForwardParamGetOpt	file:
getOptionProc	generic/tcl.h	/^    Tcl_DriverGetOptionProc *getOptionProc;$/;"	m	struct:Tcl_ChannelType	typeref:typename:Tcl_DriverGetOptionProc *
getPackages	tools/index.tcl	/^proc getPackages {} {$/;"	p
getPort	tests/remote.tcl	/^proc getPort sock {$/;"	p
getProc	generic/tclInt.h	/^    TclGetFileAttrProc *getProc;\/* The procedure for getting attrs. *\/$/;"	m	struct:TclFileAttrProcs	typeref:typename:TclGetFileAttrProc *
getSections	tools/index.tcl	/^proc getSections {pkg} {$/;"	p
getTopics	tools/index.tcl	/^proc getTopics {pkg sect} {$/;"	p
getVacantSS	generic/rege_dfa.c	/^getVacantSS($/;"	f	typeref:struct:sset *	file:
getValue	tools/uniParse.tcl	/^proc uni::getValue {items index} {$/;"	p	namespace:uni
get_crc_table	compat/zlib/contrib/ada/zlib-thin.ads	/^   function get_crc_table return ULong_Access;$/;"	R
get_crc_table	compat/zlib/crc32.c	/^const z_crc_t FAR * ZEXPORT get_crc_table(void) {$/;"	f	typeref:typename:const z_crc_t FAR * ZEXPORT
get_crc_table	compat/zlib/zconf.h	/^#  define get_crc_table         z_get_crc_table$/;"	d
get_crc_table	compat/zlib/zconf.h.in	/^#  define get_crc_table         z_get_crc_table$/;"	d	file:
get_sort_sample	tests-perf/listPerf.tcl	/^    proc get_sort_sample {{spanned 0}} {$/;"	p	namespace:::perf::list
getaddrinfo	compat/fake-rfc2553.h	/^#define getaddrinfo(a,b,c,d)    (fake_getaddrinfo(/;"	d
getcvec	generic/regc_cvec.c	/^getcvec($/;"	f	typeref:struct:cvec *	file:
getenv	generic/tclBasic.c	/^#   define getenv(x) _wgetenv(L##x) \/* On Windows, use _wgetenv /;"	d	file:
getenv	generic/tclClock.c	/^#define getenv(x) _wgetenv(/;"	d	file:
getenv	generic/tclClockClassic.c	/^#define getenv(x) _wgetenv(/;"	d	file:
getenv	generic/tclIOUtil.c	/^#define getenv(x) _wgetenv(/;"	d	file:
geteuid	generic/tclCmdAH.c	/^#define geteuid() (short)(geteuid)/;"	d	file:
getnameinfo	compat/fake-rfc2553.h	/^#define getnameinfo(a,b,c,d,e,f,g) (fake_getnameinfo(/;"	d
getoct	compat/zlib/contrib/untgz/untgz.c	/^int getoct (char *p,int width)$/;"	f	typeref:typename:int
getpreferences	library/msgcat/msgcat.tcl	/^proc msgcat::mcutil::getpreferences {locale} {$/;"	p	namespace:msgcat::mcutil
getsubdfa	generic/regexec.c	/^getsubdfa(struct vars * v,$/;"	f	typeref:struct:dfa *	file:
getsystemlocale	library/msgcat/msgcat.tcl	/^proc msgcat::mcutil::getsystemlocale {} {$/;"	p	namespace:msgcat::mcutil
getterType	generic/tclOODefineCmds.c	/^    const Tcl_MethodType getterType;$/;"	m	struct:DeclaredSlot	typeref:typename:const Tcl_MethodType	file:
gettimeofday	compat/gettod.c	/^gettimeofday($/;"	f	typeref:typename:int
gettimeofday	unix/tclUnixPort.h	/^#	define gettimeofday BSDgettimeofday$/;"	d
geturl	library/http/http.tcl	/^proc http::geturl {url args} {$/;"	p	namespace:http
getversion	tools/tcltk-man2html.tcl	/^proc getversion {tclh {name {}}} {$/;"	p
gfivProc	generic/tclOOInt.h	/^    GetFrameInfoValueProc *gfivProc;$/;"	m	struct:ProcedureMethod	typeref:typename:GetFrameInfoValueProc *
gi	compat/zlib/contrib/minizip/unzip.c	/^    unz_global_info64 gi;       \/* public global information *\/$/;"	m	struct:__anon3259ecee0208	typeref:typename:unz_global_info64	file:
gid	compat/zlib/contrib/untgz/untgz.c	/^  char gid[8];                  \/* 116 *\/$/;"	m	struct:tar_header	typeref:typename:char[8]	file:
globObjPtr	generic/tclRegexp.h	/^    Tcl_Obj *globObjPtr;	\/* Glob pattern rep of RE or NULL if none. *\/$/;"	m	struct:TclRegexp	typeref:typename:Tcl_Obj *
globOptionsEnum	generic/tclFileName.c	/^    enum globOptionsEnum {$/;"	g	function:Tcl_GlobObjCmd	file:
globalLock	unix/tclUnixThrd.c	/^static pthread_mutex_t globalLock = PTHREAD_MUTEX_INITIALIZER;$/;"	v	typeref:typename:pthread_mutex_t	file:
globalLock	win/tclWinThrd.c	/^static CRITICAL_SECTION globalLock;$/;"	v	typeref:typename:CRITICAL_SECTION	file:
globalNsPtr	generic/tclInt.h	/^    Namespace *globalNsPtr;	\/* The interpreter's global namespace. *\/$/;"	m	struct:Interp	typeref:typename:Namespace *
globalcomment	compat/zlib/contrib/minizip/zip.c	/^    char *globalcomment;$/;"	m	struct:__anon7add25cb0208	typeref:typename:char *	file:
gmtSetupTZData	generic/tclDate.h	/^    Tcl_Obj *gmtSetupTZData;$/;"	m	struct:ClockClientData	typeref:typename:Tcl_Obj *
gmtSetupTimeZone	generic/tclDate.h	/^    Tcl_Obj *gmtSetupTimeZone;$/;"	m	struct:ClockClientData	typeref:typename:Tcl_Obj *
gmtSetupTimeZoneUnnorm	generic/tclDate.h	/^    Tcl_Obj *gmtSetupTimeZoneUnnorm;$/;"	m	struct:ClockClientData	typeref:typename:Tcl_Obj *
gmtTZName	generic/tclDate.h	/^    Tcl_Obj *gmtTZName;$/;"	m	struct:ClockClientData	typeref:typename:Tcl_Obj *
gname	compat/zlib/contrib/untgz/untgz.c	/^  char gname[32];               \/* 297 *\/$/;"	m	struct:tar_header	typeref:typename:char[32]	file:
good_length	compat/zlib/deflate.c	/^   ush good_length; \/* reduce lazy search above this match length *\/$/;"	m	struct:config_s	typeref:typename:ush	file:
good_match	compat/zlib/contrib/gcc_gvmat64/gvmat64.S	/^#define good_match /;"	d	file:
good_match	compat/zlib/deflate.h	/^    uInt good_match;$/;"	m	struct:internal_state	typeref:typename:uInt
gotsig	unix/tclUnixTest.c	/^static const char *gotsig = "0";$/;"	v	typeref:typename:const char *	file:
granularityTicker	generic/tclInt.h	/^	int granularityTicker;	\/* Counter used to determine how often to$/;"	m	struct:Interp::__anon1eb6b3550808	typeref:typename:int
graphCharTable	generic/regc_locale.c	/^static const chr graphCharTable[] = {$/;"	v	typeref:typename:const chr[]	file:
graphRangeTable	generic/regc_locale.c	/^static const crange graphRangeTable[] = {$/;"	v	typeref:typename:const crange[]	file:
gregorian	generic/tclClockClassic.c	/^    int gregorian;		\/* Flag == 1 if the date is Gregorian *\/$/;"	m	struct:__anondf8925f30208	typeref:typename:int	file:
gregorian	generic/tclDate.h	/^    int gregorian;		\/* Flag == 1 if the date is Gregorian *\/$/;"	m	struct:TclDateFields	typeref:typename:int
grepCode	tools/checkLibraryDoc.tcl	/^proc grepCode {dir pkg} {$/;"	p
grepDecl	tools/checkLibraryDoc.tcl	/^proc grepDecl {dir pkg} {$/;"	p
grepDocs	tools/checkLibraryDoc.tcl	/^proc grepDocs {dir pkg} {$/;"	p
grepMisc	tools/checkLibraryDoc.tcl	/^proc grepMisc {dir pkg} {$/;"	p
groupMap	generic/tclUniData.c	/^static const unsigned char groupMap[] = {$/;"	v	typeref:typename:const unsigned char[]	file:
groups	generic/tclUniData.c	/^static const int groups[] = {$/;"	v	typeref:typename:const int[]	file:
grp	unix/tclUnixCompat.c	/^    struct group grp;$/;"	m	struct:__anon1c3f21740108	typeref:struct:group	file:
gunpipe	compat/zlib/examples/gun.c	/^local int gunpipe(z_stream *strm, int infile, int outfile)$/;"	f	typeref:typename:local int
gunzip	compat/zlib/examples/gun.c	/^local int gunzip(z_stream *strm, char *inname, char *outname, int test)$/;"	f	typeref:typename:local int
guts	generic/regguts.h	/^struct guts {$/;"	s
gzFile	compat/zlib/test/minigzip.c	/^} *gzFile;$/;"	t	typeref:struct:gzFile_s *	file:
gzFile	compat/zlib/zconf.h	/^#    define gzFile                z_gzFile$/;"	d
gzFile	compat/zlib/zconf.h.in	/^#    define gzFile                z_gzFile$/;"	d	file:
gzFile	compat/zlib/zlib.h	/^typedef struct gzFile_s *gzFile;    \/* semi-opaque gzip file descriptor *\/$/;"	t	typeref:struct:gzFile_s *
gzFile_s	compat/zlib/test/minigzip.c	/^typedef struct gzFile_s {$/;"	s	file:
gzFile_s	compat/zlib/zlib.h	/^struct gzFile_s {$/;"	s
gzHeaderPtr	generic/tclZlib.c	/^    GzipHeader *gzHeaderPtr;	\/* If we've allocated a gzip header$/;"	m	struct:__anon1d0b6d960208	typeref:typename:GzipHeader *	file:
gz_avail	compat/zlib/gzread.c	/^local int gz_avail(gz_statep state) {$/;"	f	typeref:typename:local int
gz_comp	compat/zlib/gzwrite.c	/^local int gz_comp(gz_statep state, int flush) {$/;"	f	typeref:typename:local int
gz_compress	compat/zlib/test/minigzip.c	/^static void gz_compress(FILE *in, gzFile out) {$/;"	f	typeref:typename:void	file:
gz_compress_mmap	compat/zlib/test/minigzip.c	/^static int gz_compress_mmap(FILE *in, gzFile out) {$/;"	f	typeref:typename:int	file:
gz_decomp	compat/zlib/gzread.c	/^local int gz_decomp(gz_statep state) {$/;"	f	typeref:typename:local int
gz_error	compat/zlib/gzlib.c	/^void ZLIB_INTERNAL gz_error(gz_statep state, int err, const char *msg) {$/;"	f	typeref:typename:void ZLIB_INTERNAL
gz_error	compat/zlib/zconf.h	/^#    define gz_error              z_gz_error$/;"	d
gz_error	compat/zlib/zconf.h.in	/^#    define gz_error              z_gz_error$/;"	d	file:
gz_fetch	compat/zlib/gzread.c	/^local int gz_fetch(gz_statep state) {$/;"	f	typeref:typename:local int
gz_header	compat/zlib/zconf.h	/^#  define gz_header             z_gz_header$/;"	d
gz_header	compat/zlib/zconf.h.in	/^#  define gz_header             z_gz_header$/;"	d	file:
gz_header	compat/zlib/zlib.h	/^} gz_header;$/;"	t	typeref:struct:gz_header_s
gz_header_s	compat/zlib/zconf.h	/^#  define gz_header_s           z_gz_header_s$/;"	d
gz_header_s	compat/zlib/zconf.h.in	/^#  define gz_header_s           z_gz_header_s$/;"	d	file:
gz_header_s	compat/zlib/zlib.h	/^typedef struct gz_header_s {$/;"	s
gz_headerp	compat/zlib/zconf.h	/^#  define gz_headerp            z_gz_headerp$/;"	d
gz_headerp	compat/zlib/zconf.h.in	/^#  define gz_headerp            z_gz_headerp$/;"	d	file:
gz_headerp	compat/zlib/zlib.h	/^typedef gz_header FAR *gz_headerp;$/;"	t	typeref:typename:gz_header FAR *
gz_init	compat/zlib/gzwrite.c	/^local int gz_init(gz_statep state) {$/;"	f	typeref:typename:local int
gz_intmax	compat/zlib/gzlib.c	/^unsigned ZLIB_INTERNAL gz_intmax(void) {$/;"	f	typeref:typename:unsigned ZLIB_INTERNAL
gz_intmax	compat/zlib/zconf.h	/^#    define gz_intmax             z_gz_intmax$/;"	d
gz_intmax	compat/zlib/zconf.h.in	/^#    define gz_intmax             z_gz_intmax$/;"	d	file:
gz_load	compat/zlib/gzread.c	/^local int gz_load(gz_statep state, unsigned char *buf, unsigned len,$/;"	f	typeref:typename:local int
gz_look	compat/zlib/gzread.c	/^local int gz_look(gz_statep state) {$/;"	f	typeref:typename:local int
gz_open	compat/zlib/gzlib.c	/^local gzFile gz_open(const void *path, int fd, const char *mode) {$/;"	f	typeref:typename:local gzFile
gz_open	compat/zlib/test/minigzip.c	/^static gzFile gz_open(const char *path, int fd, const char *mode) {$/;"	f	typeref:typename:gzFile	file:
gz_read	compat/zlib/gzread.c	/^local z_size_t gz_read(gz_statep state, voidp buf, z_size_t len) {$/;"	f	typeref:typename:local z_size_t
gz_reset	compat/zlib/gzlib.c	/^local void gz_reset(gz_statep state) {$/;"	f	typeref:typename:local void
gz_skip	compat/zlib/gzread.c	/^local int gz_skip(gz_statep state, z_off64_t len) {$/;"	f	typeref:typename:local int
gz_state	compat/zlib/gzguts.h	/^} gz_state;$/;"	t	typeref:struct:__anon361a15920108
gz_statep	compat/zlib/gzguts.h	/^typedef gz_state FAR *gz_statep;$/;"	t	typeref:typename:gz_state FAR *
gz_strwinerror	compat/zlib/gzlib.c	/^char ZLIB_INTERNAL *gz_strwinerror(DWORD error) {$/;"	f	typeref:typename:char ZLIB_INTERNAL *
gz_strwinerror	compat/zlib/zconf.h	/^#    define gz_strwinerror        z_gz_strwinerror$/;"	d
gz_strwinerror	compat/zlib/zconf.h.in	/^#    define gz_strwinerror        z_gz_strwinerror$/;"	d	file:
gz_uncompress	compat/zlib/test/minigzip.c	/^static void gz_uncompress(gzFile in, FILE *out) {$/;"	f	typeref:typename:void	file:
gz_write	compat/zlib/gzwrite.c	/^local z_size_t gz_write(gz_statep state, voidpc buf, z_size_t len) {$/;"	f	typeref:typename:local z_size_t
gz_zero	compat/zlib/gzwrite.c	/^local int gz_zero(gz_statep state, z_off64_t len) {$/;"	f	typeref:typename:local int
gzbuffer	compat/zlib/gzlib.c	/^int ZEXPORT gzbuffer(gzFile file, unsigned size) {$/;"	f	typeref:typename:int ZEXPORT
gzbuffer	compat/zlib/zconf.h	/^#    define gzbuffer              z_gzbuffer$/;"	d
gzbuffer	compat/zlib/zconf.h.in	/^#    define gzbuffer              z_gzbuffer$/;"	d	file:
gzclearerr	compat/zlib/gzlib.c	/^void ZEXPORT gzclearerr(gzFile file) {$/;"	f	typeref:typename:void ZEXPORT
gzclearerr	compat/zlib/zconf.h	/^#    define gzclearerr            z_gzclearerr$/;"	d
gzclearerr	compat/zlib/zconf.h.in	/^#    define gzclearerr            z_gzclearerr$/;"	d	file:
gzclose	compat/zlib/contrib/ada/zlib-thin.ads	/^   function gzclose (file : gzFile) return Int;$/;"	R
gzclose	compat/zlib/contrib/dotzlib/DotZLib/GZipStream.cs	/^        private static extern int gzclose(IntPtr gzFile);$/;"	m	class:DotZLib.GZipStream	file:
gzclose	compat/zlib/gzclose.c	/^int ZEXPORT gzclose(gzFile file) {$/;"	f	typeref:typename:int ZEXPORT
gzclose	compat/zlib/test/minigzip.c	/^static int gzclose(gzFile gz) {$/;"	f	typeref:typename:int	file:
gzclose	compat/zlib/zconf.h	/^#    define gzclose               z_gzclose$/;"	d
gzclose	compat/zlib/zconf.h.in	/^#    define gzclose               z_gzclose$/;"	d	file:
gzclose.lo	compat/zlib/Makefile.in	/^gzclose.lo gzlib.lo gzread.lo gzwrite.lo: $(SRCDIR)zlib.h zconf.h $(SRCDIR)gzguts.h$/;"	t
gzclose.lo	compat/zlib/Makefile.in	/^gzclose.lo: $(SRCDIR)gzclose.c$/;"	t
gzclose.o	compat/zlib/Makefile.in	/^gzclose.o gzlib.o gzread.o gzwrite.o: $(SRCDIR)zlib.h zconf.h $(SRCDIR)gzguts.h$/;"	t
gzclose.o	compat/zlib/Makefile.in	/^gzclose.o: $(SRCDIR)gzclose.c$/;"	t
gzclose.obj	compat/zlib/contrib/delphi/zlibd32.mak	/^gzclose.obj: gzclose.c zlib.h zconf.h gzguts.h$/;"	t
gzclose.obj	compat/zlib/contrib/pascal/zlibd32.mak	/^gzclose.obj: gzclose.c zlib.h zconf.h gzguts.h$/;"	t
gzclose_r	compat/zlib/gzread.c	/^int ZEXPORT gzclose_r(gzFile file) {$/;"	f	typeref:typename:int ZEXPORT
gzclose_r	compat/zlib/zconf.h	/^#    define gzclose_r             z_gzclose_r$/;"	d
gzclose_r	compat/zlib/zconf.h.in	/^#    define gzclose_r             z_gzclose_r$/;"	d	file:
gzclose_w	compat/zlib/gzwrite.c	/^int ZEXPORT gzclose_w(gzFile file) {$/;"	f	typeref:typename:int ZEXPORT
gzclose_w	compat/zlib/zconf.h	/^#    define gzclose_w             z_gzclose_w$/;"	d
gzclose_w	compat/zlib/zconf.h.in	/^#    define gzclose_w             z_gzclose_w$/;"	d	file:
gzcopy	compat/zlib/examples/gzjoin.c	/^local void gzcopy(char *name, int clr, unsigned long *crc, unsigned long *tot,$/;"	f	typeref:typename:local void
gzdirect	compat/zlib/gzread.c	/^int ZEXPORT gzdirect(gzFile file) {$/;"	f	typeref:typename:int ZEXPORT
gzdirect	compat/zlib/zconf.h	/^#    define gzdirect              z_gzdirect$/;"	d
gzdirect	compat/zlib/zconf.h.in	/^#    define gzdirect              z_gzdirect$/;"	d	file:
gzdopen	compat/zlib/contrib/ada/zlib-thin.ads	/^   function gzdopen (fd : Int; mode : Chars_Ptr) return gzFile;$/;"	R
gzdopen	compat/zlib/gzlib.c	/^gzFile ZEXPORT gzdopen(int fd, const char *mode) {$/;"	f	typeref:typename:gzFile ZEXPORT
gzdopen	compat/zlib/test/minigzip.c	/^static gzFile gzdopen(int fd, const char *mode) {$/;"	f	typeref:typename:gzFile	file:
gzdopen	compat/zlib/zconf.h	/^#    define gzdopen               z_gzdopen$/;"	d
gzdopen	compat/zlib/zconf.h.in	/^#    define gzdopen               z_gzdopen$/;"	d	file:
gzeof	compat/zlib/contrib/ada/zlib-thin.ads	/^   function gzeof (file : gzFile) return Int;$/;"	R
gzeof	compat/zlib/gzlib.c	/^int ZEXPORT gzeof(gzFile file) {$/;"	f	typeref:typename:int ZEXPORT
gzeof	compat/zlib/zconf.h	/^#    define gzeof                 z_gzeof$/;"	d
gzeof	compat/zlib/zconf.h.in	/^#    define gzeof                 z_gzeof$/;"	d	file:
gzerror	compat/zlib/contrib/ada/zlib-thin.ads	/^   function gzerror (file : gzFile; errnum : Int_Access) return Chars_Ptr;$/;"	R
gzerror	compat/zlib/gzlib.c	/^const char * ZEXPORT gzerror(gzFile file, int *errnum) {$/;"	f	typeref:typename:const char * ZEXPORT
gzerror	compat/zlib/test/minigzip.c	/^static const char *gzerror(gzFile gz, int *err) {$/;"	f	typeref:typename:const char *	file:
gzerror	compat/zlib/zconf.h	/^#    define gzerror               z_gzerror$/;"	d
gzerror	compat/zlib/zconf.h.in	/^#    define gzerror               z_gzerror$/;"	d	file:
gzfilebuf	compat/zlib/contrib/iostream/zfstream.cpp	/^gzfilebuf::gzfilebuf() :$/;"	f	class:gzfilebuf
gzfilebuf	compat/zlib/contrib/iostream/zfstream.h	/^class gzfilebuf : public streambuf {$/;"	c
gzfilebuf	compat/zlib/contrib/iostream3/zfstream.cc	/^gzfilebuf::gzfilebuf()$/;"	f	class:gzfilebuf
gzfilebuf	compat/zlib/contrib/iostream3/zfstream.h	/^class gzfilebuf : public std::streambuf$/;"	c
gzfilestream_common	compat/zlib/contrib/iostream/zfstream.cpp	/^gzfilestream_common::gzfilestream_common() :$/;"	f	class:gzfilestream_common
gzfilestream_common	compat/zlib/contrib/iostream/zfstream.h	/^class gzfilestream_common : virtual public ios {$/;"	c
gzflush	compat/zlib/contrib/ada/zlib-thin.ads	/^   function gzflush (file : gzFile; flush : Int) return Int;$/;"	R
gzflush	compat/zlib/gzwrite.c	/^int ZEXPORT gzflush(gzFile file, int flush) {$/;"	f	typeref:typename:int ZEXPORT
gzflush	compat/zlib/zconf.h	/^#    define gzflush               z_gzflush$/;"	d
gzflush	compat/zlib/zconf.h.in	/^#    define gzflush               z_gzflush$/;"	d	file:
gzfread	compat/zlib/gzread.c	/^z_size_t ZEXPORT gzfread(voidp buf, z_size_t size, z_size_t nitems, gzFile file) {$/;"	f	typeref:typename:z_size_t ZEXPORT
gzfread	compat/zlib/zconf.h	/^#    define gzfread               z_gzfread$/;"	d
gzfread	compat/zlib/zconf.h.in	/^#    define gzfread               z_gzfread$/;"	d	file:
gzfwrite	compat/zlib/gzwrite.c	/^z_size_t ZEXPORT gzfwrite(voidpc buf, z_size_t size, z_size_t nitems,$/;"	f	typeref:typename:z_size_t ZEXPORT
gzfwrite	compat/zlib/zconf.h	/^#    define gzfwrite              z_gzfwrite$/;"	d
gzfwrite	compat/zlib/zconf.h.in	/^#    define gzfwrite              z_gzfwrite$/;"	d	file:
gzgetc	compat/zlib/contrib/ada/zlib-thin.ads	/^   function gzgetc (file : gzFile) return Int;$/;"	R
gzgetc	compat/zlib/contrib/dotzlib/DotZLib/GZipStream.cs	/^        private static extern int gzgetc(IntPtr gzFile);$/;"	m	class:DotZLib.GZipStream	file:
gzgetc	compat/zlib/gzread.c	/^int ZEXPORT gzgetc(gzFile file) {$/;"	f	typeref:typename:int ZEXPORT
gzgetc	compat/zlib/zconf.h	/^#    define gzgetc                z_gzgetc$/;"	d
gzgetc	compat/zlib/zconf.h.in	/^#    define gzgetc                z_gzgetc$/;"	d	file:
gzgetc	compat/zlib/zlib.h	/^#  define gzgetc(/;"	d
gzgetc_	compat/zlib/gzread.c	/^int ZEXPORT gzgetc_(gzFile file) {$/;"	f	typeref:typename:int ZEXPORT
gzgetc_	compat/zlib/zconf.h	/^#    define gzgetc_               z_gzgetc_$/;"	d
gzgetc_	compat/zlib/zconf.h.in	/^#    define gzgetc_               z_gzgetc_$/;"	d	file:
gzgets	compat/zlib/contrib/ada/zlib-thin.ads	/^   function gzgets$/;"	R
gzgets	compat/zlib/gzread.c	/^char * ZEXPORT gzgets(gzFile file, char *buf, int len) {$/;"	f	typeref:typename:char * ZEXPORT
gzgets	compat/zlib/zconf.h	/^#    define gzgets                z_gzgets$/;"	d
gzgets	compat/zlib/zconf.h.in	/^#    define gzgets                z_gzgets$/;"	d	file:
gzhead	compat/zlib/deflate.h	/^    gz_headerp  gzhead;  \/* gzip header information to write *\/$/;"	m	struct:internal_state	typeref:typename:gz_headerp
gzhead	compat/zlib/examples/gzjoin.c	/^local void gzhead(bin *in)$/;"	f	typeref:typename:local void
gzheader	compat/zlib/examples/gzappend.c	/^local void gzheader(file *in)$/;"	f	typeref:typename:local void
gzifstream	compat/zlib/contrib/iostream/zfstream.cpp	/^gzifstream::gzifstream( const char *name, int io_mode ) :$/;"	f	class:gzifstream
gzifstream	compat/zlib/contrib/iostream/zfstream.cpp	/^gzifstream::gzifstream( int fd, int io_mode ) :$/;"	f	class:gzifstream
gzifstream	compat/zlib/contrib/iostream/zfstream.cpp	/^gzifstream::gzifstream() :$/;"	f	class:gzifstream
gzifstream	compat/zlib/contrib/iostream/zfstream.h	/^class gzifstream : public gzfilestream_common, public istream {$/;"	c
gzifstream	compat/zlib/contrib/iostream3/zfstream.cc	/^gzifstream::gzifstream()$/;"	f	class:gzifstream
gzifstream	compat/zlib/contrib/iostream3/zfstream.cc	/^gzifstream::gzifstream(const char* name,$/;"	f	class:gzifstream
gzifstream	compat/zlib/contrib/iostream3/zfstream.cc	/^gzifstream::gzifstream(int fd,$/;"	f	class:gzifstream
gzifstream	compat/zlib/contrib/iostream3/zfstream.h	/^class gzifstream : public std::istream$/;"	c
gzindex	compat/zlib/deflate.h	/^    ulg   gzindex;       \/* where in extra, name, or comment *\/$/;"	m	struct:internal_state	typeref:typename:ulg
gzinit	compat/zlib/examples/gzjoin.c	/^local void gzinit(unsigned long *crc, unsigned long *tot, FILE *out)$/;"	f	typeref:typename:local void
gzipHeaderObj	generic/tclZlib.c	/^#define gzipHeaderObj	/;"	d	file:
gzip_normalize	compat/zlib/examples/gznorm.c	/^local int gzip_normalize(FILE *in, FILE *out, char **err) {$/;"	f	typeref:typename:local int
gzlib.lo	compat/zlib/Makefile.in	/^gzclose.lo gzlib.lo gzread.lo gzwrite.lo: $(SRCDIR)zlib.h zconf.h $(SRCDIR)gzguts.h$/;"	t
gzlib.lo	compat/zlib/Makefile.in	/^gzlib.lo: $(SRCDIR)gzlib.c$/;"	t
gzlib.o	compat/zlib/Makefile.in	/^gzclose.o gzlib.o gzread.o gzwrite.o: $(SRCDIR)zlib.h zconf.h $(SRCDIR)gzguts.h$/;"	t
gzlib.o	compat/zlib/Makefile.in	/^gzlib.o: $(SRCDIR)gzlib.c$/;"	t
gzlib.obj	compat/zlib/contrib/delphi/zlibd32.mak	/^gzlib.obj: gzlib.c zlib.h zconf.h gzguts.h$/;"	t
gzlib.obj	compat/zlib/contrib/pascal/zlibd32.mak	/^gzlib.obj: gzlib.c zlib.h zconf.h gzguts.h$/;"	t
gzlog	compat/zlib/examples/gzlog.h	/^typedef void gzlog;$/;"	t	typeref:typename:void
gzlog_bail	compat/zlib/examples/gzlog.c	/^    int gzlog_bail = 0;         \/* which point to bail at (1..8) *\/$/;"	v	typeref:typename:int
gzlog_close	compat/zlib/examples/gzlog.c	/^int gzlog_close(gzlog *logd)$/;"	f	typeref:typename:int
gzlog_compress	compat/zlib/examples/gzlog.c	/^int gzlog_compress(gzlog *logd)$/;"	f	typeref:typename:int
gzlog_count	compat/zlib/examples/gzlog.c	/^    int gzlog_count = -1;       \/* number of times through to wait *\/$/;"	v	typeref:typename:int
gzlog_jump	compat/zlib/examples/gzlog.c	/^    jmp_buf gzlog_jump;         \/* where to go back to *\/$/;"	v	typeref:typename:jmp_buf
gzlog_open	compat/zlib/examples/gzlog.c	/^gzlog *gzlog_open(char *path)$/;"	f	typeref:typename:gzlog *
gzlog_write	compat/zlib/examples/gzlog.c	/^int gzlog_write(gzlog *logd, void *data, size_t len)$/;"	f	typeref:typename:int
gzoffset	compat/zlib/gzlib.c	/^z_off_t ZEXPORT gzoffset(gzFile file) {$/;"	f	typeref:typename:z_off_t ZEXPORT
gzoffset	compat/zlib/zconf.h	/^#    define gzoffset              z_gzoffset$/;"	d
gzoffset	compat/zlib/zconf.h.in	/^#    define gzoffset              z_gzoffset$/;"	d	file:
gzoffset	compat/zlib/zlib.h	/^#    define gzoffset gzoffset6/;"	d
gzoffset64	compat/zlib/gzlib.c	/^z_off64_t ZEXPORT gzoffset64(gzFile file) {$/;"	f	typeref:typename:z_off64_t ZEXPORT
gzoffset64	compat/zlib/zconf.h	/^#    define gzoffset64            z_gzoffset64$/;"	d
gzoffset64	compat/zlib/zconf.h.in	/^#    define gzoffset64            z_gzoffset64$/;"	d	file:
gzofstream	compat/zlib/contrib/iostream/zfstream.cpp	/^gzofstream::gzofstream( const char *name, int io_mode ) :$/;"	f	class:gzofstream
gzofstream	compat/zlib/contrib/iostream/zfstream.cpp	/^gzofstream::gzofstream( int fd, int io_mode ) :$/;"	f	class:gzofstream
gzofstream	compat/zlib/contrib/iostream/zfstream.cpp	/^gzofstream::gzofstream() :$/;"	f	class:gzofstream
gzofstream	compat/zlib/contrib/iostream/zfstream.h	/^class gzofstream : public gzfilestream_common, public ostream {$/;"	c
gzofstream	compat/zlib/contrib/iostream3/zfstream.cc	/^gzofstream::gzofstream()$/;"	f	class:gzofstream
gzofstream	compat/zlib/contrib/iostream3/zfstream.cc	/^gzofstream::gzofstream(const char* name,$/;"	f	class:gzofstream
gzofstream	compat/zlib/contrib/iostream3/zfstream.cc	/^gzofstream::gzofstream(int fd,$/;"	f	class:gzofstream
gzofstream	compat/zlib/contrib/iostream3/zfstream.h	/^class gzofstream : public std::ostream$/;"	c
gzomanip	compat/zlib/contrib/iostream/zfstream.h	/^  gzomanip(gzofstream &(*f)(gzofstream &, T), T v) : func(f), val(v) { }$/;"	f	class:gzomanip
gzomanip	compat/zlib/contrib/iostream/zfstream.h	/^template<class T> class gzomanip {$/;"	c
gzomanip2	compat/zlib/contrib/iostream3/zfstream.h	/^  class gzomanip2$/;"	c
gzomanip2	compat/zlib/contrib/iostream3/zfstream.h	/^  gzomanip2<T1,T2>::gzomanip2(gzofstream &(*f)(gzofstream &, T1, T2),$/;"	f	class:gzomanip2
gzopen	compat/zlib/contrib/ada/zlib-thin.ads	/^   function gzopen (path : Chars_Ptr; mode : Chars_Ptr) return gzFile;$/;"	R
gzopen	compat/zlib/contrib/dotzlib/DotZLib/GZipStream.cs	/^        private static extern IntPtr gzopen(string name, string mode);$/;"	m	class:DotZLib.GZipStream	file:
gzopen	compat/zlib/gzlib.c	/^gzFile ZEXPORT gzopen(const char *path, const char *mode) {$/;"	f	typeref:typename:gzFile ZEXPORT
gzopen	compat/zlib/test/minigzip.c	/^static gzFile gzopen(const char *path, const char *mode) {$/;"	f	typeref:typename:gzFile	file:
gzopen	compat/zlib/zconf.h	/^#    define gzopen                z_gzopen$/;"	d
gzopen	compat/zlib/zconf.h.in	/^#    define gzopen                z_gzopen$/;"	d	file:
gzopen	compat/zlib/zlib.h	/^#    define gzopen gzopen6/;"	d
gzopen64	compat/zlib/gzlib.c	/^gzFile ZEXPORT gzopen64(const char *path, const char *mode) {$/;"	f	typeref:typename:gzFile ZEXPORT
gzopen64	compat/zlib/zconf.h	/^#    define gzopen64              z_gzopen64$/;"	d
gzopen64	compat/zlib/zconf.h.in	/^#    define gzopen64              z_gzopen64$/;"	d	file:
gzopen_w	compat/zlib/gzlib.c	/^gzFile ZEXPORT gzopen_w(const wchar_t *path, const char *mode) {$/;"	f	typeref:typename:gzFile ZEXPORT
gzopen_w	compat/zlib/zconf.h	/^#      define gzopen_w              z_gzopen_w$/;"	d
gzopen_w	compat/zlib/zconf.h.in	/^#      define gzopen_w              z_gzopen_w$/;"	d	file:
gzprintf	compat/zlib/contrib/ada/zlib-thin.ads	/^   function gzprintf (file : in gzFile; format : in Chars_Ptr) return Int;$/;"	R
gzprintf	compat/zlib/gzwrite.c	/^int ZEXPORTVA gzprintf(gzFile file, const char *format, ...) {$/;"	f	typeref:typename:int ZEXPORTVA
gzprintf	compat/zlib/gzwrite.c	/^int ZEXPORTVA gzprintf(gzFile file, const char *format, int a1, int a2, int a3,$/;"	f	typeref:typename:int ZEXPORTVA
gzprintf	compat/zlib/zconf.h	/^#    define gzprintf              z_gzprintf$/;"	d
gzprintf	compat/zlib/zconf.h.in	/^#    define gzprintf              z_gzprintf$/;"	d	file:
gzputc	compat/zlib/contrib/ada/zlib-thin.ads	/^   function gzputc (file : gzFile; char : Int) return Int;$/;"	R
gzputc	compat/zlib/contrib/dotzlib/DotZLib/GZipStream.cs	/^        private static extern int gzputc(IntPtr gzFile, int c);$/;"	m	class:DotZLib.GZipStream	file:
gzputc	compat/zlib/gzwrite.c	/^int ZEXPORT gzputc(gzFile file, int c) {$/;"	f	typeref:typename:int ZEXPORT
gzputc	compat/zlib/zconf.h	/^#    define gzputc                z_gzputc$/;"	d
gzputc	compat/zlib/zconf.h.in	/^#    define gzputc                z_gzputc$/;"	d	file:
gzputs	compat/zlib/contrib/ada/zlib-thin.ads	/^   function gzputs (file : in gzFile; s : in Chars_Ptr) return Int;$/;"	R
gzputs	compat/zlib/gzwrite.c	/^int ZEXPORT gzputs(gzFile file, const char *s) {$/;"	f	typeref:typename:int ZEXPORT
gzputs	compat/zlib/zconf.h	/^#    define gzputs                z_gzputs$/;"	d
gzputs	compat/zlib/zconf.h.in	/^#    define gzputs                z_gzputs$/;"	d	file:
gzread	compat/zlib/contrib/ada/zlib-thin.ads	/^   function gzread$/;"	R
gzread	compat/zlib/contrib/dotzlib/DotZLib/GZipStream.cs	/^        private static extern int gzread(IntPtr gzFile, int data, int length);$/;"	m	class:DotZLib.GZipStream	file:
gzread	compat/zlib/gzread.c	/^int ZEXPORT gzread(gzFile file, voidp buf, unsigned len) {$/;"	f	typeref:typename:int ZEXPORT
gzread	compat/zlib/test/minigzip.c	/^static int gzread(gzFile gz, void *buf, unsigned len) {$/;"	f	typeref:typename:int	file:
gzread	compat/zlib/zconf.h	/^#    define gzread                z_gzread$/;"	d
gzread	compat/zlib/zconf.h.in	/^#    define gzread                z_gzread$/;"	d	file:
gzread.lo	compat/zlib/Makefile.in	/^gzclose.lo gzlib.lo gzread.lo gzwrite.lo: $(SRCDIR)zlib.h zconf.h $(SRCDIR)gzguts.h$/;"	t
gzread.lo	compat/zlib/Makefile.in	/^gzread.lo: $(SRCDIR)gzread.c$/;"	t
gzread.o	compat/zlib/Makefile.in	/^gzclose.o gzlib.o gzread.o gzwrite.o: $(SRCDIR)zlib.h zconf.h $(SRCDIR)gzguts.h$/;"	t
gzread.o	compat/zlib/Makefile.in	/^gzread.o: $(SRCDIR)gzread.c$/;"	t
gzread.obj	compat/zlib/contrib/delphi/zlibd32.mak	/^gzread.obj: gzread.c zlib.h zconf.h gzguts.h$/;"	t
gzread.obj	compat/zlib/contrib/pascal/zlibd32.mak	/^gzread.obj: gzread.c zlib.h zconf.h gzguts.h$/;"	t
gzrewind	compat/zlib/contrib/ada/zlib-thin.ads	/^   function gzrewind (file : gzFile) return Int;$/;"	R
gzrewind	compat/zlib/gzlib.c	/^int ZEXPORT gzrewind(gzFile file) {$/;"	f	typeref:typename:int ZEXPORT
gzrewind	compat/zlib/zconf.h	/^#    define gzrewind              z_gzrewind$/;"	d
gzrewind	compat/zlib/zconf.h.in	/^#    define gzrewind              z_gzrewind$/;"	d	file:
gzscan	compat/zlib/examples/gzappend.c	/^local int gzscan(char *name, z_stream *strm, int level)$/;"	f	typeref:typename:local int
gzseek	compat/zlib/contrib/ada/zlib-thin.ads	/^   function gzseek$/;"	R
gzseek	compat/zlib/gzlib.c	/^z_off_t ZEXPORT gzseek(gzFile file, z_off_t offset, int whence) {$/;"	f	typeref:typename:z_off_t ZEXPORT
gzseek	compat/zlib/zconf.h	/^#    define gzseek                z_gzseek$/;"	d
gzseek	compat/zlib/zconf.h.in	/^#    define gzseek                z_gzseek$/;"	d	file:
gzseek	compat/zlib/zlib.h	/^#    define gzseek gzseek6/;"	d
gzseek64	compat/zlib/gzlib.c	/^z_off64_t ZEXPORT gzseek64(gzFile file, z_off64_t offset, int whence) {$/;"	f	typeref:typename:z_off64_t ZEXPORT
gzseek64	compat/zlib/zconf.h	/^#    define gzseek64              z_gzseek64$/;"	d
gzseek64	compat/zlib/zconf.h.in	/^#    define gzseek64              z_gzseek64$/;"	d	file:
gzsetparams	compat/zlib/contrib/ada/zlib-thin.ads	/^   function gzsetparams$/;"	R
gzsetparams	compat/zlib/gzwrite.c	/^int ZEXPORT gzsetparams(gzFile file, int level, int strategy) {$/;"	f	typeref:typename:int ZEXPORT
gzsetparams	compat/zlib/zconf.h	/^#    define gzsetparams           z_gzsetparams$/;"	d
gzsetparams	compat/zlib/zconf.h.in	/^#    define gzsetparams           z_gzsetparams$/;"	d	file:
gztack	compat/zlib/examples/gzappend.c	/^local void gztack(char *name, int gd, z_stream *strm, int last)$/;"	f	typeref:typename:local void
gztell	compat/zlib/contrib/ada/zlib-thin.ads	/^   function gztell (file : gzFile) return Int;$/;"	R
gztell	compat/zlib/gzlib.c	/^z_off_t ZEXPORT gztell(gzFile file) {$/;"	f	typeref:typename:z_off_t ZEXPORT
gztell	compat/zlib/zconf.h	/^#    define gztell                z_gztell$/;"	d
gztell	compat/zlib/zconf.h.in	/^#    define gztell                z_gztell$/;"	d	file:
gztell	compat/zlib/zlib.h	/^#    define gztell gztell6/;"	d
gztell64	compat/zlib/gzlib.c	/^z_off64_t ZEXPORT gztell64(gzFile file) {$/;"	f	typeref:typename:z_off64_t ZEXPORT
gztell64	compat/zlib/zconf.h	/^#    define gztell64              z_gztell64$/;"	d
gztell64	compat/zlib/zconf.h.in	/^#    define gztell64              z_gztell64$/;"	d	file:
gzungetc	compat/zlib/contrib/ada/zlib-thin.ads	/^   function gzungetc (C : in Int; File : in  gzFile) return Int;$/;"	R
gzungetc	compat/zlib/gzread.c	/^int ZEXPORT gzungetc(int c, gzFile file) {$/;"	f	typeref:typename:int ZEXPORT
gzungetc	compat/zlib/zconf.h	/^#    define gzungetc              z_gzungetc$/;"	d
gzungetc	compat/zlib/zconf.h.in	/^#    define gzungetc              z_gzungetc$/;"	d	file:
gzvprintf	compat/zlib/gzwrite.c	/^int ZEXPORTVA gzvprintf(gzFile file, const char *format, va_list va) {$/;"	f	typeref:typename:int ZEXPORTVA
gzvprintf	compat/zlib/zconf.h	/^#    define gzvprintf             z_gzvprintf$/;"	d
gzvprintf	compat/zlib/zconf.h.in	/^#    define gzvprintf             z_gzvprintf$/;"	d	file:
gzwrite	compat/zlib/contrib/ada/zlib-thin.ads	/^   function gzwrite$/;"	R
gzwrite	compat/zlib/contrib/dotzlib/DotZLib/GZipStream.cs	/^        private static extern int gzwrite(IntPtr gzFile, int data, int length);$/;"	m	class:DotZLib.GZipStream	file:
gzwrite	compat/zlib/gzwrite.c	/^int ZEXPORT gzwrite(gzFile file, voidpc buf, unsigned len) {$/;"	f	typeref:typename:int ZEXPORT
gzwrite	compat/zlib/test/minigzip.c	/^static int gzwrite(gzFile gz, const void *buf, unsigned len) {$/;"	f	typeref:typename:int	file:
gzwrite	compat/zlib/zconf.h	/^#    define gzwrite               z_gzwrite$/;"	d
gzwrite	compat/zlib/zconf.h.in	/^#    define gzwrite               z_gzwrite$/;"	d	file:
gzwrite.lo	compat/zlib/Makefile.in	/^gzclose.lo gzlib.lo gzread.lo gzwrite.lo: $(SRCDIR)zlib.h zconf.h $(SRCDIR)gzguts.h$/;"	t
gzwrite.lo	compat/zlib/Makefile.in	/^gzwrite.lo: $(SRCDIR)gzwrite.c$/;"	t
gzwrite.o	compat/zlib/Makefile.in	/^gzclose.o gzlib.o gzread.o gzwrite.o: $(SRCDIR)zlib.h zconf.h $(SRCDIR)gzguts.h$/;"	t
gzwrite.o	compat/zlib/Makefile.in	/^gzwrite.o: $(SRCDIR)gzwrite.c$/;"	t
gzwrite.obj	compat/zlib/contrib/delphi/zlibd32.mak	/^gzwrite.obj: gzwrite.c zlib.h zconf.h gzguts.h$/;"	t
gzwrite.obj	compat/zlib/contrib/pascal/zlibd32.mak	/^gzwrite.obj: gzwrite.c zlib.h zconf.h gzguts.h$/;"	t
h2b	compat/zlib/test/infcover.c	/^local unsigned char *h2b(const char *hex, unsigned *len)$/;"	f	typeref:typename:local unsigned char *
hConv	win/tclWinDde.c	/^    HCONV hConv;		\/* The DDE handle for this conversation. *\/$/;"	m	struct:Conversation	typeref:typename:HCONV	file:
hCursor	unix/tclSelectNotfy.c	/^    void *hCursor;$/;"	m	struct:__anon69aa703c0408	typeref:typename:void *	file:
hIcon	unix/tclSelectNotfy.c	/^    void *hIcon;$/;"	m	struct:__anon69aa703c0408	typeref:typename:void *	file:
hInstance	unix/tclSelectNotfy.c	/^    void *hInstance;$/;"	m	struct:__anon69aa703c0408	typeref:typename:void *	file:
hInstance	win/tclWin32Dll.c	/^static HINSTANCE hInstance;	\/* HINSTANCE of this DLL. *\/$/;"	v	typeref:typename:HINSTANCE	file:
hProcess	win/tclWinPipe.c	/^    HANDLE hProcess;$/;"	m	struct:ProcInfo	typeref:typename:HANDLE	file:
hPtr	generic/tclEncoding.c	/^    Tcl_HashEntry *hPtr;	\/* Hash table entry that owns this encoding. *\/$/;"	m	struct:__anondb7a8e8c0108	typeref:typename:Tcl_HashEntry *	file:
hPtr	generic/tclEnsemble.c	/^    Tcl_HashEntry *hPtr;	\/* Direct link to entry in the subcommand hash$/;"	m	struct:__anonb2501df00108	typeref:typename:Tcl_HashEntry *	file:
hPtr	generic/tclInt.h	/^    Tcl_HashEntry *hPtr;	\/* Pointer to the hash table entry that refers$/;"	m	struct:Command	typeref:typename:Tcl_HashEntry *
handle	generic/tclIORTrans.c	/^    Tcl_Obj *handle;		\/* Reference to transform handle. Also stored$/;"	m	struct:__anon21e740770208	typeref:typename:Tcl_Obj *	file:
handle	generic/tclInt.h	/^    TclHandle handle;		\/* Handle used to keep track of when this$/;"	m	struct:Interp	typeref:typename:TclHandle
handle	win/tclWinChan.c	/^    HANDLE handle;		\/* Input\/output file. *\/$/;"	m	struct:FileInfo	typeref:typename:HANDLE	file:
handle	win/tclWinConsole.c	/^    HANDLE handle;		\/* Console handle *\/$/;"	m	struct:ConsoleChannelInfo	typeref:typename:HANDLE	file:
handle	win/tclWinPipe.c	/^    HANDLE handle;		\/* Open file handle. *\/$/;"	m	struct:__anon3385f2d20108	typeref:typename:HANDLE	file:
handle	win/tclWinSerial.c	/^    HANDLE handle;$/;"	m	struct:SerialInfo	typeref:typename:HANDLE	file:
handleLocaleFile	tools/loadICU.tcl	/^proc handleLocaleFile { localeName fileName msgFileName } {$/;"	p
handler	generic/tclTest.c	/^    Tcl_AsyncHandler handler;	\/* Tcl's token for the handler. *\/$/;"	m	struct:TestAsyncHandler	typeref:typename:Tcl_AsyncHandler	file:
handler	win/tclWinInt.h	/^    EXCEPTION_DISPOSITION (*handler)($/;"	m	struct:TCLEXCEPTION_REGISTRATION	typeref:typename:EXCEPTION_DISPOSITION (*)(struct _EXCEPTION_RECORD *,void *,struct _CONTEXT *,void *)
handlerProc	generic/tcl.h	/^    Tcl_DriverHandlerProc *handlerProc;$/;"	m	struct:Tcl_ChannelType	typeref:typename:Tcl_DriverHandlerProc *
handlerProc	generic/tclInterp.c	/^    Tcl_LimitHandlerProc *handlerProc;$/;"	m	struct:LimitHandler	typeref:typename:Tcl_LimitHandlerProc *	file:
handlerPtr	win/tclWinDde.c	/^    Tcl_Obj *handlerPtr;	\/* The server handler command *\/$/;"	m	struct:RegisteredInterp	typeref:typename:Tcl_Obj *	file:
hasUnicode	generic/tclStringRep.h	/^    int hasUnicode;		\/* Boolean determining whether the string has$/;"	m	struct:__anonf2feabe80108	typeref:typename:int
has_next	compat/zlib/contrib/minizip/tinydir.h	/^	int has_next;$/;"	m	struct:tinydir_dir	typeref:typename:int
hasconstraintout	generic/regc_nfa.c	/^hasconstraintout(struct state * s)$/;"	f	typeref:typename:int	file:
hash	generic/rege_dfa.c	/^hash($/;"	f	typeref:typename:unsigned	file:
hash	generic/regexec.c	/^    unsigned hash;		\/* hash of bitvector *\/$/;"	m	struct:sset	typeref:typename:unsigned	file:
hash	generic/tcl.h	/^    size_t hash;		\/* Hash value. *\/$/;"	m	struct:Tcl_HashEntry	typeref:typename:size_t
hashKeyProc	generic/tcl.h	/^    Tcl_HashKeyProc *hashKeyProc;$/;"	m	struct:Tcl_HashKeyType	typeref:typename:Tcl_HashKeyProc *
hashTable	generic/tclCompile.h	/^    Tcl_HashTable hashTable;	\/* Hash that maps strings to signed ints (PC$/;"	m	struct:JumptableInfo	typeref:typename:Tcl_HashTable
hash_bits	compat/zlib/deflate.h	/^    uInt  hash_bits;      \/* log2(hash_size) *\/$/;"	m	struct:internal_state	typeref:typename:uInt
hash_mask	compat/zlib/deflate.h	/^    uInt  hash_mask;      \/* hash_size-1 *\/$/;"	m	struct:internal_state	typeref:typename:uInt
hash_shift	compat/zlib/deflate.h	/^    uInt  hash_shift;$/;"	m	struct:internal_state	typeref:typename:uInt
hash_size	compat/zlib/deflate.h	/^    uInt  hash_size;      \/* number of elements in hash table *\/$/;"	m	struct:internal_state	typeref:typename:uInt
hasnonemptyout	generic/regc_nfa.c	/^hasnonemptyout($/;"	f	typeref:typename:int	file:
hath	generic/tclClock.c	/^static const int hath[2][12] = {$/;"	v	typeref:typename:const int[2][12]	file:
have	compat/zlib/contrib/infback9/inflate9.h	/^    unsigned have;              \/* number of code lengths in lens[] *\/$/;"	m	struct:inflate_state	typeref:typename:unsigned
have	compat/zlib/examples/zran.h	/^    int have;           \/\/ number of access points in list$/;"	m	struct:deflate_index	typeref:typename:int
have	compat/zlib/inflate.h	/^    unsigned have;              \/* number of code lengths in lens[] *\/$/;"	m	struct:inflate_state	typeref:typename:unsigned
have	compat/zlib/zlib.h	/^    unsigned have;$/;"	m	struct:gzFile_s	typeref:typename:unsigned
haveRealpath	unix/tclUnixFCmd.c	/^#   define haveRealpath	/;"	d	file:
havedict	compat/zlib/inflate.h	/^    int havedict;               \/* true if dictionary provided *\/$/;"	m	struct:inflate_state	typeref:typename:int
hbrBackground	unix/tclSelectNotfy.c	/^    void *hbrBackground;$/;"	m	struct:__anon69aa703c0408	typeref:typename:void *	file:
hbuf	unix/tclUnixCompat.c	/^    char hbuf[2048];$/;"	m	struct:__anon1c3f21740108	typeref:typename:char[2048]	file:
hcrc	compat/zlib/zlib.h	/^    int     hcrc;       \/* true if there was or will be a header crc *\/$/;"	m	struct:gz_header_s	typeref:typename:int
head	compat/zlib/deflate.h	/^    Posf *head; \/* Heads of the hash chains or NIL. *\/$/;"	m	struct:internal_state	typeref:typename:Posf *
head	compat/zlib/inflate.h	/^    gz_headerp head;            \/* where to save gzip header information *\/$/;"	m	struct:inflate_state	typeref:typename:gz_headerp
head_bb	generic/tclAssembly.c	/^    BasicBlock* head_bb;	\/* First basic block in the code *\/$/;"	m	struct:AssemblyEnv	typeref:typename:BasicBlock *	file:
header	compat/zlib/contrib/untgz/untgz.c	/^  struct tar_header  header;$/;"	m	union:tar_buffer	typeref:struct:tar_header	file:
header	generic/tclIORChan.c	/^    Tcl_Event header;$/;"	m	struct:__anon92d8dd290908	typeref:typename:Tcl_Event	file:
header	generic/tclTest.c	/^    Tcl_Event header;		\/* Header common to all events *\/$/;"	m	struct:__anon0e9396a50308	typeref:typename:Tcl_Event	file:
header	generic/tclZlib.c	/^    gz_header header;$/;"	m	struct:__anon1d0b6d960108	typeref:typename:gz_header	file:
header	macosx/tclMacOSXNotify.c	/^    Tcl_Event header;		\/* Information that is standard for all$/;"	m	struct:__anon0dc3d9d70108	typeref:typename:Tcl_Event	file:
header	unix/tclEpollNotfy.c	/^    Tcl_Event header;		\/* Information that is standard for all$/;"	m	struct:__anona96b9a380108	typeref:typename:Tcl_Event	file:
header	unix/tclKqueueNotfy.c	/^    Tcl_Event header;		\/* Information that is standard for all$/;"	m	struct:__anon43415cec0108	typeref:typename:Tcl_Event	file:
header	unix/tclSelectNotfy.c	/^    Tcl_Event header;		\/* Information that is standard for all$/;"	m	struct:__anon69aa703c0208	typeref:typename:Tcl_Event	file:
header	unix/tclXtNotify.c	/^    Tcl_Event header;		\/* Information that is standard for all$/;"	m	struct:__anon7b9136110208	typeref:typename:Tcl_Event	file:
header	win/tclWinChan.c	/^    Tcl_Event header;		\/* Information that is standard for all$/;"	m	struct:__anon1518b6be0208	typeref:typename:Tcl_Event	file:
header	win/tclWinConsole.c	/^    Tcl_Event header;		\/* Information that is standard for all events. *\/$/;"	m	struct:__anonf117b5370108	typeref:typename:Tcl_Event	file:
header	win/tclWinPipe.c	/^    Tcl_Event header;		\/* Information that is standard for all$/;"	m	struct:__anon3385f2d20308	typeref:typename:Tcl_Event	file:
header	win/tclWinSerial.c	/^    Tcl_Event header;		\/* Information that is standard for all$/;"	m	struct:__anonc2b952240208	typeref:typename:Tcl_Event	file:
header	win/tclWinSock.c	/^    Tcl_Event header;		\/* Information that is standard for all$/;"	m	struct:__anon3aeaf8540208	typeref:typename:Tcl_Event	file:
heap	compat/zlib/deflate.h	/^    int heap[2*L_CODES+1];      \/* heap used to build the Huffman trees *\/$/;"	m	struct:internal_state	typeref:typename:int[]
heap_len	compat/zlib/deflate.h	/^    int heap_len;               \/* number of elements in the heap *\/$/;"	m	struct:internal_state	typeref:typename:int
heap_max	compat/zlib/deflate.h	/^    int heap_max;               \/* element of largest frequency *\/$/;"	m	struct:internal_state	typeref:typename:int
hello	compat/zlib/test/example.c	/^static z_const char hello[] = "hello, hello!";$/;"	v	typeref:typename:z_const char[]	file:
help	compat/zlib/contrib/untgz/untgz.c	/^void help(int exitval)$/;"	f	typeref:typename:void
help	win/buildall.vc.bat	/^:help$/;"	l
help	win/vctool.bat	/^:help$/;"	l
helpStr	generic/tcl.h	/^    const char *helpStr;	\/* Documentation message describing this$/;"	m	struct:__anon937aefea0b08	typeref:typename:const char *
helpersNs	generic/tclOOInt.h	/^    Tcl_Namespace *helpersNs;	\/* Namespace containing the commands that are$/;"	m	struct:Foundation	typeref:typename:Tcl_Namespace *
hent	unix/tclUnixCompat.c	/^    struct hostent hent;$/;"	m	struct:__anon1c3f21740108	typeref:struct:hostent	file:
hf	compat/zlib/contrib/minizip/iowin32.c	/^    HANDLE hf;$/;"	m	struct:__anonbfe475c30108	typeref:typename:HANDLE	file:
hiddenCmdTablePtr	generic/tclInt.h	/^    Tcl_HashTable *hiddenCmdTablePtr;$/;"	m	struct:Interp	typeref:typename:Tcl_HashTable *
hiddenOption	generic/tclInterp.c	/^	enum hiddenOption {$/;"	g	function:NRChildCmd	file:
hiddenOption	generic/tclInterp.c	/^	enum hiddenOption {$/;"	g	function:NRInterpCmd	file:
high_water	compat/zlib/deflate.h	/^    ulg high_water;$/;"	m	struct:internal_state	typeref:typename:ulg
highwater	compat/zlib/test/infcover.c	/^    size_t total, highwater;    \/* total allocations, and largest total *\/$/;"	m	struct:mem_zone	typeref:typename:size_t	file:
history	library/history.tcl	/^proc ::history {args} {$/;"	p
historyObj	generic/tclHistory.c	/^    Tcl_Obj *historyObj;	\/* == "::history" *\/$/;"	m	struct:__anon7c22d3770108	typeref:typename:Tcl_Obj *	file:
hold	compat/zlib/contrib/inflate86/inffas86.c	/^\/* 80   40 *\/ unsigned long hold;       \/* edx rdx  local strm->hold *\/$/;"	m	struct:inflate_fast::inffast_ar	typeref:typename:unsigned long	file:
hold	compat/zlib/inflate.h	/^    unsigned long hold;         \/* input bit accumulator *\/$/;"	m	struct:inflate_state	typeref:typename:unsigned long
hook	library/auto.tcl	/^proc auto_mkindex_parser::hook {cmd} {$/;"	p	namespace:auto_mkindex_parser
hooks	generic/tclDecls.h	/^    const TclStubHooks *hooks;$/;"	m	struct:TclStubs	typeref:typename:const TclStubHooks *
hooks	generic/tclIntDecls.h	/^    void *hooks;$/;"	m	struct:TclIntStubs	typeref:typename:void *
hooks	generic/tclIntPlatDecls.h	/^    void *hooks;$/;"	m	struct:TclIntPlatStubs	typeref:typename:void *
hooks	generic/tclOODecls.h	/^    const TclOOStubHooks *hooks;$/;"	m	struct:TclOOStubs	typeref:typename:const TclOOStubHooks *
hooks	generic/tclOOIntDecls.h	/^    void *hooks;$/;"	m	struct:TclOOIntStubs	typeref:typename:void *
hooks	generic/tclPlatDecls.h	/^    void *hooks;$/;"	m	struct:TclPlatStubs	typeref:typename:void *
hooks	generic/tclTomMathDecls.h	/^    void *hooks;$/;"	m	struct:TclTomMathStubs	typeref:typename:void *
hooks	tools/genStubs.tcl	/^proc genStubs::hooks {names} {$/;"	p	namespace:genStubs
hostName	unix/tclUnixSock.c	/^static ProcessGlobalValue hostName =$/;"	v	typeref:typename:ProcessGlobalValue	file:
hostName	win/tclWinSock.c	/^static ProcessGlobalValue hostName =$/;"	v	typeref:typename:ProcessGlobalValue	file:
hour	generic/tclDate.h	/^    int hour;			\/* Hours of day (in-between time only calculation) *\/$/;"	m	struct:TclDateFields	typeref:typename:int
how	compat/zlib/gzguts.h	/^    int how;                \/* 0: get header, 1: copy, 2: decompress *\/$/;"	m	struct:__anon361a15920108	typeref:typename:int
howmany	unix/tclUnixPort.h	/^#   define howmany(/;"	d
html	unix/Makefile.in	/^html: ${NATIVE_TCLSH}$/;"	t
html	win/Makefile.in	/^html:$/;"	t
html-tcl	unix/Makefile.in	/^html-tcl: ${NATIVE_TCLSH}$/;"	t
html-tcl	win/Makefile.in	/^html-tcl: $(TCLSH)$/;"	t
html-tk	unix/Makefile.in	/^html-tk: ${NATIVE_TCLSH}$/;"	t
html-tk	win/Makefile.in	/^html-tk: $(TCLSH)$/;"	t
htmlhead	tools/tcltk-man2html-utils.tcl	/^proc htmlhead {title header args} {$/;"	p
htmlize-text	tools/tcltk-man2html-utils.tcl	/^proc htmlize-text {text {charmap {}}} {$/;"	p
http	library/http/http.tcl	/^namespace eval http {$/;"	n
httpTest	tests/httpTest.tcl	/^namespace eval httpTest {$/;"	n
huffman	compat/zlib/contrib/blast/blast.c	/^struct huffman {$/;"	s	file:
huffman	compat/zlib/contrib/puff/puff.c	/^struct huffman {$/;"	s	file:
hwnd	unix/tclSelectNotfy.c	/^    void *hwnd;			\/* Messaging window. *\/$/;"	m	struct:ThreadSpecificData	typeref:typename:void *	file:
hwnd	unix/tclSelectNotfy.c	/^    void *hwnd;			\/* Messaging window. *\/$/;"	m	struct:__anon69aa703c0308	typeref:typename:void *	file:
hwnd	win/tclWinDde.c	/^    HWND hwnd;$/;"	m	struct:__anone96dc6f10108	typeref:typename:HWND	file:
hwnd	win/tclWinNotify.c	/^    HWND hwnd;			\/* Messaging window. *\/$/;"	m	struct:__anon2be3cfbd0108	typeref:typename:HWND	file:
hwnd	win/tclWinSock.c	/^    HWND hwnd;			\/* Handle to window for socket messages. *\/$/;"	m	struct:__anon3aeaf8540308	typeref:typename:HWND	file:
i	generic/tclBasic.c	/^    } i;$/;"	m	struct:__anon6e1456070508	typeref:union:__anon6e1456070508::__anon6e145607060a	file:
i	generic/tclCompile.h	/^    } i;$/;"	m	struct:__anone79d5a530808	typeref:union:__anone79d5a530808::__anone79d5a53090a
i	generic/tclLink.c	/^	int i;$/;"	m	union:__anonfc2fcf730108::__anonfc2fcf73020a	typeref:typename:int	file:
iPtr	generic/tclBasic.c	/^#define iPtr /;"	d	file:
iPtr	generic/tclCompile.h	/^    Interp *iPtr;		\/* Interpreter containing the code being$/;"	m	struct:CompileEnv	typeref:typename:Interp *
iPtr	generic/tclExecute.c	/^#define iPtr /;"	d	file:
iPtr	generic/tclInt.h	/^    struct Interp *iPtr;	\/* Interpreter for which this command is$/;"	m	struct:Proc	typeref:struct:Interp *
iPtr	generic/tclLink.c	/^	int *iPtr;		\/* int array *\/$/;"	m	union:__anonfc2fcf730108::__anonfc2fcf73020a	typeref:typename:int *	file:
icuToTcl	library/icu.tcl	/^    proc icuToTcl {icuName} {$/;"	p	namespace:::::tcl::unsupported::icu
icu_fns	generic/tclIcu.c	/^} icu_fns = {$/;"	v	typeref:struct:__anon1eb0af660108
id	compat/zlib/examples/gzlog.c	/^    char id[4];     \/* contains LOGID to detect inadvertent overwrites *\/$/;"	m	struct:log	typeref:typename:char[4]	file:
id	generic/regguts.h	/^    short id;			\/* ID of subre (1..ntree-1) *\/$/;"	m	struct:subre	typeref:typename:short
id	generic/tclTest.c	/^    int id;			\/* Identifier for this handler. *\/$/;"	m	struct:TestAsyncHandler	typeref:typename:int	file:
id	generic/tclTest.c	/^    int id;			\/* Identifier for this reference. *\/$/;"	m	struct:TestCommandTokenRef	typeref:typename:int	file:
id	generic/tclThreadJoin.c	/^    Tcl_ThreadId  id;		\/* The id of the joinable thread. *\/$/;"	m	struct:JoinableThread	typeref:typename:Tcl_ThreadId	file:
id	generic/tclTimer.c	/^    int id;			\/* Integer identifier for command; used to$/;"	m	struct:AfterInfo	typeref:typename:int	file:
id	generic/tclVar.c	/^    int id;			\/* Integer id used to distinguish among$/;"	m	struct:ArraySearch	typeref:typename:int	file:
idCount	generic/tclZipfs.c	/^    int idCount;		\/* Counter for channel names *\/$/;"	m	struct:ZipFSGlobals	typeref:typename:int	file:
idIssuer	generic/tclInterp.c	/^    Tcl_Size idIssuer;		\/* Used to issue a sequence of names for$/;"	m	struct:__anon913711770308	typeref:typename:Tcl_Size	file:
identify	library/platform/platform.tcl	/^proc ::platform::identify {} {$/;"	p	namespace:::platform
identify	library/platform/shell.tcl	/^proc ::platform::shell::identify {shell} {$/;"	p	namespace:::platform::shell
identifyWords	tools/findDocWords.tcl	/^proc identifyWords {fragment filename} {$/;"	p
identity	generic/tclBasic.c	/^	int identity;$/;"	m	union:__anon6e1456070508::__anon6e145607060a	typeref:typename:int	file:
identity	generic/tclCompile.h	/^	int identity;$/;"	m	union:__anone79d5a530808::__anone79d5a53090a	typeref:typename:int
idleGeneration	generic/tclTimer.c	/^    int idleGeneration;		\/* Used to fill in the "generation" fields of$/;"	m	struct:__anone9e75be60108	typeref:typename:int	file:
idleList	generic/tclTimer.c	/^    IdleHandler *idleList;	\/* First in list of all idle handlers. *\/$/;"	m	struct:__anone9e75be60108	typeref:typename:IdleHandler *	file:
iexdate	generic/tclGetDate.y	/^iexdate	: tUNUMBER '-' tUNUMBER '-' tUNUMBER {$/;"	l
iextime	generic/tclGetDate.y	/^iextime : tUNUMBER ':' tUNUMBER ':' tUNUMBER {$/;"	l
ifPtr	generic/tclInt.h	/^    Tcl_ObjInterface *ifPtr;	\/* pointer to a functional interface *\/$/;"	m	struct:ObjectType	typeref:typename:Tcl_ObjInterface *
implementationMap	generic/tclDictObj.c	/^static const EnsembleImplMap implementationMap[] = {$/;"	v	typeref:typename:const EnsembleImplMap[]	file:
importRefPtr	generic/tclInt.h	/^    ImportRef *importRefPtr;	\/* List of each imported Command created in$/;"	m	struct:Command	typeref:typename:ImportRef *
importedCmdPtr	generic/tclInt.h	/^    struct Command *importedCmdPtr;$/;"	m	struct:ImportRef	typeref:struct:Command *
in	compat/zlib/contrib/blast/blast.c	/^    unsigned char *in;          \/* next input location *\/$/;"	m	struct:state	typeref:typename:unsigned char *	file:
in	compat/zlib/contrib/inflate86/inffas86.c	/^\/* 16    8 *\/ unsigned char FAR *in;    \/* esi rsi  local strm->next_in *\/$/;"	m	struct:inflate_fast::inffast_ar	typeref:typename:unsigned char FAR *	file:
in	compat/zlib/contrib/puff/puff.c	/^    const unsigned char *in;    \/* input buffer *\/$/;"	m	struct:state	typeref:typename:const unsigned char *	file:
in	compat/zlib/examples/gun.c	/^local unsigned in(void *in_desc, z_const unsigned char **buf)$/;"	f	typeref:typename:local unsigned
in	compat/zlib/examples/zran.h	/^    off_t in;           \/\/ offset in compressed file of first full byte$/;"	m	struct:point	typeref:typename:off_t
in	compat/zlib/gzguts.h	/^    unsigned char *in;      \/* input buffer (double-sized when writing) *\/$/;"	m	struct:__anon361a15920108	typeref:typename:unsigned char *
in6_addr	compat/fake-rfc2553.h	/^struct in6_addr {$/;"	s
inAllocated	generic/tclZlib.c	/^    size_t inAllocated, outAllocated;$/;"	m	struct:__anon1d0b6d960308	typeref:typename:size_t	file:
inBuffer	generic/tclZlib.c	/^    char *inBuffer, *outBuffer;	\/* Working buffers. *\/$/;"	m	struct:__anon1d0b6d960308	typeref:typename:char *	file:
inData	generic/tclZlib.c	/^    Tcl_Obj *inData, *outData;	\/* Input \/ output buffers (lists) *\/$/;"	m	struct:__anon1d0b6d960208	typeref:typename:Tcl_Obj *	file:
inEofChar	generic/tclIO.h	/^    int inEofChar;		\/* If nonzero, use this as a signal of EOF on$/;"	m	struct:ChannelState	typeref:typename:int
inExit	generic/tclEvent.c	/^    int inExit;			\/* True when this thread is exiting. This is$/;"	m	struct:ThreadSpecificData	typeref:typename:int	file:
inFile	unix/tclUnixPipe.c	/^    TclFile inFile;		\/* Output from pipe. *\/$/;"	m	struct:__anon004fe33e0108	typeref:typename:TclFile	file:
inHeader	generic/tclZlib.c	/^    GzipHeader inHeader;	\/* Header read from input stream, when$/;"	m	struct:__anon1d0b6d960308	typeref:typename:GzipHeader	file:
inOperProc	generic/tclDTrace.d	/^    void *inOperProc;$/;"	m	struct:Tcl_ObjType	file:
inQueueHead	generic/tclIO.h	/^    ChannelBuffer *inQueueHead;	\/* Points at first buffer in input queue. *\/$/;"	m	struct:Channel	typeref:typename:ChannelBuffer *
inQueueHead	generic/tclIO.h	/^    ChannelBuffer *inQueueHead;	\/* Points at first buffer in input queue. *\/$/;"	m	struct:ChannelState	typeref:typename:ChannelBuffer *
inQueueTail	generic/tclIO.h	/^    ChannelBuffer *inQueueTail;	\/* Points at last buffer in input queue. *\/$/;"	m	struct:Channel	typeref:typename:ChannelBuffer *
inQueueTail	generic/tclIO.h	/^    ChannelBuffer *inQueueTail;	\/* Points at last buffer in input queue. *\/$/;"	m	struct:ChannelState	typeref:typename:ChannelBuffer *
inStream	generic/tclZlib.c	/^    z_stream inStream;		\/* Structure used by zlib for decompression of$/;"	m	struct:__anon1d0b6d960308	typeref:typename:z_stream	file:
inTraversal	generic/tclNotify.c	/^    int inTraversal;		\/* 1 if Tcl_SetMaxBlockTime is being called$/;"	m	struct:ThreadSpecificData	typeref:typename:int	file:
inUse	generic/tclPreserve.c	/^static size_t inUse = 0;	\/* Count of structures currently in use in$/;"	v	typeref:typename:size_t	file:
in_func	compat/zlib/zconf.h	/^#  define in_func               z_in_func$/;"	d
in_func	compat/zlib/zconf.h.in	/^#  define in_func               z_in_func$/;"	d	file:
in_func	compat/zlib/zlib.h	/^typedef unsigned (*in_func)(void FAR *,$/;"	t	typeref:typename:unsigned (*)(void FAR *,z_const unsigned char FAR * FAR *)
in_opened_file_inzip	compat/zlib/contrib/minizip/zip.c	/^    int  in_opened_file_inzip;  \/* 1 if a file in the zip is currently writ.*\/$/;"	m	struct:__anon7add25cb0208	typeref:typename:int	file:
inbuf	compat/zlib/examples/gun.c	/^    unsigned char *inbuf;$/;"	m	struct:ind	typeref:typename:unsigned char *	file:
inbuf	compat/zlib/examples/gun.c	/^unsigned char inbuf[SIZE];              \/* input buffer *\/$/;"	v	typeref:typename:unsigned char[]
incarea	generic/regexec.c	/^    struct arcp *incarea;	\/* inchain storage *\/$/;"	m	struct:dfa	typeref:struct:arcp *	file:
incarea	generic/regexec.c	/^    struct arcp incarea[FEWSTATES*2 * FEWCOLORS];$/;"	m	struct:smalldfa	typeref:struct:arcp[]	file:
inchain	generic/regexec.c	/^    struct arcp *inchain;	\/* chain-pointer vector for outarcs *\/$/;"	m	struct:sset	typeref:struct:arcp *	file:
inchain	generic/regguts.h	/^    struct arc *inchain;	\/* *to's ins chain *\/$/;"	m	struct:arc	typeref:struct:arc *
inchainRev	generic/regguts.h	/^    struct arc *inchainRev;	\/* back-link in *to's ins chain *\/$/;"	m	struct:arc	typeref:struct:arc *
includedir	compat/zlib/Makefile.in	/^includedir = ${prefix}\/include$/;"	m
includedir	compat/zlib/contrib/minizip/minizip.pc.in	/^includedir=@includedir@\/minizip$/;"	v
includedir	compat/zlib/zlib.pc.in	/^includedir=@includedir@$/;"	v
includedir	libtommath/libtommath.pc.in	/^includedir=${prefix}\/@CMAKE_INSTALL_INCLUDEDIR@$/;"	v
includedir	unix/Makefile.in	/^includedir		= @includedir@$/;"	m
includedir	unix/tcl.pc.in	/^includedir=@includedir@$/;"	v
includedir	win/Makefile.in	/^includedir		= @includedir@$/;"	m
includedir_native	win/Makefile.in	/^includedir_native = $(shell $(CYGPATH) '$(includedir)')$/;"	m
incnt	compat/zlib/contrib/puff/puff.c	/^    unsigned long incnt;        \/* bytes read so far *\/$/;"	m	struct:state	typeref:typename:unsigned long	file:
incomplete	generic/tcl.h	/^    int incomplete;		\/* This field is set to 1 by Tcl_ParseCommand$/;"	m	struct:Tcl_Parse	typeref:typename:int
ind	compat/zlib/examples/gun.c	/^struct ind {$/;"	s	file:
index	generic/tclAlloc.c	/^	unsigned char index;	\/* bucket # *\/$/;"	m	struct:overhead::__anon3a4776f00108	typeref:typename:unsigned char	file:
index	generic/tclCmdAH.c	/^    Tcl_Size *index;		\/* Array of value list indices. *\/$/;"	m	struct:ForeachState	typeref:typename:Tcl_Size *	file:
index	generic/tclCmdIL.c	/^	size_t index;$/;"	m	union:SortElement::__anond5eb1cce020a	typeref:typename:size_t	file:
index	generic/tclIndexObj.c	/^    Tcl_Size index;		\/* Selected index into table. *\/$/;"	m	struct:__anon02ea70180108	typeref:typename:Tcl_Size	file:
index	generic/tclInt.h	/^	int (*index)(tclObjTypeInterfaceArgsListIndex);$/;"	m	struct:ObjInterface::list	typeref:typename:int (*)(tclObjTypeInterfaceArgsListIndex)
index	generic/tclInt.h	/^	int (*index)(tclObjTypeInterfaceArgsStringIndex);$/;"	m	struct:ObjInterface::string	typeref:typename:int (*)(tclObjTypeInterfaceArgsStringIndex)
index	generic/tclOOInt.h	/^    Tcl_Size index;		\/* Index into the call chain of the currently$/;"	m	struct:CallContext	typeref:typename:Tcl_Size
index	generic/tclTestObj.c	/^	Tcl_Size index;		\/* Selected index into table. *\/$/;"	m	struct:TestindexobjCmd::IndexRep	typeref:typename:Tcl_Size	file:
indexEnd	generic/tclInt.h	/^	int (*indexEnd)(tclObjTypeInterfaceArgsListIndexEnd);$/;"	m	struct:ObjInterface::list	typeref:typename:int (*)(tclObjTypeInterfaceArgsListIndexEnd)
indexEnd	generic/tclInt.h	/^	int (*indexEnd)(tclObjTypeInterfaceArgsStringIndexEnd);$/;"	m	struct:ObjInterface::string	typeref:typename:int (*)(tclObjTypeInterfaceArgsStringIndexEnd)
indexEntry	library/auto.tcl	/^proc auto_mkindex_parser::indexEntry {name} {$/;"	p	namespace:auto_mkindex_parser
indexHex	generic/tclTestObjInterface.c	/^typedef struct indexHex {$/;"	s	file:
indexHex	generic/tclTestObjInterface.c	/^} indexHex;$/;"	t	typeref:struct:indexHex	file:
indexHexListErrorIndeterminate	generic/tclTestObjInterface.c	/^static int indexHexListErrorIndeterminate (Tcl_Interp *interp) {$/;"	f	typeref:typename:int	file:
indexHexListErrorReadOnly	generic/tclTestObjInterface.c	/^static int indexHexListErrorReadOnly (Tcl_Interp *interp) {$/;"	f	typeref:typename:int	file:
indexHexListObjAppendElement	generic/tclTestObjInterface.c	/^indexHexListObjAppendElement($/;"	f	typeref:typename:int	file:
indexHexListObjAppendElement	generic/tclTestObjInterface.c	/^static Tcl_ObjInterfaceListAppendProc indexHexListObjAppendElement;$/;"	v	typeref:typename:Tcl_ObjInterfaceListAppendProc	file:
indexHexListObjAppendList	generic/tclTestObjInterface.c	/^indexHexListObjAppendList($/;"	f	typeref:typename:int	file:
indexHexListObjAppendList	generic/tclTestObjInterface.c	/^static Tcl_ObjInterfaceListAppendlistProc indexHexListObjAppendList;$/;"	v	typeref:typename:Tcl_ObjInterfaceListAppendlistProc	file:
indexHexListObjGetElements	generic/tclTestObjInterface.c	/^indexHexListObjGetElements($/;"	f	typeref:typename:int	file:
indexHexListObjGetElements	generic/tclTestObjInterface.c	/^static Tcl_ObjInterfaceListAllProc indexHexListObjGetElements;$/;"	v	typeref:typename:Tcl_ObjInterfaceListAllProc	file:
indexHexListObjIndex	generic/tclTestObjInterface.c	/^indexHexListObjIndex($/;"	f	typeref:typename:int	file:
indexHexListObjIndex	generic/tclTestObjInterface.c	/^static Tcl_ObjInterfaceListIndexProc indexHexListObjIndex;$/;"	v	typeref:typename:Tcl_ObjInterfaceListIndexProc	file:
indexHexListObjIndexEnd	generic/tclTestObjInterface.c	/^indexHexListObjIndexEnd($/;"	f	typeref:typename:int	file:
indexHexListObjIndexEnd	generic/tclTestObjInterface.c	/^static Tcl_ObjInterfaceListIndexEndProc indexHexListObjIndexEnd;$/;"	v	typeref:typename:Tcl_ObjInterfaceListIndexEndProc	file:
indexHexListObjIsSorted	generic/tclTestObjInterface.c	/^static Tcl_ObjInterfaceListIsSortedProc indexHexListObjIsSorted;$/;"	v	typeref:typename:Tcl_ObjInterfaceListIsSortedProc	file:
indexHexListObjIsSorted	generic/tclTestObjInterface.c	/^static int indexHexListObjIsSorted($/;"	f	typeref:typename:int	file:
indexHexListObjLength	generic/tclTestObjInterface.c	/^indexHexListObjLength($/;"	f	typeref:typename:int	file:
indexHexListObjLength	generic/tclTestObjInterface.c	/^static Tcl_ObjInterfaceListLengthProc indexHexListObjLength;$/;"	v	typeref:typename:Tcl_ObjInterfaceListLengthProc	file:
indexHexListObjRange	generic/tclTestObjInterface.c	/^indexHexListObjRange(tclObjTypeInterfaceArgsListRange)$/;"	f	typeref:typename:int	file:
indexHexListObjRange	generic/tclTestObjInterface.c	/^static Tcl_ObjInterfaceListRangeProc indexHexListObjRange;$/;"	v	typeref:typename:Tcl_ObjInterfaceListRangeProc	file:
indexHexListObjRangeEnd	generic/tclTestObjInterface.c	/^indexHexListObjRangeEnd(tclObjTypeInterfaceArgsListRangeEnd) {$/;"	f	typeref:typename:int	file:
indexHexListObjRangeEnd	generic/tclTestObjInterface.c	/^static Tcl_ObjInterfaceListRangeEndProc indexHexListObjRangeEnd;$/;"	v	typeref:typename:Tcl_ObjInterfaceListRangeEndProc	file:
indexHexListObjReplace	generic/tclTestObjInterface.c	/^indexHexListObjReplace($/;"	f	typeref:typename:int	file:
indexHexListObjReplace	generic/tclTestObjInterface.c	/^static Tcl_ObjInterfaceListReplaceProc indexHexListObjReplace;$/;"	v	typeref:typename:Tcl_ObjInterfaceListReplaceProc	file:
indexHexListObjSet	generic/tclTestObjInterface.c	/^indexHexListObjSet($/;"	f	typeref:typename:int	file:
indexHexListObjSet	generic/tclTestObjInterface.c	/^static Tcl_ObjInterfaceListSetProc indexHexListObjSet;$/;"	v	typeref:typename:Tcl_ObjInterfaceListSetProc	file:
indexHexListObjSetDeep	generic/tclTestObjInterface.c	/^static Tcl_ObjInterfaceListSetDeepProc indexHexListObjSetDeep;$/;"	v	typeref:typename:Tcl_ObjInterfaceListSetDeepProc	file:
indexHexListObjSetDeep	generic/tclTestObjInterface.c	/^static int indexHexListObjSetDeep ($/;"	f	typeref:typename:int	file:
indexHexListStringIndex	generic/tclTestObjInterface.c	/^static Tcl_ObjInterfaceStringIndexProc indexHexListStringIndex;$/;"	v	typeref:typename:Tcl_ObjInterfaceStringIndexProc	file:
indexHexListStringIndex	generic/tclTestObjInterface.c	/^static int indexHexListStringIndex(tclObjTypeInterfaceArgsStringIndex) {$/;"	f	typeref:typename:int	file:
indexHexListStringIndexEnd	generic/tclTestObjInterface.c	/^static Tcl_ObjInterfaceStringIndexEndProc indexHexListStringIndexEnd;$/;"	v	typeref:typename:Tcl_ObjInterfaceStringIndexEndProc	file:
indexHexListStringIndexEnd	generic/tclTestObjInterface.c	/^static int indexHexListStringIndexEnd($/;"	f	typeref:typename:int	file:
indexHexListStringLength	generic/tclTestObjInterface.c	/^static Tcl_ObjInterfaceStringLengthProc indexHexListStringLength;$/;"	v	typeref:typename:Tcl_ObjInterfaceStringLengthProc	file:
indexHexListStringLength	generic/tclTestObjInterface.c	/^static int indexHexListStringLength($/;"	f	typeref:typename:int	file:
indexHexListStringRange	generic/tclTestObjInterface.c	/^static Tcl_ObjInterfaceStringRangeProc indexHexListStringRange;$/;"	v	typeref:typename:Tcl_ObjInterfaceStringRangeProc	file:
indexHexListStringRange	generic/tclTestObjInterface.c	/^static int indexHexListStringRange(tclObjTypeInterfaceArgsStringRange) {$/;"	f	typeref:typename:int	file:
indexHexListStringRangeEnd	generic/tclTestObjInterface.c	/^static Tcl_ObjInterfaceStringRangeEndProc indexHexListStringRangeEnd;$/;"	v	typeref:typename:Tcl_ObjInterfaceStringRangeEndProc	file:
indexHexListStringRangeEnd	generic/tclTestObjInterface.c	/^static int indexHexListStringRangeEnd($/;"	f	typeref:typename:int	file:
indexHexStringListIndexFromStringIndex	generic/tclTestObjInterface.c	/^static int indexHexStringListIndexFromStringIndex($/;"	f	typeref:typename:int	file:
indexProc	generic/tclDTrace.d	/^    void *indexProc;$/;"	m	struct:Tcl_ObjType	file:
indexc	generic/tclCmdIL.c	/^    Tcl_Size indexc;		\/* Number of indexes in indexv array. *\/$/;"	m	struct:__anond5eb1cce0308	typeref:typename:Tcl_Size	file:
indexfile	tools/tcltk-man2html-utils.tcl	/^proc indexfile {} {$/;"	p
indexv	generic/tclCmdIL.c	/^    int *indexv;		\/* If the -index option was specified, this$/;"	m	struct:__anond5eb1cce0308	typeref:typename:int *	file:
inf	compat/zlib/contrib/blast/blast.c	/^local unsigned inf(void *how, unsigned char **buf)$/;"	f	typeref:typename:local unsigned
inf	compat/zlib/examples/zpipe.c	/^int inf(FILE *source, FILE *dest)$/;"	f	typeref:typename:int
inf	compat/zlib/test/infcover.c	/^local void inf(char *hex, char *what, unsigned step, int win, unsigned len,$/;"	f	typeref:typename:local void
infback.$(HOST_OBJEXT)	unix/Makefile.in	/^infback.$(HOST_OBJEXT):$/;"	t
infback.$(HOST_OBJEXT)	win/Makefile.in	/^infback.$(HOST_OBJEXT):$/;"	t
infback.lo	compat/zlib/Makefile.in	/^infback.lo inflate.lo: $(SRCDIR)zutil.h $(SRCDIR)zlib.h zconf.h $(SRCDIR)inftrees.h $(SRCDIR)inf/;"	t
infback.lo	compat/zlib/Makefile.in	/^infback.lo: $(SRCDIR)infback.c$/;"	t
infback.o	compat/zlib/Makefile.in	/^infback.o inflate.o: $(SRCDIR)zutil.h $(SRCDIR)zlib.h zconf.h $(SRCDIR)inftrees.h $(SRCDIR)infla/;"	t
infback.o	compat/zlib/Makefile.in	/^infback.o: $(SRCDIR)infback.c$/;"	t
infback.obj	compat/zlib/contrib/delphi/zlibd32.mak	/^infback.obj: infback.c zutil.h zlib.h zconf.h inftrees.h inflate.h \\$/;"	t
infback.obj	compat/zlib/contrib/pascal/zlibd32.mak	/^infback.obj: infback.c zutil.h zlib.h zconf.h inftrees.h inflate.h \\$/;"	t
infcover	compat/zlib/Makefile.in	/^infcover: infcover.o libz.a$/;"	t
infcover.o	compat/zlib/Makefile.in	/^infcover.o: $(SRCDIR)test\/infcover.c $(SRCDIR)zlib.h zconf.h$/;"	t
inffast.$(HOST_OBJEXT)	unix/Makefile.in	/^inffast.$(HOST_OBJEXT):$/;"	t
inffast.$(HOST_OBJEXT)	win/Makefile.in	/^inffast.$(HOST_OBJEXT):$/;"	t
inffast.lo	compat/zlib/Makefile.in	/^inffast.lo: $(SRCDIR)inffast.c$/;"	t
inffast.lo	compat/zlib/Makefile.in	/^inffast.lo: $(SRCDIR)zutil.h $(SRCDIR)zlib.h zconf.h $(SRCDIR)inftrees.h $(SRCDIR)inflate.h $(SR/;"	t
inffast.o	compat/zlib/Makefile.in	/^inffast.o: $(SRCDIR)inffast.c$/;"	t
inffast.o	compat/zlib/Makefile.in	/^inffast.o: $(SRCDIR)zutil.h $(SRCDIR)zlib.h zconf.h $(SRCDIR)inftrees.h $(SRCDIR)inflate.h $(SRC/;"	t
inffast.obj	compat/zlib/contrib/delphi/zlibd32.mak	/^inffast.obj: inffast.c zutil.h zlib.h zconf.h inftrees.h inflate.h \\$/;"	t
inffast.obj	compat/zlib/contrib/pascal/zlibd32.mak	/^inffast.obj: inffast.c zutil.h zlib.h zconf.h inftrees.h inflate.h \\$/;"	t
inffast_ar	compat/zlib/contrib/inflate86/inffas86.c	/^    struct inffast_ar {$/;"	s	function:inflate_fast	file:
infile	compat/zlib/examples/gun.c	/^    int infile;$/;"	m	struct:ind	typeref:typename:int	file:
inflate	compat/zlib/contrib/delphi/ZLib.pas	/^function inflate(var strm: TZStreamRec; flush: Integer): Integer; external;$/;"	f	typeref:typename:Integer
inflate	compat/zlib/contrib/dotzlib/DotZLib/Inflater.cs	/^        private static extern int inflate(ref ZStream sz, int flush);$/;"	m	class:DotZLib.Inflater	file:
inflate	compat/zlib/contrib/pascal/zlibpas.pas	/^function inflate(var strm: z_stream; flush: Integer): Integer;$/;"	f	typeref:typename:Integer
inflate	compat/zlib/contrib/pascal/zlibpas.pas	/^function inflate; external;$/;"	f
inflate	compat/zlib/inflate.c	/^int ZEXPORT inflate(z_streamp strm, int flush) {$/;"	f	typeref:typename:int ZEXPORT
inflate	compat/zlib/zconf.h	/^#  define inflate               z_inflate$/;"	d
inflate	compat/zlib/zconf.h.in	/^#  define inflate               z_inflate$/;"	d	file:
inflate.$(HOST_OBJEXT)	unix/Makefile.in	/^inflate.$(HOST_OBJEXT):$/;"	t
inflate.$(HOST_OBJEXT)	win/Makefile.in	/^inflate.$(HOST_OBJEXT):$/;"	t
inflate.lo	compat/zlib/Makefile.in	/^infback.lo inflate.lo: $(SRCDIR)zutil.h $(SRCDIR)zlib.h zconf.h $(SRCDIR)inftrees.h $(SRCDIR)inf/;"	t
inflate.lo	compat/zlib/Makefile.in	/^inflate.lo: $(SRCDIR)inflate.c$/;"	t
inflate.o	compat/zlib/Makefile.in	/^infback.o inflate.o: $(SRCDIR)zutil.h $(SRCDIR)zlib.h zconf.h $(SRCDIR)inftrees.h $(SRCDIR)infla/;"	t
inflate.o	compat/zlib/Makefile.in	/^inflate.o: $(SRCDIR)inflate.c$/;"	t
inflate.obj	compat/zlib/contrib/delphi/zlibd32.mak	/^inflate.obj: inflate.c zutil.h zlib.h zconf.h inftrees.h inflate.h \\$/;"	t
inflate.obj	compat/zlib/contrib/pascal/zlibd32.mak	/^inflate.obj: inflate.c zutil.h zlib.h zconf.h inftrees.h inflate.h \\$/;"	t
inflate9_copyright	compat/zlib/contrib/infback9/inftree9.c	/^const char inflate9_copyright[] =$/;"	v	typeref:typename:const char[]
inflateBack	compat/zlib/contrib/pascal/zlibpas.pas	/^function inflateBack(var strm: z_stream; in_fn: in_func; in_desc: Pointer;$/;"	f
inflateBack	compat/zlib/contrib/pascal/zlibpas.pas	/^function inflateBack; external;$/;"	f
inflateBack	compat/zlib/infback.c	/^int ZEXPORT inflateBack(z_streamp strm, in_func in, void FAR *in_desc,$/;"	f	typeref:typename:int ZEXPORT
inflateBack	compat/zlib/zconf.h	/^#  define inflateBack           z_inflateBack$/;"	d
inflateBack	compat/zlib/zconf.h.in	/^#  define inflateBack           z_inflateBack$/;"	d	file:
inflateBack9	compat/zlib/contrib/infback9/infback9.c	/^int ZEXPORT inflateBack9(z_stream FAR *strm, in_func in, void FAR *in_desc,$/;"	f	typeref:typename:int ZEXPORT
inflateBack9End	compat/zlib/contrib/infback9/infback9.c	/^int ZEXPORT inflateBack9End(z_stream FAR *strm) {$/;"	f	typeref:typename:int ZEXPORT
inflateBack9Init	compat/zlib/contrib/infback9/infback9.h	/^#define inflateBack9Init(/;"	d
inflateBack9Init_	compat/zlib/contrib/infback9/infback9.c	/^int ZEXPORT inflateBack9Init_(z_stream FAR *strm, unsigned char FAR *window,$/;"	f	typeref:typename:int ZEXPORT
inflateBackEnd	compat/zlib/contrib/pascal/zlibpas.pas	/^function inflateBackEnd(var strm: z_stream): Integer;$/;"	f	typeref:typename:Integer
inflateBackEnd	compat/zlib/contrib/pascal/zlibpas.pas	/^function inflateBackEnd; external;$/;"	f
inflateBackEnd	compat/zlib/infback.c	/^int ZEXPORT inflateBackEnd(z_streamp strm) {$/;"	f	typeref:typename:int ZEXPORT
inflateBackEnd	compat/zlib/zconf.h	/^#  define inflateBackEnd        z_inflateBackEnd$/;"	d
inflateBackEnd	compat/zlib/zconf.h.in	/^#  define inflateBackEnd        z_inflateBackEnd$/;"	d	file:
inflateBackInit	compat/zlib/contrib/ada/zlib-thin.ads	/^   function inflateBackInit$/;"	R
inflateBackInit	compat/zlib/contrib/pascal/zlibpas.pas	/^function inflateBackInit(var strm: z_stream;$/;"	f
inflateBackInit	compat/zlib/zconf.h	/^#  define inflateBackInit       z_inflateBackInit$/;"	d
inflateBackInit	compat/zlib/zconf.h.in	/^#  define inflateBackInit       z_inflateBackInit$/;"	d	file:
inflateBackInit	compat/zlib/zlib.h	/^#  define inflateBackInit(/;"	d
inflateBackInit_	compat/zlib/contrib/pascal/zlibpas.pas	/^function inflateBackInit_(var strm: z_stream;$/;"	f
inflateBackInit_	compat/zlib/contrib/pascal/zlibpas.pas	/^function inflateBackInit_; external;$/;"	f
inflateBackInit_	compat/zlib/infback.c	/^int ZEXPORT inflateBackInit_(z_streamp strm, int windowBits,$/;"	f	typeref:typename:int ZEXPORT
inflateBackInit_	compat/zlib/zconf.h	/^#  define inflateBackInit_      z_inflateBackInit_$/;"	d
inflateBackInit_	compat/zlib/zconf.h.in	/^#  define inflateBackInit_      z_inflateBackInit_$/;"	d	file:
inflateCodesUsed	compat/zlib/inflate.c	/^unsigned long ZEXPORT inflateCodesUsed(z_streamp strm) {$/;"	f	typeref:typename:unsigned long ZEXPORT
inflateCodesUsed	compat/zlib/zconf.h	/^#  define inflateCodesUsed      z_inflateCodesUsed$/;"	d
inflateCodesUsed	compat/zlib/zconf.h.in	/^#  define inflateCodesUsed      z_inflateCodesUsed$/;"	d	file:
inflateCopy	compat/zlib/contrib/ada/zlib-thin.ads	/^   function inflateCopy$/;"	R
inflateCopy	compat/zlib/contrib/pascal/zlibpas.pas	/^function inflateCopy(var dest, source: z_stream): Integer;$/;"	f	typeref:typename:Integer
inflateCopy	compat/zlib/contrib/pascal/zlibpas.pas	/^function inflateCopy; external;$/;"	f
inflateCopy	compat/zlib/inflate.c	/^int ZEXPORT inflateCopy(z_streamp dest, z_streamp source) {$/;"	f	typeref:typename:int ZEXPORT
inflateCopy	compat/zlib/zconf.h	/^#  define inflateCopy           z_inflateCopy$/;"	d
inflateCopy	compat/zlib/zconf.h.in	/^#  define inflateCopy           z_inflateCopy$/;"	d	file:
inflateEnd	compat/zlib/contrib/delphi/ZLib.pas	/^function inflateEnd(var strm: TZStreamRec): Integer; external;$/;"	f	typeref:typename:Integer
inflateEnd	compat/zlib/contrib/dotzlib/DotZLib/Inflater.cs	/^        private static extern int inflateEnd(ref ZStream sz);$/;"	m	class:DotZLib.Inflater	file:
inflateEnd	compat/zlib/contrib/pascal/zlibpas.pas	/^function inflateEnd(var strm: z_stream): Integer;$/;"	f	typeref:typename:Integer
inflateEnd	compat/zlib/contrib/pascal/zlibpas.pas	/^function inflateEnd; external;$/;"	f
inflateEnd	compat/zlib/inflate.c	/^int ZEXPORT inflateEnd(z_streamp strm) {$/;"	f	typeref:typename:int ZEXPORT
inflateEnd	compat/zlib/zconf.h	/^#  define inflateEnd            z_inflateEnd$/;"	d
inflateEnd	compat/zlib/zconf.h.in	/^#  define inflateEnd            z_inflateEnd$/;"	d	file:
inflateGetDictionary	compat/zlib/inflate.c	/^int ZEXPORT inflateGetDictionary(z_streamp strm, Bytef *dictionary,$/;"	f	typeref:typename:int ZEXPORT
inflateGetDictionary	compat/zlib/zconf.h	/^#  define inflateGetDictionary  z_inflateGetDictionary$/;"	d
inflateGetDictionary	compat/zlib/zconf.h.in	/^#  define inflateGetDictionary  z_inflateGetDictionary$/;"	d	file:
inflateGetHeader	compat/zlib/contrib/pascal/zlibpas.pas	/^function inflateGetHeader(var strm: z_stream; var head: gz_header): Integer;$/;"	f	typeref:typename:Integer
inflateGetHeader	compat/zlib/contrib/pascal/zlibpas.pas	/^function inflateGetHeader; external;$/;"	f
inflateGetHeader	compat/zlib/inflate.c	/^int ZEXPORT inflateGetHeader(z_streamp strm, gz_headerp head) {$/;"	f	typeref:typename:int ZEXPORT
inflateGetHeader	compat/zlib/zconf.h	/^#  define inflateGetHeader      z_inflateGetHeader$/;"	d
inflateGetHeader	compat/zlib/zconf.h.in	/^#  define inflateGetHeader      z_inflateGetHeader$/;"	d	file:
inflateInit	compat/zlib/contrib/ada/zlib-thin.ads	/^   function inflateInit$/;"	R
inflateInit	compat/zlib/contrib/pascal/zlibpas.pas	/^function inflateInit(var strm: z_stream): Integer;$/;"	f	typeref:typename:Integer
inflateInit	compat/zlib/zconf.h	/^#  define inflateInit           z_inflateInit$/;"	d
inflateInit	compat/zlib/zconf.h.in	/^#  define inflateInit           z_inflateInit$/;"	d	file:
inflateInit	compat/zlib/zlib.h	/^#  define inflateInit(/;"	d
inflateInit2	compat/zlib/contrib/ada/zlib-thin.ads	/^   function inflateInit2$/;"	R
inflateInit2	compat/zlib/contrib/pascal/zlibpas.pas	/^function inflateInit2(var strm: z_stream; windowBits: Integer): Integer;$/;"	f	typeref:typename:Integer
inflateInit2	compat/zlib/zconf.h	/^#  define inflateInit2          z_inflateInit2$/;"	d
inflateInit2	compat/zlib/zconf.h.in	/^#  define inflateInit2          z_inflateInit2$/;"	d	file:
inflateInit2	compat/zlib/zlib.h	/^#  define inflateInit2(/;"	d
inflateInit2_	compat/zlib/contrib/pascal/zlibpas.pas	/^function inflateInit2_(var strm: z_stream; windowBits: Integer;$/;"	f
inflateInit2_	compat/zlib/contrib/pascal/zlibpas.pas	/^function inflateInit2_; external;$/;"	f
inflateInit2_	compat/zlib/inflate.c	/^int ZEXPORT inflateInit2_(z_streamp strm, int windowBits,$/;"	f	typeref:typename:int ZEXPORT
inflateInit2_	compat/zlib/zconf.h	/^#  define inflateInit2_         z_inflateInit2_$/;"	d
inflateInit2_	compat/zlib/zconf.h.in	/^#  define inflateInit2_         z_inflateInit2_$/;"	d	file:
inflateInit_	compat/zlib/contrib/delphi/ZLib.pas	/^function inflateInit_(var strm: TZStreamRec; version: PChar;$/;"	f
inflateInit_	compat/zlib/contrib/dotzlib/DotZLib/Inflater.cs	/^        private static extern int inflateInit_(ref ZStream sz, string vs, int size);$/;"	m	class:DotZLib.Inflater	file:
inflateInit_	compat/zlib/contrib/pascal/zlibpas.pas	/^function inflateInit_(var strm: z_stream; const version: PChar;$/;"	f
inflateInit_	compat/zlib/contrib/pascal/zlibpas.pas	/^function inflateInit_; external;$/;"	f
inflateInit_	compat/zlib/inflate.c	/^int ZEXPORT inflateInit_(z_streamp strm, const char *version,$/;"	f	typeref:typename:int ZEXPORT
inflateInit_	compat/zlib/zconf.h	/^#  define inflateInit_          z_inflateInit_$/;"	d
inflateInit_	compat/zlib/zconf.h.in	/^#  define inflateInit_          z_inflateInit_$/;"	d	file:
inflateMark	compat/zlib/contrib/pascal/zlibpas.pas	/^function inflateMark(var strm: z_stream): LongInt;$/;"	f	typeref:typename:LongInt
inflateMark	compat/zlib/contrib/pascal/zlibpas.pas	/^function inflateMark; external;$/;"	f
inflateMark	compat/zlib/inflate.c	/^long ZEXPORT inflateMark(z_streamp strm) {$/;"	f	typeref:typename:long ZEXPORT
inflateMark	compat/zlib/zconf.h	/^#  define inflateMark           z_inflateMark$/;"	d
inflateMark	compat/zlib/zconf.h.in	/^#  define inflateMark           z_inflateMark$/;"	d	file:
inflatePreface	compat/zlib/examples/zran.c	/^static int inflatePreface(z_stream *strm, int bits, int value) {$/;"	f	typeref:typename:int	file:
inflatePrime	compat/zlib/contrib/pascal/zlibpas.pas	/^function inflatePrime(var strm: z_stream; bits, value: Integer): Integer;$/;"	f	typeref:typename:Integer
inflatePrime	compat/zlib/contrib/pascal/zlibpas.pas	/^function inflatePrime; external;$/;"	f
inflatePrime	compat/zlib/inflate.c	/^int ZEXPORT inflatePrime(z_streamp strm, int bits, int value) {$/;"	f	typeref:typename:int ZEXPORT
inflatePrime	compat/zlib/zconf.h	/^#  define inflatePrime          z_inflatePrime$/;"	d
inflatePrime	compat/zlib/zconf.h.in	/^#  define inflatePrime          z_inflatePrime$/;"	d	file:
inflateReset	compat/zlib/contrib/ada/zlib-thin.ads	/^   function inflateReset (strm : Z_Streamp) return Int; --  zlib.h:580$/;"	R
inflateReset	compat/zlib/contrib/delphi/ZLib.pas	/^function inflateReset(var strm: TZStreamRec): Integer; external;$/;"	f	typeref:typename:Integer
inflateReset	compat/zlib/contrib/dotzlib/DotZLib/Inflater.cs	/^        private static extern int inflateReset(ref ZStream sz);$/;"	m	class:DotZLib.Inflater	file:
inflateReset	compat/zlib/contrib/pascal/zlibpas.pas	/^function inflateReset(var strm: z_stream): Integer;$/;"	f	typeref:typename:Integer
inflateReset	compat/zlib/contrib/pascal/zlibpas.pas	/^function inflateReset; external;$/;"	f
inflateReset	compat/zlib/inflate.c	/^int ZEXPORT inflateReset(z_streamp strm) {$/;"	f	typeref:typename:int ZEXPORT
inflateReset	compat/zlib/zconf.h	/^#  define inflateReset          z_inflateReset$/;"	d
inflateReset	compat/zlib/zconf.h.in	/^#  define inflateReset          z_inflateReset$/;"	d	file:
inflateReset2	compat/zlib/contrib/pascal/zlibpas.pas	/^function inflateReset2(var strm: z_stream; windowBits: Integer): Integer;$/;"	f	typeref:typename:Integer
inflateReset2	compat/zlib/contrib/pascal/zlibpas.pas	/^function inflateReset2; external;$/;"	f
inflateReset2	compat/zlib/inflate.c	/^int ZEXPORT inflateReset2(z_streamp strm, int windowBits) {$/;"	f	typeref:typename:int ZEXPORT
inflateReset2	compat/zlib/zconf.h	/^#  define inflateReset2         z_inflateReset2$/;"	d
inflateReset2	compat/zlib/zconf.h.in	/^#  define inflateReset2         z_inflateReset2$/;"	d	file:
inflateResetKeep	compat/zlib/inflate.c	/^int ZEXPORT inflateResetKeep(z_streamp strm) {$/;"	f	typeref:typename:int ZEXPORT
inflateResetKeep	compat/zlib/zconf.h	/^#  define inflateResetKeep      z_inflateResetKeep$/;"	d
inflateResetKeep	compat/zlib/zconf.h.in	/^#  define inflateResetKeep      z_inflateResetKeep$/;"	d	file:
inflateSetDictionary	compat/zlib/contrib/ada/zlib-thin.ads	/^   function inflateSetDictionary$/;"	R
inflateSetDictionary	compat/zlib/contrib/pascal/zlibpas.pas	/^function inflateSetDictionary(var strm: z_stream; const dictionary: PChar;$/;"	f
inflateSetDictionary	compat/zlib/contrib/pascal/zlibpas.pas	/^function inflateSetDictionary; external;$/;"	f
inflateSetDictionary	compat/zlib/inflate.c	/^int ZEXPORT inflateSetDictionary(z_streamp strm, const Bytef *dictionary,$/;"	f	typeref:typename:int ZEXPORT
inflateSetDictionary	compat/zlib/zconf.h	/^#  define inflateSetDictionary  z_inflateSetDictionary$/;"	d
inflateSetDictionary	compat/zlib/zconf.h.in	/^#  define inflateSetDictionary  z_inflateSetDictionary$/;"	d	file:
inflateStateCheck	compat/zlib/inflate.c	/^local int inflateStateCheck(z_streamp strm) {$/;"	f	typeref:typename:local int
inflateSync	compat/zlib/contrib/ada/zlib-thin.ads	/^   function inflateSync (strm : Z_Streamp) return Int;  --  zlib.h:565$/;"	R
inflateSync	compat/zlib/contrib/pascal/zlibpas.pas	/^function inflateSync(var strm: z_stream): Integer;$/;"	f	typeref:typename:Integer
inflateSync	compat/zlib/contrib/pascal/zlibpas.pas	/^function inflateSync; external;$/;"	f
inflateSync	compat/zlib/inflate.c	/^int ZEXPORT inflateSync(z_streamp strm) {$/;"	f	typeref:typename:int ZEXPORT
inflateSync	compat/zlib/zconf.h	/^#  define inflateSync           z_inflateSync$/;"	d
inflateSync	compat/zlib/zconf.h.in	/^#  define inflateSync           z_inflateSync$/;"	d	file:
inflateSyncPoint	compat/zlib/contrib/ada/zlib-thin.ads	/^   function inflateSyncPoint (z : Z_Streamp) return Int;$/;"	R
inflateSyncPoint	compat/zlib/inflate.c	/^int ZEXPORT inflateSyncPoint(z_streamp strm) {$/;"	f	typeref:typename:int ZEXPORT
inflateSyncPoint	compat/zlib/zconf.h	/^#  define inflateSyncPoint      z_inflateSyncPoint$/;"	d
inflateSyncPoint	compat/zlib/zconf.h.in	/^#  define inflateSyncPoint      z_inflateSyncPoint$/;"	d	file:
inflateUndermine	compat/zlib/inflate.c	/^int ZEXPORT inflateUndermine(z_streamp strm, int subvert) {$/;"	f	typeref:typename:int ZEXPORT
inflateUndermine	compat/zlib/zconf.h	/^#  define inflateUndermine      z_inflateUndermine$/;"	d
inflateUndermine	compat/zlib/zconf.h.in	/^#  define inflateUndermine      z_inflateUndermine$/;"	d	file:
inflateValidate	compat/zlib/inflate.c	/^int ZEXPORT inflateValidate(z_streamp strm, int check) {$/;"	f	typeref:typename:int ZEXPORT
inflateValidate	compat/zlib/zconf.h	/^#  define inflateValidate       z_inflateValidate$/;"	d
inflateValidate	compat/zlib/zconf.h.in	/^#  define inflateValidate       z_inflateValidate$/;"	d	file:
inflate_copyright	compat/zlib/inftrees.c	/^const char inflate_copyright[] =$/;"	v	typeref:typename:const char[]
inflate_copyright	compat/zlib/zconf.h	/^#  define inflate_copyright     z_inflate_copyright$/;"	d
inflate_copyright	compat/zlib/zconf.h.in	/^#  define inflate_copyright     z_inflate_copyright$/;"	d	file:
inflate_fast	compat/zlib/contrib/inflate86/inffas86.c	/^void inflate_fast(strm, start)$/;"	f
inflate_fast	compat/zlib/inffast.c	/^void ZLIB_INTERNAL inflate_fast(z_streamp strm, unsigned start) {$/;"	f	typeref:typename:void ZLIB_INTERNAL
inflate_fast	compat/zlib/zconf.h	/^#  define inflate_fast          z_inflate_fast$/;"	d
inflate_fast	compat/zlib/zconf.h.in	/^#  define inflate_fast          z_inflate_fast$/;"	d	file:
inflate_mode	compat/zlib/contrib/infback9/inflate9.h	/^} inflate_mode;$/;"	t	typeref:enum:__anonf28101a00103
inflate_mode	compat/zlib/inflate.h	/^} inflate_mode;$/;"	t	typeref:enum:__anon6bf0a2910103
inflate_state	compat/zlib/contrib/infback9/inflate9.h	/^struct inflate_state {$/;"	s
inflate_state	compat/zlib/inflate.h	/^struct inflate_state {$/;"	s
inflate_table	compat/zlib/inftrees.c	/^int ZLIB_INTERNAL inflate_table(codetype type, unsigned short FAR *lens,$/;"	f	typeref:typename:int ZLIB_INTERNAL
inflate_table	compat/zlib/zconf.h	/^#  define inflate_table         z_inflate_table$/;"	d
inflate_table	compat/zlib/zconf.h.in	/^#  define inflate_table         z_inflate_table$/;"	d	file:
inflate_table9	compat/zlib/contrib/infback9/inftree9.c	/^int inflate_table9(codetype type, unsigned short FAR *lens, unsigned codes,$/;"	f	typeref:typename:int
info	generic/regguts.h	/^    long info;			\/* copy of re_info *\/$/;"	m	struct:guts	typeref:typename:long
info	generic/tclOOMethod.c	/^    Tcl_ResolvedVarInfo info;	\/* "Type" information so that the compiled$/;"	m	struct:OOResVarInfo	typeref:typename:Tcl_ResolvedVarInfo	file:
info	unix/tclLoadAix.c	/^    struct dl_info *info;	\/* optional init\/terminate functions *\/$/;"	m	struct:Module	typeref:struct:dl_info *	file:
info	win/tclWinInit.c	/^	SYSTEM_INFO info;$/;"	m	union:TclpSetVariables::__anon2388ba18020a	typeref:typename:SYSTEM_INFO	file:
infoClassCmds	generic/tclOOInfo.c	/^static const EnsembleImplMap infoClassCmds[] = {$/;"	v	typeref:typename:const EnsembleImplMap[]	file:
infoObjectCmds	generic/tclOOInfo.c	/^static const EnsembleImplMap infoObjectCmds[] = {$/;"	v	typeref:typename:const EnsembleImplMap[]	file:
infoPtr	win/tclWinChan.c	/^    FileInfo *infoPtr;		\/* Pointer to file info structure. Note that$/;"	m	struct:__anon1518b6be0208	typeref:typename:FileInfo *	file:
infoPtr	win/tclWinPipe.c	/^    PipeInfo *infoPtr;		\/* Pointer to pipe info structure. Note that$/;"	m	struct:__anon3385f2d20308	typeref:typename:PipeInfo *	file:
infoPtr	win/tclWinSerial.c	/^    SerialInfo *infoPtr;	\/* Pointer to serial info structure. Note that$/;"	m	struct:__anonc2b952240208	typeref:typename:SerialInfo *	file:
infoTablePerPid	generic/tclProcess.c	/^static Tcl_HashTable infoTablePerPid;$/;"	v	typeref:typename:Tcl_HashTable	file:
infoTablePerResolvedPid	generic/tclProcess.c	/^static Tcl_HashTable infoTablePerResolvedPid;$/;"	v	typeref:typename:Tcl_HashTable	file:
infoTablesInitialized	generic/tclProcess.c	/^static int infoTablesInitialized = 0;	\/* 0 means not yet initialized. *\/$/;"	v	typeref:typename:int	file:
info_length	macosx/tclMacOSXFCmd.c	/^    u_int32_t info_length;$/;"	m	struct:__anon5fc3cb980308	typeref:typename:u_int32_t	file:
infoname	generic/tclRegexp.c	/^    struct infoname {$/;"	s	function:TclRegAbout	file:
inftrees.$(HOST_OBJEXT)	unix/Makefile.in	/^inftrees.$(HOST_OBJEXT):$/;"	t
inftrees.$(HOST_OBJEXT)	win/Makefile.in	/^inftrees.$(HOST_OBJEXT):$/;"	t
inftrees.lo	compat/zlib/Makefile.in	/^inftrees.lo: $(SRCDIR)inftrees.c$/;"	t
inftrees.lo	compat/zlib/Makefile.in	/^inftrees.lo: $(SRCDIR)zutil.h $(SRCDIR)zlib.h zconf.h $(SRCDIR)inftrees.h$/;"	t
inftrees.o	compat/zlib/Makefile.in	/^inftrees.o: $(SRCDIR)inftrees.c$/;"	t
inftrees.o	compat/zlib/Makefile.in	/^inftrees.o: $(SRCDIR)zutil.h $(SRCDIR)zlib.h zconf.h $(SRCDIR)inftrees.h$/;"	t
inftrees.obj	compat/zlib/contrib/delphi/zlibd32.mak	/^inftrees.obj: inftrees.c zutil.h zlib.h zconf.h inftrees.h$/;"	t
inftrees.obj	compat/zlib/contrib/pascal/zlibd32.mak	/^inftrees.obj: inftrees.c zutil.h zlib.h zconf.h inftrees.h$/;"	t
infun	compat/zlib/contrib/blast/blast.c	/^    blast_in infun;             \/* input function provided by user *\/$/;"	m	struct:state	typeref:typename:blast_in	file:
inhow	compat/zlib/contrib/blast/blast.c	/^    void *inhow;                \/* opaque information passed to infun() *\/$/;"	m	struct:state	typeref:typename:void *	file:
init	compat/dlfcn.h	/^	void (*init) (void);$/;"	m	struct:dl_info	typeref:typename:void (*)(void)
init	generic/regguts.h	/^    struct state *init;		\/* initial state *\/$/;"	m	struct:nfa	typeref:struct:state *
init	generic/tclEncoding.c	/^    char init[16];		\/* String to emit or expect before first char$/;"	m	struct:__anondb7a8e8c0408	typeref:typename:char[16]	file:
init	library/auto.tcl	/^    proc init {} {$/;"	p	namespace:::auto_mkindex_parser
init	library/http/http.tcl	/^    proc init {} {$/;"	p	namespace:::http
init	tests/tcltests.tcl	/^    proc init {} {$/;"	p	namespace:::::tcltests
init	tools/genStubs.tcl	/^proc genStubs::init {} {$/;"	p	namespace:genStubs
init	unix/tclLoadAix.c	/^    void (*init)(void);		\/* call static constructors *\/$/;"	m	struct:__anonb87ae84e0208	typeref:typename:void (*)(void)	file:
initCatchTop	generic/tclExecute.c	/^#define	initCatchTop	/;"	d	file:
initGlobals	tools/index.tcl	/^proc initGlobals {} {}$/;"	p
initLen	generic/tclEncoding.c	/^    unsigned initLen;		\/* Length of following string. *\/$/;"	m	struct:__anondb7a8e8c0408	typeref:typename:unsigned	file:
initLock	unix/tclUnixThrd.c	/^static pthread_mutex_t initLock = PTHREAD_MUTEX_INITIALIZER;$/;"	v	typeref:typename:pthread_mutex_t	file:
initLock	win/tclWinThrd.c	/^static CRITICAL_SECTION initLock;$/;"	v	typeref:typename:CRITICAL_SECTION	file:
initMode	win/tclWinConsole.c	/^    DWORD initMode;		\/* Initial console mode. *\/$/;"	m	struct:ConsoleChannelInfo	typeref:typename:DWORD	file:
initMode	win/tclWinConsole.c	/^    DWORD initMode;		\/* Initial console mode. *\/$/;"	m	struct:ConsoleHandleInfo	typeref:typename:DWORD	file:
initNotifierProc	generic/tcl.h	/^    Tcl_InitNotifierProc *initNotifierProc;$/;"	m	struct:Tcl_NotifierProcs	typeref:typename:Tcl_InitNotifierProc *
initProc	generic/tclLoad.c	/^    Tcl_LibraryInitProc *initProc;$/;"	m	struct:LoadedLibrary	typeref:typename:Tcl_LibraryInitProc *	file:
initScript	generic/tclOO.c	/^static const char initScript[] =$/;"	v	typeref:typename:const char[]	file:
initState	unix/tclUnixChan.c	/^    struct termios initState;	\/* The state of the terminal when it was$/;"	m	struct:__anone1e2a72a0208	typeref:struct:termios	file:
initTosPtr	generic/tclExecute.c	/^#define	initTosPtr	/;"	d	file:
init_block	compat/zlib/trees.c	/^local void init_block(deflate_state *s) {$/;"	f	typeref:typename:local void
init_keys	compat/zlib/contrib/minizip/crypt.h	/^static void init_keys(const char* passwd, unsigned long* pkeys, const z_crc_t* pcrc_32_tab) {$/;"	f	typeref:typename:void
init_linkedlist	compat/zlib/contrib/minizip/zip.c	/^local void init_linkedlist(linkedlist_data* ll) {$/;"	f	typeref:typename:local void
init_malloced_bodies	generic/tclCkalloc.c	/^static int init_malloced_bodies = TRUE;$/;"	v	typeref:typename:int	file:
initcm	generic/regc_color.c	/^initcm($/;"	f	typeref:typename:void	file:
initialStackDepth	generic/tclAssembly.c	/^    int initialStackDepth;	\/* Absolute stack depth on entry *\/$/;"	m	struct:BasicBlock	typeref:typename:int	file:
initialize	generic/rege_dfa.c	/^initialize($/;"	f	typeref:struct:sset *	file:
initialized	generic/tclClockFmt.c	/^static int initialized = 0;$/;"	v	typeref:typename:int	file:
initialized	generic/tclIOCmd.c	/^    int initialized;		\/* Set to 1 when the module is initialized. *\/$/;"	m	struct:__anon5b8cc1910208	typeref:typename:int	file:
initialized	generic/tclIOSock.c	/^    int initialized;$/;"	m	struct:__anonf29c1f6d0108	typeref:typename:int	file:
initialized	generic/tclIOUtil.c	/^    int initialized;$/;"	m	struct:__anonf7a439bb0108	typeref:typename:int	file:
initialized	generic/tclNotify.c	/^    int initialized;		\/* 1 if notifier has been initialized. *\/$/;"	m	struct:ThreadSpecificData	typeref:typename:int	file:
initialized	generic/tclRegexp.c	/^    int initialized;		\/* Set to 1 when the module is initialized. *\/$/;"	m	struct:__anon0c6ba4b00108	typeref:typename:int	file:
initialized	generic/tclZipfs.c	/^    int initialized;		\/* True when initialized *\/$/;"	m	struct:ZipFSGlobals	typeref:typename:int	file:
initialized	unix/tclXtNotify.c	/^static int initialized = 0;$/;"	v	typeref:typename:int	file:
initialized	win/tclWinNotify.c	/^static int initialized = 0;$/;"	v	typeref:typename:int	file:
initialized	win/tclWinPipe.c	/^static int initialized = 0;$/;"	v	typeref:typename:int	file:
initialized	win/tclWinSerial.c	/^static int initialized = 0;$/;"	v	typeref:typename:int	file:
initialized	win/tclWinSock.c	/^static int initialized = 0;$/;"	v	typeref:typename:int	file:
initialized	win/tclWinThrd.c	/^static int initialized = 0;$/;"	v	typeref:typename:int	file:
initialized	win/tclWinTime.c	/^    int initialized;		\/* 1 if initialized, 0 otherwise *\/$/;"	m	struct:__anon3cd8f0330208	typeref:typename:int	file:
initialized	win/tclWinTime.c	/^    int initialized;		\/* Flag == 1 if this structure is$/;"	m	struct:__anon3cd8f0330108	typeref:typename:int	file:
inkscape	tools/tclsh.svg	/^   inkscape:export-ydpi="8.4399996">$/;"	n	uri:http://www.inkscape.org/namespaces/inkscape
inlen	compat/zlib/contrib/puff/puff.c	/^    unsigned long inlen;        \/* available input at in *\/$/;"	m	struct:state	typeref:typename:unsigned long	file:
innerContext	generic/tclInt.h	/^    Tcl_Obj *innerContext;	\/* cached list for fast reallocation *\/$/;"	m	struct:Interp	typeref:typename:Tcl_Obj *
innerLiteral	generic/tclInt.h	/^    Tcl_Obj *innerLiteral;	\/* "INNER" literal for [info errorstack] *\/$/;"	m	struct:Interp	typeref:typename:Tcl_Obj *
input	generic/tclIORChan.c	/^    struct ForwardParamInput input;$/;"	m	union:ForwardParam	typeref:struct:ForwardParamInput	file:
input	generic/tclMain.c	/^    Tcl_Channel input;		\/* The standard input channel from which lines$/;"	m	struct:__anonfdf182ea0308	typeref:typename:Tcl_Channel	file:
inputEncodingFlags	generic/tclIO.h	/^    int inputEncodingFlags;	\/* Encoding flags to pass to conversion$/;"	m	struct:ChannelState	typeref:typename:int
inputEncodingState	generic/tclIO.h	/^    Tcl_EncodingState inputEncodingState;$/;"	m	struct:ChannelState	typeref:typename:Tcl_EncodingState
inputProc	generic/tcl.h	/^    Tcl_DriverInputProc *inputProc;$/;"	m	struct:Tcl_ChannelType	typeref:typename:Tcl_DriverInputProc *
inputTranslation	generic/tclIO.h	/^    TclEolTranslation inputTranslation;$/;"	m	struct:ChannelState	typeref:typename:TclEolTranslation
ins	generic/regexec.c	/^    struct arcp ins;		\/* chain of inarcs pointing here *\/$/;"	m	struct:sset	typeref:struct:arcp	file:
ins	generic/regguts.h	/^    struct arc *ins;		\/* chain of inarcs *\/$/;"	m	struct:state	typeref:struct:arc *
ins_h	compat/zlib/deflate.h	/^    uInt  ins_h;          \/* hash index of string to be inserted *\/$/;"	m	struct:internal_state	typeref:typename:uInt
insert	compat/zlib/deflate.h	/^    uInt insert;        \/* bytes at end of window left to insert *\/$/;"	m	struct:internal_state	typeref:typename:uInt
insert-cross-references	tools/tcltk-man2html-utils.tcl	/^proc insert-cross-references {text} {$/;"	p
instNameType	generic/tclDisassemble.c	/^static const Tcl_ObjType instNameType = {$/;"	v	typeref:typename:const Tcl_ObjType	file:
instType	generic/tclAssembly.c	/^    TalInstType instType;	\/* The type of instruction *\/$/;"	m	struct:TalInstDesc	typeref:typename:TalInstType	file:
install	compat/zlib/Makefile.in	/^install: install-libs$/;"	t
install	macosx/GNUmakefile	/^install			: ${install}$/;"	t
install	macosx/GNUmakefile	/^install			:= ${styles:%=install-%}$/;"	m
install	unix/Makefile.in	/^install: $(INSTALL_TARGETS)$/;"	t
install	win/Makefile.in	/^install: $(INSTALL_TARGETS)$/;"	t
install-${PROJECT}	macosx/GNUmakefile	/^install-${PROJECT}:	target = ${INSTALL_TARGET}$/;"	t
install-${PROJECT}	macosx/GNUmakefile	/^install-${PROJECT}: build-${PROJECT}$/;"	t
install-%	macosx/GNUmakefile	/^install-%:		action := install-$/;"	t
install-binaries	unix/Makefile.in	/^install-binaries: binaries$/;"	t
install-binaries	win/Makefile.in	/^install-binaries: binaries$/;"	t
install-doc	unix/Makefile.in	/^install-doc: doc$/;"	t
install-doc	win/Makefile.in	/^install-doc: doc$/;"	t
install-embedded	macosx/GNUmakefile	/^install-embedded	: install-embedded-deploy$/;"	t
install-embedded	macosx/GNUmakefile	/^install-embedded	:= ${embedded:%=install-%}$/;"	m
install-headers	unix/Makefile.in	/^install-headers:$/;"	t
install-headers	win/Makefile.in	/^install-headers:$/;"	t
install-libraries	unix/Makefile.in	/^install-libraries: libraries$/;"	t
install-libraries	win/Makefile.in	/^install-libraries: libraries install-tzdata install-msgs$/;"	t
install-libs	compat/zlib/Makefile.in	/^install-libs: $(LIBS)$/;"	t
install-msgs	unix/Makefile.in	/^install-msgs:$/;"	t
install-msgs	win/Makefile.in	/^install-msgs:$/;"	t
install-packages	unix/Makefile.in	/^install-packages: packages$/;"	t
install-packages	win/Makefile.in	/^install-packages: packages$/;"	t
install-private-headers	unix/Makefile.in	/^install-private-headers:$/;"	t
install-private-headers	win/Makefile.in	/^install-private-headers: libraries$/;"	t
install-strip	unix/Makefile.in	/^install-strip:$/;"	t
install-tzdata	unix/Makefile.in	/^install-tzdata:$/;"	t
install-tzdata	win/Makefile.in	/^install-tzdata:$/;"	t
installDir	library/install.tcl	/^proc ::practcl::installDir {d1 d2} {$/;"	p	namespace:::practcl
install_make_args	macosx/GNUmakefile	/^install_make_args	:= INSTALL_BUILD=1$/;"	m
instanceData	generic/tclIO.h	/^    void *instanceData;		\/* Instance-specific data provided by creator$/;"	m	struct:Channel	typeref:typename:void *
instances	generic/tclOOInt.h	/^    ObjectList instances;	\/* List of instances, used to ensure deletion$/;"	m	struct:Class	typeref:typename:ObjectList
instruction	generic/tclCompExpr.c	/^static const unsigned char instruction[] = {$/;"	v	typeref:typename:const unsigned char[]	file:
instructionCount	generic/tclInt.h	/^    size_t instructionCount[256];$/;"	m	struct:ByteCodeStats	typeref:typename:size_t[256]
interest	generic/tclIORChan.c	/^    int interest;		\/* Mask of events the channel is interested$/;"	m	struct:__anon92d8dd290108	typeref:typename:int	file:
interest	unix/tclUnixSock.c	/^    int interest;		\/* Event types of interest *\/$/;"	m	struct:TcpState	typeref:typename:int	file:
interestMask	generic/tclIO.h	/^    int interestMask;		\/* Mask of all events this channel has$/;"	m	struct:ChannelState	typeref:typename:int
interface	tools/genStubs.tcl	/^proc genStubs::interface {name} {$/;"	p	namespace:genStubs
internalRep	generic/tcl.h	/^    Tcl_ObjInternalRep internalRep;$/;"	m	struct:Tcl_Obj	typeref:typename:Tcl_ObjInternalRep
internalRep	generic/tclDTrace.d	/^    } internalRep;$/;"	m	struct:Tcl_Obj	file:
internalToNormalizedProc	generic/tcl.h	/^    Tcl_FSInternalToNormalizedProc *internalToNormalizedProc;$/;"	m	struct:Tcl_Filesystem	typeref:typename:Tcl_FSInternalToNormalizedProc *
internal_fa	compat/zlib/contrib/minizip/unzip.h	/^    uLong internal_fa;          \/* internal file attributes        2 bytes *\/$/;"	m	struct:unz_file_info64_s	typeref:typename:uLong
internal_fa	compat/zlib/contrib/minizip/unzip.h	/^    uLong internal_fa;          \/* internal file attributes        2 bytes *\/$/;"	m	struct:unz_file_info_s	typeref:typename:uLong
internal_fa	compat/zlib/contrib/minizip/zip.h	/^    uLong       internal_fa;    \/* internal file attributes        2 bytes *\/$/;"	m	struct:__anon7add25d00108	typeref:typename:uLong
internal_state	compat/zlib/deflate.h	/^typedef struct internal_state {$/;"	s
internal_state	compat/zlib/zconf.h	/^#  define internal_state        z_internal_state$/;"	d
internal_state	compat/zlib/zconf.h.in	/^#  define internal_state        z_internal_state$/;"	d	file:
interp	generic/tcl.h	/^    Tcl_Interp *interp;		\/* Interpreter to use for error reporting, or$/;"	m	struct:Tcl_Parse	typeref:typename:Tcl_Interp *
interp	generic/tclBasic.c	/^    Tcl_Interp *interp;		\/* Interp this struct belongs to. *\/$/;"	m	struct:__anon6e1456070108	typeref:typename:Tcl_Interp *	file:
interp	generic/tclCmdIL.c	/^    Tcl_Interp *interp;		\/* The interpreter in which the sort is being$/;"	m	struct:__anond5eb1cce0308	typeref:typename:Tcl_Interp *	file:
interp	generic/tclConfig.c	/^    Tcl_Interp *interp;$/;"	m	struct:__anon46b45ffb0108	typeref:typename:Tcl_Interp *	file:
interp	generic/tclDate.h	/^    Tcl_Interp *interp;		\/* Tcl interpreter *\/$/;"	m	struct:ClockFmtScnCmdArgs	typeref:typename:Tcl_Interp *
interp	generic/tclEvent.c	/^    Tcl_Interp *interp;		\/* Interpreter in which error occurred. *\/$/;"	m	struct:__anon850510a70108	typeref:typename:Tcl_Interp *	file:
interp	generic/tclIO.c	/^    Tcl_Interp *interp;		\/* Interp that started the copy. *\/$/;"	m	struct:CopyState	typeref:typename:Tcl_Interp *	file:
interp	generic/tclIO.c	/^    Tcl_Interp *interp;		\/* The interp in which the lookup was done. *\/$/;"	m	struct:ResolvedChanName	typeref:typename:Tcl_Interp *	file:
interp	generic/tclIO.h	/^    Tcl_Interp *interp;		\/* In what interpreter to invoke script? *\/$/;"	m	struct:EventScriptRecord	typeref:typename:Tcl_Interp *
interp	generic/tclIOCmd.c	/^    Tcl_Interp *interp;		\/* Interpreter in which to run it. *\/$/;"	m	struct:__anon5b8cc1910108	typeref:typename:Tcl_Interp *	file:
interp	generic/tclIOGT.c	/^    Tcl_Interp *interp;		\/* Reference to the interpreter which created$/;"	m	struct:TransformChannelData	typeref:typename:Tcl_Interp *	file:
interp	generic/tclIORChan.c	/^    Tcl_Interp *interp;		\/* Reference to the interpreter containing the$/;"	m	struct:__anon92d8dd290108	typeref:typename:Tcl_Interp *	file:
interp	generic/tclIORTrans.c	/^    Tcl_Interp *interp;		\/* Reference to the interpreter containing the$/;"	m	struct:__anon21e740770208	typeref:typename:Tcl_Interp *	file:
interp	generic/tclInt.h	/^    Tcl_Interp *interp;		\/* The interpreter containing this$/;"	m	struct:Namespace	typeref:typename:Tcl_Interp *
interp	generic/tclInt.h	/^    struct Tcl_Interp *interp;	\/* Owning interpreter. *\/$/;"	m	struct:ExecEnv	typeref:struct:Tcl_Interp *
interp	generic/tclInterp.c	/^    Tcl_Interp *interp;		\/* The interpreter in which to execute the$/;"	m	struct:__anon913711770508	typeref:typename:Tcl_Interp *	file:
interp	generic/tclInterp.c	/^    Tcl_Interp *interp;		\/* The interpreter that the limit callback was$/;"	m	struct:__anon913711770608	typeref:typename:Tcl_Interp *	file:
interp	generic/tclLink.c	/^    Tcl_Interp *interp;		\/* Interpreter containing Tcl variable. *\/$/;"	m	struct:__anonfc2fcf730108	typeref:typename:Tcl_Interp *	file:
interp	generic/tclMain.c	/^    Tcl_Interp *interp;		\/* Interpreter that evaluates interactive$/;"	m	struct:__anonfdf182ea0308	typeref:typename:Tcl_Interp *	file:
interp	generic/tclOOInt.h	/^    Tcl_Interp *interp;		\/* Interpreter in which to compute the name of$/;"	m	struct:ProcedureMethod	typeref:typename:Tcl_Interp *
interp	generic/tclOOInt.h	/^    Tcl_Interp *interp;		\/* The interpreter this is attached to. *\/$/;"	m	struct:Foundation	typeref:typename:Tcl_Interp *
interp	generic/tclTest.c	/^    Tcl_Interp *interp;		\/* Interpreter in which command exists. *\/$/;"	m	struct:__anon0e9396a50108	typeref:typename:Tcl_Interp *	file:
interp	generic/tclTest.c	/^    Tcl_Interp *interp;		\/* Interpreter that will handle the event *\/$/;"	m	struct:__anon0e9396a50308	typeref:typename:Tcl_Interp *	file:
interp	generic/tclTest.c	/^    Tcl_Interp *interp;$/;"	m	struct:__anon0e9396a50208	typeref:typename:Tcl_Interp *	file:
interp	generic/tclTestABSList.c	/^    Tcl_Interp *interp; \/\/ used to evaluate gen script$/;"	m	struct:LgenSeries	typeref:typename:Tcl_Interp *	file:
interp	generic/tclThreadTest.c	/^    Tcl_Interp *interp;		\/* Main interpreter for this thread *\/$/;"	m	struct:ThreadSpecificData	typeref:typename:Tcl_Interp *	file:
interp	generic/tclTimer.c	/^    Tcl_Interp *interp;		\/* The interpreter for which this data is$/;"	m	struct:AfterAssocData	typeref:typename:Tcl_Interp *	file:
interp	generic/tclZlib.c	/^    Tcl_Interp *interp;$/;"	m	struct:__anon1d0b6d960208	typeref:typename:Tcl_Interp *	file:
interp	win/tclWinDde.c	/^    Tcl_Interp *interp;		\/* The interpreter attached to this name. *\/$/;"	m	struct:RegisteredInterp	typeref:typename:Tcl_Interp *	file:
interp	win/tclWinDde.c	/^    Tcl_Interp *interp;$/;"	m	struct:__anone96dc6f10108	typeref:typename:Tcl_Interp *	file:
interpAddToAccessPath	library/safe.tcl	/^proc ::safe::interpAddToAccessPath {child path} {$/;"	p	namespace:::safe
interpCmd	generic/tclInterp.c	/^    Tcl_Command interpCmd;	\/* Interpreter object command. *\/$/;"	m	struct:__anon913711770208	typeref:typename:Tcl_Command	file:
interpConfigure	library/safe.tcl	/^proc ::safe::interpConfigure {args} {$/;"	p	namespace:::safe
interpCreate	library/safe.tcl	/^proc ::safe::interpCreate {args} {$/;"	p	namespace:::safe
interpDelete	library/safe.tcl	/^proc ::safe::interpDelete {child} {$/;"	p	namespace:::safe
interpFindInAccessPath	library/safe.tcl	/^proc ::safe::interpFindInAccessPath {child path} {$/;"	p	namespace:::safe
interpHandle	generic/tclCompile.h	/^    TclHandle interpHandle;	\/* Handle for interpreter containing the$/;"	m	struct:ByteCode	typeref:typename:TclHandle
interpInfo	generic/tclInt.h	/^    void *interpInfo;		\/* Information used by tclInterp.c to keep$/;"	m	struct:Interp	typeref:typename:void *
interpInit	library/safe.tcl	/^proc ::safe::interpInit {args} {$/;"	p	namespace:::safe
interpListPtr	win/tclWinDde.c	/^    RegisteredInterp *interpListPtr;$/;"	m	struct:__anone96dc6f10208	typeref:typename:RegisteredInterp *	file:
interpOptionEnum	generic/tclInterp.c	/^    enum interpOptionEnum {$/;"	g	function:NRInterpCmd	file:
interpRefCount	generic/tclLoad.c	/^    int interpRefCount;		\/* How many times the library has been loaded$/;"	m	struct:LoadedLibrary	typeref:typename:int	file:
interpThreadCV	win/tclWinConsole.c	/^    CONDITION_VARIABLE interpThreadCV; \/* For awakening interpthread(s) *\/$/;"	m	struct:ConsoleHandleInfo	typeref:typename:CONDITION_VARIABLE	file:
interpTokenMap	unix/dltest/pkgua.c	/^    Tcl_HashTable interpTokenMap;$/;"	m	struct:ThreadSpecificData	typeref:typename:Tcl_HashTable	file:
interpTokenMapInitialised	unix/dltest/pkgua.c	/^    int interpTokenMapInitialised;$/;"	m	struct:ThreadSpecificData	typeref:typename:int	file:
intf	compat/zlib/zconf.h	/^#  define intf                  z_intf$/;"	d
intf	compat/zlib/zconf.h	/^typedef int   FAR intf;$/;"	t	typeref:typename:int FAR
intf	compat/zlib/zconf.h.in	/^#  define intf                  z_intf$/;"	d	file:
intf	compat/zlib/zconf.h.in	/^typedef int   FAR intf;$/;"	t	typeref:typename:int FAR	file:
invalidRealType	generic/tclLink.c	/^static const Tcl_ObjType invalidRealType = {$/;"	v	typeref:typename:const Tcl_ObjType	file:
invokeCmdFramePtr	generic/tclInt.h	/^    const CmdFrame *invokeCmdFramePtr;$/;"	m	struct:Interp	typeref:typename:const CmdFrame *
invokeObj2Command	generic/tclBasic.c	/^invokeObj2Command($/;"	f	typeref:typename:int	file:
invokeWord	generic/tclInt.h	/^    int invokeWord;		\/* Index of the word in the command which$/;"	m	struct:Interp	typeref:typename:int
io_mode	compat/zlib/contrib/iostream3/zfstream.h	/^  std::ios_base::openmode io_mode;$/;"	m	class:gzfilebuf	typeref:typename:std::ios_base::openmode
ioapi.$(HOST_OBJEXT)	unix/Makefile.in	/^ioapi.$(HOST_OBJEXT):$/;"	t
ioapi.$(HOST_OBJEXT)	win/Makefile.in	/^ioapi.$(HOST_OBJEXT):$/;"	t
iowin32.$(HOST_OBJEXT)	win/Makefile.in	/^iowin32.$(HOST_OBJEXT):$/;"	t
iowin32_h	compat/zlib/contrib/minizip/Makefile.am	/^iowin32_h = iowin32.h$/;"	m
iowin32_src	compat/zlib/contrib/minizip/Makefile.am	/^iowin32_src = iowin32.c$/;"	m
is-a-directive	tools/tcltk-man2html-utils.tcl	/^proc is-a-directive {line} {$/;"	p
is64bitOpenFunction	compat/zlib/contrib/minizip/unzip.c	/^    int is64bitOpenFunction;$/;"	m	struct:__anon3259ecee0208	typeref:typename:int	file:
isBce	generic/tclClockClassic.c	/^    int isBce;			\/* 1 if BCE *\/$/;"	m	struct:__anondf8925f30208	typeref:typename:int	file:
isBce	generic/tclDate.h	/^    int isBce;			\/* 1 if BCE *\/$/;"	m	struct:TclDateFields	typeref:typename:int
isClassesEnum	generic/tclCmdMZ.c	/^    enum isClassesEnum {$/;"	g	function:StringIsCmd	file:
isClassesEnum	generic/tclCompCmdsSZ.c	/^    enum isClassesEnum {$/;"	g	function:TclCompileStringIsCmd	file:
isCompressed	generic/tclZipfs.c	/^    int isCompressed;		\/* True if data is compressed *\/$/;"	m	struct:ZipChannel	typeref:typename:int	file:
isDirectory	generic/tclZipfs.c	/^    int isDirectory;		\/* 0 if file, 1 if directory, -1 if root *\/$/;"	m	struct:ZipEntry	typeref:typename:int	file:
isDirectory	generic/tclZipfs.c	/^    int isDirectory;		\/* Set to 1 if directory, or -1 if root *\/$/;"	m	struct:ZipChannel	typeref:typename:int	file:
isDouble	generic/tclArithSeries.c	/^    int isDouble;$/;"	m	struct:__anond76bba880108	typeref:typename:int	file:
isEmpty	generic/tclInt.h	/^	int (*isEmpty)(tclObjTypeInterfaceArgsStringIsEmpty);$/;"	m	struct:ObjInterface::string	typeref:typename:int (*)(tclObjTypeInterfaceArgsStringIsEmpty)
isEncrypted	generic/tclZipfs.c	/^    int isEncrypted;		\/* True if data is encrypted *\/$/;"	m	struct:ZipChannel	typeref:typename:int	file:
isEncrypted	generic/tclZipfs.c	/^    int isEncrypted;		\/* True if data is encrypted *\/$/;"	m	struct:ZipEntry	typeref:typename:int	file:
isFilter	generic/tclOOInt.h	/^    int isFilter;		\/* Whether this is a filter invocation. *\/$/;"	m	struct:MInvoke	typeref:typename:int
isIncreasing	generic/tclCmdIL.c	/^    int isIncreasing;		\/* Nonzero means sort in increasing order. *\/$/;"	m	struct:__anond5eb1cce0308	typeref:typename:int	file:
isLargeFile	compat/zlib/contrib/minizip/minizip.c	/^static int isLargeFile(const char* filename) {$/;"	f	typeref:typename:int	file:
isMemBuffer	generic/tclZipfs.c	/^    char isMemBuffer;		\/* When true, not a file but a memory buffer *\/$/;"	m	struct:ZipFile	typeref:typename:char	file:
isNativeObjectProc	generic/tcl.h	/^    int isNativeObjectProc;	\/* 1 if objProc was registered by a call to$/;"	m	struct:__anon937aefea0708	typeref:typename:int
isNonBlocking	unix/tclUnixPipe.c	/^    int isNonBlocking;		\/* Nonzero when the pipe is in nonblocking$/;"	m	struct:__anon004fe33e0108	typeref:typename:int	file:
isOptionsEnum	generic/tclCmdMZ.c	/^    enum isOptionsEnum {$/;"	g	function:StringIsCmd	file:
isProcCallFrame	generic/tclInt.h	/^    int isProcCallFrame;	\/* If 0, the frame was pushed to execute a$/;"	m	struct:CallFrame	typeref:typename:int
isPublic	generic/tclOOInt.h	/^    int isPublic;		\/* Whether the method is public by default. *\/$/;"	m	struct:DeclaredClassMethod	typeref:typename:int
isSorted	generic/tclInt.h	/^	int (*isSorted)(tclObjTypeInterfaceArgsListIsSorted);$/;"	m	struct:ObjInterface::list	typeref:typename:int (*)(tclObjTypeInterfaceArgsListIsSorted)
isZip64	compat/zlib/contrib/minizip/unzip.c	/^    int isZip64;$/;"	m	struct:__anon3259ecee0208	typeref:typename:int	file:
is_dir	compat/zlib/contrib/minizip/tinydir.h	/^	int is_dir;$/;"	m	struct:tinydir_file	typeref:typename:int
is_open	compat/zlib/contrib/iostream/zfstream.h	/^  inline int is_open() const { return (file !=NULL); }$/;"	f	class:gzfilebuf	typeref:typename:int
is_open	compat/zlib/contrib/iostream3/zfstream.h	/^  is_open() const { return (file != NULL); }$/;"	f	class:gzfilebuf	typeref:typename:bool
is_open	compat/zlib/contrib/iostream3/zfstream.h	/^  is_open() { return sb.is_open(); }$/;"	f	class:gzifstream	typeref:typename:bool
is_open	compat/zlib/contrib/iostream3/zfstream.h	/^  is_open() { return sb.is_open(); }$/;"	f	class:gzofstream	typeref:typename:bool
is_reg	compat/zlib/contrib/minizip/tinydir.h	/^	int is_reg;$/;"	m	struct:tinydir_file	typeref:typename:int
iscalnum	generic/regcustom.h	/^#define	iscalnum(/;"	d
iscalpha	generic/regcustom.h	/^#define	iscalpha(/;"	d
iscdigit	generic/regcustom.h	/^#define	iscdigit(/;"	d
isconstraintarc	generic/regc_nfa.c	/^isconstraintarc(struct arc * a)$/;"	f	typeref:typename:int	file:
iscspace	generic/regcustom.h	/^#define	iscspace(/;"	d
iso	generic/tclGetDate.y	/^iso	: isodate isosep isotime$/;"	l
iso	generic/tclGetDateClassic.y	/^iso	: tUNUMBER '-' tUNUMBER '-' tUNUMBER tZONE$/;"	l
iso8601Week	generic/tclClockClassic.c	/^    int iso8601Week;		\/* ISO8601 week number *\/$/;"	m	struct:__anondf8925f30208	typeref:typename:int	file:
iso8601Week	generic/tclDate.h	/^    int iso8601Week;		\/* ISO8601 week number *\/$/;"	m	struct:TclDateFields	typeref:typename:int
iso8601Year	generic/tclClockClassic.c	/^    int iso8601Year;		\/* ISO8601 week-based year *\/$/;"	m	struct:__anondf8925f30208	typeref:typename:int	file:
iso8601Year	generic/tclDate.h	/^    int iso8601Year;		\/* ISO8601 week-based year *\/$/;"	m	struct:TclDateFields	typeref:typename:int
isodate	generic/tclGetDate.y	/^isodate	: tISOBAS8 { \/* YYYYMMDD *\/$/;"	l
isosep	generic/tclGetDate.y	/^isosep	: 'T'|SP$/;"	l
isotime	generic/tclGetDate.y	/^isotime	: tISOBAS6 {$/;"	l
item	generic/tclGetDate.y	/^item	: time {$/;"	l
item	generic/tclGetDateClassic.y	/^item	: time {$/;"	l
itens	generic/tclStrToD.c	/^static const int itens [] = {$/;"	v	typeref:typename:const int[]	file:
iv	generic/tclStrToD.c	/^	Tcl_WideUInt iv;$/;"	m	union:MakeNaN::__anon93c67ca5020a	typeref:typename:Tcl_WideUInt	file:
iv	generic/tclStrToD.c	/^	Tcl_WideUInt iv;$/;"	m	union:TclInitDoubleConversion::__anon93c67ca5030a	typeref:typename:Tcl_WideUInt	file:
izstream	compat/zlib/contrib/iostream2/zstream.h	/^        izstream() : m_fp(0) {}$/;"	f	class:izstream
izstream	compat/zlib/contrib/iostream2/zstream.h	/^        izstream(FILE* fp) : m_fp(0) { open(fp); }$/;"	f	class:izstream
izstream	compat/zlib/contrib/iostream2/zstream.h	/^        izstream(const char* name) : m_fp(0) { open(name); }$/;"	f	class:izstream
izstream	compat/zlib/contrib/iostream2/zstream.h	/^class izstream$/;"	c
j	generic/tclCmdAH.c	/^    Tcl_Size j, maxj;		\/* Number of loop iterations. *\/$/;"	m	struct:ForeachState	typeref:typename:Tcl_Size	file:
jenkins_x	libtommath/bn_s_mp_rand_jenkins.c	/^static ranctx jenkins_x;$/;"	v	typeref:typename:ranctx	file:
joinLock	win/tclWinThrd.c	/^static CRITICAL_SECTION joinLock;$/;"	v	typeref:typename:CRITICAL_SECTION	file:
join_describe	tests-perf/listPerf.tcl	/^    proc join_describe {share_mode len} {$/;"	p	namespace:::perf::list
join_perf	tests-perf/listPerf.tcl	/^    proc join_perf {} {$/;"	p	namespace:::perf::list
jtPtr	generic/tclAssembly.c	/^    JumptableInfo* jtPtr;	\/* Jump table at the end of this basic block *\/$/;"	m	struct:BasicBlock	typeref:typename:JumptableInfo *	file:
julianDay	generic/tclClockClassic.c	/^    int julianDay;		\/* Julian Day Number in local time zone *\/$/;"	m	struct:__anondf8925f30208	typeref:typename:int	file:
julianDay	generic/tclDate.h	/^    Tcl_WideInt julianDay;	\/* Julian Day Number in local time zone *\/$/;"	m	struct:TclDateFields	typeref:typename:Tcl_WideInt
jump	generic/tclCompExpr.c	/^    JumpFixup jump;		\/* Pass this argument to matching calls of$/;"	m	struct:JumpList	typeref:typename:JumpFixup	file:
jumpLine	generic/tclAssembly.c	/^    int jumpLine;		\/* Line number in the input script of the$/;"	m	struct:BasicBlock	typeref:typename:int	file:
jumpOffset	generic/tclAssembly.c	/^    int jumpOffset;		\/* Bytecode offset of the 'jump' instruction$/;"	m	struct:BasicBlock	typeref:typename:int	file:
jumpTarget	generic/tclAssembly.c	/^    Tcl_Obj* jumpTarget;	\/* Jump target label if the jump target is$/;"	m	struct:BasicBlock	typeref:typename:Tcl_Obj *	file:
jumpType	generic/tclCompile.h	/^    TclJumpType jumpType;	\/* Indicates the kind of jump. *\/$/;"	m	struct:JumpFixup	typeref:typename:TclJumpType
k	libtommath/bn_mp_prime_rabin_miller_trials.c	/^   int k, t;$/;"	m	struct:__anon0cbcdfbb0108	typeref:typename:int	file:
kBufferSize	compat/zlib/contrib/dotzlib/DotZLib/CodecBase.cs	/^        protected const int kBufferSize = 16384;$/;"	f	class:DotZLib.CodecBase
kFinfoIsInvisible	macosx/tclMacOSXFCmd.c	/^#define kFinfoIsInvisible	/;"	d	file:
kIsInvisible	macosx/tclMacOSXFCmd.c	/^    kIsInvisible = 0x4000,$/;"	e	enum:__anon5fc3cb980203	file:
key	generic/tcl.h	/^    const char *key;		\/* Configuration key to register. ASCII$/;"	m	struct:Tcl_Config	typeref:typename:const char *
key	generic/tcl.h	/^    } key;			\/* MUST BE LAST FIELD IN RECORD!! *\/$/;"	m	struct:Tcl_HashEntry	typeref:union:Tcl_HashEntry::__anon937aefea080a
key	generic/tclInt.h	/^    Tcl_ThreadDataKey key;	\/* Key for per-thread data holding the$/;"	m	struct:ProcessGlobalValue	typeref:typename:Tcl_ThreadDataKey
key	generic/tclStrIdxTree.h	/^    Tcl_Obj *key;$/;"	m	struct:TclStrIdx	typeref:typename:Tcl_Obj *
key	generic/tclThreadStorage.c	/^    void *key;			\/* Key into the system TSD structure. The$/;"	m	struct:__anon4d1cb8920108	typeref:typename:void *	file:
key	tools/tsdPerf.c	/^static Tcl_ThreadDataKey key;$/;"	v	typeref:typename:Tcl_ThreadDataKey	file:
key	unix/tclUnixThrd.c	/^static pthread_key_t key;$/;"	v	typeref:typename:pthread_key_t	file:
key	win/nmakehlp.c	/^    char * key;$/;"	m	struct:list_item_t	typeref:typename:char *	file:
keyRecord	generic/tclThread.c	/^static SyncObjRecord keyRecord = {0, 0, NULL};$/;"	v	typeref:typename:SyncObjRecord	file:
keyStr	generic/tcl.h	/^    const char *keyStr;		\/* The key string that flags the option in the$/;"	m	struct:__anon937aefea0b08	typeref:typename:const char *
keyType	generic/tcl.h	/^    int keyType;		\/* Type of keys used in this table. It's$/;"	m	struct:Tcl_HashTable	typeref:typename:int
keyVarObj	generic/tclDictObj.c	/^    Tcl_Obj *keyVarObj;		\/* The name of the variable that will have$/;"	m	struct:__anond8412d640108	typeref:typename:Tcl_Obj *	file:
keys	compat/zlib/contrib/minizip/unzip.c	/^    unsigned long keys[3];     \/* keys defining the pseudo-random sequence *\/$/;"	m	struct:__anon3259ecee0208	typeref:typename:unsigned long[3]	file:
keys	compat/zlib/contrib/minizip/zip.c	/^    unsigned long keys[3];     \/* keys defining the pseudo-random sequence *\/$/;"	m	struct:__anon7add25cb0108	typeref:typename:unsigned long[3]	file:
keys	generic/tclZipfs.c	/^    unsigned long keys[3];	\/* Key for decryption *\/$/;"	m	struct:ZipChannel	typeref:typename:unsigned long[3]	file:
kini	generic/tclBasic.c	/^#define kini(/;"	d	file:
l	generic/tclLink.c	/^	long l;$/;"	m	union:__anonfc2fcf730108::__anonfc2fcf73020a	typeref:typename:long	file:
lGenObjCmd	generic/tclTestABSList.c	/^lGenObjCmd($/;"	f	typeref:typename:int	file:
lLStringObjCmd	generic/tclTestABSList.c	/^lLStringObjCmd($/;"	f	typeref:typename:int	file:
lParam	unix/tclSelectNotfy.c	/^    size_t lParam;		\/* Event-specific "long" parameter. *\/$/;"	m	struct:__anon69aa703c0308	typeref:typename:size_t	file:
lPrivate	unix/tclSelectNotfy.c	/^    int lPrivate;$/;"	m	struct:__anon69aa703c0308	typeref:typename:int	file:
lPtr	generic/tclLink.c	/^	long *lPtr;		\/* long array *\/$/;"	m	union:__anonfc2fcf730108::__anonfc2fcf73020a	typeref:typename:long *	file:
l_buf	compat/zlib/deflate.h	/^    uchf *l_buf;          \/* buffer for literals\/lengths *\/$/;"	m	struct:internal_state	typeref:typename:uchf *
l_desc	compat/zlib/deflate.h	/^    struct tree_desc_s l_desc;               \/* desc. for literal tree *\/$/;"	m	struct:internal_state	typeref:struct:tree_desc_s
labelHash	generic/tclAssembly.c	/^    Tcl_HashTable labelHash;	\/* Hash table whose keys are labels and whose$/;"	m	struct:AssemblyEnv	typeref:typename:Tcl_HashTable	file:
lacons	generic/regcomp.c	/^    struct subre *lacons;	\/* lookahead-constraint vector *\/$/;"	m	struct:vars	typeref:struct:subre *	file:
lacons	generic/regguts.h	/^    struct subre *lacons;	\/* lookahead-constraint vector *\/$/;"	m	struct:guts	typeref:struct:subre *
lambdaType	generic/tclProc.c	/^static const Tcl_ObjType lambdaType = {$/;"	v	typeref:typename:const Tcl_ObjType	file:
lang	unix/tclUnixInit.c	/^    const char *lang;$/;"	m	struct:__anonf052aa840508	typeref:typename:const char *	file:
langinfo	unix/tcl.m4	/^    AC_ARG_ENABLE(langinfo,$/;"	e
lappend_describe	tests-perf/listPerf.tcl	/^    proc lappend_describe {share_mode len num iters} {$/;"	p	namespace:::perf::list
lappend_perf	tests-perf/listPerf.tcl	/^    proc lappend_perf {} {$/;"	p	namespace:::perf::list
large	compat/zlib/examples/enough.c	/^    int large;          \/\/ largest code table so far$/;"	m	struct:__anonea7b679d0208	typeref:typename:int	file:
lassign_describe	tests-perf/listPerf.tcl	/^    proc lassign_describe {share_mode len num reps} {$/;"	p	namespace:::perf::list
lassign_perf	tests-perf/listPerf.tcl	/^    proc lassign_perf {} {$/;"	p	namespace:::perf::list
last	compat/zlib/contrib/inflate86/inffas86.c	/^\/* 24   12 *\/ unsigned char FAR *last;  \/*     r9   while in < last *\/$/;"	m	struct:inflate_fast::inffast_ar	typeref:typename:unsigned char FAR *	file:
last	compat/zlib/examples/gzlog.c	/^    off_t last;     \/* offset of last stored block first length byte *\/$/;"	m	struct:log	typeref:typename:off_t	file:
last	compat/zlib/inflate.h	/^    int last;                   \/* true if processing last block *\/$/;"	m	struct:inflate_state	typeref:typename:int
lastBase	generic/tclDate.h	/^    } lastBase;$/;"	m	struct:ClockClientData	typeref:struct:ClockClientData::__anone8f8f7280108
lastBgPtr	generic/tclEvent.c	/^    BgError *lastBgPtr;		\/* Last in list of all background errors$/;"	m	struct:__anon850510a70108	typeref:typename:BgError *	file:
lastCold	generic/rege_dfa.c	/^lastCold($/;"	f	typeref:typename:chr *	file:
lastError	win/tclWinConsole.c	/^    DWORD lastError;		\/* An error caused by the last background$/;"	m	struct:ConsoleHandleInfo	typeref:typename:DWORD	file:
lastError	win/tclWinSerial.c	/^    DWORD lastError;		\/* last error code, can be fetched with$/;"	m	struct:SerialInfo	typeref:typename:DWORD	file:
lastEventPtr	generic/tclNotify.c	/^    Tcl_Event *lastEventPtr;	\/* Last pending event, or NULL if none. *\/$/;"	m	struct:ThreadSpecificData	typeref:typename:Tcl_Event *	file:
lastEventTime	win/tclWinSerial.c	/^    unsigned long long lastEventTime;	\/* Time in milliseconds since last readable$/;"	m	struct:SerialInfo	typeref:typename:unsigned long long	file:
lastHandler	generic/tclAsync.c	/^static AsyncHandler *lastHandler = NULL;$/;"	v	typeref:typename:AsyncHandler *	file:
lastIdlePtr	generic/tclTimer.c	/^    IdleHandler *lastIdlePtr;	\/* Last in list (or NULL for empty list). *\/$/;"	m	struct:__anone9e75be60108	typeref:typename:IdleHandler *	file:
lastLocalPtr	generic/tclInt.h	/^    CompiledLocal *lastLocalPtr;\/* Pointer to the last allocated local$/;"	m	struct:Proc	typeref:typename:CompiledLocal *
lastPtr	generic/tclStrIdxTree.h	/^    TclStrIdx *lastPtr;$/;"	m	struct:TclStrIdxTree	typeref:typename:TclStrIdx *
lastPtr	generic/tclThreadAlloc.c	/^    Block *lastPtr;		\/* End of block list *\/$/;"	m	struct:__anone59fb5e80408	typeref:typename:Block *	file:
lastPtr	generic/tclThreadAlloc.c	/^    Tcl_Obj *lastPtr;		\/* Last object in this cache *\/$/;"	m	struct:Cache	typeref:typename:Tcl_Obj *	file:
lastPtr	win/tclWinThrd.c	/^    struct ThreadSpecificData *lastPtr;$/;"	m	struct:__anon3cc991560108	typeref:struct:ThreadSpecificData *	file:
lastRefresh	generic/tclClock.c	/^    long lastRefresh;		\/* Used for latency before next refresh. *\/$/;"	m	struct:ClockTzStatic	typeref:typename:long	file:
lastRefresh	generic/tclClock.c	/^    long long lastRefresh;	\/* Used for latency before next refresh. *\/$/;"	m	struct:ClockTzStatic	typeref:typename:long long	file:
lastSetupTZData	generic/tclDate.h	/^    Tcl_Obj *lastSetupTZData;$/;"	m	struct:ClockClientData	typeref:typename:Tcl_Obj *
lastSetupTimeZone	generic/tclDate.h	/^    Tcl_Obj *lastSetupTimeZone;$/;"	m	struct:ClockClientData	typeref:typename:Tcl_Obj *
lastSetupTimeZoneUnnorm	generic/tclDate.h	/^    Tcl_Obj *lastSetupTimeZoneUnnorm;$/;"	m	struct:ClockClientData	typeref:typename:Tcl_Obj *
lastTZEpoch	generic/tclDate.h	/^    size_t lastTZEpoch;$/;"	m	struct:ClockClientData	typeref:typename:size_t
lastTZOffsCache	generic/tclDate.h	/^    ClockLastTZOffs lastTZOffsCache[2];$/;"	m	struct:ClockClientData	typeref:typename:ClockLastTZOffs[2]
lastTimerId	generic/tclTimer.c	/^    int lastTimerId;		\/* Timer identifier of most recently created$/;"	m	struct:__anone9e75be60108	typeref:typename:int	file:
lastType	win/tclWinReg.c	/^static DWORD lastType = REG_RESOURCE_LIST;$/;"	v	typeref:typename:DWORD	file:
lastUsedLocale	generic/tclDate.h	/^    Tcl_Obj *lastUsedLocale;$/;"	m	struct:ClockClientData	typeref:typename:Tcl_Obj *
lastUsedLocaleDict	generic/tclDate.h	/^    Tcl_Obj *lastUsedLocaleDict;$/;"	m	struct:ClockClientData	typeref:typename:Tcl_Obj *
lastUsedLocaleUnnorm	generic/tclDate.h	/^    Tcl_Obj *lastUsedLocaleUnnorm;$/;"	m	struct:ClockClientData	typeref:typename:Tcl_Obj *
lastValue	generic/tclLink.c	/^    } lastValue;		\/* Last known value of C variable; used to$/;"	m	struct:__anonfc2fcf730108	typeref:union:__anonfc2fcf730108::__anonfc2fcf73020a	file:
last_block	compat/zlib/contrib/minizip/zip.c	/^    linkedlist_datablock_internal* last_block;$/;"	m	struct:linkedlist_data_s	typeref:typename:linkedlist_datablock_internal *	file:
last_column	generic/tclDate.c	/^  int last_column;$/;"	m	struct:YYLTYPE	typeref:typename:int	file:
last_column	generic/tclDateClassic.c	/^  int last_column;$/;"	m	struct:YYLTYPE	typeref:typename:int	file:
last_flush	compat/zlib/deflate.h	/^    int   last_flush;    \/* value of flush param for previous deflate call *\/$/;"	m	struct:internal_state	typeref:typename:int
last_line	generic/tclDate.c	/^  int last_line;$/;"	m	struct:YYLTYPE	typeref:typename:int	file:
last_line	generic/tclDateClassic.c	/^  int last_line;$/;"	m	struct:YYLTYPE	typeref:typename:int	file:
lastnopr	generic/regexec.c	/^    chr *lastnopr;		\/* location of last cache-flushed NOPROGRESS *\/$/;"	m	struct:dfa	typeref:typename:chr *	file:
lastpost	generic/regexec.c	/^    chr *lastpost;		\/* location of last cache-flushed success *\/$/;"	m	struct:dfa	typeref:typename:chr *	file:
lastseen	generic/regexec.c	/^    chr *lastseen;		\/* last entered on arrival here *\/$/;"	m	struct:sset	typeref:typename:chr *	file:
lasttype	generic/regcomp.c	/^    int lasttype;		\/* type of previous token *\/$/;"	m	struct:vars	typeref:typename:int	file:
layer1	tools/tclsh.svg	/^     transform="translate(-311.79308,-365.73272)">$/;"	i
lcode	compat/zlib/contrib/inflate86/inffas86.c	/^\/* 64   32 *\/ code const FAR *lcode;    \/* ebp rbp  local strm->lencode *\/$/;"	m	struct:inflate_fast::inffast_ar	typeref:typename:code const FAR *	file:
leave	compat/zlib/configure	/^leave()$/;"	f
left	compat/zlib/contrib/blast/blast.c	/^    unsigned left;              \/* available input at in *\/$/;"	m	struct:state	typeref:typename:unsigned	file:
left	compat/zlib/examples/gzappend.c	/^    unsigned left;              \/* bytes available at next *\/$/;"	m	struct:__anon9d4ca4100108	typeref:typename:unsigned	file:
left	compat/zlib/examples/gzjoin.c	/^    unsigned left;          \/* bytes remaining at next *\/$/;"	m	struct:__anon52a4be880108	typeref:typename:unsigned	file:
left	generic/regguts.h	/^    struct subre *left;		\/* left child, if any (also freelist chain) *\/$/;"	m	struct:subre	typeref:struct:subre *
left	generic/tclCompExpr.c	/^    int left;			\/* "Pointer" to the left operand. *\/$/;"	m	struct:__anon882f36730108	typeref:typename:int	file:
legacyFreeProc	generic/tclInt.h	/^    void (*legacyFreeProc) (void);$/;"	m	struct:Interp	typeref:typename:void (*)(void)
legacyResult	generic/tclInt.h	/^    const char *legacyResult;$/;"	m	struct:Interp	typeref:typename:const char *
len	compat/zlib/contrib/inflate86/inffas86.c	/^\/*108   64 *\/ unsigned len;             \/*     r14  match length *\/$/;"	m	struct:inflate_fast::inffast_ar	typeref:typename:unsigned	file:
len	compat/zlib/deflate.h	/^        ush  len;        \/* length of bit string *\/$/;"	m	union:ct_data_s::__anond731f1a3020a	typeref:typename:ush
len	compat/zlib/examples/enough.c	/^    size_t len;             \/\/ allocated length of bit vector in octets$/;"	m	struct:tab	typeref:typename:size_t	file:
len	compat/zlib/examples/enough.c	/^    size_t len;         \/\/ length of string, not including terminating zero$/;"	m	struct:__anonea7b679d0108	typeref:typename:size_t	file:
len	generic/tclArithSeries.c	/^    Tcl_Size len;$/;"	m	struct:__anond76bba880108	typeref:typename:Tcl_Size	file:
len	generic/tclInt.h	/^    Tcl_Size len;		\/* ... and its length. *\/$/;"	m	struct:CmdFrame	typeref:typename:Tcl_Size
len	generic/tclTestABSList.c	/^    Tcl_Size len;       \/\/ list length$/;"	m	struct:LgenSeries	typeref:typename:Tcl_Size	file:
lenbits	compat/zlib/inflate.h	/^    unsigned lenbits;           \/* index bits for lencode *\/$/;"	m	struct:inflate_state	typeref:typename:unsigned
lencode	compat/zlib/inflate.h	/^    code const FAR *lencode;    \/* starting table for length\/literal codes *\/$/;"	m	struct:inflate_state	typeref:typename:code const FAR *
lenfix	compat/zlib/contrib/infback9/inffix9.h	/^    static const code lenfix[512] = {$/;"	v	typeref:typename:const code[512]
lenfix	compat/zlib/inffixed.h	/^    static const code lenfix[512] = {$/;"	v	typeref:typename:const code[512]
length	compat/zlib/examples/zran.h	/^    off_t length;       \/\/ total length of uncompressed data$/;"	m	struct:deflate_index	typeref:typename:off_t
length	compat/zlib/inflate.h	/^    unsigned length;            \/* literal or length of data to copy *\/$/;"	m	struct:inflate_state	typeref:typename:unsigned
length	generic/tcl.h	/^    Tcl_Size length;		\/* Number of bytes in string excluding$/;"	m	struct:Tcl_DString	typeref:typename:Tcl_Size
length	generic/tcl.h	/^    Tcl_Size length;		\/* The number of bytes at *bytes, not$/;"	m	struct:Tcl_Obj	typeref:typename:Tcl_Size
length	generic/tclBasic.c	/^    Tcl_Size length;		\/* Length of the above error message. *\/$/;"	m	struct:__anon6e1456070108	typeref:typename:Tcl_Size	file:
length	generic/tclCkalloc.c	/^    size_t length;$/;"	m	struct:mem_header	typeref:typename:size_t	file:
length	generic/tclCompile.h	/^    Tcl_Size length;		\/* Size of array *\/$/;"	m	struct:__anone79d5a530708	typeref:typename:Tcl_Size
length	generic/tclDTrace.d	/^    Tcl_Size length;$/;"	m	struct:Tcl_Obj	file:
length	generic/tclIORChan.c	/^    Tcl_WideInt length;		\/* I: Length of file. *\/$/;"	m	struct:ForwardParamTruncate	typeref:typename:Tcl_WideInt	file:
length	generic/tclInt.h	/^	int (*length)(tclObjTypeInterfaceArgsListLength);$/;"	m	struct:ObjInterface::list	typeref:typename:int (*)(tclObjTypeInterfaceArgsListLength)
length	generic/tclInt.h	/^	int (*length)(tclObjTypeInterfaceArgsStringLength);$/;"	m	struct:ObjInterface::string	typeref:typename:int (*)(tclObjTypeInterfaceArgsStringLength)
length	generic/tclInt.h	/^    Tcl_Size length;		\/* Length of array. *\/$/;"	m	struct:__anon1eb6b3550608	typeref:typename:Tcl_Size
length	generic/tclStrIdxTree.h	/^    Tcl_Size length;$/;"	m	struct:TclStrIdx	typeref:typename:Tcl_Size
length	generic/tclTrace.c	/^    Tcl_Size length;		\/* Number of non-NUL chars. in command. *\/$/;"	m	struct:__anonfe0b53740108	typeref:typename:Tcl_Size	file:
length	generic/tclTrace.c	/^    Tcl_Size length;		\/* Number of non-NUL chars. in command. *\/$/;"	m	struct:__anonfe0b53740308	typeref:typename:Tcl_Size	file:
length	generic/tclZipfs.c	/^    size_t length;		\/* Length of memory mapped file *\/$/;"	m	struct:ZipFile	typeref:typename:size_t	file:
length	win/tclWinConsole.c	/^    Tcl_Size length;		\/* Number of RingBufferChar*\/$/;"	m	struct:RingBuffer	typeref:typename:Tcl_Size	file:
lengthProc	generic/tclDTrace.d	/^    void *lengthProc;$/;"	m	struct:Tcl_ObjType	file:
lengthProc	generic/tclEncoding.c	/^    LengthProc *lengthProc;	\/* Function to compute length of$/;"	m	struct:__anondb7a8e8c0108	typeref:typename:LengthProc *	file:
lens	compat/zlib/contrib/infback9/inflate9.h	/^    unsigned short lens[320];   \/* temporary storage for code lengths *\/$/;"	m	struct:inflate_state	typeref:typename:unsigned short[320]
lens	compat/zlib/inflate.h	/^    unsigned short lens[320];   \/* temporary storage for code lengths *\/$/;"	m	struct:inflate_state	typeref:typename:unsigned short[320]
level	compat/zlib/deflate.h	/^    int level;    \/* compression level (1..9) *\/$/;"	m	struct:internal_state	typeref:typename:int
level	compat/zlib/gzguts.h	/^    int level;              \/* compression level *\/$/;"	m	struct:__anon361a15920108	typeref:typename:int
level	generic/tclInt.h	/^    Tcl_Size level;		\/* Level of this procedure, for "uplevel"$/;"	m	struct:CallFrame	typeref:typename:Tcl_Size
level	generic/tclInt.h	/^    Tcl_Size level;		\/* Only trace commands at nesting level less$/;"	m	struct:Trace	typeref:typename:Tcl_Size
level	generic/tclInt.h	/^    int level;			\/* Number of frames in stack, prevent O(n)$/;"	m	struct:CmdFrame	typeref:typename:int
level	generic/tclZlib.c	/^    int level;			\/* Default 5, 0-9 *\/$/;"	m	struct:__anon1d0b6d960208	typeref:typename:int	file:
levelObj	generic/tclZlib.c	/^#define levelObj	/;"	d	file:
levelReferenceType	generic/tclProc.c	/^static ObjectType levelReferenceType = {$/;"	v	typeref:typename:ObjectType	file:
levelReferenceTypePtr	generic/tclProc.c	/^Tcl_ObjType *levelReferenceTypePtr = (Tcl_ObjType *)&levelReferenceType;$/;"	v	typeref:typename:Tcl_ObjType *
lexcon	generic/regcomp.c	/^    int lexcon;			\/* lexical context type (see lex.c) *\/$/;"	m	struct:vars	typeref:typename:int	file:
lexdigits	generic/regc_lex.c	/^lexdigits($/;"	f	typeref:typename:int	file:
lexeme	generic/tclCompExpr.c	/^    unsigned char lexeme;	\/* Code that identifies the operator. *\/$/;"	m	struct:__anon882f36730108	typeref:typename:unsigned char	file:
lexescape	generic/regc_lex.c	/^lexescape($/;"	f	typeref:typename:int	file:
lexnest	generic/regc_lex.c	/^lexnest($/;"	f	typeref:typename:void	file:
lexstart	generic/regc_lex.c	/^lexstart($/;"	f	typeref:typename:void	file:
lexword	generic/regc_lex.c	/^lexword($/;"	f	typeref:typename:void	file:
lgen	generic/tclTestABSList.c	/^lgen($/;"	f	typeref:typename:Tcl_Obj *	file:
lgenObjectType	generic/tclTestABSList.c	/^static ObjectType lgenObjectType = {$/;"	v	typeref:typename:ObjectType	file:
lgenSeriesObjIndex	generic/tclTestABSList.c	/^lgenSeriesObjIndex($/;"	f	typeref:typename:int	file:
lgenSeriesObjLength	generic/tclTestABSList.c	/^lgenSeriesObjLength(TCL_UNUSED(Tcl_Interp *), Tcl_Obj *objPtr, Tcl_Size *lenPtr)$/;"	f	typeref:typename:int	file:
lgenTypePtr	generic/tclTestABSList.c	/^static Tcl_ObjType *lgenTypePtr = (Tcl_ObjType *)&lgenObjectType;$/;"	v	typeref:typename:Tcl_ObjType *	file:
lib	compat/zlib/nintendods/Makefile	/^lib:$/;"	t
lib_LTLIBRARIES	compat/zlib/contrib/minizip/Makefile.am	/^lib_LTLIBRARIES = libminizip.la$/;"	m
libdir	compat/zlib/Makefile.in	/^libdir = ${exec_prefix}\/lib$/;"	m
libdir	compat/zlib/contrib/minizip/minizip.pc.in	/^libdir=@libdir@$/;"	v
libdir	compat/zlib/zlib.pc.in	/^libdir=@libdir@$/;"	v
libdir	libtommath/libtommath.pc.in	/^libdir=${prefix}\/@CMAKE_INSTALL_LIBDIR@$/;"	v
libdir	unix/Makefile.in	/^libdir			= @libdir@$/;"	m
libdir	unix/tcl.pc.in	/^libdir=@libdir@$/;"	v
libdir	win/Makefile.in	/^libdir			= @libdir@$/;"	m
libdir_native	win/Makefile.in	/^libdir_native	= $(shell $(CYGPATH) '$(libdir)')$/;"	m
libfile	unix/tcl.pc.in	/^libfile=@TCL_LIB_FILE@$/;"	v
libminizip.la	compat/zlib/contrib/minizip/Makefile.am	/^lib_LTLIBRARIES = libminizip.la$/;"	T	directory:lib
libminizip_la	compat/zlib/contrib/minizip/Makefile.am	/^lib_LTLIBRARIES = libminizip.la$/;"	T	directory:lib
libminizip_la_LDFLAGS	compat/zlib/contrib/minizip/Makefile.am	/^libminizip_la_LDFLAGS = $(AM_LDFLAGS) -version-info 1:0:0 -lz$/;"	m
libminizip_la_SOURCES	compat/zlib/contrib/minizip/Makefile.am	/^libminizip_la_SOURCES = \\$/;"	m
libraries	unix/Makefile.in	/^libraries:$/;"	t
libraries	win/Makefile.in	/^libraries:$/;"	t
library	tools/genStubs.tcl	/^proc genStubs::library {name} {$/;"	p	namespace:genStubs
libraryPath	generic/tclEncoding.c	/^static ProcessGlobalValue libraryPath = {$/;"	v	typeref:typename:ProcessGlobalValue	file:
libraryPtr	generic/tclLoad.c	/^    LoadedLibrary *libraryPtr;	\/* Points to detailed information about$/;"	m	struct:InterpLibrary	typeref:typename:LoadedLibrary *	file:
libs	generic/tclIcu.c	/^    Tcl_LoadHandle      libs[2];$/;"	m	struct:__anon1eb0af660108	typeref:typename:Tcl_LoadHandle[2]	file:
libtommath	libtommath/CMakeLists.txt	/^project(libtommath$/;"	p
libtommath	libtommath/README.md	/^# libtommath$/;"	c
libtommath	libtommath/libtommath.pc.in	/^Name: LibTomMath$/;"	p
libz.a	compat/zlib/Makefile.in	/^libz.a: $(OBJS)$/;"	t
lifetimeCount	generic/tclInt.h	/^    size_t lifetimeCount[32];	\/* ByteCode lifetime distribution (ms). *\/$/;"	m	struct:ByteCodeStats	typeref:typename:size_t[32]
limit	compat/zlib/test/infcover.c	/^    size_t limit;               \/* memory allocation limit, or 0 if no limit *\/$/;"	m	struct:mem_zone	typeref:typename:size_t	file:
limit	generic/tclIORTrans.c	/^    struct ForwardParamLimit limit;$/;"	m	union:ForwardParam	typeref:struct:ForwardParamLimit	file:
limit	generic/tclInt.h	/^    } limit;$/;"	m	struct:Interp	typeref:struct:Interp::__anon1eb6b3550808
lindex_describe	tests-perf/listPerf.tcl	/^    proc lindex_describe {share_mode len at} {$/;"	p	namespace:::perf::list
lindex_perf	tests-perf/listPerf.tcl	/^    proc lindex_perf {} {$/;"	p	namespace:::perf::list
line	generic/tclCkalloc.c	/^    int line;$/;"	m	struct:mem_header	typeref:typename:int	file:
line	generic/tclCompile.h	/^    Tcl_Size *line;		\/* Line information for all words in the$/;"	m	struct:__anone79d5a530408	typeref:typename:Tcl_Size *
line	generic/tclCompile.h	/^    Tcl_Size line;		\/* First line of the script, based on the$/;"	m	struct:CompileEnv	typeref:typename:Tcl_Size
line	generic/tclInt.h	/^    Tcl_Size *line;		\/* Lines the words of the command start on. *\/$/;"	m	struct:CmdFrame	typeref:typename:Tcl_Size *
line	generic/tclObj.c	/^    int line;			\/* Line number in the source file; used for$/;"	m	struct:__anon1f1c87400108	typeref:typename:int	file:
lineBCPtr	generic/tclInt.h	/^    Tcl_HashTable *lineBCPtr;	\/* This table remembers for each ByteCode$/;"	m	struct:Interp	typeref:typename:Tcl_HashTable *
lineCLPtr	generic/tclObj.c	/^    Tcl_HashTable *lineCLPtr;   \/* This table remembers for each Tcl_Obj$/;"	m	struct:__anon1f1c87400208	typeref:typename:Tcl_HashTable *	file:
lineLABCPtr	generic/tclInt.h	/^    Tcl_HashTable *lineLABCPtr;	\/* See Interp.lineLABCPtr *\/$/;"	m	struct:CorContext	typeref:typename:Tcl_HashTable *
lineLABCPtr	generic/tclInt.h	/^    Tcl_HashTable *lineLABCPtr;	\/* See Interp.lineLABCPtr *\/$/;"	m	struct:CoroutineData	typeref:typename:Tcl_HashTable *
lineLABCPtr	generic/tclInt.h	/^    Tcl_HashTable *lineLABCPtr;	\/* Tcl_Obj* (by exact pointer) -> CFWordBC* *\/$/;"	m	struct:Interp	typeref:typename:Tcl_HashTable *
lineLAPtr	generic/tclInt.h	/^    Tcl_HashTable *lineLAPtr;	\/* This table remembers for each argument of a$/;"	m	struct:Interp	typeref:typename:Tcl_HashTable *
linePBodyPtr	generic/tclInt.h	/^    Tcl_HashTable *linePBodyPtr;\/* This table remembers for each statically$/;"	m	struct:Interp	typeref:typename:Tcl_HashTable *
link	win/tclWinInt.h	/^    struct TCLEXCEPTION_REGISTRATION *link;$/;"	m	struct:TCLEXCEPTION_REGISTRATION	typeref:struct:TCLEXCEPTION_REGISTRATION *
linkProc	generic/tcl.h	/^    Tcl_FSLinkProc *linkProc;	\/* Called by 'Tcl_FSLink()'. NULL if reading or$/;"	m	struct:Tcl_Filesystem	typeref:typename:Tcl_FSLinkProc *
linkPtr	generic/tclInt.h	/^	struct Var *linkPtr;	\/* If this is a global variable being referred$/;"	m	union:Var::__anon1eb6b355010a	typeref:struct:Var *
linkedlist_data	compat/zlib/contrib/minizip/zip.c	/^} linkedlist_data;$/;"	t	typeref:struct:linkedlist_data_s	file:
linkedlist_data_s	compat/zlib/contrib/minizip/zip.c	/^typedef struct linkedlist_data_s$/;"	s	file:
linkedlist_datablock_internal	compat/zlib/contrib/minizip/zip.c	/^} linkedlist_datablock_internal;$/;"	t	typeref:struct:linkedlist_datablock_internal_s	file:
linkedlist_datablock_internal_s	compat/zlib/contrib/minizip/zip.c	/^typedef struct linkedlist_datablock_internal_s$/;"	s	file:
linkname	compat/zlib/contrib/untgz/untgz.c	/^  char linkname[100];           \/* 157 *\/$/;"	m	struct:tar_header	typeref:typename:char[100]	file:
linsert_describe	tests-perf/listPerf.tcl	/^    proc linsert_describe {share_mode len at num iters} {$/;"	p	namespace:::perf::list
linsert_perf	tests-perf/listPerf.tcl	/^    proc linsert_perf {} {$/;"	p	namespace:::perf::list
list	compat/zlib/examples/zran.h	/^    point_t *list;      \/\/ allocated list of access points$/;"	m	struct:deflate_index	typeref:typename:point_t *
list	generic/tclInt.h	/^    struct list {$/;"	s	struct:ObjInterface
list	generic/tclInt.h	/^    } list;$/;"	m	struct:ObjInterface	typeref:struct:ObjInterface::list
list	generic/tclOOCall.c	/^    DefineEntry *list;$/;"	m	struct:DefineChain	typeref:typename:DefineEntry *	file:
list	generic/tclThread.c	/^    void **list;		\/* List of pointers *\/$/;"	m	struct:__anone579f3dd0108	typeref:typename:void **	file:
list	library/tm.tcl	/^proc ::tcl::tm::list {} {$/;"	p	namespace:::tcl::tm
listLockPtr	generic/tclThreadAlloc.c	/^static Tcl_Mutex *listLockPtr;$/;"	v	typeref:typename:Tcl_Mutex *	file:
listPtr	generic/tclOOProp.c	/^    Tcl_Obj *listPtr;		\/* Holds references to names. *\/$/;"	m	struct:GPNCache	typeref:typename:Tcl_Obj *	file:
listVolumesProc	generic/tcl.h	/^    Tcl_FSListVolumesProc *listVolumesProc;$/;"	m	struct:Tcl_Filesystem	typeref:typename:Tcl_FSListVolumesProc *
listYears	tools/makeTestCases.tcl	/^proc listYears { startOfYearArray } {$/;"	p
list_describe	tests-perf/listPerf.tcl	/^    proc list_describe {len text} {$/;"	p	namespace:::perf::list
list_free	win/nmakehlp.c	/^list_free(list_item_t **listPtrPtr)$/;"	f	typeref:typename:void	file:
list_insert	win/nmakehlp.c	/^list_insert(list_item_t **listPtrPtr, const char *key, const char *value)$/;"	f	typeref:typename:list_item_t *	file:
list_item_t	win/nmakehlp.c	/^typedef struct list_item_t {$/;"	s	file:
list_item_t	win/nmakehlp.c	/^} list_item_t;$/;"	t	typeref:struct:list_item_t	file:
list_options	generic/tclZipfs.c	/^    enum list_options { OPT_GLOB, OPT_REGEXP };$/;"	g	function:ZipFSListObjCmd	file:
list_perf	tests-perf/listPerf.tcl	/^    proc list_perf {} {$/;"	p	namespace:::perf::list
listobjCmdIndex	generic/tclTestObj.c	/^    enum listobjCmdIndex {$/;"	g	function:TestlistobjCmd	file:
lit_bufsize	compat/zlib/deflate.h	/^    uInt  lit_bufsize;$/;"	m	struct:internal_state	typeref:typename:uInt
litarg	generic/tclInt.h	/^    const struct CFWordBC *litarg;$/;"	m	struct:CmdFrame	typeref:typename:const struct CFWordBC *
literalArrayEnd	generic/tclCompile.h	/^    Tcl_Size literalArrayEnd;	\/* Index just after last obj array entry. *\/$/;"	m	struct:CompileEnv	typeref:typename:Tcl_Size
literalArrayNext	generic/tclCompile.h	/^    Tcl_Size literalArrayNext;	\/* Index of next free object array entry. *\/$/;"	m	struct:CompileEnv	typeref:typename:Tcl_Size
literalArrayPtr	generic/tclCompile.h	/^    LiteralEntry *literalArrayPtr;$/;"	m	struct:CompileEnv	typeref:typename:LiteralEntry *
literalCount	generic/tclInt.h	/^    size_t literalCount[32];	\/* Distribution of literal string sizes. *\/$/;"	m	struct:ByteCodeStats	typeref:typename:size_t[32]
literalTable	generic/tclInt.h	/^    LiteralTable literalTable;	\/* Contains LiteralEntry's describing all Tcl$/;"	m	struct:Interp	typeref:typename:LiteralTable
literals	generic/tclClockClassic.c	/^    Tcl_Obj **literals;		\/* Pool of object literals. *\/$/;"	m	struct:__anondf8925f30108	typeref:typename:Tcl_Obj **	file:
literals	generic/tclClockClassic.c	/^static const char *const literals[] = {$/;"	v	typeref:typename:const char * const[]	file:
literals	generic/tclDate.h	/^    Tcl_Obj **literals;		\/* Pool of object literals (common, locale independent). *\/$/;"	m	struct:ClockClientData	typeref:typename:Tcl_Obj **
lldb	unix/Makefile.in	/^lldb: ${TCL_EXE}$/;"	t
lldb-test	unix/Makefile.in	/^lldb-test: ${TCLTEST_EXE}$/;"	t
llength_describe	tests-perf/listPerf.tcl	/^    proc llength_describe {share_mode len} {$/;"	p	namespace:::perf::list
llength_perf	tests-perf/listPerf.tcl	/^    proc llength_perf {} {$/;"	p	namespace:::perf::list
lm_init	compat/zlib/deflate.c	/^local void lm_init(deflate_state *s) {$/;"	f	typeref:typename:local void
lmap_describe	tests-perf/listPerf.tcl	/^    proc lmap_describe {share_mode len} {$/;"	p	namespace:::perf::list
lmap_perf	tests-perf/listPerf.tcl	/^    proc lmap_perf {} {$/;"	p	namespace:::perf::list
lmask	compat/zlib/contrib/inflate86/inffas86.c	/^\/*100   56 *\/ unsigned lmask;           \/*     r12  mask for lcode *\/$/;"	m	struct:inflate_fast::inffast_ar	typeref:typename:unsigned	file:
lnz	libtommath/bn_mp_cnt_lsb.c	/^static const int lnz[16] = {$/;"	v	typeref:typename:const int[16]	file:
load	compat/zlib/contrib/puff/pufftest.c	/^local void *load(const char *name, size_t *len)$/;"	f	typeref:typename:local void *
load	unix/tcl.m4	/^    AC_ARG_ENABLE(load,$/;"	e
loadFileProc	generic/tcl.h	/^    Tcl_FSLoadFileProc *loadFileProc;$/;"	m	struct:Tcl_Filesystem	typeref:typename:Tcl_FSLoadFileProc *
loadFiles	tools/tclZIC.tcl	/^proc loadFiles {dir} {$/;"	p
loadHandle	generic/tclLoad.c	/^    Tcl_LoadHandle loadHandle;	\/* Token for the loaded file which should be$/;"	m	struct:LoadedLibrary	typeref:typename:Tcl_LoadHandle	file:
loadOptionsEnum	generic/tclLoad.c	/^    enum loadOptionsEnum {$/;"	g	function:Tcl_LoadObjCmd	file:
loadZIC	tools/tclZIC.tcl	/^proc loadZIC {fileName} {$/;"	p
loc	generic/tclCompile.h	/^    ECL *loc;			\/* Command word locations (lines). *\/$/;"	m	struct:__anone79d5a530508	typeref:typename:ECL *
loc	generic/tclInt.h	/^    Tcl_Size loc[TCLFLEXARRAY];\/* Table of locations, as character offsets.$/;"	m	struct:ContLineLoc	typeref:typename:Tcl_Size[]
local	compat/zlib/contrib/blast/blast.c	/^#define local static            \/* for local /;"	d	file:
local	compat/zlib/contrib/minizip/unzip.c	/^#  define local /;"	d	file:
local	compat/zlib/contrib/minizip/zip.c	/^#  define local /;"	d	file:
local	compat/zlib/contrib/puff/puff.c	/^#define local static            \/* for local /;"	d	file:
local	compat/zlib/contrib/puff/pufftest.c	/^#define local /;"	d	file:
local	compat/zlib/examples/enough.c	/^#define local /;"	d	file:
local	compat/zlib/examples/fitblk.c	/^#define local /;"	d	file:
local	compat/zlib/examples/gun.c	/^#define local /;"	d	file:
local	compat/zlib/examples/gzappend.c	/^#define local /;"	d	file:
local	compat/zlib/examples/gzjoin.c	/^#define local /;"	d	file:
local	compat/zlib/examples/gzlog.c	/^#define local /;"	d	file:
local	compat/zlib/examples/gznorm.c	/^#define local /;"	d	file:
local	compat/zlib/gzguts.h	/^#  define local /;"	d
local	compat/zlib/test/infcover.c	/^#define local /;"	d	file:
local	compat/zlib/test/minigzip.c	/^#  define local /;"	d	file:
local	compat/zlib/test/minigzip.c	/^#  define local$/;"	d	file:
local	compat/zlib/zutil.h	/^#  define local /;"	d
localCachePtr	generic/tclCompile.h	/^    LocalCache *localCachePtr;	\/* Pointer to the start of the cached variable$/;"	m	struct:ByteCode	typeref:typename:LocalCache *
localCachePtr	generic/tclInt.h	/^    LocalCache *localCachePtr;	\/* Pointer to the start of the cached variable$/;"	m	struct:CallFrame	typeref:typename:LocalCache *
localLitTable	generic/tclCompile.h	/^    LiteralTable localLitTable;	\/* Contains LiteralEntry's describing all Tcl$/;"	m	struct:CompileEnv	typeref:typename:LiteralTable
localName	generic/tclInt.h	/^#define localName(/;"	d
localSeconds	generic/tclClockClassic.c	/^    Tcl_WideInt localSeconds;	\/* Local time expressed in nominal seconds$/;"	m	struct:__anondf8925f30208	typeref:typename:Tcl_WideInt	file:
localSeconds	generic/tclDate.h	/^    Tcl_WideInt localSeconds;	\/* Local time expressed in nominal seconds$/;"	m	struct:TclDateFields	typeref:typename:Tcl_WideInt
localSeconds	generic/tclDate.h	/^    Tcl_WideInt localSeconds;$/;"	m	struct:ClockLastTZOffs	typeref:typename:Tcl_WideInt
localVarNameType	generic/tclVar.c	/^static const Tcl_ObjType localVarNameType = {$/;"	v	typeref:typename:const Tcl_ObjType	file:
localeEra	generic/tclDate.h	/^    Tcl_Obj *localeEra;$/;"	m	struct:DateFormat	typeref:typename:Tcl_Obj *
localeObj	generic/tclClockClassic.c	/^#define localeObj /;"	d	file:
localeObj	generic/tclDate.h	/^    Tcl_Obj *localeObj;		\/* Name of the locale where the time will be expressed. *\/$/;"	m	struct:ClockFmtScnCmdArgs	typeref:typename:Tcl_Obj *
localeTable	unix/tclUnixInit.c	/^static const LocaleTable localeTable[] = {$/;"	v	typeref:typename:const LocaleTable[]	file:
location	macosx/tclMacOSXFCmd.c	/^    u_int32_t location;$/;"	m	struct:finderinfo	typeref:typename:u_int32_t	file:
lock	compat/zlib/examples/gzlog.c	/^    time_t lock;    \/* last modify time of our lock file *\/$/;"	m	struct:log	typeref:typename:time_t	file:
lock	generic/tclZipfs.c	/^    int lock;			\/* RW lock, see below *\/$/;"	m	struct:ZipFSGlobals	typeref:typename:int	file:
lock	win/tclWinConsole.c	/^    SRWLOCK lock;		\/* Controls access to this structure.$/;"	m	struct:ConsoleHandleInfo	typeref:typename:SRWLOCK	file:
lockLock	macosx/tclMacOSXNotify.c	/^static void (* lockLock)(VOLATILE OSSpinLock *lock) = NULL;$/;"	v	typeref:typename:void (*)(VOLATILE OSSpinLock * lock)	file:
lockPtr	generic/tclThreadAlloc.c	/^    Tcl_Mutex *lockPtr;		\/* Share bucket lock. *\/$/;"	m	struct:__anone59fb5e80508	typeref:typename:Tcl_Mutex *	file:
lockTry	macosx/tclMacOSXNotify.c	/^static bool (* lockTry)(VOLATILE OSSpinLock *lock) = NULL;$/;"	v	typeref:typename:bool (*)(VOLATILE OSSpinLock * lock)	file:
lockUnlock	macosx/tclMacOSXNotify.c	/^static void (* lockUnlock)(VOLATILE OSSpinLock *lock) = NULL;$/;"	v	typeref:typename:void (*)(VOLATILE OSSpinLock * lock)	file:
log	compat/zlib/examples/gzlog.c	/^struct log {$/;"	s	file:
log	tools/ucm2tests.tcl	/^proc ucm::log {msg} {$/;"	p	namespace:ucm
log10_DIGIT_MAX	generic/tclStrToD.c	/^static int log10_DIGIT_MAX;	\/* The number of decimal digits that fit in an$/;"	v	typeref:typename:int	file:
log2FLT_RADIX	generic/tclStrToD.c	/^static int log2FLT_RADIX;	\/* Logarithm of the floating point radix. *\/$/;"	v	typeref:typename:int	file:
log2pow5	generic/tclStrToD.c	/^static const int log2pow5[27] = {$/;"	v	typeref:typename:const int[27]	file:
logAnalyse	tests/httpTest.tcl	/^proc httpTest::logAnalyse {n skipOverlaps notIncluded notPiped} {$/;"	p	namespace:httpTest
log_append	compat/zlib/examples/gzlog.c	/^local int log_append(struct log *log, unsigned char *data, size_t len)$/;"	f	typeref:typename:local int
log_check	compat/zlib/examples/gzlog.c	/^local int log_check(struct log *log)$/;"	f	typeref:typename:local int
log_close	compat/zlib/examples/gzlog.c	/^local void log_close(struct log *log)$/;"	f	typeref:typename:local void
log_compress	compat/zlib/examples/gzlog.c	/^local int log_compress(struct log *log, unsigned char *data, size_t len)$/;"	f	typeref:typename:local int
log_gzbody	compat/zlib/examples/gzlog.c	/^local unsigned char log_gzbody[] = {$/;"	v	typeref:typename:local unsigned char[]
log_gzext	compat/zlib/examples/gzlog.c	/^local unsigned char log_gzext[] = {$/;"	v	typeref:typename:local unsigned char[]
log_gzhead	compat/zlib/examples/gzlog.c	/^local unsigned char log_gzhead[] = {$/;"	v	typeref:typename:local unsigned char[]
log_head	compat/zlib/examples/gzlog.c	/^local int log_head(struct log *log)$/;"	f	typeref:typename:local int
log_last	compat/zlib/examples/gzlog.c	/^local int log_last(struct log *log, int last)$/;"	f	typeref:typename:local int
log_lock	compat/zlib/examples/gzlog.c	/^local int log_lock(struct log *log)$/;"	f	typeref:typename:local int
log_log	compat/zlib/examples/gzlog.c	/^local void log_log(struct log *log, int op, char *record)$/;"	f	typeref:typename:local void
log_mark	compat/zlib/examples/gzlog.c	/^local int log_mark(struct log *log, int op)$/;"	f	typeref:typename:local int
log_open	compat/zlib/examples/gzlog.c	/^local int log_open(struct log *log)$/;"	f	typeref:typename:local int
log_recover	compat/zlib/examples/gzlog.c	/^local int log_recover(struct log *log, int op)$/;"	f	typeref:typename:local int
log_replace	compat/zlib/examples/gzlog.c	/^local int log_replace(struct log *log)$/;"	f	typeref:typename:local int
log_touch	compat/zlib/examples/gzlog.c	/^local void log_touch(struct log *log)$/;"	f	typeref:typename:local void
log_unlock	compat/zlib/examples/gzlog.c	/^local void log_unlock(struct log *log)$/;"	f	typeref:typename:local void
long-toc	tools/tcltk-man2html-utils.tcl	/^proc long-toc {text} {$/;"	p
longValue	generic/tcl.h	/^    long longValue;		\/*   - an long integer value. *\/$/;"	m	union:Tcl_ObjInternalRep	typeref:typename:long
longValue	generic/tclDTrace.d	/^	long longValue;$/;"	m	union:Tcl_Obj.__anon1	file:
longest	generic/rege_dfa.c	/^longest($/;"	f	typeref:typename:chr *	file:
longest_match	compat/zlib/contrib/asm686/match.S	/^#define	longest_match	_longest_match$/;"	d	file:
longest_match	compat/zlib/contrib/asm686/match.S	/^longest_match:$/;"	l
longest_match	compat/zlib/contrib/gcc_gvmat64/gvmat64.S	/^#	define	longest_match	_longest_match$/;"	d	file:
longest_match	compat/zlib/contrib/gcc_gvmat64/gvmat64.S	/^longest_match:$/;"	l
longest_match	compat/zlib/deflate.c	/^local uInt longest_match(deflate_state *s, IPos cur_match) {$/;"	f	typeref:typename:local uInt
lookAhMax	generic/tclDate.h	/^    unsigned short lookAhMax;$/;"	m	struct:ClockScanToken	typeref:typename:unsigned short
lookAhMin	generic/tclDate.h	/^    unsigned short lookAhMin;$/;"	m	struct:ClockScanToken	typeref:typename:unsigned short
lookAhTok	generic/tclDate.h	/^    unsigned short lookAhTok;$/;"	m	struct:ClockScanToken	typeref:typename:unsigned short
lookahead	compat/zlib/deflate.h	/^    uInt lookahead;              \/* number of valid bytes ahead in window *\/$/;"	m	struct:internal_state	typeref:typename:uInt
lookupDayOfWeek	tools/tclZIC.tcl	/^proc lookupDayOfWeek {wday} {$/;"	p
lookupMonth	tools/tclZIC.tcl	/^proc lookupMonth {month} {$/;"	p
lookupNsPtr	generic/tclInt.h	/^    Namespace *lookupNsPtr;	\/* Namespace to use ONLY on the next$/;"	m	struct:Interp	typeref:typename:Namespace *
loopCtTemp	generic/tclCompile.h	/^    Tcl_Size loopCtTemp;	\/* Index of temp var in a proc frame holding$/;"	m	struct:ForeachInfo	typeref:typename:Tcl_Size
low_guard	generic/tclCkalloc.c	/^    unsigned char low_guard[LOW_GUARD_SIZE];$/;"	m	struct:mem_header	typeref:typename:unsigned char[]	file:
lowerCharTable	generic/regc_locale.c	/^static const chr lowerCharTable[] = {$/;"	v	typeref:typename:const chr[]	file:
lowerRangeTable	generic/regc_locale.c	/^static const crange lowerRangeTable[] = {$/;"	v	typeref:typename:const crange[]	file:
lpMaximumApplicationAddress	unix/tclUnixInit.c	/^    void *lpMaximumApplicationAddress;$/;"	m	struct:__anonf052aa840108	typeref:typename:void *	file:
lpMinimumApplicationAddress	unix/tclUnixInit.c	/^    void *lpMinimumApplicationAddress;$/;"	m	struct:__anonf052aa840108	typeref:typename:void *	file:
lpParameter	win/tclWinThrd.c	/^    LPVOID lpParameter;		\/* Original startup data *\/$/;"	m	struct:__anon3cc991560308	typeref:typename:LPVOID	file:
lpStartAddress	win/tclWinThrd.c	/^    LPTHREAD_START_ROUTINE lpStartAddress;$/;"	m	struct:__anon3cc991560308	typeref:typename:LPTHREAD_START_ROUTINE	file:
lpfnWndProc	unix/tclSelectNotfy.c	/^    void *lpfnWndProc;$/;"	m	struct:__anon69aa703c0408	typeref:typename:void *	file:
lpop_describe	tests-perf/listPerf.tcl	/^    proc lpop_describe {share_mode len at reps} {$/;"	p	namespace:::perf::list
lpop_perf	tests-perf/listPerf.tcl	/^    proc lpop_perf {} {$/;"	p	namespace:::perf::list
lpszClassName	unix/tclSelectNotfy.c	/^    const void *lpszClassName;$/;"	m	struct:__anon69aa703c0408	typeref:typename:const void *	file:
lpszMenuName	unix/tclSelectNotfy.c	/^    const void *lpszMenuName;$/;"	m	struct:__anon69aa703c0408	typeref:typename:const void *	file:
lrange_describe	tests-perf/listPerf.tcl	/^    proc lrange_describe {share_mode len range} {$/;"	p	namespace:::perf::list
lrange_perf	tests-perf/listPerf.tcl	/^    proc lrange_perf {} {$/;"	p	namespace:::perf::list
lremove_describe	tests-perf/listPerf.tcl	/^    proc lremove_describe {share_mode len at nremoved} {$/;"	p	namespace:::perf::list
lremove_perf	tests-perf/listPerf.tcl	/^    proc lremove_perf {} {$/;"	p	namespace:::perf::list
lrepeat_describe	tests-perf/listPerf.tcl	/^    proc lrepeat_describe {len num} {$/;"	p	namespace:::perf::list
lrepeat_perf	tests-perf/listPerf.tcl	/^    proc lrepeat_perf {} {$/;"	p	namespace:::perf::list
lreplace_describe	tests-perf/listPerf.tcl	/^    proc lreplace_describe {share_mode len first last ninsert {times 1}} {$/;"	p	namespace:::perf::list
lreplace_perf	tests-perf/listPerf.tcl	/^    proc lreplace_perf {} {$/;"	p	namespace:::perf::list
lreverse_describe	tests-perf/listPerf.tcl	/^    proc lreverse_describe {share_mode len} {$/;"	p	namespace:::perf::list
lreverse_perf	tests-perf/listPerf.tcl	/^    proc lreverse_perf {} {$/;"	p	namespace:::perf::list
lsearch_describe	tests-perf/listPerf.tcl	/^    proc lsearch_describe {share_mode len} {$/;"	p	namespace:::perf::list
lsearch_perf	tests-perf/listPerf.tcl	/^    proc lsearch_perf {} {$/;"	p	namespace:::perf::list
lsearchoptions	generic/tclCmdIL.c	/^    enum lsearchoptions {$/;"	g	function:Tcl_LsearchObjCmd	file:
lset_describe	tests-perf/listPerf.tcl	/^    proc lset_describe {share_mode len at} {$/;"	p	namespace:::perf::list
lset_perf	tests-perf/listPerf.tcl	/^    proc lset_perf {} {$/;"	p	namespace:::perf::list
lsort_describe	tests-perf/listPerf.tcl	/^    proc lsort_describe {share_mode len} {$/;"	p	namespace:::perf::list
lsort_perf	tests-perf/listPerf.tcl	/^    proc lsort_perf {} {$/;"	p	namespace:::perf::list
lstat	unix/tclUnixPort.h	/^#   define lstat	/;"	d
lstat64	unix/tclUnixPort.h	/^#   define lstat64	/;"	d
lstatProc	generic/tcl.h	/^    Tcl_FSLstatProc *lstatProc;	\/* Called by 'Tcl_FSLstat()'. If NULL, Tcl$/;"	m	struct:Tcl_Filesystem	typeref:typename:Tcl_FSLstatProc *
lstringFreeElements	generic/tclTestABSList.c	/^lstringFreeElements(Tcl_Obj* lstringObj)$/;"	f	typeref:typename:void	file:
lstringTypes	generic/tclTestABSList.c	/^static ObjectType lstringTypes[11] = {$/;"	v	typeref:typename:ObjectType[11]	file:
ltm_prime_callback	libtommath/tommath.h	/^typedef private_mp_prime_callback MP_DEPRECATED(mp_rand_source) ltm_prime_callback;$/;"	t
ltm_prime_tab	libtommath/bn_prime_tab.c	/^const mp_digit ltm_prime_tab[] = {$/;"	v	typeref:typename:const mp_digit[]
ltm_rng	libtommath/bn_s_mp_rand_platform.c	/^unsigned long (*ltm_rng)(unsigned char *out, unsigned long outlen, void (*callback)(void));$/;"	v	typeref:typename:unsigned long (*)(unsigned char * out,unsigned long outlen,void (* callback)(void))
ltm_rng_callback	libtommath/bn_s_mp_rand_platform.c	/^void (*ltm_rng_callback)(void);$/;"	v	typeref:typename:void (*)(void)
lunpipe	compat/zlib/examples/gun.c	/^local int lunpipe(unsigned have, z_const unsigned char *next, struct ind *indp,$/;"	f	typeref:typename:local int
m	generic/tclTest.c	/^	int m; \/* This variable should not be overwritten *\/$/;"	m	struct:TestbytestringObjCmd::__anon0e9396a50608	typeref:typename:int	file:
mPtr	generic/tclOOInt.h	/^    Method *mPtr;		\/* Reference to the method implementation$/;"	m	struct:MInvoke	typeref:typename:Method *
m_fp	compat/zlib/contrib/iostream2/zstream.h	/^        gzFile m_fp;$/;"	m	class:izstream	typeref:typename:gzFile
m_fp	compat/zlib/contrib/iostream2/zstream.h	/^        gzFile m_fp;$/;"	m	class:ozstream	typeref:typename:gzFile
m_os	compat/zlib/contrib/iostream2/zstream.h	/^        ostrstream* m_os;$/;"	m	class:ozstream	typeref:typename:ostrstream *
macCreator	generic/tcl.h	/^    Tcl_Obj *macCreator;	\/* Acceptable Mac creator. *\/$/;"	m	struct:Tcl_GlobTypeData	typeref:typename:Tcl_Obj *
macType	generic/tcl.h	/^    Tcl_Obj *macType;		\/* Acceptable Mac type. *\/$/;"	m	struct:Tcl_GlobTypeData	typeref:typename:Tcl_Obj *
macro	tools/index.tcl	/^proc macro {name args} {$/;"	p
macro2	tools/index.tcl	/^proc macro2 {name args} {}$/;"	p
made	compat/zlib/crc32.c	/^local once_t made = ONCE_INIT;$/;"	v	typeref:typename:local once_t
magic	compat/zlib/contrib/untgz/untgz.c	/^  char magic[6];                \/* 257 *\/$/;"	m	struct:tar_header	typeref:typename:char[6]	file:
magic	generic/regguts.h	/^    int magic;$/;"	m	struct:colormap	typeref:typename:int
magic	generic/regguts.h	/^    int magic;$/;"	m	struct:guts	typeref:typename:int
magic	generic/tclDecls.h	/^    int magic;$/;"	m	struct:TclStubs	typeref:typename:int
magic	generic/tclIntDecls.h	/^    int magic;$/;"	m	struct:TclIntStubs	typeref:typename:int
magic	generic/tclIntPlatDecls.h	/^    int magic;$/;"	m	struct:TclIntPlatStubs	typeref:typename:int
magic	generic/tclOODecls.h	/^    int magic;$/;"	m	struct:TclOOStubs	typeref:typename:int
magic	generic/tclOOIntDecls.h	/^    int magic;$/;"	m	struct:TclOOIntStubs	typeref:typename:int
magic	generic/tclPlatDecls.h	/^    int magic;$/;"	m	struct:TclPlatStubs	typeref:typename:int
magic	generic/tclTomMathDecls.h	/^    int magic;$/;"	m	struct:TclTomMathStubs	typeref:typename:int
magic0	generic/tclAlloc.c	/^	unsigned char magic0;	\/* magic number *\/$/;"	m	struct:overhead::__anon3a4776f00108	typeref:typename:unsigned char	file:
magic1	generic/tclAlloc.c	/^	unsigned char magic1;	\/* other magic number *\/$/;"	m	struct:overhead::__anon3a4776f00108	typeref:typename:unsigned char	file:
magic1	generic/tclThreadAlloc.c	/^		unsigned char magic1;	\/* First magic number. *\/$/;"	m	struct:Block::__anone59fb5e80108::__anone59fb5e8020a::__anone59fb5e80308	typeref:typename:unsigned char	file:
magic2	generic/tclThreadAlloc.c	/^		unsigned char magic2;	\/* Second magic number. *\/$/;"	m	struct:Block::__anone59fb5e80108::__anone59fb5e8020a::__anone59fb5e80308	typeref:typename:unsigned char	file:
magicNum1	generic/tclThreadAlloc.c	/^#define magicNum1	/;"	d	file:
magicNum2	generic/tclThreadAlloc.c	/^#define magicNum2	/;"	d	file:
main	compat/zlib/contrib/blast/blast.c	/^int main(void)$/;"	f	typeref:typename:int
main	compat/zlib/contrib/iostream/test.cpp	/^int main() {$/;"	f	typeref:typename:int
main	compat/zlib/contrib/iostream2/zstream_test.cpp	/^void main() {$/;"	f	typeref:typename:void
main	compat/zlib/contrib/iostream3/test.cc	/^int main() {$/;"	f	typeref:typename:int
main	compat/zlib/contrib/minizip/miniunz.c	/^int main(int argc, char *argv[]) {$/;"	f	typeref:typename:int
main	compat/zlib/contrib/minizip/minizip.c	/^int main(int argc, char *argv[]) {$/;"	f	typeref:typename:int
main	compat/zlib/contrib/puff/pufftest.c	/^int main(int argc, char **argv)$/;"	f	typeref:typename:int
main	compat/zlib/contrib/testzlib/testzlib.c	/^int main(int argc, char *argv[])$/;"	f	typeref:typename:int
main	compat/zlib/contrib/untgz/untgz.c	/^int main(int argc,char **argv)$/;"	f	typeref:typename:int
main	compat/zlib/crc32.c	/^int main(void) {$/;"	f	typeref:typename:int
main	compat/zlib/examples/enough.c	/^int main(int argc, char **argv) {$/;"	f	typeref:typename:int
main	compat/zlib/examples/fitblk.c	/^int main(int argc, char **argv)$/;"	f	typeref:typename:int
main	compat/zlib/examples/gun.c	/^int main(int argc, char **argv)$/;"	f	typeref:typename:int
main	compat/zlib/examples/gzappend.c	/^int main(int argc, char **argv)$/;"	f	typeref:typename:int
main	compat/zlib/examples/gzjoin.c	/^int main(int argc, char **argv)$/;"	f	typeref:typename:int
main	compat/zlib/examples/gznorm.c	/^int main(void) {$/;"	f	typeref:typename:int
main	compat/zlib/examples/zpipe.c	/^int main(int argc, char **argv)$/;"	f	typeref:typename:int
main	compat/zlib/examples/zran.c	/^int main(int argc, char **argv) {$/;"	f	typeref:typename:int
main	compat/zlib/test/example.c	/^int main(int argc, char *argv[]) {$/;"	f	typeref:typename:int
main	compat/zlib/test/infcover.c	/^int main(void)$/;"	f	typeref:typename:int
main	compat/zlib/test/minigzip.c	/^int main(int argc, char *argv[]) {$/;"	f	typeref:typename:int
main	tests-perf/comparePerf.tcl	/^proc perf::compare::main {} {$/;"	p	namespace:perf::compare
main	tools/checkLibraryDoc.tcl	/^proc main {} {$/;"	p
main	tools/encoding/txt2enc.c	/^main(int argc, char **argv)$/;"	f	typeref:typename:int
main	tools/findBadExternals.tcl	/^proc main {argc argv} {$/;"	p
main	tools/uniParse.tcl	/^proc uni::main {} {$/;"	p	namespace:uni
main	unix/dltest/embtest.c	/^int main(int argc, char **argv) {$/;"	f	typeref:typename:int
main	unix/tclAppInit.c	/^main($/;"	f	typeref:typename:int
main	win/nmakehlp.c	/^main($/;"	f	typeref:typename:int
main	win/tclAppInit.c	/^main($/;"	f	typeref:typename:int
mainLoopProc	generic/tclMain.c	/^    Tcl_MainLoopProc *mainLoopProc;$/;"	m	struct:__anonfdf182ea0108	typeref:typename:Tcl_MainLoopProc *	file:
mainThreadId	generic/tclThreadTest.c	/^static Tcl_ThreadId mainThreadId;$/;"	v	typeref:typename:Tcl_ThreadId	file:
maintainer-clean	compat/zlib/Makefile.in	/^maintainer-clean: distclean$/;"	t
make-chunk-generator	tests/httpd11.tcl	/^proc make-chunk-generator {data {size 4096}} {$/;"	p
make-manpage-section	tools/tcltk-man2html-utils.tcl	/^proc make-manpage-section {outputDir sectionDescriptor} {$/;"	p
makeDecl	tools/genStubs.tcl	/^proc genStubs::makeDecl {name decl index} {$/;"	p	namespace:genStubs
makeHeader	tools/makeHeader.tcl	/^namespace eval makeHeader {$/;"	n
makeInit	tools/genStubs.tcl	/^proc genStubs::makeInit {name decl index} {$/;"	p	namespace:genStubs
makeMacro	tools/genStubs.tcl	/^proc genStubs::makeMacro {name decl index} {$/;"	p	namespace:genStubs
makeSlot	tools/genStubs.tcl	/^proc genStubs::makeSlot {name decl index} {$/;"	p	namespace:genStubs
make_crc_table	compat/zlib/crc32.c	/^local void make_crc_table(void) {$/;"	f	typeref:typename:local void
make_module	compat/zlib/os400/make.sh	/^make_module()$/;"	f
makedir	compat/zlib/contrib/minizip/miniunz.c	/^static int makedir(const char *newdir) {$/;"	f	typeref:typename:int	file:
makedir	compat/zlib/contrib/untgz/untgz.c	/^int makedir (char *newdir)$/;"	f	typeref:typename:int
makefixed	compat/zlib/inflate.c	/^void makefixed(void)$/;"	f	typeref:typename:void
makefixed9	compat/zlib/contrib/infback9/infback9.c	/^void makefixed9(void) {$/;"	f	typeref:typename:void
makesearch	generic/regcomp.c	/^makesearch($/;"	f	typeref:typename:void	file:
malloc_ai	compat/fake-rfc2553.c	/^addrinfo *malloc_ai(int port, u_long addr, const struct addrinfo *hints)$/;"	f	typeref:struct:addrinfo *	file:
mallocarea	generic/regexec.c	/^    char *mallocarea;		\/* self, or malloced area, or NULL *\/$/;"	m	struct:dfa	typeref:typename:char *	file:
mallocedArray	generic/tclCompile.h	/^    int mallocedArray;		\/* 1 if array was expanded and fixups points$/;"	m	struct:JumpFixupArray	typeref:typename:int
mallocedAuxDataArray	generic/tclCompile.h	/^    int mallocedAuxDataArray;	\/* 1 if aux data array was expanded and$/;"	m	struct:CompileEnv	typeref:typename:int
mallocedCmdMap	generic/tclCompile.h	/^    int mallocedCmdMap;		\/* 1 if command map array was expanded and$/;"	m	struct:CompileEnv	typeref:typename:int
mallocedCodeArray	generic/tclCompile.h	/^    int mallocedCodeArray;	\/* Set 1 if code array was expanded and$/;"	m	struct:CompileEnv	typeref:typename:int
mallocedExceptArray	generic/tclCompile.h	/^    int mallocedExceptArray;	\/* 1 if ExceptionRange array was expanded and$/;"	m	struct:CompileEnv	typeref:typename:int
mallocedLiteralArray	generic/tclCompile.h	/^    int mallocedLiteralArray;	\/* 1 if object array was expanded and objArray$/;"	m	struct:CompileEnv	typeref:typename:int
man-compression	unix/tcl.m4	/^    AC_ARG_ENABLE(man-compression,$/;"	e
man-puts	tools/tcltk-man2html-utils.tcl	/^proc man-puts {text} {$/;"	p
man-suffix	unix/tcl.m4	/^    AC_ARG_ENABLE(man-suffix,$/;"	e
man-symlinks	unix/tcl.m4	/^    AC_ARG_ENABLE(man-symlinks,$/;"	e
man3dir	compat/zlib/Makefile.in	/^man3dir = ${mandir}\/man3$/;"	m
managingThread	generic/tclIO.h	/^    Tcl_ThreadId managingThread;\/* TIP #10: Id of the thread managing this$/;"	m	struct:ChannelState	typeref:typename:Tcl_ThreadId
mandir	compat/zlib/Makefile.in	/^mandir = ${prefix}\/share\/man$/;"	m
mandir	unix/Makefile.in	/^mandir			= @mandir@$/;"	m
mandir	win/Makefile.in	/^mandir			= @mandir@$/;"	m
mandir_native	win/Makefile.in	/^mandir_native = $(shell $(CYGPATH) '$(mandir)')$/;"	m
manerror	tools/tcltk-man2html-utils.tcl	/^proc manerror {msg} {$/;"	p
manreport	tools/tcltk-man2html-utils.tcl	/^proc manreport {level msg} {$/;"	p
mantBits	generic/tclStrToD.c	/^static int mantBits;		\/* Number of bits in a double's significand *\/$/;"	v	typeref:typename:int	file:
map	compat/zlib/examples/enough.c	/^local inline size_t map(int syms, int left, int len) {$/;"	f	typeref:typename:local size_t
map	generic/tclDate.h	/^    const ClockFormatTokenMap *map;$/;"	m	struct:ClockFormatToken	typeref:typename:const ClockFormatTokenMap *
map	generic/tclDate.h	/^    const ClockScanTokenMap *map;$/;"	m	struct:ClockScanToken	typeref:typename:const ClockScanTokenMap *
map	generic/tclIORChan.c	/^    Tcl_HashTable map;$/;"	m	struct:__anon92d8dd290208	typeref:typename:Tcl_HashTable	file:
map	generic/tclIORTrans.c	/^    Tcl_HashTable map;$/;"	m	struct:__anon21e740770308	typeref:typename:Tcl_HashTable	file:
mapDir	tools/installVfs.tcl	/^proc mapDir {resultvar prefix filepath} {$/;"	p
mapMethodNameProc	generic/tclOOInt.h	/^    Tcl_ObjectMapMethodNameProc *mapMethodNameProc;$/;"	m	struct:Object	typeref:typename:Tcl_ObjectMapMethodNameProc *
mapSpecial	tools/makeHeader.tcl	/^    proc mapSpecial {str} {$/;"	p	namespace:::makeHeader
mark	generic/tclCompExpr.c	/^    unsigned char mark;		\/* Mark used to control traversal. *\/$/;"	m	struct:__anon882f36730108	typeref:typename:unsigned char	file:
markcanreach	generic/regc_nfa.c	/^markcanreach($/;"	f	typeref:typename:void	file:
markerEventPtr	generic/tclNotify.c	/^    Tcl_Event *markerEventPtr;	\/* Last high-priority event in queue, or NULL$/;"	m	struct:ThreadSpecificData	typeref:typename:Tcl_Event *	file:
markerPtr	generic/tclInt.h	/^    Tcl_Obj **markerPtr;	\/* The location of the NULL marker. *\/$/;"	m	struct:ExecStack	typeref:typename:Tcl_Obj **
markreachable	generic/regc_nfa.c	/^markreachable($/;"	f	typeref:typename:void	file:
markst	generic/regcomp.c	/^markst($/;"	f	typeref:typename:void	file:
mask	generic/tcl.h	/^    size_t mask;		\/* Mask value used in hashing function. *\/$/;"	m	struct:Tcl_HashTable	typeref:typename:size_t
mask	generic/tclEvent.c	/^    int mask;			\/* 0, or TCL_READABLE\/TCL_WRITABLE. *\/$/;"	m	struct:__anon850510a70208	typeref:typename:int	file:
mask	generic/tclIO.c	/^    int mask;			\/* Mask of desired events. *\/$/;"	m	struct:ChannelHandler	typeref:typename:int	file:
mask	generic/tclIO.h	/^    int mask;			\/* Events must overlap current mask for the$/;"	m	struct:EventScriptRecord	typeref:typename:int
mask	generic/tclIORChan.c	/^    int mask;			\/* I: What events to watch for *\/$/;"	m	struct:ForwardParamWatch	typeref:typename:int	file:
mask	generic/tclInt.h	/^    TCL_HASH_TYPE mask;		\/* Mask value used in hashing function. *\/$/;"	m	struct:LiteralTable	typeref:typename:TCL_HASH_TYPE
mask	macosx/tclMacOSXNotify.c	/^    int mask;			\/* Mask of desired events: TCL_READABLE,$/;"	m	struct:FileHandler	typeref:typename:int	file:
mask	unix/tclEpollNotfy.c	/^    int mask;			\/* Mask of desired events: TCL_READABLE,$/;"	m	struct:FileHandler	typeref:typename:int	file:
mask	unix/tclKqueueNotfy.c	/^    int mask;			\/* Mask of desired events: TCL_READABLE,$/;"	m	struct:FileHandler	typeref:typename:int	file:
mask	unix/tclSelectNotfy.c	/^    int mask;			\/* Mask of desired events: TCL_READABLE,$/;"	m	struct:FileHandler	typeref:typename:int	file:
mask	unix/tclXtNotify.c	/^    int mask;			\/* Mask of desired events: TCL_READABLE,$/;"	m	struct:FileHandler	typeref:typename:int	file:
mask	win/tclWinTest.c	/^	DWORD mask;$/;"	m	struct:TestplatformChmod::__anon3c9418440108	typeref:typename:DWORD	file:
match	compat/zlib/examples/gun.c	/^unsigned char match[65280 + 2];         \/* buffer for reversed match or gzip$/;"	v	typeref:typename:unsigned char[]
match-text	tools/tcltk-man2html-utils.tcl	/^proc match-text args {$/;"	p
match.lo	compat/zlib/Makefile.in	/^match.lo: match.S$/;"	t
match.o	compat/zlib/Makefile.in	/^match.o: match.S$/;"	t
matchInDirectoryProc	generic/tcl.h	/^    Tcl_FSMatchInDirectoryProc *matchInDirectoryProc;$/;"	m	struct:Tcl_Filesystem	typeref:typename:Tcl_FSMatchInDirectoryProc *
matchOptionsEnum	generic/tclIndexObj.c	/^    enum matchOptionsEnum {$/;"	g	function:PrefixMatchObjCmd	file:
match_available	compat/zlib/deflate.h	/^    int match_available;         \/* set if previous match exists *\/$/;"	m	struct:internal_state	typeref:typename:int
match_init	compat/zlib/contrib/asm686/match.S	/^#define	match_init	_match_init$/;"	d	file:
match_init	compat/zlib/contrib/asm686/match.S	/^.globl	match_init, longest_match$/;"	s
match_init	compat/zlib/contrib/asm686/match.S	/^match_init:	ret$/;"	l
match_init	compat/zlib/contrib/gcc_gvmat64/gvmat64.S	/^#	define	match_init	_match_init$/;"	d	file:
match_init	compat/zlib/contrib/gcc_gvmat64/gvmat64.S	/^.globl	match_init, longest_match$/;"	s
match_init	compat/zlib/contrib/gcc_gvmat64/gvmat64.S	/^match_init:$/;"	l
match_length	compat/zlib/deflate.h	/^    uInt match_length;           \/* length of best match *\/$/;"	m	struct:internal_state	typeref:typename:uInt
match_start	compat/zlib/contrib/gcc_gvmat64/gvmat64.S	/^#define match_start /;"	d	file:
match_start	compat/zlib/deflate.h	/^    uInt match_start;            \/* start of matching string *\/$/;"	m	struct:internal_state	typeref:typename:uInt
matches	compat/zlib/deflate.h	/^    uInt matches;       \/* number of string matches in current block *\/$/;"	m	struct:internal_state	typeref:typename:uInt
matches	generic/tcl.h	/^    Tcl_RegExpIndices *matches;	\/* Array of nsubs match offset pairs. *\/$/;"	m	struct:Tcl_RegExpInfo	typeref:typename:Tcl_RegExpIndices *
matches	generic/tclRegexp.h	/^    regmatch_t *matches;	\/* Array of indices into the Tcl_UniChar$/;"	m	struct:TclRegexp	typeref:typename:regmatch_t *
matchname	compat/zlib/contrib/untgz/untgz.c	/^int matchname (int arg,int argc,char **argv,char *fname)$/;"	f	typeref:typename:int
mathOpCmds	generic/tclBasic.c	/^static const OpCmdInfo mathOpCmds[] = {$/;"	v	typeref:typename:const OpCmdInfo[]	file:
max	compat/zlib/examples/enough.c	/^    int max;            \/\/ maximum allowed bit length for the codes$/;"	m	struct:__anonea7b679d0208	typeref:typename:int	file:
max	generic/regguts.h	/^    short max;			\/* max repetitions for iteration or backref *\/$/;"	m	struct:subre	typeref:typename:short
max	generic/regguts.h	/^    size_t max;			\/* highest in use *\/$/;"	m	struct:colormap	typeref:typename:size_t
max	generic/tclIORTrans.c	/^    int max;			\/* O: Character read limit *\/$/;"	m	struct:ForwardParamLimit	typeref:typename:int	file:
max	generic/tclThread.c	/^    int max;			\/* Max size of the array *\/$/;"	m	struct:__anone579f3dd0108	typeref:typename:int	file:
maxAlignDouble	generic/tclInt.h	/^	double maxAlignDouble;$/;"	m	union:TclMaxAlignment::__anon1eb6b3550a0a	typeref:typename:double
maxAlignLongLong	generic/tclInt.h	/^	long long maxAlignLongLong;$/;"	m	union:TclMaxAlignment::__anon1eb6b3550a0a	typeref:typename:long long
maxAlignPointer	generic/tclInt.h	/^	void *maxAlignPointer;$/;"	m	union:TclMaxAlignment::__anon1eb6b3550a0a	typeref:typename:void *
maxBlocks	generic/tclThreadAlloc.c	/^    size_t maxBlocks;		\/* Max blocks before move to share. *\/$/;"	m	struct:__anone59fb5e80508	typeref:typename:size_t	file:
maxCatchDepth	generic/tclAssembly.c	/^    int maxCatchDepth;		\/* Maximum depth of catches encountered *\/$/;"	m	struct:AssemblyEnv	typeref:typename:int	file:
maxChars	generic/tclStringRep.h	/^    Tcl_Size maxChars;		\/* Max number of chars that can fit in the$/;"	m	struct:__anonf2feabe80108	typeref:typename:Tcl_Size
maxDepth	generic/tclAssembly.c	/^    int maxDepth;		\/* Maximum stack depth encountered *\/$/;"	m	struct:AssemblyEnv	typeref:typename:int	file:
maxDigits	generic/tclStrToD.c	/^static int maxDigits;		\/* The maximum number of digits to the left of$/;"	v	typeref:typename:int	file:
maxExceptDepth	generic/tclCompile.h	/^    Tcl_Size maxExceptDepth;	\/* Max nesting level of exception ranges;$/;"	m	struct:CompileEnv	typeref:typename:Tcl_Size
maxExceptDepth	generic/tclCompile.h	/^    Tcl_Size maxExceptDepth;	\/* Maximum nesting level of ExceptionRanges;$/;"	m	struct:ByteCode	typeref:typename:Tcl_Size
maxExportPatterns	generic/tclInt.h	/^    Tcl_Size maxExportPatterns;	\/* Number of export patterns for which space$/;"	m	struct:Namespace	typeref:typename:Tcl_Size
maxJDN	generic/tclDate.h	/^    double maxJDN;$/;"	m	struct:ClockClientData	typeref:typename:double
maxNestingDepth	generic/tclInt.h	/^    Tcl_Size maxNestingDepth;	\/* If numLevels exceeds this value then Tcl$/;"	m	struct:Interp	typeref:typename:Tcl_Size
maxPerms	generic/tclIO.h	/^    int maxPerms;		\/* TIP #220: Max access privileges$/;"	m	struct:ChannelState	typeref:typename:int
maxPrecision	generic/tclArithSeries.c	/^maxPrecision($/;"	f	typeref:typename:unsigned	file:
maxRead	generic/tclIOGT.c	/^    int maxRead;		\/* Maximum allowed number of bytes to read, as$/;"	m	struct:TransformChannelData	typeref:typename:int	file:
maxReadyEvents	unix/tclEpollNotfy.c	/^    size_t maxReadyEvents;	\/* Count of epoll_events in readyEvents. *\/$/;"	m	struct:ThreadSpecificData	typeref:typename:size_t	file:
maxReadyEvents	unix/tclKqueueNotfy.c	/^    size_t maxReadyEvents;	\/* Count of kevents in readyEvents. *\/$/;"	m	struct:ThreadSpecificData	typeref:typename:size_t	file:
maxSize	generic/tclDate.h	/^    unsigned short maxSize;$/;"	m	struct:ClockScanTokenMap	typeref:typename:unsigned short
maxStackDepth	generic/tclAssembly.c	/^    int maxStackDepth;		\/* High-water relative stack depth *\/$/;"	m	struct:BasicBlock	typeref:typename:int	file:
maxStackDepth	generic/tclCompile.h	/^    Tcl_Size maxStackDepth;	\/* Maximum number of stack elements needed to$/;"	m	struct:ByteCode	typeref:typename:Tcl_Size
maxStackDepth	generic/tclCompile.h	/^    Tcl_Size maxStackDepth;	\/* Maximum number of stack elements needed to$/;"	m	struct:CompileEnv	typeref:typename:Tcl_Size
maxWrite	generic/tclZipfs.c	/^    Tcl_Size maxWrite;		\/* Maximum size for write *\/$/;"	m	struct:ZipChannel	typeref:typename:Tcl_Size	file:
max_chain	compat/zlib/deflate.c	/^   ush max_chain;$/;"	m	struct:config_s	typeref:typename:ush	file:
max_chain_length	compat/zlib/contrib/gcc_gvmat64/gvmat64.S	/^#define max_chain_length /;"	d	file:
max_chain_length	compat/zlib/deflate.h	/^    uInt max_chain_length;$/;"	m	struct:internal_state	typeref:typename:uInt
max_code	compat/zlib/deflate.h	/^    int     max_code;            \/* largest code with non zero frequency *\/$/;"	m	struct:tree_desc_s	typeref:typename:int
max_insert_length	compat/zlib/deflate.h	/^#   define max_insert_length /;"	d
max_lazy	compat/zlib/deflate.c	/^   ush max_lazy;    \/* do not perform lazy search above this match length *\/$/;"	m	struct:config_s	typeref:typename:ush	file:
max_lazy_match	compat/zlib/deflate.h	/^    uInt max_lazy_match;$/;"	m	struct:internal_state	typeref:typename:uInt
max_length	compat/zlib/trees.c	/^    int     max_length;          \/* max bit length for the codes *\/$/;"	m	struct:static_tree_desc_s	typeref:typename:int	file:
maxcolor	generic/regc_color.c	/^maxcolor($/;"	f	typeref:typename:color	file:
maximum_bytes_malloced	generic/tclCkalloc.c	/^static size_t maximum_bytes_malloced = 0;$/;"	v	typeref:typename:size_t	file:
maximum_malloc_packets	generic/tclCkalloc.c	/^static size_t  maximum_malloc_packets = 0;$/;"	v	typeref:typename:size_t	file:
maxj	generic/tclCmdAH.c	/^    Tcl_Size j, maxj;		\/* Number of loop iterations. *\/$/;"	m	struct:ForeachState	typeref:typename:Tcl_Size	file:
maxpow10_wide	generic/tclStrToD.c	/^static int maxpow10_wide;	\/* The powers of ten that can be represented$/;"	v	typeref:typename:int	file:
mc	library/clockclassic.tcl	/^proc mc {args} { tailcall ::msgcat::mcn [namespace current] {*}$args }$/;"	p
mc	library/msgcat/msgcat.tcl	/^proc msgcat::mc {args} {$/;"	p	namespace:msgcat
mcDictObj	generic/tclDate.h	/^    Tcl_Obj *mcDictObj;		\/* Current dictionary of tcl::clock package for given localeObj*\/$/;"	m	struct:ClockFmtScnCmdArgs	typeref:typename:Tcl_Obj *
mcDicts	generic/tclDate.h	/^    Tcl_Obj *mcDicts;		\/* Msgcat collection, contains weak pointers to locale$/;"	m	struct:ClockClientData	typeref:typename:Tcl_Obj *
mcLitIdxs	generic/tclDate.h	/^    Tcl_Obj **mcLitIdxs;	\/* Msgcat object indices prefixed with _IDX_,$/;"	m	struct:ClockClientData	typeref:typename:Tcl_Obj **
mcLiterals	generic/tclDate.h	/^    Tcl_Obj **mcLiterals;	\/* Msgcat object literals with mc-keys for search with locale. *\/$/;"	m	struct:ClockClientData	typeref:typename:Tcl_Obj **
mcMerge	library/clock.tcl	/^proc ::tcl::clock::mcMerge {locales} {$/;"	p	namespace:::tcl::clock
mcexists	library/msgcat/msgcat.tcl	/^proc msgcat::mcexists {args} {$/;"	p	namespace:msgcat
mcflmset	library/msgcat/msgcat.tcl	/^proc msgcat::mcflmset {pairs} {$/;"	p	namespace:msgcat
mcflset	library/msgcat/msgcat.tcl	/^proc msgcat::mcflset {src {dest ""}} {$/;"	p	namespace:msgcat
mcforgetpackage	library/msgcat/msgcat.tcl	/^proc msgcat::mcforgetpackage {} {$/;"	p	namespace:msgcat
mcget	library/clock.tcl	/^proc ::tcl::clock::mcget {loc} {$/;"	p	namespace:::tcl::clock
mcload	library/msgcat/msgcat.tcl	/^proc msgcat::mcload {langdir} {$/;"	p	namespace:msgcat
mcloadedlocales	library/msgcat/msgcat.tcl	/^proc msgcat::mcloadedlocales {subcommand} {$/;"	p	namespace:msgcat
mclocale	library/msgcat/msgcat.tcl	/^proc msgcat::mclocale {args} {$/;"	p	namespace:msgcat
mcmax	library/msgcat/msgcat.tcl	/^proc msgcat::mcmax {args} {$/;"	p	namespace:msgcat
mcmset	library/msgcat/msgcat.tcl	/^proc msgcat::mcmset {locale pairs} {$/;"	p	namespace:msgcat
mcn	library/msgcat/msgcat.tcl	/^proc msgcat::mcn {ns src args} {$/;"	p	namespace:msgcat
mcpackageconfig	library/msgcat/msgcat.tcl	/^proc msgcat::mcpackageconfig {subcommand option {value ""}} {$/;"	p	namespace:msgcat
mcpackagelocale	library/msgcat/msgcat.tcl	/^proc msgcat::mcpackagelocale {subcommand args} {$/;"	p	namespace:msgcat
mcpackagenamespaceget	library/msgcat/msgcat.tcl	/^proc msgcat::mcpackagenamespaceget {} {$/;"	p	namespace:msgcat
mcpreferences	library/msgcat/msgcat.tcl	/^proc msgcat::mcpreferences {args} {$/;"	p	namespace:msgcat
mcset	library/msgcat/msgcat.tcl	/^proc msgcat::mcset {locale src {dest ""}} {$/;"	p	namespace:msgcat
mcunknown	library/msgcat/msgcat.tcl	/^proc msgcat::mcunknown {args} {$/;"	p	namespace:msgcat
measure	tests-perf/listPerf.tcl	/^        method measure {comment script locals args} {$/;"	m	class:::perf::list.ListPerf
measure	tests-perf/listPerf.tcl	/^    proc measure {id script args} {$/;"	p	namespace:::perf::list
memCmpFn_t	generic/tclInt.h	/^typedef int (*memCmpFn_t)(const void*, const void*, size_t);$/;"	t	typeref:typename:int (*)(const void *,const void *,size_t)
mem_alloc	compat/zlib/test/infcover.c	/^local void *mem_alloc(void *mem, unsigned count, unsigned size)$/;"	f	typeref:typename:local void *
mem_done	compat/zlib/test/infcover.c	/^local void mem_done(z_stream *strm, char *prefix)$/;"	f	typeref:typename:local void
mem_free	compat/zlib/test/infcover.c	/^local void mem_free(void *mem, void *ptr)$/;"	f	typeref:typename:local void
mem_header	generic/tclCkalloc.c	/^struct mem_header {$/;"	s	file:
mem_high	compat/zlib/test/infcover.c	/^local void mem_high(z_stream *strm, char *prefix)$/;"	f	typeref:typename:local void
mem_item	compat/zlib/test/infcover.c	/^struct mem_item {$/;"	s	file:
mem_limit	compat/zlib/test/infcover.c	/^local void mem_limit(z_stream *strm, size_t limit)$/;"	f	typeref:typename:local void
mem_setup	compat/zlib/test/infcover.c	/^local void mem_setup(z_stream *strm)$/;"	f	typeref:typename:local void
mem_used	compat/zlib/test/infcover.c	/^local void mem_used(z_stream *strm, char *prefix)$/;"	f	typeref:typename:local void
mem_zone	compat/zlib/test/infcover.c	/^struct mem_zone {$/;"	s	file:
memmove	compat/string.h	/^#define memmove(/;"	d
merge-copyrights	tools/tcltk-man2html-utils.tcl	/^proc merge-copyrights {l1 l2} {$/;"	p
mergeins	generic/regc_nfa.c	/^mergeins($/;"	f	typeref:typename:void	file:
message	unix/tclSelectNotfy.c	/^    unsigned int *message;	\/* Message payload. *\/$/;"	m	struct:__anon69aa703c0308	typeref:typename:unsigned int *	file:
messages	generic/tclDate.h	/^    Tcl_Obj *messages;		\/* Error messages *\/$/;"	m	struct:DateInfo	typeref:typename:Tcl_Obj *
messages	generic/tclDateClassic.c	/^    Tcl_Obj* messages;		\/* Error messages *\/$/;"	m	struct:DateInfo	typeref:typename:Tcl_Obj *	file:
meta	macosx/GNUmakefile	/^meta			:= all install embedded install-embedded clean distclean test$/;"	m
metadataPtr	generic/tclOOInt.h	/^    Tcl_HashTable *metadataPtr;	\/* Mapping from pointers to metadata type to$/;"	m	struct:Class	typeref:typename:Tcl_HashTable *
metadataPtr	generic/tclOOInt.h	/^    Tcl_HashTable *metadataPtr;	\/* Mapping from pointers to metadata type to$/;"	m	struct:Object	typeref:typename:Tcl_HashTable *
method	compat/zlib/contrib/minizip/zip.c	/^    int  method;                \/* compression method of file currently wr.*\/$/;"	m	struct:__anon7add25cb0108	typeref:typename:int	file:
method	compat/zlib/deflate.h	/^    Byte  method;        \/* can only be DEFLATED *\/$/;"	m	struct:internal_state	typeref:typename:Byte
method	generic/tclOOInt.h	/^    Tcl_Method method;		\/* Method to compute the name of. *\/$/;"	m	struct:ProcedureMethod	typeref:typename:Tcl_Method
methodNameType	generic/tclOOCall.c	/^static const Tcl_ObjType methodNameType = {$/;"	v	typeref:typename:const Tcl_ObjType	file:
methodNames	generic/tclIORChan.c	/^static const char *const methodNames[] = {$/;"	v	typeref:typename:const char * const[]	file:
methodNames	generic/tclIORTrans.c	/^static const char *const methodNames[] = {$/;"	v	typeref:typename:const char * const[]	file:
methods	generic/tclIORChan.c	/^    Tcl_Obj *methods;		\/* Methods to append to command prefix *\/$/;"	m	struct:__anon92d8dd290108	typeref:typename:Tcl_Obj *	file:
methods	generic/tclIORTrans.c	/^    int methods;		\/* Bitmask of supported methods. *\/$/;"	m	struct:__anon21e740770208	typeref:typename:int	file:
methodsPtr	generic/tclOOInt.h	/^    Tcl_HashTable *methodsPtr;	\/* Object-local Tcl_Obj (method name) to$/;"	m	struct:Object	typeref:typename:Tcl_HashTable *
mh_magic	unix/tclLoadDyld.c	/^#	define mh_magic /;"	d	file:
mh_size	unix/tclLoadDyld.c	/^#	define mh_size /;"	d	file:
microsecsScale	win/tclWinTime.c	/^    double microsecsScale;	\/* Denominator scale between clock \/ microsecs *\/$/;"	m	struct:__anon3cd8f0330208	typeref:typename:double	file:
mime-type	tests/httpd11.tcl	/^proc mime-type {filename} {$/;"	p
min	generic/regguts.h	/^    short min;			\/* min repetitions for iteration or backref *\/$/;"	m	struct:subre	typeref:typename:short
min	win/tclWinSerial.c	/^#define min(/;"	d	file:
minDigits	generic/tclStrToD.c	/^static int minDigits;		\/* The maximum number of digits to the right$/;"	v	typeref:typename:int	file:
minSize	generic/tclDate.h	/^    unsigned short minSize;$/;"	m	struct:ClockScanTokenMap	typeref:typename:unsigned short
minStackDepth	generic/tclAssembly.c	/^    int minStackDepth;		\/* Low-water relative stack depth *\/$/;"	m	struct:BasicBlock	typeref:typename:int	file:
minigzip	compat/zlib/CMakeLists.txt	/^    add_executable(minigzip test\/minigzip.c)$/;"	t
minigzip$(EXE)	compat/zlib/Makefile.in	/^minigzip$(EXE): minigzip.o $(STATICLIB)$/;"	t
minigzip.exe	compat/zlib/contrib/delphi/zlibd32.mak	/^minigzip.exe: minigzip.obj $(ZLIB_LIB)$/;"	t
minigzip.exe	compat/zlib/contrib/pascal/zlibd32.mak	/^minigzip.exe: minigzip.obj $(ZLIB_LIB)$/;"	t
minigzip.exe	compat/zlib/watcom/watcom_f.mak	/^minigzip.exe: $(ZLIB_LIB) minigzip.obj$/;"	t
minigzip.exe	compat/zlib/watcom/watcom_l.mak	/^minigzip.exe: $(ZLIB_LIB) minigzip.obj$/;"	t
minigzip.lo	compat/zlib/Makefile.in	/^compress.lo example.lo minigzip.lo uncompr.lo: $(SRCDIR)zlib.h zconf.h$/;"	t
minigzip.o	compat/zlib/Makefile.in	/^compress.o example.o minigzip.o uncompr.o: $(SRCDIR)zlib.h zconf.h$/;"	t
minigzip.o	compat/zlib/Makefile.in	/^minigzip.o: $(SRCDIR)test\/minigzip.c $(SRCDIR)zlib.h zconf.h$/;"	t
minigzip.obj	compat/zlib/contrib/delphi/zlibd32.mak	/^minigzip.obj: test\/minigzip.c zlib.h zconf.h$/;"	t
minigzip.obj	compat/zlib/contrib/pascal/zlibd32.mak	/^minigzip.obj: test\/minigzip.c zlib.h zconf.h$/;"	t
minigzip64	compat/zlib/CMakeLists.txt	/^        add_executable(minigzip64 test\/minigzip.c)$/;"	t
minigzip64$(EXE)	compat/zlib/Makefile.in	/^minigzip64$(EXE): minigzip64.o $(STATICLIB)$/;"	t
minigzip64.o	compat/zlib/Makefile.in	/^minigzip64.o: $(SRCDIR)test\/minigzip.c $(SRCDIR)zlib.h zconf.h$/;"	t
minigzipsh$(EXE)	compat/zlib/Makefile.in	/^minigzipsh$(EXE): minigzip.o $(SHAREDLIBV)$/;"	t
miniunz	compat/zlib/contrib/minizip/Makefile	/^miniunz:  $(UNZ_OBJS)$/;"	t
miniunzip	compat/zlib/contrib/minizip/Makefile.am	/^EXTRA_PROGRAMS = miniunzip minizip$/;"	P	pseudodir:EXTRA
miniunzip	compat/zlib/contrib/minizip/Makefile.am	/^bin_PROGRAMS = miniunzip minizip$/;"	P	directory:bin
miniunzip	compat/zlib/contrib/minizip/miniunzip.1	/^.TH miniunzip 1 "Nov 7, 2001"$/;"	t
miniunzip_LDADD	compat/zlib/contrib/minizip/Makefile.am	/^miniunzip_LDADD = libminizip.la$/;"	m
miniunzip_SOURCES	compat/zlib/contrib/minizip/Makefile.am	/^miniunzip_SOURCES = miniunz.c$/;"	m
minizip	compat/zlib/contrib/minizip/Makefile	/^minizip:  $(ZIP_OBJS)$/;"	t
minizip	compat/zlib/contrib/minizip/Makefile.am	/^EXTRA_PROGRAMS = miniunzip minizip$/;"	P	pseudodir:EXTRA
minizip	compat/zlib/contrib/minizip/Makefile.am	/^bin_PROGRAMS = miniunzip minizip$/;"	P	directory:bin
minizip	compat/zlib/contrib/minizip/configure.ac	/^AC_INIT([minizip], [1.3.1], [bugzilla.redhat.com])$/;"	p
minizip	compat/zlib/contrib/minizip/minizip.1	/^.TH minizip 1 "May 2, 2001"$/;"	t
minizip	compat/zlib/contrib/minizip/minizip.pc.in	/^Name: minizip$/;"	N
minizip	compat/zlib/contrib/minizip/minizip.pc.in	/^Name: minizip$/;"	p
minizip${HOST_EXEEXT}	unix/Makefile.in	/^minizip${HOST_EXEEXT}: $(MINIZIP_OBJS)$/;"	t
minizip${HOST_EXEEXT}	win/Makefile.in	/^minizip${HOST_EXEEXT}: $(MINIZIP_OBJS)$/;"	t
minizip-clean	compat/zlib/Makefile.in	/^minizip-clean:$/;"	t
minizip-test	compat/zlib/Makefile.in	/^minizip-test: static$/;"	t
minizip.$(HOST_OBJEXT)	unix/Makefile.in	/^minizip.$(HOST_OBJEXT):$/;"	t
minizip.$(HOST_OBJEXT)	win/Makefile.in	/^minizip.$(HOST_OBJEXT):$/;"	t
minizip.pc	compat/zlib/contrib/minizip/Makefile.am	/^pkgconfig_DATA = minizip.pc$/;"	D	directory:pkgconfig
minizip_LDADD	compat/zlib/contrib/minizip/Makefile.am	/^minizip_LDADD = libminizip.la -lz$/;"	m
minizip_SOURCES	compat/zlib/contrib/minizip/Makefile.am	/^minizip_SOURCES = minizip.c$/;"	m
minizip_include	compat/zlib/contrib/minizip/Makefile.am	/^minizip_includedir = $(includedir)\/minizip$/;"	d
minizip_include_HEADERS	compat/zlib/contrib/minizip/Makefile.am	/^minizip_include_HEADERS = \\$/;"	m
minizip_includedir	compat/zlib/contrib/minizip/Makefile.am	/^minizip_includedir = $(includedir)\/minizip$/;"	m
minutes	generic/tclDate.h	/^    int minutes;		\/* Minutes of hour (in-between time only calculation) *\/$/;"	m	struct:TclDateFields	typeref:typename:int
miss	generic/rege_dfa.c	/^miss($/;"	f	typeref:struct:sset *	file:
mixinSubs	generic/tclOOInt.h	/^    VarClassList mixinSubs;	\/* List of classes that this class is mixed$/;"	m	struct:Class	typeref:typename:VarClassList
mixins	generic/tclOOInt.h	/^    ClassList mixins;		\/* Classes mixed into this object. *\/$/;"	m	struct:Object	typeref:typename:ClassList
mixins	generic/tclOOInt.h	/^    ClassList mixins;		\/* List of mixin classes, used for generation$/;"	m	struct:Class	typeref:typename:ClassList
mkdir	compat/zlib/contrib/untgz/untgz.c	/^#  define mkdir(dirname,mode)   _mkdir(/;"	d	file:
mkindex	library/auto.tcl	/^proc auto_mkindex_parser::mkindex {file} {$/;"	p	namespace:auto_mkindex_parser
mkstemp	compat/mkstemp.c	/^mkstemp($/;"	f	typeref:typename:int
mkstemp.o	unix/Makefile.in	/^mkstemp.o: $(COMPAT_DIR)\/mkstemp.c$/;"	t
mmaxpow	generic/tclStrToD.c	/^static int mmaxpow;		\/* Largest power of ten that can be$/;"	v	typeref:typename:int	file:
modList	unix/tclLoadAix.c	/^static ModulePtr modList;$/;"	v	typeref:typename:ModulePtr	file:
mode	compat/zlib/contrib/iostream/zfstream.h	/^  short mode;$/;"	m	class:gzfilebuf	typeref:typename:short
mode	compat/zlib/contrib/untgz/untgz.c	/^  char mode[8];                 \/* 100 *\/$/;"	m	struct:tar_header	typeref:typename:char[8]	file:
mode	compat/zlib/contrib/untgz/untgz.c	/^  int                mode;$/;"	m	struct:attr_item	typeref:typename:int	file:
mode	compat/zlib/examples/zran.h	/^    int mode;           \/\/ -15 for raw, 15 for zlib, or 31 for gzip$/;"	m	struct:deflate_index	typeref:typename:int
mode	compat/zlib/gzguts.h	/^    int mode;               \/* see gzip modes above *\/$/;"	m	struct:__anon361a15920108	typeref:typename:int
mode	compat/zlib/inflate.h	/^    inflate_mode mode;          \/* current inflate mode *\/$/;"	m	struct:inflate_state	typeref:typename:inflate_mode
mode	generic/tclIOGT.c	/^    int mode;			\/* Mode of parent channel, OR'ed combination$/;"	m	struct:TransformChannelData	typeref:typename:int	file:
mode	generic/tclIORChan.c	/^    int mode;			\/* Mask of R\/W mode *\/$/;"	m	struct:__anon92d8dd290108	typeref:typename:int	file:
mode	generic/tclIORTrans.c	/^    int mode;			\/* Mask of R\/W mode *\/$/;"	m	struct:__anon21e740770208	typeref:typename:int	file:
mode	generic/tclZipfs.c	/^    int mode;			\/* O_WRITE, O_APPEND, O_TRUNC etc.*\/$/;"	m	struct:ZipChannel	typeref:typename:int	file:
mode	generic/tclZlib.c	/^    int mode;			\/* Either TCL_ZLIB_STREAM_DEFLATE or$/;"	m	struct:__anon1d0b6d960208	typeref:typename:int	file:
mode	generic/tclZlib.c	/^    int mode;			\/* Either the value TCL_ZLIB_STREAM_DEFLATE$/;"	m	struct:__anon1d0b6d960308	typeref:typename:int	file:
modes	generic/tclCmdIL.c	/^    enum modes {$/;"	g	function:Tcl_LsearchObjCmd	file:
module	unix/tclLoadDyld.c	/^    NSModule module;$/;"	m	struct:Tcl_DyldModuleHandle	typeref:typename:NSModule	file:
modulePtr	unix/tclLoadDyld.c	/^    Tcl_DyldModuleHandle *modulePtr;$/;"	m	struct:__anoncff33eb90108	typeref:typename:Tcl_DyldModuleHandle *	file:
month	generic/tclClockClassic.c	/^    int month;			\/* Month number *\/$/;"	m	struct:__anondf8925f30208	typeref:typename:int	file:
month	generic/tclDate.h	/^    int month;			\/* Month number *\/$/;"	m	struct:TclDateFields	typeref:typename:int
more-text	tools/tcltk-man2html-utils.tcl	/^proc more-text {} {$/;"	p
moresubs	generic/regcomp.c	/^moresubs($/;"	f	typeref:typename:void	file:
mostlyclean	compat/zlib/Makefile.in	/^mostlyclean: clean$/;"	t
mountHandle	generic/tclZipfs.c	/^    HANDLE mountHandle;		\/* Handle used for direct file access. *\/$/;"	m	struct:ZipFile	typeref:typename:HANDLE	file:
mountPoint	generic/tclZipfs.c	/^    char *mountPoint;		\/* Mount point name *\/$/;"	m	struct:ZipFile	typeref:typename:char *	file:
mountPointLen	generic/tclZipfs.c	/^    Tcl_Size mountPointLen;	\/* Length of mount point name *\/$/;"	m	struct:ZipFile	typeref:typename:Tcl_Size	file:
moveins	generic/regc_nfa.c	/^moveins($/;"	f	typeref:typename:void	file:
moveouts	generic/regc_nfa.c	/^moveouts($/;"	f	typeref:typename:void	file:
mp_2expt	libtommath/bn_mp_2expt.c	/^mp_err mp_2expt(mp_int *a, int b)$/;"	f	typeref:typename:mp_err
mp_abs	libtommath/bn_mp_abs.c	/^mp_err mp_abs(const mp_int *a, mp_int *b)$/;"	f	typeref:typename:mp_err
mp_add	generic/tclTomMathDecls.h	/^#define mp_add TclBN_mp_add$/;"	d
mp_add	libtommath/bn_mp_add.c	/^mp_err mp_add(const mp_int *a, const mp_int *b, mp_int *c)$/;"	f	typeref:typename:mp_err
mp_add_d	generic/tclTomMathDecls.h	/^#define mp_add_d TclBN_mp_add_d$/;"	d
mp_add_d	libtommath/bn_mp_add_d.c	/^mp_err mp_add_d(const mp_int *a, mp_digit b, mp_int *c)$/;"	f	typeref:typename:mp_err
mp_addmod	libtommath/bn_mp_addmod.c	/^mp_err mp_addmod(const mp_int *a, const mp_int *b, const mp_int *c, mp_int *d)$/;"	f	typeref:typename:mp_err
mp_and	generic/tclTomMathDecls.h	/^#define mp_and TclBN_mp_and$/;"	d
mp_and	libtommath/bn_mp_and.c	/^mp_err mp_and(const mp_int *a, const mp_int *b, mp_int *c)$/;"	f	typeref:typename:mp_err
mp_balance_mul	libtommath/bn_deprecated.c	/^mp_err mp_balance_mul(const mp_int *a, const mp_int *b, mp_int *c)$/;"	f	typeref:typename:mp_err
mp_bool	libtommath/tommath.h	/^typedef int mp_bool;$/;"	t	typeref:typename:int
mp_bool	libtommath/tommath.h	/^} mp_bool;$/;"	t	typeref:enum:__anon3ba6a9150303
mp_clamp	generic/tclTomMathDecls.h	/^#define mp_clamp TclBN_mp_clamp$/;"	d
mp_clamp	libtommath/bn_mp_clamp.c	/^void mp_clamp(mp_int *a)$/;"	f	typeref:typename:void
mp_clear	generic/tclTomMathDecls.h	/^#define mp_clear TclBN_mp_clear$/;"	d
mp_clear	libtommath/bn_mp_clear.c	/^void mp_clear(mp_int *a)$/;"	f	typeref:typename:void
mp_clear_multi	generic/tclTomMathDecls.h	/^#define mp_clear_multi TclBN_mp_clear_multi$/;"	d
mp_clear_multi	libtommath/bn_mp_clear_multi.c	/^void mp_clear_multi(mp_int *mp, ...)$/;"	f	typeref:typename:void
mp_cmp	generic/tclTomMathDecls.h	/^#define mp_cmp TclBN_mp_cmp$/;"	d
mp_cmp	libtommath/bn_mp_cmp.c	/^mp_ord mp_cmp(const mp_int *a, const mp_int *b)$/;"	f	typeref:typename:mp_ord
mp_cmp_d	generic/tclTomMathDecls.h	/^#define mp_cmp_d TclBN_mp_cmp_d$/;"	d
mp_cmp_d	libtommath/bn_mp_cmp_d.c	/^mp_ord mp_cmp_d(const mp_int *a, mp_digit b)$/;"	f	typeref:typename:mp_ord
mp_cmp_mag	generic/tclTomMathDecls.h	/^#define mp_cmp_mag TclBN_mp_cmp_mag$/;"	d
mp_cmp_mag	libtommath/bn_mp_cmp_mag.c	/^mp_ord mp_cmp_mag(const mp_int *a, const mp_int *b)$/;"	f	typeref:typename:mp_ord
mp_cnt_lsb	generic/tclTomMathDecls.h	/^#define mp_cnt_lsb TclBN_mp_cnt_lsb$/;"	d
mp_cnt_lsb	libtommath/bn_mp_cnt_lsb.c	/^int mp_cnt_lsb(const mp_int *a)$/;"	f	typeref:typename:int
mp_complement	libtommath/bn_mp_complement.c	/^mp_err mp_complement(const mp_int *a, mp_int *b)$/;"	f	typeref:typename:mp_err
mp_copy	generic/tclTomMathDecls.h	/^#define mp_copy TclBN_mp_copy$/;"	d
mp_copy	libtommath/bn_mp_copy.c	/^mp_err mp_copy(const mp_int *a, mp_int *b)$/;"	f	typeref:typename:mp_err
mp_count_bits	generic/tclTomMathDecls.h	/^#define mp_count_bits TclBN_mp_count_bits$/;"	d
mp_count_bits	libtommath/bn_mp_count_bits.c	/^int mp_count_bits(const mp_int *a)$/;"	f	typeref:typename:int
mp_decr	libtommath/bn_mp_decr.c	/^mp_err mp_decr(mp_int *a)$/;"	f	typeref:typename:mp_err
mp_digit	generic/tclTomMath.h	/^    typedef size_t mp_digit;$/;"	t	typeref:typename:size_t
mp_digit	libtommath/tommath.h	/^typedef uint8_t              mp_digit;$/;"	t	typeref:typename:uint8_t
mp_div	generic/tclTomMathDecls.h	/^#define mp_div TclBN_mp_div$/;"	d
mp_div	libtommath/bn_mp_div.c	/^mp_err mp_div(const mp_int *a, const mp_int *b, mp_int *c, mp_int *d)$/;"	f	typeref:typename:mp_err
mp_div_2	generic/tclTomMathDecls.h	/^#define mp_div_2 TclBN_mp_div_2$/;"	d
mp_div_2	libtommath/bn_mp_div_2.c	/^mp_err mp_div_2(const mp_int *a, mp_int *b)$/;"	f	typeref:typename:mp_err
mp_div_2d	generic/tclTomMathDecls.h	/^#define mp_div_2d TclBN_mp_div_2d$/;"	d
mp_div_2d	libtommath/bn_mp_div_2d.c	/^mp_err mp_div_2d(const mp_int *a, int b, mp_int *c, mp_int *d)$/;"	f	typeref:typename:mp_err
mp_div_3	libtommath/bn_deprecated.c	/^mp_err mp_div_3(const mp_int *a, mp_int *c, mp_digit *d)$/;"	f	typeref:typename:mp_err
mp_div_d	generic/tclTomMathDecls.h	/^#define mp_div_d TclBN_mp_div_d$/;"	d
mp_div_d	libtommath/bn_mp_div_d.c	/^mp_err mp_div_d(const mp_int *a, mp_digit b, mp_int *c, mp_digit *d)$/;"	f	typeref:typename:mp_err
mp_dr_is_modulus	libtommath/bn_mp_dr_is_modulus.c	/^mp_bool mp_dr_is_modulus(const mp_int *a)$/;"	f	typeref:typename:mp_bool
mp_dr_reduce	libtommath/bn_mp_dr_reduce.c	/^mp_err mp_dr_reduce(mp_int *x, const mp_int *n, mp_digit k)$/;"	f	typeref:typename:mp_err
mp_dr_setup	libtommath/bn_mp_dr_setup.c	/^void mp_dr_setup(const mp_int *a, mp_digit *d)$/;"	f	typeref:typename:void
mp_endian	generic/tclTomMath.h	/^    typedef int mp_endian;$/;"	t	typeref:typename:int
mp_endian	libtommath/tommath.h	/^typedef int mp_endian;$/;"	t	typeref:typename:int
mp_endian	libtommath/tommath.h	/^} mp_endian;$/;"	t	typeref:enum:__anon3ba6a9150603
mp_err	generic/tclTomMath.h	/^    typedef int mp_err;$/;"	t	typeref:typename:int
mp_err	libtommath/tommath.h	/^typedef int mp_err;$/;"	t	typeref:typename:int
mp_err	libtommath/tommath.h	/^} mp_err;$/;"	t	typeref:enum:__anon3ba6a9150403
mp_error_to_string	libtommath/bn_mp_error_to_string.c	/^const char *mp_error_to_string(mp_err code)$/;"	f	typeref:typename:const char *
mp_exch	generic/tclTomMathDecls.h	/^#define mp_exch TclBN_mp_exch$/;"	d
mp_exch	libtommath/bn_mp_exch.c	/^void mp_exch(mp_int *a, mp_int *b)$/;"	f	typeref:typename:void
mp_export	libtommath/bn_deprecated.c	/^mp_err mp_export(void *rop, size_t *countp, int order, size_t size,$/;"	f	typeref:typename:mp_err
mp_expt_d	generic/tclTomMathDecls.h	/^#define mp_expt_d /;"	d
mp_expt_d	libtommath/bn_deprecated.c	/^mp_err mp_expt_d(const mp_int *a, mp_digit b, mp_int *c)$/;"	f	typeref:typename:mp_err
mp_expt_d_ex	libtommath/bn_deprecated.c	/^mp_err mp_expt_d_ex(const mp_int *a, mp_digit b, mp_int *c, int fast)$/;"	f	typeref:typename:mp_err
mp_expt_n	generic/tclTomMathDecls.h	/^#define mp_expt_n TclBN_mp_expt_n$/;"	d
mp_expt_n	libtommath/bn_mp_expt_n.c	/^mp_err mp_expt_n(const mp_int *a, int b, mp_int *c)$/;"	f	typeref:typename:mp_err
mp_expt_u32	libtommath/bn_deprecated.c	/^mp_err mp_expt_u32(const mp_int *a, uint32_t b, mp_int *c)$/;"	f	typeref:typename:mp_err
mp_exptmod	libtommath/bn_mp_exptmod.c	/^mp_err mp_exptmod(const mp_int *G, const mp_int *X, const mp_int *P, mp_int *Y)$/;"	f	typeref:typename:mp_err
mp_exptmod_fast	libtommath/bn_deprecated.c	/^mp_err mp_exptmod_fast(const mp_int *G, const mp_int *X, const mp_int *P, mp_int *Y, int redmode/;"	f	typeref:typename:mp_err
mp_exteuclid	libtommath/bn_mp_exteuclid.c	/^mp_err mp_exteuclid(const mp_int *a, const mp_int *b, mp_int *U1, mp_int *U2, mp_int *U3)$/;"	f	typeref:typename:mp_err
mp_fread	libtommath/bn_mp_fread.c	/^mp_err mp_fread(mp_int *a, int radix, FILE *stream)$/;"	f	typeref:typename:mp_err
mp_from_sbin	libtommath/bn_mp_from_sbin.c	/^mp_err mp_from_sbin(mp_int *a, const unsigned char *buf, size_t size)$/;"	f	typeref:typename:mp_err
mp_from_ubin	libtommath/bn_mp_from_ubin.c	/^mp_err mp_from_ubin(mp_int *a, const unsigned char *buf, size_t size)$/;"	f	typeref:typename:mp_err
mp_fwrite	libtommath/bn_mp_fwrite.c	/^mp_err mp_fwrite(const mp_int *a, int radix, FILE *stream)$/;"	f	typeref:typename:mp_err
mp_gcd	libtommath/bn_mp_gcd.c	/^mp_err mp_gcd(const mp_int *a, const mp_int *b, mp_int *c)$/;"	f	typeref:typename:mp_err
mp_get_bit	libtommath/bn_deprecated.c	/^int mp_get_bit(const mp_int *a, int b)$/;"	f	typeref:typename:int
mp_get_double	libtommath/bn_mp_get_double.c	/^double mp_get_double(const mp_int *a)$/;"	f	typeref:typename:double
mp_get_int	libtommath/bn_deprecated.c	/^unsigned long mp_get_int(const mp_int *a)$/;"	f	typeref:typename:unsigned long
mp_get_ll	generic/tclTomMathDecls.h	/^#define mp_get_ll(/;"	d
mp_get_long	libtommath/bn_deprecated.c	/^unsigned long mp_get_long(const mp_int *a)$/;"	f	typeref:typename:unsigned long
mp_get_long_long	libtommath/bn_deprecated.c	/^unsigned long long mp_get_long_long(const mp_int *a)$/;"	f	typeref:typename:unsigned long long
mp_get_mag_u64	generic/tclTomMathDecls.h	/^#define mp_get_mag_u64 TclBN_mp_get_mag_u64$/;"	d
mp_get_u32	libtommath/tommath.h	/^#define mp_get_u32(/;"	d
mp_get_u64	libtommath/tommath.h	/^#define mp_get_u64(/;"	d
mp_get_ul	libtommath/tommath.h	/^#define mp_get_ul(/;"	d
mp_get_ull	generic/tclTomMathDecls.h	/^#define mp_get_ull(/;"	d
mp_get_ull	libtommath/tommath.h	/^#define mp_get_ull(a) (MP_DEPRECATED_PRAGMA("mp_get_ull(/;"	d
mp_grow	generic/tclTomMathDecls.h	/^#define mp_grow TclBN_mp_grow$/;"	d
mp_grow	libtommath/bn_mp_grow.c	/^mp_err mp_grow(mp_int *a, int size)$/;"	f	typeref:typename:mp_err
mp_import	libtommath/bn_deprecated.c	/^mp_err mp_import(mp_int *rop, size_t count, int order, size_t size, int endian, size_t nails,$/;"	f	typeref:typename:mp_err
mp_incr	libtommath/bn_mp_incr.c	/^mp_err mp_incr(mp_int *a)$/;"	f	typeref:typename:mp_err
mp_init	generic/tclTomMathDecls.h	/^#define mp_init TclBN_mp_init$/;"	d
mp_init	libtommath/bn_mp_init.c	/^mp_err mp_init(mp_int *a)$/;"	f	typeref:typename:mp_err
mp_init_copy	generic/tclTomMathDecls.h	/^#define mp_init_copy TclBN_mp_init_copy$/;"	d
mp_init_copy	libtommath/bn_mp_init_copy.c	/^mp_err mp_init_copy(mp_int *a, const mp_int *b)$/;"	f	typeref:typename:mp_err
mp_init_i32	generic/tclTomMathDecls.h	/^#define mp_init_i32(/;"	d
mp_init_i64	generic/tclTomMathDecls.h	/^#define mp_init_i64 TclBN_mp_init_i64$/;"	d
mp_init_l	generic/tclTomMathDecls.h	/^#define mp_init_l(/;"	d
mp_init_ll	generic/tclTomMathDecls.h	/^#define mp_init_ll(/;"	d
mp_init_multi	generic/tclTomMathDecls.h	/^#define mp_init_multi TclBN_mp_init_multi$/;"	d
mp_init_multi	libtommath/bn_mp_init_multi.c	/^mp_err mp_init_multi(mp_int *mp, ...)$/;"	f	typeref:typename:mp_err
mp_init_set	generic/tclTomMathDecls.h	/^#define mp_init_set TclBN_mp_init_set$/;"	d
mp_init_set	libtommath/bn_mp_init_set.c	/^mp_err mp_init_set(mp_int *a, mp_digit b)$/;"	f	typeref:typename:mp_err
mp_init_set_int	libtommath/bn_deprecated.c	/^mp_err mp_init_set_int(mp_int *a, unsigned long b)$/;"	f	typeref:typename:mp_err
mp_init_size	generic/tclTomMathDecls.h	/^#define mp_init_size TclBN_mp_init_size$/;"	d
mp_init_size	libtommath/bn_mp_init_size.c	/^mp_err mp_init_size(mp_int *a, int size)$/;"	f	typeref:typename:mp_err
mp_init_u32	generic/tclTomMathDecls.h	/^#define mp_init_u32(/;"	d
mp_init_u64	generic/tclTomMathDecls.h	/^#define mp_init_u64 TclBN_mp_init_u64$/;"	d
mp_init_ul	generic/tclTomMathDecls.h	/^#define mp_init_ul(/;"	d
mp_init_ull	generic/tclTomMathDecls.h	/^#define mp_init_ull(/;"	d
mp_int	generic/tclTomMath.h	/^	typedef struct mp_int mp_int;$/;"	t	typeref:struct:mp_int
mp_int	generic/tclTomMath.h	/^    struct mp_int {$/;"	s
mp_int	libtommath/tommath.h	/^struct mp_int {$/;"	s
mp_int	libtommath/tommath.h	/^typedef struct mp_int mp_int;$/;"	t	typeref:struct:mp_int
mp_invmod	libtommath/bn_mp_invmod.c	/^mp_err mp_invmod(const mp_int *a, const mp_int *b, mp_int *c)$/;"	f	typeref:typename:mp_err
mp_invmod_slow	libtommath/bn_deprecated.c	/^mp_err mp_invmod_slow(const mp_int *a, const mp_int *b, mp_int *c)$/;"	f	typeref:typename:mp_err
mp_is_square	libtommath/bn_mp_is_square.c	/^mp_err mp_is_square(const mp_int *arg, mp_bool *ret)$/;"	f	typeref:typename:mp_err
mp_iseven	generic/tclTomMathDecls.h	/^#define mp_iseven(/;"	d
mp_iseven	libtommath/bn_mp_iseven.c	/^mp_bool mp_iseven(const mp_int *a)$/;"	f	typeref:typename:mp_bool
mp_isneg	generic/tclTomMath.h	/^#   define mp_isneg(/;"	d
mp_isneg	libtommath/tommath.h	/^#define mp_isneg(/;"	d
mp_isodd	generic/tclTomMathDecls.h	/^#define mp_isodd(/;"	d
mp_isodd	libtommath/bn_mp_isodd.c	/^mp_bool mp_isodd(const mp_int *a)$/;"	f	typeref:typename:mp_bool
mp_iszero	generic/tclTomMath.h	/^#   define mp_iszero(/;"	d
mp_iszero	libtommath/tommath.h	/^#define mp_iszero(/;"	d
mp_jacobi	libtommath/bn_deprecated.c	/^mp_err mp_jacobi(const mp_int *a, const mp_int *n, int *c)$/;"	f	typeref:typename:mp_err
mp_karatsuba_mul	libtommath/bn_deprecated.c	/^mp_err mp_karatsuba_mul(const mp_int *a, const mp_int *b, mp_int *c)$/;"	f	typeref:typename:mp_err
mp_karatsuba_sqr	libtommath/bn_deprecated.c	/^mp_err mp_karatsuba_sqr(const mp_int *a, mp_int *b)$/;"	f	typeref:typename:mp_err
mp_kronecker	libtommath/bn_mp_kronecker.c	/^mp_err mp_kronecker(const mp_int *a, const mp_int *p, int *c)$/;"	f	typeref:typename:mp_err
mp_lcm	libtommath/bn_mp_lcm.c	/^mp_err mp_lcm(const mp_int *a, const mp_int *b, mp_int *c)$/;"	f	typeref:typename:mp_err
mp_log_n	libtommath/bn_mp_log_n.c	/^mp_err mp_log_n(const mp_int *a, int base, int *c)$/;"	f	typeref:typename:mp_err
mp_log_u32	libtommath/bn_deprecated.c	/^mp_err mp_log_u32(const mp_int *a, uint32_t base, uint32_t *c)$/;"	f	typeref:typename:mp_err
mp_lshd	generic/tclTomMathDecls.h	/^#define mp_lshd TclBN_mp_lshd$/;"	d
mp_lshd	libtommath/bn_mp_lshd.c	/^mp_err mp_lshd(mp_int *a, int b)$/;"	f	typeref:typename:mp_err
mp_mag_size	libtommath/tommath.h	/^#define mp_mag_size(/;"	d
mp_mod	generic/tclTomMathDecls.h	/^#define mp_mod TclBN_mp_mod$/;"	d
mp_mod	libtommath/bn_mp_mod.c	/^mp_err mp_mod(const mp_int *a, const mp_int *b, mp_int *c)$/;"	f	typeref:typename:mp_err
mp_mod_2d	generic/tclTomMathDecls.h	/^#define mp_mod_2d TclBN_mp_mod_2d$/;"	d
mp_mod_2d	libtommath/bn_mp_mod_2d.c	/^mp_err mp_mod_2d(const mp_int *a, int b, mp_int *c)$/;"	f	typeref:typename:mp_err
mp_mod_d	libtommath/bn_mp_mod_d.c	/^mp_err mp_mod_d(const mp_int *a, mp_digit b, mp_digit *c)$/;"	f	typeref:typename:mp_err
mp_montgomery_calc_normalization	libtommath/bn_mp_montgomery_calc_normalization.c	/^mp_err mp_montgomery_calc_normalization(mp_int *a, const mp_int *b)$/;"	f	typeref:typename:mp_err
mp_montgomery_reduce	libtommath/bn_mp_montgomery_reduce.c	/^mp_err mp_montgomery_reduce(mp_int *x, const mp_int *n, mp_digit rho)$/;"	f	typeref:typename:mp_err
mp_montgomery_setup	libtommath/bn_mp_montgomery_setup.c	/^mp_err mp_montgomery_setup(const mp_int *n, mp_digit *rho)$/;"	f	typeref:typename:mp_err
mp_mul	generic/tclTomMathDecls.h	/^#define mp_mul TclBN_mp_mul$/;"	d
mp_mul	libtommath/bn_mp_mul.c	/^mp_err mp_mul(const mp_int *a, const mp_int *b, mp_int *c)$/;"	f	typeref:typename:mp_err
mp_mul_2	generic/tclTomMathDecls.h	/^#define mp_mul_2 TclBN_mp_mul_2$/;"	d
mp_mul_2	libtommath/bn_mp_mul_2.c	/^mp_err mp_mul_2(const mp_int *a, mp_int *b)$/;"	f	typeref:typename:mp_err
mp_mul_2d	generic/tclTomMathDecls.h	/^#define mp_mul_2d TclBN_mp_mul_2d$/;"	d
mp_mul_2d	libtommath/bn_mp_mul_2d.c	/^mp_err mp_mul_2d(const mp_int *a, int b, mp_int *c)$/;"	f	typeref:typename:mp_err
mp_mul_d	generic/tclTomMathDecls.h	/^#define mp_mul_d TclBN_mp_mul_d$/;"	d
mp_mul_d	libtommath/bn_mp_mul_d.c	/^mp_err mp_mul_d(const mp_int *a, mp_digit b, mp_int *c)$/;"	f	typeref:typename:mp_err
mp_mulmod	libtommath/bn_mp_mulmod.c	/^mp_err mp_mulmod(const mp_int *a, const mp_int *b, const mp_int *c, mp_int *d)$/;"	f	typeref:typename:mp_err
mp_n_root	libtommath/bn_deprecated.c	/^mp_err mp_n_root(const mp_int *a, mp_digit b, mp_int *c)$/;"	f	typeref:typename:mp_err
mp_n_root_ex	libtommath/bn_deprecated.c	/^mp_err mp_n_root_ex(const mp_int *a, mp_digit b, mp_int *c, int fast)$/;"	f	typeref:typename:mp_err
mp_neg	generic/tclTomMathDecls.h	/^#define mp_neg TclBN_mp_neg$/;"	d
mp_neg	libtommath/bn_mp_neg.c	/^mp_err mp_neg(const mp_int *a, mp_int *b)$/;"	f	typeref:typename:mp_err
mp_or	generic/tclTomMathDecls.h	/^#define mp_or TclBN_mp_or$/;"	d
mp_or	libtommath/bn_mp_or.c	/^mp_err mp_or(const mp_int *a, const mp_int *b, mp_int *c)$/;"	f	typeref:typename:mp_err
mp_ord	generic/tclTomMath.h	/^    typedef int mp_ord;$/;"	t	typeref:typename:int
mp_ord	libtommath/tommath.h	/^typedef int mp_ord;$/;"	t	typeref:typename:int
mp_ord	libtommath/tommath.h	/^} mp_ord;$/;"	t	typeref:enum:__anon3ba6a9150203
mp_order	generic/tclTomMath.h	/^    typedef int mp_order;$/;"	t	typeref:typename:int
mp_order	libtommath/tommath.h	/^typedef int mp_order;$/;"	t	typeref:typename:int
mp_order	libtommath/tommath.h	/^} mp_order;$/;"	t	typeref:enum:__anon3ba6a9150503
mp_pack	generic/tclTomMathDecls.h	/^#define mp_pack TclBN_mp_pack$/;"	d
mp_pack	libtommath/bn_mp_pack.c	/^mp_err mp_pack(void *rop, size_t maxcount, size_t *written, mp_order order, size_t size,$/;"	f	typeref:typename:mp_err
mp_pack_count	generic/tclTomMathDecls.h	/^#define mp_pack_count TclBN_mp_pack_count$/;"	d
mp_pack_count	libtommath/bn_mp_pack_count.c	/^size_t mp_pack_count(const mp_int *a, size_t nails, size_t size)$/;"	f	typeref:typename:size_t
mp_prime_fermat	libtommath/bn_mp_prime_fermat.c	/^mp_err mp_prime_fermat(const mp_int *a, const mp_int *b, mp_bool *result)$/;"	f	typeref:typename:mp_err
mp_prime_frobenius_underwood	libtommath/bn_mp_prime_frobenius_underwood.c	/^mp_err mp_prime_frobenius_underwood(const mp_int *N, mp_bool *result)$/;"	f	typeref:typename:mp_err
mp_prime_is_prime	libtommath/bn_mp_prime_is_prime.c	/^mp_err mp_prime_is_prime(const mp_int *a, int t, mp_bool *result)$/;"	f	typeref:typename:mp_err
mp_prime_miller_rabin	libtommath/bn_mp_prime_miller_rabin.c	/^mp_err mp_prime_miller_rabin(const mp_int *a, const mp_int *b, mp_bool *result)$/;"	f	typeref:typename:mp_err
mp_prime_next_prime	libtommath/bn_mp_prime_next_prime.c	/^mp_err mp_prime_next_prime(mp_int *a, int t, int bbs_style)$/;"	f	typeref:typename:mp_err
mp_prime_rabin_miller_trials	libtommath/bn_mp_prime_rabin_miller_trials.c	/^int mp_prime_rabin_miller_trials(int size)$/;"	f	typeref:typename:int
mp_prime_rand	libtommath/bn_mp_prime_rand.c	/^mp_err mp_prime_rand(mp_int *a, int t, int size, int flags)$/;"	f	typeref:typename:mp_err
mp_prime_random	libtommath/tommath.h	/^#define mp_prime_random(a, t, size, bbs, cb, dat) (MP_DEPRECATED_PRAGMA("mp_prime_random has bee/;"	d
mp_prime_random_ex	libtommath/bn_deprecated.c	/^mp_err mp_prime_random_ex(mp_int *a, int t, int size, int flags, private_mp_prime_callback cb, v/;"	f	typeref:typename:mp_err
mp_prime_strong_lucas_selfridge	libtommath/bn_mp_prime_strong_lucas_selfridge.c	/^mp_err mp_prime_strong_lucas_selfridge(const mp_int *a, mp_bool *result)$/;"	f	typeref:typename:mp_err
mp_radix_size	generic/tclTomMathDecls.h	/^#define mp_radix_size TclBN_mp_radix_size$/;"	d
mp_radix_size	libtommath/bn_mp_radix_size.c	/^mp_err mp_radix_size(const mp_int *a, int radix, int *size)$/;"	f	typeref:typename:mp_err
mp_rand	libtommath/bn_mp_rand.c	/^mp_err mp_rand(mp_int *a, int digits)$/;"	f	typeref:typename:mp_err
mp_rand_digit	libtommath/bn_deprecated.c	/^mp_err mp_rand_digit(mp_digit *r)$/;"	f	typeref:typename:mp_err
mp_rand_source	libtommath/bn_mp_rand.c	/^void mp_rand_source(mp_err(*source)(void *out, size_t size))$/;"	f	typeref:typename:void
mp_raw_size	libtommath/tommath.h	/^#define mp_raw_size(/;"	d
mp_read_mag	libtommath/tommath.h	/^#define mp_read_mag(/;"	d
mp_read_radix	generic/tclTomMathDecls.h	/^#define mp_read_radix TclBN_mp_read_radix$/;"	d
mp_read_radix	libtommath/bn_mp_read_radix.c	/^mp_err mp_read_radix(mp_int *a, const char *str, int radix)$/;"	f	typeref:typename:mp_err
mp_read_raw	libtommath/tommath.h	/^#define mp_read_raw(/;"	d
mp_read_signed_bin	libtommath/bn_deprecated.c	/^mp_err mp_read_signed_bin(mp_int *a, const unsigned char *b, int c)$/;"	f	typeref:typename:mp_err
mp_read_unsigned_bin	libtommath/bn_deprecated.c	/^mp_err mp_read_unsigned_bin(mp_int *a, const unsigned char *b, int c)$/;"	f	typeref:typename:mp_err
mp_reduce	libtommath/bn_mp_reduce.c	/^mp_err mp_reduce(mp_int *x, const mp_int *m, const mp_int *mu)$/;"	f	typeref:typename:mp_err
mp_reduce_2k	libtommath/bn_mp_reduce_2k.c	/^mp_err mp_reduce_2k(mp_int *a, const mp_int *n, mp_digit d)$/;"	f	typeref:typename:mp_err
mp_reduce_2k_l	libtommath/bn_mp_reduce_2k_l.c	/^mp_err mp_reduce_2k_l(mp_int *a, const mp_int *n, const mp_int *d)$/;"	f	typeref:typename:mp_err
mp_reduce_2k_setup	libtommath/bn_mp_reduce_2k_setup.c	/^mp_err mp_reduce_2k_setup(const mp_int *a, mp_digit *d)$/;"	f	typeref:typename:mp_err
mp_reduce_2k_setup_l	libtommath/bn_mp_reduce_2k_setup_l.c	/^mp_err mp_reduce_2k_setup_l(const mp_int *a, mp_int *d)$/;"	f	typeref:typename:mp_err
mp_reduce_is_2k	libtommath/bn_mp_reduce_is_2k.c	/^mp_bool mp_reduce_is_2k(const mp_int *a)$/;"	f	typeref:typename:mp_bool
mp_reduce_is_2k_l	libtommath/bn_mp_reduce_is_2k_l.c	/^mp_bool mp_reduce_is_2k_l(const mp_int *a)$/;"	f	typeref:typename:mp_bool
mp_reduce_setup	libtommath/bn_mp_reduce_setup.c	/^mp_err mp_reduce_setup(mp_int *a, const mp_int *b)$/;"	f	typeref:typename:mp_err
mp_root_n	libtommath/bn_mp_root_n.c	/^mp_err mp_root_n(const mp_int *a, int b, mp_int *c)$/;"	f	typeref:typename:mp_err
mp_root_u32	libtommath/bn_deprecated.c	/^mp_err mp_root_u32(const mp_int *a, uint32_t b, mp_int *c)$/;"	f	typeref:typename:mp_err
mp_rshd	generic/tclTomMathDecls.h	/^#define mp_rshd TclBN_mp_rshd$/;"	d
mp_rshd	libtommath/bn_mp_rshd.c	/^void mp_rshd(mp_int *a, int b)$/;"	f	typeref:typename:void
mp_s_rmap	generic/tclTomMathDecls.h	/^#define mp_s_rmap TclBN_mp_s_rmap$/;"	d
mp_s_rmap	libtommath/bn_mp_radix_smap.c	/^const char *const mp_s_rmap = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz+\//;"	v	typeref:typename:const char * const
mp_s_rmap_reverse	generic/tclTomMathDecls.h	/^#define mp_s_rmap_reverse TclBN_mp_s_rmap_reverse$/;"	d
mp_s_rmap_reverse	libtommath/bn_mp_radix_smap.c	/^const uint8_t mp_s_rmap_reverse[] = {$/;"	v	typeref:typename:const uint8_t[]
mp_s_rmap_reverse_sz	generic/tclTomMathDecls.h	/^#define mp_s_rmap_reverse_sz TclBN_mp_s_rmap_reverse_sz$/;"	d
mp_s_rmap_reverse_sz	libtommath/bn_mp_radix_smap.c	/^const size_t mp_s_rmap_reverse_sz = sizeof(mp_s_rmap_reverse);$/;"	v	typeref:typename:const size_t
mp_sbin_size	libtommath/bn_mp_sbin_size.c	/^size_t mp_sbin_size(const mp_int *a)$/;"	f	typeref:typename:size_t
mp_set	generic/tclTomMathDecls.h	/^#define mp_set TclBN_mp_set$/;"	d
mp_set	generic/tclTomMathDecls.h	/^#define mp_set(a,b) mp_set_/;"	d
mp_set	libtommath/bn_mp_set.c	/^void mp_set(mp_int *a, mp_digit b)$/;"	f	typeref:typename:void
mp_set_double	libtommath/bn_mp_set_double.c	/^mp_err mp_set_double(mp_int *a, double b)$/;"	f	typeref:typename:mp_err
mp_set_i32	generic/tclTomMathDecls.h	/^#define mp_set_i32(/;"	d
mp_set_i64	generic/tclTomMathDecls.h	/^#define mp_set_i64 TclBN_mp_set_i64$/;"	d
mp_set_int	libtommath/bn_deprecated.c	/^mp_err mp_set_int(mp_int *a, unsigned long b)$/;"	f	typeref:typename:mp_err
mp_set_l	generic/tclTomMathDecls.h	/^#define mp_set_l(/;"	d
mp_set_ll	generic/tclTomMathDecls.h	/^#define mp_set_ll(/;"	d
mp_set_long	libtommath/bn_deprecated.c	/^mp_err mp_set_long(mp_int *a, unsigned long b)$/;"	f	typeref:typename:mp_err
mp_set_long_long	libtommath/bn_deprecated.c	/^mp_err mp_set_long_long(mp_int *a, unsigned long long b)$/;"	f	typeref:typename:mp_err
mp_set_u32	generic/tclTomMathDecls.h	/^#define mp_set_u32(/;"	d
mp_set_u64	generic/tclTomMathDecls.h	/^#define mp_set_u64 TclBN_mp_set_u64$/;"	d
mp_set_ul	generic/tclTomMathDecls.h	/^#define mp_set_ul(/;"	d
mp_set_ull	generic/tclTomMathDecls.h	/^#define mp_set_ull(/;"	d
mp_shrink	generic/tclTomMathDecls.h	/^#define mp_shrink TclBN_mp_shrink$/;"	d
mp_shrink	libtommath/bn_mp_shrink.c	/^mp_err mp_shrink(mp_int *a)$/;"	f	typeref:typename:mp_err
mp_sign	generic/tclTomMath.h	/^    typedef int mp_sign;$/;"	t	typeref:typename:int
mp_sign	libtommath/tommath.h	/^typedef int mp_sign;$/;"	t	typeref:typename:int
mp_sign	libtommath/tommath.h	/^} mp_sign;$/;"	t	typeref:enum:__anon3ba6a9150103
mp_signed_bin_size	libtommath/bn_deprecated.c	/^int mp_signed_bin_size(const mp_int *a)$/;"	f	typeref:typename:int
mp_signed_rsh	generic/tclTomMathDecls.h	/^#define mp_signed_rsh TclBN_mp_signed_rsh$/;"	d
mp_signed_rsh	libtommath/bn_mp_signed_rsh.c	/^mp_err mp_signed_rsh(const mp_int *a, int b, mp_int *c)$/;"	f	typeref:typename:mp_err
mp_sqr	generic/tclTomMathDecls.h	/^#define mp_sqr TclBN_mp_sqr$/;"	d
mp_sqr	generic/tclTomMathDecls.h	/^#define mp_sqr(/;"	d
mp_sqr	libtommath/bn_mp_sqr.c	/^mp_err mp_sqr(const mp_int *a, mp_int *b)$/;"	f	typeref:typename:mp_err
mp_sqr	libtommath/tommath_private.h	/^#define mp_sqr TclBN_mp_sqr$/;"	d
mp_sqrmod	libtommath/bn_mp_sqrmod.c	/^mp_err mp_sqrmod(const mp_int *a, const mp_int *b, mp_int *c)$/;"	f	typeref:typename:mp_err
mp_sqrt	generic/tclTomMathDecls.h	/^#define mp_sqrt TclBN_mp_sqrt$/;"	d
mp_sqrt	libtommath/bn_mp_sqrt.c	/^mp_err mp_sqrt(const mp_int *arg, mp_int *ret)$/;"	f	typeref:typename:mp_err
mp_sqrtmod_prime	libtommath/bn_mp_sqrtmod_prime.c	/^mp_err mp_sqrtmod_prime(const mp_int *n, const mp_int *prime, mp_int *ret)$/;"	f	typeref:typename:mp_err
mp_sub	generic/tclTomMathDecls.h	/^#define mp_sub TclBN_mp_sub$/;"	d
mp_sub	libtommath/bn_mp_sub.c	/^mp_err mp_sub(const mp_int *a, const mp_int *b, mp_int *c)$/;"	f	typeref:typename:mp_err
mp_sub_d	generic/tclTomMathDecls.h	/^#define mp_sub_d TclBN_mp_sub_d$/;"	d
mp_sub_d	libtommath/bn_mp_sub_d.c	/^mp_err mp_sub_d(const mp_int *a, mp_digit b, mp_int *c)$/;"	f	typeref:typename:mp_err
mp_submod	libtommath/bn_mp_submod.c	/^mp_err mp_submod(const mp_int *a, const mp_int *b, const mp_int *c, mp_int *d)$/;"	f	typeref:typename:mp_err
mp_tc_and	generic/tclTomMathDecls.h	/^#define mp_tc_and /;"	d
mp_tc_and	libtommath/bn_deprecated.c	/^mp_err mp_tc_and(const mp_int *a, const mp_int *b, mp_int *c)$/;"	f	typeref:typename:mp_err
mp_tc_div_2d	generic/tclTomMathDecls.h	/^#define mp_tc_div_2d /;"	d
mp_tc_div_2d	libtommath/bn_deprecated.c	/^mp_err mp_tc_div_2d(const mp_int *a, int b, mp_int *c)$/;"	f	typeref:typename:mp_err
mp_tc_or	generic/tclTomMathDecls.h	/^#define mp_tc_or /;"	d
mp_tc_or	libtommath/bn_deprecated.c	/^mp_err mp_tc_or(const mp_int *a, const mp_int *b, mp_int *c)$/;"	f	typeref:typename:mp_err
mp_tc_xor	generic/tclTomMathDecls.h	/^#define mp_tc_xor /;"	d
mp_tc_xor	libtommath/bn_deprecated.c	/^mp_err mp_tc_xor(const mp_int *a, const mp_int *b, mp_int *c)$/;"	f	typeref:typename:mp_err
mp_to_binary	libtommath/tommath.h	/^#define mp_to_binary(/;"	d
mp_to_decimal	libtommath/tommath.h	/^#define mp_to_decimal(/;"	d
mp_to_hex	libtommath/tommath.h	/^#define mp_to_hex(/;"	d
mp_to_octal	libtommath/tommath.h	/^#define mp_to_octal(/;"	d
mp_to_radix	generic/tclTomMathDecls.h	/^#define mp_to_radix TclBN_mp_to_radix$/;"	d
mp_to_radix	libtommath/bn_mp_to_radix.c	/^mp_err mp_to_radix(const mp_int *a, char *str, size_t maxlen, size_t *written, int radix)$/;"	f	typeref:typename:mp_err
mp_to_sbin	libtommath/bn_mp_to_sbin.c	/^mp_err mp_to_sbin(const mp_int *a, unsigned char *buf, size_t maxlen, size_t *written)$/;"	f	typeref:typename:mp_err
mp_to_signed_bin	libtommath/bn_deprecated.c	/^mp_err mp_to_signed_bin(const mp_int *a, unsigned char *b)$/;"	f	typeref:typename:mp_err
mp_to_signed_bin_n	libtommath/bn_deprecated.c	/^mp_err mp_to_signed_bin_n(const mp_int *a, unsigned char *b, unsigned long *outlen)$/;"	f	typeref:typename:mp_err
mp_to_ubin	generic/tclTomMathDecls.h	/^#define mp_to_ubin TclBN_mp_to_ubin$/;"	d
mp_to_ubin	libtommath/bn_mp_to_ubin.c	/^mp_err mp_to_ubin(const mp_int *a, unsigned char *buf, size_t maxlen, size_t *written)$/;"	f	typeref:typename:mp_err
mp_to_unsigned_bin	generic/tclTomMathDecls.h	/^#define mp_to_unsigned_bin TclBN_mp_to_unsigned_bin$/;"	d
mp_to_unsigned_bin	libtommath/bn_deprecated.c	/^mp_err mp_to_unsigned_bin(const mp_int *a, unsigned char *b)$/;"	f	typeref:typename:mp_err
mp_to_unsigned_bin_n	generic/tclTomMathDecls.h	/^#define mp_to_unsigned_bin_n TclBN_mp_to_unsigned_bin_n$/;"	d
mp_to_unsigned_bin_n	libtommath/bn_deprecated.c	/^mp_err mp_to_unsigned_bin_n(const mp_int *a, unsigned char *b, unsigned long *outlen)$/;"	f	typeref:typename:mp_err
mp_tobinary	libtommath/tommath.h	/^#define mp_tobinary(/;"	d
mp_todecimal	libtommath/tommath.h	/^#define mp_todecimal(/;"	d
mp_tohex	libtommath/tommath.h	/^#define mp_tohex(/;"	d
mp_tomag	libtommath/tommath.h	/^#define mp_tomag(/;"	d
mp_tooctal	libtommath/tommath.h	/^#define mp_tooctal(/;"	d
mp_toom_mul	libtommath/bn_deprecated.c	/^mp_err mp_toom_mul(const mp_int *a, const mp_int *b, mp_int *c)$/;"	f	typeref:typename:mp_err
mp_toom_sqr	libtommath/bn_deprecated.c	/^mp_err mp_toom_sqr(const mp_int *a, mp_int *b)$/;"	f	typeref:typename:mp_err
mp_toradix	libtommath/bn_deprecated.c	/^mp_err mp_toradix(const mp_int *a, char *str, int radix)$/;"	f	typeref:typename:mp_err
mp_toradix_n	generic/tclTomMathDecls.h	/^#define mp_toradix_n TclBN_mp_toradix_n$/;"	d
mp_toradix_n	libtommath/bn_deprecated.c	/^mp_err mp_toradix_n(const mp_int *a, char *str, int radix, int maxlen)$/;"	f	typeref:typename:mp_err
mp_toraw	libtommath/tommath.h	/^#define mp_toraw(/;"	d
mp_ubin_size	generic/tclTomMathDecls.h	/^#define mp_ubin_size TclBN_mp_ubin_size$/;"	d
mp_ubin_size	libtommath/bn_mp_ubin_size.c	/^size_t mp_ubin_size(const mp_int *a)$/;"	f	typeref:typename:size_t
mp_unpack	generic/tclTomMathDecls.h	/^#define mp_unpack TclBN_mp_unpack$/;"	d
mp_unpack	libtommath/bn_mp_unpack.c	/^mp_err mp_unpack(mp_int *rop, size_t count, mp_order order, size_t size,$/;"	f	typeref:typename:mp_err
mp_unsigned_bin_size	libtommath/bn_deprecated.c	/^int mp_unsigned_bin_size(const mp_int *a)$/;"	f	typeref:typename:int
mp_word	libtommath/tommath.h	/^#define mp_word MP_DEPRECATED_PRAGMA("mp_word has been made private") private_mp_word$/;"	d
mp_word	libtommath/tommath_private.h	/^typedef private_mp_word mp_word;$/;"	t	typeref:typename:private_mp_word
mp_xor	generic/tclTomMathDecls.h	/^#define mp_xor TclBN_mp_xor$/;"	d
mp_xor	libtommath/bn_mp_xor.c	/^mp_err mp_xor(const mp_int *a, const mp_int *b, mp_int *c)$/;"	f	typeref:typename:mp_err
mp_zero	generic/tclTomMathDecls.h	/^#define mp_zero TclBN_mp_zero$/;"	d
mp_zero	libtommath/bn_mp_zero.c	/^void mp_zero(mp_int *a)$/;"	f	typeref:typename:void
msg	compat/zlib/contrib/dotzlib/DotZLib/DotZLib.cs	/^        string msg;$/;"	f	struct:DotZLib.ZStream
msg	compat/zlib/gzguts.h	/^    char *msg;              \/* error message *\/$/;"	m	struct:__anon361a15920108	typeref:typename:char *
msg	compat/zlib/test/minigzip.c	/^    char *msg;$/;"	m	struct:gzFile_s	typeref:typename:char *	file:
msg	compat/zlib/zlib.h	/^    z_const char *msg;  \/* last error message, NULL if no error *\/$/;"	m	struct:z_stream_s	typeref:typename:z_const char *
msg	generic/tclInt.h	/^    const char *msg;		\/* Error message part. *\/$/;"	m	struct:ForIterData	typeref:typename:const char *
msg	generic/tclProcess.c	/^    Tcl_Obj *msg;		\/* Error message. *\/$/;"	m	struct:ProcessInfo	typeref:typename:Tcl_Obj *	file:
msgStr	generic/tclIORChan.c	/^    char *msgStr;		\/* O: Error message for handler failure *\/$/;"	m	struct:__anon92d8dd290608	typeref:typename:char *	file:
msgStr	generic/tclIORTrans.c	/^    char *msgStr;		\/* O: Error message for handler failure *\/$/;"	m	struct:__anon21e740770608	typeref:typename:char *	file:
msg_dstlost	generic/tclIORChan.c	/^static const char *msg_dstlost    = "-code 1 -level 0 -errorcode NONE -errorinfo {} -errorline 1/;"	v	typeref:typename:const char *	file:
msg_dstlost	generic/tclIORTrans.c	/^static const char *msg_dstlost =$/;"	v	typeref:typename:const char *	file:
msg_read_nonbyte	generic/tclIORChan.c	/^static const char *msg_read_nonbyte = "{read delivered nonbyte result}";$/;"	v	typeref:typename:const char *	file:
msg_read_toomuch	generic/tclIORChan.c	/^static const char *msg_read_toomuch = "{read delivered more than requested}";$/;"	v	typeref:typename:const char *	file:
msg_read_unsup	generic/tclIORTrans.c	/^static const char *msg_read_unsup = "{read not supported by Tcl driver}";$/;"	v	typeref:typename:const char *	file:
msg_seek_beforestart	generic/tclIORChan.c	/^static const char *msg_seek_beforestart = "{Tried to seek before origin}";$/;"	v	typeref:typename:const char *	file:
msg_send_dstlost	generic/tclIORChan.c	/^static const char *msg_send_dstlost    = "{Owner lost}";$/;"	v	typeref:typename:const char *	file:
msg_send_dstlost	generic/tclIORTrans.c	/^static const char *msg_send_dstlost = "{Owner lost}";$/;"	v	typeref:typename:const char *	file:
msg_send_originlost	generic/tclIORChan.c	/^static const char *msg_send_originlost = "{Channel thread lost}";$/;"	v	typeref:typename:const char *	file:
msg_send_originlost	generic/tclIORTrans.c	/^static const char *msg_send_originlost = "{Channel thread lost}";$/;"	v	typeref:typename:const char *	file:
msg_write_nothing	generic/tclIORChan.c	/^static const char *msg_write_nothing = "{write wrote nothing}";$/;"	v	typeref:typename:const char *	file:
msg_write_toomuch	generic/tclIORChan.c	/^static const char *msg_write_toomuch = "{write wrote more than requested}";$/;"	v	typeref:typename:const char *	file:
msg_write_unsup	generic/tclIORTrans.c	/^static const char *msg_write_unsup = "{write not supported by Tcl driver}";$/;"	v	typeref:typename:const char *	file:
msgcat	library/msgcat/msgcat.tcl	/^namespace eval msgcat {$/;"	n
msgcat::mcutil	library/msgcat/msgcat.tcl	/^namespace eval msgcat::mcutil {$/;"	n
mstats	generic/tclAlloc.c	/^mstats($/;"	f	typeref:typename:void
mtime	compat/zlib/contrib/untgz/untgz.c	/^  char mtime[12];               \/* 136 *\/$/;"	m	struct:tar_header	typeref:typename:char[12]	file:
multmodp	compat/zlib/crc32.c	/^local z_crc_t multmodp(z_crc_t a, z_crc_t b) {$/;"	f	typeref:typename:local z_crc_t
mustFree	generic/tclIORChan.c	/^    int mustFree;		\/* O: True if msgStr is allocated, false if$/;"	m	struct:__anon92d8dd290608	typeref:typename:int	file:
mustFree	generic/tclIORTrans.c	/^    int mustFree;		\/* O: True if msgStr is allocated, false if$/;"	m	struct:__anon21e740770608	typeref:typename:int	file:
mustFree	generic/tclPreserve.c	/^    int mustFree;		\/* Non-zero means Tcl_EventuallyFree was$/;"	m	struct:__anone9498b710108	typeref:typename:int	file:
mutex	generic/tclInt.h	/^    Tcl_Mutex mutex;		\/* Enforce orderly access from multiple$/;"	m	struct:ProcessGlobalValue	typeref:typename:Tcl_Mutex
mutex	generic/tclThreadStorage.c	/^    Tcl_Mutex mutex;		\/* Protection for the rest of this structure,$/;"	m	struct:__anon4d1cb8920108	typeref:typename:Tcl_Mutex	file:
mutex	unix/tclUnixThrd.c	/^    pthread_mutex_t mutex;$/;"	m	struct:PMutex	typeref:typename:pthread_mutex_t	file:
mutexRecord	generic/tclThread.c	/^static SyncObjRecord mutexRecord = {0, 0, NULL};$/;"	v	typeref:typename:SyncObjRecord	file:
myCommand	generic/tclOOInt.h	/^    Tcl_Command myCommand;	\/* Reference to this object's internal$/;"	m	struct:Object	typeref:typename:Tcl_Command
myGetRDTSC32	compat/zlib/contrib/testzlib/testzlib.c	/^void myGetRDTSC32(LARGE_INTEGER * pbeginTime64)$/;"	f	typeref:typename:void
myGrep	tools/checkLibraryDoc.tcl	/^proc myGrep {searchPat globPat} {$/;"	p
myName	generic/tclOOInt.h	/^    Tcl_Obj *myName;		\/* The "my" shared object. *\/$/;"	m	struct:Foundation	typeref:typename:Tcl_Obj *
my_LStringGetElements	generic/tclTestABSList.c	/^static Tcl_ObjInterfaceListAllProc my_LStringGetElements;$/;"	v	typeref:typename:Tcl_ObjInterfaceListAllProc	file:
my_LStringGetElements	generic/tclTestABSList.c	/^static int my_LStringGetElements(Tcl_Interp *interp,$/;"	f	typeref:typename:int	file:
my_LStringObjIndex	generic/tclTestABSList.c	/^my_LStringObjIndex($/;"	f	typeref:typename:int	file:
my_LStringObjIndex	generic/tclTestABSList.c	/^static Tcl_ObjInterfaceListIndexProc my_LStringObjIndex;$/;"	v	typeref:typename:Tcl_ObjInterfaceListIndexProc	file:
my_LStringObjLength	generic/tclTestABSList.c	/^my_LStringObjLength(TCL_UNUSED(Tcl_Interp *), Tcl_Obj *lstringObjPtr, Tcl_Size *lenPtr )$/;"	f	typeref:typename:int	file:
my_LStringObjLength	generic/tclTestABSList.c	/^static Tcl_ObjInterfaceListLengthProc my_LStringObjLength;$/;"	v	typeref:typename:Tcl_ObjInterfaceListLengthProc	file:
my_LStringObjRange	generic/tclTestABSList.c	/^int my_LStringObjRange($/;"	f	typeref:typename:int
my_LStringObjRange	generic/tclTestABSList.c	/^static Tcl_ObjInterfaceListRangeProc my_LStringObjRange;$/;"	v	typeref:typename:Tcl_ObjInterfaceListRangeProc	file:
my_LStringObjReverse	generic/tclTestABSList.c	/^my_LStringObjReverse(Tcl_Interp *interp, Tcl_Obj *srcObj)$/;"	f	typeref:typename:int	file:
my_LStringObjReverse	generic/tclTestABSList.c	/^static Tcl_ObjInterfaceListReverseProc my_LStringObjReverse;$/;"	v	typeref:typename:Tcl_ObjInterfaceListReverseProc	file:
my_LStringObjSetElemR	generic/tclTestABSList.c	/^my_LStringObjSetElemR($/;"	f	typeref:typename:int	file:
my_LStringObjSetElemR	generic/tclTestABSList.c	/^static Tcl_ObjInterfaceListSetDeepProc my_LStringObjSetElemR;$/;"	v	typeref:typename:Tcl_ObjInterfaceListSetDeepProc	file:
my_LStringReplace	generic/tclTestABSList.c	/^my_LStringReplace($/;"	f	typeref:typename:int	file:
my_LStringReplace	generic/tclTestABSList.c	/^static Tcl_ObjInterfaceListReplaceProc my_LStringReplace;$/;"	v	typeref:typename:Tcl_ObjInterfaceListReplaceProc	file:
my_NewLStringObj	generic/tclTestABSList.c	/^my_NewLStringObj($/;"	f	typeref:typename:Tcl_Obj *	file:
my_SetAbstractProc	generic/tclTestABSList.c	/^my_SetAbstractProc(int ptype)$/;"	f	typeref:typename:const Tcl_ObjType *	file:
myaddr	unix/tclUnixSock.c	/^    struct addrinfo *myaddr;	\/* Iterator over myaddrlist. *\/$/;"	m	struct:TcpState	typeref:struct:addrinfo *	file:
myaddr	win/tclWinSock.c	/^    struct addrinfo *myaddr;	\/* Iterator over myaddrlist. *\/$/;"	m	struct:TcpState	typeref:struct:addrinfo *	file:
myaddrlist	unix/tclUnixSock.c	/^    struct addrinfo *myaddrlist;\/* Local address. *\/$/;"	m	struct:TcpState	typeref:struct:addrinfo *	file:
myaddrlist	win/tclWinSock.c	/^    struct addrinfo *myaddrlist;\/* Local address. *\/$/;"	m	struct:TcpState	typeref:struct:addrinfo *	file:
myalloc	compat/zlib/test/example.c	/^static void *myalloc(void *q, unsigned n, unsigned m) {$/;"	f	typeref:typename:void *	file:
myalloc	compat/zlib/test/minigzip.c	/^static void *myalloc(void *q, unsigned n, unsigned m) {$/;"	f	typeref:typename:void *	file:
myclassCommand	generic/tclOOInt.h	/^    Tcl_Command myclassCommand;	\/* Reference to this object's class dispatcher$/;"	m	struct:Object	typeref:typename:Tcl_Command
myfree	compat/zlib/test/example.c	/^static void myfree(void *q, void *p) {$/;"	f	typeref:typename:void	file:
myfree	compat/zlib/test/minigzip.c	/^static void myfree(void *q, void *p) {$/;"	f	typeref:typename:void	file:
mymkdir	compat/zlib/contrib/minizip/miniunz.c	/^static int mymkdir(const char* dirname) {$/;"	f	typeref:typename:int	file:
n	generic/tclTest.c	/^	Tcl_Size n;$/;"	m	struct:TestbytestringObjCmd::__anon0e9396a50608	typeref:typename:Tcl_Size	file:
n770_fp	generic/tclStrToD.c	/^static int n770_fp;		\/* Flag is 1 on Nokia N770 floating point.$/;"	v	typeref:typename:int	file:
nExports	unix/tclLoadAix.c	/^    int nExports;		\/* the number of exports found *\/$/;"	m	struct:Module	typeref:typename:int	file:
n_files	compat/zlib/contrib/minizip/tinydir.h	/^	size_t n_files;$/;"	m	struct:tinydir_dir	typeref:typename:size_t
name	compat/zlib/contrib/minizip/tinydir.h	/^	_tinydir_char_t name[_TINYDIR_FILENAME_MAX];$/;"	m	struct:tinydir_file	typeref:typename:_tinydir_char_t[]
name	compat/zlib/contrib/untgz/untgz.c	/^  char name[100];               \/*   0 *\/$/;"	m	struct:tar_header	typeref:typename:char[100]	file:
name	compat/zlib/examples/gzappend.c	/^    char *name;                 \/* file name for error messages *\/$/;"	m	struct:__anon9d4ca4100108	typeref:typename:char *	file:
name	compat/zlib/examples/gzjoin.c	/^    char *name;             \/* name of file for error messages *\/$/;"	m	struct:__anon52a4be880108	typeref:typename:char *	file:
name	compat/zlib/zlib.h	/^    Bytef   *name;      \/* pointer to zero-terminated file name or Z_NULL *\/$/;"	m	struct:gz_header_s	typeref:typename:Bytef *
name	generic/regc_locale.c	/^    const char *name;$/;"	m	struct:cname	typeref:typename:const char *	file:
name	generic/regerror.c	/^    const char *name;$/;"	m	struct:rerr	typeref:typename:const char *	file:
name	generic/tcl.h	/^    char *name;			\/* The namespace's name within its parent$/;"	m	struct:Tcl_Namespace	typeref:typename:char *
name	generic/tcl.h	/^    const char *name;		\/* Name of the type, e.g. "int". *\/$/;"	m	struct:Tcl_ObjType	typeref:typename:const char *
name	generic/tclAssembly.c	/^    const char *name;		\/* Name of instruction. *\/$/;"	m	struct:TalInstDesc	typeref:typename:const char *	file:
name	generic/tclBasic.c	/^    const char *name;		\/* Name of object-based command. *\/$/;"	m	struct:__anon6e1456070208	typeref:typename:const char *	file:
name	generic/tclBasic.c	/^    const char *name;		\/* Name of object-based command. *\/$/;"	m	struct:__anon6e1456070508	typeref:typename:const char *	file:
name	generic/tclBasic.c	/^    const char *name;		\/* Name of the function. The full name is$/;"	m	struct:__anon6e1456070408	typeref:typename:const char *	file:
name	generic/tclClock.c	/^    const char *name;		\/* The tail of the command name. The full name$/;"	m	struct:ClockCommand	typeref:typename:const char *	file:
name	generic/tclClockClassic.c	/^    const char *name;		\/* The tail of the command name. The full name$/;"	m	struct:ClockCommand	typeref:typename:const char *	file:
name	generic/tclCompile.h	/^    char name[8];		\/* Name of the class. *\/$/;"	m	struct:StringClassDesc	typeref:typename:char[8]
name	generic/tclCompile.h	/^    const char *name;		\/* Name of instruction. *\/$/;"	m	struct:InstructionDesc	typeref:typename:const char *
name	generic/tclCompile.h	/^    const char *name;		\/* The name of the type. Types can be$/;"	m	struct:AuxDataType	typeref:typename:const char *
name	generic/tclDTrace.d	/^    const char *name;$/;"	m	struct:Tcl_ObjType	file:
name	generic/tclDate.c	/^    const char *name;$/;"	m	struct:__anone8f8f7230108	typeref:typename:const char *	file:
name	generic/tclDateClassic.c	/^    const char *name;$/;"	m	struct:_TABLE	typeref:typename:const char *	file:
name	generic/tclEncoding.c	/^    char *name;			\/* Name of encoding. Malloced because (1) hash$/;"	m	struct:__anondb7a8e8c0108	typeref:typename:char *	file:
name	generic/tclEncoding.c	/^    char name[32];		\/* Name for encoding. *\/$/;"	m	struct:__anondb7a8e8c0308	typeref:typename:char[32]	file:
name	generic/tclEncoding.c	/^    const char *name;$/;"	m	struct:TclEncodingProfiles	typeref:typename:const char *	file:
name	generic/tclIORChan.c	/^    Tcl_Obj *name;		\/* Name of the channel as created *\/$/;"	m	struct:__anon92d8dd290108	typeref:typename:Tcl_Obj *	file:
name	generic/tclIORChan.c	/^    const char *name;		\/* Name of option to get, maybe NULL *\/$/;"	m	struct:ForwardParamGetOpt	typeref:typename:const char *	file:
name	generic/tclIORChan.c	/^    const char *name;		\/* Name of option to set *\/$/;"	m	struct:ForwardParamSetOpt	typeref:typename:const char *	file:
name	generic/tclInt.h	/^    char *name;			\/* Name identifying this scheme. *\/$/;"	m	struct:ResolverScheme	typeref:typename:char *
name	generic/tclInt.h	/^    char *name;			\/* The namespace's simple (unqualified) name.$/;"	m	struct:Namespace	typeref:typename:char *
name	generic/tclInt.h	/^    char name[TCLFLEXARRAY];	\/* Name of the local variable starts here. If$/;"	m	struct:CompiledLocal	typeref:typename:char[]
name	generic/tclInt.h	/^    const char *name;		\/* Name of the type, e.g. "int". *\/$/;"	m	struct:ObjectType	typeref:typename:const char *
name	generic/tclInt.h	/^    const char *name;		\/* Name of this field. *\/$/;"	m	struct:__anon1eb6b3550508	typeref:typename:const char *
name	generic/tclInt.h	/^    const char *name;		\/* The name of the subcommand. *\/$/;"	m	struct:__anon1eb6b3550708	typeref:typename:const char *
name	generic/tclInterp.c	/^	char name[4];		\/* Enough space for "tcl". The *real* version$/;"	m	struct:Tcl_Init::PkgName	typeref:typename:char[4]	file:
name	generic/tclOO.c	/^    const char *name;$/;"	m	struct:__anon5e0846e30108	typeref:typename:const char *	file:
name	generic/tclOO.h	/^    const char *name;		\/* Name of this type of method, mostly for$/;"	m	struct:Tcl_MethodType	typeref:typename:const char *
name	generic/tclOO.h	/^    const char *name;		\/* Name of this type of method, mostly for$/;"	m	struct:Tcl_MethodType2	typeref:typename:const char *
name	generic/tclOO.h	/^    const char *name;$/;"	m	struct:Tcl_ObjectMetadataType	typeref:typename:const char *
name	generic/tclOODefineCmds.c	/^    const char *name;$/;"	m	struct:DeclaredSlot	typeref:typename:const char *	file:
name	generic/tclOOInt.h	/^    const char *name;		\/* Name of the method in question. *\/$/;"	m	struct:DeclaredClassMethod	typeref:typename:const char *
name	generic/tclPkg.c	/^    char name[TCLFLEXARRAY];$/;"	m	struct:PkgName	typeref:typename:char[]	file:
name	generic/tclPkg.c	/^    const char *name;$/;"	m	struct:Require	typeref:typename:const char *	file:
name	generic/tclPkg.c	/^    const char *name;$/;"	m	struct:RequireProcArgs	typeref:typename:const char *	file:
name	generic/tclVar.c	/^    Tcl_Obj *name;		\/* Name of this search *\/$/;"	m	struct:ArraySearch	typeref:typename:Tcl_Obj *	file:
name	generic/tclZipfs.c	/^    char *name;			\/* Archive name *\/$/;"	m	struct:ZipFile	typeref:typename:char *	file:
name	generic/tclZipfs.c	/^    char *name;			\/* The full pathname of the virtual file *\/$/;"	m	struct:ZipEntry	typeref:typename:char *	file:
name	generic/tclZlib.c	/^	const char *name;$/;"	m	struct:ZlibStreamSubcmd::__anon1d0b6d960408	typeref:typename:const char *	file:
name	unix/tclLoadAix.c	/^    char *name;			\/* The symbols's name. *\/$/;"	m	struct:__anonb87ae84e0108	typeref:typename:char *	file:
name	unix/tclLoadAix.c	/^    char *name;			\/* module name for refcounting *\/$/;"	m	struct:Module	typeref:typename:char *	file:
name	win/tclWinDde.c	/^    WCHAR *name;		\/* Interpreter's name (malloc-ed). *\/$/;"	m	struct:RegisteredInterp	typeref:typename:WCHAR *	file:
nameLen	generic/tclZipfs.c	/^    Tcl_Size nameLen;		\/* Length of name field. TCL_AUTO_LENGTH if not$/;"	m	struct:ZipEntry	typeref:typename:Tcl_Size	file:
nameLength	generic/tclInt.h	/^    Tcl_Size nameLength;	\/* The number of bytes in local variable's name.$/;"	m	struct:CompiledLocal	typeref:typename:Tcl_Size
nameLength	generic/tclZipfs.c	/^    size_t nameLength;		\/* Length of archive name *\/$/;"	m	struct:ZipFile	typeref:typename:size_t	file:
nameObj	generic/tclOOMethod.c	/^    Tcl_Obj *nameObj;		\/* The "name" of the command. Only used for a$/;"	m	struct:PMFrameData	typeref:typename:Tcl_Obj *	file:
nameObj	generic/tclTest.c	/^    Tcl_Obj *nameObj;$/;"	m	struct:MyResolvedVarInfo	typeref:typename:Tcl_Obj *	file:
namePtr	generic/tclOOInt.h	/^    Tcl_Obj *namePtr;		\/* Name of the method. *\/$/;"	m	struct:Method	typeref:typename:Tcl_Obj *
name_max	compat/zlib/zlib.h	/^    uInt    name_max;   \/* space at name (only when reading header) *\/$/;"	m	struct:gz_header_s	typeref:typename:uInt
names	generic/tclOOProp.c	/^    char *names[TCLFLEXARRAY];	\/* NULL-terminated table of names. *\/$/;"	m	struct:GPNCache	typeref:typename:char * []	file:
names	generic/tclPkg.c	/^    PkgName *names;		\/* Package names being initialized. Must be$/;"	m	struct:PkgFiles	typeref:typename:PkgName *	file:
namespaceName	generic/tclOOCall.c	/^    Tcl_Obj *namespaceName;$/;"	m	struct:DefineEntry	typeref:typename:Tcl_Obj *	file:
namespacePtr	generic/tcl.h	/^    Tcl_Namespace *namespacePtr;\/* Points to the namespace that contains this$/;"	m	struct:__anon937aefea0708	typeref:typename:Tcl_Namespace *
namespacePtr	generic/tclOOInt.h	/^    Tcl_Namespace *namespacePtr;\/* This object's namespace. *\/$/;"	m	struct:Object	typeref:typename:Tcl_Namespace *
nargs	generic/tclInt.h	/^    Tcl_Size nargs;		\/* Number of args required for resuming this$/;"	m	struct:CoroutineData	typeref:typename:Tcl_Size
nargs	generic/tclTestABSList.c	/^    Tcl_Size nargs;     \/\/ Number of arguments in genFn including "index"$/;"	m	struct:LgenSeries	typeref:typename:Tcl_Size	file:
nativeCommentBuf	generic/tclZlib.c	/^    char nativeCommentBuf[MAX_COMMENT_LEN];$/;"	m	struct:__anon1d0b6d960108	typeref:typename:char[]	file:
nativeFilenameBuf	generic/tclZlib.c	/^    char nativeFilenameBuf[MAXPATHLEN];$/;"	m	struct:__anon1d0b6d960108	typeref:typename:char[]	file:
nativeFilesystemRecord	generic/tclIOUtil.c	/^static FilesystemRecord nativeFilesystemRecord = {$/;"	v	typeref:typename:FilesystemRecord	file:
nativePathPtr	generic/tclPathObj.c	/^    void *nativePathPtr;	\/* Native representation of this path, which$/;"	m	struct:__anoneca7f3ad0108	typeref:typename:void *	file:
ncds	generic/regguts.h	/^    size_t ncds;		\/* number of colordescs *\/$/;"	m	struct:colormap	typeref:typename:size_t
nchars	generic/tclScan.c	/^    int nchars;$/;"	m	struct:__anon0c1044aa0208	typeref:typename:int	file:
nchrs	generic/regguts.h	/^    size_t nchrs;		\/* number of chrs *\/$/;"	m	struct:cvec	typeref:typename:size_t
nchrs	generic/regguts.h	/^    uchr nchrs;			\/* number of chars of this color *\/$/;"	m	struct:colordesc	typeref:typename:uchr
ncode	compat/zlib/contrib/infback9/inflate9.h	/^    unsigned ncode;             \/* number of code length code lengths *\/$/;"	m	struct:inflate_state	typeref:typename:unsigned
ncode	compat/zlib/inflate.h	/^    unsigned ncode;             \/* number of code length code lengths *\/$/;"	m	struct:inflate_state	typeref:typename:unsigned
ncolors	generic/regexec.c	/^    int ncolors;		\/* length of outarc and inchain vectors *\/$/;"	m	struct:dfa	typeref:typename:int	file:
ncolors	generic/regguts.h	/^    int ncolors;		\/* number of colors *\/$/;"	m	struct:cnfa	typeref:typename:int
ndist	compat/zlib/contrib/infback9/inflate9.h	/^    unsigned ndist;             \/* number of distance code lengths *\/$/;"	m	struct:inflate_state	typeref:typename:unsigned
ndist	compat/zlib/inflate.h	/^    unsigned ndist;             \/* number of distance code lengths *\/$/;"	m	struct:inflate_state	typeref:typename:unsigned
need_more	compat/zlib/deflate.c	/^    need_more,      \/* block not completed, need more input or more output *\/$/;"	e	enum:__anond731f19e0103	file:
nestedHandlerPtr	generic/tclIO.c	/^    NextChannelHandler *nestedHandlerPtr;$/;"	m	struct:__anon5e04fc9d0108	typeref:typename:NextChannelHandler *	file:
nestedHandlerPtr	generic/tclIO.c	/^    struct NextChannelHandler *nestedHandlerPtr;$/;"	m	struct:NextChannelHandler	typeref:struct:NextChannelHandler *	file:
nestingLevel	generic/tclCompile.h	/^    Tcl_Size nestingLevel;	\/* Static depth of the exception range. Used$/;"	m	struct:__anone79d5a530208	typeref:typename:Tcl_Size
newDFA	generic/rege_dfa.c	/^newDFA($/;"	f	typeref:struct:dfa *	file:
newForeachInfoType	generic/tclCompCmds.c	/^static const AuxDataType newForeachInfoType = {$/;"	v	typeref:typename:const AuxDataType	file:
newLgenObj	generic/tclTestABSList.c	/^newLgenObj($/;"	f	typeref:typename:Tcl_Obj *
new_ptr	compat/zlib/zutil.c	/^    voidpf new_ptr;$/;"	m	struct:ptr_table_s	typeref:typename:voidpf	file:
newarc	generic/regc_nfa.c	/^newarc($/;"	f	typeref:typename:void	file:
newcolor	generic/regc_color.c	/^newcolor($/;"	f	typeref:typename:color	file:
newcvec	generic/regc_cvec.c	/^newcvec($/;"	f	typeref:struct:cvec *	file:
newfstate	generic/regc_nfa.c	/^newfstate($/;"	f	typeref:struct:state *	file:
newlacon	generic/regcomp.c	/^newlacon($/;"	f	typeref:typename:int	file:
newline	generic/regc_lex.c	/^newline(void)$/;"	f	typeref:typename:chr	file:
newline	tools/index.tcl	/^proc newline {} {}$/;"	p
newline	unix/Makefile.in	/^define newline$/;"	m
newnfa	generic/regc_nfa.c	/^newnfa($/;"	f	typeref:struct:nfa *	file:
newstate	generic/regc_nfa.c	/^newstate($/;"	f	typeref:struct:state *	file:
newsub	generic/regc_color.c	/^newsub($/;"	f	typeref:typename:color	file:
next	compat/zlib/contrib/blast/blast.c	/^    unsigned next;              \/* index of next write location in out[] *\/$/;"	m	struct:state	typeref:typename:unsigned	file:
next	compat/zlib/contrib/infback9/inflate9.h	/^    code FAR *next;             \/* next available space in codes[] *\/$/;"	m	struct:inflate_state	typeref:typename:code FAR *
next	compat/zlib/contrib/untgz/untgz.c	/^  struct attr_item  *next;$/;"	m	struct:attr_item	typeref:struct:attr_item *	file:
next	compat/zlib/examples/gzappend.c	/^    z_const unsigned char *next;    \/* next byte in buffer *\/$/;"	m	struct:__anon9d4ca4100108	typeref:typename:z_const unsigned char *	file:
next	compat/zlib/examples/gzjoin.c	/^    unsigned char *next;    \/* next byte to read *\/$/;"	m	struct:__anon52a4be880108	typeref:typename:unsigned char *	file:
next	compat/zlib/inflate.h	/^    code FAR *next;             \/* next available space in codes[] *\/$/;"	m	struct:inflate_state	typeref:typename:code FAR *
next	compat/zlib/test/infcover.c	/^    struct mem_item *next;      \/* pointer to next item in list, or NULL *\/$/;"	m	struct:mem_item	typeref:struct:mem_item *	file:
next	compat/zlib/zlib.h	/^    unsigned char *next;$/;"	m	struct:gzFile_s	typeref:typename:unsigned char *
next	generic/regc_lex.c	/^next($/;"	f	typeref:typename:int	file:
next	generic/regguts.h	/^    struct arcbatch *next;$/;"	m	struct:arcbatch	typeref:struct:arcbatch *
next	generic/regguts.h	/^    struct state *next;		\/* chain for traversing all *\/$/;"	m	struct:state	typeref:struct:state *
next	generic/tcl.h	/^    void *next;			\/* Search position for underlying hash$/;"	m	struct:__anon937aefea0908	typeref:typename:void *
next	generic/tclAlloc.c	/^    union overhead *next;	\/* when free *\/$/;"	m	union:overhead	typeref:union:overhead *	file:
next	generic/tclCompExpr.c	/^    struct JumpList *next;	\/* Point to next item on the stack *\/$/;"	m	struct:JumpList	typeref:struct:JumpList *	file:
next	generic/tclCompile.h	/^    Tcl_Size **next;		\/* Transient information used by the compiler$/;"	m	struct:__anone79d5a530408	typeref:typename:Tcl_Size **
next	generic/tclCompile.h	/^    Tcl_Size next;		\/* Index of next free array entry. *\/$/;"	m	struct:JumpFixupArray	typeref:typename:Tcl_Size
next	generic/tclInt.h	/^    Tcl_Obj *next;		\/* Loop step script, NULL for 'while'. *\/$/;"	m	struct:ForIterData	typeref:typename:Tcl_Obj *
next	generic/tclInt.h	/^    struct EnsembleConfig *next;\/* The next ensemble in the linked list of$/;"	m	struct:EnsembleConfig	typeref:struct:EnsembleConfig *
next	generic/tclThreadAlloc.c	/^	    union Block *next;		\/* Next in free list. *\/$/;"	m	union:Block::__anone59fb5e80108::__anone59fb5e8020a	typeref:union:Block *	file:
next	generic/tclZipfs.c	/^    struct ZipEntry *next;	\/* Next file in the same archive *\/$/;"	m	struct:ZipEntry	typeref:struct:ZipEntry *	file:
next	unix/tclLoadAix.c	/^    struct Module *next;$/;"	m	struct:Module	typeref:struct:Module *	file:
next	unix/tclUnixSock.c	/^    struct TcpFdList *next;$/;"	m	struct:TcpFdList	typeref:struct:TcpFdList *	file:
next	win/tclWinSock.c	/^    struct TcpFdList *next;$/;"	m	struct:TcpFdList	typeref:struct:TcpFdList *	file:
next-op-is	tools/tcltk-man2html-utils.tcl	/^proc next-op-is {op restname} {$/;"	p
next-text	tools/tcltk-man2html-utils.tcl	/^proc next-text {} {$/;"	p
nextAdded	generic/tclIO.h	/^    Tcl_Size nextAdded;		\/* The next position into which a character$/;"	m	struct:ChannelBuffer	typeref:typename:Tcl_Size
nextBlock	generic/tclThreadAlloc.c	/^#define nextBlock	/;"	d	file:
nextCSPtr	generic/tclIO.h	/^    struct ChannelState *nextCSPtr;$/;"	m	struct:ChannelState	typeref:struct:ChannelState *
nextCommandTokenRefId	generic/tclTest.c	/^static int nextCommandTokenRefId = 1;$/;"	v	typeref:typename:int	file:
nextEntry	generic/tclVar.c	/^    Tcl_HashEntry *nextEntry;	\/* Non-null means this is the next element to$/;"	m	struct:ArraySearch	typeref:typename:Tcl_HashEntry *	file:
nextEntryPtr	generic/tcl.h	/^    Tcl_HashEntry *nextEntryPtr;\/* Next entry to be enumerated in the current$/;"	m	struct:Tcl_HashSearch	typeref:typename:Tcl_HashEntry *
nextHandlerPtr	generic/tclIO.c	/^    ChannelHandler *nextHandlerPtr;$/;"	m	struct:NextChannelHandler	typeref:typename:ChannelHandler *	file:
nextIndex	generic/tcl.h	/^    Tcl_Size nextIndex;		\/* Index of next bucket to be enumerated after$/;"	m	struct:Tcl_HashSearch	typeref:typename:Tcl_Size
nextPtr	compat/waitpid.c	/^    struct WaitInfo *nextPtr;	\/* Next in list of exited processes. *\/$/;"	m	struct:WaitInfo	typeref:struct:WaitInfo *	file:
nextPtr	generic/tcl.h	/^    Tcl_HashEntry *nextPtr;	\/* Pointer to next entry in this hash bucket,$/;"	m	struct:Tcl_HashEntry	typeref:typename:Tcl_HashEntry *
nextPtr	generic/tcl.h	/^    struct Tcl_Event *nextPtr;	\/* Next in list of pending events, or NULL. *\/$/;"	m	struct:Tcl_Event	typeref:struct:Tcl_Event *
nextPtr	generic/tclAlloc.c	/^    struct block *nextPtr;	\/* Linked list. *\/$/;"	m	struct:block	typeref:struct:block *	file:
nextPtr	generic/tclAsync.c	/^    struct AsyncHandler *nextPtr, *prevPtr;$/;"	m	struct:AsyncHandler	typeref:struct:AsyncHandler *	file:
nextPtr	generic/tclCmdIL.c	/^    struct SortElement *nextPtr;\/* Next element in the list, or NULL for end$/;"	m	struct:SortElement	typeref:struct:SortElement *	file:
nextPtr	generic/tclDate.h	/^    ClockFmtScnStorage *nextPtr;$/;"	m	struct:ClockFmtScnStorage	typeref:typename:ClockFmtScnStorage *
nextPtr	generic/tclDictObj.c	/^    struct ChainEntry *nextPtr;$/;"	m	struct:ChainEntry	typeref:struct:ChainEntry *	file:
nextPtr	generic/tclEvent.c	/^    struct BgError *nextPtr;	\/* Next in list of all pending error reports$/;"	m	struct:BgError	typeref:struct:BgError *	file:
nextPtr	generic/tclEvent.c	/^    struct ExitHandler *nextPtr;\/* Next in list of all exit handlers for this$/;"	m	struct:ExitHandler	typeref:struct:ExitHandler *	file:
nextPtr	generic/tclIO.c	/^    struct ChannelHandler *nextPtr;$/;"	m	struct:ChannelHandler	typeref:struct:ChannelHandler *	file:
nextPtr	generic/tclIO.c	/^    struct CloseCallback *nextPtr;$/;"	m	struct:CloseCallback	typeref:struct:CloseCallback *	file:
nextPtr	generic/tclIO.h	/^    struct ChannelBuffer *nextPtr;$/;"	m	struct:ChannelBuffer	typeref:struct:ChannelBuffer *
nextPtr	generic/tclIO.h	/^    struct EventScriptRecord *nextPtr;$/;"	m	struct:EventScriptRecord	typeref:struct:EventScriptRecord *
nextPtr	generic/tclIORChan.c	/^    ForwardingResult *prevPtr, *nextPtr;$/;"	m	struct:ForwardingResult	typeref:typename:ForwardingResult *	file:
nextPtr	generic/tclIORTrans.c	/^    ForwardingResult *prevPtr, *nextPtr;$/;"	m	struct:ForwardingResult	typeref:typename:ForwardingResult *	file:
nextPtr	generic/tclIOUtil.c	/^    struct FilesystemRecord *nextPtr;$/;"	m	struct:FilesystemRecord	typeref:struct:FilesystemRecord *	file:
nextPtr	generic/tclInt.h	/^    NamespacePathEntry *prevPtr, *nextPtr;$/;"	m	struct:NamespacePathEntry	typeref:typename:NamespacePathEntry *
nextPtr	generic/tclInt.h	/^    struct ActiveCommandTrace *nextPtr;$/;"	m	struct:ActiveCommandTrace	typeref:struct:ActiveCommandTrace *
nextPtr	generic/tclInt.h	/^    struct ActiveInterpTrace *nextPtr;$/;"	m	struct:ActiveInterpTrace	typeref:struct:ActiveInterpTrace *
nextPtr	generic/tclInt.h	/^    struct ActiveVarTrace *nextPtr;$/;"	m	struct:ActiveVarTrace	typeref:struct:ActiveVarTrace *
nextPtr	generic/tclInt.h	/^    struct CFWordBC *nextPtr;	\/* Next entry for same command call. See$/;"	m	struct:CFWordBC	typeref:struct:CFWordBC *
nextPtr	generic/tclInt.h	/^    struct Cache *nextPtr;	\/* Linked list of cache entries. *\/$/;"	m	struct:AllocCache	typeref:struct:Cache *
nextPtr	generic/tclInt.h	/^    struct CmdFrame *nextPtr;	\/* Link to calling frame. *\/$/;"	m	struct:CmdFrame	typeref:struct:CmdFrame *
nextPtr	generic/tclInt.h	/^    struct CommandTrace *nextPtr;$/;"	m	struct:CommandTrace	typeref:struct:CommandTrace *
nextPtr	generic/tclInt.h	/^    struct CompiledLocal *nextPtr;$/;"	m	struct:CompiledLocal	typeref:struct:CompiledLocal *
nextPtr	generic/tclInt.h	/^    struct ExecStack *nextPtr;	\/* Next stack in list. *\/$/;"	m	struct:ExecStack	typeref:struct:ExecStack *
nextPtr	generic/tclInt.h	/^    struct ImportRef *nextPtr;	\/* Next element on the linked list of imported$/;"	m	struct:ImportRef	typeref:struct:ImportRef *
nextPtr	generic/tclInt.h	/^    struct LiteralEntry *nextPtr;$/;"	m	struct:LiteralEntry	typeref:struct:LiteralEntry *
nextPtr	generic/tclInt.h	/^    struct NRE_callback *nextPtr;$/;"	m	struct:NRE_callback	typeref:struct:NRE_callback *
nextPtr	generic/tclInt.h	/^    struct ResolverScheme *nextPtr;$/;"	m	struct:ResolverScheme	typeref:struct:ResolverScheme *
nextPtr	generic/tclInt.h	/^    struct Trace *nextPtr;	\/* Next in list of traces for this interp. *\/$/;"	m	struct:Trace	typeref:struct:Trace *
nextPtr	generic/tclInt.h	/^    struct VarTrace *nextPtr;	\/* Next in list of traces associated with a$/;"	m	struct:VarTrace	typeref:struct:VarTrace *
nextPtr	generic/tclInterp.c	/^	struct PkgName *nextPtr;\/* Next in list of package names being$/;"	m	struct:Tcl_Init::PkgName	typeref:struct:PkgName *	file:
nextPtr	generic/tclInterp.c	/^    LimitHandler *nextPtr;	\/* Next item in linked list of handlers. *\/$/;"	m	struct:LimitHandler	typeref:typename:LimitHandler *	file:
nextPtr	generic/tclInterp.c	/^    struct Target *nextPtr;	\/* Next in list of target records, or NULL if$/;"	m	struct:Target	typeref:struct:Target *	file:
nextPtr	generic/tclLoad.c	/^    struct InterpLibrary *nextPtr;$/;"	m	struct:InterpLibrary	typeref:struct:InterpLibrary *	file:
nextPtr	generic/tclLoad.c	/^    struct LoadedLibrary *nextPtr;$/;"	m	struct:LoadedLibrary	typeref:struct:LoadedLibrary *	file:
nextPtr	generic/tclNotify.c	/^    struct EventSource *nextPtr;$/;"	m	struct:EventSource	typeref:struct:EventSource *	file:
nextPtr	generic/tclNotify.c	/^    struct ThreadSpecificData *nextPtr;$/;"	m	struct:ThreadSpecificData	typeref:struct:ThreadSpecificData *	file:
nextPtr	generic/tclPipe.c	/^    struct Detached *nextPtr;	\/* Next in list of all detached processes. *\/$/;"	m	struct:Detached	typeref:struct:Detached *	file:
nextPtr	generic/tclPkg.c	/^    struct PkgAvail *nextPtr;	\/* Next in list of available versions of the$/;"	m	struct:PkgAvail	typeref:struct:PkgAvail *	file:
nextPtr	generic/tclPkg.c	/^    struct PkgName *nextPtr;	\/* Next in list of package names being$/;"	m	struct:PkgName	typeref:struct:PkgName *	file:
nextPtr	generic/tclStrIdxTree.h	/^    TclStrIdx *nextPtr;$/;"	m	struct:TclStrIdx	typeref:typename:TclStrIdx *
nextPtr	generic/tclTest.c	/^    struct TestAsyncHandler *nextPtr;$/;"	m	struct:TestAsyncHandler	typeref:struct:TestAsyncHandler *	file:
nextPtr	generic/tclTest.c	/^    struct TestChannel *nextPtr;\/* Next in detached channel pool *\/$/;"	m	struct:TestChannel	typeref:struct:TestChannel *	file:
nextPtr	generic/tclTest.c	/^    struct TestCommandTokenRef *nextPtr;$/;"	m	struct:TestCommandTokenRef	typeref:struct:TestCommandTokenRef *	file:
nextPtr	generic/tclThreadAlloc.c	/^    struct Cache *nextPtr;	\/* Linked list of cache entries *\/$/;"	m	struct:Cache	typeref:struct:Cache *	file:
nextPtr	generic/tclThreadTest.c	/^    struct ThreadEventResult *nextPtr;	\/* List for cleanup *\/$/;"	m	struct:ThreadEventResult	typeref:struct:ThreadEventResult *	file:
nextPtr	generic/tclThreadTest.c	/^    struct ThreadSpecificData *nextPtr;$/;"	m	struct:ThreadSpecificData	typeref:struct:ThreadSpecificData *	file:
nextPtr	generic/tclTimer.c	/^    struct AfterInfo *nextPtr;	\/* Next in list of all "after" commands for$/;"	m	struct:AfterInfo	typeref:struct:AfterInfo *	file:
nextPtr	generic/tclTimer.c	/^    struct IdleHandler *nextPtr;\/* Next in list of active handlers. *\/$/;"	m	struct:IdleHandler	typeref:struct:IdleHandler *	file:
nextPtr	generic/tclTimer.c	/^    struct TimerHandler *nextPtr;$/;"	m	struct:TimerHandler	typeref:struct:TimerHandler *	file:
nextPtr	generic/tclVar.c	/^    struct ArraySearch *nextPtr;\/* Next in list of all active searches for$/;"	m	struct:ArraySearch	typeref:struct:ArraySearch *	file:
nextPtr	macosx/tclMacOSXNotify.c	/^    struct FileHandler *nextPtr;\/* Next in list of all files we care about. *\/$/;"	m	struct:FileHandler	typeref:struct:FileHandler *	file:
nextPtr	macosx/tclMacOSXNotify.c	/^    struct ThreadSpecificData *nextPtr, *prevPtr;$/;"	m	struct:ThreadSpecificData	typeref:struct:ThreadSpecificData *	file:
nextPtr	unix/tclEpollNotfy.c	/^    struct FileHandler *nextPtr;\/* Next in list of all files we care about. *\/$/;"	m	struct:FileHandler	typeref:struct:FileHandler *	file:
nextPtr	unix/tclKqueueNotfy.c	/^    struct FileHandler *nextPtr;\/* Next in list of all files we care about. *\/$/;"	m	struct:FileHandler	typeref:struct:FileHandler *	file:
nextPtr	unix/tclLoadDyld.c	/^    struct Tcl_DyldModuleHandle *nextPtr;$/;"	m	struct:Tcl_DyldModuleHandle	typeref:struct:Tcl_DyldModuleHandle *	file:
nextPtr	unix/tclSelectNotfy.c	/^    struct FileHandler *nextPtr;\/* Next in list of all files we care about. *\/$/;"	m	struct:FileHandler	typeref:struct:FileHandler *	file:
nextPtr	unix/tclSelectNotfy.c	/^    struct ThreadSpecificData *nextPtr, *prevPtr;$/;"	m	struct:ThreadSpecificData	typeref:struct:ThreadSpecificData *	file:
nextPtr	unix/tclXtNotify.c	/^    struct FileHandler *nextPtr;\/* Next in list of all files we care about. *\/$/;"	m	struct:FileHandler	typeref:struct:FileHandler *	file:
nextPtr	win/nmakehlp.c	/^    struct list_item_t *nextPtr;$/;"	m	struct:list_item_t	typeref:struct:list_item_t *	file:
nextPtr	win/tclWin32Dll.c	/^    struct MountPointMap *nextPtr;$/;"	m	struct:MountPointMap	typeref:struct:MountPointMap *	file:
nextPtr	win/tclWinChan.c	/^    struct FileInfo *nextPtr;	\/* Pointer to next registered file. *\/$/;"	m	struct:FileInfo	typeref:struct:FileInfo *	file:
nextPtr	win/tclWinConsole.c	/^    struct ConsoleHandleInfo *nextPtr;$/;"	m	struct:ConsoleHandleInfo	typeref:struct:ConsoleHandleInfo *	file:
nextPtr	win/tclWinDde.c	/^    struct Conversation *nextPtr;$/;"	m	struct:Conversation	typeref:struct:Conversation *	file:
nextPtr	win/tclWinDde.c	/^    struct RegisteredInterp *nextPtr;$/;"	m	struct:RegisteredInterp	typeref:struct:RegisteredInterp *	file:
nextPtr	win/tclWinPipe.c	/^    struct PipeInfo *nextPtr;	\/* Pointer to next registered pipe. *\/$/;"	m	struct:PipeInfo	typeref:struct:PipeInfo *	file:
nextPtr	win/tclWinPipe.c	/^    struct ProcInfo *nextPtr;$/;"	m	struct:ProcInfo	typeref:struct:ProcInfo *	file:
nextPtr	win/tclWinSerial.c	/^    struct SerialInfo *nextPtr;	\/* Pointer to next registered serial. *\/$/;"	m	struct:SerialInfo	typeref:struct:SerialInfo *	file:
nextPtr	win/tclWinSock.c	/^    struct TcpState *nextPtr;	\/* The next socket on the per-thread socket$/;"	m	struct:TcpState	typeref:struct:TcpState *	file:
nextPtr	win/tclWinThrd.c	/^    struct ThreadSpecificData *nextPtr;	\/* Queue pointers *\/$/;"	m	struct:ThreadSpecificData	typeref:struct:ThreadSpecificData *	file:
nextRemoved	generic/tclIO.h	/^    Tcl_Size nextRemoved;	\/* Position of next byte to be removed from$/;"	m	struct:ChannelBuffer	typeref:typename:Tcl_Size
nextThreadPtr	generic/tclThreadJoin.c	/^    struct JoinableThread *nextThreadPtr;$/;"	m	struct:JoinableThread	typeref:struct:JoinableThread *	file:
nextTracePtr	generic/tclInt.h	/^    CommandTrace *nextTracePtr;	\/* Next trace to check after current trace$/;"	m	struct:ActiveCommandTrace	typeref:typename:CommandTrace *
nextTracePtr	generic/tclInt.h	/^    Trace *nextTracePtr;	\/* Next trace to check after current trace$/;"	m	struct:ActiveInterpTrace	typeref:typename:Trace *
nextTracePtr	generic/tclInt.h	/^    VarTrace *nextTracePtr;	\/* Next trace to check after current trace$/;"	m	struct:ActiveVarTrace	typeref:typename:VarTrace *
nextWatchingChannelPtr	win/tclWinConsole.c	/^    struct ConsoleChannelInfo *nextWatchingChannelPtr;$/;"	m	struct:ConsoleChannelInfo	typeref:struct:ConsoleChannelInfo *	file:
next_datablock	compat/zlib/contrib/minizip/zip.c	/^  struct linkedlist_datablock_internal_s* next_datablock;$/;"	m	struct:linkedlist_datablock_internal_s	typeref:struct:linkedlist_datablock_internal_s *	file:
next_in	compat/zlib/contrib/dotzlib/DotZLib/DotZLib.cs	/^        public IntPtr next_in;$/;"	f	struct:DotZLib.ZStream
next_in	compat/zlib/zlib.h	/^    z_const Bytef *next_in;     \/* next input byte *\/$/;"	m	struct:z_stream_s	typeref:typename:z_const Bytef *
next_out	compat/zlib/contrib/dotzlib/DotZLib/DotZLib.cs	/^        public IntPtr next_out;$/;"	f	struct:DotZLib.ZStream
next_out	compat/zlib/zlib.h	/^    Bytef    *next_out; \/* next output byte will go here *\/$/;"	m	struct:z_stream_s	typeref:typename:Bytef *
next_ptr	compat/zlib/zutil.c	/^local int next_ptr = 0;$/;"	v	typeref:typename:local int
nextf	generic/tclAlloc.c	/^static union overhead *nextf[NBUCKETS];$/;"	v	typeref:union:overhead * []	file:
nexttype	generic/regcomp.c	/^    int nexttype;		\/* type of next token *\/$/;"	m	struct:vars	typeref:typename:int	file:
nextvalue	generic/regcomp.c	/^    size_t nextvalue;		\/* value (if any) of next token *\/$/;"	m	struct:vars	typeref:typename:size_t	file:
nfa	generic/regcomp.c	/^    struct nfa *nfa;		\/* the NFA *\/$/;"	m	struct:vars	typeref:struct:nfa *	file:
nfa	generic/regguts.h	/^struct nfa {$/;"	s
nfanode	generic/regcomp.c	/^nfanode($/;"	f	typeref:typename:long	file:
nfatree	generic/regcomp.c	/^nfatree($/;"	f	typeref:typename:long	file:
nice_length	compat/zlib/deflate.c	/^   ush nice_length; \/* quit search above this match length *\/$/;"	m	struct:config_s	typeref:typename:ush	file:
nice_match	compat/zlib/contrib/gcc_gvmat64/gvmat64.S	/^#define nice_match /;"	d	file:
nice_match	compat/zlib/deflate.h	/^    int nice_match; \/* Stop searching when current match exceeds this *\/$/;"	m	struct:internal_state	typeref:typename:int
nicematch	compat/zlib/contrib/asm686/match.S	/^#define	nicematch	/;"	d	file:
nicematch	compat/zlib/contrib/gcc_gvmat64/gvmat64.S	/^#define nicematch /;"	d	file:
nins	generic/regguts.h	/^    size_t nins;		\/* number of inarcs *\/$/;"	m	struct:state	typeref:typename:size_t
nlacons	generic/regcomp.c	/^    size_t nlacons;		\/* size of lacons *\/$/;"	m	struct:vars	typeref:typename:size_t	file:
nlacons	generic/regguts.h	/^    size_t nlacons;		\/* size of lacons *\/$/;"	m	struct:guts	typeref:typename:size_t
nlcolor	generic/regcomp.c	/^    color nlcolor;		\/* color of newline *\/$/;"	m	struct:vars	typeref:typename:color	file:
nlen	compat/zlib/contrib/infback9/inflate9.h	/^    unsigned nlen;              \/* number of length code lengths *\/$/;"	m	struct:inflate_state	typeref:typename:unsigned
nlen	compat/zlib/inflate.h	/^    unsigned nlen;              \/* number of length code lengths *\/$/;"	m	struct:inflate_state	typeref:typename:unsigned
nline	generic/tclCompile.h	/^    Tcl_Size nline;		\/* Number of words in the command *\/$/;"	m	struct:__anone79d5a530408	typeref:typename:Tcl_Size
nline	generic/tclInt.h	/^    Tcl_Size nline;		\/* Number of lines in CmdFrame.line. *\/$/;"	m	struct:CmdFrame	typeref:typename:Tcl_Size
nloc	generic/tclCompile.h	/^    Tcl_Size nloc;		\/* Number of allocated entries in 'loc'. *\/$/;"	m	struct:__anone79d5a530508	typeref:typename:Tcl_Size
nmatch	generic/regexec.c	/^    size_t nmatch;$/;"	m	struct:vars	typeref:typename:size_t	file:
no	generic/regguts.h	/^    size_t no;$/;"	m	struct:state	typeref:typename:size_t
noCFafterFork	macosx/tclMacOSXNotify.c	/^#define noCFafterFork	/;"	d	file:
noFtsStat	unix/tclUnixFCmd.c	/^#   define noFtsStat	/;"	d	file:
no_timeout	win/tclWinSerial.c	/^static COMMTIMEOUTS no_timeout = {$/;"	v	typeref:typename:COMMTIMEOUTS	file:
no_vcvars	win/buildall.vc.bat	/^:no_vcvars$/;"	l
noas	generic/regguts.h	/^    size_t noas;		\/* number of arcs used in first arcbatch *\/$/;"	m	struct:state	typeref:typename:size_t
nominalFreq	win/tclWinTime.c	/^    LARGE_INTEGER nominalFreq;	\/* Nominal frequency of the system performance$/;"	m	struct:__anon3cd8f0330108	typeref:typename:LARGE_INTEGER	file:
nonblocking	generic/tclIORChan.c	/^    int nonblocking;		\/* I: What mode to activate *\/$/;"	m	struct:ForwardParamBlock	typeref:typename:int	file:
nonblocking	generic/tclIORTrans.c	/^    int nonblocking;		\/* Flag: Channel is blocking or not. *\/$/;"	m	struct:__anon21e740770208	typeref:typename:int	file:
nonword	generic/regcomp.c	/^nonword($/;"	f	typeref:typename:void	file:
nopen	generic/tclIcu.c	/^    size_t nopen;		\/* Total number of references to ALL libraries *\/$/;"	m	struct:__anon1eb0af660108	typeref:typename:size_t	file:
normPathPtr	generic/tclPathObj.c	/^    Tcl_Obj *normPathPtr;	\/*  If the path has been normalized (flags ==$/;"	m	struct:__anoneca7f3ad0108	typeref:typename:Tcl_Obj *	file:
normalizePath	library/tcltest/tcltest.tcl	/^    proc normalizePath {pathVar} {$/;"	p	namespace:::tcltest
normalizePathProc	generic/tcl.h	/^    Tcl_FSNormalizePathProc *normalizePathProc;$/;"	m	struct:Tcl_Filesystem	typeref:typename:Tcl_FSNormalizePathProc *
nospace-text	tools/tcltk-man2html-utils.tcl	/^proc nospace-text {text} {$/;"	p
notUsed	win/tclWinConsole.c	/^    int notUsed; \/* Dummy field *\/$/;"	m	struct:__anonf117b5370208	typeref:typename:int	file:
notifier	unix/tclXtNotify.c	/^} notifier;$/;"	v	typeref:struct:NotifierState
notifierCV	unix/tclSelectNotfy.c	/^static pthread_cond_t notifierCV = PTHREAD_COND_INITIALIZER;$/;"	v	typeref:typename:pthread_cond_t	file:
notifierConnectError	win/tclWinSock.c	/^    volatile int notifierConnectError;$/;"	m	struct:TcpState	typeref:typename:volatile int	file:
notifierCount	macosx/tclMacOSXNotify.c	/^static int notifierCount = 0;$/;"	v	typeref:typename:int	file:
notifierCount	unix/tclSelectNotfy.c	/^static int notifierCount = 0;$/;"	v	typeref:typename:int	file:
notifierCount	win/tclWinNotify.c	/^static int notifierCount = 0;$/;"	v	typeref:typename:int	file:
notifierData	generic/tclAsync.c	/^    void *notifierData;		\/* Platform notifier data or NULL. *\/$/;"	m	struct:AsyncHandler	typeref:typename:void *	file:
notifierInitLock	macosx/tclMacOSXNotify.c	/^static OSSpinLock notifierInitLock = SPINLOCK_INIT;$/;"	v	typeref:typename:OSSpinLock	file:
notifierInitLock	macosx/tclMacOSXNotify.c	/^static os_unfair_lock notifierInitLock = OS_UNFAIR_LOCK_INIT;$/;"	v	typeref:typename:os_unfair_lock	file:
notifierInitMutex	unix/tclSelectNotfy.c	/^static pthread_mutex_t notifierInitMutex = PTHREAD_MUTEX_INITIALIZER;$/;"	v	typeref:typename:pthread_mutex_t	file:
notifierLock	macosx/tclMacOSXNotify.c	/^static OSSpinLock notifierLock     = SPINLOCK_INIT;$/;"	v	typeref:typename:OSSpinLock	file:
notifierLock	macosx/tclMacOSXNotify.c	/^static os_unfair_lock notifierLock     = OS_UNFAIR_LOCK_INIT;$/;"	v	typeref:typename:os_unfair_lock	file:
notifierLog	macosx/tclMacOSXNotify.c	/^static FILE *notifierLog = NULL;$/;"	v	typeref:typename:FILE *	file:
notifierMutex	unix/tclEpollNotfy.c	/^    pthread_mutex_t notifierMutex;$/;"	m	struct:ThreadSpecificData	typeref:typename:pthread_mutex_t	file:
notifierMutex	unix/tclKqueueNotfy.c	/^    pthread_mutex_t notifierMutex;$/;"	m	struct:ThreadSpecificData	typeref:typename:pthread_mutex_t	file:
notifierMutex	unix/tclSelectNotfy.c	/^static pthread_mutex_t notifierMutex     = PTHREAD_MUTEX_INITIALIZER;$/;"	v	typeref:typename:pthread_mutex_t	file:
notifierMutex	win/tclWinNotify.c	/^static CRITICAL_SECTION notifierMutex;$/;"	v	typeref:typename:CRITICAL_SECTION	file:
notifierSigMask	macosx/tclMacOSXNotify.c	/^static sigset_t notifierSigMask;$/;"	v	typeref:typename:sigset_t	file:
notifierSigMask	unix/tclSelectNotfy.c	/^static sigset_t notifierSigMask;$/;"	v	typeref:typename:sigset_t	file:
notifierThread	macosx/tclMacOSXNotify.c	/^static pthread_t notifierThread;$/;"	v	typeref:typename:pthread_t	file:
notifierThread	unix/tclSelectNotfy.c	/^static Tcl_ThreadId notifierThread;$/;"	v	typeref:typename:Tcl_ThreadId	file:
notifierThreadRunning	macosx/tclMacOSXNotify.c	/^static int notifierThreadRunning;$/;"	v	typeref:typename:int	file:
notifierThreadRunning	unix/tclSelectNotfy.c	/^static int notifierThreadRunning = 0;$/;"	v	typeref:typename:int	file:
notlifo	compat/zlib/test/infcover.c	/^    int notlifo, rogue;         \/* counts of non-LIFO frees and rogue frees *\/$/;"	m	struct:mem_zone	typeref:typename:int	file:
nouts	generic/regguts.h	/^    size_t nouts;		\/* number of outarcs *\/$/;"	m	struct:state	typeref:typename:size_t
now	generic/regcomp.c	/^    const chr *now;		\/* scan pointer into string *\/$/;"	m	struct:vars	typeref:typename:const chr *	file:
nranges	generic/regguts.h	/^    size_t nranges;		\/* number of ranges (chr pairs) *\/$/;"	m	struct:cvec	typeref:typename:size_t
nranges	generic/tclScan.c	/^    int nranges;$/;"	m	struct:__anon0c1044aa0208	typeref:typename:int	file:
nreProc	generic/tclBasic.c	/^    Tcl_ObjCmdProc *nreProc;	\/* NR-based function for command *\/$/;"	m	struct:__anon6e1456070208	typeref:typename:Tcl_ObjCmdProc *	file:
nreProc	generic/tclBasic.c	/^    Tcl_ObjCmdProc2 *nreProc;$/;"	m	struct:__anon6e1456070808	typeref:typename:Tcl_ObjCmdProc2 *	file:
nreProc	generic/tclInt.h	/^    Tcl_ObjCmdProc *nreProc;	\/* NRE implementation of this command. *\/$/;"	m	struct:Command	typeref:typename:Tcl_ObjCmdProc *
nreProc	generic/tclInt.h	/^    Tcl_ObjCmdProc *nreProc;	\/* NRE implementation of this command. *\/$/;"	m	struct:__anon1eb6b3550708	typeref:typename:Tcl_ObjCmdProc *
nsCount	generic/tclOOInt.h	/^    Tcl_Size nsCount;		\/* Epoch counter is used for keeping$/;"	m	struct:ThreadLocalData	typeref:typename:Tcl_Size
nsEpoch	generic/tclCompile.h	/^    Tcl_Size nsEpoch;		\/* Value of nsPtr->resolverEpoch when this$/;"	m	struct:ByteCode	typeref:typename:Tcl_Size
nsId	generic/tclInt.h	/^    size_t nsId;		\/* Unique id for the namespace. *\/$/;"	m	struct:Namespace	typeref:typename:size_t
nsNameType	generic/tclNamesp.c	/^static const Tcl_ObjType nsNameType = {$/;"	v	typeref:typename:const Tcl_ObjType	file:
nsPtr	generic/tcl.h	/^    Tcl_Namespace *nsPtr;	\/* Current namespace for the call frame. *\/$/;"	m	struct:Tcl_CallFrame	typeref:typename:Tcl_Namespace *
nsPtr	generic/tclCompile.h	/^    Namespace *nsPtr;		\/* Namespace context in which this code was$/;"	m	struct:ByteCode	typeref:typename:Namespace *
nsPtr	generic/tclInt.h	/^    Namespace *nsPtr;		\/* Namespace in which this literal is used. We$/;"	m	struct:LiteralEntry	typeref:typename:Namespace *
nsPtr	generic/tclInt.h	/^    Namespace *nsPtr;		\/* Points to the namespace containing this$/;"	m	struct:Command	typeref:typename:Namespace *
nsPtr	generic/tclInt.h	/^    Namespace *nsPtr;		\/* Points to the namespace used to resolve$/;"	m	struct:CallFrame	typeref:typename:Namespace *
nsPtr	generic/tclInt.h	/^    Namespace *nsPtr;		\/* The namespace backing this ensemble up. *\/$/;"	m	struct:EnsembleConfig	typeref:typename:Namespace *
nsPtr	generic/tclInt.h	/^    Namespace *nsPtr;		\/* What does this path entry point to? If it$/;"	m	struct:NamespacePathEntry	typeref:typename:Namespace *
nsPtr	generic/tclInt.h	/^    struct Namespace *nsPtr;	\/* The namespace containing the variables. *\/$/;"	m	struct:TclVarHashTable	typeref:struct:Namespace *
nsPtr	generic/tclLink.c	/^    Namespace *nsPtr;		\/* Namespace containing Tcl variable *\/$/;"	m	struct:__anonfc2fcf730108	typeref:typename:Namespace *	file:
nsPtr	generic/tclNamesp.c	/^    Namespace *nsPtr;		\/* A cached pointer to the Namespace that the$/;"	m	struct:__anon357794090208	typeref:typename:Namespace *	file:
nsb0f30fa10101	tools/tclsh.svg	/^   inkscape:export-ydpi="8.4399996">$/;"	n	uri:http://www.w3.org/2000/svg
nssets	generic/regexec.c	/^    size_t nssets;			\/* size of cache *\/$/;"	m	struct:dfa	typeref:typename:size_t	file:
nssused	generic/regexec.c	/^    size_t nssused;		\/* how many entries occupied yet *\/$/;"	m	struct:dfa	typeref:typename:size_t	file:
nstates	generic/regexec.c	/^    size_t nstates;		\/* number of states *\/$/;"	m	struct:dfa	typeref:typename:size_t	file:
nstates	generic/regguts.h	/^    size_t nstates;		\/* for numbering states *\/$/;"	m	struct:nfa	typeref:typename:size_t
nstates	generic/regguts.h	/^    size_t nstates;	\/* number of states *\/$/;"	m	struct:cnfa	typeref:typename:size_t
nsub	generic/regguts.h	/^    size_t nsub;		\/* copy of re_nsub *\/$/;"	m	struct:guts	typeref:typename:size_t
nsubexp	generic/regcomp.c	/^    size_t nsubexp;		\/* subexpression count *\/$/;"	m	struct:vars	typeref:typename:size_t	file:
nsubs	generic/regcomp.c	/^    size_t nsubs;		\/* length of vector *\/$/;"	m	struct:vars	typeref:typename:size_t	file:
nsubs	generic/tcl.h	/^    Tcl_Size nsubs;		\/* Number of subexpressions in the compiled$/;"	m	struct:Tcl_RegExpInfo	typeref:typename:Tcl_Size
ntree	generic/regcomp.c	/^    int ntree;			\/* number of tree nodes, plus one *\/$/;"	m	struct:vars	typeref:typename:int	file:
ntree	generic/regguts.h	/^    size_t ntree;		\/* number of subre's, plus one *\/$/;"	m	struct:guts	typeref:typename:size_t
nullSize	generic/tcl.h	/^    Tcl_Size nullSize;		\/* Number of zero bytes that signify$/;"	m	struct:Tcl_EncodingType	typeref:typename:Tcl_Size
nullSize	generic/tclEncoding.c	/^    Tcl_Size nullSize;		\/* Number of 0x00 bytes that signify$/;"	m	struct:__anondb7a8e8c0108	typeref:typename:Tcl_Size	file:
nullVersionProc	generic/tclStubCall.c	/^MODULE_SCOPE const void *nullVersionProc(void) {$/;"	f	typeref:typename:MODULE_SCOPE const void *
nuloc	generic/tclCompile.h	/^    Tcl_Size nuloc;		\/* Number of used entries in 'loc'. *\/$/;"	m	struct:__anone79d5a530508	typeref:typename:Tcl_Size
num	compat/zlib/examples/enough.c	/^    big_t *num;         \/\/ saved results array for code counting$/;"	m	struct:__anonea7b679d0208	typeref:typename:big_t *	file:
num	generic/tclInt.h	/^    Tcl_Size num;		\/* Number of entries in loc, not counting the$/;"	m	struct:ContLineLoc	typeref:typename:Tcl_Size
num	generic/tclOOCall.c	/^    int num;$/;"	m	struct:DefineChain	typeref:typename:int	file:
num	generic/tclThread.c	/^    int num;			\/* Number of objects remembered *\/$/;"	m	struct:__anone579f3dd0108	typeref:typename:int	file:
numAllocated	generic/tclInt.h	/^    Tcl_Size numAllocated;	\/* Total number of slots[] array slots. *\/$/;"	m	struct:ListStore	typeref:typename:Tcl_Size
numArgs	generic/tclBasic.c	/^	int numArgs;$/;"	m	union:__anon6e1456070508::__anon6e145607060a	typeref:typename:int	file:
numArgs	generic/tclCompile.h	/^	int numArgs;$/;"	m	union:__anone79d5a530808::__anone79d5a53090a	typeref:typename:int
numArgs	generic/tclInt.h	/^    Tcl_Size numArgs;		\/* Number of formal parameters. *\/$/;"	m	struct:Proc	typeref:typename:Tcl_Size
numAuxDataItems	generic/tclCompile.h	/^    Tcl_Size numAuxDataItems;	\/* Number of AuxData items. *\/$/;"	m	struct:ByteCode	typeref:typename:Tcl_Size
numBreakTargets	generic/tclCompile.h	/^    Tcl_Size numBreakTargets;	\/* The number of [break]s that want to be$/;"	m	struct:ExceptionAux	typeref:typename:Tcl_Size
numBuckets	generic/tcl.h	/^    Tcl_Size numBuckets;	\/* Total number of buckets allocated at$/;"	m	struct:Tcl_HashTable	typeref:typename:Tcl_Size
numBuckets	generic/tclInt.h	/^    TCL_HASH_TYPE numBuckets;	\/* Total number of buckets allocated at$/;"	m	struct:LiteralTable	typeref:typename:TCL_HASH_TYPE
numByteCodesFreed	generic/tclInt.h	/^    size_t numByteCodesFreed;	\/* Number of ByteCodes destroyed. *\/$/;"	m	struct:ByteCodeStats	typeref:typename:size_t
numBytes	generic/tclCompile.h	/^    Tcl_Size numBytes;		\/* Total number of bytes for instruction. *\/$/;"	m	struct:InstructionDesc	typeref:typename:Tcl_Size
numBytes	generic/tclInt.h	/^    TCL_HASH_TYPE numBytes;	\/* Length of the global string. *\/$/;"	m	struct:ProcessGlobalValue	typeref:typename:TCL_HASH_TYPE
numBytes	generic/tclZipfs.c	/^    Tcl_Size numBytes;		\/* Number of bytes of uncompressed data *\/$/;"	m	struct:ZipChannel	typeref:typename:Tcl_Size	file:
numBytes	generic/tclZipfs.c	/^    int numBytes;		\/* Uncompressed size of the virtual file.$/;"	m	struct:ZipEntry	typeref:typename:int	file:
numChain	generic/tclOOInt.h	/^    Tcl_Size numChain;		\/* Size of the call chain. *\/$/;"	m	struct:CallChain	typeref:typename:Tcl_Size
numChars	generic/tclStringRep.h	/^    Tcl_Size numChars;		\/* The number of chars in the string.$/;"	m	struct:__anonf2feabe80108	typeref:typename:Tcl_Size
numCmdLocBytes	generic/tclCompile.h	/^    Tcl_Size numCmdLocBytes;	\/* Number of bytes needed for encoded command$/;"	m	struct:ByteCode	typeref:typename:Tcl_Size
numCodeBytes	generic/tclCompile.h	/^    Tcl_Size numCodeBytes;	\/* Number of bytes for command's code. *\/$/;"	m	struct:__anone79d5a530308	typeref:typename:Tcl_Size
numCodeBytes	generic/tclCompile.h	/^    Tcl_Size numCodeBytes;	\/* Number of bytes in the code range. *\/$/;"	m	struct:__anone79d5a530208	typeref:typename:Tcl_Size
numCodeBytes	generic/tclCompile.h	/^    Tcl_Size numCodeBytes;	\/* Number of code bytes. *\/$/;"	m	struct:ByteCode	typeref:typename:Tcl_Size
numCommands	generic/tclCompile.h	/^    Tcl_Size numCommands;	\/* Number of commands compiled. *\/$/;"	m	struct:ByteCode	typeref:typename:Tcl_Size
numCommands	generic/tclCompile.h	/^    Tcl_Size numCommands;	\/* Number of commands compiled. *\/$/;"	m	struct:CompileEnv	typeref:typename:Tcl_Size
numCompilations	generic/tclInt.h	/^    size_t numCompilations;	\/* Number of ByteCodes created. *\/$/;"	m	struct:ByteCodeStats	typeref:typename:size_t
numCompiledLocals	generic/tclInt.h	/^    Tcl_Size numCompiledLocals;	\/* Count of local variables recognized by the$/;"	m	struct:Proc	typeref:typename:Tcl_Size
numCompiledLocals	generic/tclInt.h	/^    Tcl_Size numCompiledLocals;	\/* Count of local variables recognized$/;"	m	struct:CallFrame	typeref:typename:Tcl_Size
numComponents	generic/tcl.h	/^    Tcl_Size numComponents;	\/* If this token is composed of other tokens,$/;"	m	struct:Tcl_Token	typeref:typename:Tcl_Size
numCompressedBytes	generic/tclZipfs.c	/^    int numCompressedBytes;	\/* Compressed size of the virtual file.$/;"	m	struct:ZipEntry	typeref:typename:int	file:
numContinueTargets	generic/tclCompile.h	/^    Tcl_Size numContinueTargets;\/* The number of [continue]s that want to be$/;"	m	struct:ExceptionAux	typeref:typename:Tcl_Size
numElements	generic/tclCmdIL.c	/^    int numElements;$/;"	m	struct:__anond5eb1cce0308	typeref:typename:int	file:
numElems	generic/tclLink.c	/^    Tcl_Size numElems;		\/* Number of elements in C variable array.$/;"	m	struct:__anonfc2fcf730108	typeref:typename:Tcl_Size	file:
numEntries	generic/tcl.h	/^    Tcl_Size numEntries;	\/* Total number of entries present in$/;"	m	struct:Tcl_HashTable	typeref:typename:Tcl_Size
numEntries	generic/tclInt.h	/^    TCL_HASH_TYPE numEntries;	\/* Total number of entries present in$/;"	m	struct:LiteralTable	typeref:typename:TCL_HASH_TYPE
numExceptRanges	generic/tclCompile.h	/^    Tcl_Size numExceptRanges;	\/* Number of ExceptionRange array elems. *\/$/;"	m	struct:ByteCode	typeref:typename:Tcl_Size
numExecutions	generic/tclInt.h	/^    size_t numExecutions;	\/* Number of ByteCodes executed. *\/$/;"	m	struct:ByteCodeStats	typeref:typename:size_t
numExportPatterns	generic/tclInt.h	/^    Tcl_Size numExportPatterns;	\/* Number of export patterns currently$/;"	m	struct:Namespace	typeref:typename:Tcl_Size
numFdBits	macosx/tclMacOSXNotify.c	/^    int numFdBits;		\/* Number of valid bits in checkMasks (one$/;"	m	struct:ThreadSpecificData	typeref:typename:int	file:
numFdBits	unix/tclSelectNotfy.c	/^    int numFdBits;		\/* Number of valid bits in checkMasks (one$/;"	m	struct:ThreadSpecificData	typeref:typename:int	file:
numFiles	generic/tclZipfs.c	/^    size_t numFiles;		\/* Number of files in archive *\/$/;"	m	struct:ZipFile	typeref:typename:size_t	file:
numFree	generic/tclThreadAlloc.c	/^    size_t numFree;		\/* Number of blocks available *\/$/;"	m	struct:__anone59fb5e80408	typeref:typename:size_t	file:
numInsertedObjs	generic/tclInt.h	/^	Tcl_Size numInsertedObjs;$/;"	m	struct:Interp::__anon1eb6b3550908	typeref:typename:Tcl_Size
numInserts	generic/tclThreadAlloc.c	/^    size_t numInserts;		\/* Number of inserts into bucket *\/$/;"	m	struct:__anone59fb5e80408	typeref:typename:size_t	file:
numLevels	generic/tclInt.h	/^    Tcl_Size numLevels;		\/* Keeps track of how many nested calls to$/;"	m	struct:Interp	typeref:typename:Tcl_Size
numLists	generic/tclCmdAH.c	/^    Tcl_Size numLists;		\/* Count of value lists. *\/$/;"	m	struct:ForeachState	typeref:typename:Tcl_Size	file:
numLists	generic/tclCompile.h	/^    Tcl_Size numLists;		\/* The number of both the variable and value$/;"	m	struct:ForeachInfo	typeref:typename:Tcl_Size
numLitObjects	generic/tclCompile.h	/^    Tcl_Size numLitObjects;	\/* Number of objects in literal array. *\/$/;"	m	struct:ByteCode	typeref:typename:Tcl_Size
numLiteralsCreated	generic/tclInt.h	/^    size_t numLiteralsCreated;	\/* Total literal objects ever compiled. *\/$/;"	m	struct:ByteCodeStats	typeref:typename:size_t
numLocks	generic/tclThreadAlloc.c	/^    size_t numLocks;		\/* Number of locks acquired *\/$/;"	m	struct:__anone59fb5e80408	typeref:typename:size_t	file:
numMallocs	generic/tclAlloc.c	/^static	size_t numMallocs[NBUCKETS+1];$/;"	v	typeref:typename:size_t[]	file:
numMove	generic/tclThreadAlloc.c	/^    size_t numMove;		\/* Num blocks to move to share. *\/$/;"	m	struct:__anone59fb5e80508	typeref:typename:size_t	file:
numNsCreated	generic/tclNamesp.c	/^    size_t numNsCreated;	\/* Count of the number of namespaces created$/;"	m	struct:__anon357794090108	typeref:typename:size_t	file:
numObjects	generic/tclInt.h	/^    size_t numObjects;		\/* Number of objects for thread. *\/$/;"	m	struct:AllocCache	typeref:typename:size_t
numObjects	generic/tclThreadAlloc.c	/^    size_t numObjects;		\/* Number of objects for thread *\/$/;"	m	struct:Cache	typeref:typename:size_t	file:
numOpen	generic/tclZipfs.c	/^    size_t numOpen;		\/* Number of open files on archive *\/$/;"	m	struct:ZipFile	typeref:typename:size_t	file:
numOperands	generic/tclCompile.h	/^    int numOperands;		\/* Number of operands. *\/$/;"	m	struct:InstructionDesc	typeref:typename:int
numParameters	generic/tclInt.h	/^    Tcl_Size numParameters;	\/* Cached number of parameters. This is either$/;"	m	struct:EnsembleConfig	typeref:typename:Tcl_Size
numPids	unix/tclUnixPipe.c	/^    size_t numPids;		\/* How many processes are attached to this$/;"	m	struct:__anon004fe33e0108	typeref:typename:size_t	file:
numPids	win/tclWinPipe.c	/^    size_t numPids;		\/* Number of processes attached to pipe. *\/$/;"	m	struct:PipeInfo	typeref:typename:size_t	file:
numRefs	win/tclWinConsole.c	/^    int numRefs;		\/* See comments above *\/$/;"	m	struct:ConsoleChannelInfo	typeref:typename:int	file:
numRefs	win/tclWinConsole.c	/^    int numRefs;		\/* See comments above *\/$/;"	m	struct:ConsoleHandleInfo	typeref:typename:int	file:
numRemovedObjs	generic/tclInt.h	/^	Tcl_Size numRemovedObjs;\/* How many arguments have been stripped off$/;"	m	struct:Interp::__anon1eb6b3550908	typeref:typename:Tcl_Size
numRemoves	generic/tclThreadAlloc.c	/^    size_t numRemoves;		\/* Number of removes from bucket *\/$/;"	m	struct:__anone59fb5e80408	typeref:typename:size_t	file:
numSrcBytes	generic/tclCompile.h	/^    Tcl_Size numSrcBytes;	\/* Number of bytes in source. *\/$/;"	m	struct:CompileEnv	typeref:typename:Tcl_Size
numSrcBytes	generic/tclCompile.h	/^    Tcl_Size numSrcBytes;	\/* Number of command source chars. *\/$/;"	m	struct:__anone79d5a530308	typeref:typename:Tcl_Size
numSrcBytes	generic/tclCompile.h	/^    Tcl_Size numSrcBytes;	\/* Number of source bytes compiled. *\/$/;"	m	struct:ByteCode	typeref:typename:Tcl_Size
numSubTables	generic/tclEncoding.c	/^    int numSubTables;		\/* Length of following array. *\/$/;"	m	struct:__anondb7a8e8c0408	typeref:typename:int	file:
numTokens	generic/tcl.h	/^    Tcl_Size numTokens;		\/* Total number of tokens in command. *\/$/;"	m	struct:Tcl_Parse	typeref:typename:Tcl_Size
numUsed	generic/tclInt.h	/^    Tcl_Size numUsed;		\/* Number of slots in use (starting firstUsed) *\/$/;"	m	struct:ListStore	typeref:typename:Tcl_Size
numVars	generic/tclCompile.h	/^    Tcl_Size numVars;		\/* The number of variables in the list. *\/$/;"	m	struct:ForeachVarList	typeref:typename:Tcl_Size
numVars	generic/tclInt.h	/^    Tcl_Size numVars;		\/* Number of variables. *\/$/;"	m	struct:LocalCache	typeref:typename:Tcl_Size
numWords	generic/tcl.h	/^    Tcl_Size numWords;		\/* Total number of words in command. May be$/;"	m	struct:Tcl_Parse	typeref:typename:Tcl_Size
num_file	compat/zlib/contrib/minizip/unzip.c	/^    ZPOS64_T num_file;             \/* number of the current file in the zipfile*\/$/;"	m	struct:__anon3259ecee0208	typeref:typename:ZPOS64_T	file:
num_of_file	compat/zlib/contrib/minizip/unzip.h	/^    ZPOS64_T num_of_file;            \/* # of file *\/$/;"	m	struct:unz64_file_pos_s	typeref:typename:ZPOS64_T
num_of_file	compat/zlib/contrib/minizip/unzip.h	/^    uLong num_of_file;            \/* # of file *\/$/;"	m	struct:unz_file_pos_s	typeref:typename:uLong
number	generic/tclGetDateClassic.y	/^number	: tUNUMBER {$/;"	l
number_entry	compat/zlib/contrib/minizip/unzip.h	/^    ZPOS64_T number_entry;         \/* total number of entries in$/;"	m	struct:unz_global_info64_s	typeref:typename:ZPOS64_T
number_entry	compat/zlib/contrib/minizip/unzip.h	/^    uLong number_entry;         \/* total number of entries in$/;"	m	struct:unz_global_info_s	typeref:typename:uLong
number_entry	compat/zlib/contrib/minizip/zip.c	/^    ZPOS64_T number_entry;$/;"	m	struct:__anon7add25cb0208	typeref:typename:ZPOS64_T	file:
numitem	generic/tclGetDate.y	/^numitem	: tUNUMBER {$/;"	l
numst	generic/regcomp.c	/^numst($/;"	f	typeref:typename:int	file:
oPtr	generic/tclOOCall.c	/^    Object *oPtr;		\/* The object that we are building the chain$/;"	m	struct:ChainBuilder	typeref:typename:Object *	file:
oPtr	generic/tclOOInt.h	/^    Object *oPtr;		\/* The object associated with this call. *\/$/;"	m	struct:CallContext	typeref:typename:Object *
o_merid	generic/tclGetDate.y	/^o_merid : \/* NULL *\/ {$/;"	l	typeref:typename:Meridian
o_merid	generic/tclGetDateClassic.y	/^o_merid : \/* NULL *\/ {$/;"	l	typeref:typename:Meridian
oas	generic/regguts.h	/^    struct arcbatch oas;	\/* first arcbatch, avoid malloc in easy case *\/$/;"	m	struct:state	typeref:struct:arcbatch
obj	generic/tclInt.h	/^    Tcl_Obj *obj;		\/* Back reference to hash table key *\/$/;"	m	struct:CFWordBC	typeref:typename:Tcl_Obj *
objArrayPtr	generic/tclCompile.h	/^    Tcl_Obj **objArrayPtr;	\/* Points to the start of the literal object$/;"	m	struct:ByteCode	typeref:typename:Tcl_Obj **
objClientData	generic/tcl.h	/^    void *objClientData;	\/* ClientData for object proc. *\/$/;"	m	struct:__anon937aefea0708	typeref:typename:void *
objClientData	generic/tclInt.h	/^    void *objClientData;	\/* Arbitrary value passed to object proc. *\/$/;"	m	struct:Command	typeref:typename:void *
objClientData2	generic/tcl.h	/^    void *objClientData2;	\/* ClientData for object2 proc. *\/$/;"	m	struct:__anon937aefea0708	typeref:typename:void *
objCmdProc	generic/tclBasic.c	/^    Tcl_ObjCmdProc *objCmdProc;	\/* Function that evaluates the function *\/$/;"	m	struct:__anon6e1456070408	typeref:typename:Tcl_ObjCmdProc *	file:
objCmdProc	generic/tclClock.c	/^    Tcl_ObjCmdProc *objCmdProc; \/* Function that implements the command. This$/;"	m	struct:ClockCommand	typeref:typename:Tcl_ObjCmdProc *	file:
objCmdProc	generic/tclClockClassic.c	/^    Tcl_ObjCmdProc *objCmdProc;	\/* Function that implements the command. This$/;"	m	struct:ClockCommand	typeref:typename:Tcl_ObjCmdProc *	file:
objDefinitionNs	generic/tclOOInt.h	/^    Tcl_Obj *objDefinitionNs;	\/* Name of the namespace to use for$/;"	m	struct:Class	typeref:typename:Tcl_Obj *
objIndices	generic/tclZlib.c	/^    enum objIndices {$/;"	g	function:ZlibStreamSubcmd	file:
objLockPtr	generic/tclThreadAlloc.c	/^static Tcl_Mutex *objLockPtr;$/;"	v	typeref:typename:Tcl_Mutex *	file:
objMethods	generic/tclOO.c	/^static const DeclaredClassMethod objMethods[] = {$/;"	v	typeref:typename:const DeclaredClassMethod[]	file:
objProc	generic/tcl.h	/^    Tcl_ObjCmdProc *objProc;	\/* Command's object-based function. *\/$/;"	m	struct:__anon937aefea0708	typeref:typename:Tcl_ObjCmdProc *
objProc	generic/tclBasic.c	/^    Tcl_ObjCmdProc *objProc;	\/* Object-based function for command. *\/$/;"	m	struct:__anon6e1456070208	typeref:typename:Tcl_ObjCmdProc *	file:
objProc	generic/tclBasic.c	/^    Tcl_ObjCmdProc *objProc;	\/* Object-based function for command. *\/$/;"	m	struct:__anon6e1456070508	typeref:typename:Tcl_ObjCmdProc *	file:
objProc	generic/tclInt.h	/^    Tcl_ObjCmdProc *objProc;	\/* Object-based command procedure. *\/$/;"	m	struct:Command	typeref:typename:Tcl_ObjCmdProc *
objProc	generic/tclOO.c	/^    Tcl_ObjCmdProc *objProc;$/;"	m	struct:__anon5e0846e30108	typeref:typename:Tcl_ObjCmdProc *	file:
objProc2	generic/tcl.h	/^    Tcl_ObjCmdProc2 *objProc2;	\/* Command's object2-based function. *\/$/;"	m	struct:__anon937aefea0708	typeref:typename:Tcl_ObjCmdProc2 *
objPtr	generic/tcl.h	/^	Tcl_Obj *objPtr;	\/* Tcl_Obj * key value. *\/$/;"	m	union:Tcl_HashEntry::__anon937aefea080a	typeref:typename:Tcl_Obj *
objPtr	generic/tclCmdIL.c	/^	Tcl_Obj *objPtr;$/;"	m	union:SortElement::__anond5eb1cce020a	typeref:typename:Tcl_Obj *	file:
objPtr	generic/tclIO.c	/^    Tcl_Obj *objPtr;		\/* The object to which UTF-8 characters$/;"	m	struct:GetsState	typeref:typename:Tcl_Obj *	file:
objPtr	generic/tclInt.h	/^	Tcl_Obj *objPtr;	\/* The variable's object value. Used for$/;"	m	union:Var::__anon1eb6b355010a	typeref:typename:Tcl_Obj *
objPtr	generic/tclInt.h	/^    Tcl_Obj *objPtr;		\/* Points to Tcl object that holds the$/;"	m	struct:LiteralEntry	typeref:typename:Tcl_Obj *
objPtr	generic/tclInterp.c	/^    Tcl_Obj *objPtr;		\/* The first actual prefix object - the target$/;"	m	struct:__anon913711770108	typeref:typename:Tcl_Obj *	file:
objPtr	generic/tclObj.c	/^    Tcl_Obj *objPtr;		\/* The pointer to the allocated Tcl_Obj. *\/$/;"	m	struct:__anon1f1c87400108	typeref:typename:Tcl_Obj *	file:
objPtr	generic/tclRegexp.h	/^    Tcl_Obj *objPtr;		\/* Last object passed to Tcl_RegExpExecObj. *\/$/;"	m	struct:TclRegexp	typeref:typename:Tcl_Obj *
objRefCount	generic/tclDate.h	/^    int objRefCount;		\/* Reference count shared across threads *\/$/;"	m	struct:ClockFmtScnStorage	typeref:typename:int
objResult	generic/tclClock.c	/^	Tcl_Obj *objResult;$/;"	m	struct:ClockSafeCatchCmd::__anond46bc7710208	typeref:typename:Tcl_Obj *	file:
objResult	generic/tclResult.c	/^    Tcl_Obj *objResult;$/;"	m	struct:__anon298490c40108	typeref:typename:Tcl_Obj *	file:
objResultPtr	generic/tclInt.h	/^    Tcl_Obj *objResultPtr;	\/* If the last command returned an object$/;"	m	struct:Interp	typeref:typename:Tcl_Obj *
objThreadMap	generic/tclObj.c	/^    Tcl_HashTable *objThreadMap;\/* Thread local table that is used to check$/;"	m	struct:__anon1f1c87400208	typeref:typename:Tcl_HashTable *	file:
objValuePtr	generic/tclCmdIL.c	/^	Tcl_Obj *objValuePtr;$/;"	m	union:SortElement::__anond5eb1cce010a	typeref:typename:Tcl_Obj *	file:
objc	generic/tclInt.h	/^    Tcl_Size objc;		\/* This and objv below describe the arguments$/;"	m	struct:CallFrame	typeref:typename:Tcl_Size
objc	generic/tclInterp.c	/^    Tcl_Size objc;		\/* Count of Tcl_Obj in the prefix of the$/;"	m	struct:__anon913711770108	typeref:typename:Tcl_Size	file:
objdefCmds	generic/tclOO.c	/^}, objdefCmds[] = {$/;"	v	typeref:typename:const struct __anon5e0846e30108[]
objdir	macosx/GNUmakefile	/^objdir			= $(subst ${space},\\ ,${OBJ_DIR})$/;"	m
objectCls	generic/tclOOInt.h	/^    Class *objectCls;		\/* The root of the object system. *\/$/;"	m	struct:Foundation	typeref:typename:Class *
objectCreationEpoch	generic/tclOOInt.h	/^    Tcl_Size objectCreationEpoch;\/* The object's creation epoch. Note that the$/;"	m	struct:CallChain	typeref:typename:Tcl_Size
objectEpoch	generic/tclOOInt.h	/^    Tcl_Size objectEpoch;	\/* Local (object structure) epoch counter$/;"	m	struct:CallChain	typeref:typename:Tcl_Size
objectFoundation	generic/tclInt.h	/^    void *objectFoundation;	\/* Pointer to the Foundation structure of the$/;"	m	struct:Interp	typeref:typename:void *
objs	unix/Makefile.in	/^objs: ${OBJS}$/;"	t
objv	generic/tclInt.h	/^    Tcl_Obj *const *objv;	\/* Array of argument objects. *\/$/;"	m	struct:CallFrame	typeref:typename:Tcl_Obj * const *
oemId	win/tclWinInit.c	/^	OemId oemId;$/;"	m	union:TclpSetVariables::__anon2388ba18020a	typeref:typename:OemId	file:
offs	generic/tclDate.h	/^    unsigned short offs;$/;"	m	struct:ClockFormatTokenMap	typeref:typename:unsigned short
offs	generic/tclDate.h	/^    unsigned short offs;$/;"	m	struct:ClockScanTokenMap	typeref:typename:unsigned short
offset	compat/zlib/inflate.h	/^    unsigned offset;            \/* distance back to copy string from *\/$/;"	m	struct:inflate_state	typeref:typename:unsigned
offset	generic/tclIORChan.c	/^    Tcl_WideInt offset;		\/* I: Where to seek,$/;"	m	struct:ForwardParamSeek	typeref:typename:Tcl_WideInt	file:
offset	generic/tclIndexObj.c	/^    Tcl_Size offset;		\/* Offset between table entries *\/$/;"	m	struct:__anon02ea70180108	typeref:typename:Tcl_Size	file:
offset	generic/tclTestObj.c	/^	Tcl_Size offset;		\/* Offset between table entries. *\/$/;"	m	struct:TestindexobjCmd::IndexRep	typeref:typename:Tcl_Size	file:
offset	generic/tclTestObjInterface.c	/^    Tcl_Size offset;$/;"	m	struct:indexHex	typeref:typename:Tcl_Size	file:
offset	generic/tclThreadStorage.c	/^    volatile sig_atomic_t offset;$/;"	m	union:__anon4d1cb892030a	typeref:typename:volatile sig_atomic_t	file:
offset	generic/tclZipfs.c	/^    size_t offset;		\/* Data offset into memory mapped ZIP file *\/$/;"	m	struct:ZipEntry	typeref:typename:size_t	file:
offset	generic/tclZlib.c	/^	enum objIndices offset;$/;"	m	struct:ZlibStreamSubcmd::__anon1d0b6d960408	typeref:enum:objIndices	file:
offset_central_dir	compat/zlib/contrib/minizip/unzip.c	/^    ZPOS64_T offset_central_dir;   \/* offset of start of central directory with$/;"	m	struct:__anon3259ecee0208	typeref:typename:ZPOS64_T	file:
offset_curfile	compat/zlib/contrib/minizip/unzip.c	/^    ZPOS64_T offset_curfile;\/* relative offset of local header 8 bytes *\/$/;"	m	struct:unz_file_info64_internal_s	typeref:typename:ZPOS64_T	file:
offset_local_extrafield	compat/zlib/contrib/minizip/unzip.c	/^    ZPOS64_T offset_local_extrafield;\/* offset of the local extra field *\/$/;"	m	struct:__anon3259ecee0108	typeref:typename:ZPOS64_T	file:
okcolors	generic/regc_color.c	/^okcolors($/;"	f	typeref:typename:void	file:
onDayOfMonth	tools/tclZIC.tcl	/^proc onDayOfMonth {day year month} {$/;"	p
onExitMemDumpFileName	generic/tclCkalloc.c	/^static char *onExitMemDumpFileName = NULL;$/;"	v	typeref:typename:char *	file:
onLastWeekdayInMonth	tools/tclZIC.tcl	/^proc onLastWeekdayInMonth {dayOfWeek year month} {$/;"	p
onList	macosx/tclMacOSXNotify.c	/^    int onList;			\/* True if this thread is on the$/;"	m	struct:ThreadSpecificData	typeref:typename:int	file:
onList	unix/tclSelectNotfy.c	/^    int onList;			\/* True if it is in this list *\/$/;"	m	struct:ThreadSpecificData	typeref:typename:int	file:
onWeekdayInMonth	tools/tclZIC.tcl	/^proc onWeekdayInMonth {dayOfWeek relation dayOfMonth year month} {$/;"	p
once	compat/zlib/crc32.c	/^local void once(once_t *state, void (*init)(void)) {$/;"	f	typeref:typename:local void
once_s	compat/zlib/crc32.c	/^struct once_s {$/;"	s	file:
once_t	compat/zlib/crc32.c	/^typedef struct once_s once_t;$/;"	t	typeref:struct:once_s	file:
one	generic/tclCmdIL.c	/^    #define one /;"	d	file:
oneWordValue	generic/tcl.h	/^	char *oneWordValue;	\/* One-word value for key. *\/$/;"	m	union:Tcl_HashEntry::__anon937aefea080a	typeref:typename:char *
onechr	generic/regcomp.c	/^onechr($/;"	f	typeref:typename:void	file:
ooNs	generic/tclOOInt.h	/^    Tcl_Namespace *ooNs;	\/* ::oo namespace. *\/$/;"	m	struct:Foundation	typeref:typename:Tcl_Namespace *
op	compat/zlib/contrib/infback9/inftree9.h	/^    unsigned char op;           \/* operation, extra bits, table bits *\/$/;"	m	struct:__anon80eb2aca0108	typeref:typename:unsigned char
op	compat/zlib/inftrees.h	/^    unsigned char op;           \/* operation, extra bits, table bits *\/$/;"	m	struct:__anon78703c4e0108	typeref:typename:unsigned char
op	generic/regguts.h	/^    char op;			\/* see type codes above *\/$/;"	m	struct:subre	typeref:typename:char
op	generic/tclCompile.h	/^    const char *op;		\/* Do not call it 'operator': C++ reserved *\/$/;"	m	struct:__anone79d5a530808	typeref:typename:const char *
op	generic/tclIORChan.c	/^    ForwardedOperation op;	\/* Forwarded driver operation *\/$/;"	m	struct:__anon92d8dd290708	typeref:typename:ForwardedOperation	file:
op	generic/tclIORTrans.c	/^    ForwardedOperation op;	\/* Forwarded driver operation *\/$/;"	m	struct:__anon21e740770708	typeref:typename:ForwardedOperation	file:
opTypes	generic/tclCompile.h	/^    InstOperandType opTypes[MAX_INSTRUCTION_OPERANDS];$/;"	m	struct:InstructionDesc	typeref:typename:InstOperandType[]
opaque	compat/zlib/contrib/dotzlib/DotZLib/DotZLib.cs	/^        uint opaque;$/;"	f	struct:DotZLib.ZStream
opaque	compat/zlib/contrib/minizip/ioapi.h	/^    voidpf              opaque;$/;"	m	struct:zlib_filefunc64_def_s	typeref:typename:voidpf
opaque	compat/zlib/contrib/minizip/ioapi.h	/^    voidpf              opaque;$/;"	m	struct:zlib_filefunc_def_s	typeref:typename:voidpf
opaque	compat/zlib/zlib.h	/^    voidpf     opaque;  \/* private data object passed to zalloc and zfree *\/$/;"	m	struct:z_stream_s	typeref:typename:voidpf
open	compat/zlib/contrib/iostream/zfstream.cpp	/^gzfilebuf *gzfilebuf::open( const char *name,$/;"	f	class:gzfilebuf	typeref:typename:gzfilebuf *
open	compat/zlib/contrib/iostream/zfstream.cpp	/^void gzfilestream_common::open( const char *name, int io_mode ) {$/;"	f	class:gzfilestream_common	typeref:typename:void
open	compat/zlib/contrib/iostream2/zstream.h	/^        void open(FILE* fp) {$/;"	f	class:izstream	typeref:typename:void
open	compat/zlib/contrib/iostream2/zstream.h	/^        void open(FILE* fp, int level = Z_DEFAULT_COMPRESSION) {$/;"	f	class:ozstream	typeref:typename:void
open	compat/zlib/contrib/iostream2/zstream.h	/^        void open(const char* name) {$/;"	f	class:izstream	typeref:typename:void
open	compat/zlib/contrib/iostream2/zstream.h	/^        void open(const char* name, int level = Z_DEFAULT_COMPRESSION) {$/;"	f	class:ozstream	typeref:typename:void
open	compat/zlib/contrib/iostream3/zfstream.cc	/^gzfilebuf::open(const char *name,$/;"	f	class:gzfilebuf	typeref:typename:gzfilebuf *
open	compat/zlib/contrib/iostream3/zfstream.cc	/^gzifstream::open(const char* name,$/;"	f	class:gzifstream	typeref:typename:void
open	compat/zlib/contrib/iostream3/zfstream.cc	/^gzofstream::open(const char* name,$/;"	f	class:gzofstream	typeref:typename:void
open	compat/zlib/gzguts.h	/^#  define open _open$/;"	d
open-text	tools/tcltk-man2html-utils.tcl	/^proc open-text {} {$/;"	p
open64_file_func	compat/zlib/contrib/minizip/ioapi.h	/^typedef voidpf   (ZCALLBACK *open64_file_func)    (voidpf opaque, const void* filename, int mode/;"	t	typeref:typename:voidpf (ZCALLBACK *)(voidpf opaque,const void * filename,int mode)
openFileChannelProc	generic/tcl.h	/^    Tcl_FSOpenFileChannelProc *openFileChannelProc;$/;"	m	struct:Tcl_Filesystem	typeref:typename:Tcl_FSOpenFileChannelProc *
openOutput	tools/mkdepend.tcl	/^proc openOutput {file} {$/;"	p
open_file_func	compat/zlib/contrib/minizip/ioapi.h	/^typedef voidpf   (ZCALLBACK *open_file_func)      (voidpf opaque, const char* filename, int mode/;"	t	typeref:typename:voidpf (ZCALLBACK *)(voidpf opaque,const char * filename,int mode)
open_mode	compat/zlib/contrib/iostream3/zfstream.cc	/^gzfilebuf::open_mode(std::ios_base::openmode mode,$/;"	f	class:gzfilebuf	typeref:typename:bool
operandsConsumed	generic/tclAssembly.c	/^    int operandsConsumed;	\/* Number of operands consumed by the$/;"	m	struct:TalInstDesc	typeref:typename:int	file:
operandsProduced	generic/tclAssembly.c	/^    int operandsProduced;	\/* Number of operands produced by the$/;"	m	struct:TalInstDesc	typeref:typename:int	file:
operations	generic/tclTrace.c	/^    enum operations { TRACE_CMD_DELETE, TRACE_CMD_RENAME } index;$/;"	g	function:TraceCommandObjCmd	file:
operations	generic/tclTrace.c	/^    enum operations {$/;"	g	function:TraceExecutionObjCmd	file:
operations	generic/tclTrace.c	/^    enum operations {$/;"	g	function:TraceVariableObjCmd	file:
operator <	compat/zlib/contrib/iostream2/zstream.h	/^inline ozstream& operator<(ozstream& zs, char* const& x) {$/;"	f	typeref:typename:ozstream &
operator <	compat/zlib/contrib/iostream2/zstream.h	/^inline ozstream& operator<(ozstream& zs, const T& x) {$/;"	f	typeref:typename:ozstream &
operator <	compat/zlib/contrib/iostream2/zstream.h	/^inline ozstream& operator<(ozstream& zs, const char* x) {$/;"	f	typeref:typename:ozstream &
operator <<	compat/zlib/contrib/iostream/zfstream.h	/^template<class T> gzofstream &operator<<(gzofstream &s, const gzomanip<T> &m)$/;"	f	typeref:typename:gzofstream &
operator <<	compat/zlib/contrib/iostream2/zstream.h	/^inline ostream& operator<<(ozstream& zs, const T& x) {$/;"	f	typeref:typename:ostream &
operator <<	compat/zlib/contrib/iostream3/zfstream.h	/^  operator<<(gzofstream& s, const gzomanip2<T1,T2>& m)$/;"	f	typeref:typename:gzofstream &
operator >	compat/zlib/contrib/iostream2/zstream.h	/^inline izstream& operator>(izstream& zs, T& x) {$/;"	f	typeref:typename:izstream &
operator >	compat/zlib/contrib/iostream2/zstream.h	/^inline izstream& operator>(izstream& zs, char* x) {$/;"	f	typeref:typename:izstream &
operatorStrings	generic/tclExecute.c	/^static const char *const operatorStrings[] = {$/;"	v	typeref:typename:const char * const[]	file:
opt_len	compat/zlib/deflate.h	/^    ulg opt_len;        \/* bit length of current block with optimal trees *\/$/;"	m	struct:internal_state	typeref:typename:ulg
optimize	generic/regc_nfa.c	/^optimize($/;"	f	typeref:typename:long	file:
optimizer	generic/tclInt.h	/^    void (*optimizer)(void *envPtr);$/;"	m	struct:Interp	typeref:typename:void (*)(void * envPtr)
option	generic/tclInterp.c	/^	enum option {$/;"	g	function:NRInterpCmd	file:
option	tests-perf/listPerf.tcl	/^        method option {opt val} {$/;"	m	class:::perf::list.ListPerf
option-toc	tools/tcltk-man2html-utils.tcl	/^proc option-toc {name class switch} {$/;"	p
optionCancelEnum	generic/tclInterp.c	/^	enum optionCancelEnum {$/;"	g	function:NRInterpCmd	file:
optionInd	generic/tclClock.c	/^    enum optionInd {$/;"	g	function:ClockConfigureObjCmd	file:
optionInd	generic/tclClock.c	/^    enum optionInd {$/;"	g	function:ClockParseFmtScnArgs	file:
optionInd	generic/tclClockClassic.c	/^    enum optionInd {$/;"	g	function:ClockParseformatargsObjCmd	file:
optionInd	generic/tclStrIdxTree.c	/^    enum optionInd {$/;"	g	function:TclStrIdxTreeTestObjCmd	file:
option_unset	tests-perf/listPerf.tcl	/^        method option_unset {opt} {$/;"	m	class:::perf::list.ListPerf
options	generic/tclTest.c	/^    enum options {$/;"	g	function:TestLutilCmd	file:
options	generic/tclTest.c	/^    enum options {$/;"	g	function:TestcmdinfoObjCmd	file:
options	generic/tclTest.c	/^    enum options {$/;"	g	function:TestencodingObjCmd	file:
options	generic/tclTestObj.c	/^    enum options {$/;"	g	function:TestbigdataCmd	file:
options	generic/tclTestObj.c	/^    enum options {$/;"	g	function:TestbignumobjCmd	file:
options	generic/tclThreadTest.c	/^    enum options {$/;"	g	function:ThreadObjCmd	file:
options	win/vctool.bat	/^:options$/;"	l
optionsEnum	generic/tclTest.c	/^    enum optionsEnum {$/;"	g	function:TestregexpObjCmd	file:
ordMonth	generic/tclGetDate.y	/^ordMonth: tNEXT tMONTH {$/;"	l
ordMonth	generic/tclGetDateClassic.y	/^ordMonth: tNEXT tMONTH {$/;"	l
org_ptr	compat/zlib/zutil.c	/^    voidpf org_ptr;$/;"	m	struct:ptr_table_s	typeref:typename:voidpf	file:
originThrdId	generic/tclAsync.c	/^    Tcl_ThreadId originThrdId;	\/* Origin thread where this token was created$/;"	m	struct:AsyncHandler	typeref:typename:Tcl_ThreadId	file:
originTsd	generic/tclAsync.c	/^    struct ThreadSpecificData *originTsd;$/;"	m	struct:AsyncHandler	typeref:struct:ThreadSpecificData *	file:
originalStartOffset	generic/tclAssembly.c	/^    int originalStartOffset;	\/* Instruction offset before JUMP1s were$/;"	m	struct:BasicBlock	typeref:typename:int	file:
os	compat/zlib/contrib/iostream2/zstream.h	/^        ostream& os() {$/;"	f	class:ozstream	typeref:typename:ostream &
os	compat/zlib/zlib.h	/^    int     os;         \/* operating system *\/$/;"	m	struct:gz_header_s	typeref:typename:int
osRead	win/tclWinSerial.c	/^    OVERLAPPED osRead;		\/* OVERLAPPED structure for read operations. *\/$/;"	m	struct:SerialInfo	typeref:typename:OVERLAPPED	file:
osWrite	win/tclWinSerial.c	/^    OVERLAPPED osWrite;		\/* OVERLAPPED structure for write operations *\/$/;"	m	struct:SerialInfo	typeref:typename:OVERLAPPED	file:
os_flush	compat/zlib/contrib/iostream2/zstream.h	/^        void os_flush() {$/;"	f	class:ozstream	typeref:typename:void
otherPipe	unix/tclSelectNotfy.c	/^static int otherPipe = -1;$/;"	v	typeref:typename:int	file:
otherValuePtr	generic/tcl.h	/^    void *otherValuePtr;	\/*   - another, type-specific value, *\/$/;"	m	union:Tcl_ObjInternalRep	typeref:typename:void *
otherValuePtr	generic/tclDTrace.d	/^	void *otherValuePtr;$/;"	m	union:Tcl_Obj.__anon1	file:
ourEnviron	generic/tclEnv.c	/^    techar **ourEnviron;	\/* Cache of the array that we allocate. We$/;"	m	struct:__anon1e6e59ce0108	typeref:typename:techar **	file:
ourEnvironSize	generic/tclEnv.c	/^    Tcl_Size ourEnvironSize;	\/* Non-zero means that the environ array was$/;"	m	struct:__anon1e6e59ce0108	typeref:typename:Tcl_Size	file:
out	compat/zlib/contrib/blast/blast.c	/^    unsigned char out[MAXWIN];  \/* output buffer and sliding window *\/$/;"	m	struct:state	typeref:typename:unsigned char[]	file:
out	compat/zlib/contrib/inflate86/inffas86.c	/^\/* 32   16 *\/ unsigned char FAR *out;   \/* edi rdi  local strm->next_out *\/$/;"	m	struct:inflate_fast::inffast_ar	typeref:typename:unsigned char FAR *	file:
out	compat/zlib/contrib/puff/puff.c	/^    unsigned char *out;         \/* output buffer *\/$/;"	m	struct:state	typeref:typename:unsigned char *	file:
out	compat/zlib/examples/enough.c	/^    string_t out;       \/\/ display of subcodes for maximum tables size$/;"	m	struct:__anonea7b679d0208	typeref:typename:string_t	file:
out	compat/zlib/examples/gun.c	/^local int out(void *out_desc, unsigned char *buf, unsigned len)$/;"	f	typeref:typename:local int
out	compat/zlib/examples/zran.h	/^    off_t out;          \/\/ offset in uncompressed data$/;"	m	struct:point	typeref:typename:off_t
out	compat/zlib/gzguts.h	/^    unsigned char *out;     \/* output buffer (double-sized when reading) *\/$/;"	m	struct:__anon361a15920108	typeref:typename:unsigned char *
out	win/buildall.vc.bat	/^:out$/;"	l
outAllocated	generic/tclZlib.c	/^    size_t inAllocated, outAllocated;$/;"	m	struct:__anon1d0b6d960308	typeref:typename:size_t	file:
outBuffer	generic/tclZlib.c	/^    char *inBuffer, *outBuffer;	\/* Working buffers. *\/$/;"	m	struct:__anon1d0b6d960308	typeref:typename:char *	file:
outData	generic/tclZlib.c	/^    Tcl_Obj *inData, *outData;	\/* Input \/ output buffers (lists) *\/$/;"	m	struct:__anon1d0b6d960208	typeref:typename:Tcl_Obj *	file:
outFile	unix/tclUnixPipe.c	/^    TclFile outFile;		\/* Input to pipe. *\/$/;"	m	struct:__anon004fe33e0108	typeref:typename:TclFile	file:
outHeader	generic/tclZlib.c	/^    GzipHeader outHeader;	\/* Header to write to an output stream, when$/;"	m	struct:__anon1d0b6d960308	typeref:typename:GzipHeader	file:
outPos	generic/tclZlib.c	/^    Tcl_Size outPos;		\/* Index into output buffer to write to next. *\/$/;"	m	struct:__anon1d0b6d960208	typeref:typename:Tcl_Size	file:
outQueueHead	generic/tclIO.h	/^    ChannelBuffer *outQueueHead;\/* Points at first buffer in output queue. *\/$/;"	m	struct:ChannelState	typeref:typename:ChannelBuffer *
outQueueTail	generic/tclIO.h	/^    ChannelBuffer *outQueueTail;\/* Points at last buffer in output queue. *\/$/;"	m	struct:ChannelState	typeref:typename:ChannelBuffer *
outStream	generic/tclZlib.c	/^    z_stream outStream;		\/* Structure used by zlib for compression of$/;"	m	struct:__anon1d0b6d960308	typeref:typename:z_stream	file:
out_func	compat/zlib/zconf.h	/^#  define out_func              z_out_func$/;"	d
out_func	compat/zlib/zconf.h.in	/^#  define out_func              z_out_func$/;"	d	file:
out_func	compat/zlib/zlib.h	/^typedef int (*out_func)(void FAR *, unsigned char FAR *, unsigned);$/;"	t	typeref:typename:int (*)(void FAR *,unsigned char FAR *,unsigned)
outbuf	compat/zlib/examples/gun.c	/^unsigned char outbuf[SIZE];             \/* output buffer *\/$/;"	v	typeref:typename:unsigned char[]
outchain	generic/regguts.h	/^    struct arc *outchain;	\/* link in *from's outs chain or free chain *\/$/;"	m	struct:arc	typeref:struct:arc *
outchainRev	generic/regguts.h	/^    struct arc *outchainRev;	\/* back-link in *from's outs chain *\/$/;"	m	struct:arc	typeref:struct:arc *
outcnt	compat/zlib/contrib/puff/puff.c	/^    unsigned long outcnt;       \/* bytes written to out so far *\/$/;"	m	struct:state	typeref:typename:unsigned long	file:
outd	compat/zlib/examples/gun.c	/^struct outd {$/;"	s	file:
outf	compat/zlib/contrib/blast/blast.c	/^local int outf(void *how, unsigned char *buf, unsigned len)$/;"	f	typeref:typename:local int
outfile	compat/zlib/examples/gun.c	/^    int outfile;$/;"	m	struct:outd	typeref:typename:int	file:
outfun	compat/zlib/contrib/blast/blast.c	/^    blast_out outfun;           \/* output function provided by user *\/$/;"	m	struct:state	typeref:typename:blast_out	file:
outhow	compat/zlib/contrib/blast/blast.c	/^    void *outhow;               \/* opaque information passed to outfun() *\/$/;"	m	struct:state	typeref:typename:void *	file:
outlen	compat/zlib/contrib/puff/puff.c	/^    unsigned long outlen;       \/* available space at out *\/$/;"	m	struct:state	typeref:typename:unsigned long	file:
output	generic/tclDate.h	/^    char *output;$/;"	m	struct:DateFormat	typeref:typename:char *
output	generic/tclIORChan.c	/^    struct ForwardParamOutput output;$/;"	m	union:ForwardParam	typeref:struct:ForwardParamOutput	file:
output-IP-list	tools/tcltk-man2html-utils.tcl	/^proc output-IP-list {context code rest} {$/;"	p
output-RS-list	tools/tcltk-man2html-utils.tcl	/^proc output-RS-list {} {$/;"	p
output-directive	tools/tcltk-man2html-utils.tcl	/^proc output-directive {line} {$/;"	p
output-name	tools/tcltk-man2html-utils.tcl	/^proc output-name {line} {$/;"	p
output-widget-options	tools/tcltk-man2html-utils.tcl	/^proc output-widget-options {rest} {$/;"	p
outputEncodingFlags	generic/tclIO.h	/^    int outputEncodingFlags;	\/* Encoding flags to pass to conversion$/;"	m	struct:ChannelState	typeref:typename:int
outputEncodingState	generic/tclIO.h	/^    Tcl_EncodingState outputEncodingState;$/;"	m	struct:ChannelState	typeref:typename:Tcl_EncodingState
outputProc	generic/tcl.h	/^    Tcl_DriverOutputProc *outputProc;$/;"	m	struct:Tcl_ChannelType	typeref:typename:Tcl_DriverOutputProc *
outputStage	generic/tclIO.h	/^    char *outputStage;		\/* Temporary staging buffer used when$/;"	m	struct:ChannelState	typeref:typename:char *
outputTranslation	generic/tclIO.h	/^    TclEolTranslation outputTranslation;$/;"	m	struct:ChannelState	typeref:typename:TclEolTranslation
outs	generic/regexec.c	/^    struct sset **outs;		\/* outarc vector indexed by color *\/$/;"	m	struct:sset	typeref:struct:sset **	file:
outs	generic/regguts.h	/^    struct arc *outs;		\/* chain of outarcs *\/$/;"	m	struct:state	typeref:struct:arc *
outsarea	generic/regexec.c	/^    struct sset **outsarea;	\/* outarc-vector storage *\/$/;"	m	struct:dfa	typeref:struct:sset **	file:
outsarea	generic/regexec.c	/^    struct sset *outsarea[FEWSTATES*2 * FEWCOLORS];$/;"	m	struct:smalldfa	typeref:struct:sset * []	file:
overMagic0	generic/tclAlloc.c	/^#define overMagic0	/;"	d	file:
overMagic1	generic/tclAlloc.c	/^#define overMagic1	/;"	d	file:
overflow	compat/zlib/contrib/iostream/zfstream.cpp	/^int gzfilebuf::overflow( int c ) {$/;"	f	class:gzfilebuf	typeref:typename:int
overflow	compat/zlib/contrib/iostream3/zfstream.cc	/^gzfilebuf::overflow(int_type c)$/;"	f	class:gzfilebuf	typeref:typename:gzfilebuf::int_type
overhead	generic/tclAlloc.c	/^union overhead {$/;"	u	file:
ovu	generic/tclAlloc.c	/^    } ovu;$/;"	m	union:overhead	typeref:struct:overhead::__anon3a4776f00108	file:
own_buffer	compat/zlib/contrib/iostream3/zfstream.h	/^  bool own_buffer;$/;"	m	class:gzfilebuf	typeref:typename:bool
own_fd	compat/zlib/contrib/iostream3/zfstream.h	/^  bool own_fd;$/;"	m	class:gzfilebuf	typeref:typename:bool
own_file_descriptor	compat/zlib/contrib/iostream/zfstream.h	/^  short own_file_descriptor;$/;"	m	class:gzfilebuf	typeref:typename:short
owner	generic/tclIORChan.c	/^    Tcl_ThreadId owner;		\/* Thread owning the structure.    == Channel thread *\/$/;"	m	struct:__anon92d8dd290108	typeref:typename:Tcl_ThreadId	file:
owner	generic/tclInt.h	/^    Tcl_ThreadId owner;		\/* Which thread's cache is this? *\/$/;"	m	struct:AllocCache	typeref:typename:Tcl_ThreadId
owner	generic/tclThreadAlloc.c	/^    Tcl_ThreadId owner;		\/* Which thread's cache is this? *\/$/;"	m	struct:Cache	typeref:typename:Tcl_ThreadId	file:
ownstring	generic/tclTestObjInterfaceInteger.c	/^    int ownstring;$/;"	m	struct:ListInteger	typeref:typename:int	file:
ozstream	compat/zlib/contrib/iostream2/zstream.h	/^        ozstream() : m_fp(0), m_os(0) {$/;"	f	class:ozstream
ozstream	compat/zlib/contrib/iostream2/zstream.h	/^        ozstream(FILE* fp, int level = Z_DEFAULT_COMPRESSION)$/;"	f	class:ozstream
ozstream	compat/zlib/contrib/iostream2/zstream.h	/^        ozstream(const char* name, int level = Z_DEFAULT_COMPRESSION)$/;"	f	class:ozstream
ozstream	compat/zlib/contrib/iostream2/zstream.h	/^class ozstream$/;"	c
p	generic/tclCompExpr.c	/^    } p;$/;"	m	struct:__anon882f36730108	typeref:union:__anon882f36730108::__anon882f3673020a	file:
pSid	win/tclWinTest.c	/^	PSID pSid;$/;"	m	struct:TestplatformChmod::__anon3c9418440108	typeref:typename:PSID	file:
packageName	generic/tclTestProcBodyObj.c	/^static const char packageName[] = "tcl::procbodytest";$/;"	v	typeref:typename:const char[]	file:
packagePrefer	generic/tclInt.h	/^    int packagePrefer;		\/* Current package selection mode. *\/$/;"	m	struct:Interp	typeref:typename:int
packageTable	generic/tclInt.h	/^    Tcl_HashTable packageTable;	\/* Describes all of the packages loaded in or$/;"	m	struct:Interp	typeref:typename:Tcl_HashTable
packageUnknown	generic/tclInt.h	/^    char *packageUnknown;	\/* Command to invoke during "package require"$/;"	m	struct:Interp	typeref:typename:char *
packageVersion	generic/tclTestProcBodyObj.c	/^static const char packageVersion[] = "1.1";$/;"	v	typeref:typename:const char[]	file:
packages	unix/Makefile.in	/^packages: configure-packages ${STUB_LIB_FILE}$/;"	t
packages	win/Makefile.in	/^packages:$/;"	t
padding	generic/tclAlloc.c	/^    unsigned char padding[TCL_ALLOCALIGN];$/;"	m	union:overhead	typeref:typename:unsigned char[]	file:
padding	generic/tclThreadAlloc.c	/^    unsigned char padding[TCL_ALLOCALIGN];$/;"	m	union:Block	typeref:typename:unsigned char[]	file:
pageMap	generic/tclUniData.c	/^static const unsigned short pageMap[] = {$/;"	v	typeref:typename:const unsigned short[]	file:
panicProc	generic/tclPanic.c	/^static Tcl_PanicProc *panicProc = NULL;$/;"	v	typeref:typename:Tcl_PanicProc *	file:
paque	compat/zlib/contrib/pascal/zlibpas.pas	/^  alloc_func = function(opaque: Pointer; items, size: Integer): Pointer;$/;"	f	typeref:typename:Pointer
paque	compat/zlib/contrib/pascal/zlibpas.pas	/^  free_func  = procedure(opaque, address: Pointer);$/;"	p
paque	compat/zlib/contrib/pascal/zlibpas.pas	/^  in_func    = function(opaque: Pointer; var buf: PByte): Integer;$/;"	f	typeref:typename:Pointer
paque	compat/zlib/contrib/pascal/zlibpas.pas	/^  out_func   = function(opaque: Pointer; buf: PByte; size: Integer): Integer;$/;"	f	typeref:typename:Pointer
param	generic/tclIORChan.c	/^    ForwardParam *param;	\/* Packaged arguments and return values, a$/;"	m	struct:__anon92d8dd290708	typeref:typename:ForwardParam *	file:
param	generic/tclIORTrans.c	/^    ForwardParam *param;	\/* Packaged arguments and return values, a$/;"	m	struct:__anon21e740770708	typeref:typename:ForwardParam *	file:
parameterList	generic/tclInt.h	/^    Tcl_Obj *parameterList;	\/* List of ensemble parameter names. *\/$/;"	m	struct:EnsembleConfig	typeref:typename:Tcl_Obj *
parent	generic/regguts.h	/^    struct nfa *parent;		\/* parent NFA, if any *\/$/;"	m	struct:nfa	typeref:struct:nfa *
parent	generic/tclCompExpr.c	/^	int parent;		\/* "Pointer" to the parent operand. *\/$/;"	m	union:__anon882f36730108::__anon882f3673020a	typeref:typename:int	file:
parent	generic/tclIORTrans.c	/^    Tcl_Channel parent;		\/* Reference to the channel the transformation$/;"	m	struct:__anon21e740770208	typeref:typename:Tcl_Channel	file:
parent	generic/tclInterp.c	/^    Parent parent;		\/* Keeps track of all interps for which this$/;"	m	struct:__anon913711770408	typeref:typename:Parent	file:
parent	generic/tclZlib.c	/^    Tcl_Channel parent;		\/* The underlying source and sink of bytes. *\/$/;"	m	struct:__anon1d0b6d960308	typeref:typename:Tcl_Channel	file:
parentInterp	generic/tclInterp.c	/^    Tcl_Interp *parentInterp;	\/* Parent interpreter for this child. *\/$/;"	m	struct:__anon913711770208	typeref:typename:Tcl_Interp *	file:
parentPtr	generic/tcl.h	/^    struct Tcl_Namespace *parentPtr;$/;"	m	struct:Tcl_Namespace	typeref:struct:Tcl_Namespace *
parentPtr	generic/tclInt.h	/^    struct Namespace *parentPtr;\/* Points to the namespace that contains this$/;"	m	struct:Namespace	typeref:struct:Namespace *
parity	unix/tclUnixChan.c	/^    int parity;$/;"	m	struct:__anone1e2a72a0308	typeref:typename:int	file:
parray	library/parray.tcl	/^proc parray {a {pattern *}} {$/;"	p
parse	generic/regcomp.c	/^parse($/;"	f	typeref:struct:subre *	file:
parse-directive	tools/tcltk-man2html-utils.tcl	/^proc parse-directive {line codename restname} {$/;"	p
parseArg	tools/genStubs.tcl	/^proc genStubs::parseArg {arg} {$/;"	p	namespace:genStubs
parseDecl	tools/genStubs.tcl	/^proc genStubs::parseDecl {decl} {$/;"	p	namespace:genStubs
parseON	tools/tclZIC.tcl	/^proc parseON {on} {$/;"	p
parseOffsetTime	tools/tclZIC.tcl	/^proc parseOffsetTime {offset} {$/;"	p
parsePtr	generic/tclAssembly.c	/^    Tcl_Parse* parsePtr;	\/* Parse of the current line of source *\/$/;"	m	struct:AssemblyEnv	typeref:typename:Tcl_Parse *	file:
parseRule	tools/tclZIC.tcl	/^proc parseRule {fileName lno words} {$/;"	p
parseTOD	tools/tclZIC.tcl	/^proc parseTOD {tod} {$/;"	p
parseUntil	tools/tclZIC.tcl	/^proc parseUntil {words} {$/;"	p
parseZone	tools/tclZIC.tcl	/^proc parseZone {fileName lno zone words start} {$/;"	p
parse_SBCS	tools/ucm2tests.tcl	/^proc ucm::parse_SBCS {encName fd} {$/;"	p	namespace:ucm
parse_file	tools/ucm2tests.tcl	/^proc ucm::parse_file {encName ucmPath} {$/;"	p	namespace:ucm
parsebranch	generic/regcomp.c	/^parsebranch($/;"	f	typeref:struct:subre *	file:
parsedVarNameType	generic/tclVar.c	/^static const Tcl_ObjType parsedVarNameType = {$/;"	v	typeref:typename:const Tcl_ObjType	file:
parseqatom	generic/regcomp.c	/^parseqatom($/;"	f	typeref:typename:void	file:
parser	generic/tclDate.h	/^    ClockScanTokenProc *parser;$/;"	m	struct:ClockScanTokenMap	typeref:typename:ClockScanTokenProc *
partcompress	compat/zlib/examples/fitblk.c	/^local int partcompress(FILE *in, z_streamp def)$/;"	f	typeref:typename:local int
passBuf	generic/tclZipfs.c	/^    unsigned char passBuf[ZIPFS_PASSBUF_SIZE];$/;"	m	struct:ZipFile	typeref:typename:unsigned char[]	file:
passOffset	generic/tclZipfs.c	/^    size_t passOffset;		\/* Password start *\/$/;"	m	struct:ZipFile	typeref:typename:size_t	file:
past	compat/zlib/gzguts.h	/^    int past;               \/* true if read requested past end *\/$/;"	m	struct:__anon361a15920108	typeref:typename:int
patLengths	generic/tclRegexp.c	/^    size_t patLengths[NUM_REGEXPS];\/* Number of non-null characters in$/;"	m	struct:__anon0c6ba4b00108	typeref:typename:size_t[]	file:
path	compat/zlib/contrib/minizip/tinydir.h	/^	_tinydir_char_t path[_TINYDIR_PATH_MAX];$/;"	m	struct:tinydir_dir	typeref:typename:_tinydir_char_t[]
path	compat/zlib/contrib/minizip/tinydir.h	/^	_tinydir_char_t path[_TINYDIR_PATH_MAX];$/;"	m	struct:tinydir_file	typeref:typename:_tinydir_char_t[]
path	compat/zlib/examples/gzlog.c	/^    char *path;     \/* allocated path, e.g. "\/var\/log\/foo" or "foo" *\/$/;"	m	struct:log	typeref:typename:char *	file:
path	compat/zlib/gzguts.h	/^    char *path;             \/* path or fd for error messages *\/$/;"	m	struct:__anon361a15920108	typeref:typename:char *
path	generic/tclCompile.h	/^    Tcl_Obj *path;		\/* Path of the sourced file the command is$/;"	m	struct:__anone79d5a530508	typeref:typename:Tcl_Obj *
path	generic/tclInt.h	/^	    Tcl_Obj *path;	\/* Path of the sourced file the command is$/;"	m	struct:CmdFrame::__anon1eb6b355020a::__anon1eb6b3550308	typeref:typename:Tcl_Obj *
path	generic/tclMain.c	/^    Tcl_Obj *path;		\/* The filename of the script for *_Main()$/;"	m	struct:__anonfdf182ea0108	typeref:typename:Tcl_Obj *	file:
path2177	tools/tclsh.svg	/^         id="path2177" \/>$/;"	i
path4426	tools/tclsh.svg	/^         style="opacity:1;fill:#3465a4;fill-opacity:1;fill-rule:evenodd;stroke:none;stroke-width/;"	i
path7600	tools/tclsh.svg	/^         style="opacity:1;fill:#eeeeec;fill-opacity:1;fill-rule:evenodd;stroke:#eff1cb;stroke-wi/;"	i
pathDirOptions	generic/tclFileName.c	/^    enum pathDirOptions {PATH_NONE = -1, PATH_GENERAL = 0, PATH_DIR = 1};$/;"	g	function:Tcl_GlobObjCmd	file:
pathInFilesystemProc	generic/tcl.h	/^    Tcl_FSPathInFilesystemProc *pathInFilesystemProc;$/;"	m	struct:Tcl_Filesystem	typeref:typename:Tcl_FSPathInFilesystemProc *
patterns	generic/tclRegexp.c	/^    char *patterns[NUM_REGEXPS];\/* Strings corresponding to compiled regular$/;"	m	struct:__anon0c6ba4b00108	typeref:typename:char * []	file:
patterns	library/platform/platform.tcl	/^proc ::platform::patterns {id} {$/;"	p	namespace:::platform
payload	generic/tclCmdIL.c	/^    } payload;$/;"	m	struct:SortElement	typeref:union:SortElement::__anond5eb1cce020a	file:
pbuf	unix/tclUnixCompat.c	/^    char *pbuf;$/;"	m	struct:__anon1c3f21740108	typeref:typename:char *	file:
pbuf	unix/tclUnixCompat.c	/^    char pbuf[2048];$/;"	m	struct:__anon1c3f21740108	typeref:typename:char[2048]	file:
pbuflen	unix/tclUnixCompat.c	/^    int pbuflen;$/;"	m	struct:__anon1c3f21740108	typeref:typename:int	file:
pc	generic/tclInt.h	/^	    const char *pc;	\/* ... and instruction pointer. *\/$/;"	m	struct:CmdFrame::__anon1eb6b355020a::__anon1eb6b3550408	typeref:typename:const char *
pc	generic/tclInt.h	/^    Tcl_Size pc;		\/* Instruction pointer of a command in$/;"	m	struct:CFWordBC	typeref:typename:Tcl_Size
pchr	generic/regcustom.h	/^typedef int pchr;		\/* What it promotes to. *\/$/;"	t	typeref:typename:int
pcolor	generic/regguts.h	/^typedef int pcolor;		\/* what color promotes to *\/$/;"	t	typeref:typename:int
pcrc_32_tab	compat/zlib/contrib/minizip/unzip.c	/^    const z_crc_t* pcrc_32_tab;$/;"	m	struct:__anon3259ecee0208	typeref:typename:const z_crc_t *	file:
pcrc_32_tab	compat/zlib/contrib/minizip/zip.c	/^    const z_crc_t* pcrc_32_tab;$/;"	m	struct:__anon7add25cb0108	typeref:typename:const z_crc_t *	file:
pdbs	win/vctool.bat	/^:pdbs$/;"	l
pdbs	win/vctool.bat	/^set pdbs=1$/;"	v
pedPtr	unix/tclEpollNotfy.c	/^    struct PlatformEventData *pedPtr;$/;"	m	struct:FileHandler	typeref:struct:PlatformEventData *	file:
pedPtr	unix/tclKqueueNotfy.c	/^    struct PlatformEventData *pedPtr;$/;"	m	struct:FileHandler	typeref:struct:PlatformEventData *	file:
pending	compat/zlib/deflate.h	/^    ulg   pending;       \/* nb of bytes in the pending buffer *\/$/;"	m	struct:internal_state	typeref:typename:ulg
pending	win/tclWinNotify.c	/^    int pending;		\/* Alert message pending, this field is locked$/;"	m	struct:__anon2be3cfbd0108	typeref:typename:int	file:
pendingObjData	generic/tclObj.c	/^static PendingObjData pendingObjData;$/;"	v	typeref:typename:PendingObjData	file:
pendingObjData	generic/tclObj.c	/^static __thread PendingObjData pendingObjData;$/;"	v	typeref:typename:PendingObjData	file:
pendingObjDataKey	generic/tclObj.c	/^static Tcl_ThreadDataKey pendingObjDataKey;$/;"	v	typeref:typename:Tcl_ThreadDataKey	file:
pendingObjDataPtr	generic/tclInt.h	/^    void *pendingObjDataPtr;	\/* Pointer to the Cache and PendingObjData$/;"	m	struct:Interp	typeref:typename:void *
pendingOptionsEnum	generic/tclIOCmd.c	/^    enum pendingOptionsEnum {PENDING_INPUT, PENDING_OUTPUT} index;$/;"	g	function:ChanPendingObjCmd	file:
pendingTcpState	win/tclWinSock.c	/^    TcpState *pendingTcpState;	\/* This socket is opened but not jet in the$/;"	m	struct:__anon3aeaf8540308	typeref:typename:TcpState *	file:
pending_buf	compat/zlib/deflate.h	/^    Bytef *pending_buf;  \/* output still pending *\/$/;"	m	struct:internal_state	typeref:typename:Bytef *
pending_buf_size	compat/zlib/deflate.h	/^    ulg   pending_buf_size; \/* size of pending_buf *\/$/;"	m	struct:internal_state	typeref:typename:ulg
pending_out	compat/zlib/deflate.h	/^    Bytef *pending_out;  \/* next pending byte to output to the stream *\/$/;"	m	struct:internal_state	typeref:typename:Bytef *
percentify	tools/loadICU.tcl	/^proc percentify { string } {$/;"	p
perf::compare	tests-perf/comparePerf.tcl	/^namespace eval perf::compare {$/;"	n
perf::list	tests-perf/listPerf.tcl	/^namespace eval perf::list {$/;"	n
perfCounter	win/tclWinTime.c	/^    int perfCounter;		\/* 1 if performance counter usable for wide$/;"	m	struct:__anon3cd8f0330208	typeref:typename:int	file:
perfCounterAvailable	win/tclWinTime.c	/^    int perfCounterAvailable;	\/* Flag == 1 if the hardware has a performance$/;"	m	struct:__anon3cd8f0330108	typeref:typename:int	file:
perfCounterLastCall	win/tclWinTime.c	/^    LARGE_INTEGER perfCounterLastCall;$/;"	m	struct:__anon3cd8f0330108	typeref:typename:LARGE_INTEGER	file:
perfCounterSample	win/tclWinTime.c	/^    long long perfCounterSample[SAMPLES];$/;"	m	struct:__anon3cd8f0330108	typeref:typename:long long[]	file:
perm	generic/tcl.h	/^    int perm;			\/* Corresponds to file permissions. *\/$/;"	m	struct:Tcl_GlobTypeData	typeref:typename:int
permissions	win/tclWinConsole.c	/^    int permissions;		\/* OR'ed combination of TCL_READABLE,$/;"	m	struct:ConsoleChannelInfo	typeref:typename:int	file:
permissions	win/tclWinConsole.c	/^    int permissions;		\/* TCL_READABLE for input consoles, TCL_WRITABLE$/;"	m	struct:ConsoleHandleInfo	typeref:typename:int	file:
perror	compat/zlib/test/minigzip.c	/^#  define perror(/;"	d	file:
pfile_in_zip_read	compat/zlib/contrib/minizip/unzip.c	/^    file_in_zip64_read_info_s* pfile_in_zip_read; \/* structure about the current$/;"	m	struct:__anon3259ecee0208	typeref:typename:file_in_zip64_read_info_s *	file:
pickNextSS	generic/rege_dfa.c	/^pickNextSS($/;"	f	typeref:struct:sset *	file:
pid	compat/waitpid.c	/^    pid_t pid;			\/* Pid of process that exited. *\/$/;"	m	struct:WaitInfo	typeref:typename:pid_t	file:
pid	generic/tclPipe.c	/^    Tcl_Pid pid;		\/* Id of process that's been detached but$/;"	m	struct:Detached	typeref:typename:Tcl_Pid	file:
pid	generic/tclProcess.c	/^    Tcl_Pid pid;		\/* Process id. *\/$/;"	m	struct:ProcessInfo	typeref:typename:Tcl_Pid	file:
pidPtr	unix/tclUnixPipe.c	/^    Tcl_Pid *pidPtr;		\/* The process IDs themselves. Allocated by$/;"	m	struct:__anon004fe33e0108	typeref:typename:Tcl_Pid *	file:
pidPtr	win/tclWinPipe.c	/^    Tcl_Pid *pidPtr;		\/* Pids of attached processes. *\/$/;"	m	struct:PipeInfo	typeref:typename:Tcl_Pid *	file:
pid_t	compat/waitpid.c	/^#define pid_t /;"	d	file:
pid_t	win/tclWinPort.h	/^#   define pid_t /;"	d
pipe	win/nmakehlp.c	/^    HANDLE pipe;$/;"	m	struct:__anona412af430108	typeref:typename:HANDLE	file:
pipeChannelType	unix/tclUnixPipe.c	/^static const Tcl_ChannelType pipeChannelType = {$/;"	v	typeref:typename:const Tcl_ChannelType	file:
pipeChannelType	win/tclWinPipe.c	/^static const Tcl_ChannelType pipeChannelType = {$/;"	v	typeref:typename:const Tcl_ChannelType	file:
pipeinfo	win/nmakehlp.c	/^} pipeinfo;$/;"	t	typeref:struct:__anona412af430108	file:
pkg	generic/tclConfig.c	/^    Tcl_Obj *pkg;$/;"	m	struct:__anon46b45ffb0108	typeref:typename:Tcl_Obj *	file:
pkgIndex	generic/tclPkg.c	/^    char *pkgIndex;		\/* Full file name of pkgIndex file *\/$/;"	m	struct:PkgAvail	typeref:typename:char *	file:
pkgIndexDir	tools/mkVfs.tcl	/^proc pkgIndexDir {root fout d1} {$/;"	p
pkgOptionsEnum	generic/tclPkg.c	/^    enum pkgOptionsEnum {$/;"	g	function:TclNRPackageObjCmd	file:
pkgPath	unix/tclUnixInit.c	/^static const char pkgPath[] = TCL_PACKAGE_PATH;$/;"	v	typeref:typename:const char[]	file:
pkgPtr	generic/tclPkg.c	/^    Package *pkgPtr;$/;"	m	struct:Require	typeref:typename:Package *	file:
pkg_mkIndex	library/package.tcl	/^proc pkg_mkIndex {args} {$/;"	p
pkga.o	unix/dltest/Makefile.in	/^pkga.o: $(SRC_DIR)\/pkga.c$/;"	t
pkgb.o	unix/dltest/Makefile.in	/^pkgb.o: $(SRC_DIR)\/pkgb.c$/;"	t
pkgc.o	unix/dltest/Makefile.in	/^pkgc.o: $(SRC_DIR)\/pkgc.c$/;"	t
pkgconfig	compat/zlib/contrib/minizip/Makefile.am	/^pkgconfigdir = $(libdir)\/pkgconfig$/;"	d
pkgconfig_DATA	compat/zlib/contrib/minizip/Makefile.am	/^pkgconfig_DATA = minizip.pc$/;"	m
pkgconfigdir	compat/zlib/Makefile.in	/^pkgconfigdir = ${libdir}\/pkgconfig$/;"	m
pkgconfigdir	compat/zlib/contrib/minizip/Makefile.am	/^pkgconfigdir = $(libdir)\/pkgconfig$/;"	m
pkgd.o	unix/dltest/Makefile.in	/^pkgd.o: $(SRC_DIR)\/pkgd.c$/;"	t
pkge.o	unix/dltest/Makefile.in	/^pkge.o: $(SRC_DIR)\/pkge.c$/;"	t
pkgindex_path	library/install.tcl	/^proc ::practcl::pkgindex_path args {$/;"	p	namespace:::practcl
pkgooa.o	unix/dltest/Makefile.in	/^pkgooa.o: $(SRC_DIR)\/pkgooa.c$/;"	t
pkgt.o	unix/dltest/Makefile.in	/^pkgt.o: $(SRC_DIR)\/pkgt.c$/;"	t
pkgua.o	unix/dltest/Makefile.in	/^pkgua.o: $(SRC_DIR)\/pkgua.c$/;"	t
placebo	compat/zlib/Makefile.in	/^placebo $(SHAREDLIBV): $(PIC_OBJS) libz.a$/;"	t
platform	library/platform/shell.tcl	/^proc ::platform::shell::platform {shell} {$/;"	p	namespace:::platform::shell
plock	unix/tclUnixThrd.c	/^    PMutex plock;$/;"	m	struct:__anon099381c20108	typeref:typename:PMutex	file:
pmatch	generic/regexec.c	/^    regmatch_t *pmatch;$/;"	m	struct:vars	typeref:typename:regmatch_t *	file:
poDictionary	generic/tclZlib.c	/^    enum pushOptionsEnum {poDictionary, poHeader, poLevel, poLimit} option;$/;"	e	enum:ZlibPushSubcmd::pushOptionsEnum	file:
poHeader	generic/tclZlib.c	/^    enum pushOptionsEnum {poDictionary, poHeader, poLevel, poLimit} option;$/;"	e	enum:ZlibPushSubcmd::pushOptionsEnum	file:
poLevel	generic/tclZlib.c	/^    enum pushOptionsEnum {poDictionary, poHeader, poLevel, poLimit} option;$/;"	e	enum:ZlibPushSubcmd::pushOptionsEnum	file:
poLimit	generic/tclZlib.c	/^    enum pushOptionsEnum {poDictionary, poHeader, poLevel, poLimit} option;$/;"	e	enum:ZlibPushSubcmd::pushOptionsEnum	file:
po_dictionary	generic/tclZlib.c	/^	po_dictionary, po_finalize, po_flush, po_fullflush$/;"	e	enum:ZlibStreamPutCmd::putOptions	file:
po_finalize	generic/tclZlib.c	/^	po_dictionary, po_finalize, po_flush, po_fullflush$/;"	e	enum:ZlibStreamPutCmd::putOptions	file:
po_flush	generic/tclZlib.c	/^	po_dictionary, po_finalize, po_flush, po_fullflush$/;"	e	enum:ZlibStreamPutCmd::putOptions	file:
po_fullflush	generic/tclZlib.c	/^	po_dictionary, po_finalize, po_flush, po_fullflush$/;"	e	enum:ZlibStreamPutCmd::putOptions	file:
point	compat/zlib/examples/zran.h	/^typedef struct point {$/;"	s
point_t	compat/zlib/examples/zran.h	/^} point_t;$/;"	t	typeref:struct:point
pollState	unix/tclSelectNotfy.c	/^    unsigned int pollState;	\/* pollState is used to implement a polling$/;"	m	struct:ThreadSpecificData	typeref:typename:unsigned int	file:
polled	macosx/tclMacOSXNotify.c	/^    int polled;			\/* True if the notifier thread has polled for$/;"	m	struct:ThreadSpecificData	typeref:typename:int	file:
polling	macosx/tclMacOSXNotify.c	/^    int polling;		\/* True if this thread is polling for$/;"	m	struct:ThreadSpecificData	typeref:typename:int	file:
pos	compat/zlib/zlib.h	/^    z_off64_t pos;$/;"	m	struct:gzFile_s	typeref:typename:z_off64_t
pos_in_buffered_data	compat/zlib/contrib/minizip/zip.c	/^    uInt pos_in_buffered_data;  \/* last written byte in buffered_data *\/$/;"	m	struct:__anon7add25cb0108	typeref:typename:uInt	file:
pos_in_central_dir	compat/zlib/contrib/minizip/unzip.c	/^    ZPOS64_T pos_in_central_dir;   \/* pos of the current file in the central dir*\/$/;"	m	struct:__anon3259ecee0208	typeref:typename:ZPOS64_T	file:
pos_in_zip_directory	compat/zlib/contrib/minizip/unzip.h	/^    ZPOS64_T pos_in_zip_directory;   \/* offset in zip file directory *\/$/;"	m	struct:unz64_file_pos_s	typeref:typename:ZPOS64_T
pos_in_zip_directory	compat/zlib/contrib/minizip/unzip.h	/^    uLong pos_in_zip_directory;   \/* offset in zip file directory *\/$/;"	m	struct:unz_file_pos_s	typeref:typename:uLong
pos_in_zipfile	compat/zlib/contrib/minizip/unzip.c	/^    ZPOS64_T pos_in_zipfile;       \/* position in byte on the zipfile, for fseek*\/$/;"	m	struct:__anon3259ecee0108	typeref:typename:ZPOS64_T	file:
pos_local_extrafield	compat/zlib/contrib/minizip/unzip.c	/^    ZPOS64_T pos_local_extrafield;   \/* position in the local extra field in read*\/$/;"	m	struct:__anon3259ecee0108	typeref:typename:ZPOS64_T	file:
pos_local_header	compat/zlib/contrib/minizip/zip.c	/^    ZPOS64_T pos_local_header;     \/* offset of the local header of the file$/;"	m	struct:__anon7add25cb0108	typeref:typename:ZPOS64_T	file:
pos_zip64extrainfo	compat/zlib/contrib/minizip/zip.c	/^    ZPOS64_T pos_zip64extrainfo;$/;"	m	struct:__anon7add25cb0108	typeref:typename:ZPOS64_T	file:
posixEpoch	win/tclWinTime.c	/^    LARGE_INTEGER posixEpoch;	\/* Posix epoch expressed as 100-ns ticks since$/;"	m	struct:__anon3cd8f0330108	typeref:typename:LARGE_INTEGER	file:
post	generic/regguts.h	/^    size_t post;			\/* teardown state number *\/$/;"	m	struct:cnfa	typeref:typename:size_t
post	generic/regguts.h	/^    struct state *post;		\/* postfinal state *\/$/;"	m	struct:nfa	typeref:struct:state *
postCallProc	generic/tclOOInt.h	/^    TclOO_PostCallProc *postCallProc;$/;"	m	struct:ProcedureMethod	typeref:typename:TclOO_PostCallProc *
postError	library/http/http.tcl	/^proc http::postError {token} {$/;"	p	namespace:http
pow10_wide	generic/tclStrToD.c	/^static Tcl_WideUInt *pow10_wide;$/;"	v	typeref:typename:Tcl_WideUInt *	file:
pow10vals	generic/tclStrToD.c	/^static double pow10vals[MAXPOW+1];$/;"	v	typeref:typename:double[]	file:
pow5	generic/tclStrToD.c	/^static mp_int pow5[9];		\/* Table of powers of 5**(2**n), up to$/;"	v	typeref:typename:mp_int[9]	file:
pow5_13	generic/tclStrToD.c	/^static mp_int pow5_13[5];	\/* Table of powers: 5**13, 5**26, 5**52,$/;"	v	typeref:typename:mp_int[5]	file:
pow_10_2_n	generic/tclStrToD.c	/^static const double pow_10_2_n[] = {	\/* Inexact higher powers of ten. *\/$/;"	v	typeref:typename:const double[]	file:
power10	generic/tclArithSeries.c	/^power10($/;"	f	typeref:typename:double	file:
ppData	compat/zlib/contrib/delphi/ZLib.pas	/^  TAlloc = function (AppData: Pointer; Items, Size: Integer): Pointer; cdecl;$/;"	f	typeref:typename:Pointer
ppData	compat/zlib/contrib/delphi/ZLib.pas	/^  TFree = procedure (AppData, Block: Pointer); cdecl;$/;"	p
pptr	generic/regguts.h	/^    union tree *pptr[BYTTAB];$/;"	m	struct:ptrs	typeref:union:tree * []
pqdownheap	compat/zlib/trees.c	/^local void pqdownheap(deflate_state *s, ct_data *tree, int k) {$/;"	f	typeref:typename:local void
pqremove	compat/zlib/trees.c	/^#define pqremove(/;"	d	file:
pre	generic/regguts.h	/^    size_t pre;			\/* setup state number *\/$/;"	m	struct:cnfa	typeref:typename:size_t
pre	generic/regguts.h	/^    struct state *pre;		\/* preinitial state *\/$/;"	m	struct:nfa	typeref:struct:state *
preCallProc	generic/tclOOInt.h	/^    TclOO_PreCallProc *preCallProc;$/;"	m	struct:ProcedureMethod	typeref:typename:TclOO_PreCallProc *
prec	generic/tclCompExpr.c	/^static const unsigned char prec[] = {$/;"	v	typeref:typename:const unsigned char[]	file:
precedence	generic/tclCompExpr.c	/^    unsigned char precedence;	\/* Precedence of the operator *\/$/;"	m	struct:__anon882f36730108	typeref:typename:unsigned char	file:
precision	generic/tclArithSeries.c	/^    unsigned precision;		\/* Number of decimal places to render. *\/$/;"	m	struct:__anond76bba880308	typeref:typename:unsigned	file:
predecessor	generic/tclAssembly.c	/^    struct BasicBlock* predecessor;$/;"	m	struct:BasicBlock	typeref:struct:BasicBlock *	file:
prefix	compat/zlib/Makefile.in	/^prefix = \/usr\/local$/;"	m
prefix	compat/zlib/contrib/minizip/minizip.pc.in	/^prefix=@prefix@$/;"	v
prefix	compat/zlib/contrib/untgz/untgz.c	/^  char prefix[155];             \/* 345 *\/$/;"	m	struct:tar_header	typeref:typename:char[155]	file:
prefix	compat/zlib/examples/gun.c	/^unsigned short prefix[65536];           \/* index to LZW prefix string *\/$/;"	v	typeref:typename:unsigned short[65536]
prefix	compat/zlib/zlib.pc.in	/^prefix=@prefix@$/;"	v
prefix	generic/tclLoad.c	/^    char *prefix;		\/* Prefix for the library.$/;"	m	struct:LoadedLibrary	typeref:typename:char *	file:
prefix	libtommath/libtommath.pc.in	/^prefix=@CMAKE_INSTALL_PREFIX@$/;"	v
prefix	unix/Makefile.in	/^prefix			= @prefix@$/;"	m
prefix	unix/tcl.pc.in	/^prefix=@prefix@$/;"	v
prefix	win/Makefile.in	/^prefix			= @prefix@$/;"	m
prefixBytes	generic/tclEncoding.c	/^    char prefixBytes[256];	\/* If a byte in the input stream is a lead$/;"	m	struct:__anondb7a8e8c0208	typeref:typename:char[256]	file:
prefixBytes	generic/tclEncoding.c	/^    char prefixBytes[256];	\/* If a byte in the input stream is the first$/;"	m	struct:__anondb7a8e8c0408	typeref:typename:char[256]	file:
prefixObj	generic/tclOOInt.h	/^    Tcl_Obj *prefixObj;		\/* The list of values to use to replace the$/;"	m	struct:ForwardMethod	typeref:typename:Tcl_Obj *
prefixes	generic/regc_lex.c	/^prefixes($/;"	f	typeref:typename:void	file:
prev	compat/zlib/deflate.h	/^    Posf *prev;$/;"	m	struct:internal_state	typeref:typename:Posf *
prev	generic/regguts.h	/^    struct state *prev;		\/* back chain *\/$/;"	m	struct:state	typeref:struct:state *
prev	generic/tclCompExpr.c	/^	int prev;		\/* "Pointer" joining incomplete tree stack *\/$/;"	m	union:__anon882f36730108::__anon882f3673020a	typeref:typename:int	file:
prevPtr	generic/tclAlloc.c	/^    struct block *prevPtr;	\/* Linked list for big blocks, ensures 8-byte$/;"	m	struct:block	typeref:struct:block *	file:
prevPtr	generic/tclAssembly.c	/^    struct BasicBlock* prevPtr;	\/* Immediate predecessor of this block *\/$/;"	m	struct:BasicBlock	typeref:struct:BasicBlock *	file:
prevPtr	generic/tclAsync.c	/^    struct AsyncHandler *nextPtr, *prevPtr;$/;"	m	struct:AsyncHandler	typeref:struct:AsyncHandler *	file:
prevPtr	generic/tclDate.h	/^    ClockFmtScnStorage *prevPtr;$/;"	m	struct:ClockFmtScnStorage	typeref:typename:ClockFmtScnStorage *
prevPtr	generic/tclDictObj.c	/^    struct ChainEntry *prevPtr;$/;"	m	struct:ChainEntry	typeref:struct:ChainEntry *	file:
prevPtr	generic/tclIORChan.c	/^    ForwardingResult *prevPtr, *nextPtr;$/;"	m	struct:ForwardingResult	typeref:typename:ForwardingResult *	file:
prevPtr	generic/tclIORTrans.c	/^    ForwardingResult *prevPtr, *nextPtr;$/;"	m	struct:ForwardingResult	typeref:typename:ForwardingResult *	file:
prevPtr	generic/tclIOUtil.c	/^    struct FilesystemRecord *prevPtr;$/;"	m	struct:FilesystemRecord	typeref:struct:FilesystemRecord *	file:
prevPtr	generic/tclInt.h	/^    NamespacePathEntry *prevPtr, *nextPtr;$/;"	m	struct:NamespacePathEntry	typeref:typename:NamespacePathEntry *
prevPtr	generic/tclInt.h	/^    struct CFWordBC *prevPtr;	\/* Previous entry in stack for same Tcl_Obj. *\/$/;"	m	struct:CFWordBC	typeref:struct:CFWordBC *
prevPtr	generic/tclInt.h	/^    struct ExecStack *prevPtr;	\/* Previous stack in list. *\/$/;"	m	struct:ExecStack	typeref:struct:ExecStack *
prevPtr	generic/tclInterp.c	/^    LimitHandler *prevPtr;	\/* Previous item in linked list of$/;"	m	struct:LimitHandler	typeref:typename:LimitHandler *	file:
prevPtr	generic/tclInterp.c	/^    struct Target *prevPtr;	\/* Previous in list of target records, or NULL$/;"	m	struct:Target	typeref:struct:Target *	file:
prevPtr	generic/tclStrIdxTree.h	/^    TclStrIdx *prevPtr;$/;"	m	struct:TclStrIdx	typeref:typename:TclStrIdx *
prevPtr	generic/tclThreadTest.c	/^    struct ThreadEventResult *prevPtr;$/;"	m	struct:ThreadEventResult	typeref:struct:ThreadEventResult *	file:
prevPtr	generic/tclThreadTest.c	/^    struct ThreadSpecificData *prevPtr;$/;"	m	struct:ThreadSpecificData	typeref:struct:ThreadSpecificData *	file:
prevPtr	macosx/tclMacOSXNotify.c	/^    struct ThreadSpecificData *nextPtr, *prevPtr;$/;"	m	struct:ThreadSpecificData	typeref:struct:ThreadSpecificData *	file:
prevPtr	unix/tclSelectNotfy.c	/^    struct ThreadSpecificData *nextPtr, *prevPtr;$/;"	m	struct:ThreadSpecificData	typeref:struct:ThreadSpecificData *	file:
prevPtr	win/tclWinThrd.c	/^    struct ThreadSpecificData *prevPtr;$/;"	m	struct:ThreadSpecificData	typeref:struct:ThreadSpecificData *	file:
prevSetupTZData	generic/tclDate.h	/^    Tcl_Obj *prevSetupTZData;$/;"	m	struct:ClockClientData	typeref:typename:Tcl_Obj *
prevSetupTimeZone	generic/tclDate.h	/^    Tcl_Obj *prevSetupTimeZone;$/;"	m	struct:ClockClientData	typeref:typename:Tcl_Obj *
prevSetupTimeZoneUnnorm	generic/tclDate.h	/^    Tcl_Obj *prevSetupTimeZoneUnnorm;$/;"	m	struct:ClockClientData	typeref:typename:Tcl_Obj *
prevUsedLocale	generic/tclDate.h	/^    Tcl_Obj *prevUsedLocale;$/;"	m	struct:ClockClientData	typeref:typename:Tcl_Obj *
prevUsedLocaleDict	generic/tclDate.h	/^    Tcl_Obj *prevUsedLocaleDict;$/;"	m	struct:ClockClientData	typeref:typename:Tcl_Obj *
prevUsedLocaleUnnorm	generic/tclDate.h	/^    Tcl_Obj *prevUsedLocaleUnnorm;$/;"	m	struct:ClockClientData	typeref:typename:Tcl_Obj *
prev_ad	compat/zlib/contrib/gcc_gvmat64/gvmat64.S	/^#define prev_ad /;"	d	file:
prev_length	compat/zlib/contrib/gcc_gvmat64/gvmat64.S	/^#define prev_length /;"	d	file:
prev_length	compat/zlib/deflate.h	/^    uInt prev_length;$/;"	m	struct:internal_state	typeref:typename:uInt
prev_match	compat/zlib/deflate.h	/^    IPos prev_match;             \/* previous match *\/$/;"	m	struct:internal_state	typeref:typename:IPos
print	tests-perf/comparePerf.tcl	/^proc perf::compare::print {text} {$/;"	p	namespace:perf::compare
print	tests-perf/listPerf.tcl	/^    proc print {s} {$/;"	p	namespace:::perf::list
print	tools/ucm2tests.tcl	/^proc ucm::print {s} {$/;"	p	namespace:ucm
printProc	generic/tclCompile.h	/^    AuxDataPrintProc *printProc;\/* Callback function to invoke when printing$/;"	m	struct:AuxDataType	typeref:typename:AuxDataPrintProc *
print_separator	tests-perf/listPerf.tcl	/^    proc print_separator {command} {$/;"	p	namespace:::perf::list
print_usage	tests-perf/listPerf.tcl	/^    proc print_usage {} {$/;"	p	namespace:::perf::list
privateVariables	generic/tclOOInt.h	/^    PrivateVariableList privateVariables;$/;"	m	struct:Class	typeref:typename:PrivateVariableList
privateVariables	generic/tclOOInt.h	/^    PrivateVariableList privateVariables;$/;"	m	struct:Object	typeref:typename:PrivateVariableList
private_mp_prime_callback	libtommath/tommath.h	/^typedef int private_mp_prime_callback(unsigned char *dst, int len, void *dat);$/;"	t	typeref:typename:int ()(unsigned char * dst,int len,void * dat)
private_mp_word	libtommath/tommath.h	/^typedef uint16_t             private_mp_word;$/;"	t	typeref:typename:uint16_t
proc	generic/tcl.h	/^    Tcl_CmdProc *proc;		\/* Command's string-based function. *\/$/;"	m	struct:__anon937aefea0708	typeref:typename:Tcl_CmdProc *
proc	generic/tcl.h	/^    Tcl_EventProc *proc;	\/* Function to call to service this event. *\/$/;"	m	struct:Tcl_Event	typeref:typename:Tcl_EventProc *
proc	generic/tclAsync.c	/^    Tcl_AsyncProc *proc;	\/* Procedure to call when handler is$/;"	m	struct:AsyncHandler	typeref:typename:Tcl_AsyncProc *	file:
proc	generic/tclBasic.c	/^    Tcl_ObjCmdProc2 *proc;$/;"	m	struct:__anon6e1456070808	typeref:typename:Tcl_ObjCmdProc2 *	file:
proc	generic/tclEvent.c	/^    Tcl_ExitProc *proc;		\/* Function to call when process exits. *\/$/;"	m	struct:ExitHandler	typeref:typename:Tcl_ExitProc *	file:
proc	generic/tclEvent.c	/^    Tcl_ThreadCreateProc *proc;	\/* Main() function of the thread *\/$/;"	m	struct:__anon850510a70308	typeref:typename:Tcl_ThreadCreateProc *	file:
proc	generic/tclIO.c	/^    Tcl_ChannelProc *proc;	\/* Procedure to call in the type of$/;"	m	struct:ChannelHandler	typeref:typename:Tcl_ChannelProc *	file:
proc	generic/tclIO.c	/^    Tcl_CloseProc *proc;	\/* The procedure to call. *\/$/;"	m	struct:CloseCallback	typeref:typename:Tcl_CloseProc *	file:
proc	generic/tclInt.h	/^    GetFrameInfoValueProc *proc;\/* Function to generate a Tcl_Obj* from the$/;"	m	struct:__anon1eb6b3550508	typeref:typename:GetFrameInfoValueProc *
proc	generic/tclInt.h	/^    TclInitProcessGlobalValueProc *proc;$/;"	m	struct:ProcessGlobalValue	typeref:typename:TclInitProcessGlobalValueProc *
proc	generic/tclInt.h	/^    Tcl_CmdObjTraceProc2 *proc;	\/* Procedure to call to trace command. *\/$/;"	m	struct:Trace	typeref:typename:Tcl_CmdObjTraceProc2 *
proc	generic/tclInt.h	/^    Tcl_CmdProc *proc;		\/* String-based command procedure. *\/$/;"	m	struct:Command	typeref:typename:Tcl_CmdProc *
proc	generic/tclInt.h	/^    Tcl_InterpDeleteProc *proc;	\/* Proc to call when deleting. *\/$/;"	m	struct:AssocData	typeref:typename:Tcl_InterpDeleteProc *
proc	generic/tclInt.h	/^    Tcl_ObjCmdProc *proc;	\/* The implementation of the subcommand. *\/$/;"	m	struct:__anon1eb6b3550708	typeref:typename:Tcl_ObjCmdProc *
proc	generic/tclTestProcBodyObj.c	/^    Tcl_ObjCmdProc *proc;	\/* command proc *\/$/;"	m	struct:__anon88dcedc20108	typeref:typename:Tcl_ObjCmdProc *	file:
proc	generic/tclTimer.c	/^    Tcl_IdleProc *proc;		\/* Function to call. *\/$/;"	m	struct:IdleHandler	typeref:typename:Tcl_IdleProc *	file:
proc	generic/tclTimer.c	/^    Tcl_TimerProc *proc;	\/* Function to call. *\/$/;"	m	struct:TimerHandler	typeref:typename:Tcl_TimerProc *	file:
proc	generic/tclTrace.c	/^    Tcl_CmdObjTraceProc *proc;$/;"	m	struct:__anonfe0b53740508	typeref:typename:Tcl_CmdObjTraceProc *	file:
proc	generic/tclTrace.c	/^    Tcl_CmdTraceProc *proc;	\/* Trace function from Tcl_CreateTrace *\/$/;"	m	struct:__anonfe0b53740408	typeref:typename:Tcl_CmdTraceProc *	file:
proc	macosx/tclMacOSXNotify.c	/^    Tcl_FileProc *proc;		\/* Function to call, in the style of$/;"	m	struct:FileHandler	typeref:typename:Tcl_FileProc *	file:
proc	unix/tclEpollNotfy.c	/^    Tcl_FileProc *proc;		\/* Function to call, in the style of$/;"	m	struct:FileHandler	typeref:typename:Tcl_FileProc *	file:
proc	unix/tclKqueueNotfy.c	/^    Tcl_FileProc *proc;		\/* Function to call, in the style of$/;"	m	struct:FileHandler	typeref:typename:Tcl_FileProc *	file:
proc	unix/tclSelectNotfy.c	/^    Tcl_FileProc *proc;		\/* Function to call, in the style of$/;"	m	struct:FileHandler	typeref:typename:Tcl_FileProc *	file:
proc	unix/tclXtNotify.c	/^    Tcl_FileProc *proc;		\/* Procedure to call, in the style of$/;"	m	struct:FileHandler	typeref:typename:Tcl_FileProc *	file:
proc2args	tests-perf/listPerf.tcl	/^    proc proc2args {a b} {}$/;"	p	namespace:::perf::list
proc3args	tests-perf/listPerf.tcl	/^    proc proc3args {a b c} {}$/;"	p	namespace:::perf::list
procCommand	generic/tclTestProcBodyObj.c	/^static const char procCommand[] = "proc";$/;"	v	typeref:typename:const char[]	file:
procList	win/tclWinPipe.c	/^static ProcInfo *procList;$/;"	v	typeref:typename:ProcInfo *	file:
procMethodType	generic/tclOOMethod.c	/^static const Tcl_MethodType procMethodType = {$/;"	v	typeref:typename:const Tcl_MethodType	file:
procObjCmd	generic/tclBasic.c	/^procObjCmd($/;"	f	typeref:typename:int	file:
procPtr	generic/tclCompile.h	/^    Proc *procPtr;		\/* If a procedure is being compiled, a pointer$/;"	m	struct:CompileEnv	typeref:typename:Proc *
procPtr	generic/tclCompile.h	/^    Proc *procPtr;		\/* If the ByteCode was compiled from a$/;"	m	struct:ByteCode	typeref:typename:Proc *
procPtr	generic/tclInt.h	/^    Proc *procPtr;		\/* Points to the structure defining the called$/;"	m	struct:CallFrame	typeref:typename:Proc *
procPtr	generic/tclInt.h	/^    Tcl_NRPostProc *procPtr;$/;"	m	struct:NRE_callback	typeref:typename:Tcl_NRPostProc *
procPtr	generic/tclOOInt.h	/^    Proc *procPtr;		\/* Core of the implementation of the method;$/;"	m	struct:ProcedureMethod	typeref:typename:Proc *
process-text	tools/tcltk-man2html-utils.tcl	/^proc process-text {text} {$/;"	p
processFile	tools/makeTestCases.tcl	/^proc processFile {d} {$/;"	p
processTimeZone	tools/tclZIC.tcl	/^proc processTimeZone {zoneName zoneData} {$/;"	p
processors	unix/tclUnixInit.c	/^static const char *const processors[NUMPROCESSORS] = {$/;"	v	typeref:typename:const char * const[]	file:
processors	win/tclWinInit.c	/^static const char *const processors[NUMPROCESSORS] = {$/;"	v	typeref:typename:const char * const[]	file:
prog	compat/zlib/contrib/untgz/untgz.c	/^char *prog;$/;"	v	typeref:typename:char *
prog	compat/zlib/test/minigzip.c	/^static char *prog;$/;"	v	typeref:typename:char *	file:
prompt	generic/tclMain.c	/^    PromptType prompt;		\/* Next prompt to print *\/$/;"	m	struct:__anonfdf182ea0308	typeref:typename:PromptType	file:
propOptNames	generic/tclOOProp.c	/^static const char *const propOptNames[] = {$/;"	v	typeref:typename:const char * const[]	file:
properByteArrayType	generic/tclBinary.c	/^static const Tcl_ObjType properByteArrayType = {$/;"	v	typeref:typename:const Tcl_ObjType	file:
properties	generic/tclOOInt.h	/^    PropertyStorage properties;	\/* Information relating to the lists of$/;"	m	struct:Class	typeref:typename:PropertyStorage
properties	generic/tclOOInt.h	/^    PropertyStorage properties;	\/* Information relating to the lists of$/;"	m	struct:Object	typeref:typename:PropertyStorage
pseudocolor	generic/regc_color.c	/^pseudocolor($/;"	f	typeref:typename:color	file:
ptr	compat/zlib/test/infcover.c	/^    void *ptr;                  \/* pointer to allocated memory *\/$/;"	m	struct:mem_item	typeref:typename:void *	file:
ptr	generic/tcl.h	/^	void *ptr;		\/*     not used internally any more. *\/$/;"	m	struct:Tcl_ObjInternalRep::__anon937aefea0608	typeref:typename:void *
ptr	generic/tclDTrace.d	/^	    void *ptr;$/;"	m	struct:Tcl_Obj.__anon1.__anon3	file:
ptr	generic/tclPreserve.c	/^    void *ptr;			\/* Pointer to the memory block being tracked.$/;"	m	struct:__anone9498b710208	typeref:typename:void *	file:
ptr	generic/tclThreadStorage.c	/^    void *ptr;			\/* For alignment purposes only. Not actually$/;"	m	union:__anon4d1cb892030a	typeref:typename:void *	file:
ptr1	generic/tcl.h	/^	void *ptr1;$/;"	m	struct:Tcl_ObjInternalRep::__anon937aefea0508	typeref:typename:void *
ptr1	generic/tclDTrace.d	/^	    void *ptr1;$/;"	m	struct:Tcl_Obj.__anon1.__anon2	file:
ptr2	generic/tcl.h	/^	void *ptr2;$/;"	m	struct:Tcl_ObjInternalRep::__anon937aefea0508	typeref:typename:void *
ptr2	generic/tclDTrace.d	/^	    void *ptr2;$/;"	m	struct:Tcl_Obj.__anon1.__anon2	file:
ptr2	generic/tclPreserve.c	/^    void *ptr2;			\/* Backup copy of the above pointer used to$/;"	m	struct:__anone9498b710208	typeref:typename:void *	file:
ptrAndLongRep	generic/tcl.h	/^    } ptrAndLongRep;$/;"	m	union:Tcl_ObjInternalRep	typeref:struct:Tcl_ObjInternalRep::__anon937aefea0608
ptrAndLongRep	generic/tclDTrace.d	/^	} ptrAndLongRep;$/;"	m	union:Tcl_Obj.__anon1	file:
ptrToFree	generic/tclZipfs.c	/^    void *ptrToFree;		\/* Non-NULL if malloc'ed file *\/$/;"	m	struct:ZipFile	typeref:typename:void *	file:
ptr_table	compat/zlib/zutil.c	/^} ptr_table;$/;"	t	typeref:struct:ptr_table_s	file:
ptr_table_s	compat/zlib/zutil.c	/^typedef struct ptr_table_s {$/;"	s	file:
ptrs	generic/regguts.h	/^    struct ptrs ptrs;$/;"	m	union:tree	typeref:struct:ptrs
ptrs	generic/regguts.h	/^struct ptrs {$/;"	s
puff	compat/zlib/contrib/puff/Makefile	/^puff: puff.o pufftest.o$/;"	t
puff	compat/zlib/contrib/puff/puff.c	/^int puff(unsigned char *dest,           \/* pointer to destination pointer *\/$/;"	f	typeref:typename:int
puff.o	compat/zlib/contrib/puff/Makefile	/^puff.o: puff.h$/;"	t
pufftest.o	compat/zlib/contrib/puff/Makefile	/^pufftest.o: puff.h$/;"	t
puft	compat/zlib/contrib/puff/Makefile	/^puft: puff.c puff.h pufftest.o$/;"	t
pull	compat/zlib/test/infcover.c	/^local unsigned pull(void *desc, unsigned char **buf)$/;"	f	typeref:typename:local unsigned
pull	generic/regc_nfa.c	/^pull($/;"	f	typeref:typename:int	file:
pullback	generic/regc_nfa.c	/^pullback($/;"	f	typeref:typename:void	file:
punctCharTable	generic/regc_locale.c	/^static const chr punctCharTable[] = {$/;"	v	typeref:typename:const chr[]	file:
punctRangeTable	generic/regc_locale.c	/^static const crange punctRangeTable[] = {$/;"	v	typeref:typename:const crange[]	file:
punydecode	library/cookiejar/idna.tcl	/^    proc punydecode {string {case ""}} {$/;"	p	namespace:::::tcl::idna
punyencode	library/cookiejar/idna.tcl	/^    proc punyencode {string {case ""}} {$/;"	p	namespace:::::tcl::idna
purge	generic/tclProcess.c	/^    int purge;			\/* Purge eventualy. *\/$/;"	m	struct:ProcessInfo	typeref:typename:int	file:
push	compat/zlib/test/infcover.c	/^local int push(void *desc, unsigned char *buf, unsigned len)$/;"	f	typeref:typename:local int
push	generic/regc_nfa.c	/^push($/;"	f	typeref:typename:int	file:
pushOptionsEnum	generic/tclZlib.c	/^    enum pushOptionsEnum {poDictionary, poHeader, poLevel, poLimit} option;$/;"	g	function:ZlibPushSubcmd	file:
push_attr	compat/zlib/contrib/untgz/untgz.c	/^void push_attr(struct attr_item **list,char *fname,int mode,time_t time)$/;"	f	typeref:typename:void
pushfwd	generic/regc_nfa.c	/^pushfwd($/;"	f	typeref:typename:void	file:
put4	compat/zlib/examples/gzjoin.c	/^local void put4(unsigned long val, FILE *out)$/;"	f	typeref:typename:local void
putOptions	generic/tclZlib.c	/^    enum putOptions {$/;"	g	function:ZlibStreamPutCmd	file:
putShortMSB	compat/zlib/deflate.c	/^local void putShortMSB(deflate_state *s, uInt b) {$/;"	f	typeref:typename:local void
put_byte	compat/zlib/deflate.h	/^#define put_byte(/;"	d
put_short	compat/zlib/trees.c	/^#define put_short(/;"	d	file:
putenv	generic/tclEnv.c	/^#    define putenv(env) _wputenv(/;"	d	file:
pwd	unix/tclUnixCompat.c	/^    struct passwd pwd;$/;"	m	struct:__anon1c3f21740108	typeref:struct:passwd	file:
pwinerror	compat/zlib/test/minigzip.c	/^static void pwinerror (s)$/;"	f	file:
pwrot	generic/tclZipfs.c	/^static const char pwrot[17] =$/;"	v	typeref:typename:const char[17]	file:
q	generic/tclStrToD.c	/^    Tcl_WideUInt q;$/;"	m	union:Double	typeref:typename:Tcl_WideUInt	file:
queueMutex	generic/tclNotify.c	/^    Tcl_Mutex queueMutex;	\/* Mutex to protect access to the previous$/;"	m	struct:ThreadSpecificData	typeref:typename:Tcl_Mutex	file:
quit	compat/zlib/examples/fitblk.c	/^local void quit(char *why)$/;"	f	typeref:typename:local void
rainbow	generic/regc_color.c	/^rainbow($/;"	f	typeref:typename:void	file:
ranctx	libtommath/bn_s_mp_rand_jenkins.c	/^} ranctx;$/;"	t	typeref:struct:__anona23b32490108	file:
randSeed	generic/tclInt.h	/^    long randSeed;		\/* Seed used for rand() function. *\/$/;"	m	struct:Interp	typeref:typename:long
range	generic/regc_locale.c	/^range($/;"	f	typeref:struct:cvec *	file:
range	generic/tclInt.h	/^	int (*range)(tclObjTypeInterfaceArgsListRange);$/;"	m	struct:ObjInterface::list	typeref:typename:int (*)(tclObjTypeInterfaceArgsListRange)
range	generic/tclInt.h	/^	int (*range)(tclObjTypeInterfaceArgsStringRange);$/;"	m	struct:ObjInterface::string	typeref:typename:int (*)(tclObjTypeInterfaceArgsStringRange)
rangeCheckMagic	generic/tclAlloc.c	/^#define rangeCheckMagic	/;"	d	file:
rangeEnd	generic/tclInt.h	/^	int (*rangeEnd)(tclObjTypeInterfaceArgsListRangeEnd);$/;"	m	struct:ObjInterface::list	typeref:typename:int (*)(tclObjTypeInterfaceArgsListRangeEnd)
rangeEnd	generic/tclInt.h	/^	int (*rangeEnd)(tclObjTypeInterfaceArgsStringRangeEnd);$/;"	m	struct:ObjInterface::string	typeref:typename:int (*)(tclObjTypeInterfaceArgsStringRangeEnd)
ranges	generic/regguts.h	/^    chr *ranges;		\/* pointer to vector of chr pairs *\/$/;"	m	struct:cvec	typeref:typename:chr *
ranges	generic/tclScan.c	/^    Range *ranges;$/;"	m	struct:__anon0c1044aa0208	typeref:typename:Range *	file:
rangesVal	generic/tclDate.h	/^    Tcl_WideInt rangesVal[2];   \/* Bounds for cached time zone offset *\/$/;"	m	struct:ClockLastTZOffs	typeref:typename:Tcl_WideInt[2]
rangespace	generic/regguts.h	/^    size_t rangespace;		\/* number of chrs possible *\/$/;"	m	struct:cvec	typeref:typename:size_t
raw	compat/zlib/contrib/minizip/unzip.c	/^    int   raw;$/;"	m	struct:__anon3259ecee0108	typeref:typename:int	file:
raw	compat/zlib/contrib/minizip/zip.c	/^    int  raw;                   \/* 1 for directly writing raw data *\/$/;"	m	struct:__anon7add25cb0108	typeref:typename:int	file:
rawRead	generic/tclIO.c	/^    int rawRead;		\/* The number of bytes removed from bufPtr$/;"	m	struct:GetsState	typeref:typename:int	file:
rcPtr	generic/tclIORChan.c	/^    ReflectedChannel *rcPtr;	\/* Channel instance *\/$/;"	m	struct:__anon92d8dd290708	typeref:typename:ReflectedChannel *	file:
rcPtr	generic/tclIORChan.c	/^    ReflectedChannel *rcPtr;$/;"	m	struct:__anon92d8dd290908	typeref:typename:ReflectedChannel *	file:
rcmPtr	generic/tclIORChan.c	/^    ReflectedChannelMap *rcmPtr;$/;"	m	struct:__anon92d8dd290808	typeref:typename:ReflectedChannelMap *	file:
rdbuf	compat/zlib/contrib/iostream/zfstream.cpp	/^gzfilebuf *gzfilestream_common::rdbuf()$/;"	f	class:gzfilestream_common	typeref:typename:gzfilebuf *
rdbuf	compat/zlib/contrib/iostream3/zfstream.h	/^  rdbuf() const$/;"	f	class:gzifstream	typeref:typename:gzfilebuf *
rdbuf	compat/zlib/contrib/iostream3/zfstream.h	/^  rdbuf() const$/;"	f	class:gzofstream	typeref:typename:gzfilebuf *
rdf	tools/tclsh.svg	/^   inkscape:export-ydpi="8.4399996">$/;"	n	uri:http://www.w3.org/1999/02/22-rdf-syntax-ns#
re	generic/regcomp.c	/^    regex_t *re;$/;"	m	struct:vars	typeref:typename:regex_t *	file:
re	generic/regexec.c	/^    regex_t *re;$/;"	m	struct:vars	typeref:typename:regex_t *	file:
re	generic/tclRegexp.h	/^    regex_t re;			\/* Compiled re, includes number of$/;"	m	struct:TclRegexp	typeref:typename:regex_t
re_endp	generic/regex.h	/^    char *re_endp;		\/* backward compatibility kludge *\/$/;"	m	struct:__anonc87062e20108	typeref:typename:char *
re_fns	generic/regex.h	/^    void *re_fns;$/;"	m	struct:__anonc87062e20108	typeref:typename:void *
re_guts	generic/regex.h	/^    void *re_guts;$/;"	m	struct:__anonc87062e20108	typeref:typename:void *
re_info	generic/regex.h	/^    long re_info;		\/* information about RE *\/$/;"	m	struct:__anonc87062e20108	typeref:typename:long
re_magic	generic/regex.h	/^    int re_magic;		\/* magic number *\/$/;"	m	struct:__anonc87062e20108	typeref:typename:int
re_nsub	generic/regex.h	/^    size_t re_nsub;		\/* number of subexpressions *\/$/;"	m	struct:__anonc87062e20108	typeref:typename:size_t
read	compat/zlib/contrib/iostream2/zstream.h	/^        int read(void* buf, size_t len) {$/;"	f	class:izstream	typeref:typename:int
read	compat/zlib/contrib/iostream2/zstream.h	/^inline int read(izstream& zs, T* x, Items items) {$/;"	f	typeref:typename:int
read	compat/zlib/gzguts.h	/^#  define read _read$/;"	d
read	unix/tclXtNotify.c	/^    XtInputId read;		\/* Xt read callback handle. *\/$/;"	m	struct:FileHandler	typeref:typename:XtInputId	file:
read1	compat/zlib/examples/gzappend.c	/^#define read1(/;"	d	file:
read4	compat/zlib/examples/gzappend.c	/^unsigned long read4(file *in)$/;"	f	typeref:typename:unsigned long
readAheadLimit	generic/tclZlib.c	/^    unsigned int readAheadLimit;\/* The maximum number of bytes to read from$/;"	m	struct:__anon1d0b6d960308	typeref:typename:unsigned int	file:
readCount	unix/tclUnixTest.c	/^    int readCount;		\/* Number of times the file handler for this$/;"	m	struct:__anon095e08b00108	typeref:typename:int	file:
readDepends	tools/mkdepend.tcl	/^proc readDepends {chan} {$/;"	p
readExports	unix/tclLoadAix.c	/^readExports($/;"	f	typeref:typename:int	file:
readFile	library/readfile.tcl	/^proc readFile {filename {mode text}} {$/;"	p
readFile	unix/tclUnixTest.c	/^    TclFile readFile;		\/* File handle for reading from the pipe. NULL$/;"	m	struct:__anon095e08b00108	typeref:typename:TclFile	file:
readFile	win/tclWinPipe.c	/^    TclFile readFile;		\/* Output from pipe. *\/$/;"	m	struct:PipeInfo	typeref:typename:TclFile	file:
readFlags	generic/tclIO.c	/^    int readFlags;		\/* Original read channel flags. *\/$/;"	m	struct:CopyState	typeref:typename:int	file:
readFlags	win/tclWinPipe.c	/^    int readFlags;		\/* Flags that are shared with the reader$/;"	m	struct:PipeInfo	typeref:typename:int	file:
readInputFile	tools/regexpTestLib.tcl	/^proc readInputFile {} {$/;"	p
readIsDrained	generic/tclIORTrans.c	/^    int readIsDrained;		\/* Flag: Read buffers are flushed. *\/$/;"	m	struct:__anon21e740770208	typeref:typename:int	file:
readIsFlushed	generic/tclIOGT.c	/^    int readIsFlushed;		\/* Flag to note whether in.flushProc was$/;"	m	struct:TransformChannelData	typeref:typename:int	file:
readPtr	generic/tclIO.c	/^    struct Channel *readPtr;	\/* Pointer to input channel. *\/$/;"	m	struct:CopyState	typeref:struct:Channel *	file:
readTI	win/tclWinPipe.c	/^    TclPipeThreadInfo *readTI;	\/* structure owned by corresponding thread. *\/$/;"	m	struct:PipeInfo	typeref:typename:TclPipeThreadInfo *	file:
readThread	win/tclWinPipe.c	/^    HANDLE readThread;		\/* Handle to reader thread. *\/$/;"	m	struct:PipeInfo	typeref:typename:HANDLE	file:
readTimer	generic/tclIORChan.c	/^    Tcl_TimerToken readTimer;   \/* A token for the timer that is scheduled in$/;"	m	struct:__anon92d8dd290108	typeref:typename:Tcl_TimerToken	file:
read_buf	compat/zlib/deflate.c	/^local unsigned read_buf(z_streamp strm, Bytef *buf, unsigned size) {$/;"	f	typeref:typename:local unsigned
read_buffer	compat/zlib/contrib/minizip/unzip.c	/^    char  *read_buffer;         \/* internal buffer for compressed data *\/$/;"	m	struct:__anon3259ecee0108	typeref:typename:char *	file:
read_file_func	compat/zlib/contrib/minizip/ioapi.h	/^typedef uLong    (ZCALLBACK *read_file_func)      (voidpf opaque, voidpf stream, void* buf, uLon/;"	t	typeref:typename:uLong (ZCALLBACK *)(voidpf opaque,voidpf stream,void * buf,uLong size)
read_string	compat/zlib/contrib/iostream2/zstream.h	/^inline char* read_string(izstream& zs) {$/;"	f	typeref:typename:char *
readable	generic/tclOOInt.h	/^    PropertyList readable;	\/* The readable properties slot. *\/$/;"	m	struct:PropertyStorage	typeref:typename:PropertyList
readable	macosx/tclMacOSXNotify.c	/^    fd_set readable;$/;"	m	struct:__anon0dc3d9d70208	typeref:typename:fd_set	file:
readable	unix/tclSelectNotfy.c	/^    fd_set readable;$/;"	m	struct:__anon69aa703c0108	typeref:typename:fd_set	file:
readable	win/tclWinPipe.c	/^    HANDLE readable;		\/* Manual-reset event to signal when the$/;"	m	struct:PipeInfo	typeref:typename:HANDLE	file:
readable	win/tclWinSerial.c	/^    int readable;		\/* Flag that the channel is readable. *\/$/;"	m	struct:SerialInfo	typeref:typename:int	file:
readin	compat/zlib/examples/gzappend.c	/^local int readin(file *in)$/;"	f	typeref:typename:local int
readmore	compat/zlib/examples/gzappend.c	/^local int readmore(file *in)$/;"	f	typeref:typename:local int
ready	generic/tclAsync.c	/^    int ready;			\/* Non-zero means this handler should be$/;"	m	struct:AsyncHandler	typeref:typename:int	file:
readyEvent	win/tclWinSock.c	/^    HANDLE readyEvent;		\/* Event indicating that a socket event is$/;"	m	struct:__anon3aeaf8540308	typeref:typename:HANDLE	file:
readyEvent	win/tclWinTime.c	/^    HANDLE readyEvent;		\/* System event used to trigger the requesting$/;"	m	struct:__anon3cd8f0330108	typeref:typename:HANDLE	file:
readyEvents	unix/tclEpollNotfy.c	/^    struct epoll_event *readyEvents;$/;"	m	struct:ThreadSpecificData	typeref:struct:epoll_event *	file:
readyEvents	unix/tclKqueueNotfy.c	/^    struct kevent *readyEvents;	\/* Pointer to at most maxReadyEvents events$/;"	m	struct:ThreadSpecificData	typeref:struct:kevent *	file:
readyEvents	win/tclWinSock.c	/^    volatile int readyEvents;	\/* OR'ed combination of FD_READ, FD_WRITE,$/;"	m	struct:TcpState	typeref:typename:volatile int	file:
readyMask	macosx/tclMacOSXNotify.c	/^    int readyMask;		\/* Mask of events that have been seen since$/;"	m	struct:FileHandler	typeref:typename:int	file:
readyMask	unix/tclEpollNotfy.c	/^    int readyMask;		\/* Mask of events that have been seen since$/;"	m	struct:FileHandler	typeref:typename:int	file:
readyMask	unix/tclKqueueNotfy.c	/^    int readyMask;		\/* Mask of events that have been seen since$/;"	m	struct:FileHandler	typeref:typename:int	file:
readyMask	unix/tclSelectNotfy.c	/^    int readyMask;		\/* Mask of events that have been seen since$/;"	m	struct:FileHandler	typeref:typename:int	file:
readyMask	unix/tclXtNotify.c	/^    int readyMask;		\/* Events that have been seen since the last$/;"	m	struct:FileHandler	typeref:typename:int	file:
readyMasks	macosx/tclMacOSXNotify.c	/^    SelectMasks readyMasks;	\/* This array reflects the readable\/writable$/;"	m	struct:ThreadSpecificData	typeref:typename:SelectMasks	file:
readyMasks	unix/tclSelectNotfy.c	/^    SelectMasks readyMasks;	\/* This array reflects the readable\/writable$/;"	m	struct:ThreadSpecificData	typeref:typename:SelectMasks	file:
realBlockSize	generic/tclAlloc.c	/^#define realBlockSize	/;"	d	file:
realCmdPtr	generic/tclInt.h	/^    struct Command *realCmdPtr;	\/* "Real" command that this imported command$/;"	m	struct:ImportedCmdData	typeref:struct:Command *
reasonPhrase	library/http/http.tcl	/^proc http::reasonPhrase {code} {$/;"	p	namespace:http
rebuildSize	generic/tcl.h	/^    Tcl_Size rebuildSize;	\/* Enlarge table when numEntries gets to be$/;"	m	struct:Tcl_HashTable	typeref:typename:Tcl_Size
rebuildSize	generic/tclInt.h	/^    TCL_HASH_TYPE rebuildSize;	\/* Enlarge table when numEntries gets to be$/;"	m	struct:LiteralTable	typeref:typename:TCL_HASH_TYPE
receivePipe	macosx/tclMacOSXNotify.c	/^static int receivePipe = -1; \/* Output end of triggerPipe *\/$/;"	v	typeref:typename:int	file:
recompress	compat/zlib/examples/fitblk.c	/^local int recompress(z_streamp inf, z_streamp def)$/;"	f	typeref:typename:local int
refArray	generic/tclPreserve.c	/^static Reference *refArray = NULL;$/;"	v	typeref:typename:Reference *	file:
refCnt	unix/tclLoadAix.c	/^    int refCnt;			\/* the number of references *\/$/;"	m	struct:Module	typeref:typename:int	file:
refCount	generic/tcl.h	/^    Tcl_Size refCount;		\/* When 0 the object will be freed. *\/$/;"	m	struct:Tcl_Obj	typeref:typename:Tcl_Size
refCount	generic/tclCkalloc.c	/^    size_t refCount;		\/* Number of mem_headers referencing this$/;"	m	struct:__anon91be715e0108	typeref:typename:size_t	file:
refCount	generic/tclClockClassic.c	/^    size_t refCount;		\/* Number of live references. *\/$/;"	m	struct:__anondf8925f30108	typeref:typename:size_t	file:
refCount	generic/tclCompile.h	/^    Tcl_Size refCount;		\/* Reference count: set 1 when created plus 1$/;"	m	struct:ByteCode	typeref:typename:Tcl_Size
refCount	generic/tclDTrace.d	/^    Tcl_Size refCount;$/;"	m	struct:Tcl_Obj	file:
refCount	generic/tclDate.h	/^    size_t refCount;		\/* Number of live references. *\/$/;"	m	struct:ClockClientData	typeref:typename:size_t
refCount	generic/tclDictObj.c	/^    size_t refCount;		\/* Reference counter (see above) *\/$/;"	m	struct:Dict	typeref:typename:size_t	file:
refCount	generic/tclEncoding.c	/^    size_t refCount;		\/* Number of uses of this structure. *\/$/;"	m	struct:__anondb7a8e8c0108	typeref:typename:size_t	file:
refCount	generic/tclIO.c	/^    int refCount;		\/* Reference counter. *\/$/;"	m	struct:CopyState	typeref:typename:int	file:
refCount	generic/tclIO.c	/^    size_t refCount;		\/* Share this struct among many Tcl_Obj. *\/$/;"	m	struct:ResolvedChanName	typeref:typename:size_t	file:
refCount	generic/tclIO.h	/^    Tcl_Size refCount;		\/* Current uses count *\/$/;"	m	struct:ChannelBuffer	typeref:typename:Tcl_Size
refCount	generic/tclIO.h	/^    Tcl_Size refCount;		\/* How many interpreters hold references to$/;"	m	struct:ChannelState	typeref:typename:Tcl_Size
refCount	generic/tclIO.h	/^    Tcl_Size refCount;$/;"	m	struct:Channel	typeref:typename:Tcl_Size
refCount	generic/tclIOGT.c	/^    size_t refCount;$/;"	m	struct:TransformChannelData	typeref:typename:size_t	file:
refCount	generic/tclInt.h	/^    Tcl_Size refCount;		\/* 1 if in command hashtable plus 1 for each$/;"	m	struct:Command	typeref:typename:Tcl_Size
refCount	generic/tclInt.h	/^    Tcl_Size refCount;		\/* Count of references by namespaceName$/;"	m	struct:Namespace	typeref:typename:Tcl_Size
refCount	generic/tclInt.h	/^    Tcl_Size refCount;		\/* Counts number of active uses of this$/;"	m	struct:VarInHash	typeref:typename:Tcl_Size
refCount	generic/tclInt.h	/^    Tcl_Size refCount;		\/* If in an interpreter's global literal$/;"	m	struct:LiteralEntry	typeref:typename:Tcl_Size
refCount	generic/tclInt.h	/^    Tcl_Size refCount;		\/* Number of times the word is on the$/;"	m	struct:CFWord	typeref:typename:Tcl_Size
refCount	generic/tclInt.h	/^    Tcl_Size refCount;		\/* Reference count. *\/$/;"	m	struct:LocalCache	typeref:typename:Tcl_Size
refCount	generic/tclInt.h	/^    Tcl_Size refCount;		\/* Reference count: 1 if still present in$/;"	m	struct:Proc	typeref:typename:Tcl_Size
refCount	generic/tclInt.h	/^    Tcl_Size refCount;		\/* Used to ensure this structure is not$/;"	m	struct:CommandTrace	typeref:typename:Tcl_Size
refCount	generic/tclInt.h	/^    size_t refCount;		\/* Count of references to this span record. *\/$/;"	m	struct:ListSpan	typeref:typename:size_t
refCount	generic/tclInt.h	/^    size_t refCount;		\/* Number of references to this instance. *\/$/;"	m	struct:ListStore	typeref:typename:size_t
refCount	generic/tclNamesp.c	/^    size_t refCount;		\/* Reference count: 1 for each nsName object$/;"	m	struct:__anon357794090208	typeref:typename:size_t	file:
refCount	generic/tclOOInt.h	/^    Tcl_Size refCount;		\/* Number of strong references to this object.$/;"	m	struct:Object	typeref:typename:Tcl_Size
refCount	generic/tclOOInt.h	/^    Tcl_Size refCount;		\/* Reference count. *\/$/;"	m	struct:CallChain	typeref:typename:Tcl_Size
refCount	generic/tclOOInt.h	/^    Tcl_Size refCount;$/;"	m	struct:Method	typeref:typename:Tcl_Size
refCount	generic/tclOOInt.h	/^    Tcl_Size refCount;$/;"	m	struct:ProcedureMethod	typeref:typename:Tcl_Size
refCount	generic/tclObj.c	/^    size_t refCount;		\/* Reference count: 1 for each cmdName object$/;"	m	struct:ResolvedCmdName	typeref:typename:size_t	file:
refCount	generic/tclPreserve.c	/^    size_t refCount;		\/* Number of TclHandlePreserve() calls in$/;"	m	struct:__anone9498b710208	typeref:typename:size_t	file:
refCount	generic/tclPreserve.c	/^    size_t refCount;		\/* Number of Tcl_Preserve calls in effect for$/;"	m	struct:__anone9498b710108	typeref:typename:size_t	file:
refCount	generic/tclRegexp.h	/^    Tcl_Size refCount;		\/* Count of number of references to this$/;"	m	struct:TclRegexp	typeref:typename:Tcl_Size
refCount	generic/tclTestObjInterface.c	/^    int refCount;$/;"	m	struct:indexHex	typeref:typename:int	file:
refCount	generic/tclTestObjInterfaceInteger.c	/^    int refCount;$/;"	m	struct:ListInteger	typeref:typename:int	file:
refCount	generic/tclTrace.c	/^    size_t refCount;		\/* Used to ensure this structure is not$/;"	m	struct:__anonfe0b53740308	typeref:typename:size_t	file:
refNsCmdEpoch	generic/tclObj.c	/^    Tcl_Size refNsCmdEpoch;	\/* Value of the referencing namespace's$/;"	m	struct:ResolvedCmdName	typeref:typename:Tcl_Size	file:
refNsId	generic/tclObj.c	/^    size_t refNsId;		\/* refNsPtr's unique namespace id. Used to$/;"	m	struct:ResolvedCmdName	typeref:typename:size_t	file:
refNsPtr	generic/tclNamesp.c	/^    Namespace *refNsPtr;	\/* Points to the namespace context in which$/;"	m	struct:__anon357794090208	typeref:typename:Namespace *	file:
refNsPtr	generic/tclObj.c	/^    Namespace *refNsPtr;	\/* Points to the namespace containing the$/;"	m	struct:ResolvedCmdName	typeref:typename:Namespace *	file:
reference-error	tools/tcltk-man2html-utils.tcl	/^proc reference-error {msg text} {$/;"	p
reflectedChannelType	generic/tclIORChan.c	/^static const Tcl_ChannelType reflectedChannelType = {$/;"	v	typeref:typename:const Tcl_ChannelType	file:
reflectedTransformType	generic/tclIORTrans.c	/^static const Tcl_ChannelType reflectedTransformType = {$/;"	v	typeref:typename:const Tcl_ChannelType	file:
regcomp	generic/regfronts.c	/^regcomp($/;"	f	typeref:typename:int
regcomp.o	unix/Makefile.in	/^regcomp.o: $(REGHDRS) $(GENERIC_DIR)\/regcomp.c $(GENERIC_DIR)\/regc_lex.c \\$/;"	t
regerror	generic/regcustom.h	/^#define	regerror	/;"	d
regerror	generic/regerror.c	/^regerror($/;"	f	typeref:typename:size_t
regerror	generic/regex.h	/^#define	regerror	/;"	d
regerror.o	unix/Makefile.in	/^regerror.o: $(REGHDRS) $(GENERIC_DIR)\/regerrs.h $(GENERIC_DIR)\/regerror.c$/;"	t
regex_t	generic/regex.h	/^} regex_t;$/;"	t	typeref:struct:__anonc87062e20108
regexec	generic/regfronts.c	/^regexec($/;"	f	typeref:typename:int
regexec.o	unix/Makefile.in	/^regexec.o: $(REGHDRS) $(GENERIC_DIR)\/regexec.c $(GENERIC_DIR)\/rege_dfa.c$/;"	t
regexpoptions	generic/tclCmdMZ.c	/^    enum regexpoptions {$/;"	g	function:Tcl_RegexpObjCmd	file:
regexps	generic/tclRegexp.c	/^    struct TclRegexp *regexps[NUM_REGEXPS];$/;"	m	struct:__anon0c6ba4b00108	typeref:struct:TclRegexp * []	file:
regfree	generic/regcustom.h	/^#define	regfree	/;"	d
regfree	generic/regex.h	/^#define	regfree	/;"	d
regfree	generic/regfree.c	/^regfree($/;"	f	typeref:typename:void
regfree.o	unix/Makefile.in	/^regfree.o: $(REGHDRS) $(GENERIC_DIR)\/regfree.c$/;"	t
register	library/http/http.tcl	/^proc http::register {proto port command {socketCmdVarName {}} {useSockThread 0} {endToEndProxy 0/;"	p	namespace:http
registerError	library/http/http.tcl	/^proc http::registerError {sock args} {$/;"	p	namespace:http
regmatch_t	generic/regex.h	/^} regmatch_t;$/;"	t	typeref:struct:__anonc87062e20208
regsubobjoptions	generic/tclCmdMZ.c	/^    enum regsubobjoptions {$/;"	g	function:Tcl_RegsubObjCmd	file:
relspec	generic/tclGetDate.y	/^relspec : relunits tAGO {$/;"	l
relspec	generic/tclGetDateClassic.y	/^relspec : relunits tAGO {$/;"	l
relunits	generic/tclGetDate.y	/^relunits : sign SP INTNUM unit {$/;"	l
relunits	generic/tclGetDateClassic.y	/^relunits : sign tUNUMBER unit {$/;"	l
rem_105	libtommath/bn_mp_is_square.c	/^static const char rem_105[105] = {$/;"	v	typeref:typename:const char[105]	file:
rem_128	libtommath/bn_mp_is_square.c	/^static const char rem_128[128] = {$/;"	v	typeref:typename:const char[128]	file:
remove	library/tm.tcl	/^proc ::tcl::tm::remove {args} {$/;"	p	namespace:::tcl::tm
removeAts	tools/regexpTestLib.tcl	/^proc removeAts {ls} {$/;"	p
removeDirectoryProc	generic/tcl.h	/^    Tcl_FSRemoveDirectoryProc *removeDirectoryProc;$/;"	m	struct:Tcl_Filesystem	typeref:typename:Tcl_FSRemoveDirectoryProc *
renameFileProc	generic/tcl.h	/^    Tcl_FSRenameFileProc *renameFileProc;$/;"	m	struct:Tcl_Filesystem	typeref:typename:Tcl_FSRenameFileProc *
repeat	generic/regcomp.c	/^repeat($/;"	f	typeref:typename:void	file:
replace	generic/tclInt.h	/^	int (*replace)(tclObjTypeInterfaceArgsListReplace);$/;"	m	struct:ObjInterface::list	typeref:typename:int (*)(tclObjTypeInterfaceArgsListReplace)
replaceList	generic/tclInt.h	/^	int (*replaceList)(tclObjTypeInterfaceArgsListReplaceList);$/;"	m	struct:ObjInterface::list	typeref:typename:int (*)(tclObjTypeInterfaceArgsListReplaceList)
replaceProc	generic/tclDTrace.d	/^    void *replaceProc;$/;"	m	struct:Tcl_ObjType	file:
report1	tests/auto0/auto1/file1.tcl	/^proc report1 {args} {$/;"	p
report2	tests/auto0/auto2/file2.tcl	/^proc report2 {args} {$/;"	p
reqSize	generic/tclThreadAlloc.c	/^	size_t reqSize;			\/* Requested allocation size. *\/$/;"	m	struct:Block::__anone59fb5e80108	typeref:typename:size_t	file:
requestHeaderValue	library/http/http.tcl	/^proc http::requestHeaderValue {token header} {$/;"	p	namespace:http
requestHeaders	library/http/http.tcl	/^proc http::requestHeaders {token args} {$/;"	p	namespace:http
requestLine	library/http/http.tcl	/^proc http::requestLine {token} {$/;"	p	namespace:http
rerr	generic/regerror.c	/^static const struct rerr {$/;"	s	file:
rerrs	generic/regerror.c	/^} rerrs[] = {$/;"	v	typeref:typename:const struct rerr[]
resEnd	generic/tclDate.h	/^    char *resEnd;$/;"	m	struct:DateFormat	typeref:typename:char *
resMem	generic/tclDate.h	/^    char *resMem;$/;"	m	struct:DateFormat	typeref:typename:char *
reserved	compat/zlib/contrib/dotzlib/DotZLib/DotZLib.cs	/^        uint reserved;$/;"	f	struct:DotZLib.ZStream
reserved	compat/zlib/zlib.h	/^    uLong   reserved;   \/* reserved for future use *\/$/;"	m	struct:z_stream_s	typeref:typename:uLong
reserved	macosx/tclMacOSXFCmd.c	/^    u_int16_t reserved;$/;"	m	struct:finderinfo	typeref:typename:u_int16_t	file:
reserved0	generic/tclIntDecls.h	/^    void (*reserved0)(void);$/;"	m	struct:TclIntStubs	typeref:typename:void (*)(void)
reserved0	generic/tclIntPlatDecls.h	/^    void (*reserved0)(void);$/;"	m	struct:TclIntPlatStubs	typeref:typename:void (*)(void)
reserved0	generic/tclPlatDecls.h	/^    void (*reserved0)(void);$/;"	m	struct:TclPlatStubs	typeref:typename:void (*)(void)
reserved1	generic/tclIntDecls.h	/^    void (*reserved1)(void);$/;"	m	struct:TclIntStubs	typeref:typename:void (*)(void)
reserved10	generic/tclIntPlatDecls.h	/^    void (*reserved10)(void);$/;"	m	struct:TclIntPlatStubs	typeref:typename:void (*)(void)
reserved100	generic/tclIntDecls.h	/^    void (*reserved100)(void);$/;"	m	struct:TclIntStubs	typeref:typename:void (*)(void)
reserved101	generic/tclIntDecls.h	/^    void (*reserved101)(void);$/;"	m	struct:TclIntStubs	typeref:typename:void (*)(void)
reserved104	generic/tclIntDecls.h	/^    void (*reserved104)(void);$/;"	m	struct:TclIntStubs	typeref:typename:void (*)(void)
reserved105	generic/tclIntDecls.h	/^    void (*reserved105)(void);$/;"	m	struct:TclIntStubs	typeref:typename:void (*)(void)
reserved106	generic/tclIntDecls.h	/^    void (*reserved106)(void);$/;"	m	struct:TclIntStubs	typeref:typename:void (*)(void)
reserved107	generic/tclIntDecls.h	/^    void (*reserved107)(void);$/;"	m	struct:TclIntStubs	typeref:typename:void (*)(void)
reserved112	generic/tclIntDecls.h	/^    void (*reserved112)(void);$/;"	m	struct:TclIntStubs	typeref:typename:void (*)(void)
reserved113	generic/tclIntDecls.h	/^    void (*reserved113)(void);$/;"	m	struct:TclIntStubs	typeref:typename:void (*)(void)
reserved114	generic/tclIntDecls.h	/^    void (*reserved114)(void);$/;"	m	struct:TclIntStubs	typeref:typename:void (*)(void)
reserved115	generic/tclIntDecls.h	/^    void (*reserved115)(void);$/;"	m	struct:TclIntStubs	typeref:typename:void (*)(void)
reserved116	generic/tclIntDecls.h	/^    void (*reserved116)(void);$/;"	m	struct:TclIntStubs	typeref:typename:void (*)(void)
reserved117	generic/tclIntDecls.h	/^    void (*reserved117)(void);$/;"	m	struct:TclIntStubs	typeref:typename:void (*)(void)
reserved12	generic/tclIntPlatDecls.h	/^    void (*reserved12)(void);$/;"	m	struct:TclIntPlatStubs	typeref:typename:void (*)(void)
reserved121	generic/tclIntDecls.h	/^    void (*reserved121)(void);$/;"	m	struct:TclIntStubs	typeref:typename:void (*)(void)
reserved122	generic/tclIntDecls.h	/^    void (*reserved122)(void);$/;"	m	struct:TclIntStubs	typeref:typename:void (*)(void)
reserved123	generic/tclIntDecls.h	/^    void (*reserved123)(void);$/;"	m	struct:TclIntStubs	typeref:typename:void (*)(void)
reserved124	generic/tclIntDecls.h	/^    void (*reserved124)(void);$/;"	m	struct:TclIntStubs	typeref:typename:void (*)(void)
reserved125	generic/tclIntDecls.h	/^    void (*reserved125)(void);$/;"	m	struct:TclIntStubs	typeref:typename:void (*)(void)
reserved127	generic/tclIntDecls.h	/^    void (*reserved127)(void);$/;"	m	struct:TclIntStubs	typeref:typename:void (*)(void)
reserved129	generic/tclDecls.h	/^    void (*reserved129)(void);$/;"	m	struct:TclStubs	typeref:typename:void (*)(void)
reserved13	generic/tclIntDecls.h	/^    void (*reserved13)(void);$/;"	m	struct:TclIntStubs	typeref:typename:void (*)(void)
reserved13	generic/tclIntPlatDecls.h	/^    void (*reserved13)(void);$/;"	m	struct:TclIntPlatStubs	typeref:typename:void (*)(void)
reserved131	generic/tclDecls.h	/^    void (*reserved131)(void);$/;"	m	struct:TclStubs	typeref:typename:void (*)(void)
reserved132	generic/tclIntDecls.h	/^    void (*reserved132)(void);$/;"	m	struct:TclIntStubs	typeref:typename:void (*)(void)
reserved133	generic/tclIntDecls.h	/^    void (*reserved133)(void);$/;"	m	struct:TclIntStubs	typeref:typename:void (*)(void)
reserved134	generic/tclIntDecls.h	/^    void (*reserved134)(void);$/;"	m	struct:TclIntStubs	typeref:typename:void (*)(void)
reserved135	generic/tclIntDecls.h	/^    void (*reserved135)(void);$/;"	m	struct:TclIntStubs	typeref:typename:void (*)(void)
reserved136	generic/tclIntDecls.h	/^    void (*reserved136)(void);$/;"	m	struct:TclIntStubs	typeref:typename:void (*)(void)
reserved137	generic/tclIntDecls.h	/^    void (*reserved137)(void);$/;"	m	struct:TclIntStubs	typeref:typename:void (*)(void)
reserved139	generic/tclIntDecls.h	/^    void (*reserved139)(void);$/;"	m	struct:TclIntStubs	typeref:typename:void (*)(void)
reserved14	generic/tclIntPlatDecls.h	/^    void (*reserved14)(void);$/;"	m	struct:TclIntPlatStubs	typeref:typename:void (*)(void)
reserved140	generic/tclIntDecls.h	/^    void (*reserved140)(void);$/;"	m	struct:TclIntStubs	typeref:typename:void (*)(void)
reserved144	generic/tclDecls.h	/^    void (*reserved144)(void);$/;"	m	struct:TclStubs	typeref:typename:void (*)(void)
reserved147	generic/tclDecls.h	/^    void (*reserved147)(void);$/;"	m	struct:TclStubs	typeref:typename:void (*)(void)
reserved148	generic/tclDecls.h	/^    void (*reserved148)(void);$/;"	m	struct:TclStubs	typeref:typename:void (*)(void)
reserved15	generic/tclIntDecls.h	/^    void (*reserved15)(void);$/;"	m	struct:TclIntStubs	typeref:typename:void (*)(void)
reserved152	generic/tclIntDecls.h	/^    void (*reserved152)(void);$/;"	m	struct:TclIntStubs	typeref:typename:void (*)(void)
reserved153	generic/tclIntDecls.h	/^    void (*reserved153)(void);$/;"	m	struct:TclIntStubs	typeref:typename:void (*)(void)
reserved154	generic/tclIntDecls.h	/^    void (*reserved154)(void);$/;"	m	struct:TclIntStubs	typeref:typename:void (*)(void)
reserved155	generic/tclIntDecls.h	/^    void (*reserved155)(void);$/;"	m	struct:TclIntStubs	typeref:typename:void (*)(void)
reserved158	generic/tclIntDecls.h	/^    void (*reserved158)(void);$/;"	m	struct:TclIntStubs	typeref:typename:void (*)(void)
reserved159	generic/tclIntDecls.h	/^    void (*reserved159)(void);$/;"	m	struct:TclIntStubs	typeref:typename:void (*)(void)
reserved160	generic/tclIntDecls.h	/^    void (*reserved160)(void);$/;"	m	struct:TclIntStubs	typeref:typename:void (*)(void)
reserved167	generic/tclIntDecls.h	/^    void (*reserved167)(void);$/;"	m	struct:TclIntStubs	typeref:typename:void (*)(void)
reserved168	generic/tclIntDecls.h	/^    void (*reserved168)(void);$/;"	m	struct:TclIntStubs	typeref:typename:void (*)(void)
reserved17	generic/tclIntDecls.h	/^    void (*reserved17)(void);$/;"	m	struct:TclIntStubs	typeref:typename:void (*)(void)
reserved17	generic/tclTomMathDecls.h	/^    void (*reserved17)(void);$/;"	m	struct:TclTomMathStubs	typeref:typename:void (*)(void)
reserved174	generic/tclDecls.h	/^    void (*reserved174)(void);$/;"	m	struct:TclStubs	typeref:typename:void (*)(void)
reserved174	generic/tclIntDecls.h	/^    void (*reserved174)(void);$/;"	m	struct:TclIntStubs	typeref:typename:void (*)(void)
reserved175	generic/tclDecls.h	/^    void (*reserved175)(void);$/;"	m	struct:TclStubs	typeref:typename:void (*)(void)
reserved177	generic/tclDecls.h	/^    void (*reserved177)(void);$/;"	m	struct:TclStubs	typeref:typename:void (*)(void)
reserved178	generic/tclDecls.h	/^    void (*reserved178)(void);$/;"	m	struct:TclStubs	typeref:typename:void (*)(void)
reserved178	generic/tclIntDecls.h	/^    void (*reserved178)(void);$/;"	m	struct:TclIntStubs	typeref:typename:void (*)(void)
reserved179	generic/tclIntDecls.h	/^    void (*reserved179)(void);$/;"	m	struct:TclIntStubs	typeref:typename:void (*)(void)
reserved18	generic/tclIntDecls.h	/^    void (*reserved18)(void);$/;"	m	struct:TclIntStubs	typeref:typename:void (*)(void)
reserved18	generic/tclIntPlatDecls.h	/^    void (*reserved18)(void);$/;"	m	struct:TclIntPlatStubs	typeref:typename:void (*)(void)
reserved180	generic/tclIntDecls.h	/^    void (*reserved180)(void);$/;"	m	struct:TclIntStubs	typeref:typename:void (*)(void)
reserved181	generic/tclIntDecls.h	/^    void (*reserved181)(void);$/;"	m	struct:TclIntStubs	typeref:typename:void (*)(void)
reserved182	generic/tclIntDecls.h	/^    void (*reserved182)(void);$/;"	m	struct:TclIntStubs	typeref:typename:void (*)(void)
reserved183	generic/tclIntDecls.h	/^    void (*reserved183)(void);$/;"	m	struct:TclIntStubs	typeref:typename:void (*)(void)
reserved184	generic/tclIntDecls.h	/^    void (*reserved184)(void);$/;"	m	struct:TclIntStubs	typeref:typename:void (*)(void)
reserved185	generic/tclIntDecls.h	/^    void (*reserved185)(void);$/;"	m	struct:TclIntStubs	typeref:typename:void (*)(void)
reserved186	generic/tclIntDecls.h	/^    void (*reserved186)(void);$/;"	m	struct:TclIntStubs	typeref:typename:void (*)(void)
reserved187	generic/tclIntDecls.h	/^    void (*reserved187)(void);$/;"	m	struct:TclIntStubs	typeref:typename:void (*)(void)
reserved188	generic/tclDecls.h	/^    void (*reserved188)(void);$/;"	m	struct:TclStubs	typeref:typename:void (*)(void)
reserved188	generic/tclIntDecls.h	/^    void (*reserved188)(void);$/;"	m	struct:TclIntStubs	typeref:typename:void (*)(void)
reserved189	generic/tclIntDecls.h	/^    void (*reserved189)(void);$/;"	m	struct:TclIntStubs	typeref:typename:void (*)(void)
reserved19	generic/tclIntDecls.h	/^    void (*reserved19)(void);$/;"	m	struct:TclIntStubs	typeref:typename:void (*)(void)
reserved19	generic/tclIntPlatDecls.h	/^    void (*reserved19)(void);$/;"	m	struct:TclIntPlatStubs	typeref:typename:void (*)(void)
reserved190	generic/tclDecls.h	/^    void (*reserved190)(void);$/;"	m	struct:TclStubs	typeref:typename:void (*)(void)
reserved190	generic/tclIntDecls.h	/^    void (*reserved190)(void);$/;"	m	struct:TclIntStubs	typeref:typename:void (*)(void)
reserved191	generic/tclIntDecls.h	/^    void (*reserved191)(void);$/;"	m	struct:TclIntStubs	typeref:typename:void (*)(void)
reserved192	generic/tclIntDecls.h	/^    void (*reserved192)(void);$/;"	m	struct:TclIntStubs	typeref:typename:void (*)(void)
reserved193	generic/tclIntDecls.h	/^    void (*reserved193)(void);$/;"	m	struct:TclIntStubs	typeref:typename:void (*)(void)
reserved194	generic/tclIntDecls.h	/^    void (*reserved194)(void);$/;"	m	struct:TclIntStubs	typeref:typename:void (*)(void)
reserved195	generic/tclIntDecls.h	/^    void (*reserved195)(void);$/;"	m	struct:TclIntStubs	typeref:typename:void (*)(void)
reserved196	generic/tclIntDecls.h	/^    void (*reserved196)(void);$/;"	m	struct:TclIntStubs	typeref:typename:void (*)(void)
reserved197	generic/tclIntDecls.h	/^    void (*reserved197)(void);$/;"	m	struct:TclIntStubs	typeref:typename:void (*)(void)
reserved199	generic/tclIntDecls.h	/^    void (*reserved199)(void);$/;"	m	struct:TclIntStubs	typeref:typename:void (*)(void)
reserved2	generic/tclIntDecls.h	/^    void (*reserved2)(void);$/;"	m	struct:TclIntStubs	typeref:typename:void (*)(void)
reserved20	generic/tclIntDecls.h	/^    void (*reserved20)(void);$/;"	m	struct:TclIntStubs	typeref:typename:void (*)(void)
reserved209	generic/tclIntDecls.h	/^    void (*reserved209)(void);$/;"	m	struct:TclIntStubs	typeref:typename:void (*)(void)
reserved21	generic/tclIntDecls.h	/^    void (*reserved21)(void);$/;"	m	struct:TclIntStubs	typeref:typename:void (*)(void)
reserved21	generic/tclIntPlatDecls.h	/^    void (*reserved21)(void);$/;"	m	struct:TclIntPlatStubs	typeref:typename:void (*)(void)
reserved210	generic/tclIntDecls.h	/^    void (*reserved210)(void);$/;"	m	struct:TclIntStubs	typeref:typename:void (*)(void)
reserved211	generic/tclIntDecls.h	/^    void (*reserved211)(void);$/;"	m	struct:TclIntStubs	typeref:typename:void (*)(void)
reserved22	generic/tclDecls.h	/^    void (*reserved22)(void);$/;"	m	struct:TclStubs	typeref:typename:void (*)(void)
reserved22	generic/tclIntPlatDecls.h	/^    void (*reserved22)(void);$/;"	m	struct:TclIntPlatStubs	typeref:typename:void (*)(void)
reserved220	generic/tclDecls.h	/^    void (*reserved220)(void);$/;"	m	struct:TclStubs	typeref:typename:void (*)(void)
reserved220	generic/tclIntDecls.h	/^    void (*reserved220)(void);$/;"	m	struct:TclIntStubs	typeref:typename:void (*)(void)
reserved228	generic/tclIntDecls.h	/^    void (*reserved228)(void);$/;"	m	struct:TclIntStubs	typeref:typename:void (*)(void)
reserved23	generic/tclIntPlatDecls.h	/^    void (*reserved23)(void);$/;"	m	struct:TclIntPlatStubs	typeref:typename:void (*)(void)
reserved230	generic/tclDecls.h	/^    void (*reserved230)(void);$/;"	m	struct:TclStubs	typeref:typename:void (*)(void)
reserved232	generic/tclDecls.h	/^    void (*reserved232)(void);$/;"	m	struct:TclStubs	typeref:typename:void (*)(void)
reserved236	generic/tclIntDecls.h	/^    void (*reserved236)(void);$/;"	m	struct:TclIntStubs	typeref:typename:void (*)(void)
reserved237	generic/tclDecls.h	/^    void (*reserved237)(void);$/;"	m	struct:TclStubs	typeref:typename:void (*)(void)
reserved244	generic/tclDecls.h	/^    void (*reserved244)(void);$/;"	m	struct:TclStubs	typeref:typename:void (*)(void)
reserved245	generic/tclDecls.h	/^    void (*reserved245)(void);$/;"	m	struct:TclStubs	typeref:typename:void (*)(void)
reserved246	generic/tclDecls.h	/^    void (*reserved246)(void);$/;"	m	struct:TclStubs	typeref:typename:void (*)(void)
reserved247	generic/tclDecls.h	/^    void (*reserved247)(void);$/;"	m	struct:TclStubs	typeref:typename:void (*)(void)
reserved25	generic/tclIntPlatDecls.h	/^    void (*reserved25)(void);$/;"	m	struct:TclIntPlatStubs	typeref:typename:void (*)(void)
reserved253	generic/tclDecls.h	/^    void (*reserved253)(void);$/;"	m	struct:TclStubs	typeref:typename:void (*)(void)
reserved255	generic/tclDecls.h	/^    void (*reserved255)(void);$/;"	m	struct:TclStubs	typeref:typename:void (*)(void)
reserved258	generic/tclDecls.h	/^    void (*reserved258)(void);$/;"	m	struct:TclStubs	typeref:typename:void (*)(void)
reserved258	generic/tclIntDecls.h	/^    void (*reserved258)(void);$/;"	m	struct:TclIntStubs	typeref:typename:void (*)(void)
reserved259	generic/tclIntDecls.h	/^    void (*reserved259)(void);$/;"	m	struct:TclIntStubs	typeref:typename:void (*)(void)
reserved26	generic/tclDecls.h	/^    void (*reserved26)(void);$/;"	m	struct:TclStubs	typeref:typename:void (*)(void)
reserved26	generic/tclIntDecls.h	/^    void (*reserved26)(void);$/;"	m	struct:TclIntStubs	typeref:typename:void (*)(void)
reserved26	generic/tclIntPlatDecls.h	/^    void (*reserved26)(void);$/;"	m	struct:TclIntPlatStubs	typeref:typename:void (*)(void)
reserved260	generic/tclIntDecls.h	/^    void (*reserved260)(void);$/;"	m	struct:TclIntStubs	typeref:typename:void (*)(void)
reserved261	generic/tclDecls.h	/^    void (*reserved261)(void);$/;"	m	struct:TclStubs	typeref:typename:void (*)(void)
reserved267	generic/tclDecls.h	/^    void (*reserved267)(void);$/;"	m	struct:TclStubs	typeref:typename:void (*)(void)
reserved268	generic/tclDecls.h	/^    void (*reserved268)(void);$/;"	m	struct:TclStubs	typeref:typename:void (*)(void)
reserved27	generic/tclIntDecls.h	/^    void (*reserved27)(void);$/;"	m	struct:TclIntStubs	typeref:typename:void (*)(void)
reserved271	generic/tclDecls.h	/^    void (*reserved271)(void);$/;"	m	struct:TclStubs	typeref:typename:void (*)(void)
reserved273	generic/tclDecls.h	/^    void (*reserved273)(void);$/;"	m	struct:TclStubs	typeref:typename:void (*)(void)
reserved274	generic/tclDecls.h	/^    void (*reserved274)(void);$/;"	m	struct:TclStubs	typeref:typename:void (*)(void)
reserved275	generic/tclDecls.h	/^    void (*reserved275)(void);$/;"	m	struct:TclStubs	typeref:typename:void (*)(void)
reserved276	generic/tclDecls.h	/^    void (*reserved276)(void);$/;"	m	struct:TclStubs	typeref:typename:void (*)(void)
reserved278	generic/tclDecls.h	/^    void (*reserved278)(void);$/;"	m	struct:TclStubs	typeref:typename:void (*)(void)
reserved28	generic/tclIntPlatDecls.h	/^    void (*reserved28)(void);$/;"	m	struct:TclIntPlatStubs	typeref:typename:void (*)(void)
reserved29	generic/tclIntDecls.h	/^    void (*reserved29)(void);$/;"	m	struct:TclIntStubs	typeref:typename:void (*)(void)
reserved290	generic/tclDecls.h	/^    void (*reserved290)(void);$/;"	m	struct:TclStubs	typeref:typename:void (*)(void)
reserved30	generic/tclIntDecls.h	/^    void (*reserved30)(void);$/;"	m	struct:TclIntStubs	typeref:typename:void (*)(void)
reserved314	generic/tclDecls.h	/^    void (*reserved314)(void);$/;"	m	struct:TclStubs	typeref:typename:void (*)(void)
reserved315	generic/tclDecls.h	/^    void (*reserved315)(void);$/;"	m	struct:TclStubs	typeref:typename:void (*)(void)
reserved33	generic/tclIntDecls.h	/^    void (*reserved33)(void);$/;"	m	struct:TclIntStubs	typeref:typename:void (*)(void)
reserved34	generic/tclIntDecls.h	/^    void (*reserved34)(void);$/;"	m	struct:TclIntStubs	typeref:typename:void (*)(void)
reserved341	generic/tclDecls.h	/^    void (*reserved341)(void);$/;"	m	struct:TclStubs	typeref:typename:void (*)(void)
reserved342	generic/tclDecls.h	/^    void (*reserved342)(void);$/;"	m	struct:TclStubs	typeref:typename:void (*)(void)
reserved35	generic/tclIntDecls.h	/^    void (*reserved35)(void);$/;"	m	struct:TclIntStubs	typeref:typename:void (*)(void)
reserved353	generic/tclDecls.h	/^    void (*reserved353)(void);$/;"	m	struct:TclStubs	typeref:typename:void (*)(void)
reserved357	generic/tclDecls.h	/^    void (*reserved357)(void);$/;"	m	struct:TclStubs	typeref:typename:void (*)(void)
reserved36	generic/tclDecls.h	/^    void (*reserved36)(void);$/;"	m	struct:TclStubs	typeref:typename:void (*)(void)
reserved36	generic/tclIntDecls.h	/^    void (*reserved36)(void);$/;"	m	struct:TclIntStubs	typeref:typename:void (*)(void)
reserved37	generic/tclIntDecls.h	/^    void (*reserved37)(void);$/;"	m	struct:TclIntStubs	typeref:typename:void (*)(void)
reserved382	generic/tclDecls.h	/^    void (*reserved382)(void);$/;"	m	struct:TclStubs	typeref:typename:void (*)(void)
reserved39	generic/tclTomMathDecls.h	/^    void (*reserved39)(void);$/;"	m	struct:TclTomMathStubs	typeref:typename:void (*)(void)
reserved4	generic/tclIntDecls.h	/^    void (*reserved4)(void);$/;"	m	struct:TclIntStubs	typeref:typename:void (*)(void)
reserved40	generic/tclTomMathDecls.h	/^    void (*reserved40)(void);$/;"	m	struct:TclTomMathStubs	typeref:typename:void (*)(void)
reserved401	generic/tclDecls.h	/^    void (*reserved401)(void);$/;"	m	struct:TclStubs	typeref:typename:void (*)(void)
reserved405	generic/tclDecls.h	/^    void (*reserved405)(void);$/;"	m	struct:TclStubs	typeref:typename:void (*)(void)
reserved41	generic/tclDecls.h	/^    void (*reserved41)(void);$/;"	m	struct:TclStubs	typeref:typename:void (*)(void)
reserved419	generic/tclDecls.h	/^    void (*reserved419)(void);$/;"	m	struct:TclStubs	typeref:typename:void (*)(void)
reserved420	generic/tclDecls.h	/^    void (*reserved420)(void);$/;"	m	struct:TclStubs	typeref:typename:void (*)(void)
reserved421	generic/tclDecls.h	/^    void (*reserved421)(void);$/;"	m	struct:TclStubs	typeref:typename:void (*)(void)
reserved422	generic/tclDecls.h	/^    void (*reserved422)(void);$/;"	m	struct:TclStubs	typeref:typename:void (*)(void)
reserved435	generic/tclDecls.h	/^    void (*reserved435)(void);$/;"	m	struct:TclStubs	typeref:typename:void (*)(void)
reserved436	generic/tclDecls.h	/^    void (*reserved436)(void);$/;"	m	struct:TclStubs	typeref:typename:void (*)(void)
reserved44	generic/tclIntDecls.h	/^    void (*reserved44)(void);$/;"	m	struct:TclIntStubs	typeref:typename:void (*)(void)
reserved44	generic/tclTomMathDecls.h	/^    void (*reserved44)(void);$/;"	m	struct:TclTomMathStubs	typeref:typename:void (*)(void)
reserved45	generic/tclDecls.h	/^    void (*reserved45)(void);$/;"	m	struct:TclStubs	typeref:typename:void (*)(void)
reserved45	generic/tclTomMathDecls.h	/^    void (*reserved45)(void);$/;"	m	struct:TclTomMathStubs	typeref:typename:void (*)(void)
reserved46	generic/tclTomMathDecls.h	/^    void (*reserved46)(void);$/;"	m	struct:TclTomMathStubs	typeref:typename:void (*)(void)
reserved47	generic/tclDecls.h	/^    void (*reserved47)(void);$/;"	m	struct:TclStubs	typeref:typename:void (*)(void)
reserved47	generic/tclIntDecls.h	/^    void (*reserved47)(void);$/;"	m	struct:TclIntStubs	typeref:typename:void (*)(void)
reserved48	generic/tclIntDecls.h	/^    void (*reserved48)(void);$/;"	m	struct:TclIntStubs	typeref:typename:void (*)(void)
reserved49	generic/tclDecls.h	/^    void (*reserved49)(void);$/;"	m	struct:TclStubs	typeref:typename:void (*)(void)
reserved49	generic/tclIntDecls.h	/^    void (*reserved49)(void);$/;"	m	struct:TclIntStubs	typeref:typename:void (*)(void)
reserved50	generic/tclIntDecls.h	/^    void (*reserved50)(void);$/;"	m	struct:TclIntStubs	typeref:typename:void (*)(void)
reserved50	generic/tclTomMathDecls.h	/^    void (*reserved50)(void);$/;"	m	struct:TclTomMathStubs	typeref:typename:void (*)(void)
reserved51	generic/tclTomMathDecls.h	/^    void (*reserved51)(void);$/;"	m	struct:TclTomMathStubs	typeref:typename:void (*)(void)
reserved519	generic/tclDecls.h	/^    void (*reserved519)(void);$/;"	m	struct:TclStubs	typeref:typename:void (*)(void)
reserved52	generic/tclDecls.h	/^    void (*reserved52)(void);$/;"	m	struct:TclStubs	typeref:typename:void (*)(void)
reserved52	generic/tclIntDecls.h	/^    void (*reserved52)(void);$/;"	m	struct:TclIntStubs	typeref:typename:void (*)(void)
reserved52	generic/tclTomMathDecls.h	/^    void (*reserved52)(void);$/;"	m	struct:TclTomMathStubs	typeref:typename:void (*)(void)
reserved53	generic/tclIntDecls.h	/^    void (*reserved53)(void);$/;"	m	struct:TclIntStubs	typeref:typename:void (*)(void)
reserved53	generic/tclTomMathDecls.h	/^    void (*reserved53)(void);$/;"	m	struct:TclTomMathStubs	typeref:typename:void (*)(void)
reserved54	generic/tclDecls.h	/^    void (*reserved54)(void);$/;"	m	struct:TclStubs	typeref:typename:void (*)(void)
reserved54	generic/tclIntDecls.h	/^    void (*reserved54)(void);$/;"	m	struct:TclIntStubs	typeref:typename:void (*)(void)
reserved54	generic/tclTomMathDecls.h	/^    void (*reserved54)(void);$/;"	m	struct:TclTomMathStubs	typeref:typename:void (*)(void)
reserved55	generic/tclTomMathDecls.h	/^    void (*reserved55)(void);$/;"	m	struct:TclTomMathStubs	typeref:typename:void (*)(void)
reserved56	generic/tclIntDecls.h	/^    void (*reserved56)(void);$/;"	m	struct:TclIntStubs	typeref:typename:void (*)(void)
reserved56	generic/tclTomMathDecls.h	/^    void (*reserved56)(void);$/;"	m	struct:TclTomMathStubs	typeref:typename:void (*)(void)
reserved57	generic/tclDecls.h	/^    void (*reserved57)(void);$/;"	m	struct:TclStubs	typeref:typename:void (*)(void)
reserved57	generic/tclIntDecls.h	/^    void (*reserved57)(void);$/;"	m	struct:TclIntStubs	typeref:typename:void (*)(void)
reserved57	generic/tclTomMathDecls.h	/^    void (*reserved57)(void);$/;"	m	struct:TclTomMathStubs	typeref:typename:void (*)(void)
reserved58	generic/tclTomMathDecls.h	/^    void (*reserved58)(void);$/;"	m	struct:TclTomMathStubs	typeref:typename:void (*)(void)
reserved59	generic/tclIntDecls.h	/^    void (*reserved59)(void);$/;"	m	struct:TclIntStubs	typeref:typename:void (*)(void)
reserved59	generic/tclTomMathDecls.h	/^    void (*reserved59)(void);$/;"	m	struct:TclTomMathStubs	typeref:typename:void (*)(void)
reserved60	generic/tclTomMathDecls.h	/^    void (*reserved60)(void);$/;"	m	struct:TclTomMathStubs	typeref:typename:void (*)(void)
reserved61	generic/tclDecls.h	/^    void (*reserved61)(void);$/;"	m	struct:TclStubs	typeref:typename:void (*)(void)
reserved61	generic/tclTomMathDecls.h	/^    void (*reserved61)(void);$/;"	m	struct:TclTomMathStubs	typeref:typename:void (*)(void)
reserved62	generic/tclTomMathDecls.h	/^    void (*reserved62)(void);$/;"	m	struct:TclTomMathStubs	typeref:typename:void (*)(void)
reserved63	generic/tclDecls.h	/^    void (*reserved63)(void);$/;"	m	struct:TclStubs	typeref:typename:void (*)(void)
reserved63	generic/tclIntDecls.h	/^    void (*reserved63)(void);$/;"	m	struct:TclIntStubs	typeref:typename:void (*)(void)
reserved64	generic/tclTomMathDecls.h	/^    void (*reserved64)(void);$/;"	m	struct:TclTomMathStubs	typeref:typename:void (*)(void)
reserved65	generic/tclIntDecls.h	/^    void (*reserved65)(void);$/;"	m	struct:TclIntStubs	typeref:typename:void (*)(void)
reserved657	generic/tclDecls.h	/^    void (*reserved657)(void);$/;"	m	struct:TclStubs	typeref:typename:void (*)(void)
reserved66	generic/tclDecls.h	/^    void (*reserved66)(void);$/;"	m	struct:TclStubs	typeref:typename:void (*)(void)
reserved66	generic/tclIntDecls.h	/^    void (*reserved66)(void);$/;"	m	struct:TclIntStubs	typeref:typename:void (*)(void)
reserved67	generic/tclDecls.h	/^    void (*reserved67)(void);$/;"	m	struct:TclStubs	typeref:typename:void (*)(void)
reserved67	generic/tclIntDecls.h	/^    void (*reserved67)(void);$/;"	m	struct:TclIntStubs	typeref:typename:void (*)(void)
reserved67	generic/tclTomMathDecls.h	/^    void (*reserved67)(void);$/;"	m	struct:TclTomMathStubs	typeref:typename:void (*)(void)
reserved68	generic/tclIntDecls.h	/^    void (*reserved68)(void);$/;"	m	struct:TclIntStubs	typeref:typename:void (*)(void)
reserved70	generic/tclIntDecls.h	/^    void (*reserved70)(void);$/;"	m	struct:TclIntStubs	typeref:typename:void (*)(void)
reserved71	generic/tclIntDecls.h	/^    void (*reserved71)(void);$/;"	m	struct:TclIntStubs	typeref:typename:void (*)(void)
reserved72	generic/tclIntDecls.h	/^    void (*reserved72)(void);$/;"	m	struct:TclIntStubs	typeref:typename:void (*)(void)
reserved73	generic/tclIntDecls.h	/^    void (*reserved73)(void);$/;"	m	struct:TclIntStubs	typeref:typename:void (*)(void)
reserved73	generic/tclTomMathDecls.h	/^    void (*reserved73)(void);$/;"	m	struct:TclTomMathStubs	typeref:typename:void (*)(void)
reserved74	generic/tclTomMathDecls.h	/^    void (*reserved74)(void);$/;"	m	struct:TclTomMathStubs	typeref:typename:void (*)(void)
reserved75	generic/tclTomMathDecls.h	/^    void (*reserved75)(void);$/;"	m	struct:TclTomMathStubs	typeref:typename:void (*)(void)
reserved76	generic/tclDecls.h	/^    void (*reserved76)(void);$/;"	m	struct:TclStubs	typeref:typename:void (*)(void)
reserved77	generic/tclDecls.h	/^    void (*reserved77)(void);$/;"	m	struct:TclStubs	typeref:typename:void (*)(void)
reserved77	generic/tclIntDecls.h	/^    void (*reserved77)(void);$/;"	m	struct:TclIntStubs	typeref:typename:void (*)(void)
reserved78	generic/tclIntDecls.h	/^    void (*reserved78)(void);$/;"	m	struct:TclIntStubs	typeref:typename:void (*)(void)
reserved79	generic/tclIntDecls.h	/^    void (*reserved79)(void);$/;"	m	struct:TclIntStubs	typeref:typename:void (*)(void)
reserved79	generic/tclTomMathDecls.h	/^    void (*reserved79)(void);$/;"	m	struct:TclTomMathStubs	typeref:typename:void (*)(void)
reserved8	generic/tclIntDecls.h	/^    void (*reserved8)(void);$/;"	m	struct:TclIntStubs	typeref:typename:void (*)(void)
reserved80	generic/tclIntDecls.h	/^    void (*reserved80)(void);$/;"	m	struct:TclIntStubs	typeref:typename:void (*)(void)
reserved82	generic/tclIntDecls.h	/^    void (*reserved82)(void);$/;"	m	struct:TclIntStubs	typeref:typename:void (*)(void)
reserved83	generic/tclIntDecls.h	/^    void (*reserved83)(void);$/;"	m	struct:TclIntStubs	typeref:typename:void (*)(void)
reserved84	generic/tclIntDecls.h	/^    void (*reserved84)(void);$/;"	m	struct:TclIntStubs	typeref:typename:void (*)(void)
reserved85	generic/tclIntDecls.h	/^    void (*reserved85)(void);$/;"	m	struct:TclIntStubs	typeref:typename:void (*)(void)
reserved86	generic/tclIntDecls.h	/^    void (*reserved86)(void);$/;"	m	struct:TclIntStubs	typeref:typename:void (*)(void)
reserved87	generic/tclIntDecls.h	/^    void (*reserved87)(void);$/;"	m	struct:TclIntStubs	typeref:typename:void (*)(void)
reserved88	generic/tclIntDecls.h	/^    void (*reserved88)(void);$/;"	m	struct:TclIntStubs	typeref:typename:void (*)(void)
reserved90	generic/tclIntDecls.h	/^    void (*reserved90)(void);$/;"	m	struct:TclIntStubs	typeref:typename:void (*)(void)
reserved94	generic/tclIntDecls.h	/^    void (*reserved94)(void);$/;"	m	struct:TclIntStubs	typeref:typename:void (*)(void)
reserved95	generic/tclDecls.h	/^    void (*reserved95)(void);$/;"	m	struct:TclStubs	typeref:typename:void (*)(void)
reserved95	generic/tclIntDecls.h	/^    void (*reserved95)(void);$/;"	m	struct:TclIntStubs	typeref:typename:void (*)(void)
reserved99	generic/tclIntDecls.h	/^    void (*reserved99)(void);$/;"	m	struct:TclIntStubs	typeref:typename:void (*)(void)
reset	compat/zlib/gzguts.h	/^    int reset;              \/* true if a reset is pending after a Z_FINISH *\/$/;"	m	struct:__anon361a15920108	typeref:typename:int
reset	library/http/http.tcl	/^proc http::reset {token {why reset}} {$/;"	p	namespace:http
resetErrorStack	generic/tclClock.c	/^	int resetErrorStack;$/;"	m	struct:ClockSafeCatchCmd::__anond46bc7710208	typeref:typename:int	file:
resetErrorStack	generic/tclInt.h	/^    int resetErrorStack;	\/* controls cleaning up of ::errorStack *\/$/;"	m	struct:Interp	typeref:typename:int
resetErrorStack	generic/tclResult.c	/^    int resetErrorStack;$/;"	m	struct:__anon298490c40108	typeref:typename:int	file:
resetOutput	compat/zlib/contrib/dotzlib/DotZLib/CodecBase.cs	/^        protected void resetOutput()$/;"	m	class:DotZLib.CodecBase
resolveInfo	generic/tclInt.h	/^    Tcl_ResolvedVarInfo *resolveInfo;$/;"	m	struct:CompiledLocal	typeref:typename:Tcl_ResolvedVarInfo *
resolvedPid	generic/tclProcess.c	/^    int resolvedPid;		\/* Resolved process id. *\/$/;"	m	struct:ProcessInfo	typeref:typename:int	file:
resolverEpoch	generic/tclInt.h	/^    Tcl_Size resolverEpoch;	\/* Incremented whenever (a) the name$/;"	m	struct:Namespace	typeref:typename:Tcl_Size
resolverPtr	generic/tclInt.h	/^    ResolverScheme *resolverPtr;\/* Linked list of name resolution schemes$/;"	m	struct:Interp	typeref:typename:ResolverScheme *
resolverType	generic/tclOODefineCmds.c	/^    const Tcl_MethodType resolverType;$/;"	m	struct:DeclaredSlot	typeref:typename:const Tcl_MethodType	file:
responseBody	library/http/http.tcl	/^proc http::responseBody {token} {$/;"	p	namespace:http
responseCode	library/http/http.tcl	/^proc http::responseCode {token} {$/;"	p	namespace:http
responseHeaderValue	library/http/http.tcl	/^proc http::responseHeaderValue {token header} {$/;"	p	namespace:http
responseHeaders	library/http/http.tcl	/^proc http::responseHeaders {token args} {$/;"	p	namespace:http
responseInfo	library/http/http.tcl	/^proc http::responseInfo {token} {$/;"	p	namespace:http
responseLine	library/http/http.tcl	/^proc http::responseLine {token} {$/;"	p	namespace:http
rest_read_compressed	compat/zlib/contrib/minizip/unzip.c	/^    ZPOS64_T rest_read_compressed; \/* number of byte to be decompressed *\/$/;"	m	struct:__anon3259ecee0108	typeref:typename:ZPOS64_T	file:
rest_read_uncompressed	compat/zlib/contrib/minizip/unzip.c	/^    ZPOS64_T rest_read_uncompressed;\/*number of byte to be obtained after decomp*\/$/;"	m	struct:__anon3259ecee0108	typeref:typename:ZPOS64_T	file:
restore_attr	compat/zlib/contrib/untgz/untgz.c	/^void restore_attr(struct attr_item **list)$/;"	f	typeref:typename:void
result	generic/tclBasic.c	/^    char *result;		\/* The script cancellation result or NULL for$/;"	m	struct:__anon6e1456070108	typeref:typename:char *	file:
result	generic/tclIOGT.c	/^    ResultBuffer result;	\/* Internal buffer used to store the result of$/;"	m	struct:TransformChannelData	typeref:typename:ResultBuffer	file:
result	generic/tclIORChan.c	/^    int result;			\/* TCL_OK or TCL_ERROR *\/$/;"	m	struct:ForwardingResult	typeref:typename:int	file:
result	generic/tclIORTrans.c	/^    ResultBuffer result;$/;"	m	struct:__anon21e740770208	typeref:typename:ResultBuffer	file:
result	generic/tclIORTrans.c	/^    int result;			\/* TCL_OK or TCL_ERROR *\/$/;"	m	struct:ForwardingResult	typeref:typename:int	file:
result	generic/tclThreadJoin.c	/^    int result;			\/* A place for the result after the demise of$/;"	m	struct:JoinableThread	typeref:typename:int	file:
result	generic/tclThreadTest.c	/^    char *result;		\/* Result from the script *\/$/;"	m	struct:ThreadEventResult	typeref:typename:char *	file:
result	win/tclWinDde.c	/^    int result;$/;"	m	struct:__anone96dc6f10108	typeref:typename:int	file:
resultCode	generic/tclCmdIL.c	/^    int resultCode;		\/* Completion code for the lsort command. If$/;"	m	struct:__anond5eb1cce0308	typeref:typename:int	file:
resultList	generic/tclCmdAH.c	/^    Tcl_Obj *resultList;	\/* List of result values from the loop body,$/;"	m	struct:ForeachState	typeref:typename:Tcl_Obj *	file:
resultList	generic/tclThreadTest.c	/^static ThreadEventResult *resultList;$/;"	v	typeref:typename:ThreadEventResult *	file:
resultPtr	generic/tclIORChan.c	/^    ForwardingResult *resultPtr;$/;"	m	struct:__anon92d8dd290708	typeref:typename:ForwardingResult *	file:
resultPtr	generic/tclIORTrans.c	/^    ForwardingResult *resultPtr;$/;"	m	struct:__anon21e740770708	typeref:typename:ForwardingResult *	file:
resultPtr	generic/tclThreadTest.c	/^    struct ThreadEventResult *resultPtr;$/;"	m	struct:ThreadEvent	typeref:struct:ThreadEventResult *	file:
resultStrings	generic/tclExecute.c	/^static const char *const resultStrings[] = {$/;"	v	typeref:typename:const char * const[]	file:
returnCode	generic/tclClock.c	/^	int returnCode;			\/* struct. These fields taken together are *\/$/;"	m	struct:ClockSafeCatchCmd::__anond46bc7710208	typeref:typename:int	file:
returnCode	generic/tclInt.h	/^    int returnCode;		\/* [return -code] parameter. *\/$/;"	m	struct:Interp	typeref:typename:int
returnCode	generic/tclResult.c	/^    int returnCode;		\/* struct. These fields taken together are *\/$/;"	m	struct:__anon298490c40108	typeref:typename:int	file:
returnKeys	generic/tclResult.c	/^enum returnKeys {$/;"	g	file:
returnLevel	generic/tclClock.c	/^	int returnLevel;		\/* corresponding field of the Interp *\/$/;"	m	struct:ClockSafeCatchCmd::__anond46bc7710208	typeref:typename:int	file:
returnLevel	generic/tclInt.h	/^    int returnLevel;		\/* [return -level] parameter. *\/$/;"	m	struct:Interp	typeref:typename:int
returnLevel	generic/tclResult.c	/^    int returnLevel;		\/* corresponding field of the Interp *\/$/;"	m	struct:__anon298490c40108	typeref:typename:int	file:
returnOpts	generic/tclClock.c	/^	Tcl_Obj *returnOpts;$/;"	m	struct:ClockSafeCatchCmd::__anond46bc7710208	typeref:typename:Tcl_Obj *	file:
returnOpts	generic/tclEvent.c	/^    Tcl_Obj *returnOpts;	\/* Active return options when the error$/;"	m	struct:BgError	typeref:typename:Tcl_Obj *	file:
returnOpts	generic/tclInt.h	/^    Tcl_Obj *returnOpts;	\/* A dictionary holding the options to the$/;"	m	struct:Interp	typeref:typename:Tcl_Obj *
returnOpts	generic/tclResult.c	/^    Tcl_Obj *returnOpts;$/;"	m	struct:__anon298490c40108	typeref:typename:Tcl_Obj *	file:
returnPackagePtr	win/tclWinDde.c	/^    Tcl_Obj *returnPackagePtr;	\/* The result package for this conversation. *\/$/;"	m	struct:Conversation	typeref:typename:Tcl_Obj *	file:
return_codes	generic/tclDTrace.d	/^enum return_codes {$/;"	g	file:
reverse	generic/tclInt.h	/^	int (*reverse)(tclObjTypeInterfaceArgsListReverse);$/;"	m	struct:ObjInterface::list	typeref:typename:int (*)(tclObjTypeInterfaceArgsListReverse)
reverseProc	generic/tclDTrace.d	/^    void *reverseProc;$/;"	m	struct:Tcl_ObjType	file:
reverseScan	generic/tclInt.h	/^    int reverseScan;		\/* Boolean set true when traces are scanning$/;"	m	struct:ActiveCommandTrace	typeref:typename:int
reverseScan	generic/tclInt.h	/^    int reverseScan;		\/* Boolean set true when traces are scanning$/;"	m	struct:ActiveInterpTrace	typeref:typename:int
rewind	generic/tclInt.h	/^    int rewind;			\/* Set when exception trapping is disabled$/;"	m	struct:ExecEnv	typeref:typename:int
rewriteFile	tools/genStubs.tcl	/^proc genStubs::rewriteFile {file text} {$/;"	p	namespace:genStubs
rfree	generic/regcomp.c	/^rfree($/;"	f	typeref:typename:void	file:
riPtr	win/tclWinDde.c	/^    RegisteredInterp *riPtr;	\/* The info we know about the conversation. *\/$/;"	m	struct:Conversation	typeref:typename:RegisteredInterp *	file:
right	generic/regguts.h	/^    struct subre *right;	\/* right child, if any *\/$/;"	m	struct:subre	typeref:struct:subre *
right	generic/tclCompExpr.c	/^    int right;			\/* "Pointer" to the right operand. *\/$/;"	m	struct:__anon882f36730108	typeref:typename:int	file:
rm_detail_t	generic/regex.h	/^} rm_detail_t;$/;"	t	typeref:struct:__anonc87062e20308
rm_eo	generic/regex.h	/^    size_t rm_eo;		\/* end of substring *\/$/;"	m	struct:__anonc87062e20208	typeref:typename:size_t
rm_extend	generic/regex.h	/^    regmatch_t rm_extend;	\/* see REG_EXPECT *\/$/;"	m	struct:__anonc87062e20308	typeref:typename:regmatch_t
rm_so	generic/regex.h	/^    size_t rm_so;		\/* start of substring *\/$/;"	m	struct:__anonc87062e20208	typeref:typename:size_t
rmagic	generic/tclAlloc.c	/^	unsigned short rmagic;	\/* range magic number *\/$/;"	m	struct:overhead::__anon3a4776f00108	typeref:typename:unsigned short	file:
ro-test	unix/Makefile.in	/^ro-test: ${TCLTEST_EXE}$/;"	t
rogue	compat/zlib/test/infcover.c	/^    int notlifo, rogue;         \/* counts of non-LIFO frees and rogue frees *\/$/;"	m	struct:mem_zone	typeref:typename:int	file:
root	compat/zlib/examples/enough.c	/^    int root;           \/\/ size of base code table in bits$/;"	m	struct:__anonea7b679d0208	typeref:typename:int	file:
rootFramePtr	generic/tclInt.h	/^    CallFrame *rootFramePtr;	\/* Global frame pointer for this$/;"	m	struct:Interp	typeref:typename:CallFrame *
rootKeyNames	win/tclWinReg.c	/^static const char *const rootKeyNames[] = {$/;"	v	typeref:typename:const char * const[]	file:
rootKeys	win/tclWinReg.c	/^static const HKEY rootKeys[] = {$/;"	v	typeref:typename:const HKEY[]	file:
roots	library/tm.tcl	/^proc ::tcl::tm::roots {paths} {$/;"	p	namespace:::tcl::tm
rot	libtommath/bn_s_mp_rand_jenkins.c	/^#define rot(/;"	d	file:
rotate	compat/zlib/examples/gzappend.c	/^local void rotate(unsigned char *list, unsigned len, unsigned rot)$/;"	f	typeref:typename:local void
rpath	unix/tcl.m4	/^    AC_ARG_ENABLE(rpath,$/;"	e
rpm	unix/Makefile.in	/^rpm: all$/;"	t
rtPtr	generic/tclIORTrans.c	/^    ReflectedTransform *rtPtr;	\/* Channel instance *\/$/;"	m	struct:__anon21e740770708	typeref:typename:ReflectedTransform *	file:
rtmPtr	generic/tclIORTrans.c	/^    ReflectedTransformMap *rtmPtr;$/;"	m	struct:__anon21e740770808	typeref:typename:ReflectedTransformMap *	file:
runHttpTestScript	tests/httpTestScript.tcl	/^proc httpTestScript::runHttpTestScript {scr} {$/;"	p	namespace:httpTestScript
runLoop	macosx/tclMacOSXNotify.c	/^    CFRunLoopRef runLoop;	\/* This thread's CFRunLoop, needs to be woken$/;"	m	struct:ThreadSpecificData	typeref:typename:CFRunLoopRef	file:
runLoopNestingLevel	macosx/tclMacOSXNotify.c	/^    int runLoopNestingLevel;	\/* Level of nested runLoop invocations. *\/$/;"	m	struct:ThreadSpecificData	typeref:typename:int	file:
runLoopObserver	macosx/tclMacOSXNotify.c	/^    CFRunLoopObserverRef runLoopObserver, runLoopObserverTcl;$/;"	m	struct:ThreadSpecificData	typeref:typename:CFRunLoopObserverRef	file:
runLoopObserverTcl	macosx/tclMacOSXNotify.c	/^    CFRunLoopObserverRef runLoopObserver, runLoopObserverTcl;$/;"	m	struct:ThreadSpecificData	typeref:typename:CFRunLoopObserverRef	file:
runLoopRunning	macosx/tclMacOSXNotify.c	/^    int runLoopRunning;		\/* True if this thread's Tcl runLoop is$/;"	m	struct:ThreadSpecificData	typeref:typename:int	file:
runLoopSource	macosx/tclMacOSXNotify.c	/^    CFRunLoopSourceRef runLoopSource;$/;"	m	struct:ThreadSpecificData	typeref:typename:CFRunLoopSourceRef	file:
runLoopSourcePerformed	macosx/tclMacOSXNotify.c	/^    int runLoopSourcePerformed;	\/* True after the runLoopSource callack was$/;"	m	struct:ThreadSpecificData	typeref:typename:int	file:
runLoopTimer	macosx/tclMacOSXNotify.c	/^    CFRunLoopTimerRef runLoopTimer;$/;"	m	struct:ThreadSpecificData	typeref:typename:CFRunLoopTimerRef	file:
runmake	win/vctool.bat	/^:runmake$/;"	l
running	generic/tclInt.h	/^    CorContext running;		\/* This coroutine's saved execution context. *\/$/;"	m	struct:CoroutineData	typeref:typename:CorContext
runstatedir	unix/Makefile.in	/^runstatedir		= @runstatedir@$/;"	m
runstatedir	win/Makefile.in	/^runstatedir		= @runstatedir@$/;"	m
runtest	unix/Makefile.in	/^runtest: ${TCLTEST_EXE}$/;"	t
runtest	win/Makefile.in	/^runtest: tcltest$/;"	t
s	generic/tclBasic.c	/^	short s;$/;"	m	union:Tcl_CreateInterp::__anon6e145607070a	typeref:typename:short	file:
s	generic/tclEncoding.c	/^	short s;$/;"	m	union:TclInitEncodingSubsystem::__anondb7a8e8c050a	typeref:typename:short	file:
s	generic/tclLink.c	/^	short s;$/;"	m	union:__anonfc2fcf730108::__anonfc2fcf73020a	typeref:typename:short	file:
s	generic/tclThreadAlloc.c	/^	    } s;$/;"	m	union:Block::__anone59fb5e80108::__anone59fb5e8020a	typeref:struct:Block::__anone59fb5e80108::__anone59fb5e8020a::__anone59fb5e80308	file:
s6_addr	compat/fake-rfc2553.h	/^	uint8_t	s6_addr[16];$/;"	m	struct:in6_addr	typeref:typename:uint8_t[16]
sI	generic/tclStrToD.c	/^	sI, sIN, sINF, sINFI, sINFIN, sINFINI, sINFINIT, sINFINITY$/;"	e	enum:TclParseNumber::State	file:
sIN	generic/tclStrToD.c	/^	sI, sIN, sINF, sINFI, sINFIN, sINFINI, sINFINIT, sINFINITY$/;"	e	enum:TclParseNumber::State	file:
sINF	generic/tclStrToD.c	/^	sI, sIN, sINF, sINFI, sINFIN, sINFINI, sINFINIT, sINFINITY$/;"	e	enum:TclParseNumber::State	file:
sINFI	generic/tclStrToD.c	/^	sI, sIN, sINF, sINFI, sINFIN, sINFINI, sINFINIT, sINFINITY$/;"	e	enum:TclParseNumber::State	file:
sINFIN	generic/tclStrToD.c	/^	sI, sIN, sINF, sINFI, sINFIN, sINFINI, sINFINIT, sINFINITY$/;"	e	enum:TclParseNumber::State	file:
sINFINI	generic/tclStrToD.c	/^	sI, sIN, sINF, sINFI, sINFIN, sINFINI, sINFINIT, sINFINITY$/;"	e	enum:TclParseNumber::State	file:
sINFINIT	generic/tclStrToD.c	/^	sI, sIN, sINF, sINFI, sINFIN, sINFINI, sINFINIT, sINFINITY$/;"	e	enum:TclParseNumber::State	file:
sINFINITY	generic/tclStrToD.c	/^	sI, sIN, sINF, sINFI, sINFIN, sINFINI, sINFINIT, sINFINITY$/;"	e	enum:TclParseNumber::State	file:
sN	generic/tclStrToD.c	/^	, sN, sNA, sNAN, sNANPAREN, sNANHEX, sNANFINISH$/;"	e	enum:TclParseNumber::State	file:
sNA	generic/tclStrToD.c	/^	, sN, sNA, sNAN, sNANPAREN, sNANHEX, sNANFINISH$/;"	e	enum:TclParseNumber::State	file:
sNAN	generic/tclStrToD.c	/^	, sN, sNA, sNAN, sNANPAREN, sNANHEX, sNANFINISH$/;"	e	enum:TclParseNumber::State	file:
sNANFINISH	generic/tclStrToD.c	/^	, sN, sNA, sNAN, sNANPAREN, sNANHEX, sNANFINISH$/;"	e	enum:TclParseNumber::State	file:
sNANHEX	generic/tclStrToD.c	/^	, sN, sNA, sNAN, sNANPAREN, sNANHEX, sNANFINISH$/;"	e	enum:TclParseNumber::State	file:
sNANPAREN	generic/tclStrToD.c	/^	, sN, sNA, sNAN, sNANPAREN, sNANHEX, sNANFINISH$/;"	e	enum:TclParseNumber::State	file:
sPtr	generic/tclLink.c	/^	short *sPtr;		\/* short array *\/$/;"	m	union:__anonfc2fcf730108::__anonfc2fcf73020a	typeref:typename:short *	file:
s_floor_ilog2	libtommath/bn_mp_prime_is_prime.c	/^static unsigned int s_floor_ilog2(int value)$/;"	f	typeref:typename:unsigned int	file:
s_mp_add	generic/tclTomMathDecls.h	/^#define s_mp_add TclBN_s_mp_add$/;"	d
s_mp_add	libtommath/bn_s_mp_add.c	/^mp_err s_mp_add(const mp_int *a, const mp_int *b, mp_int *c)$/;"	f	typeref:typename:mp_err
s_mp_balance_mul	generic/tclTomMathDecls.h	/^#define s_mp_balance_mul /;"	d
s_mp_balance_mul	libtommath/bn_s_mp_balance_mul.c	/^mp_err s_mp_balance_mul(const mp_int *a, const mp_int *b, mp_int *c)$/;"	f	typeref:typename:mp_err
s_mp_div_3	generic/tclTomMathDecls.h	/^#define s_mp_div_3 /;"	d
s_mp_div_3	libtommath/bn_s_mp_div_3.c	/^mp_err s_mp_div_3(const mp_int *a, mp_int *c, mp_digit *d)$/;"	f	typeref:typename:mp_err
s_mp_exptmod	libtommath/bn_s_mp_exptmod.c	/^mp_err s_mp_exptmod(const mp_int *G, const mp_int *X, const mp_int *P, mp_int *Y, int redmode)$/;"	f	typeref:typename:mp_err
s_mp_exptmod_fast	libtommath/bn_s_mp_exptmod_fast.c	/^mp_err s_mp_exptmod_fast(const mp_int *G, const mp_int *X, const mp_int *P, mp_int *Y, int redmo/;"	f	typeref:typename:mp_err
s_mp_get_bit	libtommath/bn_s_mp_get_bit.c	/^mp_bool s_mp_get_bit(const mp_int *a, unsigned int b)$/;"	f	typeref:typename:mp_bool
s_mp_invmod_fast	libtommath/bn_s_mp_invmod_fast.c	/^mp_err s_mp_invmod_fast(const mp_int *a, const mp_int *b, mp_int *c)$/;"	f	typeref:typename:mp_err
s_mp_invmod_slow	libtommath/bn_s_mp_invmod_slow.c	/^mp_err s_mp_invmod_slow(const mp_int *a, const mp_int *b, mp_int *c)$/;"	f	typeref:typename:mp_err
s_mp_karatsuba_mul	generic/tclTomMathDecls.h	/^#define s_mp_karatsuba_mul /;"	d
s_mp_karatsuba_mul	libtommath/bn_s_mp_karatsuba_mul.c	/^mp_err s_mp_karatsuba_mul(const mp_int *a, const mp_int *b, mp_int *c)$/;"	f	typeref:typename:mp_err
s_mp_karatsuba_sqr	generic/tclTomMathDecls.h	/^#define s_mp_karatsuba_sqr /;"	d
s_mp_karatsuba_sqr	libtommath/bn_s_mp_karatsuba_sqr.c	/^mp_err s_mp_karatsuba_sqr(const mp_int *a, mp_int *b)$/;"	f	typeref:typename:mp_err
s_mp_log	libtommath/bn_s_mp_log.c	/^mp_err s_mp_log(const mp_int *a, mp_digit base, int *c)$/;"	f	typeref:typename:mp_err
s_mp_log_2expt	libtommath/bn_s_mp_log_2expt.c	/^int s_mp_log_2expt(const mp_int *a, mp_digit base)$/;"	f	typeref:typename:int
s_mp_log_d	libtommath/bn_s_mp_log_d.c	/^int s_mp_log_d(mp_digit base, mp_digit n)$/;"	f	typeref:typename:int
s_mp_montgomery_reduce_fast	libtommath/bn_s_mp_montgomery_reduce_fast.c	/^mp_err s_mp_montgomery_reduce_fast(mp_int *x, const mp_int *n, mp_digit rho)$/;"	f	typeref:typename:mp_err
s_mp_mul_digs	generic/tclTomMathDecls.h	/^#define s_mp_mul_digs /;"	d
s_mp_mul_digs	libtommath/bn_s_mp_mul_digs.c	/^mp_err s_mp_mul_digs(const mp_int *a, const mp_int *b, mp_int *c, int digs)$/;"	f	typeref:typename:mp_err
s_mp_mul_digs_fast	generic/tclTomMathDecls.h	/^#define s_mp_mul_digs_fast /;"	d
s_mp_mul_digs_fast	libtommath/bn_s_mp_mul_digs_fast.c	/^mp_err s_mp_mul_digs_fast(const mp_int *a, const mp_int *b, mp_int *c, int digs)$/;"	f	typeref:typename:mp_err
s_mp_mul_high_digs	libtommath/bn_s_mp_mul_high_digs.c	/^mp_err s_mp_mul_high_digs(const mp_int *a, const mp_int *b, mp_int *c, int digs)$/;"	f	typeref:typename:mp_err
s_mp_mul_high_digs_fast	libtommath/bn_s_mp_mul_high_digs_fast.c	/^mp_err s_mp_mul_high_digs_fast(const mp_int *a, const mp_int *b, mp_int *c, int digs)$/;"	f	typeref:typename:mp_err
s_mp_mul_si	libtommath/bn_mp_prime_strong_lucas_selfridge.c	/^static mp_err s_mp_mul_si(const mp_int *a, int32_t d, mp_int *c)$/;"	f	typeref:typename:mp_err	file:
s_mp_prime_is_divisible	libtommath/bn_s_mp_prime_is_divisible.c	/^mp_err s_mp_prime_is_divisible(const mp_int *a, mp_bool *result)$/;"	f	typeref:typename:mp_err
s_mp_prime_random_ex	libtommath/bn_mp_prime_rand.c	/^mp_err s_mp_prime_random_ex(mp_int *a, int t, int size, int flags, private_mp_prime_callback cb,/;"	f	typeref:typename:mp_err
s_mp_prime_tab	libtommath/bn_prime_tab.c	/^const mp_digit *s_mp_prime_tab = ltm_prime_tab;$/;"	v	typeref:typename:const mp_digit *
s_mp_rand_cb	libtommath/bn_mp_prime_rand.c	/^static int s_mp_rand_cb(unsigned char *dst, int len, void *dat)$/;"	f	typeref:typename:int	file:
s_mp_rand_jenkins	libtommath/bn_s_mp_rand_jenkins.c	/^mp_err s_mp_rand_jenkins(void *p, size_t n)$/;"	f	typeref:typename:mp_err
s_mp_rand_jenkins_init	libtommath/bn_s_mp_rand_jenkins.c	/^void s_mp_rand_jenkins_init(uint64_t seed)$/;"	f	typeref:typename:void
s_mp_rand_platform	libtommath/bn_s_mp_rand_platform.c	/^mp_err s_mp_rand_platform(void *p, size_t n)$/;"	f	typeref:typename:mp_err
s_mp_rand_source	libtommath/bn_mp_rand.c	/^mp_err(*s_mp_rand_source)(void *out, size_t size) = s_mp_rand_platform;$/;"	v	typeref:typename:mp_err (*)(void * out,size_t size)
s_mp_reverse	generic/tclTomMathDecls.h	/^#define s_mp_reverse /;"	d
s_mp_reverse	libtommath/bn_s_mp_reverse.c	/^void s_mp_reverse(unsigned char *s, size_t len)$/;"	f	typeref:typename:void
s_mp_sqr	generic/tclTomMathDecls.h	/^#define s_mp_sqr TclBN_s_mp_sqr$/;"	d
s_mp_sqr	libtommath/bn_s_mp_sqr.c	/^mp_err s_mp_sqr(const mp_int *a, mp_int *b)$/;"	f	typeref:typename:mp_err
s_mp_sqr_fast	generic/tclTomMathDecls.h	/^#define s_mp_sqr_fast /;"	d
s_mp_sqr_fast	libtommath/bn_s_mp_sqr_fast.c	/^mp_err s_mp_sqr_fast(const mp_int *a, mp_int *b)$/;"	f	typeref:typename:mp_err
s_mp_sub	generic/tclTomMathDecls.h	/^#define s_mp_sub TclBN_s_mp_sub$/;"	d
s_mp_sub	libtommath/bn_s_mp_sub.c	/^mp_err s_mp_sub(const mp_int *a, const mp_int *b, mp_int *c)$/;"	f	typeref:typename:mp_err
s_mp_toom_mul	generic/tclTomMathDecls.h	/^#define s_mp_toom_mul /;"	d
s_mp_toom_mul	libtommath/bn_s_mp_toom_mul.c	/^mp_err s_mp_toom_mul(const mp_int *a, const mp_int *b, mp_int *c)$/;"	f	typeref:typename:mp_err
s_mp_toom_sqr	generic/tclTomMathDecls.h	/^#define s_mp_toom_sqr /;"	d
s_mp_toom_sqr	libtommath/bn_s_mp_toom_sqr.c	/^mp_err s_mp_toom_sqr(const mp_int *a, mp_int *b)$/;"	f	typeref:typename:mp_err
s_pow	libtommath/bn_s_mp_log_d.c	/^static mp_word s_pow(mp_word base, mp_word exponent)$/;"	f	typeref:typename:mp_word	file:
s_rand_jenkins_val	libtommath/bn_s_mp_rand_jenkins.c	/^static uint64_t s_rand_jenkins_val(void)$/;"	f	typeref:typename:uint64_t	file:
s_read_arc4random	libtommath/bn_s_mp_rand_platform.c	/^static mp_err s_read_arc4random(void *p, size_t n)$/;"	f	typeref:typename:mp_err	file:
s_read_getrandom	libtommath/bn_s_mp_rand_platform.c	/^static mp_err s_read_getrandom(void *p, size_t n)$/;"	f	typeref:typename:mp_err	file:
s_read_ltm_rng	libtommath/bn_s_mp_rand_platform.c	/^static mp_err s_read_ltm_rng(void *p, size_t n)$/;"	f	typeref:typename:mp_err	file:
s_read_urandom	libtommath/bn_s_mp_rand_platform.c	/^static mp_err s_read_urandom(void *p, size_t n)$/;"	f	typeref:typename:mp_err	file:
s_read_wincsp	libtommath/bn_s_mp_rand_platform.c	/^static mp_err s_read_wincsp(void *p, size_t n)$/;"	f	typeref:typename:mp_err	file:
sa	unix/tclUnixSock.c	/^    struct sockaddr sa;$/;"	m	union:__anon07b4e8c0010a	typeref:struct:sockaddr	file:
sa	win/tclWinSock.c	/^    struct sockaddr sa;$/;"	m	union:__anon3aeaf854010a	typeref:struct:sockaddr	file:
sa4	unix/tclUnixSock.c	/^    struct sockaddr_in sa4;$/;"	m	union:__anon07b4e8c0010a	typeref:struct:sockaddr_in	file:
sa4	win/tclWinSock.c	/^    struct sockaddr_in sa4;$/;"	m	union:__anon3aeaf854010a	typeref:struct:sockaddr_in	file:
sa6	unix/tclUnixSock.c	/^    struct sockaddr_in6 sa6;$/;"	m	union:__anon07b4e8c0010a	typeref:struct:sockaddr_in6	file:
sa6	win/tclWinSock.c	/^    struct sockaddr_in6 sa6;$/;"	m	union:__anon3aeaf854010a	typeref:struct:sockaddr_in6	file:
safeCommands	generic/tclTestProcBodyObj.c	/^static const CmdTable safeCommands[] = {$/;"	v	typeref:typename:const CmdTable[]	file:
safeInitProc	generic/tclLoad.c	/^    Tcl_LibraryInitProc *safeInitProc;$/;"	m	struct:LoadedLibrary	typeref:typename:Tcl_LibraryInitProc *	file:
safeInterpRefCount	generic/tclLoad.c	/^    int safeInterpRefCount;	\/* How many times the library has been loaded$/;"	m	struct:LoadedLibrary	typeref:typename:int	file:
safeUnloadProc	generic/tclLoad.c	/^    Tcl_LibraryUnloadProc *safeUnloadProc;$/;"	m	struct:LoadedLibrary	typeref:typename:Tcl_LibraryUnloadProc *	file:
sampleNo	win/tclWinTime.c	/^    int sampleNo;		\/* Current sample number. *\/$/;"	m	struct:__anon3cd8f0330108	typeref:typename:int	file:
sane	compat/zlib/inflate.h	/^    int sane;                   \/* if false, allow invalid distance too far *\/$/;"	m	struct:inflate_state	typeref:typename:int
sas	unix/tclUnixSock.c	/^    struct sockaddr_storage sas;$/;"	m	union:__anon07b4e8c0010a	typeref:struct:sockaddr_storage	file:
sas	win/tclWinSock.c	/^    struct sockaddr_storage sas;$/;"	m	union:__anon3aeaf854010a	typeref:struct:sockaddr_storage	file:
saveInBufPtr	generic/tclIO.h	/^    ChannelBuffer *saveInBufPtr;\/* Buffer saved for input queue - eliminates$/;"	m	struct:ChannelState	typeref:typename:ChannelBuffer *
save_r12	compat/zlib/contrib/gcc_gvmat64/gvmat64.S	/^#define save_r12 /;"	d	file:
save_r13	compat/zlib/contrib/gcc_gvmat64/gvmat64.S	/^#define save_r13 /;"	d	file:
save_r14	compat/zlib/contrib/gcc_gvmat64/gvmat64.S	/^#define save_r14 /;"	d	file:
save_r15	compat/zlib/contrib/gcc_gvmat64/gvmat64.S	/^#define save_r15 /;"	d	file:
save_rbp	compat/zlib/contrib/gcc_gvmat64/gvmat64.S	/^#define save_rbp /;"	d	file:
save_rbx	compat/zlib/contrib/gcc_gvmat64/gvmat64.S	/^#define save_rbx /;"	d	file:
save_rdi	compat/zlib/contrib/gcc_gvmat64/gvmat64.S	/^#define save_rdi /;"	d	file:
save_rsi	compat/zlib/contrib/gcc_gvmat64/gvmat64.S	/^#define save_rsi /;"	d	file:
savenow	generic/regcomp.c	/^    const chr *savenow;		\/* saved now and stop for "subroutine call" *\/$/;"	m	struct:vars	typeref:typename:const chr *	file:
savestop	generic/regcomp.c	/^    const chr *savestop;$/;"	m	struct:vars	typeref:typename:const chr *	file:
sb	compat/zlib/contrib/iostream3/zfstream.h	/^  gzfilebuf sb;$/;"	m	class:gzifstream	typeref:typename:gzfilebuf
sb	compat/zlib/contrib/iostream3/zfstream.h	/^  gzfilebuf sb;$/;"	m	class:gzofstream	typeref:typename:gzfilebuf
scan	compat/zlib/contrib/asm686/match.S	/^#define	scan	/;"	d	file:
scan	library/clockclassic.tcl	/^proc scan { args } {$/;"	p
scan_tree	compat/zlib/trees.c	/^local void scan_tree(deflate_state *s, ct_data *tree, int max_code) {$/;"	f	typeref:typename:local void
scanalign	compat/zlib/contrib/asm686/match.S	/^#define	scanalign	/;"	d	file:
scanend	compat/zlib/contrib/asm686/match.S	/^#define	scanend	/;"	d	file:
scannum	generic/regcomp.c	/^scannum($/;"	f	typeref:typename:int	file:
scanplain	generic/regcomp.c	/^scanplain($/;"	f	typeref:typename:const chr *	file:
scanstart	compat/zlib/contrib/asm686/match.S	/^#define	scanstart	/;"	d	file:
scnSpaceCount	generic/tclDate.h	/^    unsigned scnSpaceCount;	\/* Count of mandatory spaces used in format *\/$/;"	m	struct:ClockFmtScnStorage	typeref:typename:unsigned
scnTok	generic/tclDate.h	/^    ClockScanToken *scnTok;$/;"	m	struct:ClockFmtScnStorage	typeref:typename:ClockScanToken *
scnTokC	generic/tclDate.h	/^    unsigned scnTokC;$/;"	m	struct:ClockFmtScnStorage	typeref:typename:unsigned
script	generic/tclIOCmd.c	/^    Tcl_Obj *script;		\/* Script to invoke. *\/$/;"	m	struct:__anon5b8cc1910108	typeref:typename:Tcl_Obj *	file:
script	generic/tclPkg.c	/^    char *script;		\/* Script to invoke to provide this version of$/;"	m	struct:PkgAvail	typeref:typename:char *	file:
script	generic/tclThreadTest.c	/^    char *script;		\/* The script to execute. *\/$/;"	m	struct:ThreadEvent	typeref:typename:char *	file:
script	generic/tclThreadTest.c	/^    const char *script;		\/* The Tcl command this thread should$/;"	m	struct:ThreadCtrl	typeref:typename:const char *	file:
scriptCLLocPtr	generic/tclInt.h	/^    ContLineLoc *scriptCLLocPtr;\/* This table points to the location data for$/;"	m	struct:Interp	typeref:typename:ContLineLoc *
scriptFile	generic/tclInt.h	/^    Tcl_Obj *scriptFile;	\/* NULL means there is no nested source$/;"	m	struct:Interp	typeref:typename:Tcl_Obj *
scriptObj	generic/tclDictObj.c	/^    Tcl_Obj *scriptObj;		\/* The script to evaluate each time through$/;"	m	struct:__anond8412d640108	typeref:typename:Tcl_Obj *	file:
scriptObj	generic/tclInterp.c	/^    Tcl_Obj *scriptObj;		\/* The script to execute to perform the$/;"	m	struct:__anon913711770508	typeref:typename:Tcl_Obj *	file:
scriptPtr	generic/tclIO.h	/^    Tcl_Obj *scriptPtr;		\/* Script to invoke. *\/$/;"	m	struct:EventScriptRecord	typeref:typename:Tcl_Obj *
scriptRecordPtr	generic/tclIO.h	/^    EventScriptRecord *scriptRecordPtr;$/;"	m	struct:ChannelState	typeref:typename:EventScriptRecord *
scriptmemcheck	tests/tcltests.tcl	/^    proc scriptmemcheck script {$/;"	p	namespace:::::tcltests
scspec	tools/genStubs.tcl	/^proc genStubs::scspec {value} {$/;"	p	namespace:genStubs
search	generic/regexec.c	/^    struct sset *search;	\/* replacement-search-pointer memory *\/$/;"	m	struct:dfa	typeref:struct:sset *	file:
search	generic/regguts.h	/^    struct cnfa search;		\/* for fast preliminary search *\/$/;"	m	struct:guts	typeref:struct:cnfa
search	generic/tclDictObj.c	/^    Tcl_DictSearch search;	\/* The dictionary search structure. *\/$/;"	m	struct:__anond8412d640108	typeref:typename:Tcl_DictSearch	file:
search	generic/tclVar.c	/^    Tcl_HashSearch search;	\/* Info kept by the hash module about progress$/;"	m	struct:ArraySearch	typeref:typename:Tcl_HashSearch	file:
sec	generic/tcl.h	/^    long long sec;		\/* Seconds. *\/$/;"	m	struct:Tcl_Time	typeref:typename:long long
secondOfDay	generic/tclDate.h	/^    Tcl_WideInt secondOfDay;	\/* Seconds of day (in-between time only calculation) *\/$/;"	m	struct:TclDateFields	typeref:typename:Tcl_WideInt
secondOfMin	generic/tclDate.h	/^    Tcl_WideInt secondOfMin;	\/* Seconds of minute (in-between time only calculation) *\/$/;"	m	struct:TclDateFields	typeref:typename:Tcl_WideInt
seconds	generic/tclClockClassic.c	/^    Tcl_WideInt seconds;	\/* Time expressed in seconds from the Posix$/;"	m	struct:__anondf8925f30208	typeref:typename:Tcl_WideInt	file:
seconds	generic/tclDate.h	/^    Tcl_WideInt seconds;	\/* Time expressed in seconds from the Posix$/;"	m	struct:TclDateFields	typeref:typename:Tcl_WideInt
seek	compat/zlib/gzguts.h	/^    int seek;               \/* true if seek request pending *\/$/;"	m	struct:__anon361a15920108	typeref:typename:int
seek	generic/tclIORChan.c	/^    struct ForwardParamSeek seek;$/;"	m	union:ForwardParam	typeref:struct:ForwardParamSeek	file:
seek64_file_func	compat/zlib/contrib/minizip/ioapi.h	/^typedef long     (ZCALLBACK *seek64_file_func)    (voidpf opaque, voidpf stream, ZPOS64_T offset/;"	t	typeref:typename:long (ZCALLBACK *)(voidpf opaque,voidpf stream,ZPOS64_T offset,int origin)
seekMode	generic/tclIORChan.c	/^    int seekMode;		\/* I: How to seek *\/$/;"	m	struct:ForwardParamSeek	typeref:typename:int	file:
seekProc	generic/tcl.h	/^    void *seekProc;		\/* Not used any more. *\/$/;"	m	struct:Tcl_ChannelType	typeref:typename:void *
seek_file_func	compat/zlib/contrib/minizip/ioapi.h	/^typedef long     (ZCALLBACK *seek_file_func)      (voidpf opaque, voidpf stream, uLong offset, i/;"	t	typeref:typename:long (ZCALLBACK *)(voidpf opaque,voidpf stream,uLong offset,int origin)
seekoff	compat/zlib/contrib/iostream/zfstream.cpp	/^streampos gzfilebuf::seekoff( streamoff off, ios::seek_dir dir, int which ) {$/;"	f	class:gzfilebuf	typeref:typename:streampos
selectEvents	win/tclWinSock.c	/^    int selectEvents;		\/* OR'ed combination of FD_READ, FD_WRITE,$/;"	m	struct:TcpState	typeref:typename:int	file:
self	generic/tclIOGT.c	/^    Tcl_Channel self;		\/* Our own Channel handle. *\/$/;"	m	struct:TransformChannelData	typeref:typename:Tcl_Channel	file:
selfCls	generic/tclOOInt.h	/^    Class *selfCls;		\/* This object's class. *\/$/;"	m	struct:Object	typeref:typename:Class *
selfPtr	generic/tclInt.h	/^    struct Command *selfPtr;	\/* Pointer to this imported command. Needed$/;"	m	struct:ImportedCmdData	typeref:struct:Command *
send_all_trees	compat/zlib/trees.c	/^local void send_all_trees(deflate_state *s, int lcodes, int dcodes,$/;"	f	typeref:typename:local void
send_bits	compat/zlib/trees.c	/^#define send_bits(/;"	d	file:
send_bits	compat/zlib/trees.c	/^local void send_bits(deflate_state *s, int value, int length) {$/;"	f	typeref:typename:local void
send_code	compat/zlib/trees.c	/^#  define send_code(/;"	d	file:
send_tree	compat/zlib/trees.c	/^local void send_tree(deflate_state *s, ct_data *tree, int max_code) {$/;"	f	typeref:typename:local void
separatrix	generic/tclDate.h	/^    const char* separatrix;	\/* String separating messages *\/$/;"	m	struct:DateInfo	typeref:typename:const char *
separatrix	generic/tclDateClassic.c	/^    const char* separatrix;	\/* String separating messages *\/$/;"	m	struct:DateInfo	typeref:typename:const char *	file:
seq_operations	generic/tclCmdIL.c	/^static const char *const seq_operations[] = {$/;"	v	typeref:typename:const char * const[]	file:
sequence	generic/tclEncoding.c	/^    char sequence[16];		\/* Escape code that marks this encoding. *\/$/;"	m	struct:__anondb7a8e8c0308	typeref:typename:char[16]	file:
sequence	generic/tclEvent.c	/^    int sequence;		\/* Order of occurrence. *\/$/;"	m	struct:__anon850510a70208	typeref:typename:int	file:
sequenceLen	generic/tclEncoding.c	/^    unsigned sequenceLen;	\/* Length of following string. *\/$/;"	m	struct:__anondb7a8e8c0308	typeref:typename:unsigned	file:
serialChannelType	win/tclWinSerial.c	/^static const Tcl_ChannelType serialChannelType = {$/;"	v	typeref:typename:const Tcl_ChannelType	file:
service	win/tclWinDde.c	/^    ATOM service;$/;"	m	struct:__anone96dc6f10108	typeref:typename:ATOM	file:
serviceMode	generic/tclNotify.c	/^    int serviceMode;		\/* One of TCL_SERVICE_NONE or$/;"	m	struct:ThreadSpecificData	typeref:typename:int	file:
serviceModeHookProc	generic/tcl.h	/^    Tcl_ServiceModeHookProc *serviceModeHookProc;$/;"	m	struct:Tcl_NotifierProcs	typeref:typename:Tcl_ServiceModeHookProc *
set	generic/tclInt.h	/^	int (*set)(tclObjTypeInterfaceArgsListSet);$/;"	m	struct:ObjInterface::list	typeref:typename:int (*)(tclObjTypeInterfaceArgsListSet)
setChecksum	compat/zlib/contrib/dotzlib/DotZLib/CodecBase.cs	/^        protected void setChecksum(uint newSum)$/;"	m	class:DotZLib.CodecBase
setDeep	generic/tclInt.h	/^	int (*setDeep)(tclObjTypeInterfaceArgsListSetDeep);$/;"	m	struct:ObjInterface::list	typeref:typename:int (*)(tclObjTypeInterfaceArgsListSetDeep)
setElementProc	generic/tclDTrace.d	/^    void *setElementProc;$/;"	m	struct:Tcl_ObjType	file:
setFromAnyProc	generic/tcl.h	/^    Tcl_SetFromAnyProc *setFromAnyProc;$/;"	m	struct:Tcl_ObjType	typeref:typename:Tcl_SetFromAnyProc *
setFromAnyProc	generic/tclDTrace.d	/^    void *setFromAnyProc;$/;"	m	struct:Tcl_ObjType	file:
setFromAnyProc	generic/tclInt.h	/^    Tcl_SetFromAnyProc *setFromAnyProc;$/;"	m	struct:ObjectType	typeref:typename:Tcl_SetFromAnyProc *
setHttpTestOptions	tests/httpTest.tcl	/^proc httpTest::setHttpTestOptions {key args} {$/;"	p	namespace:httpTest
setLogCmd	library/safe.tcl	/^proc ::safe::setLogCmd {args} {$/;"	p	namespace:::safe
setOpt	generic/tclIORChan.c	/^    struct ForwardParamSetOpt setOpt;$/;"	m	union:ForwardParam	typeref:struct:ForwardParamSetOpt	file:
setOptionProc	generic/tcl.h	/^    Tcl_DriverSetOptionProc *setOptionProc;$/;"	m	struct:Tcl_ChannelType	typeref:typename:Tcl_DriverSetOptionProc *
setProc	generic/tclInt.h	/^    TclSetFileAttrProc *setProc;\/* The procedure for setting attrs. *\/$/;"	m	struct:TclFileAttrProcs	typeref:typename:TclSetFileAttrProc *
setSyncMode	library/safe.tcl	/^proc ::safe::setSyncMode {args} {$/;"	p	namespace:::safe
setTimerProc	generic/tcl.h	/^    Tcl_SetTimerProc *setTimerProc;$/;"	m	struct:Tcl_NotifierProcs	typeref:typename:Tcl_SetTimerProc *
setargv	win/tclAppInit.c	/^setargv($/;"	f	typeref:typename:void	file:
setbuf	compat/zlib/contrib/iostream3/zfstream.cc	/^gzfilebuf::setbuf(char_type* p,$/;"	f	class:gzfilebuf	typeref:typename:std::streambuf *
setcolor	generic/regc_color.c	/^setcolor($/;"	f	typeref:typename:color	file:
setcompression	compat/zlib/contrib/iostream3/zfstream.cc	/^gzfilebuf::setcompression(int comp_level,$/;"	f	class:gzfilebuf	typeref:typename:int
setcompression	compat/zlib/contrib/iostream3/zfstream.h	/^setcompression(gzofstream &gzs, int l, int s = Z_DEFAULT_STRATEGY)$/;"	f	typeref:typename:gzofstream &
setcompression	compat/zlib/contrib/iostream3/zfstream.h	/^setcompression(int l, int s = Z_DEFAULT_STRATEGY)$/;"	f	typeref:typename:gzomanip2<int,int>
setcompressionlevel	compat/zlib/contrib/iostream/zfstream.cpp	/^int gzfilebuf::setcompressionlevel( int comp_level ) {$/;"	f	class:gzfilebuf	typeref:typename:int
setcompressionlevel	compat/zlib/contrib/iostream/zfstream.h	/^inline gzofstream &setcompressionlevel( gzofstream &s, int l )$/;"	f	typeref:typename:gzofstream &
setcompressionlevel	compat/zlib/contrib/iostream/zfstream.h	/^inline gzomanip<int> setcompressionlevel(int l)$/;"	f	typeref:typename:gzomanip<int>
setcompressionstrategy	compat/zlib/contrib/iostream/zfstream.cpp	/^int gzfilebuf::setcompressionstrategy( int comp_strategy ) {$/;"	f	class:gzfilebuf	typeref:typename:int
setcompressionstrategy	compat/zlib/contrib/iostream/zfstream.h	/^inline gzofstream &setcompressionstrategy( gzofstream &s, int l )$/;"	f	typeref:typename:gzofstream &
setcompressionstrategy	compat/zlib/contrib/iostream/zfstream.h	/^inline gzomanip<int> setcompressionstrategy(int l)$/;"	f	typeref:typename:gzomanip<int>
setfiletime	compat/zlib/contrib/untgz/untgz.c	/^int setfiletime (char *fname,time_t ftime)$/;"	f	typeref:typename:int
setterType	generic/tclOODefineCmds.c	/^    const Tcl_MethodType setterType;$/;"	m	struct:DeclaredSlot	typeref:typename:const Tcl_MethodType	file:
setup	tests-perf/comparePerf.tcl	/^proc perf::compare::setup {argv} {$/;"	p	namespace:perf::compare
setup	tests-perf/listPerf.tcl	/^    proc setup {argv} {$/;"	p	namespace:::perf::list
setup	win/vctool.bat	/^:setup$/;"	l
setupProc	generic/tclNotify.c	/^    Tcl_EventSetupProc *setupProc;$/;"	m	struct:EventSource	typeref:typename:Tcl_EventSetupProc *	file:
shared	compat/zlib/Makefile.in	/^shared: examplesh$(EXE) minigzipsh$(EXE)$/;"	t
shared	unix/tcl.m4	/^    AC_ARG_ENABLE(shared,$/;"	e
shared	win/tcl.m4	/^    AC_ARG_ENABLE(shared,$/;"	e
shared	win/vctool.bat	/^:shared$/;"	l
shared	win/vctool.bat	/^set shared=1$/;"	v
sharedCache	generic/tclThreadAlloc.c	/^static Cache sharedCache;$/;"	v	typeref:typename:Cache	file:
sharedPtr	generic/tclThreadAlloc.c	/^static Cache *sharedPtr = &sharedCache;$/;"	v	typeref:typename:Cache *	file:
shared_noembed	win/vctool.bat	/^:shared_noembed$/;"	l
shared_noembed	win/vctool.bat	/^set shared_noembed=1$/;"	v
sharedlibdir	compat/zlib/Makefile.in	/^sharedlibdir = ${libdir}$/;"	m
sharedlibdir	compat/zlib/zlib.pc.in	/^sharedlibdir=@sharedlibdir@$/;"	v
shdqesc	unix/Makefile.in	/^shdqesc = $(subst ",\\",$(1))$/;"	m
shell	unix/Makefile.in	/^shell: ${TCL_EXE}$/;"	t
shell	win/Makefile.in	/^shell: binaries$/;"	t
shnlquote	unix/Makefile.in	/^    shnlquote = $(subst $(newline),'$$'\\n'',$(1))$/;"	m
shnlquote	unix/Makefile.in	/^    shnlquote = '$(subst $(newline),' ',$(call shqesc,$(1)))'$/;"	m
shortest	generic/rege_dfa.c	/^shortest($/;"	f	typeref:typename:chr *	file:
show	compat/zlib/configure	/^show()$/;"	f
showmanyc	compat/zlib/contrib/iostream3/zfstream.cc	/^gzfilebuf::showmanyc()$/;"	f	class:gzfilebuf	typeref:typename:std::streamsize
shqesc	unix/Makefile.in	/^shqesc = $(subst ','\\'',$(1))$/;"	m
shquote	unix/Makefile.in	/^    shquote = "$$(printf '%s\\n' $(call shnlquote,$(1)))"$/;"	m
shquote	unix/Makefile.in	/^    shquote = '$(call shnlquote,$(subst ','"'"',$(1)))'$/;"	m
shquotequote	win/Makefile.in	/^shquotequote = $(subst ',\\",$(subst ",\\",$(1)))$/;"	m
sidLen	win/tclWinTest.c	/^	DWORD sidLen;$/;"	m	struct:TestplatformChmod::__anon3c9418440108	typeref:typename:DWORD	file:
sign	generic/tclGetDate.y	/^sign	: '-' {$/;"	l	typeref:typename:Number
sign	generic/tclGetDateClassic.y	/^sign	: '-' {$/;"	l	typeref:typename:Number
sign	generic/tclTomMath.h	/^	mp_sign sign;$/;"	m	struct:mp_int	typeref:typename:mp_sign
sign	libtommath/tommath.h	/^   mp_sign sign;$/;"	m	struct:mp_int	typeref:typename:mp_sign
simpleFilesystem	generic/tclTest.c	/^static const Tcl_Filesystem simpleFilesystem = {$/;"	v	typeref:typename:const Tcl_Filesystem	file:
simpleFind	generic/regexec.c	/^simpleFind($/;"	f	typeref:typename:int	file:
sin6_addr	compat/fake-rfc2553.h	/^	struct in6_addr	sin6_addr;$/;"	m	struct:sockaddr_in6	typeref:struct:in6_addr
sin6_family	compat/fake-rfc2553.h	/^	unsigned short	sin6_family;$/;"	m	struct:sockaddr_in6	typeref:typename:unsigned short
sin6_flowinfo	compat/fake-rfc2553.h	/^	uint32_t	sin6_flowinfo;$/;"	m	struct:sockaddr_in6	typeref:typename:uint32_t
sin6_port	compat/fake-rfc2553.h	/^	uint16_t	sin6_port;$/;"	m	struct:sockaddr_in6	typeref:typename:uint16_t
sin6_scope_id	compat/fake-rfc2553.h	/^	uint32_t	sin6_scope_id;$/;"	m	struct:sockaddr_in6	typeref:typename:uint32_t
singleIndex	generic/tclCmdIL.c	/^    int singleIndex;		\/* Static space for common index case. *\/$/;"	m	struct:__anond5eb1cce0308	typeref:typename:int	file:
size	compat/zlib/contrib/untgz/untgz.c	/^  char size[12];                \/* 124 *\/$/;"	m	struct:tar_header	typeref:typename:char[12]	file:
size	compat/zlib/examples/enough.c	/^    size_t size;        \/\/ number of elements in num and done$/;"	m	struct:__anonea7b679d0208	typeref:typename:size_t	file:
size	compat/zlib/examples/enough.c	/^    size_t size;        \/\/ size of allocation$/;"	m	struct:__anonea7b679d0108	typeref:typename:size_t	file:
size	compat/zlib/examples/gzappend.c	/^    int size;                   \/* 1 << size is bytes in buf *\/$/;"	m	struct:__anon9d4ca4100108	typeref:typename:int	file:
size	compat/zlib/gzguts.h	/^    unsigned size;          \/* buffer size, zero if not allocated yet *\/$/;"	m	struct:__anon361a15920108	typeref:typename:unsigned
size	compat/zlib/test/infcover.c	/^    size_t size;                \/* requested size of allocation *\/$/;"	m	struct:mem_item	typeref:typename:size_t	file:
size	generic/tcl.h	/^    Tcl_Size size;		\/* Number of bytes in token. *\/$/;"	m	struct:Tcl_Token	typeref:typename:Tcl_Size
size	generic/tclAlloc.c	/^	size_t size;		\/* actual block size *\/$/;"	m	struct:overhead::__anon3a4776f00108	typeref:typename:size_t	file:
size	generic/tclIORTrans.c	/^    Tcl_Size size;		\/* I: #bytes to transform,$/;"	m	struct:ForwardParamTransform	typeref:typename:Tcl_Size	file:
size	generic/tclOOCall.c	/^    int size;$/;"	m	struct:DefineChain	typeref:typename:int	file:
size	generic/tclTestObjInterfaceInteger.c	/^    int size;$/;"	m	struct:ListInteger	typeref:typename:int	file:
size	library/http/http.tcl	/^proc http::size {token} {$/;"	p	namespace:http
size_centralExtra	compat/zlib/contrib/minizip/zip.c	/^    uLong size_centralExtra;$/;"	m	struct:__anon7add25cb0108	typeref:typename:uLong	file:
size_centralExtraFree	compat/zlib/contrib/minizip/zip.c	/^    uLong size_centralExtraFree; \/* Extra bytes allocated to the centralheader but that are not/;"	m	struct:__anon7add25cb0108	typeref:typename:uLong	file:
size_central_dir	compat/zlib/contrib/minizip/unzip.c	/^    ZPOS64_T size_central_dir;     \/* size of the central directory  *\/$/;"	m	struct:__anon3259ecee0208	typeref:typename:ZPOS64_T	file:
size_centralheader	compat/zlib/contrib/minizip/zip.c	/^    uLong size_centralheader;   \/* size of the central header for cur file *\/$/;"	m	struct:__anon7add25cb0108	typeref:typename:uLong	file:
size_comment	compat/zlib/contrib/minizip/unzip.h	/^    uLong size_comment;         \/* size of the global comment of the zipfile *\/$/;"	m	struct:unz_global_info64_s	typeref:typename:uLong
size_comment	compat/zlib/contrib/minizip/unzip.h	/^    uLong size_comment;         \/* size of the global comment of the zipfile *\/$/;"	m	struct:unz_global_info_s	typeref:typename:uLong
size_file_comment	compat/zlib/contrib/minizip/unzip.h	/^    uLong size_file_comment;    \/* file comment length             2 bytes *\/$/;"	m	struct:unz_file_info64_s	typeref:typename:uLong
size_file_comment	compat/zlib/contrib/minizip/unzip.h	/^    uLong size_file_comment;    \/* file comment length             2 bytes *\/$/;"	m	struct:unz_file_info_s	typeref:typename:uLong
size_file_extra	compat/zlib/contrib/minizip/unzip.h	/^    uLong size_file_extra;      \/* extra field length              2 bytes *\/$/;"	m	struct:unz_file_info64_s	typeref:typename:uLong
size_file_extra	compat/zlib/contrib/minizip/unzip.h	/^    uLong size_file_extra;      \/* extra field length              2 bytes *\/$/;"	m	struct:unz_file_info_s	typeref:typename:uLong
size_filename	compat/zlib/contrib/minizip/unzip.h	/^    uLong size_filename;        \/* filename length                 2 bytes *\/$/;"	m	struct:unz_file_info64_s	typeref:typename:uLong
size_filename	compat/zlib/contrib/minizip/unzip.h	/^    uLong size_filename;        \/* filename length                 2 bytes *\/$/;"	m	struct:unz_file_info_s	typeref:typename:uLong
size_local_extrafield	compat/zlib/contrib/minizip/unzip.c	/^    uInt  size_local_extrafield;\/* size of the local extra field *\/$/;"	m	struct:__anon3259ecee0108	typeref:typename:uInt	file:
sizes	libtommath/bn_mp_prime_rabin_miller_trials.c	/^} sizes[] = {$/;"	v	typeref:typename:const struct __anon0cbcdfbb0108[]
skip	compat/zlib/examples/gzappend.c	/^local void skip(file *in, unsigned n)$/;"	f	typeref:typename:local void
skip	compat/zlib/gzguts.h	/^    z_off64_t skip;         \/* amount to skip (already rewound if backwards) *\/$/;"	m	struct:__anon361a15920108	typeref:typename:z_off64_t
skip	generic/regc_lex.c	/^skip($/;"	f	typeref:typename:void	file:
skip	generic/tclOOInt.h	/^    Tcl_Size skip;		\/* Current number of arguments to skip; can$/;"	m	struct:CallContext	typeref:typename:Tcl_Size
skipUnlink	generic/tclIOUtil.c	/^skipUnlink($/;"	f	typeref:typename:int	file:
slast	generic/regguts.h	/^    struct state *slast;	\/* tail of the chain *\/$/;"	m	struct:nfa	typeref:struct:state *
sleeping	macosx/tclMacOSXNotify.c	/^    int sleeping;		\/* True if runloop is inside Tcl_Sleep. *\/$/;"	m	struct:ThreadSpecificData	typeref:typename:int	file:
sliceProc	generic/tclDTrace.d	/^    void *sliceProc;$/;"	m	struct:Tcl_ObjType	file:
slide_hash	compat/zlib/deflate.c	/^local void slide_hash(deflate_state *s) {$/;"	f	typeref:typename:local void
slots	generic/tclInt.h	/^    Tcl_Obj *slots[TCLFLEXARRAY];$/;"	m	struct:ListStore	typeref:typename:Tcl_Obj * []
slots	generic/tclOODefineCmds.c	/^static const DeclaredSlot slots[] = {$/;"	v	typeref:typename:const DeclaredSlot[]	file:
slurp	tests-perf/comparePerf.tcl	/^proc perf::compare::slurp {testrun_path} {$/;"	p	namespace:perf::compare
smalldfa	generic/regexec.c	/^struct smalldfa {$/;"	s	file:
smaller	compat/zlib/trees.c	/^#define smaller(/;"	d	file:
snprintf	compat/zlib/contrib/minizip/minizip.c	/^#           define snprintf _snprintf$/;"	d	file:
snprintf	compat/zlib/gzguts.h	/^#  define snprintf _snprintf$/;"	d
snprintf	compat/zlib/test/minigzip.c	/^#  define snprintf _snprintf$/;"	d	file:
snprintf	generic/tclInt.h	/^#   define snprintf _snprintf$/;"	d
snprintf	unix/dltest/pkgb.c	/^#   define snprintf _snprintf$/;"	d	file:
snprintf	win/nmakehlp.c	/^#define   snprintf	_snprintf$/;"	d	file:
sockaddr_in6	compat/fake-rfc2553.h	/^struct sockaddr_in6 {$/;"	s
sockaddr_storage	compat/fake-rfc2553.h	/^struct sockaddr_storage {$/;"	s
socket	tests/twapiTlsPlus.tcl	/^proc twapiTlsPlus::socket {args} {$/;"	p	namespace:twapiTlsPlus
socket	win/tclWinSock.c	/^    SOCKET socket;		\/* Socket descriptor that is ready. Used to$/;"	m	struct:__anon3aeaf8540208	typeref:typename:SOCKET	file:
socketList	win/tclWinSock.c	/^    TcpState *socketList;	\/* Every open socket in this thread has an$/;"	m	struct:__anon3aeaf8540308	typeref:typename:TcpState *	file:
socketListLock	win/tclWinSock.c	/^    HANDLE socketListLock;	\/* Win32 Event to lock the socketList *\/$/;"	m	struct:__anon3aeaf8540308	typeref:typename:HANDLE	file:
socketOptionsEnum	generic/tclIOCmd.c	/^    enum socketOptionsEnum {$/;"	g	function:Tcl_SocketObjCmd	file:
socketThread	win/tclWinSock.c	/^    HANDLE socketThread;	\/* Thread handling the window *\/$/;"	m	struct:__anon3aeaf8540308	typeref:typename:HANDLE	file:
sockets	win/tclWinSock.c	/^    struct TcpFdList *sockets;	\/* Windows SOCKET handle. *\/$/;"	m	struct:TcpState	typeref:struct:TcpFdList *	file:
socklen_t	unix/configure.ac	/^    AC_DEFINE(socklen_t, int, [Define as int if socklen_t is not available])$/;"	d
socklen_t	unix/tclUnixPort.h	/^typedef int socklen_t;$/;"	t	typeref:typename:int
socklen_t	win/tclWinPort.h	/^#define socklen_t /;"	d
sodipodi	tools/tclsh.svg	/^   inkscape:export-ydpi="8.4399996">$/;"	n	uri:http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd
sortMode	generic/tclCmdIL.c	/^    int sortMode;		\/* The sort mode. One of SORTMODE_* values$/;"	m	struct:__anond5eb1cce0308	typeref:typename:int	file:
sortins	generic/regc_nfa.c	/^sortins($/;"	f	typeref:typename:void	file:
sortins_cmp	generic/regc_nfa.c	/^sortins_cmp($/;"	f	typeref:typename:int	file:
sortouts	generic/regc_nfa.c	/^sortouts($/;"	f	typeref:typename:void	file:
sortouts_cmp	generic/regc_nfa.c	/^sortouts_cmp($/;"	f	typeref:typename:int	file:
source	generic/tclCompile.h	/^    const char *source;		\/* The source string being compiled by$/;"	m	struct:CompileEnv	typeref:typename:const char *
source	generic/tclCompile.h	/^    const char *source;		\/* The source string from which this ByteCode$/;"	m	struct:ByteCode	typeref:typename:const char *
source	library/init.tcl	/^proc ::tcl::Pkg::source {filename} {$/;"	p	namespace:::tcl::Pkg
sourceBucket	generic/tclThreadAlloc.c	/^#define sourceBucket	/;"	d	file:
sourceLibraryDir	win/tclWinInit.c	/^static ProcessGlobalValue sourceLibraryDir =$/;"	v	typeref:typename:ProcessGlobalValue	file:
sourceObj	generic/tclEvent.c	/^    Tcl_Obj *sourceObj;		\/* Name of the event source, either a$/;"	m	struct:__anon850510a70208	typeref:typename:Tcl_Obj *	file:
sourceObjs	generic/tclInt.h	/^	Tcl_Obj *const *sourceObjs;$/;"	m	struct:Interp::__anon1eb6b3550908	typeref:typename:Tcl_Obj * const *
space	macosx/GNUmakefile	/^space			:= ${empty} ${empty}$/;"	m
spaceAvl	generic/tcl.h	/^    Tcl_Size spaceAvl;		\/* Total number of bytes available for the$/;"	m	struct:Tcl_DString	typeref:typename:Tcl_Size
spaceAvl	generic/tclPreserve.c	/^static size_t spaceAvl = 0;	\/* Total number of structures available at$/;"	v	typeref:typename:size_t	file:
spaceCharTable	generic/regc_locale.c	/^static const chr spaceCharTable[] = {$/;"	v	typeref:typename:const chr[]	file:
spaceRangeTable	generic/regc_locale.c	/^static const crange spaceRangeTable[] = {$/;"	v	typeref:typename:const crange[]	file:
spaceused	generic/regcomp.c	/^    size_t spaceused;		\/* approx. space used for compilation *\/$/;"	m	struct:vars	typeref:typename:size_t	file:
spanLength	generic/tclInt.h	/^    Tcl_Size spanLength;	\/* Number of elements in the span. *\/$/;"	m	struct:ListSpan	typeref:typename:Tcl_Size
spanPtr	generic/tclInt.h	/^    ListSpan *spanPtr;		\/* If not NULL, the span holds the range of$/;"	m	struct:ListRep	typeref:typename:ListSpan *
spanStart	generic/tclInt.h	/^    Tcl_Size spanStart;		\/* Starting index of the span. *\/$/;"	m	struct:ListSpan	typeref:typename:Tcl_Size
spanned_list	tests-perf/listPerf.tcl	/^    proc spanned_list {len} {$/;"	p	namespace:::perf::list
spec	generic/tclGetDate.y	/^spec	: \/* NULL *\/$/;"	l
spec	generic/tclGetDateClassic.y	/^spec	: \/* NULL *\/$/;"	l
specialcolors	generic/regc_nfa.c	/^specialcolors($/;"	f	typeref:typename:void	file:
speed	unix/tclUnixChan.c	/^static const struct {int baud; speed_t speed;} speeds[] = {$/;"	m	struct:__anone1e2a72a0408	typeref:typename:speed_t	file:
speeds	unix/tclUnixChan.c	/^static const struct {int baud; speed_t speed;} speeds[] = {$/;"	v	typeref:typename:const struct __anone1e2a72a0408[]
spinLockLockInitControl	macosx/tclMacOSXNotify.c	/^static pthread_once_t spinLockLockInitControl = PTHREAD_ONCE_INIT;$/;"	v	typeref:typename:pthread_once_t	file:
split-directive	tools/tcltk-man2html-utils.tcl	/^proc split-directive {line opname restname} {$/;"	p
split_describe	tests-perf/listPerf.tcl	/^    proc split_describe {len} {$/;"	p	namespace:::perf::list
split_perf	tests-perf/listPerf.tcl	/^    proc split_perf {} {$/;"	p	namespace:::perf::list
src	generic/tclIORChan.c	/^    Tcl_ThreadId src;		\/* Originating thread. *\/$/;"	m	struct:ForwardingResult	typeref:typename:Tcl_ThreadId	file:
src	generic/tclIORTrans.c	/^    Tcl_ThreadId src;		\/* Originating thread. *\/$/;"	m	struct:ForwardingResult	typeref:typename:Tcl_ThreadId	file:
srcCount	generic/tclInt.h	/^    size_t srcCount[32];	\/* Source size distribution: # of srcs of$/;"	m	struct:ByteCodeStats	typeref:typename:size_t[32]
srcDeltaStart	generic/tclCompile.h	/^    unsigned char *srcDeltaStart;$/;"	m	struct:ByteCode	typeref:typename:unsigned char *
srcLengthStart	generic/tclCompile.h	/^    unsigned char *srcLengthStart;$/;"	m	struct:ByteCode	typeref:typename:unsigned char *
srcOffset	generic/tclCompile.h	/^    Tcl_Size srcOffset;		\/* Command location to find the entry. *\/$/;"	m	struct:__anone79d5a530408	typeref:typename:Tcl_Size
srcOffset	generic/tclCompile.h	/^    Tcl_Size srcOffset;		\/* Offset of first char of the command. *\/$/;"	m	struct:__anone79d5a530308	typeref:typename:Tcl_Size
srcPtr	generic/tcl.h	/^    void *srcPtr;		\/* Value to be used in setting dst; usage$/;"	m	struct:__anon937aefea0b08	typeref:typename:void *
srcThreadId	generic/tclThreadTest.c	/^    Tcl_ThreadId srcThreadId;	\/* Id of sending thread, in case it dies *\/$/;"	m	struct:ThreadEventResult	typeref:typename:Tcl_ThreadId	file:
ss	generic/regexec.c	/^    struct sset *ss;$/;"	m	struct:arcp	typeref:struct:sset *	file:
ss_family	compat/fake-rfc2553.h	/^# define ss_family /;"	d
ss_sa	compat/fake-rfc2553.h	/^	struct sockaddr	ss_sa;$/;"	m	struct:sockaddr_storage	typeref:struct:sockaddr
sset	generic/regexec.c	/^struct sset {			\/* state set *\/$/;"	s	file:
ssets	generic/regexec.c	/^    struct sset *ssets;		\/* state-set cache *\/$/;"	m	struct:dfa	typeref:struct:sset *	file:
ssets	generic/regexec.c	/^    struct sset ssets[FEWSTATES*2];$/;"	m	struct:smalldfa	typeref:struct:sset[]	file:
st_atim	generic/tcl.h	/^	struct {long tv_sec;} st_atim;$/;"	m	struct:__anon937aefea0108	typeref:struct:__anon937aefea0108::__anon937aefea0208
st_ctim	generic/tcl.h	/^	struct {long tv_sec;} st_ctim;$/;"	m	struct:__anon937aefea0108	typeref:struct:__anon937aefea0108::__anon937aefea0408
st_dev	generic/tcl.h	/^	unsigned st_dev;$/;"	m	struct:__anon937aefea0108	typeref:typename:unsigned
st_gid	generic/tcl.h	/^	short st_gid;$/;"	m	struct:__anon937aefea0108	typeref:typename:short
st_ino	generic/tcl.h	/^	unsigned short st_ino;$/;"	m	struct:__anon937aefea0108	typeref:typename:unsigned short
st_mode	generic/tcl.h	/^	unsigned short st_mode;$/;"	m	struct:__anon937aefea0108	typeref:typename:unsigned short
st_mtim	generic/tcl.h	/^	struct {long tv_sec;} st_mtim;$/;"	m	struct:__anon937aefea0108	typeref:struct:__anon937aefea0108::__anon937aefea0308
st_nlink	generic/tcl.h	/^	short st_nlink;$/;"	m	struct:__anon937aefea0108	typeref:typename:short
st_rdev	generic/tcl.h	/^	unsigned st_rdev;$/;"	m	struct:__anon937aefea0108	typeref:typename:unsigned
st_size	generic/tcl.h	/^	long long st_size;$/;"	m	struct:__anon937aefea0108	typeref:typename:long long
st_uid	generic/tcl.h	/^	short st_uid;$/;"	m	struct:__anon937aefea0108	typeref:typename:short
stack	generic/tclExecute.c	/^    Tcl_Obj *stack[1];		\/* Start of the actual combined catch and obj$/;"	m	struct:__anon999f4b180108	typeref:typename:Tcl_Obj * [1]	file:
stackBound	generic/tclClockFmt.c	/^    ClockFmtScnStorage *stackBound;$/;"	m	struct:ClockFmtScnStorage_GC	typeref:typename:ClockFmtScnStorage *	file:
stackDepth	generic/tclCompile.h	/^    Tcl_Size stackDepth;	\/* The stack depth at the point where the$/;"	m	struct:ExceptionAux	typeref:typename:Tcl_Size
stackEffect	generic/tclCompile.h	/^    int stackEffect;		\/* The worst-case balance stack effect of the$/;"	m	struct:InstructionDesc	typeref:typename:int
stackLevel	generic/tclInt.h	/^    void *stackLevel;		\/* C stack frame reference. Used to try to$/;"	m	struct:CoroutineData	typeref:typename:void *
stackPtr	generic/tclClockFmt.c	/^    ClockFmtScnStorage *stackPtr;$/;"	m	struct:ClockFmtScnStorage_GC	typeref:typename:ClockFmtScnStorage *	file:
stackWords	generic/tclInt.h	/^    Tcl_Obj *stackWords[TCLFLEXARRAY];$/;"	m	struct:ExecStack	typeref:typename:Tcl_Obj * []
start	compat/zlib/gzguts.h	/^    z_off64_t start;        \/* where the gzip data started, for rewinding *\/$/;"	m	struct:__anon361a15920108	typeref:typename:z_off64_t
start	generic/regc_locale.c	/^    chr start;$/;"	m	struct:__anonf52f7cd20108	typeref:typename:chr	file:
start	generic/regexec.c	/^    chr *start;			\/* start of string *\/$/;"	m	struct:vars	typeref:typename:chr *	file:
start	generic/tcl.h	/^    Tcl_Size start;		\/* Character offset of first character in$/;"	m	struct:Tcl_RegExpIndices	typeref:typename:Tcl_Size
start	generic/tcl.h	/^    const char *start;		\/* First character in token. *\/$/;"	m	struct:Tcl_Token	typeref:typename:const char *
start	generic/tclArithSeries.c	/^    Tcl_WideInt start;$/;"	m	struct:__anond76bba880208	typeref:typename:Tcl_WideInt	file:
start	generic/tclArithSeries.c	/^    double start;$/;"	m	struct:__anond76bba880308	typeref:typename:double	file:
start	generic/tclCompile.h	/^    Tcl_Size start;		\/* Starting line for compiled script. Needed$/;"	m	struct:__anone79d5a530508	typeref:typename:Tcl_Size
start	generic/tclDate.h	/^	const char *start;$/;"	m	struct:ClockFormatToken::__anone8f8f7280308	typeref:typename:const char *
start	generic/tclDate.h	/^	const char *start;$/;"	m	struct:ClockScanToken::__anone8f8f7280208	typeref:typename:const char *
start	generic/tclScan.c	/^    Tcl_UniChar start;$/;"	m	struct:__anon0c1044aa0108	typeref:typename:Tcl_UniChar	file:
start	win/tclWinConsole.c	/^    Tcl_Size start;		\/* Start of the data within the buffer. *\/$/;"	m	struct:RingBuffer	typeref:typename:Tcl_Size	file:
startBuilding	win/buildall.vc.bat	/^:startBuilding$/;"	l
startCmd	generic/tclTrace.c	/^    char *startCmd;		\/* Used for bookkeeping with step execution$/;"	m	struct:__anonfe0b53740308	typeref:typename:char *	file:
startLevel	generic/tclTrace.c	/^    Tcl_Size startLevel;	\/* Used for bookkeeping with step execution$/;"	m	struct:__anonfe0b53740308	typeref:typename:Tcl_Size	file:
startLine	generic/tclAssembly.c	/^    int startLine;		\/* Line number in the input script of the$/;"	m	struct:BasicBlock	typeref:typename:int	file:
startOffset	generic/tclAssembly.c	/^    int startOffset;		\/* Instruction offset of the start of the$/;"	m	struct:BasicBlock	typeref:typename:int	file:
startOffset	generic/tclAssembly.c	/^    int startOffset;		\/* Start offset in the bytecode array *\/$/;"	m	struct:CodeRange	typeref:typename:int	file:
statProc	generic/tcl.h	/^    Tcl_FSStatProc *statProc;	\/* Called by 'Tcl_FSStat()'.  Provided by any$/;"	m	struct:Tcl_Filesystem	typeref:typename:Tcl_FSStatProc *
stat_desc	compat/zlib/deflate.h	/^    const static_tree_desc *stat_desc;  \/* the corresponding static tree *\/$/;"	m	struct:tree_desc_s	typeref:typename:const static_tree_desc *
state	compat/zlib/contrib/blast/blast.c	/^struct state {$/;"	s	file:
state	compat/zlib/contrib/dotzlib/DotZLib/DotZLib.cs	/^        uint state;$/;"	f	struct:DotZLib.ZStream
state	compat/zlib/contrib/puff/puff.c	/^struct state {$/;"	s	file:
state	compat/zlib/zlib.h	/^    struct internal_state FAR *state; \/* not visible by applications *\/$/;"	m	struct:z_stream_s	typeref:struct:internal_state FAR *
state	generic/regguts.h	/^struct state {$/;"	s
state	generic/tclIO.c	/^    Tcl_EncodingState state;	\/* The encoding state just before the last$/;"	m	struct:GetsState	typeref:typename:Tcl_EncodingState	file:
state	generic/tclIO.h	/^    struct ChannelState *state; \/* Split out state information *\/$/;"	m	struct:Channel	typeref:struct:ChannelState *
state	win/tclWinInt.h	/^    volatile LONG state;	\/* Indicates current state of the thread *\/$/;"	m	struct:TclPipeThreadInfo	typeref:typename:volatile LONG
statePtr	generic/tclIO.c	/^    ChannelState *statePtr;	\/* The saved lookup result *\/$/;"	m	struct:ResolvedChanName	typeref:typename:ChannelState *	file:
statePtr	unix/tclUnixSock.c	/^    TcpState *statePtr;$/;"	m	struct:TcpFdList	typeref:typename:TcpState *	file:
statePtr	win/tclWinSock.c	/^    TcpState *statePtr;$/;"	m	struct:TcpFdList	typeref:typename:TcpState *	file:
states	generic/regexec.c	/^    unsigned *states;		\/* pointer to bitvector *\/$/;"	m	struct:sset	typeref:typename:unsigned *	file:
states	generic/regguts.h	/^    struct carc **states;	\/* vector of pointers to outarc lists *\/$/;"	m	struct:cnfa	typeref:struct:carc **
states	generic/regguts.h	/^    struct state *states;	\/* state-chain header *\/$/;"	m	struct:nfa	typeref:struct:state *
statesarea	generic/regexec.c	/^    unsigned *statesarea;	\/* bitvector storage *\/$/;"	m	struct:dfa	typeref:typename:unsigned *	file:
statesarea	generic/regexec.c	/^    unsigned statesarea[FEWSTATES*2 + WORK];$/;"	m	struct:smalldfa	typeref:typename:unsigned[]	file:
static	compat/zlib/Makefile.in	/^static: example$(EXE) minigzip$(EXE)$/;"	t
static	win/vctool.bat	/^:static$/;"	l
static	win/vctool.bat	/^set static=1$/;"	v
staticAuxDataArraySpace	generic/tclCompile.h	/^    AuxData staticAuxDataArraySpace[COMPILEENV_INIT_AUX_DATA_SIZE];$/;"	m	struct:CompileEnv	typeref:typename:AuxData[]
staticBuckets	generic/tcl.h	/^    Tcl_HashEntry *staticBuckets[TCL_SMALL_HASH_TABLE];$/;"	m	struct:Tcl_HashTable	typeref:typename:Tcl_HashEntry * []
staticBuckets	generic/tclInt.h	/^    LiteralEntry *staticBuckets[TCL_SMALL_HASH_TABLE];$/;"	m	struct:LiteralTable	typeref:typename:LiteralEntry * []
staticChain	generic/tclOOInt.h	/^    MInvoke staticChain[CALL_CHAIN_STATIC_SIZE];$/;"	m	struct:CallChain	typeref:typename:MInvoke[]
staticCmdMapSpace	generic/tclCompile.h	/^    CmdLocation staticCmdMapSpace[COMPILEENV_INIT_CMD_MAP_SIZE];$/;"	m	struct:CompileEnv	typeref:typename:CmdLocation[]
staticCodeSpace	generic/tclCompile.h	/^    unsigned char staticCodeSpace[COMPILEENV_INIT_CODE_BYTES];$/;"	m	struct:CompileEnv	typeref:typename:unsigned char[]
staticExAuxArraySpace	generic/tclCompile.h	/^    ExceptionAux staticExAuxArraySpace[COMPILEENV_INIT_EXCEPT_RANGES];$/;"	m	struct:CompileEnv	typeref:typename:ExceptionAux[]
staticExceptArraySpace	generic/tclCompile.h	/^    ExceptionRange staticExceptArraySpace[COMPILEENV_INIT_EXCEPT_RANGES];$/;"	m	struct:CompileEnv	typeref:typename:ExceptionRange[]
staticFixupSpace	generic/tclCompile.h	/^    JumpFixup staticFixupSpace[JUMPFIXUP_INIT_ENTRIES];$/;"	m	struct:JumpFixupArray	typeref:typename:JumpFixup[]
staticLiteralSpace	generic/tclCompile.h	/^    LiteralEntry staticLiteralSpace[COMPILEENV_INIT_NUM_OBJECTS];$/;"	m	struct:CompileEnv	typeref:typename:LiteralEntry[]
staticSpace	generic/tcl.h	/^    char staticSpace[TCL_DSTRING_STATIC_SIZE];$/;"	m	struct:Tcl_DString	typeref:typename:char[]
staticTokens	generic/tcl.h	/^    Tcl_Token staticTokens[NUM_STATIC_TOKENS];$/;"	m	struct:Tcl_Parse	typeref:typename:Tcl_Token[]
static_bl_desc	compat/zlib/trees.c	/^local TCONST static_tree_desc static_bl_desc =$/;"	v	typeref:typename:local TCONST static_tree_desc
static_d_desc	compat/zlib/trees.c	/^local TCONST static_tree_desc static_d_desc =$/;"	v	typeref:typename:local TCONST static_tree_desc
static_dtree	compat/zlib/trees.c	/^local ct_data static_dtree[D_CODES];$/;"	v	typeref:typename:local ct_data[]
static_dtree	compat/zlib/trees.h	/^local const ct_data static_dtree[D_CODES] = {$/;"	v	typeref:typename:local const ct_data[]
static_l_desc	compat/zlib/trees.c	/^local TCONST static_tree_desc static_l_desc =$/;"	v	typeref:typename:local TCONST static_tree_desc
static_len	compat/zlib/deflate.h	/^    ulg static_len;     \/* bit length of current block with static trees *\/$/;"	m	struct:internal_state	typeref:typename:ulg
static_ltree	compat/zlib/trees.c	/^local ct_data static_ltree[L_CODES+2];$/;"	v	typeref:typename:local ct_data[]
static_ltree	compat/zlib/trees.h	/^local const ct_data static_ltree[L_CODES+2] = {$/;"	v	typeref:typename:local const ct_data[]
static_noembed	win/vctool.bat	/^:static_noembed$/;"	l
static_noembed	win/vctool.bat	/^set static_noembed=1$/;"	v
static_tree	compat/zlib/trees.c	/^    const ct_data *static_tree;  \/* static tree or NULL *\/$/;"	m	struct:static_tree_desc_s	typeref:typename:const ct_data *	file:
static_tree_desc	compat/zlib/deflate.h	/^typedef struct static_tree_desc_s  static_tree_desc;$/;"	t	typeref:struct:static_tree_desc_s
static_tree_desc_s	compat/zlib/trees.c	/^struct static_tree_desc_s {$/;"	s	file:
stats	generic/tclInt.h	/^    ByteCodeStats stats;	\/* Holds compilation and execution statistics$/;"	m	struct:Interp	typeref:typename:ByteCodeStats
status	compat/waitpid.c	/^    WAIT_STATUS_TYPE status;	\/* Status returned when child exited or$/;"	m	struct:WaitInfo	typeref:typename:WAIT_STATUS_TYPE	file:
status	compat/zlib/contrib/inflate86/inffas86.c	/^\/*116   72 *\/ unsigned status;          \/*          set when state chng*\/$/;"	m	struct:inflate_fast::inffast_ar	typeref:typename:unsigned	file:
status	compat/zlib/deflate.h	/^    int   status;        \/* as the name implies *\/$/;"	m	struct:internal_state	typeref:typename:int
status	generic/tclClock.c	/^	int status;			\/* return code status *\/$/;"	m	struct:ClockSafeCatchCmd::__anond46bc7710208	typeref:typename:int	file:
status	generic/tclProcess.c	/^    TclProcessWaitStatus status;\/* Process status. *\/$/;"	m	struct:ProcessInfo	typeref:typename:TclProcessWaitStatus	file:
status	generic/tclResult.c	/^    int status;			\/* return code status *\/$/;"	m	struct:__anon298490c40108	typeref:typename:int	file:
status	library/http/http.tcl	/^proc http::status {token} {$/;"	p	namespace:http
status	win/tclWinInt.h	/^    int status;$/;"	m	struct:TCLEXCEPTION_REGISTRATION	typeref:typename:int
std-option-toc	tools/tcltk-man2html-utils.tcl	/^proc std-option-toc {name page} {$/;"	p
stderrChannel	generic/tclIO.c	/^    Tcl_Channel stderrChannel;	\/* Static variable for the stderr channel. *\/$/;"	m	struct:__anon5e04fc9d0108	typeref:typename:Tcl_Channel	file:
stderrInitialized	generic/tclIO.c	/^    int stderrInitialized;$/;"	m	struct:__anon5e04fc9d0108	typeref:typename:int	file:
stdinChannel	generic/tclIO.c	/^    Tcl_Channel stdinChannel;	\/* Static variable for the stdin channel. *\/$/;"	m	struct:__anon5e04fc9d0108	typeref:typename:Tcl_Channel	file:
stdinInitialized	generic/tclIO.c	/^    int stdinInitialized;$/;"	m	struct:__anon5e04fc9d0108	typeref:typename:int	file:
stdoutChannel	generic/tclIO.c	/^    Tcl_Channel stdoutChannel;	\/* Static variable for the stdout channel. *\/$/;"	m	struct:__anon5e04fc9d0108	typeref:typename:Tcl_Channel	file:
stdoutInitialized	generic/tclIO.c	/^    int stdoutInitialized;$/;"	m	struct:__anon5e04fc9d0108	typeref:typename:int	file:
stdoutObjPtr	generic/tclIOCmd.c	/^    Tcl_Obj *stdoutObjPtr;	\/* Cached stdout channel Tcl_Obj *\/$/;"	m	struct:__anon5b8cc1910208	typeref:typename:Tcl_Obj *	file:
stdump	generic/regcomp.c	/^stdump($/;"	f	typeref:typename:void	file:
step	generic/tclArithSeries.c	/^    Tcl_WideInt step;$/;"	m	struct:__anond76bba880208	typeref:typename:Tcl_WideInt	file:
step	generic/tclArithSeries.c	/^    double step;$/;"	m	struct:__anond76bba880308	typeref:typename:double	file:
stepTrace	generic/tclTrace.c	/^    Tcl_Trace stepTrace;	\/* Used for execution traces, when tracing$/;"	m	struct:__anonfe0b53740308	typeref:typename:Tcl_Trace	file:
stflags	generic/regguts.h	/^    char *stflags;		\/* vector of per-state flags bytes *\/$/;"	m	struct:cnfa	typeref:typename:char *
stid	generic/regcomp.c	/^stid($/;"	f	typeref:typename:const char *	file:
stop	generic/regcomp.c	/^    const chr *stop;		\/* end of string *\/$/;"	m	struct:vars	typeref:typename:const chr *	file:
stop	generic/regexec.c	/^    chr *stop;			\/* just past end of string *\/$/;"	m	struct:vars	typeref:typename:chr *	file:
stop	unix/tclUnixChan.c	/^    int stop;$/;"	m	struct:__anone1e2a72a0308	typeref:typename:int	file:
storePtr	generic/tclInt.h	/^    ListStore *storePtr;	\/* element array shared amongst different$/;"	m	struct:ListRep	typeref:typename:ListStore *
stored	compat/zlib/contrib/puff/puff.c	/^local int stored(struct state *s)$/;"	f	typeref:typename:local int
stored	compat/zlib/examples/gzlog.c	/^    uint stored;    \/* bytes currently in last stored block *\/$/;"	m	struct:log	typeref:typename:uint	file:
str	compat/zlib/examples/enough.c	/^    char *str;          \/\/ pointer to allocated string$/;"	m	struct:__anonea7b679d0108	typeref:typename:char *	file:
strCmpFn_t	generic/tclCmdMZ.c	/^    typedef int (*strCmpFn_t)(const char *, const char *);$/;"	t	function:TclNRSwitchObjCmd	typeref:typename:int (*)(const char *,const char *)	file:
strValuePtr	generic/tclCmdIL.c	/^	const char *strValuePtr;$/;"	m	union:SortElement::__anond5eb1cce010a	typeref:typename:const char *	file:
strategy	compat/zlib/deflate.h	/^    int strategy; \/* favor or force Huffman coding*\/$/;"	m	struct:internal_state	typeref:typename:int
strategy	compat/zlib/gzguts.h	/^    int strategy;           \/* compression strategy *\/$/;"	m	struct:__anon361a15920108	typeref:typename:int
strcasecmp	compat/strncasecmp.c	/^strcasecmp($/;"	f	typeref:typename:int
strcasecmp	win/tclWinPort.h	/^#    define strcasecmp /;"	d
strcmpcasenosensitive_internal	compat/zlib/contrib/minizip/unzip.c	/^local int strcmpcasenosensitive_internal(const char* fileName1, const char* fileName2) {$/;"	f	typeref:typename:local int
strdup	compat/zlib/contrib/untgz/untgz.c	/^#    define strdup(str)         _strdup(/;"	d	file:
stream	compat/zlib/contrib/minizip/unzip.c	/^    z_stream stream;            \/* zLib stream structure for inflate *\/$/;"	m	struct:__anon3259ecee0108	typeref:typename:z_stream	file:
stream	compat/zlib/contrib/minizip/zip.c	/^    z_stream stream;            \/* zLib stream structure for inflate *\/$/;"	m	struct:__anon7add25cb0108	typeref:typename:z_stream	file:
stream	generic/tclZlib.c	/^    z_stream stream;		\/* The interface to the zlib library. *\/$/;"	m	struct:__anon1d0b6d960208	typeref:typename:z_stream	file:
streamEnd	generic/tclZlib.c	/^    int streamEnd;		\/* If we've got to end-of-stream. *\/$/;"	m	struct:__anon1d0b6d960208	typeref:typename:int	file:
stream_initialised	compat/zlib/contrib/minizip/unzip.c	/^    uLong stream_initialised;   \/* flag set if stream structure is initialised*\/$/;"	m	struct:__anon3259ecee0108	typeref:typename:uLong	file:
stream_initialised	compat/zlib/contrib/minizip/zip.c	/^    int  stream_initialised;    \/* 1 is stream is initialised *\/$/;"	m	struct:__anon7add25cb0108	typeref:typename:int	file:
string	generic/tcl.h	/^	char string[1];		\/* String for key. The actual size will be as$/;"	m	union:Tcl_HashEntry::__anon937aefea080a	typeref:typename:char[1]
string	generic/tcl.h	/^    char *string;		\/* Points to beginning of string: either$/;"	m	struct:Tcl_DString	typeref:typename:char *
string	generic/tcl.h	/^    const char *string;		\/* The original command string passed to$/;"	m	struct:Tcl_Parse	typeref:typename:const char *
string	generic/tclCkalloc.c	/^    char string[TCLFLEXARRAY];	\/* Actual size of string will be as large as$/;"	m	struct:__anon91be715e0108	typeref:typename:char[]	file:
string	generic/tclInt.h	/^    struct string {$/;"	s	struct:ObjInterface
string	generic/tclInt.h	/^    } string;$/;"	m	struct:ObjInterface	typeref:struct:ObjInterface::string
string	generic/tclRegexp.h	/^    const char *string;		\/* Last string passed to Tcl_RegExpExec. *\/$/;"	m	struct:TclRegexp	typeref:typename:const char *
string	generic/tclTestABSList.c	/^    char *string;	\/\/ NULL terminated utf-8 string$/;"	m	struct:LString	typeref:typename:char *	file:
stringAlloc	generic/tclStringRep.h	/^#define stringAlloc(/;"	d
stringAttemptAlloc	generic/tclStringRep.h	/^#define stringAttemptAlloc(/;"	d
stringAttemptRealloc	generic/tclStringRep.h	/^#define stringAttemptRealloc(/;"	d
stringRealloc	generic/tclStringRep.h	/^#define stringRealloc(/;"	d
string_clear	compat/zlib/examples/enough.c	/^local void string_clear(string_t *s) {$/;"	f	typeref:typename:local void
string_free	compat/zlib/examples/enough.c	/^local void string_free(string_t *s) {$/;"	f	typeref:typename:local void
string_init	compat/zlib/examples/enough.c	/^local void string_init(string_t *s) {$/;"	f	typeref:typename:local void
string_printf	compat/zlib/examples/enough.c	/^local void string_printf(string_t *s, char *fmt, ...) {$/;"	f	typeref:typename:local void
string_t	compat/zlib/examples/enough.c	/^} string_t;$/;"	t	typeref:struct:__anonea7b679d0108	file:
strlen	generic/tclTestABSList.c	/^    Tcl_Size strlen;	\/\/ num bytes in string$/;"	m	struct:LString	typeref:typename:Tcl_Size	file:
strm	compat/zlib/deflate.h	/^    z_streamp strm;      \/* pointer back to this zlib stream *\/$/;"	m	struct:internal_state	typeref:typename:z_streamp
strm	compat/zlib/gzguts.h	/^    z_stream strm;          \/* stream structure in-place (not a pointer) *\/$/;"	m	struct:__anon361a15920108	typeref:typename:z_stream
strm	compat/zlib/inflate.h	/^    z_streamp strm;             \/* pointer back to this zlib stream *\/$/;"	m	struct:inflate_state	typeref:typename:z_streamp
strm	compat/zlib/test/minigzip.c	/^    z_stream strm;$/;"	m	struct:gzFile_s	typeref:typename:z_stream	file:
strncasecmp	compat/strncasecmp.c	/^strncasecmp($/;"	f	typeref:typename:int
strncasecmp	win/tclWinPort.h	/^#    define strncasecmp /;"	d
strncasecmp.o	unix/Makefile.in	/^strncasecmp.o: $(COMPAT_DIR)\/strncasecmp.c$/;"	t
strstart	compat/zlib/contrib/gcc_gvmat64/gvmat64.S	/^#define strstart /;"	d	file:
strstart	compat/zlib/deflate.h	/^    uInt strstart;               \/* start of string to insert *\/$/;"	m	struct:internal_state	typeref:typename:uInt
strtime	compat/zlib/contrib/untgz/untgz.c	/^char *strtime (time_t *t)$/;"	f	typeref:typename:char *
structureLength	generic/tcl.h	/^    Tcl_Size structureLength;	\/* Length of this structure, so future binary$/;"	m	struct:Tcl_Filesystem	typeref:typename:Tcl_Size
structureSize	generic/tclCompile.h	/^    size_t structureSize;	\/* Number of bytes in the ByteCode structure$/;"	m	struct:ByteCode	typeref:typename:size_t
strwinerror	compat/zlib/test/minigzip.c	/^static char *strwinerror (error)$/;"	f	file:
stubInfo	generic/tclEvent.c	/^} stubInfo = {$/;"	v	typeref:typename:const struct __anon850510a70408
stubTable	generic/tclInt.h	/^    const struct TclStubs *stubTable;$/;"	m	struct:Interp	typeref:typename:const struct TclStubs *
stubs	generic/tclEvent.c	/^    const TclStubs *stubs;$/;"	m	struct:__anon850510a70408	typeref:typename:const TclStubs *	file:
stubsCopy	unix/dltest/pkgooa.c	/^static TclOOStubs stubsCopy = {$/;"	v	typeref:typename:TclOOStubs	file:
style	unix/tclSelectNotfy.c	/^    unsigned int style;$/;"	m	struct:__anon69aa703c0408	typeref:typename:unsigned int	file:
styles	macosx/GNUmakefile	/^styles			:= develop deploy$/;"	m
sub	generic/regguts.h	/^    color sub;			\/* open subcolor (if any); free chain ptr *\/$/;"	m	struct:colordesc	typeref:typename:color
sub10	generic/regcomp.c	/^    struct subre *sub10[10];	\/* initial vector, enough for most *\/$/;"	m	struct:vars	typeref:struct:subre * [10]	file:
subTables	generic/tclEncoding.c	/^    EscapeSubTable subTables[TCLFLEXARRAY];$/;"	m	struct:__anondb7a8e8c0408	typeref:typename:EscapeSubTable[]	file:
sub_re	generic/regcomp.c	/^sub_re($/;"	f	typeref:struct:subre *	file:
subblock	generic/regc_color.c	/^subblock($/;"	f	typeref:typename:void	file:
subclasses	generic/tclOOInt.h	/^    VarClassList subclasses;	\/* List of subclasses, used to ensure deletion$/;"	m	struct:Class	typeref:typename:VarClassList
subcmdList	generic/tclInt.h	/^    Tcl_Obj *subcmdList;	\/* List of commands that this ensemble$/;"	m	struct:EnsembleConfig	typeref:typename:Tcl_Obj *
subcmds	generic/tclConfig.c	/^    enum subcmds {$/;"	g	function:QueryConfigObjCmd	file:
subcolor	generic/regc_color.c	/^subcolor($/;"	f	typeref:typename:color	file:
subcommandArrayPtr	generic/tclInt.h	/^    char **subcommandArrayPtr;	\/* Array of ensemble subcommand names. At all$/;"	m	struct:EnsembleConfig	typeref:typename:char **
subcommandDict	generic/tclInt.h	/^    Tcl_Obj *subcommandDict;	\/* Dictionary providing mapping from$/;"	m	struct:EnsembleConfig	typeref:typename:Tcl_Obj *
subcommandTable	generic/tclInt.h	/^    Tcl_HashTable subcommandTable;$/;"	m	struct:EnsembleConfig	typeref:typename:Tcl_HashTable
subdfas	generic/regexec.c	/^    struct dfa **subdfas;	\/* per-subre DFAs *\/$/;"	m	struct:vars	typeref:struct:dfa **	file:
subno	generic/regguts.h	/^    int subno;			\/* subexpression number (for 'b' and '(') *\/$/;"	m	struct:subre	typeref:typename:int
subrange	generic/regc_color.c	/^subrange($/;"	f	typeref:typename:void	file:
subre	generic/regguts.h	/^struct subre {$/;"	s
subs	generic/regcomp.c	/^    struct subre **subs;	\/* subRE pointer vector *\/$/;"	m	struct:vars	typeref:struct:subre **	file:
subset	generic/regexec.c	/^subset($/;"	f	typeref:typename:void	file:
substCodeType	generic/tclCompile.c	/^static const Tcl_ObjType substCodeType = {$/;"	v	typeref:typename:const Tcl_ObjType	file:
subsystemsInitialized	generic/tclEvent.c	/^static int subsystemsInitialized = 0;$/;"	v	typeref:typename:int	file:
successor1	generic/tclAssembly.c	/^    struct BasicBlock* successor1;$/;"	m	struct:BasicBlock	typeref:struct:BasicBlock *	file:
suffix	compat/zlib/examples/gun.c	/^unsigned char suffix[65536];            \/* one-character LZW suffix *\/$/;"	v	typeref:typename:unsigned char[65536]
superclasses	generic/tclOOInt.h	/^    ClassList superclasses;	\/* List of superclasses, used for generation$/;"	m	struct:Class	typeref:typename:ClassList
supportsContinue	generic/tclCompile.h	/^    int supportsContinue;	\/* Whether this exception range will have a$/;"	m	struct:ExceptionAux	typeref:typename:int
svg	tools/tclsh.svg	/^   inkscape:export-ydpi="8.4399996">$/;"	n	uri:http://www.w3.org/2000/svg
svg2309	tools/tclsh.svg	/^   inkscape:export-ydpi="8.4399996">$/;"	i
switchOptionsEnum	generic/tclCmdMZ.c	/^    enum switchOptionsEnum {$/;"	g	function:TclNRSwitchObjCmd	file:
switchesEnum	generic/tclProcess.c	/^    enum switchesEnum {$/;"	g	function:ProcessStatusObjCmd	file:
sym_buf	compat/zlib/deflate.h	/^    uchf *sym_buf;        \/* buffer for distances and literals\/lengths *\/$/;"	m	struct:internal_state	typeref:typename:uchf *
sym_end	compat/zlib/deflate.h	/^    uInt sym_end;       \/* symbol table full when sym_next reaches this *\/$/;"	m	struct:internal_state	typeref:typename:uInt
sym_next	compat/zlib/deflate.h	/^    uInt sym_next;      \/* running index in symbol buffer *\/$/;"	m	struct:internal_state	typeref:typename:uInt
symbol	compat/zlib/contrib/blast/blast.c	/^    short *symbol;      \/* canonically ordered symbols *\/$/;"	m	struct:huffman	typeref:typename:short *	file:
symbol	compat/zlib/contrib/puff/puff.c	/^    short *symbol;      \/* canonically ordered symbols *\/$/;"	m	struct:huffman	typeref:typename:short *	file:
symbols	unix/tcl.m4	/^    AC_ARG_ENABLE(symbols,$/;"	e
symbols	win/tcl.m4	/^    AC_ARG_ENABLE(symbols, [  --enable-symbols        build with debugging symbols (default: off/;"	e
sync	compat/zlib/contrib/iostream/zfstream.cpp	/^int gzfilebuf::sync() {$/;"	f	class:gzfilebuf	typeref:typename:int
sync	compat/zlib/contrib/iostream3/zfstream.cc	/^gzfilebuf::sync()$/;"	f	class:gzfilebuf	typeref:typename:int
syncsearch	compat/zlib/inflate.c	/^local unsigned syncsearch(unsigned FAR *have, const unsigned char FAR *buf,$/;"	f	typeref:typename:local unsigned
sysBufRead	win/tclWinSerial.c	/^    DWORD sysBufRead;		\/* Win32 system buffer size for read ops,$/;"	m	struct:SerialInfo	typeref:typename:DWORD	file:
sysBufWrite	win/tclWinSerial.c	/^    DWORD sysBufWrite;		\/* Win32 system buffer size for write ops,$/;"	m	struct:SerialInfo	typeref:typename:DWORD	file:
system-libtommath	unix/configure.ac	/^AC_ARG_WITH(system-libtommath,$/;"	w
systemEncoding	generic/tclEncoding.c	/^static Tcl_Encoding systemEncoding = NULL;$/;"	v	typeref:typename:Tcl_Encoding	file:
systemSetupTZData	generic/tclDate.h	/^    Tcl_Obj *systemSetupTZData;$/;"	m	struct:ClockClientData	typeref:typename:Tcl_Obj *
systemTimeZone	generic/tclDate.h	/^    Tcl_Obj *systemTimeZone;$/;"	m	struct:ClockClientData	typeref:typename:Tcl_Obj *
szCSDVersion	unix/tclUnixInit.c	/^    wchar_t szCSDVersion[128];$/;"	m	struct:__anonf052aa840408	typeref:typename:wchar_t[128]	file:
t	libtommath/bn_mp_prime_rabin_miller_trials.c	/^   int k, t;$/;"	m	struct:__anon0cbcdfbb0108	typeref:typename:int	file:
tAGO	generic/tclDate.c	/^    tAGO = 258,                    \/* tAGO  *\/$/;"	e	enum:yytokentype	file:
tAGO	generic/tclDateClassic.c	/^    tAGO = 258,                    \/* tAGO  *\/$/;"	e	enum:yytokentype	file:
tAGO	generic/tclGetDate.y	/^%token	tAGO$/;"	t
tAGO	generic/tclGetDateClassic.y	/^%token	tAGO$/;"	t
tDAY	generic/tclDate.c	/^    tDAY = 259,                    \/* tDAY  *\/$/;"	e	enum:yytokentype	file:
tDAY	generic/tclDateClassic.c	/^    tDAY = 259,                    \/* tDAY  *\/$/;"	e	enum:yytokentype	file:
tDAY	generic/tclGetDate.y	/^%token	tDAY$/;"	t
tDAY	generic/tclGetDateClassic.y	/^%token	tDAY$/;"	t
tDAYZONE	generic/tclDate.c	/^    tDAYZONE = 260,                \/* tDAYZONE  *\/$/;"	e	enum:yytokentype	file:
tDAYZONE	generic/tclDateClassic.c	/^    tDAYZONE = 260,                \/* tDAYZONE  *\/$/;"	e	enum:yytokentype	file:
tDAYZONE	generic/tclGetDate.y	/^%token	tDAYZONE$/;"	t
tDAYZONE	generic/tclGetDateClassic.y	/^%token	tDAYZONE$/;"	t
tDAY_UNIT	generic/tclDate.c	/^    tDAY_UNIT = 276,               \/* tDAY_UNIT  *\/$/;"	e	enum:yytokentype	file:
tDAY_UNIT	generic/tclDateClassic.c	/^    tDAY_UNIT = 273,               \/* tDAY_UNIT  *\/$/;"	e	enum:yytokentype	file:
tDAY_UNIT	generic/tclGetDate.y	/^%token	tDAY_UNIT$/;"	t
tDAY_UNIT	generic/tclGetDateClassic.y	/^%token	tDAY_UNIT$/;"	t
tDST	generic/tclDate.c	/^    tDST = 272,                    \/* tDST  *\/$/;"	e	enum:yytokentype	file:
tDST	generic/tclDateClassic.c	/^    tDST = 271,                    \/* tDST  *\/$/;"	e	enum:yytokentype	file:
tDST	generic/tclGetDate.y	/^%token	tDST$/;"	t
tDST	generic/tclGetDateClassic.y	/^%token	tDST$/;"	t
tEPOCH	generic/tclDate.c	/^    tEPOCH = 271,                  \/* tEPOCH  *\/$/;"	e	enum:yytokentype	file:
tEPOCH	generic/tclDateClassic.c	/^    tEPOCH = 270,                  \/* tEPOCH  *\/$/;"	e	enum:yytokentype	file:
tEPOCH	generic/tclGetDate.y	/^%token	tEPOCH$/;"	t
tEPOCH	generic/tclGetDateClassic.y	/^%token	tEPOCH$/;"	t
tID	generic/tclDate.c	/^    tID = 261,                     \/* tID  *\/$/;"	e	enum:yytokentype	file:
tID	generic/tclDateClassic.c	/^    tID = 261,                     \/* tID  *\/$/;"	e	enum:yytokentype	file:
tID	generic/tclGetDate.y	/^%token	tID$/;"	t
tID	generic/tclGetDateClassic.y	/^%token	tID$/;"	t
tISOBAS6	generic/tclDate.c	/^    tISOBAS6 = 274,                \/* tISOBAS6  *\/$/;"	e	enum:yytokentype	file:
tISOBAS6	generic/tclGetDate.y	/^%token	tISOBAS6$/;"	t
tISOBAS8	generic/tclDate.c	/^    tISOBAS8 = 273,                \/* tISOBAS8  *\/$/;"	e	enum:yytokentype	file:
tISOBAS8	generic/tclGetDate.y	/^%token	tISOBAS8$/;"	t
tISOBASE	generic/tclDateClassic.c	/^    tISOBASE = 272,                \/* tISOBASE  *\/$/;"	e	enum:yytokentype	file:
tISOBASE	generic/tclGetDateClassic.y	/^%token	tISOBASE$/;"	t
tISOBASL	generic/tclDate.c	/^    tISOBASL = 275,                \/* tISOBASL  *\/$/;"	e	enum:yytokentype	file:
tISOBASL	generic/tclGetDate.y	/^%token	tISOBASL$/;"	t
tMERIDIAN	generic/tclDate.c	/^    tMERIDIAN = 262,               \/* tMERIDIAN  *\/$/;"	e	enum:yytokentype	file:
tMERIDIAN	generic/tclDateClassic.c	/^    tMERIDIAN = 262,               \/* tMERIDIAN  *\/$/;"	e	enum:yytokentype	file:
tMERIDIAN	generic/tclGetDate.y	/^%token	tMERIDIAN$/;"	t
tMERIDIAN	generic/tclGetDateClassic.y	/^%token	tMERIDIAN$/;"	t
tMONTH	generic/tclDate.c	/^    tMONTH = 263,                  \/* tMONTH  *\/$/;"	e	enum:yytokentype	file:
tMONTH	generic/tclDateClassic.c	/^    tMONTH = 263,                  \/* tMONTH  *\/$/;"	e	enum:yytokentype	file:
tMONTH	generic/tclGetDate.y	/^%token	tMONTH$/;"	t
tMONTH	generic/tclGetDateClassic.y	/^%token	tMONTH$/;"	t
tMONTH_UNIT	generic/tclDate.c	/^    tMONTH_UNIT = 264,             \/* tMONTH_UNIT  *\/$/;"	e	enum:yytokentype	file:
tMONTH_UNIT	generic/tclDateClassic.c	/^    tMONTH_UNIT = 264,             \/* tMONTH_UNIT  *\/$/;"	e	enum:yytokentype	file:
tMONTH_UNIT	generic/tclGetDate.y	/^%token	tMONTH_UNIT$/;"	t
tMONTH_UNIT	generic/tclGetDateClassic.y	/^%token	tMONTH_UNIT$/;"	t
tNEXT	generic/tclDate.c	/^    tNEXT = 277,                   \/* tNEXT  *\/$/;"	e	enum:yytokentype	file:
tNEXT	generic/tclDateClassic.c	/^    tNEXT = 274                    \/* tNEXT  *\/$/;"	e	enum:yytokentype	file:
tNEXT	generic/tclGetDate.y	/^%token	tNEXT$/;"	t
tNEXT	generic/tclGetDateClassic.y	/^%token	tNEXT$/;"	t
tNTL	generic/tclEnv.c	/^#define tNTL /;"	d	file:
tSEC_UNIT	generic/tclDate.c	/^    tSEC_UNIT = 266,               \/* tSEC_UNIT  *\/$/;"	e	enum:yytokentype	file:
tSEC_UNIT	generic/tclDateClassic.c	/^    tSEC_UNIT = 266,               \/* tSEC_UNIT  *\/$/;"	e	enum:yytokentype	file:
tSEC_UNIT	generic/tclGetDate.y	/^%token	tSEC_UNIT$/;"	t
tSEC_UNIT	generic/tclGetDateClassic.y	/^%token	tSEC_UNIT$/;"	t
tSNUMBER	generic/tclDateClassic.c	/^    tSNUMBER = 267,                \/* tSNUMBER  *\/$/;"	e	enum:yytokentype	file:
tSNUMBER	generic/tclGetDateClassic.y	/^%token	tSNUMBER$/;"	t
tSTARDATE	generic/tclDate.c	/^    tSTARDATE = 265,               \/* tSTARDATE  *\/$/;"	e	enum:yytokentype	file:
tSTARDATE	generic/tclDateClassic.c	/^    tSTARDATE = 265,               \/* tSTARDATE  *\/$/;"	e	enum:yytokentype	file:
tSTARDATE	generic/tclGetDate.y	/^%token	tSTARDATE$/;"	t
tSTARDATE	generic/tclGetDateClassic.y	/^%token	tSTARDATE$/;"	t
tUNUMBER	generic/tclDate.c	/^    tUNUMBER = 267,                \/* tUNUMBER  *\/$/;"	e	enum:yytokentype	file:
tUNUMBER	generic/tclDateClassic.c	/^    tUNUMBER = 268,                \/* tUNUMBER  *\/$/;"	e	enum:yytokentype	file:
tUNUMBER	generic/tclGetDate.y	/^%token	tUNUMBER$/;"	t
tUNUMBER	generic/tclGetDateClassic.y	/^%token	tUNUMBER$/;"	t
tZONE	generic/tclDate.c	/^    tZONE = 268,                   \/* tZONE  *\/$/;"	e	enum:yytokentype	file:
tZONE	generic/tclDateClassic.c	/^    tZONE = 269,                   \/* tZONE  *\/$/;"	e	enum:yytokentype	file:
tZONE	generic/tclGetDate.y	/^%token	tZONE$/;"	t
tZONE	generic/tclGetDateClassic.y	/^%token	tZONE$/;"	t
tZONEwO2	generic/tclDate.c	/^    tZONEwO2 = 270,                \/* tZONEwO2  *\/$/;"	e	enum:yytokentype	file:
tZONEwO2	generic/tclGetDate.y	/^%token	tZONEwO2$/;"	t
tZONEwO4	generic/tclDate.c	/^    tZONEwO4 = 269,                \/* tZONEwO4  *\/$/;"	e	enum:yytokentype	file:
tZONEwO4	generic/tclGetDate.y	/^%token	tZONEwO4$/;"	t
tab	compat/zlib/examples/enough.c	/^struct tab {                \/\/ type for been-here check$/;"	s	file:
tab	tools/index.tcl	/^proc tab {} {}$/;"	p
table	compat/zlib/zutil.c	/^local ptr_table table[MAX_PTR];$/;"	v	typeref:typename:local ptr_table[]
table	generic/tclDictObj.c	/^    Tcl_HashTable table;	\/* Object hash table to store mapping in. *\/$/;"	m	struct:Dict	typeref:typename:Tcl_HashTable	file:
table	generic/tclInt.h	/^    Tcl_HashTable table;	\/* "Inherit" from Tcl_HashTable. *\/$/;"	m	struct:TclVarHashTable	typeref:typename:Tcl_HashTable
table	generic/tclPkg.c	/^    Tcl_HashTable table;	\/* Table which contains files for each$/;"	m	struct:PkgFiles	typeref:typename:Tcl_HashTable	file:
table	generic/tclVar.c	/^    TclVarHashTable table;$/;"	m	struct:ArrayVarHashTable	typeref:typename:TclVarHashTable	file:
tablePtr	generic/tcl.h	/^    Tcl_HashTable *tablePtr;	\/* Pointer to table containing entry. *\/$/;"	m	struct:Tcl_HashEntry	typeref:typename:Tcl_HashTable *
tablePtr	generic/tcl.h	/^    Tcl_HashTable *tablePtr;	\/* Table being searched. *\/$/;"	m	struct:Tcl_HashSearch	typeref:typename:Tcl_HashTable *
tablePtr	generic/tclIndexObj.c	/^    void *tablePtr;		\/* Pointer to the table of strings *\/$/;"	m	struct:__anon02ea70180108	typeref:typename:void *	file:
tablePtr	generic/tclInt.h	/^	TclVarHashTable *tablePtr;\/* For array variables, this points to$/;"	m	union:Var::__anon1eb6b355010a	typeref:typename:TclVarHashTable *
tablePtr	generic/tclTestObj.c	/^	void *tablePtr;		\/* Pointer to the table of strings. *\/$/;"	m	struct:TestindexobjCmd::IndexRep	typeref:typename:void *	file:
tablePtr	generic/tclThreadStorage.c	/^    void **tablePtr;		\/* The table of Tcl TSDs. *\/$/;"	m	struct:__anon4d1cb8920208	typeref:typename:void **	file:
tag	generic/tclTest.c	/^    Tcl_Obj *tag;		\/* Tag for this event used to delete it *\/$/;"	m	struct:__anon0e9396a50308	typeref:typename:Tcl_Obj *	file:
tagPtr	generic/tclCkalloc.c	/^    MemTag *tagPtr;		\/* Tag from "memory tag" command; may be$/;"	m	struct:mem_header	typeref:typename:MemTag *	file:
tags	compat/zlib/Makefile.in	/^tags:$/;"	t
tailcallPtr	generic/tclInt.h	/^    Tcl_Obj *tailcallPtr;	\/* NULL if no tailcall is scheduled *\/$/;"	m	struct:CallFrame	typeref:typename:Tcl_Obj *
tar	compat/zlib/contrib/untgz/untgz.c	/^int tar (gzFile in,int action,int arg,int argc,char **argv)$/;"	f	typeref:typename:int
tar_buffer	compat/zlib/contrib/untgz/untgz.c	/^union tar_buffer$/;"	u	file:
tar_header	compat/zlib/contrib/untgz/untgz.c	/^struct tar_header$/;"	s	file:
target	macosx/GNUmakefile	/^			target = $*$/;"	m
target	macosx/GNUmakefile	/^build-${PROJECT}:	target = ${BUILD_TARGET}$/;"	m
target	macosx/GNUmakefile	/^install-${PROJECT}:	target = ${INSTALL_TARGET}$/;"	m
targetInterp	generic/tclInterp.c	/^    Tcl_Interp *targetInterp;	\/* Interp in which target command will be$/;"	m	struct:__anon913711770108	typeref:typename:Tcl_Interp *	file:
targetPtr	generic/tclInterp.c	/^    struct Target *targetPtr;	\/* Entry for target command in parent. This is$/;"	m	struct:__anon913711770108	typeref:struct:Target *	file:
targets	macosx/GNUmakefile	/^targets			:= $(foreach v,${meta},${$v})$/;"	m
targets	win/vctool.bat	/^:targets$/;"	l
targetsPtr	generic/tclInterp.c	/^    Target *targetsPtr;		\/* The head of a doubly-linked list of all the$/;"	m	struct:__anon913711770308	typeref:typename:Target *	file:
tcachePtr	generic/tclThreadAlloc.c	/^static __thread Cache *tcachePtr;$/;"	v	typeref:typename:Cache *	file:
tcl	library/init.tcl	/^namespace eval tcl {$/;"	n
tcl	unix/configure.ac	/^AC_INIT([tcl],[9.0])$/;"	p
tcl	unix/tcl.m4	/^	AC_ARG_WITH(tcl,$/;"	w
tcl	unix/tcl.pc.in	/^Name: Tool Command Language$/;"	p
tcl	win/configure.ac	/^AC_INIT([tcl],[9.0])$/;"	p
tcl	win/tcl.m4	/^	AC_ARG_WITH(tcl,$/;"	w
tcl	win/tcl.m4	/^    AC_ARG_WITH(tcl, [  --with-tcl=DIR          use Tcl 9.0 binaries from DIR],$/;"	w
tcl9pkga${DLTEST_SUFFIX}	unix/dltest/Makefile.in	/^tcl9pkga${DLTEST_SUFFIX}: pkga.o$/;"	t
tcl9pkga${SHLIB_SUFFIX}	unix/dltest/Makefile.in	/^tcl9pkga${SHLIB_SUFFIX}: pkga.o$/;"	t
tcl9pkgb${DLTEST_SUFFIX}	unix/dltest/Makefile.in	/^tcl9pkgb${DLTEST_SUFFIX}: pkgb.o$/;"	t
tcl9pkgb${SHLIB_SUFFIX}	unix/dltest/Makefile.in	/^tcl9pkgb${SHLIB_SUFFIX}: pkgb.o$/;"	t
tcl9pkgc${DLTEST_SUFFIX}	unix/dltest/Makefile.in	/^tcl9pkgc${DLTEST_SUFFIX}: pkgc.o$/;"	t
tcl9pkgc${SHLIB_SUFFIX}	unix/dltest/Makefile.in	/^tcl9pkgc${SHLIB_SUFFIX}: pkgc.o$/;"	t
tcl9pkgd${DLTEST_SUFFIX}	unix/dltest/Makefile.in	/^tcl9pkgd${DLTEST_SUFFIX}: pkgd.o$/;"	t
tcl9pkgd${SHLIB_SUFFIX}	unix/dltest/Makefile.in	/^tcl9pkgd${SHLIB_SUFFIX}: pkgd.o$/;"	t
tcl9pkge${DLTEST_SUFFIX}	unix/dltest/Makefile.in	/^tcl9pkge${DLTEST_SUFFIX}: pkge.o$/;"	t
tcl9pkge${SHLIB_SUFFIX}	unix/dltest/Makefile.in	/^tcl9pkge${SHLIB_SUFFIX}: pkge.o$/;"	t
tcl9pkgooa${DLTEST_SUFFIX}	unix/dltest/Makefile.in	/^tcl9pkgooa${DLTEST_SUFFIX}: pkgooa.o$/;"	t
tcl9pkgooa${SHLIB_SUFFIX}	unix/dltest/Makefile.in	/^tcl9pkgooa${SHLIB_SUFFIX}: pkgooa.o$/;"	t
tcl9pkgt${DLTEST_SUFFIX}	unix/dltest/Makefile.in	/^tcl9pkgt${DLTEST_SUFFIX}: pkgt.o$/;"	t
tcl9pkgt${SHLIB_SUFFIX}	unix/dltest/Makefile.in	/^tcl9pkgt${SHLIB_SUFFIX}: pkgt.o$/;"	t
tcl9pkgua${DLTEST_SUFFIX}	unix/dltest/Makefile.in	/^tcl9pkgua${DLTEST_SUFFIX}: pkgua.o$/;"	t
tcl9pkgua${SHLIB_SUFFIX}	unix/dltest/Makefile.in	/^tcl9pkgua${SHLIB_SUFFIX}: pkgua.o$/;"	t
tcl::Pkg	library/init.tcl	/^namespace eval tcl::Pkg {}$/;"	n
tcl::Pkg	library/package.tcl	/^namespace eval tcl::Pkg {}$/;"	n
tcl::oo facilities	changes.md	/^## tcl::oo facilities$/;"	s
tclAddLiteralObj	generic/tclIntDecls.h	/^    int (*tclAddLiteralObj) (struct CompileEnv *envPtr, Tcl_Obj *objPtr, LiteralEntry **litPtrPt/;"	m	struct:TclIntStubs	typeref:typename:int (*)(struct CompileEnv * envPtr,Tcl_Obj * objPtr,LiteralEntry ** litPtrPtr)
tclAlloc.o	unix/Makefile.in	/^tclAlloc.o: $(GENERIC_DIR)\/tclAlloc.c$/;"	t
tclAllocateFreeObjects	generic/tclIntDecls.h	/^    void (*tclAllocateFreeObjects) (void); \/* 3 *\/$/;"	m	struct:TclIntStubs	typeref:typename:void (*)(void)
tclAppInit.${OBJEXT}	win/Makefile.in	/^tclAppInit.${OBJEXT}: tclAppInit.c$/;"	t
tclAppInit.o	unix/Makefile.in	/^tclAppInit.o: $(UNIX_DIR)\/tclAppInit.c$/;"	t
tclArithSeries.o	unix/Makefile.in	/^tclArithSeries.o: $(GENERIC_DIR)\/tclArithSeries.c $(COMPILEHDR)$/;"	t
tclArrayHashKeyType	generic/tclHash.c	/^const Tcl_HashKeyType tclArrayHashKeyType = {$/;"	v	typeref:typename:const Tcl_HashKeyType
tclArrayHashKeyType	generic/tclInt.h	/^MODULE_SCOPE const Tcl_HashKeyType tclArrayHashKeyType;$/;"	v	typeref:typename:MODULE_SCOPE const Tcl_HashKeyType
tclAssembly.o	unix/Makefile.in	/^tclAssembly.o: $(GENERIC_DIR)\/tclAssembly.c $(COMPILEHDR)$/;"	t
tclAsync.o	unix/Makefile.in	/^tclAsync.o: $(GENERIC_DIR)\/tclAsync.c$/;"	t
tclBN_epoch	generic/tclTomMathDecls.h	/^    int (*tclBN_epoch) (void) MP_WUR; \/* 0 *\/$/;"	m	struct:TclTomMathStubs	typeref:typename:int (*)(void)
tclBN_mp_add	generic/tclTomMathDecls.h	/^    mp_err (*tclBN_mp_add) (const mp_int *a, const mp_int *b, mp_int *c) MP_WUR; \/* 2 *\/$/;"	m	struct:TclTomMathStubs	typeref:typename:mp_err (*)(const mp_int * a,const mp_int * b,mp_int * c)
tclBN_mp_add_d	generic/tclTomMathDecls.h	/^    mp_err (*tclBN_mp_add_d) (const mp_int *a, mp_digit b, mp_int *c) MP_WUR; \/* 3 *\/$/;"	m	struct:TclTomMathStubs	typeref:typename:mp_err (*)(const mp_int * a,mp_digit b,mp_int * c)
tclBN_mp_and	generic/tclTomMathDecls.h	/^    mp_err (*tclBN_mp_and) (const mp_int *a, const mp_int *b, mp_int *c) MP_WUR; \/* 4 *\/$/;"	m	struct:TclTomMathStubs	typeref:typename:mp_err (*)(const mp_int * a,const mp_int * b,mp_int * c)
tclBN_mp_clamp	generic/tclTomMathDecls.h	/^    void (*tclBN_mp_clamp) (mp_int *a); \/* 5 *\/$/;"	m	struct:TclTomMathStubs	typeref:typename:void (*)(mp_int * a)
tclBN_mp_clear	generic/tclTomMathDecls.h	/^    void (*tclBN_mp_clear) (mp_int *a); \/* 6 *\/$/;"	m	struct:TclTomMathStubs	typeref:typename:void (*)(mp_int * a)
tclBN_mp_clear_multi	generic/tclTomMathDecls.h	/^    void (*tclBN_mp_clear_multi) (mp_int *a, ...); \/* 7 *\/$/;"	m	struct:TclTomMathStubs	typeref:typename:void (*)(mp_int * a,...)
tclBN_mp_cmp	generic/tclTomMathDecls.h	/^    mp_ord (*tclBN_mp_cmp) (const mp_int *a, const mp_int *b) MP_WUR; \/* 8 *\/$/;"	m	struct:TclTomMathStubs	typeref:typename:mp_ord (*)(const mp_int * a,const mp_int * b)
tclBN_mp_cmp_d	generic/tclTomMathDecls.h	/^    mp_ord (*tclBN_mp_cmp_d) (const mp_int *a, mp_digit b) MP_WUR; \/* 9 *\/$/;"	m	struct:TclTomMathStubs	typeref:typename:mp_ord (*)(const mp_int * a,mp_digit b)
tclBN_mp_cmp_mag	generic/tclTomMathDecls.h	/^    mp_ord (*tclBN_mp_cmp_mag) (const mp_int *a, const mp_int *b) MP_WUR; \/* 10 *\/$/;"	m	struct:TclTomMathStubs	typeref:typename:mp_ord (*)(const mp_int * a,const mp_int * b)
tclBN_mp_cnt_lsb	generic/tclTomMathDecls.h	/^    int (*tclBN_mp_cnt_lsb) (const mp_int *a) MP_WUR; \/* 63 *\/$/;"	m	struct:TclTomMathStubs	typeref:typename:int (*)(const mp_int * a)
tclBN_mp_copy	generic/tclTomMathDecls.h	/^    mp_err (*tclBN_mp_copy) (const mp_int *a, mp_int *b) MP_WUR; \/* 11 *\/$/;"	m	struct:TclTomMathStubs	typeref:typename:mp_err (*)(const mp_int * a,mp_int * b)
tclBN_mp_count_bits	generic/tclTomMathDecls.h	/^    int (*tclBN_mp_count_bits) (const mp_int *a) MP_WUR; \/* 12 *\/$/;"	m	struct:TclTomMathStubs	typeref:typename:int (*)(const mp_int * a)
tclBN_mp_div	generic/tclTomMathDecls.h	/^    mp_err (*tclBN_mp_div) (const mp_int *a, const mp_int *b, mp_int *q, mp_int *r) MP_WUR; \/* /;"	m	struct:TclTomMathStubs	typeref:typename:mp_err (*)(const mp_int * a,const mp_int * b,mp_int * q,mp_int * r)
tclBN_mp_div_2	generic/tclTomMathDecls.h	/^    mp_err (*tclBN_mp_div_2) (const mp_int *a, mp_int *q) MP_WUR; \/* 15 *\/$/;"	m	struct:TclTomMathStubs	typeref:typename:mp_err (*)(const mp_int * a,mp_int * q)
tclBN_mp_div_2d	generic/tclTomMathDecls.h	/^    mp_err (*tclBN_mp_div_2d) (const mp_int *a, int b, mp_int *q, mp_int *r) MP_WUR; \/* 16 *\/$/;"	m	struct:TclTomMathStubs	typeref:typename:mp_err (*)(const mp_int * a,int b,mp_int * q,mp_int * r)
tclBN_mp_div_d	generic/tclTomMathDecls.h	/^    mp_err (*tclBN_mp_div_d) (const mp_int *a, mp_digit b, mp_int *q, mp_digit *r) MP_WUR; \/* 1/;"	m	struct:TclTomMathStubs	typeref:typename:mp_err (*)(const mp_int * a,mp_digit b,mp_int * q,mp_digit * r)
tclBN_mp_exch	generic/tclTomMathDecls.h	/^    void (*tclBN_mp_exch) (mp_int *a, mp_int *b); \/* 18 *\/$/;"	m	struct:TclTomMathStubs	typeref:typename:void (*)(mp_int * a,mp_int * b)
tclBN_mp_expt_n	generic/tclTomMathDecls.h	/^    mp_err (*tclBN_mp_expt_n) (const mp_int *a, int b, mp_int *c) MP_WUR; \/* 19 *\/$/;"	m	struct:TclTomMathStubs	typeref:typename:mp_err (*)(const mp_int * a,int b,mp_int * c)
tclBN_mp_get_mag_u64	generic/tclTomMathDecls.h	/^    uint64_t (*tclBN_mp_get_mag_u64) (const mp_int *a) MP_WUR; \/* 69 *\/$/;"	m	struct:TclTomMathStubs	typeref:typename:uint64_t (*)(const mp_int * a)
tclBN_mp_grow	generic/tclTomMathDecls.h	/^    mp_err (*tclBN_mp_grow) (mp_int *a, int size) MP_WUR; \/* 20 *\/$/;"	m	struct:TclTomMathStubs	typeref:typename:mp_err (*)(mp_int * a,int size)
tclBN_mp_init	generic/tclTomMathDecls.h	/^    mp_err (*tclBN_mp_init) (mp_int *a) MP_WUR; \/* 21 *\/$/;"	m	struct:TclTomMathStubs	typeref:typename:mp_err (*)(mp_int * a)
tclBN_mp_init_copy	generic/tclTomMathDecls.h	/^    mp_err (*tclBN_mp_init_copy) (mp_int *a, const mp_int *b) MP_WUR; \/* 22 *\/$/;"	m	struct:TclTomMathStubs	typeref:typename:mp_err (*)(mp_int * a,const mp_int * b)
tclBN_mp_init_i64	generic/tclTomMathDecls.h	/^    int (*tclBN_mp_init_i64) (mp_int *bignum, int64_t initVal) MP_WUR; \/* 65 *\/$/;"	m	struct:TclTomMathStubs	typeref:typename:int (*)(mp_int * bignum,int64_t initVal)
tclBN_mp_init_multi	generic/tclTomMathDecls.h	/^    mp_err (*tclBN_mp_init_multi) (mp_int *a, ...) MP_WUR; \/* 23 *\/$/;"	m	struct:TclTomMathStubs	typeref:typename:mp_err (*)(mp_int * a,...)
tclBN_mp_init_set	generic/tclTomMathDecls.h	/^    mp_err (*tclBN_mp_init_set) (mp_int *a, mp_digit b) MP_WUR; \/* 24 *\/$/;"	m	struct:TclTomMathStubs	typeref:typename:mp_err (*)(mp_int * a,mp_digit b)
tclBN_mp_init_size	generic/tclTomMathDecls.h	/^    mp_err (*tclBN_mp_init_size) (mp_int *a, int size) MP_WUR; \/* 25 *\/$/;"	m	struct:TclTomMathStubs	typeref:typename:mp_err (*)(mp_int * a,int size)
tclBN_mp_init_u64	generic/tclTomMathDecls.h	/^    int (*tclBN_mp_init_u64) (mp_int *bignum, uint64_t initVal) MP_WUR; \/* 66 *\/$/;"	m	struct:TclTomMathStubs	typeref:typename:int (*)(mp_int * bignum,uint64_t initVal)
tclBN_mp_lshd	generic/tclTomMathDecls.h	/^    mp_err (*tclBN_mp_lshd) (mp_int *a, int shift) MP_WUR; \/* 26 *\/$/;"	m	struct:TclTomMathStubs	typeref:typename:mp_err (*)(mp_int * a,int shift)
tclBN_mp_mod	generic/tclTomMathDecls.h	/^    mp_err (*tclBN_mp_mod) (const mp_int *a, const mp_int *b, mp_int *r) MP_WUR; \/* 27 *\/$/;"	m	struct:TclTomMathStubs	typeref:typename:mp_err (*)(const mp_int * a,const mp_int * b,mp_int * r)
tclBN_mp_mod_2d	generic/tclTomMathDecls.h	/^    mp_err (*tclBN_mp_mod_2d) (const mp_int *a, int b, mp_int *r) MP_WUR; \/* 28 *\/$/;"	m	struct:TclTomMathStubs	typeref:typename:mp_err (*)(const mp_int * a,int b,mp_int * r)
tclBN_mp_mul	generic/tclTomMathDecls.h	/^    mp_err (*tclBN_mp_mul) (const mp_int *a, const mp_int *b, mp_int *p) MP_WUR; \/* 29 *\/$/;"	m	struct:TclTomMathStubs	typeref:typename:mp_err (*)(const mp_int * a,const mp_int * b,mp_int * p)
tclBN_mp_mul_2	generic/tclTomMathDecls.h	/^    mp_err (*tclBN_mp_mul_2) (const mp_int *a, mp_int *p) MP_WUR; \/* 31 *\/$/;"	m	struct:TclTomMathStubs	typeref:typename:mp_err (*)(const mp_int * a,mp_int * p)
tclBN_mp_mul_2d	generic/tclTomMathDecls.h	/^    mp_err (*tclBN_mp_mul_2d) (const mp_int *a, int d, mp_int *p) MP_WUR; \/* 32 *\/$/;"	m	struct:TclTomMathStubs	typeref:typename:mp_err (*)(const mp_int * a,int d,mp_int * p)
tclBN_mp_mul_d	generic/tclTomMathDecls.h	/^    mp_err (*tclBN_mp_mul_d) (const mp_int *a, mp_digit b, mp_int *p) MP_WUR; \/* 30 *\/$/;"	m	struct:TclTomMathStubs	typeref:typename:mp_err (*)(const mp_int * a,mp_digit b,mp_int * p)
tclBN_mp_neg	generic/tclTomMathDecls.h	/^    mp_err (*tclBN_mp_neg) (const mp_int *a, mp_int *b) MP_WUR; \/* 33 *\/$/;"	m	struct:TclTomMathStubs	typeref:typename:mp_err (*)(const mp_int * a,mp_int * b)
tclBN_mp_or	generic/tclTomMathDecls.h	/^    mp_err (*tclBN_mp_or) (const mp_int *a, const mp_int *b, mp_int *c) MP_WUR; \/* 34 *\/$/;"	m	struct:TclTomMathStubs	typeref:typename:mp_err (*)(const mp_int * a,const mp_int * b,mp_int * c)
tclBN_mp_pack	generic/tclTomMathDecls.h	/^    mp_err (*tclBN_mp_pack) (void *rop, size_t maxcount, size_t *written, mp_order order, size_t/;"	m	struct:TclTomMathStubs	typeref:typename:mp_err (*)(void * rop,size_t maxcount,size_t * written,mp_order order,size_t size,mp_endian endian,size_t nails,const mp_int * op)
tclBN_mp_pack_count	generic/tclTomMathDecls.h	/^    size_t (*tclBN_mp_pack_count) (const mp_int *a, size_t nails, size_t size) MP_WUR; \/* 77 *\/$/;"	m	struct:TclTomMathStubs	typeref:typename:size_t (*)(const mp_int * a,size_t nails,size_t size)
tclBN_mp_radix_size	generic/tclTomMathDecls.h	/^    mp_err (*tclBN_mp_radix_size) (const mp_int *a, int radix, int *size) MP_WUR; \/* 35 *\/$/;"	m	struct:TclTomMathStubs	typeref:typename:mp_err (*)(const mp_int * a,int radix,int * size)
tclBN_mp_read_radix	generic/tclTomMathDecls.h	/^    mp_err (*tclBN_mp_read_radix) (mp_int *a, const char *str, int radix) MP_WUR; \/* 36 *\/$/;"	m	struct:TclTomMathStubs	typeref:typename:mp_err (*)(mp_int * a,const char * str,int radix)
tclBN_mp_rshd	generic/tclTomMathDecls.h	/^    void (*tclBN_mp_rshd) (mp_int *a, int shift); \/* 37 *\/$/;"	m	struct:TclTomMathStubs	typeref:typename:void (*)(mp_int * a,int shift)
tclBN_mp_set_i64	generic/tclTomMathDecls.h	/^    void (*tclBN_mp_set_i64) (mp_int *a, int64_t i); \/* 70 *\/$/;"	m	struct:TclTomMathStubs	typeref:typename:void (*)(mp_int * a,int64_t i)
tclBN_mp_set_u64	generic/tclTomMathDecls.h	/^    void (*tclBN_mp_set_u64) (mp_int *a, uint64_t i); \/* 68 *\/$/;"	m	struct:TclTomMathStubs	typeref:typename:void (*)(mp_int * a,uint64_t i)
tclBN_mp_shrink	generic/tclTomMathDecls.h	/^    mp_err (*tclBN_mp_shrink) (mp_int *a) MP_WUR; \/* 38 *\/$/;"	m	struct:TclTomMathStubs	typeref:typename:mp_err (*)(mp_int * a)
tclBN_mp_signed_rsh	generic/tclTomMathDecls.h	/^    mp_err (*tclBN_mp_signed_rsh) (const mp_int *a, int b, mp_int *c) MP_WUR; \/* 76 *\/$/;"	m	struct:TclTomMathStubs	typeref:typename:mp_err (*)(const mp_int * a,int b,mp_int * c)
tclBN_mp_sqrt	generic/tclTomMathDecls.h	/^    mp_err (*tclBN_mp_sqrt) (const mp_int *a, mp_int *b) MP_WUR; \/* 41 *\/$/;"	m	struct:TclTomMathStubs	typeref:typename:mp_err (*)(const mp_int * a,mp_int * b)
tclBN_mp_sub	generic/tclTomMathDecls.h	/^    mp_err (*tclBN_mp_sub) (const mp_int *a, const mp_int *b, mp_int *c) MP_WUR; \/* 42 *\/$/;"	m	struct:TclTomMathStubs	typeref:typename:mp_err (*)(const mp_int * a,const mp_int * b,mp_int * c)
tclBN_mp_sub_d	generic/tclTomMathDecls.h	/^    mp_err (*tclBN_mp_sub_d) (const mp_int *a, mp_digit b, mp_int *c) MP_WUR; \/* 43 *\/$/;"	m	struct:TclTomMathStubs	typeref:typename:mp_err (*)(const mp_int * a,mp_digit b,mp_int * c)
tclBN_mp_to_radix	generic/tclTomMathDecls.h	/^    int (*tclBN_mp_to_radix) (const mp_int *a, char *str, size_t maxlen, size_t *written, int ra/;"	m	struct:TclTomMathStubs	typeref:typename:int (*)(const mp_int * a,char * str,size_t maxlen,size_t * written,int radix)
tclBN_mp_to_ubin	generic/tclTomMathDecls.h	/^    int (*tclBN_mp_to_ubin) (const mp_int *a, unsigned char *buf, size_t maxlen, size_t *written/;"	m	struct:TclTomMathStubs	typeref:typename:int (*)(const mp_int * a,unsigned char * buf,size_t maxlen,size_t * written)
tclBN_mp_ubin_size	generic/tclTomMathDecls.h	/^    size_t (*tclBN_mp_ubin_size) (const mp_int *a) MP_WUR; \/* 47 *\/$/;"	m	struct:TclTomMathStubs	typeref:typename:size_t (*)(const mp_int * a)
tclBN_mp_unpack	generic/tclTomMathDecls.h	/^    mp_err (*tclBN_mp_unpack) (mp_int *rop, size_t count, mp_order order, size_t size, mp_endian/;"	m	struct:TclTomMathStubs	typeref:typename:mp_err (*)(mp_int * rop,size_t count,mp_order order,size_t size,mp_endian endian,size_t nails,const void * op)
tclBN_mp_xor	generic/tclTomMathDecls.h	/^    mp_err (*tclBN_mp_xor) (const mp_int *a, const mp_int *b, mp_int *c) MP_WUR; \/* 48 *\/$/;"	m	struct:TclTomMathStubs	typeref:typename:mp_err (*)(const mp_int * a,const mp_int * b,mp_int * c)
tclBN_mp_zero	generic/tclTomMathDecls.h	/^    void (*tclBN_mp_zero) (mp_int *a); \/* 49 *\/$/;"	m	struct:TclTomMathStubs	typeref:typename:void (*)(mp_int * a)
tclBN_revision	generic/tclTomMathDecls.h	/^    int (*tclBN_revision) (void) MP_WUR; \/* 1 *\/$/;"	m	struct:TclTomMathStubs	typeref:typename:int (*)(void)
tclBasic.o	unix/Makefile.in	/^tclBasic.o: $(GENERIC_DIR)\/tclBasic.c $(COMPILEHDR) $(MATHHDRS) $(NREHDR)$/;"	t
tclBignumObjType	generic/tclObj.c	/^const ObjectType tclBignumObjType = {$/;"	v	typeref:typename:const ObjectType
tclBignumTypePtr	generic/tclInt.h	/^MODULE_SCOPE const Tcl_ObjType *tclBignumTypePtr;$/;"	v	typeref:typename:MODULE_SCOPE const Tcl_ObjType *
tclBignumTypePtr	generic/tclObj.c	/^MODULE_SCOPE const Tcl_ObjType *tclBignumTypePtr$/;"	v	typeref:typename:MODULE_SCOPE const Tcl_ObjType *
tclBinary.o	unix/Makefile.in	/^tclBinary.o: $(GENERIC_DIR)\/tclBinary.c$/;"	t
tclBooleanObjType	generic/tclObj.c	/^const ObjectType tclBooleanObjType= {$/;"	v	typeref:typename:const ObjectType
tclBooleanTypePtr	generic/tclInt.h	/^MODULE_SCOPE const Tcl_ObjType *tclBooleanTypePtr;$/;"	v	typeref:typename:MODULE_SCOPE const Tcl_ObjType *
tclBooleanTypePtr	generic/tclObj.c	/^MODULE_SCOPE const Tcl_ObjType *tclBooleanTypePtr$/;"	v	typeref:typename:MODULE_SCOPE const Tcl_ObjType *
tclByteCodeType	generic/tclCompile.c	/^const Tcl_ObjType tclByteCodeType = {$/;"	v	typeref:typename:const Tcl_ObjType
tclByteCodeType	generic/tclInt.h	/^MODULE_SCOPE const Tcl_ObjType tclByteCodeType;$/;"	v	typeref:typename:MODULE_SCOPE const Tcl_ObjType
tclCallVarTraces	generic/tclIntDecls.h	/^    int (*tclCallVarTraces) (Interp *iPtr, Var *arrayPtr, Var *varPtr, const char *part1, const /;"	m	struct:TclIntStubs	typeref:typename:int (*)(Interp * iPtr,Var * arrayPtr,Var * varPtr,const char * part1,const char * part2,int flags,int leaveErrMsg)
tclChannelEventScriptInvoker	generic/tclIntDecls.h	/^    void (*tclChannelEventScriptInvoker) (void *clientData, int flags); \/* 162 *\/$/;"	m	struct:TclIntStubs	typeref:typename:void (*)(void * clientData,int flags)
tclChannelTransform	generic/tclIntDecls.h	/^    int (*tclChannelTransform) (Tcl_Interp *interp, Tcl_Channel chan, Tcl_Obj *cmdObjPtr); \/* 1/;"	m	struct:TclIntStubs	typeref:typename:int (*)(Tcl_Interp * interp,Tcl_Channel chan,Tcl_Obj * cmdObjPtr)
tclCharTypeTable	generic/tclParse.c	/^const unsigned char tclCharTypeTable[] = {$/;"	v	typeref:typename:const unsigned char[]
tclCharTypeTable	generic/tclParse.h	/^MODULE_SCOPE const unsigned char tclCharTypeTable[];$/;"	v	typeref:typename:MODULE_SCOPE const unsigned char[]
tclCheckExecutionTraces	generic/tclIntDecls.h	/^    int (*tclCheckExecutionTraces) (Tcl_Interp *interp, const char *command, Tcl_Size numChars, /;"	m	struct:TclIntStubs	typeref:typename:int (*)(Tcl_Interp * interp,const char * command,Tcl_Size numChars,Command * cmdPtr,int result,int traceFlags,Tcl_Size objc,Tcl_Obj * const objv[])
tclCheckInterpTraces	generic/tclIntDecls.h	/^    int (*tclCheckInterpTraces) (Tcl_Interp *interp, const char *command, Tcl_Size numChars, Com/;"	m	struct:TclIntStubs	typeref:typename:int (*)(Tcl_Interp * interp,const char * command,Tcl_Size numChars,Command * cmdPtr,int result,int traceFlags,Tcl_Size objc,Tcl_Obj * const objv[])
tclCkalloc.o	unix/Makefile.in	/^tclCkalloc.o: $(GENERIC_DIR)\/tclCkalloc.c$/;"	t
tclCleanupChildren	generic/tclIntDecls.h	/^    int (*tclCleanupChildren) (Tcl_Interp *interp, Tcl_Size numPids, Tcl_Pid *pidPtr, Tcl_Channe/;"	m	struct:TclIntStubs	typeref:typename:int (*)(Tcl_Interp * interp,Tcl_Size numPids,Tcl_Pid * pidPtr,Tcl_Channel errorChan)
tclCleanupCommand	generic/tclIntDecls.h	/^    void (*tclCleanupCommand) (Command *cmdPtr); \/* 6 *\/$/;"	m	struct:TclIntStubs	typeref:typename:void (*)(Command * cmdPtr)
tclCleanupVar	generic/tclIntDecls.h	/^    void (*tclCleanupVar) (Var *varPtr, Var *arrayPtr); \/* 176 *\/$/;"	m	struct:TclIntStubs	typeref:typename:void (*)(Var * varPtr,Var * arrayPtr)
tclClock.o	unix/Makefile.in	/^tclClock.o: $(GENERIC_DIR)\/tclClock.c $(TCLDATEHDR)$/;"	t
tclClockClassic.o	unix/Makefile.in	/^tclClockClassic.o: $(GENERIC_DIR)\/tclClockClassic.c$/;"	t
tclClockFmt.o	unix/Makefile.in	/^tclClockFmt.o: $(GENERIC_DIR)\/tclClockFmt.c $(TCLDATEHDR)$/;"	t
tclCmdAH.o	unix/Makefile.in	/^tclCmdAH.o: $(GENERIC_DIR)\/tclCmdAH.c$/;"	t
tclCmdIL.o	unix/Makefile.in	/^tclCmdIL.o: $(GENERIC_DIR)\/tclCmdIL.c $(TCLREHDRS)$/;"	t
tclCmdMZ.o	unix/Makefile.in	/^tclCmdMZ.o: $(GENERIC_DIR)\/tclCmdMZ.c $(TCLREHDRS) $(TRIMHDR)$/;"	t
tclCmdNameType	generic/tclInt.h	/^MODULE_SCOPE Tcl_ObjType tclCmdNameType;$/;"	v	typeref:typename:MODULE_SCOPE Tcl_ObjType
tclCmdNameType	generic/tclObj.c	/^Tcl_ObjType tclCmdNameType = {$/;"	v	typeref:typename:Tcl_ObjType
tclCompCmds.o	unix/Makefile.in	/^tclCompCmds.o: $(GENERIC_DIR)\/tclCompCmds.c $(COMPILEHDR)$/;"	t
tclCompCmdsGR.o	unix/Makefile.in	/^tclCompCmdsGR.o: $(GENERIC_DIR)\/tclCompCmdsGR.c $(COMPILEHDR)$/;"	t
tclCompCmdsSZ.o	unix/Makefile.in	/^tclCompCmdsSZ.o: $(GENERIC_DIR)\/tclCompCmdsSZ.c $(COMPILEHDR) $(TRIMHDR)$/;"	t
tclCompExpr.o	unix/Makefile.in	/^tclCompExpr.o: $(GENERIC_DIR)\/tclCompExpr.c $(COMPILEHDR)$/;"	t
tclCompile.o	unix/Makefile.in	/^tclCompile.o: $(GENERIC_DIR)\/tclCompile.c $(COMPILEHDR)$/;"	t
tclConfig.o	unix/Makefile.in	/^tclConfig.o: $(GENERIC_DIR)\/tclConfig.c$/;"	t
tclCopyAndCollapse	generic/tclIntDecls.h	/^    Tcl_Size (*tclCopyAndCollapse) (Tcl_Size count, const char *src, char *dst); \/* 7 *\/$/;"	m	struct:TclIntStubs	typeref:typename:Tcl_Size (*)(Tcl_Size count,const char * src,char * dst)
tclCopyChannel	generic/tclIntDecls.h	/^    int (*tclCopyChannel) (Tcl_Interp *interp, Tcl_Channel inChan, Tcl_Channel outChan, long lon/;"	m	struct:TclIntStubs	typeref:typename:int (*)(Tcl_Interp * interp,Tcl_Channel inChan,Tcl_Channel outChan,long long toRead,Tcl_Obj * cmdPtr)
tclCreatePipeline	generic/tclIntDecls.h	/^    Tcl_Size (*tclCreatePipeline) (Tcl_Interp *interp, Tcl_Size argc, const char **argv, Tcl_Pid/;"	m	struct:TclIntStubs	typeref:typename:Tcl_Size (*)(Tcl_Interp * interp,Tcl_Size argc,const char ** argv,Tcl_Pid ** pidArrayPtr,TclFile * inPipePtr,TclFile * outPipePtr,TclFile * errFilePtr)
tclCreateProc	generic/tclIntDecls.h	/^    int (*tclCreateProc) (Tcl_Interp *interp, Namespace *nsPtr, const char *procName, Tcl_Obj *a/;"	m	struct:TclIntStubs	typeref:typename:int (*)(Tcl_Interp * interp,Namespace * nsPtr,const char * procName,Tcl_Obj * argsPtr,Tcl_Obj * bodyPtr,Proc ** procPtrPtr)
tclDTraceDebugEnabled	generic/tclCompile.h	/^MODULE_SCOPE int tclDTraceDebugEnabled, tclDTraceDebugIndent;$/;"	v	typeref:typename:MODULE_SCOPE int
tclDTraceDebugIndent	generic/tclCompile.h	/^MODULE_SCOPE int tclDTraceDebugEnabled, tclDTraceDebugIndent;$/;"	v	typeref:typename:MODULE_SCOPE int
tclDTraceDebugLog	generic/tclCompile.h	/^MODULE_SCOPE FILE *tclDTraceDebugLog;$/;"	v	typeref:typename:MODULE_SCOPE FILE *
tclDate.o	unix/Makefile.in	/^tclDate.o: $(GENERIC_DIR)\/tclDate.c $(TCLDATEHDR)$/;"	t
tclDateClassic.o	unix/Makefile.in	/^tclDateClassic.o: $(GENERIC_DIR)\/tclDateClassic.c$/;"	t
tclDbDumpActiveObjects	generic/tclIntDecls.h	/^    void (*tclDbDumpActiveObjects) (FILE *outFile); \/* 243 *\/$/;"	m	struct:TclIntStubs	typeref:typename:void (*)(FILE * outFile)
tclDefaultTrimSet	generic/tclCmdMZ.c	/^const char tclDefaultTrimSet[] =$/;"	v	typeref:typename:const char[]
tclDefaultTrimSet	generic/tclStringTrim.h	/^MODULE_SCOPE const char tclDefaultTrimSet[];$/;"	v	typeref:typename:MODULE_SCOPE const char[]
tclDeleteCompiledLocalVars	generic/tclIntDecls.h	/^    void (*tclDeleteCompiledLocalVars) (Interp *iPtr, CallFrame *framePtr); \/* 11 *\/$/;"	m	struct:TclIntStubs	typeref:typename:void (*)(Interp * iPtr,CallFrame * framePtr)
tclDeleteVars	generic/tclIntDecls.h	/^    void (*tclDeleteVars) (Interp *iPtr, TclVarHashTable *tablePtr); \/* 12 *\/$/;"	m	struct:TclIntStubs	typeref:typename:void (*)(Interp * iPtr,TclVarHashTable * tablePtr)
tclDictObj.o	unix/Makefile.in	/^tclDictObj.o: $(GENERIC_DIR)\/tclDictObj.c $(MATHHDRS)$/;"	t
tclDictObjSize	generic/tclDecls.h	/^    int (*tclDictObjSize) (Tcl_Interp *interp, Tcl_Obj *dictPtr, void *sizePtr); \/* 497 *\/$/;"	m	struct:TclStubs	typeref:typename:int (*)(Tcl_Interp * interp,Tcl_Obj * dictPtr,void * sizePtr)
tclDictObjectType	generic/tclDictObj.c	/^static ObjectType tclDictObjectType = {$/;"	v	typeref:typename:ObjectType	file:
tclDictTypePtr	generic/tclDictObj.c	/^Tcl_ObjType *tclDictTypePtr = (Tcl_ObjType *)&tclDictObjectType;$/;"	v	typeref:typename:Tcl_ObjType *
tclDictTypePtr	generic/tclInt.h	/^MODULE_SCOPE Tcl_ObjType *tclDictTypePtr;$/;"	v	typeref:typename:MODULE_SCOPE Tcl_ObjType *
tclDisassemble.o	unix/Makefile.in	/^tclDisassemble.o: $(GENERIC_DIR)\/tclDisassemble.c $(COMPILEHDR)$/;"	t
tclDoubleDigits	generic/tclIntDecls.h	/^    char * (*tclDoubleDigits) (double dv, int ndigits, int flags, int *decpt, int *signum, char /;"	m	struct:TclIntStubs	typeref:typename:char * (*)(double dv,int ndigits,int flags,int * decpt,int * signum,char ** endPtr)
tclDoubleObjType	generic/tclObj.c	/^const ObjectType tclDoubleObjType= {$/;"	v	typeref:typename:const ObjectType
tclDoubleTypePtr	generic/tclInt.h	/^MODULE_SCOPE const Tcl_ObjType *tclDoubleTypePtr;$/;"	v	typeref:typename:MODULE_SCOPE const Tcl_ObjType *
tclDoubleTypePtr	generic/tclObj.c	/^MODULE_SCOPE const Tcl_ObjType *tclDoubleTypePtr = (Tcl_ObjType *)&tclDoubleObjType;$/;"	v	typeref:typename:MODULE_SCOPE const Tcl_ObjType *
tclDumpMemoryInfo	generic/tclIntDecls.h	/^    int (*tclDumpMemoryInfo) (void *clientData, int flags); \/* 14 *\/$/;"	m	struct:TclIntStubs	typeref:typename:int (*)(void * clientData,int flags)
tclEmptyString	generic/tclInt.h	/^MODULE_SCOPE char	tclEmptyString;$/;"	v	typeref:typename:MODULE_SCOPE char
tclEmptyString	generic/tclObj.c	/^char tclEmptyString = '\\0';$/;"	v	typeref:typename:char
tclEmptyStringRep	generic/tclPkg.c	/^MODULE_SCOPE char *tclEmptyStringRep;$/;"	v	typeref:typename:MODULE_SCOPE char *
tclEmptyStringRep	generic/tclPkg.c	/^char *tclEmptyStringRep = &tclEmptyString;$/;"	v	typeref:typename:char *
tclEncoding.o	unix/Makefile.in	/^tclEncoding.o: $(GENERIC_DIR)\/tclEncoding.c$/;"	t
tclEnsemble.o	unix/Makefile.in	/^tclEnsemble.o: $(GENERIC_DIR)\/tclEnsemble.c $(COMPILEHDR)$/;"	t
tclEnsembleCmdType	generic/tclInt.h	/^MODULE_SCOPE const Tcl_ObjType tclEnsembleCmdType;$/;"	v	typeref:typename:MODULE_SCOPE const Tcl_ObjType
tclEnv.o	unix/Makefile.in	/^tclEnv.o: $(GENERIC_DIR)\/tclEnv.c$/;"	t
tclEpollNotfy.o	unix/Makefile.in	/^tclEpollNotfy.o: $(UNIX_DIR)\/tclEpollNotfy.c $(UNIX_DIR)\/tclUnixNotfy.c$/;"	t
tclEvalObjEx	generic/tclIntDecls.h	/^    int (*tclEvalObjEx) (Tcl_Interp *interp, Tcl_Obj *objPtr, int flags, const CmdFrame *invoker/;"	m	struct:TclIntStubs	typeref:typename:int (*)(Tcl_Interp * interp,Tcl_Obj * objPtr,int flags,const CmdFrame * invoker,int word)
tclEvent.${OBJEXT}	win/Makefile.in	/^tclEvent.${OBJEXT}: tclEvent.c tclUuid.h$/;"	t
tclEvent.o	unix/Makefile.in	/^tclEvent.o: $(GENERIC_DIR)\/tclEvent.c tclUuid.h$/;"	t
tclEventsOnlyRunLoopMode	macosx/tclMacOSXNotify.c	/^#define tclEventsOnlyRunLoopMode	/;"	d	file:
tclEventsOnlyRunLoopMode	macosx/tclMacOSXNotify.c	/^static CFStringRef tclEventsOnlyRunLoopMode = NULL;$/;"	v	typeref:typename:CFStringRef	file:
tclExecute.o	unix/Makefile.in	/^tclExecute.o: $(GENERIC_DIR)\/tclExecute.c $(COMPILEHDR) $(MATHHDRS) $(NREHDR)$/;"	t
tclExpandCodeArray	generic/tclIntDecls.h	/^    void (*tclExpandCodeArray) (void *envPtr); \/* 164 *\/$/;"	m	struct:TclIntStubs	typeref:typename:void (*)(void * envPtr)
tclExprCodeType	generic/tclExecute.c	/^const Tcl_ObjType tclExprCodeType = {$/;"	v	typeref:typename:const Tcl_ObjType
tclExprCodeType	generic/tclInt.h	/^MODULE_SCOPE const Tcl_ObjType tclExprCodeType;$/;"	v	typeref:typename:MODULE_SCOPE const Tcl_ObjType
tclExprFloatError	generic/tclIntDecls.h	/^    void (*tclExprFloatError) (Tcl_Interp *interp, double value); \/* 16 *\/$/;"	m	struct:TclIntStubs	typeref:typename:void (*)(Tcl_Interp * interp,double value)
tclFCmd.o	unix/Makefile.in	/^tclFCmd.o: $(GENERIC_DIR)\/tclFCmd.c$/;"	t
tclFSSplitPath	generic/tclDecls.h	/^    Tcl_Obj * (*tclFSSplitPath) (Tcl_Obj *pathPtr, void *lenPtr); \/* 461 *\/$/;"	m	struct:TclStubs	typeref:typename:Tcl_Obj * (*)(Tcl_Obj * pathPtr,void * lenPtr)
tclFileName.o	unix/Makefile.in	/^tclFileName.o: $(GENERIC_DIR)\/tclFileName.c $(FSHDR) $(TCLREHDRS)$/;"	t
tclFindElement	generic/tclIntDecls.h	/^    int (*tclFindElement) (Tcl_Interp *interp, const char *listStr, Tcl_Size listLength, const c/;"	m	struct:TclIntStubs	typeref:typename:int (*)(Tcl_Interp * interp,const char * listStr,Tcl_Size listLength,const char ** elementPtr,const char ** nextPtr,Tcl_Size * sizePtr,int * bracePtr)
tclFindExecutableSearchDone	generic/tclInt.h	/^MODULE_SCOPE int tclFindExecutableSearchDone;$/;"	v	typeref:typename:MODULE_SCOPE int
tclFindProc	generic/tclIntDecls.h	/^    Proc * (*tclFindProc) (Interp *iPtr, const char *procName); \/* 23 *\/$/;"	m	struct:TclIntStubs	typeref:typename:Proc * (*)(Interp * iPtr,const char * procName)
tclFormatInt	generic/tclIntDecls.h	/^    Tcl_Size (*tclFormatInt) (char *buffer, Tcl_WideInt n); \/* 24 *\/$/;"	m	struct:TclIntStubs	typeref:typename:Tcl_Size (*)(char * buffer,Tcl_WideInt n)
tclFreeObj	generic/tclDecls.h	/^    void (*tclFreeObj) (Tcl_Obj *objPtr); \/* 30 *\/$/;"	m	struct:TclStubs	typeref:typename:void (*)(Tcl_Obj * objPtr)
tclFreeObjList	generic/tclInt.h	/^MODULE_SCOPE Tcl_Obj *	tclFreeObjList;$/;"	v	typeref:typename:MODULE_SCOPE Tcl_Obj *
tclFreeObjList	generic/tclObj.c	/^Tcl_Obj *tclFreeObjList = NULL;$/;"	v	typeref:typename:Tcl_Obj *
tclFreePackageInfo	generic/tclIntDecls.h	/^    void (*tclFreePackageInfo) (Interp *iPtr); \/* 25 *\/$/;"	m	struct:TclIntStubs	typeref:typename:void (*)(Interp * iPtr)
tclGet.o	unix/Makefile.in	/^tclGet.o: $(GENERIC_DIR)\/tclGet.c$/;"	t
tclGetAliasObj	generic/tclDecls.h	/^    int (*tclGetAliasObj) (Tcl_Interp *interp, const char *childCmd, Tcl_Interp **targetInterpPt/;"	m	struct:TclStubs	typeref:typename:int (*)(Tcl_Interp * interp,const char * childCmd,Tcl_Interp ** targetInterpPtr,const char ** targetCmdPtr,int * objcPtr,Tcl_Obj *** objvPtr)
tclGetAndDetachPids	generic/tclIntPlatDecls.h	/^    void (*tclGetAndDetachPids) (Tcl_Interp *interp, Tcl_Channel chan); \/* 11 *\/$/;"	m	struct:TclIntPlatStubs	typeref:typename:void (*)(Tcl_Interp * interp,Tcl_Channel chan)
tclGetAuxDataType	generic/tclIntDecls.h	/^    const struct AuxDataType * (*tclGetAuxDataType) (const char *typeName); \/* 145 *\/$/;"	m	struct:TclIntStubs	typeref:typename:const struct AuxDataType * (*)(const char * typeName)
tclGetBytesFromObj	generic/tclDecls.h	/^    unsigned char * (*tclGetBytesFromObj) (Tcl_Interp *interp, Tcl_Obj *objPtr, void *numBytesPt/;"	m	struct:TclStubs	typeref:typename:unsigned char * (*)(Tcl_Interp * interp,Tcl_Obj * objPtr,void * numBytesPtr)
tclGetCStackPtr	generic/tclIntDecls.h	/^    void * (*tclGetCStackPtr) (void); \/* 223 *\/$/;"	m	struct:TclIntStubs	typeref:typename:void * (*)(void)
tclGetCharLength	generic/tclDecls.h	/^    Tcl_Size (*tclGetCharLength) (Tcl_Obj *objPtr); \/* 380 *\/$/;"	m	struct:TclStubs	typeref:typename:Tcl_Size (*)(Tcl_Obj * objPtr)
tclGetEnv	generic/tclIntDecls.h	/^    const char * (*tclGetEnv) (const char *name, Tcl_DString *valuePtr); \/* 138 *\/$/;"	m	struct:TclIntStubs	typeref:typename:const char * (*)(const char * name,Tcl_DString * valuePtr)
tclGetExtension	generic/tclIntDecls.h	/^    const char * (*tclGetExtension) (const char *name); \/* 31 *\/$/;"	m	struct:TclIntStubs	typeref:typename:const char * (*)(const char * name)
tclGetFrame	generic/tclIntDecls.h	/^    int (*tclGetFrame) (Tcl_Interp *interp, const char *str, CallFrame **framePtrPtr); \/* 32 *\/$/;"	m	struct:TclIntStubs	typeref:typename:int (*)(Tcl_Interp * interp,const char * str,CallFrame ** framePtrPtr)
tclGetInstructionTable	generic/tclIntDecls.h	/^    const void * (*tclGetInstructionTable) (void); \/* 163 *\/$/;"	m	struct:TclIntStubs	typeref:typename:const void * (*)(void)
tclGetNamespaceChildTable	generic/tclIntDecls.h	/^    Tcl_HashTable * (*tclGetNamespaceChildTable) (Tcl_Namespace *nsPtr); \/* 244 *\/$/;"	m	struct:TclIntStubs	typeref:typename:Tcl_HashTable * (*)(Tcl_Namespace * nsPtr)
tclGetNamespaceCommandTable	generic/tclIntDecls.h	/^    Tcl_HashTable * (*tclGetNamespaceCommandTable) (Tcl_Namespace *nsPtr); \/* 245 *\/$/;"	m	struct:TclIntStubs	typeref:typename:Tcl_HashTable * (*)(Tcl_Namespace * nsPtr)
tclGetNamespaceForQualName	generic/tclIntDecls.h	/^    int (*tclGetNamespaceForQualName) (Tcl_Interp *interp, const char *qualName, Namespace *cxtN/;"	m	struct:TclIntStubs	typeref:typename:int (*)(Tcl_Interp * interp,const char * qualName,Namespace * cxtNsPtr,int flags,Namespace ** nsPtrPtr,Namespace ** altNsPtrPtr,Namespace ** actualCxtPtrPtr,const char ** simpleNamePtr)
tclGetNamespaceFromObj	generic/tclIntDecls.h	/^    int (*tclGetNamespaceFromObj) (Tcl_Interp *interp, Tcl_Obj *objPtr, Tcl_Namespace **nsPtrPtr/;"	m	struct:TclIntStubs	typeref:typename:int (*)(Tcl_Interp * interp,Tcl_Obj * objPtr,Tcl_Namespace ** nsPtrPtr)
tclGetObjInterpProc	generic/tclIntDecls.h	/^    Tcl_ObjCmdProc * (*tclGetObjInterpProc) (void); \/* 39 *\/$/;"	m	struct:TclIntStubs	typeref:typename:Tcl_ObjCmdProc * (*)(void)
tclGetObjInterpProc2	generic/tclIntDecls.h	/^    Tcl_ObjCmdProc2 * (*tclGetObjInterpProc2) (void); \/* 43 *\/$/;"	m	struct:TclIntStubs	typeref:typename:Tcl_ObjCmdProc2 * (*)(void)
tclGetObjNameOfExecutable	generic/tclIntDecls.h	/^    Tcl_Obj * (*tclGetObjNameOfExecutable) (void); \/* 213 *\/$/;"	m	struct:TclIntStubs	typeref:typename:Tcl_Obj * (*)(void)
tclGetOpenMode	generic/tclIntDecls.h	/^    int (*tclGetOpenMode) (Tcl_Interp *interp, const char *str, int *modeFlagsPtr); \/* 40 *\/$/;"	m	struct:TclIntStubs	typeref:typename:int (*)(Tcl_Interp * interp,const char * str,int * modeFlagsPtr)
tclGetOriginalCommand	generic/tclIntDecls.h	/^    Tcl_Command (*tclGetOriginalCommand) (Tcl_Command command); \/* 41 *\/$/;"	m	struct:TclIntStubs	typeref:typename:Tcl_Command (*)(Tcl_Command command)
tclGetPlatform	generic/tclIntDecls.h	/^    TclPlatformType * (*tclGetPlatform) (void); \/* 224 *\/$/;"	m	struct:TclIntStubs	typeref:typename:TclPlatformType * (*)(void)
tclGetRange	generic/tclDecls.h	/^    Tcl_Obj * (*tclGetRange) (Tcl_Obj *objPtr, Tcl_Size first, Tcl_Size last); \/* 383 *\/$/;"	m	struct:TclStubs	typeref:typename:Tcl_Obj * (*)(Tcl_Obj * objPtr,Tcl_Size first,Tcl_Size last)
tclGetSrcInfoForPc	generic/tclIntDecls.h	/^    void (*tclGetSrcInfoForPc) (CmdFrame *contextPtr); \/* 233 *\/$/;"	m	struct:TclIntStubs	typeref:typename:void (*)(CmdFrame * contextPtr)
tclGetTimeProcPtr	generic/tclInt.h	/^MODULE_SCOPE Tcl_GetTimeProc *tclGetTimeProcPtr;$/;"	v	typeref:typename:MODULE_SCOPE Tcl_GetTimeProc *
tclGetTimeProcPtr	unix/tclUnixTime.c	/^Tcl_GetTimeProc *tclGetTimeProcPtr = NativeGetTime;$/;"	v	typeref:typename:Tcl_GetTimeProc *
tclGetTimeProcPtr	win/tclWinTime.c	/^Tcl_GetTimeProc *tclGetTimeProcPtr = NativeGetTime;$/;"	v	typeref:typename:Tcl_GetTimeProc *
tclGetUniChar	generic/tclDecls.h	/^    int (*tclGetUniChar) (Tcl_Obj *objPtr, Tcl_Size index); \/* 381 *\/$/;"	m	struct:TclStubs	typeref:typename:int (*)(Tcl_Obj * objPtr,Tcl_Size index)
tclGetUnicodeFromObj	generic/tclDecls.h	/^    Tcl_UniChar * (*tclGetUnicodeFromObj) (Tcl_Obj *objPtr, void *lengthPtr); \/* 434 *\/$/;"	m	struct:TclStubs	typeref:typename:Tcl_UniChar * (*)(Tcl_Obj * objPtr,void * lengthPtr)
tclHandleCreate	generic/tclIntDecls.h	/^    TclHandle (*tclHandleCreate) (void *ptr); \/* 146 *\/$/;"	m	struct:TclIntStubs	typeref:typename:TclHandle (*)(void * ptr)
tclHandleFree	generic/tclIntDecls.h	/^    void (*tclHandleFree) (TclHandle handle); \/* 147 *\/$/;"	m	struct:TclIntStubs	typeref:typename:void (*)(TclHandle handle)
tclHandlePreserve	generic/tclIntDecls.h	/^    TclHandle (*tclHandlePreserve) (TclHandle handle); \/* 148 *\/$/;"	m	struct:TclIntStubs	typeref:typename:TclHandle (*)(TclHandle handle)
tclHandleRelease	generic/tclIntDecls.h	/^    void (*tclHandleRelease) (TclHandle handle); \/* 149 *\/$/;"	m	struct:TclIntStubs	typeref:typename:void (*)(TclHandle handle)
tclHash.o	unix/Makefile.in	/^tclHash.o: $(GENERIC_DIR)\/tclHash.c$/;"	t
tclHideLiteral	generic/tclIntDecls.h	/^    void (*tclHideLiteral) (Tcl_Interp *interp, struct CompileEnv *envPtr, int index); \/* 144 */;"	m	struct:TclIntStubs	typeref:typename:void (*)(Tcl_Interp * interp,struct CompileEnv * envPtr,int index)
tclHideUnsafeCommands	generic/tclIntDecls.h	/^    int (*tclHideUnsafeCommands) (Tcl_Interp *interp); \/* 45 *\/$/;"	m	struct:TclIntStubs	typeref:typename:int (*)(Tcl_Interp * interp)
tclHistory.o	unix/Makefile.in	/^tclHistory.o: $(GENERIC_DIR)\/tclHistory.c$/;"	t
tclIO.o	unix/Makefile.in	/^tclIO.o: $(GENERIC_DIR)\/tclIO.c $(IOHDR)$/;"	t
tclIOCmd.o	unix/Makefile.in	/^tclIOCmd.o: $(GENERIC_DIR)\/tclIOCmd.c$/;"	t
tclIOGT.o	unix/Makefile.in	/^tclIOGT.o: $(GENERIC_DIR)\/tclIOGT.c $(IOHDR)$/;"	t
tclIORChan.o	unix/Makefile.in	/^tclIORChan.o: $(GENERIC_DIR)\/tclIORChan.c $(IOHDR)$/;"	t
tclIORTrans.o	unix/Makefile.in	/^tclIORTrans.o: $(GENERIC_DIR)\/tclIORTrans.c $(IOHDR)$/;"	t
tclIOSock.o	unix/Makefile.in	/^tclIOSock.o: $(GENERIC_DIR)\/tclIOSock.c$/;"	t
tclIOUtil.o	unix/Makefile.in	/^tclIOUtil.o: $(GENERIC_DIR)\/tclIOUtil.c $(FSHDR)$/;"	t
tclIcu.o	unix/Makefile.in	/^tclIcu.o: $(GENERIC_DIR)\/tclIcu.c$/;"	t
tclIdentityEncoding	generic/tclEncoding.c	/^Tcl_Encoding tclIdentityEncoding = NULL;$/;"	v	typeref:typename:Tcl_Encoding
tclIdentityEncoding	generic/tclInt.h	/^MODULE_SCOPE Tcl_Encoding tclIdentityEncoding;$/;"	v	typeref:typename:MODULE_SCOPE Tcl_Encoding
tclInExit	generic/tclIntDecls.h	/^    int (*tclInExit) (void); \/* 46 *\/$/;"	m	struct:TclIntStubs	typeref:typename:int (*)(void)
tclInThreadExit	generic/tclIntDecls.h	/^    int (*tclInThreadExit) (void); \/* 172 *\/$/;"	m	struct:TclIntStubs	typeref:typename:int (*)(void)
tclIndexObj.o	unix/Makefile.in	/^tclIndexObj.o: $(GENERIC_DIR)\/tclIndexObj.c$/;"	t
tclIndexType	generic/tclIndexObj.c	/^const Tcl_ObjType tclIndexType = {$/;"	v	typeref:typename:const Tcl_ObjType
tclIndexType	generic/tclInt.h	/^MODULE_SCOPE const Tcl_ObjType tclIndexType;$/;"	v	typeref:typename:MODULE_SCOPE const Tcl_ObjType
tclInitRewriteEnsemble	generic/tclIntDecls.h	/^    int (*tclInitRewriteEnsemble) (Tcl_Interp *interp, Tcl_Size numRemoved, Tcl_Size numInserted/;"	m	struct:TclIntStubs	typeref:typename:int (*)(Tcl_Interp * interp,Tcl_Size numRemoved,Tcl_Size numInserted,Tcl_Obj * const * objv)
tclInitVarHashTable	generic/tclIntDecls.h	/^    void (*tclInitVarHashTable) (TclVarHashTable *tablePtr, Namespace *nsPtr); \/* 235 *\/$/;"	m	struct:TclIntStubs	typeref:typename:void (*)(TclVarHashTable * tablePtr,Namespace * nsPtr)
tclInstCode	generic/tclAssembly.c	/^    int tclInstCode;		\/* Instruction code. For instructions having$/;"	m	struct:TalInstDesc	typeref:typename:int	file:
tclInstructionTable	generic/tclCompile.c	/^InstructionDesc const tclInstructionTable[] = {$/;"	v	typeref:typename:InstructionDesc const[]
tclInstructionTable	generic/tclCompile.h	/^MODULE_SCOPE InstructionDesc const tclInstructionTable[];$/;"	v	typeref:typename:MODULE_SCOPE InstructionDesc const[]
tclIntObjType	generic/tclObj.c	/^const ObjectType tclIntObjType = {$/;"	v	typeref:typename:const ObjectType
tclIntPlatStubs	generic/tclDecls.h	/^    const struct TclIntPlatStubs *tclIntPlatStubs;$/;"	m	struct:__anon103dd3350108	typeref:typename:const struct TclIntPlatStubs *
tclIntPlatStubs	generic/tclStubInit.c	/^static const TclIntPlatStubs tclIntPlatStubs = {$/;"	v	typeref:typename:const TclIntPlatStubs	file:
tclIntPlatStubsPtr	generic/tclStubLib.c	/^MODULE_SCOPE const TclIntPlatStubs *tclIntPlatStubsPtr;$/;"	v	typeref:typename:MODULE_SCOPE const TclIntPlatStubs *
tclIntPlatStubsPtr	generic/tclStubLib.c	/^const TclIntPlatStubs *tclIntPlatStubsPtr = NULL;$/;"	v	typeref:typename:const TclIntPlatStubs *
tclIntStubs	generic/tclDecls.h	/^    const struct TclIntStubs *tclIntStubs;$/;"	m	struct:__anon103dd3350108	typeref:typename:const struct TclIntStubs *
tclIntStubs	generic/tclStubInit.c	/^static const TclIntStubs tclIntStubs = {$/;"	v	typeref:typename:const TclIntStubs	file:
tclIntStubsPtr	generic/tclStubLib.c	/^MODULE_SCOPE const TclIntStubs *tclIntStubsPtr;$/;"	v	typeref:typename:MODULE_SCOPE const TclIntStubs *
tclIntStubsPtr	generic/tclStubLib.c	/^const TclIntStubs *tclIntStubsPtr = NULL;$/;"	v	typeref:typename:const TclIntStubs *
tclIntTypePtr	generic/tclInt.h	/^MODULE_SCOPE const Tcl_ObjType *tclIntTypePtr;$/;"	v	typeref:typename:MODULE_SCOPE const Tcl_ObjType *
tclIntTypePtr	generic/tclObj.c	/^MODULE_SCOPE const Tcl_ObjType *tclIntTypePtr = (Tcl_ObjType *)&tclIntObjType;$/;"	v	typeref:typename:MODULE_SCOPE const Tcl_ObjType *
tclInterp.o	unix/Makefile.in	/^tclInterp.o: $(GENERIC_DIR)\/tclInterp.c$/;"	t
tclInterpInit	generic/tclIntDecls.h	/^    int (*tclInterpInit) (Tcl_Interp *interp); \/* 51 *\/$/;"	m	struct:TclIntStubs	typeref:typename:int (*)(Tcl_Interp * interp)
tclIsProc	generic/tclIntDecls.h	/^    Proc * (*tclIsProc) (Command *cmdPtr); \/* 55 *\/$/;"	m	struct:TclIntStubs	typeref:typename:Proc * (*)(Command * cmdPtr)
tclJumptableInfoType	generic/tclCompCmdsSZ.c	/^const AuxDataType tclJumptableInfoType = {$/;"	v	typeref:typename:const AuxDataType
tclJumptableInfoType	generic/tclCompile.h	/^MODULE_SCOPE const AuxDataType tclJumptableInfoType;$/;"	v	typeref:typename:MODULE_SCOPE const AuxDataType
tclKqueueNotfy.o	unix/Makefile.in	/^tclKqueueNotfy.o: $(UNIX_DIR)\/tclKqueueNotfy.c $(UNIX_DIR)\/tclUnixNotfy.c$/;"	t
tclLambdaType	generic/tclCompile.h	/^MODULE_SCOPE const Tcl_ObjType tclLambdaType;$/;"	v	typeref:typename:MODULE_SCOPE const Tcl_ObjType
tclLibObjs	unix/Makefile.in	/^tclLibObjs:$/;"	t
tclLink.o	unix/Makefile.in	/^tclLink.o: $(GENERIC_DIR)\/tclLink.c$/;"	t
tclListObj.o	unix/Makefile.in	/^tclListObj.o: $(GENERIC_DIR)\/tclListObj.c$/;"	t
tclListObjSetElement	generic/tclIntDecls.h	/^    int (*tclListObjSetElement) (Tcl_Interp *interp, Tcl_Obj *listPtr, Tcl_Size index, Tcl_Obj */;"	m	struct:TclIntStubs	typeref:typename:int (*)(Tcl_Interp * interp,Tcl_Obj * listPtr,Tcl_Size index,Tcl_Obj * valuePtr)
tclListObjValidate	generic/tclIntDecls.h	/^    void (*tclListObjValidate) (Tcl_Interp *interp, Tcl_Obj *listObj); \/* 222 *\/$/;"	m	struct:TclIntStubs	typeref:typename:void (*)(Tcl_Interp * interp,Tcl_Obj * listObj)
tclListObjectType	generic/tclListObj.c	/^static ObjectType tclListObjectType = {$/;"	v	typeref:typename:ObjectType	file:
tclListTestObj	generic/tclIntDecls.h	/^    Tcl_Obj * (*tclListTestObj) (size_t length, size_t leadingSpace, size_t endSpace); \/* 221 */;"	m	struct:TclIntStubs	typeref:typename:Tcl_Obj * (*)(size_t length,size_t leadingSpace,size_t endSpace)
tclListTypePtr	generic/tclInt.h	/^MODULE_SCOPE Tcl_ObjType *tclListTypePtr;$/;"	v	typeref:typename:MODULE_SCOPE Tcl_ObjType *
tclListTypePtr	generic/tclListObj.c	/^Tcl_ObjType * tclListTypePtr = (Tcl_ObjType *)&tclListObjectType;$/;"	v	typeref:typename:Tcl_ObjType *
tclLiteral.o	unix/Makefile.in	/^tclLiteral.o: $(GENERIC_DIR)\/tclLiteral.c $(COMPILEHDR)$/;"	t
tclLoad.o	unix/Makefile.in	/^tclLoad.o: $(GENERIC_DIR)\/tclLoad.c$/;"	t
tclLoadAix.o	unix/Makefile.in	/^tclLoadAix.o: $(UNIX_DIR)\/tclLoadAix.c$/;"	t
tclLoadDl.o	unix/Makefile.in	/^tclLoadDl.o: $(UNIX_DIR)\/tclLoadDl.c$/;"	t
tclLoadDl2.o	unix/Makefile.in	/^tclLoadDl2.o: $(UNIX_DIR)\/tclLoadDl2.c$/;"	t
tclLoadDld.o	unix/Makefile.in	/^tclLoadDld.o: $(UNIX_DIR)\/tclLoadDld.c$/;"	t
tclLoadDyld.o	unix/Makefile.in	/^tclLoadDyld.o: $(UNIX_DIR)\/tclLoadDyld.c$/;"	t
tclLoadNone.o	unix/Makefile.in	/^tclLoadNone.o: $(GENERIC_DIR)\/tclLoadNone.c$/;"	t
tclLoadOSF.o	unix/Makefile.in	/^tclLoadOSF.o: $(UNIX_DIR)\/tclLoadOSF.c$/;"	t
tclLoadShl.o	unix/Makefile.in	/^tclLoadShl.o: $(UNIX_DIR)\/tclLoadShl.c$/;"	t
tclLookupVar	generic/tclIntDecls.h	/^    Var * (*tclLookupVar) (Tcl_Interp *interp, const char *part1, const char *part2, int flags, /;"	m	struct:TclIntStubs	typeref:typename:Var * (*)(Tcl_Interp * interp,const char * part1,const char * part2,int flags,const char * msg,int createPart1,int createPart2,Var ** arrayPtrPtr)
tclMacOSXBundle.o	unix/Makefile.in	/^tclMacOSXBundle.o: $(MAC_OSX_DIR)\/tclMacOSXBundle.c$/;"	t
tclMacOSXDarwinRelease	macosx/tclMacOSXBundle.c	/^MODULE_SCOPE long	tclMacOSXDarwinRelease;$/;"	v	typeref:typename:MODULE_SCOPE long
tclMacOSXDarwinRelease	macosx/tclMacOSXNotify.c	/^MODULE_SCOPE long tclMacOSXDarwinRelease;$/;"	v	typeref:typename:MODULE_SCOPE long
tclMacOSXDarwinRelease	unix/tclLoadDyld.c	/^MODULE_SCOPE long	tclMacOSXDarwinRelease;$/;"	v	typeref:typename:MODULE_SCOPE long
tclMacOSXDarwinRelease	unix/tclUnixFCmd.c	/^MODULE_SCOPE long tclMacOSXDarwinRelease;$/;"	v	typeref:typename:MODULE_SCOPE long
tclMacOSXDarwinRelease	unix/tclUnixInit.c	/^MODULE_SCOPE long tclMacOSXDarwinRelease;$/;"	v	typeref:typename:MODULE_SCOPE long
tclMacOSXDarwinRelease	unix/tclUnixInit.c	/^long tclMacOSXDarwinRelease = 0;$/;"	v	typeref:typename:long
tclMacOSXFCmd.o	unix/Makefile.in	/^tclMacOSXFCmd.o: $(MAC_OSX_DIR)\/tclMacOSXFCmd.c$/;"	t
tclMacOSXNotify.o	unix/Makefile.in	/^tclMacOSXNotify.o: $(MAC_OSX_DIR)\/tclMacOSXNotify.c$/;"	t
tclMain.o	unix/Makefile.in	/^tclMain.o: $(GENERIC_DIR)\/tclMain.c$/;"	t
tclMainW.${OBJEXT}	win/Makefile.in	/^tclMainW.${OBJEXT}: tclMain.c$/;"	t
tclMemDumpFileName	generic/tclCkalloc.c	/^char *tclMemDumpFileName = NULL;$/;"	v	typeref:typename:char *
tclMemDumpFileName	generic/tclInt.h	/^MODULE_SCOPE char *tclMemDumpFileName;$/;"	v	typeref:typename:MODULE_SCOPE char *
tclNREvalObjEx	generic/tclIntDecls.h	/^    int (*tclNREvalObjEx) (Tcl_Interp *interp, Tcl_Obj *objPtr, int flags, const CmdFrame *invok/;"	m	struct:TclIntStubs	typeref:typename:int (*)(Tcl_Interp * interp,Tcl_Obj * objPtr,int flags,const CmdFrame * invoker,int word)
tclNREvalObjv	generic/tclIntDecls.h	/^    int (*tclNREvalObjv) (Tcl_Interp *interp, Tcl_Size objc, Tcl_Obj *const objv[], int flags, C/;"	m	struct:TclIntStubs	typeref:typename:int (*)(Tcl_Interp * interp,Tcl_Size objc,Tcl_Obj * const objv[],int flags,Command * cmdPtr)
tclNRInterpProc	generic/tclIntDecls.h	/^    int (*tclNRInterpProc) (void *clientData, Tcl_Interp *interp, Tcl_Size objc, Tcl_Obj *const /;"	m	struct:TclIntStubs	typeref:typename:int (*)(void * clientData,Tcl_Interp * interp,Tcl_Size objc,Tcl_Obj * const objv[])
tclNRInterpProcCore	generic/tclIntDecls.h	/^    int (*tclNRInterpProcCore) (Tcl_Interp *interp, Tcl_Obj *procNameObj, Tcl_Size skip, ProcErr/;"	m	struct:TclIntStubs	typeref:typename:int (*)(Tcl_Interp * interp,Tcl_Obj * procNameObj,Tcl_Size skip,ProcErrorProc * errorProc)
tclNRRunCallbacks	generic/tclIntDecls.h	/^    int (*tclNRRunCallbacks) (Tcl_Interp *interp, int result, struct NRE_callback *rootPtr); \/*/;"	m	struct:TclIntStubs	typeref:typename:int (*)(Tcl_Interp * interp,int result,struct NRE_callback * rootPtr)
tclNamesp.o	unix/Makefile.in	/^tclNamesp.o: $(GENERIC_DIR)\/tclNamesp.c $(COMPILEHDR)$/;"	t
tclNativeExecutableName	generic/tclInt.h	/^MODULE_SCOPE char *tclNativeExecutableName;$/;"	v	typeref:typename:MODULE_SCOPE char *
tclNativeFilesystem	generic/tclFileSystem.h	/^MODULE_SCOPE const Tcl_Filesystem tclNativeFilesystem;$/;"	v	typeref:typename:MODULE_SCOPE const Tcl_Filesystem
tclNativeFilesystem	generic/tclIOUtil.c	/^const Tcl_Filesystem tclNativeFilesystem = {$/;"	v	typeref:typename:const Tcl_Filesystem
tclNeedSpace	generic/tclIntDecls.h	/^    int (*tclNeedSpace) (const char *start, const char *end); \/* 60 *\/$/;"	m	struct:TclIntStubs	typeref:typename:int (*)(const char * start,const char * end)
tclNewProcBodyObj	generic/tclIntDecls.h	/^    Tcl_Obj * (*tclNewProcBodyObj) (Proc *procPtr); \/* 61 *\/$/;"	m	struct:TclIntStubs	typeref:typename:Tcl_Obj * (*)(Proc * procPtr)
tclNotifierHooks	generic/tclNotify.c	/^static Tcl_NotifierProcs tclNotifierHooks = {$/;"	v	typeref:typename:Tcl_NotifierProcs	file:
tclNotify.o	unix/Makefile.in	/^tclNotify.o: $(GENERIC_DIR)\/tclNotify.c$/;"	t
tclNumUtfChars	generic/tclDecls.h	/^    Tcl_Size (*tclNumUtfChars) (const char *src, Tcl_Size length); \/* 312 *\/$/;"	m	struct:TclStubs	typeref:typename:Tcl_Size (*)(const char * src,Tcl_Size length)
tclOO.o	unix/Makefile.in	/^tclOO.o: $(GENERIC_DIR)\/tclOO.c $(GENERIC_DIR)\/tclOOScript.h$/;"	t
tclOOBasic.o	unix/Makefile.in	/^tclOOBasic.o: $(GENERIC_DIR)\/tclOOBasic.c$/;"	t
tclOOCall.o	unix/Makefile.in	/^tclOOCall.o: $(GENERIC_DIR)\/tclOOCall.c$/;"	t
tclOOClassSetFilters	generic/tclOOIntDecls.h	/^    void (*tclOOClassSetFilters) (Tcl_Interp *interp, Class *classPtr, Tcl_Size numFilters, Tcl_/;"	m	struct:TclOOIntStubs	typeref:typename:void (*)(Tcl_Interp * interp,Class * classPtr,Tcl_Size numFilters,Tcl_Obj * const * filters)
tclOOClassSetMixins	generic/tclOOIntDecls.h	/^    void (*tclOOClassSetMixins) (Tcl_Interp *interp, Class *classPtr, Tcl_Size numMixins, Class /;"	m	struct:TclOOIntStubs	typeref:typename:void (*)(Tcl_Interp * interp,Class * classPtr,Tcl_Size numMixins,Class * const * mixins)
tclOODefineCmds.o	unix/Makefile.in	/^tclOODefineCmds.o: $(GENERIC_DIR)\/tclOODefineCmds.c$/;"	t
tclOOGetDefineCmdContext	generic/tclOOIntDecls.h	/^    Tcl_Object (*tclOOGetDefineCmdContext) (Tcl_Interp *interp); \/* 0 *\/$/;"	m	struct:TclOOIntStubs	typeref:typename:Tcl_Object (*)(Tcl_Interp * interp)
tclOOInfo.o	unix/Makefile.in	/^tclOOInfo.o: $(GENERIC_DIR)\/tclOOInfo.c$/;"	t
tclOOIntStubs	generic/tclOODecls.h	/^    const struct TclOOIntStubs *tclOOIntStubs;$/;"	m	struct:__anon670f38f30108	typeref:typename:const struct TclOOIntStubs *
tclOOIntStubs	generic/tclOOStubInit.c	/^static const TclOOIntStubs tclOOIntStubs = {$/;"	v	typeref:typename:const TclOOIntStubs	file:
tclOOIntStubsPtr	generic/tclOOStubLib.c	/^MODULE_SCOPE const TclOOIntStubs *tclOOIntStubsPtr;$/;"	v	typeref:typename:MODULE_SCOPE const TclOOIntStubs *
tclOOIntStubsPtr	generic/tclOOStubLib.c	/^const TclOOIntStubs *tclOOIntStubsPtr = NULL;$/;"	v	typeref:typename:const TclOOIntStubs *
tclOOInvokeObject	generic/tclOOIntDecls.h	/^    int (*tclOOInvokeObject) (Tcl_Interp *interp, Tcl_Object object, Tcl_Class startCls, int pub/;"	m	struct:TclOOIntStubs	typeref:typename:int (*)(Tcl_Interp * interp,Tcl_Object object,Tcl_Class startCls,int publicPrivate,Tcl_Size objc,Tcl_Obj * const * objv)
tclOOIsReachable	generic/tclOOIntDecls.h	/^    int (*tclOOIsReachable) (Class *targetPtr, Class *startPtr); \/* 6 *\/$/;"	m	struct:TclOOIntStubs	typeref:typename:int (*)(Class * targetPtr,Class * startPtr)
tclOOMakeProcInstanceMethod	generic/tclOOIntDecls.h	/^    Tcl_Method (*tclOOMakeProcInstanceMethod) (Tcl_Interp *interp, Object *oPtr, int flags, Tcl_/;"	m	struct:TclOOIntStubs	typeref:typename:Tcl_Method (*)(Tcl_Interp * interp,Object * oPtr,int flags,Tcl_Obj * nameObj,Tcl_Obj * argsObj,Tcl_Obj * bodyObj,const Tcl_MethodType * typePtr,void * clientData,Proc ** procPtrPtr)
tclOOMakeProcMethod	generic/tclOOIntDecls.h	/^    Tcl_Method (*tclOOMakeProcMethod) (Tcl_Interp *interp, Class *clsPtr, int flags, Tcl_Obj *na/;"	m	struct:TclOOIntStubs	typeref:typename:Tcl_Method (*)(Tcl_Interp * interp,Class * clsPtr,int flags,Tcl_Obj * nameObj,const char * namePtr,Tcl_Obj * argsObj,Tcl_Obj * bodyObj,const Tcl_MethodType * typePtr,void * clientData,Proc ** procPtrPtr)
tclOOMethod.o	unix/Makefile.in	/^tclOOMethod.o: $(GENERIC_DIR)\/tclOOMethod.c$/;"	t
tclOONewForwardInstanceMethod	generic/tclOOIntDecls.h	/^    Method * (*tclOONewForwardInstanceMethod) (Tcl_Interp *interp, Object *oPtr, int isPublic, T/;"	m	struct:TclOOIntStubs	typeref:typename:Method * (*)(Tcl_Interp * interp,Object * oPtr,int isPublic,Tcl_Obj * nameObj,Tcl_Obj * prefixObj)
tclOONewForwardMethod	generic/tclOOIntDecls.h	/^    Method * (*tclOONewForwardMethod) (Tcl_Interp *interp, Class *clsPtr, int isPublic, Tcl_Obj /;"	m	struct:TclOOIntStubs	typeref:typename:Method * (*)(Tcl_Interp * interp,Class * clsPtr,int isPublic,Tcl_Obj * nameObj,Tcl_Obj * prefixObj)
tclOONewProcInstanceMethod	generic/tclOOIntDecls.h	/^    Method * (*tclOONewProcInstanceMethod) (Tcl_Interp *interp, Object *oPtr, int flags, Tcl_Obj/;"	m	struct:TclOOIntStubs	typeref:typename:Method * (*)(Tcl_Interp * interp,Object * oPtr,int flags,Tcl_Obj * nameObj,Tcl_Obj * argsObj,Tcl_Obj * bodyObj,ProcedureMethod ** pmPtrPtr)
tclOONewProcInstanceMethodEx	generic/tclOOIntDecls.h	/^    Tcl_Method (*tclOONewProcInstanceMethodEx) (Tcl_Interp *interp, Tcl_Object oPtr, TclOO_PreCa/;"	m	struct:TclOOIntStubs	typeref:typename:Tcl_Method (*)(Tcl_Interp * interp,Tcl_Object oPtr,TclOO_PreCallProc * preCallPtr,TclOO_PostCallProc * postCallPtr,ProcErrorProc * errProc,void * clientData,Tcl_Obj * nameObj,Tcl_Obj * argsObj,Tcl_Obj * bodyObj,int flags,void ** internalTokenPtr)
tclOONewProcMethod	generic/tclOOIntDecls.h	/^    Method * (*tclOONewProcMethod) (Tcl_Interp *interp, Class *clsPtr, int flags, Tcl_Obj *nameO/;"	m	struct:TclOOIntStubs	typeref:typename:Method * (*)(Tcl_Interp * interp,Class * clsPtr,int flags,Tcl_Obj * nameObj,Tcl_Obj * argsObj,Tcl_Obj * bodyObj,ProcedureMethod ** pmPtrPtr)
tclOONewProcMethodEx	generic/tclOOIntDecls.h	/^    Tcl_Method (*tclOONewProcMethodEx) (Tcl_Interp *interp, Tcl_Class clsPtr, TclOO_PreCallProc /;"	m	struct:TclOOIntStubs	typeref:typename:Tcl_Method (*)(Tcl_Interp * interp,Tcl_Class clsPtr,TclOO_PreCallProc * preCallPtr,TclOO_PostCallProc * postCallPtr,ProcErrorProc * errProc,void * clientData,Tcl_Obj * nameObj,Tcl_Obj * argsObj,Tcl_Obj * bodyObj,int flags,void ** internalTokenPtr)
tclOOObjectCmdCore	generic/tclOOIntDecls.h	/^    int (*tclOOObjectCmdCore) (Object *oPtr, Tcl_Interp *interp, Tcl_Size objc, Tcl_Obj *const */;"	m	struct:TclOOIntStubs	typeref:typename:int (*)(Object * oPtr,Tcl_Interp * interp,Tcl_Size objc,Tcl_Obj * const * objv,int publicOnly,Class * startCls)
tclOOObjectSetFilters	generic/tclOOIntDecls.h	/^    void (*tclOOObjectSetFilters) (Object *oPtr, Tcl_Size numFilters, Tcl_Obj *const *filters); /;"	m	struct:TclOOIntStubs	typeref:typename:void (*)(Object * oPtr,Tcl_Size numFilters,Tcl_Obj * const * filters)
tclOOObjectSetMixins	generic/tclOOIntDecls.h	/^    void (*tclOOObjectSetMixins) (Object *oPtr, Tcl_Size numMixins, Class *const *mixins); \/* 1/;"	m	struct:TclOOIntStubs	typeref:typename:void (*)(Object * oPtr,Tcl_Size numMixins,Class * const * mixins)
tclOOProp.o	unix/Makefile.in	/^tclOOProp.o: $(GENERIC_DIR)\/tclOOProp.c$/;"	t
tclOOSetupScript	generic/tclOOScript.h	/^static const char *tclOOSetupScript =$/;"	v	typeref:typename:const char *
tclOOStubHooks	generic/tclOOStubInit.c	/^static const TclOOStubHooks tclOOStubHooks = {$/;"	v	typeref:typename:const TclOOStubHooks	file:
tclOOStubInit.o	unix/Makefile.in	/^tclOOStubInit.o: $(GENERIC_DIR)\/tclOOStubInit.c$/;"	t
tclOOStubLib.${OBJEXT}	win/Makefile.in	/^tclOOStubLib.${OBJEXT}: tclOOStubLib.c$/;"	t
tclOOStubLib.o	unix/Makefile.in	/^tclOOStubLib.o: $(GENERIC_DIR)\/tclOOStubLib.c$/;"	t
tclOOStubs	generic/tclOO.c	/^MODULE_SCOPE const TclOOStubs tclOOStubs;$/;"	v	typeref:typename:MODULE_SCOPE const TclOOStubs
tclOOStubs	generic/tclOOStubInit.c	/^MODULE_SCOPE const TclOOStubs tclOOStubs;$/;"	v	typeref:typename:MODULE_SCOPE const TclOOStubs
tclOOStubs	generic/tclOOStubInit.c	/^const TclOOStubs tclOOStubs = {$/;"	v	typeref:typename:const TclOOStubs
tclOOStubsPtr	generic/tclOOStubLib.c	/^MODULE_SCOPE const TclOOStubs *tclOOStubsPtr;$/;"	v	typeref:typename:MODULE_SCOPE const TclOOStubs *
tclOOStubsPtr	generic/tclOOStubLib.c	/^const TclOOStubs *tclOOStubsPtr = NULL;$/;"	v	typeref:typename:const TclOOStubs *
tclOSTypeType	macosx/tclMacOSXFCmd.c	/^static const Tcl_ObjType tclOSTypeType = {$/;"	v	typeref:typename:const Tcl_ObjType	file:
tclObj.o	unix/Makefile.in	/^tclObj.o: $(GENERIC_DIR)\/tclObj.c $(COMPILEHDR) $(MATHHDRS)$/;"	t
tclObjBeingDeleted	generic/tclIntDecls.h	/^    int (*tclObjBeingDeleted) (Tcl_Obj *objPtr); \/* 226 *\/$/;"	m	struct:TclIntStubs	typeref:typename:int (*)(Tcl_Obj * objPtr)
tclObjCommandComplete	generic/tclIntDecls.h	/^    int (*tclObjCommandComplete) (Tcl_Obj *cmdPtr); \/* 62 *\/$/;"	m	struct:TclIntStubs	typeref:typename:int (*)(Tcl_Obj * cmdPtr)
tclObjGetFrame	generic/tclIntDecls.h	/^    int (*tclObjGetFrame) (Tcl_Interp *interp, Tcl_Obj *objPtr, CallFrame **framePtrPtr); \/* 19/;"	m	struct:TclIntStubs	typeref:typename:int (*)(Tcl_Interp * interp,Tcl_Obj * objPtr,CallFrame ** framePtrPtr)
tclObjHashKeyType	generic/tclInt.h	/^MODULE_SCOPE const Tcl_HashKeyType tclObjHashKeyType;$/;"	v	typeref:typename:MODULE_SCOPE const Tcl_HashKeyType
tclObjHashKeyType	generic/tclObj.c	/^const Tcl_HashKeyType tclObjHashKeyType = {$/;"	v	typeref:typename:const Tcl_HashKeyType
tclObjInterface.o	unix/Makefile.in	/^tclObjInterface.o: $(GENERIC_DIR)\/tclObjInterface.c $(COMPILEHDR) $(MATHHDRS)$/;"	t
tclObjInvoke	generic/tclIntDecls.h	/^    int (*tclObjInvoke) (Tcl_Interp *interp, Tcl_Size objc, Tcl_Obj *const objv[], int flags); \//;"	m	struct:TclIntStubs	typeref:typename:int (*)(Tcl_Interp * interp,Tcl_Size objc,Tcl_Obj * const objv[],int flags)
tclObjLookupVar	generic/tclIntDecls.h	/^    Var * (*tclObjLookupVar) (Tcl_Interp *interp, Tcl_Obj *part1Ptr, const char *part2, int flag/;"	m	struct:TclIntStubs	typeref:typename:Var * (*)(Tcl_Interp * interp,Tcl_Obj * part1Ptr,const char * part2,int flags,const char * msg,int createPart1,int createPart2,Var ** arrayPtrPtr)
tclObjMutex	generic/tclInt.h	/^MODULE_SCOPE Tcl_Mutex	tclObjMutex;$/;"	v	typeref:typename:MODULE_SCOPE Tcl_Mutex
tclObjMutex	generic/tclObj.c	/^MODULE_SCOPE Tcl_Mutex tclObjMutex;$/;"	v	typeref:typename:MODULE_SCOPE Tcl_Mutex
tclObjMutex	generic/tclObj.c	/^Tcl_Mutex tclObjMutex;$/;"	v	typeref:typename:Tcl_Mutex
tclObjTypeInterfaceArgsListAll	generic/tcl.h	/^#define tclObjTypeInterfaceArgsListAll /;"	d
tclObjTypeInterfaceArgsListAppend	generic/tcl.h	/^#define tclObjTypeInterfaceArgsListAppend /;"	d
tclObjTypeInterfaceArgsListAppendList	generic/tcl.h	/^#define tclObjTypeInterfaceArgsListAppendList /;"	d
tclObjTypeInterfaceArgsListContains	generic/tcl.h	/^#define tclObjTypeInterfaceArgsListContains /;"	d
tclObjTypeInterfaceArgsListIndex	generic/tcl.h	/^#define tclObjTypeInterfaceArgsListIndex /;"	d
tclObjTypeInterfaceArgsListIndexEnd	generic/tcl.h	/^#define tclObjTypeInterfaceArgsListIndexEnd /;"	d
tclObjTypeInterfaceArgsListIsSorted	generic/tcl.h	/^#define tclObjTypeInterfaceArgsListIsSorted /;"	d
tclObjTypeInterfaceArgsListLength	generic/tcl.h	/^#define tclObjTypeInterfaceArgsListLength /;"	d
tclObjTypeInterfaceArgsListRange	generic/tcl.h	/^#define tclObjTypeInterfaceArgsListRange /;"	d
tclObjTypeInterfaceArgsListRangeEnd	generic/tcl.h	/^#define tclObjTypeInterfaceArgsListRangeEnd /;"	d
tclObjTypeInterfaceArgsListReplace	generic/tcl.h	/^#define tclObjTypeInterfaceArgsListReplace /;"	d
tclObjTypeInterfaceArgsListReplaceList	generic/tcl.h	/^#define tclObjTypeInterfaceArgsListReplaceList /;"	d
tclObjTypeInterfaceArgsListReverse	generic/tcl.h	/^#define tclObjTypeInterfaceArgsListReverse /;"	d
tclObjTypeInterfaceArgsListSet	generic/tcl.h	/^#define tclObjTypeInterfaceArgsListSet /;"	d
tclObjTypeInterfaceArgsListSetDeep	generic/tcl.h	/^#define tclObjTypeInterfaceArgsListSetDeep /;"	d
tclObjTypeInterfaceArgsStringIndex	generic/tcl.h	/^#define tclObjTypeInterfaceArgsStringIndex /;"	d
tclObjTypeInterfaceArgsStringIndexEnd	generic/tcl.h	/^#define tclObjTypeInterfaceArgsStringIndexEnd /;"	d
tclObjTypeInterfaceArgsStringIsEmpty	generic/tcl.h	/^#define tclObjTypeInterfaceArgsStringIsEmpty /;"	d
tclObjTypeInterfaceArgsStringLength	generic/tcl.h	/^#define tclObjTypeInterfaceArgsStringLength /;"	d
tclObjTypeInterfaceArgsStringRange	generic/tcl.h	/^#define tclObjTypeInterfaceArgsStringRange /;"	d
tclObjTypeInterfaceArgsStringRangeEnd	generic/tcl.h	/^#define tclObjTypeInterfaceArgsStringRangeEnd /;"	d
tclObjsAlloced	generic/tclExecute.c	/^size_t		tclObjsAlloced = 0;$/;"	v	typeref:typename:size_t
tclObjsAlloced	generic/tclInt.h	/^MODULE_SCOPE size_t	tclObjsAlloced;$/;"	v	typeref:typename:MODULE_SCOPE size_t
tclObjsFreed	generic/tclExecute.c	/^size_t		tclObjsFreed = 0;$/;"	v	typeref:typename:size_t
tclObjsFreed	generic/tclInt.h	/^MODULE_SCOPE size_t	tclObjsFreed;$/;"	v	typeref:typename:MODULE_SCOPE size_t
tclObjsShared	generic/tclExecute.c	/^size_t		tclObjsShared[TCL_MAX_SHARED_OBJ_STATS] = { 0, 0, 0, 0, 0 };$/;"	v	typeref:typename:size_t[]
tclObjsShared	generic/tclInt.h	/^MODULE_SCOPE size_t	tclObjsShared[TCL_MAX_SHARED_OBJ_STATS];$/;"	v	typeref:typename:MODULE_SCOPE size_t[]
tclOneWordHashKeyType	generic/tclHash.c	/^const Tcl_HashKeyType tclOneWordHashKeyType = {$/;"	v	typeref:typename:const Tcl_HashKeyType
tclOneWordHashKeyType	generic/tclInt.h	/^MODULE_SCOPE const Tcl_HashKeyType tclOneWordHashKeyType;$/;"	v	typeref:typename:MODULE_SCOPE const Tcl_HashKeyType
tclOptimize.o	unix/Makefile.in	/^tclOptimize.o: $(GENERIC_DIR)\/tclOptimize.c $(COMPILEHDR)$/;"	t
tclPanic.o	unix/Makefile.in	/^tclPanic.o: $(GENERIC_DIR)\/tclPanic.c$/;"	t
tclParse.o	unix/Makefile.in	/^tclParse.o: $(GENERIC_DIR)\/tclParse.c $(PARSEHDR)$/;"	t
tclParseArgsObjv	generic/tclDecls.h	/^    int (*tclParseArgsObjv) (Tcl_Interp *interp, const Tcl_ArgvInfo *argTable, void *objcPtr, Tc/;"	m	struct:TclStubs	typeref:typename:int (*)(Tcl_Interp * interp,const Tcl_ArgvInfo * argTable,void * objcPtr,Tcl_Obj * const * objv,Tcl_Obj *** remObjv)
tclPathObj.o	unix/Makefile.in	/^tclPathObj.o: $(GENERIC_DIR)\/tclPathObj.c $(FSHDR)$/;"	t
tclPipe.o	unix/Makefile.in	/^tclPipe.o: $(GENERIC_DIR)\/tclPipe.c$/;"	t
tclPkg.o	unix/Makefile.in	/^tclPkg.o: $(GENERIC_DIR)\/tclPkg.c$/;"	t
tclPkgConfig.${OBJEXT}	win/Makefile.in	/^tclPkgConfig.${OBJEXT}: tclPkgConfig.c$/;"	t
tclPkgConfig.o	unix/Makefile.in	/^tclPkgConfig.o: $(GENERIC_DIR)\/tclPkgConfig.c$/;"	t
tclPkgSetup	library/package.tcl	/^proc tclPkgSetup {dir pkg version files} {$/;"	p
tclPkgUnknown	library/package.tcl	/^proc tclPkgUnknown {name args} {$/;"	p
tclPlatStubs	generic/tclDecls.h	/^    const struct TclPlatStubs *tclPlatStubs;$/;"	m	struct:__anon103dd3350108	typeref:typename:const struct TclPlatStubs *
tclPlatStubs	generic/tclStubInit.c	/^static const TclPlatStubs tclPlatStubs = {$/;"	v	typeref:typename:const TclPlatStubs	file:
tclPlatStubsPtr	generic/tclStubLib.c	/^MODULE_SCOPE const TclPlatStubs *tclPlatStubsPtr;$/;"	v	typeref:typename:MODULE_SCOPE const TclPlatStubs *
tclPlatStubsPtr	generic/tclStubLib.c	/^const TclPlatStubs *tclPlatStubsPtr = NULL;$/;"	v	typeref:typename:const TclPlatStubs *
tclPlatform	generic/tclFileName.c	/^TclPlatformType tclPlatform = TCL_PLATFORM_UNIX;$/;"	v	typeref:typename:TclPlatformType
tclPlatform	generic/tclInt.h	/^MODULE_SCOPE TclPlatformType tclPlatform;$/;"	v	typeref:typename:MODULE_SCOPE TclPlatformType
tclPopStackFrame	generic/tclIntDecls.h	/^    void (*tclPopStackFrame) (Tcl_Interp *interp); \/* 218 *\/$/;"	m	struct:TclIntStubs	typeref:typename:void (*)(Tcl_Interp * interp)
tclPosixStr.o	unix/Makefile.in	/^tclPosixStr.o: $(GENERIC_DIR)\/tclPosixStr.c$/;"	t
tclPreInitScript	generic/tclInterp.c	/^static const char *tclPreInitScript = NULL;$/;"	v	typeref:typename:const char *	file:
tclPreserve.o	unix/Makefile.in	/^tclPreserve.o: $(GENERIC_DIR)\/tclPreserve.c$/;"	t
tclPreventAliasLoop	generic/tclIntDecls.h	/^    int (*tclPreventAliasLoop) (Tcl_Interp *interp, Tcl_Interp *cmdInterp, Tcl_Command cmd); \/*/;"	m	struct:TclIntStubs	typeref:typename:int (*)(Tcl_Interp * interp,Tcl_Interp * cmdInterp,Tcl_Command cmd)
tclProc.o	unix/Makefile.in	/^tclProc.o: $(GENERIC_DIR)\/tclProc.c $(COMPILEHDR) $(NREHDR)$/;"	t
tclProcBodyType	generic/tclInt.h	/^MODULE_SCOPE const Tcl_ObjType tclProcBodyType;$/;"	v	typeref:typename:MODULE_SCOPE const Tcl_ObjType
tclProcBodyType	generic/tclProc.c	/^const Tcl_ObjType tclProcBodyType = {$/;"	v	typeref:typename:const Tcl_ObjType
tclProcCleanupProc	generic/tclIntDecls.h	/^    void (*tclProcCleanupProc) (Proc *procPtr); \/* 91 *\/$/;"	m	struct:TclIntStubs	typeref:typename:void (*)(Proc * procPtr)
tclProcCompileProc	generic/tclIntDecls.h	/^    int (*tclProcCompileProc) (Tcl_Interp *interp, Proc *procPtr, Tcl_Obj *bodyPtr, Namespace *n/;"	m	struct:TclIntStubs	typeref:typename:int (*)(Tcl_Interp * interp,Proc * procPtr,Tcl_Obj * bodyPtr,Namespace * nsPtr,const char * description,const char * procName)
tclProcDeleteProc	generic/tclIntDecls.h	/^    void (*tclProcDeleteProc) (void *clientData); \/* 93 *\/$/;"	m	struct:TclIntStubs	typeref:typename:void (*)(void * clientData)
tclProcess.o	unix/Makefile.in	/^tclProcess.o: $(GENERIC_DIR)\/tclProcess.c$/;"	t
tclPtrGetVar	generic/tclIntDecls.h	/^    Tcl_Obj * (*tclPtrGetVar) (Tcl_Interp *interp, Tcl_Var varPtr, Tcl_Var arrayPtr, Tcl_Obj *pa/;"	m	struct:TclIntStubs	typeref:typename:Tcl_Obj * (*)(Tcl_Interp * interp,Tcl_Var varPtr,Tcl_Var arrayPtr,Tcl_Obj * part1Ptr,Tcl_Obj * part2Ptr,int flags)
tclPtrIncrObjVar	generic/tclIntDecls.h	/^    Tcl_Obj * (*tclPtrIncrObjVar) (Tcl_Interp *interp, Tcl_Var varPtr, Tcl_Var arrayPtr, Tcl_Obj/;"	m	struct:TclIntStubs	typeref:typename:Tcl_Obj * (*)(Tcl_Interp * interp,Tcl_Var varPtr,Tcl_Var arrayPtr,Tcl_Obj * part1Ptr,Tcl_Obj * part2Ptr,Tcl_Obj * incrPtr,int flags)
tclPtrMakeUpvar	generic/tclIntDecls.h	/^    int (*tclPtrMakeUpvar) (Tcl_Interp *interp, Var *otherP1Ptr, const char *myName, int myFlags/;"	m	struct:TclIntStubs	typeref:typename:int (*)(Tcl_Interp * interp,Var * otherP1Ptr,const char * myName,int myFlags,int index)
tclPtrObjMakeUpvar	generic/tclIntDecls.h	/^    int (*tclPtrObjMakeUpvar) (Tcl_Interp *interp, Tcl_Var otherPtr, Tcl_Obj *myNamePtr, int myF/;"	m	struct:TclIntStubs	typeref:typename:int (*)(Tcl_Interp * interp,Tcl_Var otherPtr,Tcl_Obj * myNamePtr,int myFlags)
tclPtrSetVar	generic/tclIntDecls.h	/^    Tcl_Obj * (*tclPtrSetVar) (Tcl_Interp *interp, Tcl_Var varPtr, Tcl_Var arrayPtr, Tcl_Obj *pa/;"	m	struct:TclIntStubs	typeref:typename:Tcl_Obj * (*)(Tcl_Interp * interp,Tcl_Var varPtr,Tcl_Var arrayPtr,Tcl_Obj * part1Ptr,Tcl_Obj * part2Ptr,Tcl_Obj * newValuePtr,int flags)
tclPtrUnsetVar	generic/tclIntDecls.h	/^    int (*tclPtrUnsetVar) (Tcl_Interp *interp, Tcl_Var varPtr, Tcl_Var arrayPtr, Tcl_Obj *part1P/;"	m	struct:TclIntStubs	typeref:typename:int (*)(Tcl_Interp * interp,Tcl_Var varPtr,Tcl_Var arrayPtr,Tcl_Obj * part1Ptr,Tcl_Obj * part2Ptr,int flags)
tclPushStackFrame	generic/tclIntDecls.h	/^    int (*tclPushStackFrame) (Tcl_Interp *interp, Tcl_CallFrame **framePtrPtr, Tcl_Namespace *na/;"	m	struct:TclIntStubs	typeref:typename:int (*)(Tcl_Interp * interp,Tcl_CallFrame ** framePtrPtr,Tcl_Namespace * namespacePtr,int isProcCallFrame)
tclRegAbout	generic/tclIntDecls.h	/^    int (*tclRegAbout) (Tcl_Interp *interp, Tcl_RegExp re); \/* 150 *\/$/;"	m	struct:TclIntStubs	typeref:typename:int (*)(Tcl_Interp * interp,Tcl_RegExp re)
tclRegError	generic/tclIntDecls.h	/^    void (*tclRegError) (Tcl_Interp *interp, const char *msg, int status); \/* 156 *\/$/;"	m	struct:TclIntStubs	typeref:typename:void (*)(Tcl_Interp * interp,const char * msg,int status)
tclRegExpRangeUniChar	generic/tclIntDecls.h	/^    void (*tclRegExpRangeUniChar) (Tcl_RegExp re, Tcl_Size index, Tcl_Size *startPtr, Tcl_Size */;"	m	struct:TclIntStubs	typeref:typename:void (*)(Tcl_RegExp re,Tcl_Size index,Tcl_Size * startPtr,Tcl_Size * endPtr)
tclRegexp.o	unix/Makefile.in	/^tclRegexp.o: $(GENERIC_DIR)\/tclRegexp.c $(TCLREHDRS)$/;"	t
tclRegexpType	generic/tclInt.h	/^MODULE_SCOPE const Tcl_ObjType tclRegexpType;$/;"	v	typeref:typename:MODULE_SCOPE const Tcl_ObjType
tclRegexpType	generic/tclRegexp.c	/^const Tcl_ObjType tclRegexpType = {$/;"	v	typeref:typename:const Tcl_ObjType
tclRegisterLiteral	generic/tclIntDecls.h	/^    int (*tclRegisterLiteral) (void *envPtr, const char *bytes, Tcl_Size length, int flags); \/*/;"	m	struct:TclIntStubs	typeref:typename:int (*)(void * envPtr,const char * bytes,Tcl_Size length,int flags)
tclRenameCommand	generic/tclIntDecls.h	/^    int (*tclRenameCommand) (Tcl_Interp *interp, const char *oldName, const char *newName); \/* /;"	m	struct:TclIntStubs	typeref:typename:int (*)(Tcl_Interp * interp,const char * oldName,const char * newName)
tclResetCancellation	generic/tclIntDecls.h	/^    int (*tclResetCancellation) (Tcl_Interp *interp, int force); \/* 237 *\/$/;"	m	struct:TclIntStubs	typeref:typename:int (*)(Tcl_Interp * interp,int force)
tclResetRewriteEnsemble	generic/tclIntDecls.h	/^    void (*tclResetRewriteEnsemble) (Tcl_Interp *interp, int isRootEnsemble); \/* 247 *\/$/;"	m	struct:TclIntStubs	typeref:typename:void (*)(Tcl_Interp * interp,int isRootEnsemble)
tclResetShadowedCmdRefs	generic/tclIntDecls.h	/^    void (*tclResetShadowedCmdRefs) (Tcl_Interp *interp, Command *newCmdPtr); \/* 97 *\/$/;"	m	struct:TclIntStubs	typeref:typename:void (*)(Tcl_Interp * interp,Command * newCmdPtr)
tclResolve.o	unix/Makefile.in	/^tclResolve.o: $(GENERIC_DIR)\/tclResolve.c$/;"	t
tclResult.o	unix/Makefile.in	/^tclResult.o: $(GENERIC_DIR)\/tclResult.c$/;"	t
tclScalarInterface	generic/tclObj.c	/^ObjInterface tclScalarInterface = {$/;"	v	typeref:typename:ObjInterface
tclScaleTimeProcPtr	generic/tclInt.h	/^MODULE_SCOPE Tcl_ScaleTimeProc *tclScaleTimeProcPtr;$/;"	v	typeref:typename:MODULE_SCOPE Tcl_ScaleTimeProc *
tclScaleTimeProcPtr	unix/tclUnixTime.c	/^Tcl_ScaleTimeProc *tclScaleTimeProcPtr = NativeScaleTime;$/;"	v	typeref:typename:Tcl_ScaleTimeProc *
tclScaleTimeProcPtr	win/tclWinTime.c	/^Tcl_ScaleTimeProc *tclScaleTimeProcPtr = NativeScaleTime;$/;"	v	typeref:typename:Tcl_ScaleTimeProc *
tclScan.o	unix/Makefile.in	/^tclScan.o: $(GENERIC_DIR)\/tclScan.c$/;"	t
tclSelectNotfy.o	unix/Makefile.in	/^tclSelectNotfy.o: $(UNIX_DIR)\/tclSelectNotfy.c $(UNIX_DIR)\/tclUnixNotfy.c$/;"	t
tclServiceIdle	generic/tclIntDecls.h	/^    int (*tclServiceIdle) (void); \/* 98 *\/$/;"	m	struct:TclIntStubs	typeref:typename:int (*)(void)
tclSetByteCodeFromAny	generic/tclIntDecls.h	/^    int (*tclSetByteCodeFromAny) (Tcl_Interp *interp, Tcl_Obj *objPtr, CompileHookProc *hookProc/;"	m	struct:TclIntStubs	typeref:typename:int (*)(Tcl_Interp * interp,Tcl_Obj * objPtr,CompileHookProc * hookProc,void * clientData)
tclSetChildCancelFlags	generic/tclIntDecls.h	/^    void (*tclSetChildCancelFlags) (Tcl_Interp *interp, int flags, int force); \/* 250 *\/$/;"	m	struct:TclIntStubs	typeref:typename:void (*)(Tcl_Interp * interp,int flags,int force)
tclSetNsPath	generic/tclIntDecls.h	/^    void (*tclSetNsPath) (Namespace *nsPtr, Tcl_Size pathLength, Tcl_Namespace *pathAry[]); \/* /;"	m	struct:TclIntStubs	typeref:typename:void (*)(Namespace * nsPtr,Tcl_Size pathLength,Tcl_Namespace * pathAry[])
tclSetObjNameOfExecutable	generic/tclIntDecls.h	/^    void (*tclSetObjNameOfExecutable) (Tcl_Obj *name, Tcl_Encoding encoding); \/* 214 *\/$/;"	m	struct:TclIntStubs	typeref:typename:void (*)(Tcl_Obj * name,Tcl_Encoding encoding)
tclSetupEnv	generic/tclIntDecls.h	/^    void (*tclSetupEnv) (Tcl_Interp *interp); \/* 102 *\/$/;"	m	struct:TclIntStubs	typeref:typename:void (*)(Tcl_Interp * interp)
tclSockGetPort	generic/tclIntDecls.h	/^    int (*tclSockGetPort) (Tcl_Interp *interp, const char *str, const char *proto, int *portPtr)/;"	m	struct:TclIntStubs	typeref:typename:int (*)(Tcl_Interp * interp,const char * str,const char * proto,int * portPtr)
tclSockMinimumBuffers	generic/tclIntDecls.h	/^    int (*tclSockMinimumBuffers) (void *sock, Tcl_Size size); \/* 110 *\/$/;"	m	struct:TclIntStubs	typeref:typename:int (*)(void * sock,Tcl_Size size)
tclSplitList	generic/tclDecls.h	/^    int (*tclSplitList) (Tcl_Interp *interp, const char *listStr, void *argcPtr, const char ***a/;"	m	struct:TclStubs	typeref:typename:int (*)(Tcl_Interp * interp,const char * listStr,void * argcPtr,const char *** argvPtr)
tclSplitPath	generic/tclDecls.h	/^    void (*tclSplitPath) (const char *path, void *argcPtr, const char ***argvPtr); \/* 243 *\/$/;"	m	struct:TclStubs	typeref:typename:void (*)(const char * path,void * argcPtr,const char *** argvPtr)
tclStackAlloc	generic/tclIntDecls.h	/^    void * (*tclStackAlloc) (Tcl_Interp *interp, TCL_HASH_TYPE numBytes); \/* 215 *\/$/;"	m	struct:TclIntStubs	typeref:typename:void * (*)(Tcl_Interp * interp,TCL_HASH_TYPE numBytes)
tclStackFree	generic/tclIntDecls.h	/^    void (*tclStackFree) (Tcl_Interp *interp, void *freePtr); \/* 216 *\/$/;"	m	struct:TclIntStubs	typeref:typename:void (*)(Tcl_Interp * interp,void * freePtr)
tclStaticLibrary	generic/tclIntDecls.h	/^    void (*tclStaticLibrary) (Tcl_Interp *interp, const char *prefix, Tcl_LibraryInitProc *initP/;"	m	struct:TclIntStubs	typeref:typename:void (*)(Tcl_Interp * interp,const char * prefix,Tcl_LibraryInitProc * initProc,Tcl_LibraryInitProc * safeInitProc)
tclStrIdxTree.o	unix/Makefile.in	/^tclStrIdxTree.o: $(GENERIC_DIR)\/tclStrIdxTree.c $(MATHHDRS)$/;"	t
tclStrToD.o	unix/Makefile.in	/^tclStrToD.o: $(GENERIC_DIR)\/tclStrToD.c $(MATHHDRS)$/;"	t
tclStringClassTable	generic/tclCompCmdsSZ.c	/^StringClassDesc const tclStringClassTable[] = {$/;"	v	typeref:typename:StringClassDesc const[]
tclStringClassTable	generic/tclCompile.h	/^MODULE_SCOPE StringClassDesc const tclStringClassTable[];$/;"	v	typeref:typename:MODULE_SCOPE StringClassDesc const[]
tclStringHashKeyType	generic/tclHash.c	/^const Tcl_HashKeyType tclStringHashKeyType = {$/;"	v	typeref:typename:const Tcl_HashKeyType
tclStringHashKeyType	generic/tclInt.h	/^MODULE_SCOPE const Tcl_HashKeyType tclStringHashKeyType;$/;"	v	typeref:typename:MODULE_SCOPE const Tcl_HashKeyType
tclStringObj.o	unix/Makefile.in	/^tclStringObj.o: $(GENERIC_DIR)\/tclStringObj.c $(MATHHDRS)$/;"	t
tclStringType	generic/tclInt.h	/^MODULE_SCOPE const Tcl_ObjType tclStringType;$/;"	v	typeref:typename:MODULE_SCOPE const Tcl_ObjType
tclStringType	generic/tclStringObj.c	/^const Tcl_ObjType tclStringType = {$/;"	v	typeref:typename:const Tcl_ObjType
tclStubCall.${OBJEXT}	win/Makefile.in	/^tclStubCall.${OBJEXT}: tclStubCall.c$/;"	t
tclStubCall.o	unix/Makefile.in	/^tclStubCall.o: $(GENERIC_DIR)\/tclStubCall.c$/;"	t
tclStubHooks	generic/tclStubInit.c	/^static const TclStubHooks tclStubHooks = {$/;"	v	typeref:typename:const TclStubHooks	file:
tclStubInit.o	unix/Makefile.in	/^tclStubInit.o: $(GENERIC_DIR)\/tclStubInit.c$/;"	t
tclStubLib.${OBJEXT}	win/Makefile.in	/^tclStubLib.${OBJEXT}: tclStubLib.c$/;"	t
tclStubLib.o	unix/Makefile.in	/^tclStubLib.o: $(GENERIC_DIR)\/tclStubLib.c$/;"	t
tclStubLibTbl.${OBJEXT}	win/Makefile.in	/^tclStubLibTbl.${OBJEXT}: tclStubLibTbl.c$/;"	t
tclStubLibTbl.o	unix/Makefile.in	/^tclStubLibTbl.o: $(GENERIC_DIR)\/tclStubLibTbl.c$/;"	t
tclStubs	generic/tclBasic.c	/^MODULE_SCOPE const TclStubs tclStubs;$/;"	v	typeref:typename:MODULE_SCOPE const TclStubs
tclStubs	generic/tclEvent.c	/^MODULE_SCOPE const TclStubs tclStubs;$/;"	v	typeref:typename:MODULE_SCOPE const TclStubs
tclStubs	generic/tclStubInit.c	/^MODULE_SCOPE const TclStubs tclStubs;$/;"	v	typeref:typename:MODULE_SCOPE const TclStubs
tclStubs	generic/tclStubInit.c	/^const TclStubs tclStubs = {$/;"	v	typeref:typename:const TclStubs
tclStubsHandle	generic/tclStubCall.c	/^MODULE_SCOPE void *tclStubsHandle;$/;"	v	typeref:typename:MODULE_SCOPE void *
tclStubsHandle	generic/tclStubLib.c	/^MODULE_SCOPE void *tclStubsHandle;$/;"	v	typeref:typename:MODULE_SCOPE void *
tclStubsHandle	generic/tclStubLib.c	/^void *tclStubsHandle = NULL;$/;"	v	typeref:typename:void *
tclStubsHandle	generic/tclStubLibTbl.c	/^MODULE_SCOPE void *tclStubsHandle;$/;"	v	typeref:typename:MODULE_SCOPE void *
tclStubsPtr	generic/tclStubLib.c	/^MODULE_SCOPE const TclStubs *tclStubsPtr;$/;"	v	typeref:typename:MODULE_SCOPE const TclStubs *
tclStubsPtr	generic/tclStubLib.c	/^const TclStubs *tclStubsPtr = NULL;$/;"	v	typeref:typename:const TclStubs *
tclStubsPtr	unix/dltest/embtest.c	/^MODULE_SCOPE const TclStubs *tclStubsPtr;$/;"	v	typeref:typename:MODULE_SCOPE const TclStubs *
tclTeardownNamespace	generic/tclIntDecls.h	/^    void (*tclTeardownNamespace) (Namespace *nsPtr); \/* 108 *\/$/;"	m	struct:TclIntStubs	typeref:typename:void (*)(Namespace * nsPtr)
tclTest.${OBJEXT}	win/Makefile.in	/^tclTest.${OBJEXT}: tclTest.c tclUuid.h$/;"	t
tclTest.o	unix/Makefile.in	/^tclTest.o: $(GENERIC_DIR)\/tclTest.c $(IOHDR) $(TCLREHDRS) tclUuid.h$/;"	t
tclTestABSList.o	unix/Makefile.in	/^tclTestABSList.o: $(GENERIC_DIR)\/tclTestABSList.c $(MATHHDRS)$/;"	t
tclTestInit.o	unix/Makefile.in	/^tclTestInit.o: $(UNIX_DIR)\/tclAppInit.c ${TCL_EXE}$/;"	t
tclTestMain.${OBJEXT}	win/Makefile.in	/^tclTestMain.${OBJEXT}: tclAppInit.c$/;"	t
tclTestObj.o	unix/Makefile.in	/^tclTestObj.o: $(GENERIC_DIR)\/tclTestObj.c $(MATHHDRS)$/;"	t
tclTestObjInterface.o	unix/Makefile.in	/^tclTestObjInterface.o: $(GENERIC_DIR)\/tclTestObjInterface.c $(MATHHDRS)$/;"	t
tclTestObjInterfaceInteger.o	unix/Makefile.in	/^tclTestObjInterfaceInteger.o: $(GENERIC_DIR)\/tclTestObjInterfaceInteger.c \\$/;"	t
tclTestProcBodyObj.o	unix/Makefile.in	/^tclTestProcBodyObj.o: $(GENERIC_DIR)\/tclTestProcBodyObj.c$/;"	t
tclThread.o	unix/Makefile.in	/^tclThread.o: $(GENERIC_DIR)\/tclThread.c$/;"	t
tclThreadAlloc.o	unix/Makefile.in	/^tclThreadAlloc.o: $(GENERIC_DIR)\/tclThreadAlloc.c$/;"	t
tclThreadJoin.o	unix/Makefile.in	/^tclThreadJoin.o: $(GENERIC_DIR)\/tclThreadJoin.c$/;"	t
tclThreadStorage.o	unix/Makefile.in	/^tclThreadStorage.o: $(GENERIC_DIR)\/tclThreadStorage.c$/;"	t
tclThreadTest.o	unix/Makefile.in	/^tclThreadTest.o: $(GENERIC_DIR)\/tclThreadTest.c$/;"	t
tclTimeClientData	generic/tclInt.h	/^MODULE_SCOPE void *tclTimeClientData;$/;"	v	typeref:typename:MODULE_SCOPE void *
tclTimeClientData	unix/tclUnixTime.c	/^void *tclTimeClientData = NULL;$/;"	v	typeref:typename:void *
tclTimeClientData	win/tclWinTime.c	/^void *tclTimeClientData = NULL;$/;"	v	typeref:typename:void *
tclTimer.o	unix/Makefile.in	/^tclTimer.o: $(GENERIC_DIR)\/tclTimer.c$/;"	t
tclToIcu	library/icu.tcl	/^    proc tclToIcu {tclName} {$/;"	p	namespace:::::tcl::unsupported::icu
tclTomMathInterface.o	unix/Makefile.in	/^tclTomMathInterface.o: $(GENERIC_DIR)\/tclTomMathInterface.c $(MATHHDRS)$/;"	t
tclTomMathStubLib.${OBJEXT}	win/Makefile.in	/^tclTomMathStubLib.${OBJEXT}: tclTomMathStubLib.c$/;"	t
tclTomMathStubLib.o	unix/Makefile.in	/^tclTomMathStubLib.o: $(GENERIC_DIR)\/tclTomMathStubLib.c$/;"	t
tclTomMathStubs	generic/tclStubInit.c	/^MODULE_SCOPE const TclTomMathStubs tclTomMathStubs;$/;"	v	typeref:typename:MODULE_SCOPE const TclTomMathStubs
tclTomMathStubs	generic/tclStubInit.c	/^const TclTomMathStubs tclTomMathStubs = {$/;"	v	typeref:typename:const TclTomMathStubs
tclTomMathStubs	generic/tclTomMathInterface.c	/^MODULE_SCOPE const TclTomMathStubs tclTomMathStubs;$/;"	v	typeref:typename:MODULE_SCOPE const TclTomMathStubs
tclTomMathStubsPtr	generic/tclTomMathStubLib.c	/^MODULE_SCOPE const TclTomMathStubs *tclTomMathStubsPtr;$/;"	v	typeref:typename:MODULE_SCOPE const TclTomMathStubs *
tclTomMathStubsPtr	generic/tclTomMathStubLib.c	/^const TclTomMathStubs *tclTomMathStubsPtr = NULL;$/;"	v	typeref:typename:const TclTomMathStubs *
tclTrace.o	unix/Makefile.in	/^tclTrace.o: $(GENERIC_DIR)\/tclTrace.c$/;"	t
tclTraceCompile	generic/tclCompile.c	/^int tclTraceCompile = 0;$/;"	v	typeref:typename:int
tclTraceCompile	generic/tclCompile.h	/^MODULE_SCOPE int	tclTraceCompile;$/;"	v	typeref:typename:MODULE_SCOPE int
tclTraceDictPath	generic/tclIntDecls.h	/^    Tcl_Obj * (*tclTraceDictPath) (Tcl_Interp *interp, Tcl_Obj *rootPtr, Tcl_Size keyc, Tcl_Obj /;"	m	struct:TclIntStubs	typeref:typename:Tcl_Obj * (*)(Tcl_Interp * interp,Tcl_Obj * rootPtr,Tcl_Size keyc,Tcl_Obj * const keyv[],int flags)
tclTraceExec	generic/tclCompile.h	/^MODULE_SCOPE int	tclTraceExec;$/;"	v	typeref:typename:MODULE_SCOPE int
tclTraceExec	generic/tclExecute.c	/^int tclTraceExec = 0;$/;"	v	typeref:typename:int
tclUniCharMatch	generic/tclIntDecls.h	/^    int (*tclUniCharMatch) (const Tcl_UniChar *string, Tcl_Size strLen, const Tcl_UniChar *patte/;"	m	struct:TclIntStubs	typeref:typename:int (*)(const Tcl_UniChar * string,Tcl_Size strLen,const Tcl_UniChar * pattern,Tcl_Size ptnLen,int flags)
tclUnixChan.o	unix/Makefile.in	/^tclUnixChan.o: $(UNIX_DIR)\/tclUnixChan.c $(IOHDR)$/;"	t
tclUnixCompat.o	unix/Makefile.in	/^tclUnixCompat.o: $(UNIX_DIR)\/tclUnixCompat.c$/;"	t
tclUnixCopyFile	generic/tclIntPlatDecls.h	/^    int (*tclUnixCopyFile) (const char *src, const char *dst, const Tcl_StatBuf *statBufPtr, int/;"	m	struct:TclIntPlatStubs	typeref:typename:int (*)(const char * src,const char * dst,const Tcl_StatBuf * statBufPtr,int dontCopyAtts)
tclUnixEvent.o	unix/Makefile.in	/^tclUnixEvent.o: $(UNIX_DIR)\/tclUnixEvent.c$/;"	t
tclUnixFCmd.o	unix/Makefile.in	/^tclUnixFCmd.o: $(UNIX_DIR)\/tclUnixFCmd.c$/;"	t
tclUnixFile.o	unix/Makefile.in	/^tclUnixFile.o: $(UNIX_DIR)\/tclUnixFile.c $(FSHDR)$/;"	t
tclUnixInit.o	unix/Makefile.in	/^tclUnixInit.o: $(UNIX_DIR)\/tclUnixInit.c tclConfig.sh$/;"	t
tclUnixOpenTemporaryFile	generic/tclIntPlatDecls.h	/^    int (*tclUnixOpenTemporaryFile) (Tcl_Obj *dirObj, Tcl_Obj *basenameObj, Tcl_Obj *extensionOb/;"	m	struct:TclIntPlatStubs	typeref:typename:int (*)(Tcl_Obj * dirObj,Tcl_Obj * basenameObj,Tcl_Obj * extensionObj,Tcl_Obj * resultingNameObj)
tclUnixPipe.o	unix/Makefile.in	/^tclUnixPipe.o: $(UNIX_DIR)\/tclUnixPipe.c$/;"	t
tclUnixSock.o	unix/Makefile.in	/^tclUnixSock.o: $(UNIX_DIR)\/tclUnixSock.c$/;"	t
tclUnixTest.o	unix/Makefile.in	/^tclUnixTest.o: $(UNIX_DIR)\/tclUnixTest.c$/;"	t
tclUnixThrd.o	unix/Makefile.in	/^tclUnixThrd.o: $(UNIX_DIR)\/tclUnixThrd.c$/;"	t
tclUnixTime.o	unix/Makefile.in	/^tclUnixTime.o: $(UNIX_DIR)\/tclUnixTime.c$/;"	t
tclUnixWaitForFile	generic/tclIntPlatDecls.h	/^    int (*tclUnixWaitForFile) (int fd, int mask, int timeout); \/* 5 *\/$/;"	m	struct:TclIntPlatStubs	typeref:typename:int (*)(int fd,int mask,int timeout)
tclUnusedStubEntry	generic/tclDecls.h	/^    void (*tclUnusedStubEntry) (void); \/* 690 *\/$/;"	m	struct:TclStubs	typeref:typename:void (*)(void)
tclUnusedStubEntry	generic/tclIntDecls.h	/^    void (*tclUnusedStubEntry) (void); \/* 261 *\/$/;"	m	struct:TclIntStubs	typeref:typename:void (*)(void)
tclUpdateReturnInfo	generic/tclIntDecls.h	/^    int (*tclUpdateReturnInfo) (Interp *iPtr); \/* 109 *\/$/;"	m	struct:TclIntStubs	typeref:typename:int (*)(Interp * iPtr)
tclUtf.o	unix/Makefile.in	/^tclUtf.o: $(GENERIC_DIR)\/tclUtf.c $(GENERIC_DIR)\/tclUniData.c$/;"	t
tclUtf8Encoding	generic/tclEncoding.c	/^Tcl_Encoding tclUtf8Encoding = NULL;$/;"	v	typeref:typename:Tcl_Encoding
tclUtf8Encoding	generic/tclInt.h	/^MODULE_SCOPE Tcl_Encoding tclUtf8Encoding;$/;"	v	typeref:typename:MODULE_SCOPE Tcl_Encoding
tclUtfAtIndex	generic/tclDecls.h	/^    const char * (*tclUtfAtIndex) (const char *src, Tcl_Size index); \/* 325 *\/$/;"	m	struct:TclStubs	typeref:typename:const char * (*)(const char * src,Tcl_Size index)
tclUtfCharComplete	generic/tclDecls.h	/^    int (*tclUtfCharComplete) (const char *src, Tcl_Size length); \/* 326 *\/$/;"	m	struct:TclStubs	typeref:typename:int (*)(const char * src,Tcl_Size length)
tclUtfNcasecmp	generic/tclDecls.h	/^    int (*tclUtfNcasecmp) (const char *s1, const char *s2, size_t n); \/* 370 *\/$/;"	m	struct:TclStubs	typeref:typename:int (*)(const char * s1,const char * s2,size_t n)
tclUtfNcmp	generic/tclDecls.h	/^    int (*tclUtfNcmp) (const char *s1, const char *s2, size_t n); \/* 369 *\/$/;"	m	struct:TclStubs	typeref:typename:int (*)(const char * s1,const char * s2,size_t n)
tclUtfNext	generic/tclDecls.h	/^    const char * (*tclUtfNext) (const char *src); \/* 330 *\/$/;"	m	struct:TclStubs	typeref:typename:const char * (*)(const char * src)
tclUtfPrev	generic/tclDecls.h	/^    const char * (*tclUtfPrev) (const char *src, const char *start); \/* 331 *\/$/;"	m	struct:TclStubs	typeref:typename:const char * (*)(const char * src,const char * start)
tclUtil.o	unix/Makefile.in	/^tclUtil.o: $(GENERIC_DIR)\/tclUtil.c $(PARSEHDR) $(TRIMHDR)$/;"	t
tclUuid.h	unix/Makefile.in	/^tclUuid.h: $(TOP_DIR)\/manifest.uuid$/;"	t
tclUuid.h	win/Makefile.in	/^tclUuid.h:	$(TOP_DIR)\/manifest.uuid$/;"	t
tclVar.o	unix/Makefile.in	/^tclVar.o: $(GENERIC_DIR)\/tclVar.c$/;"	t
tclVarErrMsg	generic/tclIntDecls.h	/^    void (*tclVarErrMsg) (Tcl_Interp *interp, const char *part1, const char *part2, const char */;"	m	struct:TclIntStubs	typeref:typename:void (*)(Tcl_Interp * interp,const char * part1,const char * part2,const char * operation,const char * reason)
tclVarHashCreateVar	generic/tclIntDecls.h	/^    Var * (*tclVarHashCreateVar) (TclVarHashTable *tablePtr, const char *key, int *newPtr); \/* /;"	m	struct:TclIntStubs	typeref:typename:Var * (*)(TclVarHashTable * tablePtr,const char * key,int * newPtr)
tclVarHashKeyType	generic/tclVar.c	/^static const Tcl_HashKeyType tclVarHashKeyType = {$/;"	v	typeref:typename:const Tcl_HashKeyType	file:
tclVarTraceExists	generic/tclIntDecls.h	/^    Var * (*tclVarTraceExists) (Tcl_Interp *interp, const char *varName); \/* 157 *\/$/;"	m	struct:TclIntStubs	typeref:typename:Var * (*)(Tcl_Interp * interp,const char * varName)
tclWinAddProcess	generic/tclIntPlatDecls.h	/^    void (*tclWinAddProcess) (void *hProcess, Tcl_Size id); \/* 20 *\/$/;"	m	struct:TclIntPlatStubs	typeref:typename:void (*)(void * hProcess,Tcl_Size id)
tclWinCPUID	generic/tclIntPlatDecls.h	/^    int (*tclWinCPUID) (int index, int *regs); \/* 29 *\/$/;"	m	struct:TclIntPlatStubs	typeref:typename:int (*)(int index,int * regs)
tclWinDde.${OBJEXT}	win/Makefile.in	/^tclWinDde.${OBJEXT}: tclWinDde.c$/;"	t
tclWinDebugPanic	win/tclWinError.c	/^tclWinDebugPanic($/;"	f	typeref:typename:MODULE_SCOPE void
tclWinDebugPanic	win/tclWinFile.c	/^tclWinDebugPanic($/;"	f	typeref:typename:void
tclWinError.o	unix/Makefile.in	/^tclWinError.o: $(TOP_DIR)\/win\/tclWinError.c$/;"	t
tclWinFlushDirtyChannels	generic/tclIntPlatDecls.h	/^    void (*tclWinFlushDirtyChannels) (void); \/* 27 *\/$/;"	m	struct:TclIntPlatStubs	typeref:typename:void (*)(void)
tclWinGetTclInstance	generic/tclIntPlatDecls.h	/^    void * (*tclWinGetTclInstance) (void); \/* 4 *\/$/;"	m	struct:TclIntPlatStubs	typeref:typename:void * (*)(void)
tclWinInit.${OBJEXT}	win/Makefile.in	/^tclWinInit.${OBJEXT}: tclWinInit.c$/;"	t
tclWinNoBackslash	generic/tclIntPlatDecls.h	/^    char * (*tclWinNoBackslash) (char *path); \/* 24 *\/$/;"	m	struct:TclIntPlatStubs	typeref:typename:char * (*)(char * path)
tclWinPanic.${OBJEXT}	win/Makefile.in	/^tclWinPanic.${OBJEXT}: tclWinPanic.c$/;"	t
tclWinPipe.${OBJEXT}	win/Makefile.in	/^tclWinPipe.${OBJEXT}: tclWinPipe.c$/;"	t
tclWinReg.${OBJEXT}	win/Makefile.in	/^tclWinReg.${OBJEXT}: tclWinReg.c$/;"	t
tclXtNotify.o	unix/Makefile.in	/^tclXtNotify.o: $(UNIX_DIR)\/tclXtNotify.c$/;"	t
tclXtTest.o	unix/Makefile.in	/^tclXtTest.o: $(UNIX_DIR)\/tclXtTest.c$/;"	t
tclZipfs.${OBJEXT}	win/Makefile.in	/^tclZipfs.${OBJEXT}: $(GENERIC_DIR)\/tclZipfs.c$/;"	t
tclZipfs.o	unix/Makefile.in	/^tclZipfs.o: $(GENERIC_DIR)\/tclZipfs.c$/;"	t
tclZipfs_Mount	generic/tclDecls.h	/^    int (*tclZipfs_Mount) (Tcl_Interp *interp, const char *zipname, const char *mountPoint, cons/;"	m	struct:TclStubs	typeref:typename:int (*)(Tcl_Interp * interp,const char * zipname,const char * mountPoint,const char * passwd)
tclZipfs_MountBuffer	generic/tclDecls.h	/^    int (*tclZipfs_MountBuffer) (Tcl_Interp *interp, const void *data, size_t datalen, const cha/;"	m	struct:TclStubs	typeref:typename:int (*)(Tcl_Interp * interp,const void * data,size_t datalen,const char * mountPoint,int copy)
tclZipfs_TclLibrary	generic/tclDecls.h	/^    Tcl_Obj * (*tclZipfs_TclLibrary) (void); \/* 634 *\/$/;"	m	struct:TclStubs	typeref:typename:Tcl_Obj * (*)(void)
tclZipfs_Unmount	generic/tclDecls.h	/^    int (*tclZipfs_Unmount) (Tcl_Interp *interp, const char *mountPoint); \/* 633 *\/$/;"	m	struct:TclStubs	typeref:typename:int (*)(Tcl_Interp * interp,const char * mountPoint)
tclZlib.o	unix/Makefile.in	/^tclZlib.o: $(GENERIC_DIR)\/tclZlib.c$/;"	t
tcl_Access	generic/tclDecls.h	/^    int (*tcl_Access) (const char *path, int mode); \/* 367 *\/$/;"	m	struct:TclStubs	typeref:typename:int (*)(const char * path,int mode)
tcl_AddInterpResolvers	generic/tclIntDecls.h	/^    void (*tcl_AddInterpResolvers) (Tcl_Interp *interp, const char *name, Tcl_ResolveCmdProc *cm/;"	m	struct:TclIntStubs	typeref:typename:void (*)(Tcl_Interp * interp,const char * name,Tcl_ResolveCmdProc * cmdProc,Tcl_ResolveVarProc * varProc,Tcl_ResolveCompiledVarProc * compiledVarProc)
tcl_AlertNotifier	generic/tclDecls.h	/^    void (*tcl_AlertNotifier) (void *clientData); \/* 343 *\/$/;"	m	struct:TclStubs	typeref:typename:void (*)(void * clientData)
tcl_Alloc	generic/tclDecls.h	/^    void * (*tcl_Alloc) (TCL_HASH_TYPE size); \/* 3 *\/$/;"	m	struct:TclStubs	typeref:typename:void * (*)(TCL_HASH_TYPE size)
tcl_AllocStatBuf	generic/tclDecls.h	/^    Tcl_StatBuf * (*tcl_AllocStatBuf) (void); \/* 490 *\/$/;"	m	struct:TclStubs	typeref:typename:Tcl_StatBuf * (*)(void)
tcl_AllowExceptions	generic/tclDecls.h	/^    void (*tcl_AllowExceptions) (Tcl_Interp *interp); \/* 68 *\/$/;"	m	struct:TclStubs	typeref:typename:void (*)(Tcl_Interp * interp)
tcl_AppendAllObjTypes	generic/tclDecls.h	/^    int (*tcl_AppendAllObjTypes) (Tcl_Interp *interp, Tcl_Obj *objPtr); \/* 14 *\/$/;"	m	struct:TclStubs	typeref:typename:int (*)(Tcl_Interp * interp,Tcl_Obj * objPtr)
tcl_AppendElement	generic/tclDecls.h	/^    void (*tcl_AppendElement) (Tcl_Interp *interp, const char *element); \/* 69 *\/$/;"	m	struct:TclStubs	typeref:typename:void (*)(Tcl_Interp * interp,const char * element)
tcl_AppendExportList	generic/tclDecls.h	/^    int (*tcl_AppendExportList) (Tcl_Interp *interp, Tcl_Namespace *nsPtr, Tcl_Obj *objPtr); \/*/;"	m	struct:TclStubs	typeref:typename:int (*)(Tcl_Interp * interp,Tcl_Namespace * nsPtr,Tcl_Obj * objPtr)
tcl_AppendFormatToObj	generic/tclDecls.h	/^    int (*tcl_AppendFormatToObj) (Tcl_Interp *interp, Tcl_Obj *objPtr, const char *format, Tcl_S/;"	m	struct:TclStubs	typeref:typename:int (*)(Tcl_Interp * interp,Tcl_Obj * objPtr,const char * format,Tcl_Size objc,Tcl_Obj * const objv[])
tcl_AppendLimitedToObj	generic/tclDecls.h	/^    void (*tcl_AppendLimitedToObj) (Tcl_Obj *objPtr, const char *bytes, Tcl_Size length, Tcl_Siz/;"	m	struct:TclStubs	typeref:typename:void (*)(Tcl_Obj * objPtr,const char * bytes,Tcl_Size length,Tcl_Size limit,const char * ellipsis)
tcl_AppendObjToErrorInfo	generic/tclDecls.h	/^    void (*tcl_AppendObjToErrorInfo) (Tcl_Interp *interp, Tcl_Obj *objPtr); \/* 574 *\/$/;"	m	struct:TclStubs	typeref:typename:void (*)(Tcl_Interp * interp,Tcl_Obj * objPtr)
tcl_AppendObjToObj	generic/tclDecls.h	/^    void (*tcl_AppendObjToObj) (Tcl_Obj *objPtr, Tcl_Obj *appendObjPtr); \/* 286 *\/$/;"	m	struct:TclStubs	typeref:typename:void (*)(Tcl_Obj * objPtr,Tcl_Obj * appendObjPtr)
tcl_AppendPrintfToObj	generic/tclDecls.h	/^    void (*tcl_AppendPrintfToObj) (Tcl_Obj *objPtr, const char *format, ...) TCL_FORMAT_PRINTF(2/;"	m	struct:TclStubs	typeref:typename:void (*)(Tcl_Obj * objPtr,const char * format,...)
tcl_AppendResult	generic/tclDecls.h	/^    void (*tcl_AppendResult) (Tcl_Interp *interp, ...); \/* 70 *\/$/;"	m	struct:TclStubs	typeref:typename:void (*)(Tcl_Interp * interp,...)
tcl_AppendStringsToObj	generic/tclDecls.h	/^    void (*tcl_AppendStringsToObj) (Tcl_Obj *objPtr, ...); \/* 15 *\/$/;"	m	struct:TclStubs	typeref:typename:void (*)(Tcl_Obj * objPtr,...)
tcl_AppendToObj	generic/tclDecls.h	/^    void (*tcl_AppendToObj) (Tcl_Obj *objPtr, const char *bytes, Tcl_Size length); \/* 16 *\/$/;"	m	struct:TclStubs	typeref:typename:void (*)(Tcl_Obj * objPtr,const char * bytes,Tcl_Size length)
tcl_AppendUnicodeToObj	generic/tclDecls.h	/^    void (*tcl_AppendUnicodeToObj) (Tcl_Obj *objPtr, const Tcl_UniChar *unicode, Tcl_Size length/;"	m	struct:TclStubs	typeref:typename:void (*)(Tcl_Obj * objPtr,const Tcl_UniChar * unicode,Tcl_Size length)
tcl_AsyncCreate	generic/tclDecls.h	/^    Tcl_AsyncHandler (*tcl_AsyncCreate) (Tcl_AsyncProc *proc, void *clientData); \/* 71 *\/$/;"	m	struct:TclStubs	typeref:typename:Tcl_AsyncHandler (*)(Tcl_AsyncProc * proc,void * clientData)
tcl_AsyncDelete	generic/tclDecls.h	/^    void (*tcl_AsyncDelete) (Tcl_AsyncHandler async); \/* 72 *\/$/;"	m	struct:TclStubs	typeref:typename:void (*)(Tcl_AsyncHandler async)
tcl_AsyncInvoke	generic/tclDecls.h	/^    int (*tcl_AsyncInvoke) (Tcl_Interp *interp, int code); \/* 73 *\/$/;"	m	struct:TclStubs	typeref:typename:int (*)(Tcl_Interp * interp,int code)
tcl_AsyncMark	generic/tclDecls.h	/^    void (*tcl_AsyncMark) (Tcl_AsyncHandler async); \/* 74 *\/$/;"	m	struct:TclStubs	typeref:typename:void (*)(Tcl_AsyncHandler async)
tcl_AsyncMarkFromSignal	generic/tclDecls.h	/^    int (*tcl_AsyncMarkFromSignal) (Tcl_AsyncHandler async, int sigNumber); \/* 660 *\/$/;"	m	struct:TclStubs	typeref:typename:int (*)(Tcl_AsyncHandler async,int sigNumber)
tcl_AsyncReady	generic/tclDecls.h	/^    int (*tcl_AsyncReady) (void); \/* 75 *\/$/;"	m	struct:TclStubs	typeref:typename:int (*)(void)
tcl_AttemptAlloc	generic/tclDecls.h	/^    void * (*tcl_AttemptAlloc) (TCL_HASH_TYPE size); \/* 428 *\/$/;"	m	struct:TclStubs	typeref:typename:void * (*)(TCL_HASH_TYPE size)
tcl_AttemptDbCkalloc	generic/tclDecls.h	/^    void * (*tcl_AttemptDbCkalloc) (TCL_HASH_TYPE size, const char *file, int line); \/* 429 *\/$/;"	m	struct:TclStubs	typeref:typename:void * (*)(TCL_HASH_TYPE size,const char * file,int line)
tcl_AttemptDbCkrealloc	generic/tclDecls.h	/^    void * (*tcl_AttemptDbCkrealloc) (void *ptr, TCL_HASH_TYPE size, const char *file, int line)/;"	m	struct:TclStubs	typeref:typename:void * (*)(void * ptr,TCL_HASH_TYPE size,const char * file,int line)
tcl_AttemptRealloc	generic/tclDecls.h	/^    void * (*tcl_AttemptRealloc) (void *ptr, TCL_HASH_TYPE size); \/* 430 *\/$/;"	m	struct:TclStubs	typeref:typename:void * (*)(void * ptr,TCL_HASH_TYPE size)
tcl_AttemptSetObjLength	generic/tclDecls.h	/^    int (*tcl_AttemptSetObjLength) (Tcl_Obj *objPtr, Tcl_Size length); \/* 432 *\/$/;"	m	struct:TclStubs	typeref:typename:int (*)(Tcl_Obj * objPtr,Tcl_Size length)
tcl_BackgroundException	generic/tclDecls.h	/^    void (*tcl_BackgroundException) (Tcl_Interp *interp, int code); \/* 609 *\/$/;"	m	struct:TclStubs	typeref:typename:void (*)(Tcl_Interp * interp,int code)
tcl_BadChannelOption	generic/tclDecls.h	/^    int (*tcl_BadChannelOption) (Tcl_Interp *interp, const char *optionName, const char *optionL/;"	m	struct:TclStubs	typeref:typename:int (*)(Tcl_Interp * interp,const char * optionName,const char * optionList)
tcl_CallWhenDeleted	generic/tclDecls.h	/^    void (*tcl_CallWhenDeleted) (Tcl_Interp *interp, Tcl_InterpDeleteProc *proc, void *clientDat/;"	m	struct:TclStubs	typeref:typename:void (*)(Tcl_Interp * interp,Tcl_InterpDeleteProc * proc,void * clientData)
tcl_CancelEval	generic/tclDecls.h	/^    int (*tcl_CancelEval) (Tcl_Interp *interp, Tcl_Obj *resultObjPtr, void *clientData, int flag/;"	m	struct:TclStubs	typeref:typename:int (*)(Tcl_Interp * interp,Tcl_Obj * resultObjPtr,void * clientData,int flags)
tcl_CancelIdleCall	generic/tclDecls.h	/^    void (*tcl_CancelIdleCall) (Tcl_IdleProc *idleProc, void *clientData); \/* 80 *\/$/;"	m	struct:TclStubs	typeref:typename:void (*)(Tcl_IdleProc * idleProc,void * clientData)
tcl_Canceled	generic/tclDecls.h	/^    int (*tcl_Canceled) (Tcl_Interp *interp, int flags); \/* 581 *\/$/;"	m	struct:TclStubs	typeref:typename:int (*)(Tcl_Interp * interp,int flags)
tcl_ChannelBlockModeProc	generic/tclDecls.h	/^    Tcl_DriverBlockModeProc * (*tcl_ChannelBlockModeProc) (const Tcl_ChannelType *chanTypePtr); /;"	m	struct:TclStubs	typeref:typename:Tcl_DriverBlockModeProc * (*)(const Tcl_ChannelType * chanTypePtr)
tcl_ChannelBuffered	generic/tclDecls.h	/^    int (*tcl_ChannelBuffered) (Tcl_Channel chan); \/* 397 *\/$/;"	m	struct:TclStubs	typeref:typename:int (*)(Tcl_Channel chan)
tcl_ChannelClose2Proc	generic/tclDecls.h	/^    Tcl_DriverClose2Proc * (*tcl_ChannelClose2Proc) (const Tcl_ChannelType *chanTypePtr); \/* 40/;"	m	struct:TclStubs	typeref:typename:Tcl_DriverClose2Proc * (*)(const Tcl_ChannelType * chanTypePtr)
tcl_ChannelFlushProc	generic/tclDecls.h	/^    Tcl_DriverFlushProc * (*tcl_ChannelFlushProc) (const Tcl_ChannelType *chanTypePtr); \/* 410 /;"	m	struct:TclStubs	typeref:typename:Tcl_DriverFlushProc * (*)(const Tcl_ChannelType * chanTypePtr)
tcl_ChannelGetHandleProc	generic/tclDecls.h	/^    Tcl_DriverGetHandleProc * (*tcl_ChannelGetHandleProc) (const Tcl_ChannelType *chanTypePtr); /;"	m	struct:TclStubs	typeref:typename:Tcl_DriverGetHandleProc * (*)(const Tcl_ChannelType * chanTypePtr)
tcl_ChannelGetOptionProc	generic/tclDecls.h	/^    Tcl_DriverGetOptionProc * (*tcl_ChannelGetOptionProc) (const Tcl_ChannelType *chanTypePtr); /;"	m	struct:TclStubs	typeref:typename:Tcl_DriverGetOptionProc * (*)(const Tcl_ChannelType * chanTypePtr)
tcl_ChannelHandlerProc	generic/tclDecls.h	/^    Tcl_DriverHandlerProc * (*tcl_ChannelHandlerProc) (const Tcl_ChannelType *chanTypePtr); \/* /;"	m	struct:TclStubs	typeref:typename:Tcl_DriverHandlerProc * (*)(const Tcl_ChannelType * chanTypePtr)
tcl_ChannelInputProc	generic/tclDecls.h	/^    Tcl_DriverInputProc * (*tcl_ChannelInputProc) (const Tcl_ChannelType *chanTypePtr); \/* 403 /;"	m	struct:TclStubs	typeref:typename:Tcl_DriverInputProc * (*)(const Tcl_ChannelType * chanTypePtr)
tcl_ChannelName	generic/tclDecls.h	/^    const char * (*tcl_ChannelName) (const Tcl_ChannelType *chanTypePtr); \/* 398 *\/$/;"	m	struct:TclStubs	typeref:typename:const char * (*)(const Tcl_ChannelType * chanTypePtr)
tcl_ChannelOutputProc	generic/tclDecls.h	/^    Tcl_DriverOutputProc * (*tcl_ChannelOutputProc) (const Tcl_ChannelType *chanTypePtr); \/* 40/;"	m	struct:TclStubs	typeref:typename:Tcl_DriverOutputProc * (*)(const Tcl_ChannelType * chanTypePtr)
tcl_ChannelSetOptionProc	generic/tclDecls.h	/^    Tcl_DriverSetOptionProc * (*tcl_ChannelSetOptionProc) (const Tcl_ChannelType *chanTypePtr); /;"	m	struct:TclStubs	typeref:typename:Tcl_DriverSetOptionProc * (*)(const Tcl_ChannelType * chanTypePtr)
tcl_ChannelThreadActionProc	generic/tclDecls.h	/^    Tcl_DriverThreadActionProc * (*tcl_ChannelThreadActionProc) (const Tcl_ChannelType *chanType/;"	m	struct:TclStubs	typeref:typename:Tcl_DriverThreadActionProc * (*)(const Tcl_ChannelType * chanTypePtr)
tcl_ChannelTruncateProc	generic/tclDecls.h	/^    Tcl_DriverTruncateProc * (*tcl_ChannelTruncateProc) (const Tcl_ChannelType *chanTypePtr); \//;"	m	struct:TclStubs	typeref:typename:Tcl_DriverTruncateProc * (*)(const Tcl_ChannelType * chanTypePtr)
tcl_ChannelVersion	generic/tclDecls.h	/^    Tcl_ChannelTypeVersion (*tcl_ChannelVersion) (const Tcl_ChannelType *chanTypePtr); \/* 399 */;"	m	struct:TclStubs	typeref:typename:Tcl_ChannelTypeVersion (*)(const Tcl_ChannelType * chanTypePtr)
tcl_ChannelWatchProc	generic/tclDecls.h	/^    Tcl_DriverWatchProc * (*tcl_ChannelWatchProc) (const Tcl_ChannelType *chanTypePtr); \/* 408 /;"	m	struct:TclStubs	typeref:typename:Tcl_DriverWatchProc * (*)(const Tcl_ChannelType * chanTypePtr)
tcl_ChannelWideSeekProc	generic/tclDecls.h	/^    Tcl_DriverWideSeekProc * (*tcl_ChannelWideSeekProc) (const Tcl_ChannelType *chanTypePtr); \//;"	m	struct:TclStubs	typeref:typename:Tcl_DriverWideSeekProc * (*)(const Tcl_ChannelType * chanTypePtr)
tcl_Char16Len	generic/tclDecls.h	/^    Tcl_Size (*tcl_Char16Len) (const unsigned short *uniStr); \/* 352 *\/$/;"	m	struct:TclStubs	typeref:typename:Tcl_Size (*)(const unsigned short * uniStr)
tcl_Char16ToUtfDString	generic/tclDecls.h	/^    char * (*tcl_Char16ToUtfDString) (const unsigned short *uniStr, Tcl_Size uniLength, Tcl_DStr/;"	m	struct:TclStubs	typeref:typename:char * (*)(const unsigned short * uniStr,Tcl_Size uniLength,Tcl_DString * dsPtr)
tcl_Chdir	generic/tclDecls.h	/^    int (*tcl_Chdir) (const char *dirName); \/* 366 *\/$/;"	m	struct:TclStubs	typeref:typename:int (*)(const char * dirName)
tcl_ClassGetMetadata	generic/tclOODecls.h	/^    void * (*tcl_ClassGetMetadata) (Tcl_Class clazz, const Tcl_ObjectMetadataType *typePtr); \/*/;"	m	struct:TclOOStubs	typeref:typename:void * (*)(Tcl_Class clazz,const Tcl_ObjectMetadataType * typePtr)
tcl_ClassSetConstructor	generic/tclOODecls.h	/^    void (*tcl_ClassSetConstructor) (Tcl_Interp *interp, Tcl_Class clazz, Tcl_Method method); \//;"	m	struct:TclOOStubs	typeref:typename:void (*)(Tcl_Interp * interp,Tcl_Class clazz,Tcl_Method method)
tcl_ClassSetDestructor	generic/tclOODecls.h	/^    void (*tcl_ClassSetDestructor) (Tcl_Interp *interp, Tcl_Class clazz, Tcl_Method method); \/*/;"	m	struct:TclOOStubs	typeref:typename:void (*)(Tcl_Interp * interp,Tcl_Class clazz,Tcl_Method method)
tcl_ClassSetMetadata	generic/tclOODecls.h	/^    void (*tcl_ClassSetMetadata) (Tcl_Class clazz, const Tcl_ObjectMetadataType *typePtr, void */;"	m	struct:TclOOStubs	typeref:typename:void (*)(Tcl_Class clazz,const Tcl_ObjectMetadataType * typePtr,void * metadata)
tcl_ClearChannelHandlers	generic/tclDecls.h	/^    void (*tcl_ClearChannelHandlers) (Tcl_Channel channel); \/* 417 *\/$/;"	m	struct:TclStubs	typeref:typename:void (*)(Tcl_Channel channel)
tcl_Close	generic/tclDecls.h	/^    int (*tcl_Close) (Tcl_Interp *interp, Tcl_Channel chan); \/* 81 *\/$/;"	m	struct:TclStubs	typeref:typename:int (*)(Tcl_Interp * interp,Tcl_Channel chan)
tcl_CloseEx	generic/tclDecls.h	/^    int (*tcl_CloseEx) (Tcl_Interp *interp, Tcl_Channel chan, int flags); \/* 624 *\/$/;"	m	struct:TclStubs	typeref:typename:int (*)(Tcl_Interp * interp,Tcl_Channel chan,int flags)
tcl_CommandComplete	generic/tclDecls.h	/^    int (*tcl_CommandComplete) (const char *cmd); \/* 82 *\/$/;"	m	struct:TclStubs	typeref:typename:int (*)(const char * cmd)
tcl_CommandTraceInfo	generic/tclDecls.h	/^    void * (*tcl_CommandTraceInfo) (Tcl_Interp *interp, const char *varName, int flags, Tcl_Comm/;"	m	struct:TclStubs	typeref:typename:void * (*)(Tcl_Interp * interp,const char * varName,int flags,Tcl_CommandTraceProc * procPtr,void * prevClientData)
tcl_Concat	generic/tclDecls.h	/^    char * (*tcl_Concat) (Tcl_Size argc, const char *const *argv); \/* 83 *\/$/;"	m	struct:TclStubs	typeref:typename:char * (*)(Tcl_Size argc,const char * const * argv)
tcl_ConcatObj	generic/tclDecls.h	/^    Tcl_Obj * (*tcl_ConcatObj) (Tcl_Size objc, Tcl_Obj *const objv[]); \/* 17 *\/$/;"	m	struct:TclStubs	typeref:typename:Tcl_Obj * (*)(Tcl_Size objc,Tcl_Obj * const objv[])
tcl_ConditionFinalize	generic/tclDecls.h	/^    void (*tcl_ConditionFinalize) (Tcl_Condition *condPtr); \/* 391 *\/$/;"	m	struct:TclStubs	typeref:typename:void (*)(Tcl_Condition * condPtr)
tcl_ConditionNotify	generic/tclDecls.h	/^    void (*tcl_ConditionNotify) (Tcl_Condition *condPtr); \/* 310 *\/$/;"	m	struct:TclStubs	typeref:typename:void (*)(Tcl_Condition * condPtr)
tcl_ConditionWait	generic/tclDecls.h	/^    void (*tcl_ConditionWait) (Tcl_Condition *condPtr, Tcl_Mutex *mutexPtr, const Tcl_Time *time/;"	m	struct:TclStubs	typeref:typename:void (*)(Tcl_Condition * condPtr,Tcl_Mutex * mutexPtr,const Tcl_Time * timePtr)
tcl_ConvertCountedElement	generic/tclDecls.h	/^    Tcl_Size (*tcl_ConvertCountedElement) (const char *src, Tcl_Size length, char *dst, int flag/;"	m	struct:TclStubs	typeref:typename:Tcl_Size (*)(const char * src,Tcl_Size length,char * dst,int flags)
tcl_ConvertElement	generic/tclDecls.h	/^    Tcl_Size (*tcl_ConvertElement) (const char *src, char *dst, int flags); \/* 84 *\/$/;"	m	struct:TclStubs	typeref:typename:Tcl_Size (*)(const char * src,char * dst,int flags)
tcl_ConvertToType	generic/tclDecls.h	/^    int (*tcl_ConvertToType) (Tcl_Interp *interp, Tcl_Obj *objPtr, const Tcl_ObjType *typePtr); /;"	m	struct:TclStubs	typeref:typename:int (*)(Tcl_Interp * interp,Tcl_Obj * objPtr,const Tcl_ObjType * typePtr)
tcl_CopyObjectInstance	generic/tclOODecls.h	/^    Tcl_Object (*tcl_CopyObjectInstance) (Tcl_Interp *interp, Tcl_Object sourceObject, const cha/;"	m	struct:TclOOStubs	typeref:typename:Tcl_Object (*)(Tcl_Interp * interp,Tcl_Object sourceObject,const char * targetName,const char * targetNamespaceName)
tcl_CreateAlias	generic/tclDecls.h	/^    int (*tcl_CreateAlias) (Tcl_Interp *childInterp, const char *childCmd, Tcl_Interp *target, c/;"	m	struct:TclStubs	typeref:typename:int (*)(Tcl_Interp * childInterp,const char * childCmd,Tcl_Interp * target,const char * targetCmd,Tcl_Size argc,const char * const * argv)
tcl_CreateAliasObj	generic/tclDecls.h	/^    int (*tcl_CreateAliasObj) (Tcl_Interp *childInterp, const char *childCmd, Tcl_Interp *target/;"	m	struct:TclStubs	typeref:typename:int (*)(Tcl_Interp * childInterp,const char * childCmd,Tcl_Interp * target,const char * targetCmd,Tcl_Size objc,Tcl_Obj * const objv[])
tcl_CreateChannel	generic/tclDecls.h	/^    Tcl_Channel (*tcl_CreateChannel) (const Tcl_ChannelType *typePtr, const char *chanName, void/;"	m	struct:TclStubs	typeref:typename:Tcl_Channel (*)(const Tcl_ChannelType * typePtr,const char * chanName,void * instanceData,int mask)
tcl_CreateChannelHandler	generic/tclDecls.h	/^    void (*tcl_CreateChannelHandler) (Tcl_Channel chan, int mask, Tcl_ChannelProc *proc, void *c/;"	m	struct:TclStubs	typeref:typename:void (*)(Tcl_Channel chan,int mask,Tcl_ChannelProc * proc,void * clientData)
tcl_CreateChild	generic/tclDecls.h	/^    Tcl_Interp * (*tcl_CreateChild) (Tcl_Interp *interp, const char *name, int isSafe); \/* 97 */;"	m	struct:TclStubs	typeref:typename:Tcl_Interp * (*)(Tcl_Interp * interp,const char * name,int isSafe)
tcl_CreateCloseHandler	generic/tclDecls.h	/^    void (*tcl_CreateCloseHandler) (Tcl_Channel chan, Tcl_CloseProc *proc, void *clientData); \//;"	m	struct:TclStubs	typeref:typename:void (*)(Tcl_Channel chan,Tcl_CloseProc * proc,void * clientData)
tcl_CreateCommand	generic/tclDecls.h	/^    Tcl_Command (*tcl_CreateCommand) (Tcl_Interp *interp, const char *cmdName, Tcl_CmdProc *proc/;"	m	struct:TclStubs	typeref:typename:Tcl_Command (*)(Tcl_Interp * interp,const char * cmdName,Tcl_CmdProc * proc,void * clientData,Tcl_CmdDeleteProc * deleteProc)
tcl_CreateEncoding	generic/tclDecls.h	/^    Tcl_Encoding (*tcl_CreateEncoding) (const Tcl_EncodingType *typePtr); \/* 287 *\/$/;"	m	struct:TclStubs	typeref:typename:Tcl_Encoding (*)(const Tcl_EncodingType * typePtr)
tcl_CreateEnsemble	generic/tclDecls.h	/^    Tcl_Command (*tcl_CreateEnsemble) (Tcl_Interp *interp, const char *name, Tcl_Namespace *name/;"	m	struct:TclStubs	typeref:typename:Tcl_Command (*)(Tcl_Interp * interp,const char * name,Tcl_Namespace * namespacePtr,int flags)
tcl_CreateEventSource	generic/tclDecls.h	/^    void (*tcl_CreateEventSource) (Tcl_EventSetupProc *setupProc, Tcl_EventCheckProc *checkProc,/;"	m	struct:TclStubs	typeref:typename:void (*)(Tcl_EventSetupProc * setupProc,Tcl_EventCheckProc * checkProc,void * clientData)
tcl_CreateExitHandler	generic/tclDecls.h	/^    void (*tcl_CreateExitHandler) (Tcl_ExitProc *proc, void *clientData); \/* 93 *\/$/;"	m	struct:TclStubs	typeref:typename:void (*)(Tcl_ExitProc * proc,void * clientData)
tcl_CreateFileHandler	generic/tclDecls.h	/^    void (*tcl_CreateFileHandler) (int fd, int mask, Tcl_FileProc *proc, void *clientData); \/* /;"	m	struct:TclStubs	typeref:typename:void (*)(int fd,int mask,Tcl_FileProc * proc,void * clientData)
tcl_CreateInterp	generic/tclDecls.h	/^    Tcl_Interp * (*tcl_CreateInterp) (void); \/* 94 *\/$/;"	m	struct:TclStubs	typeref:typename:Tcl_Interp * (*)(void)
tcl_CreateNamespace	generic/tclDecls.h	/^    Tcl_Namespace * (*tcl_CreateNamespace) (Tcl_Interp *interp, const char *name, void *clientDa/;"	m	struct:TclStubs	typeref:typename:Tcl_Namespace * (*)(Tcl_Interp * interp,const char * name,void * clientData,Tcl_NamespaceDeleteProc * deleteProc)
tcl_CreateObjCommand	generic/tclDecls.h	/^    Tcl_Command (*tcl_CreateObjCommand) (Tcl_Interp *interp, const char *cmdName, Tcl_ObjCmdProc/;"	m	struct:TclStubs	typeref:typename:Tcl_Command (*)(Tcl_Interp * interp,const char * cmdName,Tcl_ObjCmdProc * proc,void * clientData,Tcl_CmdDeleteProc * deleteProc)
tcl_CreateObjCommand2	generic/tclDecls.h	/^    Tcl_Command (*tcl_CreateObjCommand2) (Tcl_Interp *interp, const char *cmdName, Tcl_ObjCmdPro/;"	m	struct:TclStubs	typeref:typename:Tcl_Command (*)(Tcl_Interp * interp,const char * cmdName,Tcl_ObjCmdProc2 * proc2,void * clientData,Tcl_CmdDeleteProc * deleteProc)
tcl_CreateObjTrace	generic/tclDecls.h	/^    Tcl_Trace (*tcl_CreateObjTrace) (Tcl_Interp *interp, Tcl_Size level, int flags, Tcl_CmdObjTr/;"	m	struct:TclStubs	typeref:typename:Tcl_Trace (*)(Tcl_Interp * interp,Tcl_Size level,int flags,Tcl_CmdObjTraceProc * objProc,void * clientData,Tcl_CmdObjTraceDeleteProc * delProc)
tcl_CreateObjTrace2	generic/tclDecls.h	/^    Tcl_Trace (*tcl_CreateObjTrace2) (Tcl_Interp *interp, Tcl_Size level, int flags, Tcl_CmdObjT/;"	m	struct:TclStubs	typeref:typename:Tcl_Trace (*)(Tcl_Interp * interp,Tcl_Size level,int flags,Tcl_CmdObjTraceProc2 * objProc2,void * clientData,Tcl_CmdObjTraceDeleteProc * delProc)
tcl_CreatePipe	generic/tclDecls.h	/^    int (*tcl_CreatePipe) (Tcl_Interp *interp, Tcl_Channel *rchan, Tcl_Channel *wchan, int flags/;"	m	struct:TclStubs	typeref:typename:int (*)(Tcl_Interp * interp,Tcl_Channel * rchan,Tcl_Channel * wchan,int flags)
tcl_CreateThread	generic/tclDecls.h	/^    int (*tcl_CreateThread) (Tcl_ThreadId *idPtr, Tcl_ThreadCreateProc *proc, void *clientData, /;"	m	struct:TclStubs	typeref:typename:int (*)(Tcl_ThreadId * idPtr,Tcl_ThreadCreateProc * proc,void * clientData,TCL_HASH_TYPE stackSize,int flags)
tcl_CreateThreadExitHandler	generic/tclDecls.h	/^    void (*tcl_CreateThreadExitHandler) (Tcl_ExitProc *proc, void *clientData); \/* 288 *\/$/;"	m	struct:TclStubs	typeref:typename:void (*)(Tcl_ExitProc * proc,void * clientData)
tcl_CreateTimerHandler	generic/tclDecls.h	/^    Tcl_TimerToken (*tcl_CreateTimerHandler) (int milliseconds, Tcl_TimerProc *proc, void *clien/;"	m	struct:TclStubs	typeref:typename:Tcl_TimerToken (*)(int milliseconds,Tcl_TimerProc * proc,void * clientData)
tcl_CreateTrace	generic/tclDecls.h	/^    Tcl_Trace (*tcl_CreateTrace) (Tcl_Interp *interp, Tcl_Size level, Tcl_CmdTraceProc *proc, vo/;"	m	struct:TclStubs	typeref:typename:Tcl_Trace (*)(Tcl_Interp * interp,Tcl_Size level,Tcl_CmdTraceProc * proc,void * clientData)
tcl_CutChannel	generic/tclDecls.h	/^    void (*tcl_CutChannel) (Tcl_Channel channel); \/* 415 *\/$/;"	m	struct:TclStubs	typeref:typename:void (*)(Tcl_Channel channel)
tcl_DStringAppend	generic/tclDecls.h	/^    char * (*tcl_DStringAppend) (Tcl_DString *dsPtr, const char *bytes, Tcl_Size length); \/* 11/;"	m	struct:TclStubs	typeref:typename:char * (*)(Tcl_DString * dsPtr,const char * bytes,Tcl_Size length)
tcl_DStringAppendElement	generic/tclDecls.h	/^    char * (*tcl_DStringAppendElement) (Tcl_DString *dsPtr, const char *element); \/* 118 *\/$/;"	m	struct:TclStubs	typeref:typename:char * (*)(Tcl_DString * dsPtr,const char * element)
tcl_DStringEndSublist	generic/tclDecls.h	/^    void (*tcl_DStringEndSublist) (Tcl_DString *dsPtr); \/* 119 *\/$/;"	m	struct:TclStubs	typeref:typename:void (*)(Tcl_DString * dsPtr)
tcl_DStringFree	generic/tclDecls.h	/^    void (*tcl_DStringFree) (Tcl_DString *dsPtr); \/* 120 *\/$/;"	m	struct:TclStubs	typeref:typename:void (*)(Tcl_DString * dsPtr)
tcl_DStringGetResult	generic/tclDecls.h	/^    void (*tcl_DStringGetResult) (Tcl_Interp *interp, Tcl_DString *dsPtr); \/* 121 *\/$/;"	m	struct:TclStubs	typeref:typename:void (*)(Tcl_Interp * interp,Tcl_DString * dsPtr)
tcl_DStringInit	generic/tclDecls.h	/^    void (*tcl_DStringInit) (Tcl_DString *dsPtr); \/* 122 *\/$/;"	m	struct:TclStubs	typeref:typename:void (*)(Tcl_DString * dsPtr)
tcl_DStringResult	generic/tclDecls.h	/^    void (*tcl_DStringResult) (Tcl_Interp *interp, Tcl_DString *dsPtr); \/* 123 *\/$/;"	m	struct:TclStubs	typeref:typename:void (*)(Tcl_Interp * interp,Tcl_DString * dsPtr)
tcl_DStringSetLength	generic/tclDecls.h	/^    void (*tcl_DStringSetLength) (Tcl_DString *dsPtr, Tcl_Size length); \/* 124 *\/$/;"	m	struct:TclStubs	typeref:typename:void (*)(Tcl_DString * dsPtr,Tcl_Size length)
tcl_DStringStartSublist	generic/tclDecls.h	/^    void (*tcl_DStringStartSublist) (Tcl_DString *dsPtr); \/* 125 *\/$/;"	m	struct:TclStubs	typeref:typename:void (*)(Tcl_DString * dsPtr)
tcl_DStringToObj	generic/tclDecls.h	/^    Tcl_Obj * (*tcl_DStringToObj) (Tcl_DString *dsPtr); \/* 685 *\/$/;"	m	struct:TclStubs	typeref:typename:Tcl_Obj * (*)(Tcl_DString * dsPtr)
tcl_DbCkalloc	generic/tclDecls.h	/^    void * (*tcl_DbCkalloc) (TCL_HASH_TYPE size, const char *file, int line); \/* 6 *\/$/;"	m	struct:TclStubs	typeref:typename:void * (*)(TCL_HASH_TYPE size,const char * file,int line)
tcl_DbCkfree	generic/tclDecls.h	/^    void (*tcl_DbCkfree) (void *ptr, const char *file, int line); \/* 7 *\/$/;"	m	struct:TclStubs	typeref:typename:void (*)(void * ptr,const char * file,int line)
tcl_DbCkrealloc	generic/tclDecls.h	/^    void * (*tcl_DbCkrealloc) (void *ptr, TCL_HASH_TYPE size, const char *file, int line); \/* 8/;"	m	struct:TclStubs	typeref:typename:void * (*)(void * ptr,TCL_HASH_TYPE size,const char * file,int line)
tcl_DbDecrRefCount	generic/tclDecls.h	/^    void (*tcl_DbDecrRefCount) (Tcl_Obj *objPtr, const char *file, int line); \/* 19 *\/$/;"	m	struct:TclStubs	typeref:typename:void (*)(Tcl_Obj * objPtr,const char * file,int line)
tcl_DbIncrRefCount	generic/tclDecls.h	/^    void (*tcl_DbIncrRefCount) (Tcl_Obj *objPtr, const char *file, int line); \/* 20 *\/$/;"	m	struct:TclStubs	typeref:typename:void (*)(Tcl_Obj * objPtr,const char * file,int line)
tcl_DbIsShared	generic/tclDecls.h	/^    int (*tcl_DbIsShared) (Tcl_Obj *objPtr, const char *file, int line); \/* 21 *\/$/;"	m	struct:TclStubs	typeref:typename:int (*)(Tcl_Obj * objPtr,const char * file,int line)
tcl_DbNewBignumObj	generic/tclDecls.h	/^    Tcl_Obj * (*tcl_DbNewBignumObj) (void *value, const char *file, int line); \/* 556 *\/$/;"	m	struct:TclStubs	typeref:typename:Tcl_Obj * (*)(void * value,const char * file,int line)
tcl_DbNewByteArrayObj	generic/tclDecls.h	/^    Tcl_Obj * (*tcl_DbNewByteArrayObj) (const unsigned char *bytes, Tcl_Size numBytes, const cha/;"	m	struct:TclStubs	typeref:typename:Tcl_Obj * (*)(const unsigned char * bytes,Tcl_Size numBytes,const char * file,int line)
tcl_DbNewDictObj	generic/tclDecls.h	/^    Tcl_Obj * (*tcl_DbNewDictObj) (const char *file, int line); \/* 504 *\/$/;"	m	struct:TclStubs	typeref:typename:Tcl_Obj * (*)(const char * file,int line)
tcl_DbNewDoubleObj	generic/tclDecls.h	/^    Tcl_Obj * (*tcl_DbNewDoubleObj) (double doubleValue, const char *file, int line); \/* 24 *\/$/;"	m	struct:TclStubs	typeref:typename:Tcl_Obj * (*)(double doubleValue,const char * file,int line)
tcl_DbNewListObj	generic/tclDecls.h	/^    Tcl_Obj * (*tcl_DbNewListObj) (Tcl_Size objc, Tcl_Obj *const *objv, const char *file, int li/;"	m	struct:TclStubs	typeref:typename:Tcl_Obj * (*)(Tcl_Size objc,Tcl_Obj * const * objv,const char * file,int line)
tcl_DbNewObj	generic/tclDecls.h	/^    Tcl_Obj * (*tcl_DbNewObj) (const char *file, int line); \/* 27 *\/$/;"	m	struct:TclStubs	typeref:typename:Tcl_Obj * (*)(const char * file,int line)
tcl_DbNewStringObj	generic/tclDecls.h	/^    Tcl_Obj * (*tcl_DbNewStringObj) (const char *bytes, Tcl_Size length, const char *file, int l/;"	m	struct:TclStubs	typeref:typename:Tcl_Obj * (*)(const char * bytes,Tcl_Size length,const char * file,int line)
tcl_DbNewWideIntObj	generic/tclDecls.h	/^    Tcl_Obj * (*tcl_DbNewWideIntObj) (Tcl_WideInt wideValue, const char *file, int line); \/* 48/;"	m	struct:TclStubs	typeref:typename:Tcl_Obj * (*)(Tcl_WideInt wideValue,const char * file,int line)
tcl_DecrRefCount	generic/tclDecls.h	/^    void (*tcl_DecrRefCount) (Tcl_Obj *objPtr); \/* 642 *\/$/;"	m	struct:TclStubs	typeref:typename:void (*)(Tcl_Obj * objPtr)
tcl_DeleteAssocData	generic/tclDecls.h	/^    void (*tcl_DeleteAssocData) (Tcl_Interp *interp, const char *name); \/* 100 *\/$/;"	m	struct:TclStubs	typeref:typename:void (*)(Tcl_Interp * interp,const char * name)
tcl_DeleteChannelHandler	generic/tclDecls.h	/^    void (*tcl_DeleteChannelHandler) (Tcl_Channel chan, Tcl_ChannelProc *proc, void *clientData)/;"	m	struct:TclStubs	typeref:typename:void (*)(Tcl_Channel chan,Tcl_ChannelProc * proc,void * clientData)
tcl_DeleteCloseHandler	generic/tclDecls.h	/^    void (*tcl_DeleteCloseHandler) (Tcl_Channel chan, Tcl_CloseProc *proc, void *clientData); \//;"	m	struct:TclStubs	typeref:typename:void (*)(Tcl_Channel chan,Tcl_CloseProc * proc,void * clientData)
tcl_DeleteCommand	generic/tclDecls.h	/^    int (*tcl_DeleteCommand) (Tcl_Interp *interp, const char *cmdName); \/* 103 *\/$/;"	m	struct:TclStubs	typeref:typename:int (*)(Tcl_Interp * interp,const char * cmdName)
tcl_DeleteCommandFromToken	generic/tclDecls.h	/^    int (*tcl_DeleteCommandFromToken) (Tcl_Interp *interp, Tcl_Command command); \/* 104 *\/$/;"	m	struct:TclStubs	typeref:typename:int (*)(Tcl_Interp * interp,Tcl_Command command)
tcl_DeleteEventSource	generic/tclDecls.h	/^    void (*tcl_DeleteEventSource) (Tcl_EventSetupProc *setupProc, Tcl_EventCheckProc *checkProc,/;"	m	struct:TclStubs	typeref:typename:void (*)(Tcl_EventSetupProc * setupProc,Tcl_EventCheckProc * checkProc,void * clientData)
tcl_DeleteEvents	generic/tclDecls.h	/^    void (*tcl_DeleteEvents) (Tcl_EventDeleteProc *proc, void *clientData); \/* 105 *\/$/;"	m	struct:TclStubs	typeref:typename:void (*)(Tcl_EventDeleteProc * proc,void * clientData)
tcl_DeleteExitHandler	generic/tclDecls.h	/^    void (*tcl_DeleteExitHandler) (Tcl_ExitProc *proc, void *clientData); \/* 107 *\/$/;"	m	struct:TclStubs	typeref:typename:void (*)(Tcl_ExitProc * proc,void * clientData)
tcl_DeleteFileHandler	generic/tclDecls.h	/^    void (*tcl_DeleteFileHandler) (int fd); \/* 10 *\/$/;"	m	struct:TclStubs	typeref:typename:void (*)(int fd)
tcl_DeleteHashEntry	generic/tclDecls.h	/^    void (*tcl_DeleteHashEntry) (Tcl_HashEntry *entryPtr); \/* 108 *\/$/;"	m	struct:TclStubs	typeref:typename:void (*)(Tcl_HashEntry * entryPtr)
tcl_DeleteHashTable	generic/tclDecls.h	/^    void (*tcl_DeleteHashTable) (Tcl_HashTable *tablePtr); \/* 109 *\/$/;"	m	struct:TclStubs	typeref:typename:void (*)(Tcl_HashTable * tablePtr)
tcl_DeleteInterp	generic/tclDecls.h	/^    void (*tcl_DeleteInterp) (Tcl_Interp *interp); \/* 110 *\/$/;"	m	struct:TclStubs	typeref:typename:void (*)(Tcl_Interp * interp)
tcl_DeleteNamespace	generic/tclDecls.h	/^    void (*tcl_DeleteNamespace) (Tcl_Namespace *nsPtr); \/* 507 *\/$/;"	m	struct:TclStubs	typeref:typename:void (*)(Tcl_Namespace * nsPtr)
tcl_DeleteThreadExitHandler	generic/tclDecls.h	/^    void (*tcl_DeleteThreadExitHandler) (Tcl_ExitProc *proc, void *clientData); \/* 289 *\/$/;"	m	struct:TclStubs	typeref:typename:void (*)(Tcl_ExitProc * proc,void * clientData)
tcl_DeleteTimerHandler	generic/tclDecls.h	/^    void (*tcl_DeleteTimerHandler) (Tcl_TimerToken token); \/* 112 *\/$/;"	m	struct:TclStubs	typeref:typename:void (*)(Tcl_TimerToken token)
tcl_DeleteTrace	generic/tclDecls.h	/^    void (*tcl_DeleteTrace) (Tcl_Interp *interp, Tcl_Trace trace); \/* 113 *\/$/;"	m	struct:TclStubs	typeref:typename:void (*)(Tcl_Interp * interp,Tcl_Trace trace)
tcl_DetachChannel	generic/tclDecls.h	/^    int (*tcl_DetachChannel) (Tcl_Interp *interp, Tcl_Channel channel); \/* 438 *\/$/;"	m	struct:TclStubs	typeref:typename:int (*)(Tcl_Interp * interp,Tcl_Channel channel)
tcl_DetachPids	generic/tclDecls.h	/^    void (*tcl_DetachPids) (Tcl_Size numPids, Tcl_Pid *pidPtr); \/* 111 *\/$/;"	m	struct:TclStubs	typeref:typename:void (*)(Tcl_Size numPids,Tcl_Pid * pidPtr)
tcl_DictObjDone	generic/tclDecls.h	/^    void (*tcl_DictObjDone) (Tcl_DictSearch *searchPtr); \/* 500 *\/$/;"	m	struct:TclStubs	typeref:typename:void (*)(Tcl_DictSearch * searchPtr)
tcl_DictObjFirst	generic/tclDecls.h	/^    int (*tcl_DictObjFirst) (Tcl_Interp *interp, Tcl_Obj *dictPtr, Tcl_DictSearch *searchPtr, Tc/;"	m	struct:TclStubs	typeref:typename:int (*)(Tcl_Interp * interp,Tcl_Obj * dictPtr,Tcl_DictSearch * searchPtr,Tcl_Obj ** keyPtrPtr,Tcl_Obj ** valuePtrPtr,int * donePtr)
tcl_DictObjGet	generic/tclDecls.h	/^    int (*tcl_DictObjGet) (Tcl_Interp *interp, Tcl_Obj *dictPtr, Tcl_Obj *keyPtr, Tcl_Obj **valu/;"	m	struct:TclStubs	typeref:typename:int (*)(Tcl_Interp * interp,Tcl_Obj * dictPtr,Tcl_Obj * keyPtr,Tcl_Obj ** valuePtrPtr)
tcl_DictObjNext	generic/tclDecls.h	/^    void (*tcl_DictObjNext) (Tcl_DictSearch *searchPtr, Tcl_Obj **keyPtrPtr, Tcl_Obj **valuePtrP/;"	m	struct:TclStubs	typeref:typename:void (*)(Tcl_DictSearch * searchPtr,Tcl_Obj ** keyPtrPtr,Tcl_Obj ** valuePtrPtr,int * donePtr)
tcl_DictObjPut	generic/tclDecls.h	/^    int (*tcl_DictObjPut) (Tcl_Interp *interp, Tcl_Obj *dictPtr, Tcl_Obj *keyPtr, Tcl_Obj *value/;"	m	struct:TclStubs	typeref:typename:int (*)(Tcl_Interp * interp,Tcl_Obj * dictPtr,Tcl_Obj * keyPtr,Tcl_Obj * valuePtr)
tcl_DictObjPutKeyList	generic/tclDecls.h	/^    int (*tcl_DictObjPutKeyList) (Tcl_Interp *interp, Tcl_Obj *dictPtr, Tcl_Size keyc, Tcl_Obj */;"	m	struct:TclStubs	typeref:typename:int (*)(Tcl_Interp * interp,Tcl_Obj * dictPtr,Tcl_Size keyc,Tcl_Obj * const * keyv,Tcl_Obj * valuePtr)
tcl_DictObjRemove	generic/tclDecls.h	/^    int (*tcl_DictObjRemove) (Tcl_Interp *interp, Tcl_Obj *dictPtr, Tcl_Obj *keyPtr); \/* 496 *\/$/;"	m	struct:TclStubs	typeref:typename:int (*)(Tcl_Interp * interp,Tcl_Obj * dictPtr,Tcl_Obj * keyPtr)
tcl_DictObjRemoveKeyList	generic/tclDecls.h	/^    int (*tcl_DictObjRemoveKeyList) (Tcl_Interp *interp, Tcl_Obj *dictPtr, Tcl_Size keyc, Tcl_Ob/;"	m	struct:TclStubs	typeref:typename:int (*)(Tcl_Interp * interp,Tcl_Obj * dictPtr,Tcl_Size keyc,Tcl_Obj * const * keyv)
tcl_DictObjSize	generic/tclDecls.h	/^    int (*tcl_DictObjSize) (Tcl_Interp *interp, Tcl_Obj *dictPtr, Tcl_Size *sizePtr); \/* 663 *\/$/;"	m	struct:TclStubs	typeref:typename:int (*)(Tcl_Interp * interp,Tcl_Obj * dictPtr,Tcl_Size * sizePtr)
tcl_DiscardInterpState	generic/tclDecls.h	/^    void (*tcl_DiscardInterpState) (Tcl_InterpState state); \/* 537 *\/$/;"	m	struct:TclStubs	typeref:typename:void (*)(Tcl_InterpState state)
tcl_DoOneEvent	generic/tclDecls.h	/^    int (*tcl_DoOneEvent) (int flags); \/* 115 *\/$/;"	m	struct:TclStubs	typeref:typename:int (*)(int flags)
tcl_DoWhenIdle	generic/tclDecls.h	/^    void (*tcl_DoWhenIdle) (Tcl_IdleProc *proc, void *clientData); \/* 116 *\/$/;"	m	struct:TclStubs	typeref:typename:void (*)(Tcl_IdleProc * proc,void * clientData)
tcl_DontCallWhenDeleted	generic/tclDecls.h	/^    void (*tcl_DontCallWhenDeleted) (Tcl_Interp *interp, Tcl_InterpDeleteProc *proc, void *clien/;"	m	struct:TclStubs	typeref:typename:void (*)(Tcl_Interp * interp,Tcl_InterpDeleteProc * proc,void * clientData)
tcl_DumpActiveMemory	generic/tclDecls.h	/^    int (*tcl_DumpActiveMemory) (const char *fileName); \/* 265 *\/$/;"	m	struct:TclStubs	typeref:typename:int (*)(const char * fileName)
tcl_DuplicateObj	generic/tclDecls.h	/^    Tcl_Obj * (*tcl_DuplicateObj) (Tcl_Obj *objPtr); \/* 29 *\/$/;"	m	struct:TclStubs	typeref:typename:Tcl_Obj * (*)(Tcl_Obj * objPtr)
tcl_Eof	generic/tclDecls.h	/^    int (*tcl_Eof) (Tcl_Channel chan); \/* 126 *\/$/;"	m	struct:TclStubs	typeref:typename:int (*)(Tcl_Channel chan)
tcl_ErrnoId	generic/tclDecls.h	/^    const char * (*tcl_ErrnoId) (void); \/* 127 *\/$/;"	m	struct:TclStubs	typeref:typename:const char * (*)(void)
tcl_ErrnoMsg	generic/tclDecls.h	/^    const char * (*tcl_ErrnoMsg) (int err); \/* 128 *\/$/;"	m	struct:TclStubs	typeref:typename:const char * (*)(int err)
tcl_EvalEx	generic/tclDecls.h	/^    int (*tcl_EvalEx) (Tcl_Interp *interp, const char *script, Tcl_Size numBytes, int flags); \//;"	m	struct:TclStubs	typeref:typename:int (*)(Tcl_Interp * interp,const char * script,Tcl_Size numBytes,int flags)
tcl_EvalFile	generic/tclDecls.h	/^    int (*tcl_EvalFile) (Tcl_Interp *interp, const char *fileName); \/* 130 *\/$/;"	m	struct:TclStubs	typeref:typename:int (*)(Tcl_Interp * interp,const char * fileName)
tcl_EvalObjEx	generic/tclDecls.h	/^    int (*tcl_EvalObjEx) (Tcl_Interp *interp, Tcl_Obj *objPtr, int flags); \/* 293 *\/$/;"	m	struct:TclStubs	typeref:typename:int (*)(Tcl_Interp * interp,Tcl_Obj * objPtr,int flags)
tcl_EvalObjv	generic/tclDecls.h	/^    int (*tcl_EvalObjv) (Tcl_Interp *interp, Tcl_Size objc, Tcl_Obj *const objv[], int flags); \//;"	m	struct:TclStubs	typeref:typename:int (*)(Tcl_Interp * interp,Tcl_Size objc,Tcl_Obj * const objv[],int flags)
tcl_EvalTokensStandard	generic/tclDecls.h	/^    int (*tcl_EvalTokensStandard) (Tcl_Interp *interp, Tcl_Token *tokenPtr, Tcl_Size count); \/*/;"	m	struct:TclStubs	typeref:typename:int (*)(Tcl_Interp * interp,Tcl_Token * tokenPtr,Tcl_Size count)
tcl_EventuallyFree	generic/tclDecls.h	/^    void (*tcl_EventuallyFree) (void *clientData, Tcl_FreeProc *freeProc); \/* 132 *\/$/;"	m	struct:TclStubs	typeref:typename:void (*)(void * clientData,Tcl_FreeProc * freeProc)
tcl_Exit	generic/tclDecls.h	/^    TCL_NORETURN1 void (*tcl_Exit) (int status); \/* 133 *\/$/;"	m	struct:TclStubs	typeref:typename:TCL_NORETURN1 void (*)(int status)
tcl_ExitThread	generic/tclDecls.h	/^    TCL_NORETURN1 void (*tcl_ExitThread) (int status); \/* 294 *\/$/;"	m	struct:TclStubs	typeref:typename:TCL_NORETURN1 void (*)(int status)
tcl_Export	generic/tclDecls.h	/^    int (*tcl_Export) (Tcl_Interp *interp, Tcl_Namespace *nsPtr, const char *pattern, int resetL/;"	m	struct:TclStubs	typeref:typename:int (*)(Tcl_Interp * interp,Tcl_Namespace * nsPtr,const char * pattern,int resetListFirst)
tcl_ExposeCommand	generic/tclDecls.h	/^    int (*tcl_ExposeCommand) (Tcl_Interp *interp, const char *hiddenCmdToken, const char *cmdNam/;"	m	struct:TclStubs	typeref:typename:int (*)(Tcl_Interp * interp,const char * hiddenCmdToken,const char * cmdName)
tcl_ExprBoolean	generic/tclDecls.h	/^    int (*tcl_ExprBoolean) (Tcl_Interp *interp, const char *expr, int *ptr); \/* 135 *\/$/;"	m	struct:TclStubs	typeref:typename:int (*)(Tcl_Interp * interp,const char * expr,int * ptr)
tcl_ExprBooleanObj	generic/tclDecls.h	/^    int (*tcl_ExprBooleanObj) (Tcl_Interp *interp, Tcl_Obj *objPtr, int *ptr); \/* 136 *\/$/;"	m	struct:TclStubs	typeref:typename:int (*)(Tcl_Interp * interp,Tcl_Obj * objPtr,int * ptr)
tcl_ExprDouble	generic/tclDecls.h	/^    int (*tcl_ExprDouble) (Tcl_Interp *interp, const char *expr, double *ptr); \/* 137 *\/$/;"	m	struct:TclStubs	typeref:typename:int (*)(Tcl_Interp * interp,const char * expr,double * ptr)
tcl_ExprDoubleObj	generic/tclDecls.h	/^    int (*tcl_ExprDoubleObj) (Tcl_Interp *interp, Tcl_Obj *objPtr, double *ptr); \/* 138 *\/$/;"	m	struct:TclStubs	typeref:typename:int (*)(Tcl_Interp * interp,Tcl_Obj * objPtr,double * ptr)
tcl_ExprLong	generic/tclDecls.h	/^    int (*tcl_ExprLong) (Tcl_Interp *interp, const char *expr, long *ptr); \/* 139 *\/$/;"	m	struct:TclStubs	typeref:typename:int (*)(Tcl_Interp * interp,const char * expr,long * ptr)
tcl_ExprLongObj	generic/tclDecls.h	/^    int (*tcl_ExprLongObj) (Tcl_Interp *interp, Tcl_Obj *objPtr, long *ptr); \/* 140 *\/$/;"	m	struct:TclStubs	typeref:typename:int (*)(Tcl_Interp * interp,Tcl_Obj * objPtr,long * ptr)
tcl_ExprObj	generic/tclDecls.h	/^    int (*tcl_ExprObj) (Tcl_Interp *interp, Tcl_Obj *objPtr, Tcl_Obj **resultPtrPtr); \/* 141 *\/$/;"	m	struct:TclStubs	typeref:typename:int (*)(Tcl_Interp * interp,Tcl_Obj * objPtr,Tcl_Obj ** resultPtrPtr)
tcl_ExprString	generic/tclDecls.h	/^    int (*tcl_ExprString) (Tcl_Interp *interp, const char *expr); \/* 142 *\/$/;"	m	struct:TclStubs	typeref:typename:int (*)(Tcl_Interp * interp,const char * expr)
tcl_ExternalToUtf	generic/tclDecls.h	/^    int (*tcl_ExternalToUtf) (Tcl_Interp *interp, Tcl_Encoding encoding, const char *src, Tcl_Si/;"	m	struct:TclStubs	typeref:typename:int (*)(Tcl_Interp * interp,Tcl_Encoding encoding,const char * src,Tcl_Size srcLen,int flags,Tcl_EncodingState * statePtr,char * dst,Tcl_Size dstLen,int * srcReadPtr,int * dstWrotePtr,int * dstCharsPtr)
tcl_ExternalToUtfDString	generic/tclDecls.h	/^    char * (*tcl_ExternalToUtfDString) (Tcl_Encoding encoding, const char *src, Tcl_Size srcLen,/;"	m	struct:TclStubs	typeref:typename:char * (*)(Tcl_Encoding encoding,const char * src,Tcl_Size srcLen,Tcl_DString * dsPtr)
tcl_ExternalToUtfDStringEx	generic/tclDecls.h	/^    int (*tcl_ExternalToUtfDStringEx) (Tcl_Interp *interp, Tcl_Encoding encoding, const char *sr/;"	m	struct:TclStubs	typeref:typename:int (*)(Tcl_Interp * interp,Tcl_Encoding encoding,const char * src,Tcl_Size srcLen,int flags,Tcl_DString * dsPtr,Tcl_Size * errorLocationPtr)
tcl_FSAccess	generic/tclDecls.h	/^    int (*tcl_FSAccess) (Tcl_Obj *pathPtr, int mode); \/* 455 *\/$/;"	m	struct:TclStubs	typeref:typename:int (*)(Tcl_Obj * pathPtr,int mode)
tcl_FSChdir	generic/tclDecls.h	/^    int (*tcl_FSChdir) (Tcl_Obj *pathPtr); \/* 458 *\/$/;"	m	struct:TclStubs	typeref:typename:int (*)(Tcl_Obj * pathPtr)
tcl_FSConvertToPathType	generic/tclDecls.h	/^    int (*tcl_FSConvertToPathType) (Tcl_Interp *interp, Tcl_Obj *pathPtr); \/* 459 *\/$/;"	m	struct:TclStubs	typeref:typename:int (*)(Tcl_Interp * interp,Tcl_Obj * pathPtr)
tcl_FSCopyDirectory	generic/tclDecls.h	/^    int (*tcl_FSCopyDirectory) (Tcl_Obj *srcPathPtr, Tcl_Obj *destPathPtr, Tcl_Obj **errorPtr); /;"	m	struct:TclStubs	typeref:typename:int (*)(Tcl_Obj * srcPathPtr,Tcl_Obj * destPathPtr,Tcl_Obj ** errorPtr)
tcl_FSCopyFile	generic/tclDecls.h	/^    int (*tcl_FSCopyFile) (Tcl_Obj *srcPathPtr, Tcl_Obj *destPathPtr); \/* 440 *\/$/;"	m	struct:TclStubs	typeref:typename:int (*)(Tcl_Obj * srcPathPtr,Tcl_Obj * destPathPtr)
tcl_FSCreateDirectory	generic/tclDecls.h	/^    int (*tcl_FSCreateDirectory) (Tcl_Obj *pathPtr); \/* 442 *\/$/;"	m	struct:TclStubs	typeref:typename:int (*)(Tcl_Obj * pathPtr)
tcl_FSData	generic/tclDecls.h	/^    void * (*tcl_FSData) (const Tcl_Filesystem *fsPtr); \/* 475 *\/$/;"	m	struct:TclStubs	typeref:typename:void * (*)(const Tcl_Filesystem * fsPtr)
tcl_FSDeleteFile	generic/tclDecls.h	/^    int (*tcl_FSDeleteFile) (Tcl_Obj *pathPtr); \/* 443 *\/$/;"	m	struct:TclStubs	typeref:typename:int (*)(Tcl_Obj * pathPtr)
tcl_FSEqualPaths	generic/tclDecls.h	/^    int (*tcl_FSEqualPaths) (Tcl_Obj *firstPtr, Tcl_Obj *secondPtr); \/* 462 *\/$/;"	m	struct:TclStubs	typeref:typename:int (*)(Tcl_Obj * firstPtr,Tcl_Obj * secondPtr)
tcl_FSEvalFile	generic/tclDecls.h	/^    int (*tcl_FSEvalFile) (Tcl_Interp *interp, Tcl_Obj *fileName); \/* 467 *\/$/;"	m	struct:TclStubs	typeref:typename:int (*)(Tcl_Interp * interp,Tcl_Obj * fileName)
tcl_FSEvalFileEx	generic/tclDecls.h	/^    int (*tcl_FSEvalFileEx) (Tcl_Interp *interp, Tcl_Obj *fileName, const char *encodingName); \//;"	m	struct:TclStubs	typeref:typename:int (*)(Tcl_Interp * interp,Tcl_Obj * fileName,const char * encodingName)
tcl_FSFileAttrStrings	generic/tclDecls.h	/^    const char *const * (*tcl_FSFileAttrStrings) (Tcl_Obj *pathPtr, Tcl_Obj **objPtrRef); \/* 45/;"	m	struct:TclStubs	typeref:typename:const char * const * (*)(Tcl_Obj * pathPtr,Tcl_Obj ** objPtrRef)
tcl_FSFileAttrsGet	generic/tclDecls.h	/^    int (*tcl_FSFileAttrsGet) (Tcl_Interp *interp, int index, Tcl_Obj *pathPtr, Tcl_Obj **objPtr/;"	m	struct:TclStubs	typeref:typename:int (*)(Tcl_Interp * interp,int index,Tcl_Obj * pathPtr,Tcl_Obj ** objPtrRef)
tcl_FSFileAttrsSet	generic/tclDecls.h	/^    int (*tcl_FSFileAttrsSet) (Tcl_Interp *interp, int index, Tcl_Obj *pathPtr, Tcl_Obj *objPtr)/;"	m	struct:TclStubs	typeref:typename:int (*)(Tcl_Interp * interp,int index,Tcl_Obj * pathPtr,Tcl_Obj * objPtr)
tcl_FSFileSystemInfo	generic/tclDecls.h	/^    Tcl_Obj * (*tcl_FSFileSystemInfo) (Tcl_Obj *pathPtr); \/* 470 *\/$/;"	m	struct:TclStubs	typeref:typename:Tcl_Obj * (*)(Tcl_Obj * pathPtr)
tcl_FSGetCwd	generic/tclDecls.h	/^    Tcl_Obj * (*tcl_FSGetCwd) (Tcl_Interp *interp); \/* 457 *\/$/;"	m	struct:TclStubs	typeref:typename:Tcl_Obj * (*)(Tcl_Interp * interp)
tcl_FSGetFileSystemForPath	generic/tclDecls.h	/^    const Tcl_Filesystem * (*tcl_FSGetFileSystemForPath) (Tcl_Obj *pathPtr); \/* 477 *\/$/;"	m	struct:TclStubs	typeref:typename:const Tcl_Filesystem * (*)(Tcl_Obj * pathPtr)
tcl_FSGetInternalRep	generic/tclDecls.h	/^    void * (*tcl_FSGetInternalRep) (Tcl_Obj *pathPtr, const Tcl_Filesystem *fsPtr); \/* 465 *\/$/;"	m	struct:TclStubs	typeref:typename:void * (*)(Tcl_Obj * pathPtr,const Tcl_Filesystem * fsPtr)
tcl_FSGetNativePath	generic/tclDecls.h	/^    const void * (*tcl_FSGetNativePath) (Tcl_Obj *pathPtr); \/* 469 *\/$/;"	m	struct:TclStubs	typeref:typename:const void * (*)(Tcl_Obj * pathPtr)
tcl_FSGetNormalizedPath	generic/tclDecls.h	/^    Tcl_Obj * (*tcl_FSGetNormalizedPath) (Tcl_Interp *interp, Tcl_Obj *pathPtr); \/* 463 *\/$/;"	m	struct:TclStubs	typeref:typename:Tcl_Obj * (*)(Tcl_Interp * interp,Tcl_Obj * pathPtr)
tcl_FSGetPathType	generic/tclDecls.h	/^    Tcl_PathType (*tcl_FSGetPathType) (Tcl_Obj *pathPtr); \/* 478 *\/$/;"	m	struct:TclStubs	typeref:typename:Tcl_PathType (*)(Tcl_Obj * pathPtr)
tcl_FSGetTranslatedPath	generic/tclDecls.h	/^    Tcl_Obj * (*tcl_FSGetTranslatedPath) (Tcl_Interp *interp, Tcl_Obj *pathPtr); \/* 466 *\/$/;"	m	struct:TclStubs	typeref:typename:Tcl_Obj * (*)(Tcl_Interp * interp,Tcl_Obj * pathPtr)
tcl_FSGetTranslatedStringPath	generic/tclDecls.h	/^    const char * (*tcl_FSGetTranslatedStringPath) (Tcl_Interp *interp, Tcl_Obj *pathPtr); \/* 47/;"	m	struct:TclStubs	typeref:typename:const char * (*)(Tcl_Interp * interp,Tcl_Obj * pathPtr)
tcl_FSJoinPath	generic/tclDecls.h	/^    Tcl_Obj * (*tcl_FSJoinPath) (Tcl_Obj *listObj, Tcl_Size elements); \/* 460 *\/$/;"	m	struct:TclStubs	typeref:typename:Tcl_Obj * (*)(Tcl_Obj * listObj,Tcl_Size elements)
tcl_FSJoinToPath	generic/tclDecls.h	/^    Tcl_Obj * (*tcl_FSJoinToPath) (Tcl_Obj *pathPtr, Tcl_Size objc, Tcl_Obj *const objv[]); \/* /;"	m	struct:TclStubs	typeref:typename:Tcl_Obj * (*)(Tcl_Obj * pathPtr,Tcl_Size objc,Tcl_Obj * const objv[])
tcl_FSLink	generic/tclDecls.h	/^    Tcl_Obj * (*tcl_FSLink) (Tcl_Obj *pathPtr, Tcl_Obj *toPtr, int linkAction); \/* 446 *\/$/;"	m	struct:TclStubs	typeref:typename:Tcl_Obj * (*)(Tcl_Obj * pathPtr,Tcl_Obj * toPtr,int linkAction)
tcl_FSListVolumes	generic/tclDecls.h	/^    Tcl_Obj * (*tcl_FSListVolumes) (void); \/* 472 *\/$/;"	m	struct:TclStubs	typeref:typename:Tcl_Obj * (*)(void)
tcl_FSLoadFile	generic/tclDecls.h	/^    int (*tcl_FSLoadFile) (Tcl_Interp *interp, Tcl_Obj *pathPtr, const char *sym1, const char *s/;"	m	struct:TclStubs	typeref:typename:int (*)(Tcl_Interp * interp,Tcl_Obj * pathPtr,const char * sym1,const char * sym2,Tcl_LibraryInitProc ** proc1Ptr,Tcl_LibraryInitProc ** proc2Ptr,Tcl_LoadHandle * handlePtr,Tcl_FSUnloadFileProc ** unloadProcPtr)
tcl_FSLstat	generic/tclDecls.h	/^    int (*tcl_FSLstat) (Tcl_Obj *pathPtr, Tcl_StatBuf *buf); \/* 449 *\/$/;"	m	struct:TclStubs	typeref:typename:int (*)(Tcl_Obj * pathPtr,Tcl_StatBuf * buf)
tcl_FSMatchInDirectory	generic/tclDecls.h	/^    int (*tcl_FSMatchInDirectory) (Tcl_Interp *interp, Tcl_Obj *result, Tcl_Obj *pathPtr, const /;"	m	struct:TclStubs	typeref:typename:int (*)(Tcl_Interp * interp,Tcl_Obj * result,Tcl_Obj * pathPtr,const char * pattern,Tcl_GlobTypeData * types)
tcl_FSMountsChanged	generic/tclDecls.h	/^    void (*tcl_FSMountsChanged) (const Tcl_Filesystem *fsPtr); \/* 480 *\/$/;"	m	struct:TclStubs	typeref:typename:void (*)(const Tcl_Filesystem * fsPtr)
tcl_FSNewNativePath	generic/tclDecls.h	/^    Tcl_Obj * (*tcl_FSNewNativePath) (const Tcl_Filesystem *fromFilesystem, void *clientData); \//;"	m	struct:TclStubs	typeref:typename:Tcl_Obj * (*)(const Tcl_Filesystem * fromFilesystem,void * clientData)
tcl_FSOpenFileChannel	generic/tclDecls.h	/^    Tcl_Channel (*tcl_FSOpenFileChannel) (Tcl_Interp *interp, Tcl_Obj *pathPtr, const char *mode/;"	m	struct:TclStubs	typeref:typename:Tcl_Channel (*)(Tcl_Interp * interp,Tcl_Obj * pathPtr,const char * modeString,int permissions)
tcl_FSPathSeparator	generic/tclDecls.h	/^    Tcl_Obj * (*tcl_FSPathSeparator) (Tcl_Obj *pathPtr); \/* 471 *\/$/;"	m	struct:TclStubs	typeref:typename:Tcl_Obj * (*)(Tcl_Obj * pathPtr)
tcl_FSRegister	generic/tclDecls.h	/^    int (*tcl_FSRegister) (void *clientData, const Tcl_Filesystem *fsPtr); \/* 473 *\/$/;"	m	struct:TclStubs	typeref:typename:int (*)(void * clientData,const Tcl_Filesystem * fsPtr)
tcl_FSRemoveDirectory	generic/tclDecls.h	/^    int (*tcl_FSRemoveDirectory) (Tcl_Obj *pathPtr, int recursive, Tcl_Obj **errorPtr); \/* 447 /;"	m	struct:TclStubs	typeref:typename:int (*)(Tcl_Obj * pathPtr,int recursive,Tcl_Obj ** errorPtr)
tcl_FSRenameFile	generic/tclDecls.h	/^    int (*tcl_FSRenameFile) (Tcl_Obj *srcPathPtr, Tcl_Obj *destPathPtr); \/* 448 *\/$/;"	m	struct:TclStubs	typeref:typename:int (*)(Tcl_Obj * srcPathPtr,Tcl_Obj * destPathPtr)
tcl_FSSplitPath	generic/tclDecls.h	/^    Tcl_Obj * (*tcl_FSSplitPath) (Tcl_Obj *pathPtr, Tcl_Size *lenPtr); \/* 666 *\/$/;"	m	struct:TclStubs	typeref:typename:Tcl_Obj * (*)(Tcl_Obj * pathPtr,Tcl_Size * lenPtr)
tcl_FSStat	generic/tclDecls.h	/^    int (*tcl_FSStat) (Tcl_Obj *pathPtr, Tcl_StatBuf *buf); \/* 454 *\/$/;"	m	struct:TclStubs	typeref:typename:int (*)(Tcl_Obj * pathPtr,Tcl_StatBuf * buf)
tcl_FSUnloadFile	generic/tclDecls.h	/^    int (*tcl_FSUnloadFile) (Tcl_Interp *interp, Tcl_LoadHandle handlePtr); \/* 629 *\/$/;"	m	struct:TclStubs	typeref:typename:int (*)(Tcl_Interp * interp,Tcl_LoadHandle handlePtr)
tcl_FSUnregister	generic/tclDecls.h	/^    int (*tcl_FSUnregister) (const Tcl_Filesystem *fsPtr); \/* 474 *\/$/;"	m	struct:TclStubs	typeref:typename:int (*)(const Tcl_Filesystem * fsPtr)
tcl_FSUtime	generic/tclDecls.h	/^    int (*tcl_FSUtime) (Tcl_Obj *pathPtr, struct utimbuf *tval); \/* 450 *\/$/;"	m	struct:TclStubs	typeref:typename:int (*)(Tcl_Obj * pathPtr,struct utimbuf * tval)
tcl_FetchInternalRep	generic/tclDecls.h	/^    Tcl_ObjInternalRep * (*tcl_FetchInternalRep) (Tcl_Obj *objPtr, const Tcl_ObjType *typePtr); /;"	m	struct:TclStubs	typeref:typename:Tcl_ObjInternalRep * (*)(Tcl_Obj * objPtr,const Tcl_ObjType * typePtr)
tcl_Finalize	generic/tclDecls.h	/^    void (*tcl_Finalize) (void); \/* 143 *\/$/;"	m	struct:TclStubs	typeref:typename:void (*)(void)
tcl_FinalizeNotifier	generic/tclDecls.h	/^    void (*tcl_FinalizeNotifier) (void *clientData); \/* 298 *\/$/;"	m	struct:TclStubs	typeref:typename:void (*)(void * clientData)
tcl_FinalizeThread	generic/tclDecls.h	/^    void (*tcl_FinalizeThread) (void); \/* 297 *\/$/;"	m	struct:TclStubs	typeref:typename:void (*)(void)
tcl_FindCommand	generic/tclDecls.h	/^    Tcl_Command (*tcl_FindCommand) (Tcl_Interp *interp, const char *name, Tcl_Namespace *context/;"	m	struct:TclStubs	typeref:typename:Tcl_Command (*)(Tcl_Interp * interp,const char * name,Tcl_Namespace * contextNsPtr,int flags)
tcl_FindEnsemble	generic/tclDecls.h	/^    Tcl_Command (*tcl_FindEnsemble) (Tcl_Interp *interp, Tcl_Obj *cmdNameObj, int flags); \/* 54/;"	m	struct:TclStubs	typeref:typename:Tcl_Command (*)(Tcl_Interp * interp,Tcl_Obj * cmdNameObj,int flags)
tcl_FindNamespace	generic/tclDecls.h	/^    Tcl_Namespace * (*tcl_FindNamespace) (Tcl_Interp *interp, const char *name, Tcl_Namespace *c/;"	m	struct:TclStubs	typeref:typename:Tcl_Namespace * (*)(Tcl_Interp * interp,const char * name,Tcl_Namespace * contextNsPtr,int flags)
tcl_FindNamespaceVar	generic/tclIntDecls.h	/^    Tcl_Var (*tcl_FindNamespaceVar) (Tcl_Interp *interp, const char *name, Tcl_Namespace *contex/;"	m	struct:TclIntStubs	typeref:typename:Tcl_Var (*)(Tcl_Interp * interp,const char * name,Tcl_Namespace * contextNsPtr,int flags)
tcl_FindSymbol	generic/tclDecls.h	/^    void * (*tcl_FindSymbol) (Tcl_Interp *interp, Tcl_LoadHandle handle, const char *symbol); \//;"	m	struct:TclStubs	typeref:typename:void * (*)(Tcl_Interp * interp,Tcl_LoadHandle handle,const char * symbol)
tcl_FirstHashEntry	generic/tclDecls.h	/^    Tcl_HashEntry * (*tcl_FirstHashEntry) (Tcl_HashTable *tablePtr, Tcl_HashSearch *searchPtr); /;"	m	struct:TclStubs	typeref:typename:Tcl_HashEntry * (*)(Tcl_HashTable * tablePtr,Tcl_HashSearch * searchPtr)
tcl_Flush	generic/tclDecls.h	/^    int (*tcl_Flush) (Tcl_Channel chan); \/* 146 *\/$/;"	m	struct:TclStubs	typeref:typename:int (*)(Tcl_Channel chan)
tcl_ForgetImport	generic/tclDecls.h	/^    int (*tcl_ForgetImport) (Tcl_Interp *interp, Tcl_Namespace *nsPtr, const char *pattern); \/*/;"	m	struct:TclStubs	typeref:typename:int (*)(Tcl_Interp * interp,Tcl_Namespace * nsPtr,const char * pattern)
tcl_Format	generic/tclDecls.h	/^    Tcl_Obj * (*tcl_Format) (Tcl_Interp *interp, const char *format, Tcl_Size objc, Tcl_Obj *con/;"	m	struct:TclStubs	typeref:typename:Tcl_Obj * (*)(Tcl_Interp * interp,const char * format,Tcl_Size objc,Tcl_Obj * const objv[])
tcl_Free	generic/tclDecls.h	/^    void (*tcl_Free) (void *ptr); \/* 4 *\/$/;"	m	struct:TclStubs	typeref:typename:void (*)(void * ptr)
tcl_FreeEncoding	generic/tclDecls.h	/^    void (*tcl_FreeEncoding) (Tcl_Encoding encoding); \/* 299 *\/$/;"	m	struct:TclStubs	typeref:typename:void (*)(Tcl_Encoding encoding)
tcl_FreeInternalRep	generic/tclDecls.h	/^    void (*tcl_FreeInternalRep) (Tcl_Obj *objPtr); \/* 636 *\/$/;"	m	struct:TclStubs	typeref:typename:void (*)(Tcl_Obj * objPtr)
tcl_FreeParse	generic/tclDecls.h	/^    void (*tcl_FreeParse) (Tcl_Parse *parsePtr); \/* 358 *\/$/;"	m	struct:TclStubs	typeref:typename:void (*)(Tcl_Parse * parsePtr)
tcl_GetAccessTimeFromStat	generic/tclDecls.h	/^    long long (*tcl_GetAccessTimeFromStat) (const Tcl_StatBuf *statPtr); \/* 596 *\/$/;"	m	struct:TclStubs	typeref:typename:long long (*)(const Tcl_StatBuf * statPtr)
tcl_GetAliasObj	generic/tclDecls.h	/^    int (*tcl_GetAliasObj) (Tcl_Interp *interp, const char *childCmd, Tcl_Interp **targetInterpP/;"	m	struct:TclStubs	typeref:typename:int (*)(Tcl_Interp * interp,const char * childCmd,Tcl_Interp ** targetInterpPtr,const char ** targetCmdPtr,Tcl_Size * objcPtr,Tcl_Obj *** objvPtr)
tcl_GetAllocMutex	generic/tclDecls.h	/^    Tcl_Mutex * (*tcl_GetAllocMutex) (void); \/* 387 *\/$/;"	m	struct:TclStubs	typeref:typename:Tcl_Mutex * (*)(void)
tcl_GetAssocData	generic/tclDecls.h	/^    void * (*tcl_GetAssocData) (Tcl_Interp *interp, const char *name, Tcl_InterpDeleteProc **pro/;"	m	struct:TclStubs	typeref:typename:void * (*)(Tcl_Interp * interp,const char * name,Tcl_InterpDeleteProc ** procPtr)
tcl_GetBignumFromObj	generic/tclDecls.h	/^    int (*tcl_GetBignumFromObj) (Tcl_Interp *interp, Tcl_Obj *obj, void *value); \/* 558 *\/$/;"	m	struct:TclStubs	typeref:typename:int (*)(Tcl_Interp * interp,Tcl_Obj * obj,void * value)
tcl_GetBlockSizeFromStat	generic/tclDecls.h	/^    unsigned (*tcl_GetBlockSizeFromStat) (const Tcl_StatBuf *statPtr); \/* 601 *\/$/;"	m	struct:TclStubs	typeref:typename:unsigned (*)(const Tcl_StatBuf * statPtr)
tcl_GetBlocksFromStat	generic/tclDecls.h	/^    unsigned long long (*tcl_GetBlocksFromStat) (const Tcl_StatBuf *statPtr); \/* 600 *\/$/;"	m	struct:TclStubs	typeref:typename:unsigned long long (*)(const Tcl_StatBuf * statPtr)
tcl_GetBool	generic/tclDecls.h	/^    int (*tcl_GetBool) (Tcl_Interp *interp, const char *src, int flags, char *charPtr); \/* 674 /;"	m	struct:TclStubs	typeref:typename:int (*)(Tcl_Interp * interp,const char * src,int flags,char * charPtr)
tcl_GetBoolFromObj	generic/tclDecls.h	/^    int (*tcl_GetBoolFromObj) (Tcl_Interp *interp, Tcl_Obj *objPtr, int flags, char *charPtr); \//;"	m	struct:TclStubs	typeref:typename:int (*)(Tcl_Interp * interp,Tcl_Obj * objPtr,int flags,char * charPtr)
tcl_GetBoolean	generic/tclDecls.h	/^    int (*tcl_GetBoolean) (Tcl_Interp *interp, const char *src, int *intPtr); \/* 31 *\/$/;"	m	struct:TclStubs	typeref:typename:int (*)(Tcl_Interp * interp,const char * src,int * intPtr)
tcl_GetBooleanFromObj	generic/tclDecls.h	/^    int (*tcl_GetBooleanFromObj) (Tcl_Interp *interp, Tcl_Obj *objPtr, int *intPtr); \/* 32 *\/$/;"	m	struct:TclStubs	typeref:typename:int (*)(Tcl_Interp * interp,Tcl_Obj * objPtr,int * intPtr)
tcl_GetByteArrayFromObj	generic/tclDecls.h	/^    unsigned char * (*tcl_GetByteArrayFromObj) (Tcl_Obj *objPtr, Tcl_Size *numBytesPtr); \/* 33 /;"	m	struct:TclStubs	typeref:typename:unsigned char * (*)(Tcl_Obj * objPtr,Tcl_Size * numBytesPtr)
tcl_GetBytesFromObj	generic/tclDecls.h	/^    unsigned char * (*tcl_GetBytesFromObj) (Tcl_Interp *interp, Tcl_Obj *objPtr, Tcl_Size *numBy/;"	m	struct:TclStubs	typeref:typename:unsigned char * (*)(Tcl_Interp * interp,Tcl_Obj * objPtr,Tcl_Size * numBytesPtr)
tcl_GetChangeTimeFromStat	generic/tclDecls.h	/^    long long (*tcl_GetChangeTimeFromStat) (const Tcl_StatBuf *statPtr); \/* 598 *\/$/;"	m	struct:TclStubs	typeref:typename:long long (*)(const Tcl_StatBuf * statPtr)
tcl_GetChannel	generic/tclDecls.h	/^    Tcl_Channel (*tcl_GetChannel) (Tcl_Interp *interp, const char *chanName, int *modePtr); \/* /;"	m	struct:TclStubs	typeref:typename:Tcl_Channel (*)(Tcl_Interp * interp,const char * chanName,int * modePtr)
tcl_GetChannelBufferSize	generic/tclDecls.h	/^    Tcl_Size (*tcl_GetChannelBufferSize) (Tcl_Channel chan); \/* 152 *\/$/;"	m	struct:TclStubs	typeref:typename:Tcl_Size (*)(Tcl_Channel chan)
tcl_GetChannelError	generic/tclDecls.h	/^    void (*tcl_GetChannelError) (Tcl_Channel chan, Tcl_Obj **msg); \/* 565 *\/$/;"	m	struct:TclStubs	typeref:typename:void (*)(Tcl_Channel chan,Tcl_Obj ** msg)
tcl_GetChannelErrorInterp	generic/tclDecls.h	/^    void (*tcl_GetChannelErrorInterp) (Tcl_Interp *interp, Tcl_Obj **msg); \/* 563 *\/$/;"	m	struct:TclStubs	typeref:typename:void (*)(Tcl_Interp * interp,Tcl_Obj ** msg)
tcl_GetChannelHandle	generic/tclDecls.h	/^    int (*tcl_GetChannelHandle) (Tcl_Channel chan, int direction, void **handlePtr); \/* 153 *\/$/;"	m	struct:TclStubs	typeref:typename:int (*)(Tcl_Channel chan,int direction,void ** handlePtr)
tcl_GetChannelInstanceData	generic/tclDecls.h	/^    void * (*tcl_GetChannelInstanceData) (Tcl_Channel chan); \/* 154 *\/$/;"	m	struct:TclStubs	typeref:typename:void * (*)(Tcl_Channel chan)
tcl_GetChannelMode	generic/tclDecls.h	/^    int (*tcl_GetChannelMode) (Tcl_Channel chan); \/* 155 *\/$/;"	m	struct:TclStubs	typeref:typename:int (*)(Tcl_Channel chan)
tcl_GetChannelName	generic/tclDecls.h	/^    const char * (*tcl_GetChannelName) (Tcl_Channel chan); \/* 156 *\/$/;"	m	struct:TclStubs	typeref:typename:const char * (*)(Tcl_Channel chan)
tcl_GetChannelNames	generic/tclDecls.h	/^    int (*tcl_GetChannelNames) (Tcl_Interp *interp); \/* 388 *\/$/;"	m	struct:TclStubs	typeref:typename:int (*)(Tcl_Interp * interp)
tcl_GetChannelNamesEx	generic/tclDecls.h	/^    int (*tcl_GetChannelNamesEx) (Tcl_Interp *interp, const char *pattern); \/* 389 *\/$/;"	m	struct:TclStubs	typeref:typename:int (*)(Tcl_Interp * interp,const char * pattern)
tcl_GetChannelOption	generic/tclDecls.h	/^    int (*tcl_GetChannelOption) (Tcl_Interp *interp, Tcl_Channel chan, const char *optionName, T/;"	m	struct:TclStubs	typeref:typename:int (*)(Tcl_Interp * interp,Tcl_Channel chan,const char * optionName,Tcl_DString * dsPtr)
tcl_GetChannelThread	generic/tclDecls.h	/^    Tcl_ThreadId (*tcl_GetChannelThread) (Tcl_Channel channel); \/* 433 *\/$/;"	m	struct:TclStubs	typeref:typename:Tcl_ThreadId (*)(Tcl_Channel channel)
tcl_GetChannelType	generic/tclDecls.h	/^    const Tcl_ChannelType * (*tcl_GetChannelType) (Tcl_Channel chan); \/* 158 *\/$/;"	m	struct:TclStubs	typeref:typename:const Tcl_ChannelType * (*)(Tcl_Channel chan)
tcl_GetCharLength	generic/tclDecls.h	/^    Tcl_Size (*tcl_GetCharLength) (Tcl_Obj *objPtr); \/* 670 *\/$/;"	m	struct:TclStubs	typeref:typename:Tcl_Size (*)(Tcl_Obj * objPtr)
tcl_GetChild	generic/tclDecls.h	/^    Tcl_Interp * (*tcl_GetChild) (Tcl_Interp *interp, const char *name); \/* 172 *\/$/;"	m	struct:TclStubs	typeref:typename:Tcl_Interp * (*)(Tcl_Interp * interp,const char * name)
tcl_GetClassAsObject	generic/tclOODecls.h	/^    Tcl_Object (*tcl_GetClassAsObject) (Tcl_Class clazz); \/* 1 *\/$/;"	m	struct:TclOOStubs	typeref:typename:Tcl_Object (*)(Tcl_Class clazz)
tcl_GetClassOfObject	generic/tclOODecls.h	/^    Tcl_Class (*tcl_GetClassOfObject) (Tcl_Object object); \/* 30 *\/$/;"	m	struct:TclOOStubs	typeref:typename:Tcl_Class (*)(Tcl_Object object)
tcl_GetCommandFromObj	generic/tclDecls.h	/^    Tcl_Command (*tcl_GetCommandFromObj) (Tcl_Interp *interp, Tcl_Obj *objPtr); \/* 516 *\/$/;"	m	struct:TclStubs	typeref:typename:Tcl_Command (*)(Tcl_Interp * interp,Tcl_Obj * objPtr)
tcl_GetCommandFullName	generic/tclDecls.h	/^    void (*tcl_GetCommandFullName) (Tcl_Interp *interp, Tcl_Command command, Tcl_Obj *objPtr); \//;"	m	struct:TclStubs	typeref:typename:void (*)(Tcl_Interp * interp,Tcl_Command command,Tcl_Obj * objPtr)
tcl_GetCommandInfo	generic/tclDecls.h	/^    int (*tcl_GetCommandInfo) (Tcl_Interp *interp, const char *cmdName, Tcl_CmdInfo *infoPtr); \//;"	m	struct:TclStubs	typeref:typename:int (*)(Tcl_Interp * interp,const char * cmdName,Tcl_CmdInfo * infoPtr)
tcl_GetCommandInfoFromToken	generic/tclDecls.h	/^    int (*tcl_GetCommandInfoFromToken) (Tcl_Command token, Tcl_CmdInfo *infoPtr); \/* 484 *\/$/;"	m	struct:TclStubs	typeref:typename:int (*)(Tcl_Command token,Tcl_CmdInfo * infoPtr)
tcl_GetCommandName	generic/tclDecls.h	/^    const char * (*tcl_GetCommandName) (Tcl_Interp *interp, Tcl_Command command); \/* 160 *\/$/;"	m	struct:TclStubs	typeref:typename:const char * (*)(Tcl_Interp * interp,Tcl_Command command)
tcl_GetCurrentNamespace	generic/tclDecls.h	/^    Tcl_Namespace * (*tcl_GetCurrentNamespace) (Tcl_Interp *interp); \/* 512 *\/$/;"	m	struct:TclStubs	typeref:typename:Tcl_Namespace * (*)(Tcl_Interp * interp)
tcl_GetCurrentThread	generic/tclDecls.h	/^    Tcl_ThreadId (*tcl_GetCurrentThread) (void); \/* 300 *\/$/;"	m	struct:TclStubs	typeref:typename:Tcl_ThreadId (*)(void)
tcl_GetCwd	generic/tclDecls.h	/^    char * (*tcl_GetCwd) (Tcl_Interp *interp, Tcl_DString *cwdPtr); \/* 365 *\/$/;"	m	struct:TclStubs	typeref:typename:char * (*)(Tcl_Interp * interp,Tcl_DString * cwdPtr)
tcl_GetDeviceTypeFromStat	generic/tclDecls.h	/^    int (*tcl_GetDeviceTypeFromStat) (const Tcl_StatBuf *statPtr); \/* 595 *\/$/;"	m	struct:TclStubs	typeref:typename:int (*)(const Tcl_StatBuf * statPtr)
tcl_GetDouble	generic/tclDecls.h	/^    int (*tcl_GetDouble) (Tcl_Interp *interp, const char *src, double *doublePtr); \/* 34 *\/$/;"	m	struct:TclStubs	typeref:typename:int (*)(Tcl_Interp * interp,const char * src,double * doublePtr)
tcl_GetDoubleFromObj	generic/tclDecls.h	/^    int (*tcl_GetDoubleFromObj) (Tcl_Interp *interp, Tcl_Obj *objPtr, double *doublePtr); \/* 35/;"	m	struct:TclStubs	typeref:typename:int (*)(Tcl_Interp * interp,Tcl_Obj * objPtr,double * doublePtr)
tcl_GetEncoding	generic/tclDecls.h	/^    Tcl_Encoding (*tcl_GetEncoding) (Tcl_Interp *interp, const char *name); \/* 301 *\/$/;"	m	struct:TclStubs	typeref:typename:Tcl_Encoding (*)(Tcl_Interp * interp,const char * name)
tcl_GetEncodingFromObj	generic/tclDecls.h	/^    int (*tcl_GetEncodingFromObj) (Tcl_Interp *interp, Tcl_Obj *objPtr, Tcl_Encoding *encodingPt/;"	m	struct:TclStubs	typeref:typename:int (*)(Tcl_Interp * interp,Tcl_Obj * objPtr,Tcl_Encoding * encodingPtr)
tcl_GetEncodingName	generic/tclDecls.h	/^    const char * (*tcl_GetEncodingName) (Tcl_Encoding encoding); \/* 302 *\/$/;"	m	struct:TclStubs	typeref:typename:const char * (*)(Tcl_Encoding encoding)
tcl_GetEncodingNameFromEnvironment	generic/tclDecls.h	/^    const char * (*tcl_GetEncodingNameFromEnvironment) (Tcl_DString *bufPtr); \/* 572 *\/$/;"	m	struct:TclStubs	typeref:typename:const char * (*)(Tcl_DString * bufPtr)
tcl_GetEncodingNames	generic/tclDecls.h	/^    void (*tcl_GetEncodingNames) (Tcl_Interp *interp); \/* 303 *\/$/;"	m	struct:TclStubs	typeref:typename:void (*)(Tcl_Interp * interp)
tcl_GetEncodingNulLength	generic/tclDecls.h	/^    Tcl_Size (*tcl_GetEncodingNulLength) (Tcl_Encoding encoding); \/* 683 *\/$/;"	m	struct:TclStubs	typeref:typename:Tcl_Size (*)(Tcl_Encoding encoding)
tcl_GetEncodingSearchPath	generic/tclDecls.h	/^    Tcl_Obj * (*tcl_GetEncodingSearchPath) (void); \/* 570 *\/$/;"	m	struct:TclStubs	typeref:typename:Tcl_Obj * (*)(void)
tcl_GetEnsembleFlags	generic/tclDecls.h	/^    int (*tcl_GetEnsembleFlags) (Tcl_Interp *interp, Tcl_Command token, int *flagsPtr); \/* 550 /;"	m	struct:TclStubs	typeref:typename:int (*)(Tcl_Interp * interp,Tcl_Command token,int * flagsPtr)
tcl_GetEnsembleMappingDict	generic/tclDecls.h	/^    int (*tcl_GetEnsembleMappingDict) (Tcl_Interp *interp, Tcl_Command token, Tcl_Obj **mapDictP/;"	m	struct:TclStubs	typeref:typename:int (*)(Tcl_Interp * interp,Tcl_Command token,Tcl_Obj ** mapDictPtr)
tcl_GetEnsembleNamespace	generic/tclDecls.h	/^    int (*tcl_GetEnsembleNamespace) (Tcl_Interp *interp, Tcl_Command token, Tcl_Namespace **name/;"	m	struct:TclStubs	typeref:typename:int (*)(Tcl_Interp * interp,Tcl_Command token,Tcl_Namespace ** namespacePtrPtr)
tcl_GetEnsembleParameterList	generic/tclDecls.h	/^    int (*tcl_GetEnsembleParameterList) (Tcl_Interp *interp, Tcl_Command token, Tcl_Obj **paramL/;"	m	struct:TclStubs	typeref:typename:int (*)(Tcl_Interp * interp,Tcl_Command token,Tcl_Obj ** paramListPtr)
tcl_GetEnsembleSubcommandList	generic/tclDecls.h	/^    int (*tcl_GetEnsembleSubcommandList) (Tcl_Interp *interp, Tcl_Command token, Tcl_Obj **subcm/;"	m	struct:TclStubs	typeref:typename:int (*)(Tcl_Interp * interp,Tcl_Command token,Tcl_Obj ** subcmdListPtr)
tcl_GetEnsembleUnknownHandler	generic/tclDecls.h	/^    int (*tcl_GetEnsembleUnknownHandler) (Tcl_Interp *interp, Tcl_Command token, Tcl_Obj **unkno/;"	m	struct:TclStubs	typeref:typename:int (*)(Tcl_Interp * interp,Tcl_Command token,Tcl_Obj ** unknownListPtr)
tcl_GetErrno	generic/tclDecls.h	/^    int (*tcl_GetErrno) (void); \/* 161 *\/$/;"	m	struct:TclStubs	typeref:typename:int (*)(void)
tcl_GetErrorLine	generic/tclDecls.h	/^    int (*tcl_GetErrorLine) (Tcl_Interp *interp); \/* 605 *\/$/;"	m	struct:TclStubs	typeref:typename:int (*)(Tcl_Interp * interp)
tcl_GetFSDeviceFromStat	generic/tclDecls.h	/^    unsigned (*tcl_GetFSDeviceFromStat) (const Tcl_StatBuf *statPtr); \/* 589 *\/$/;"	m	struct:TclStubs	typeref:typename:unsigned (*)(const Tcl_StatBuf * statPtr)
tcl_GetFSInodeFromStat	generic/tclDecls.h	/^    unsigned (*tcl_GetFSInodeFromStat) (const Tcl_StatBuf *statPtr); \/* 590 *\/$/;"	m	struct:TclStubs	typeref:typename:unsigned (*)(const Tcl_StatBuf * statPtr)
tcl_GetGlobalNamespace	generic/tclDecls.h	/^    Tcl_Namespace * (*tcl_GetGlobalNamespace) (Tcl_Interp *interp); \/* 513 *\/$/;"	m	struct:TclStubs	typeref:typename:Tcl_Namespace * (*)(Tcl_Interp * interp)
tcl_GetGroupIdFromStat	generic/tclDecls.h	/^    int (*tcl_GetGroupIdFromStat) (const Tcl_StatBuf *statPtr); \/* 594 *\/$/;"	m	struct:TclStubs	typeref:typename:int (*)(const Tcl_StatBuf * statPtr)
tcl_GetHostName	generic/tclDecls.h	/^    const char * (*tcl_GetHostName) (void); \/* 162 *\/$/;"	m	struct:TclStubs	typeref:typename:const char * (*)(void)
tcl_GetIndexFromObjStruct	generic/tclDecls.h	/^    int (*tcl_GetIndexFromObjStruct) (Tcl_Interp *interp, Tcl_Obj *objPtr, const void *tablePtr,/;"	m	struct:TclStubs	typeref:typename:int (*)(Tcl_Interp * interp,Tcl_Obj * objPtr,const void * tablePtr,Tcl_Size offset,const char * msg,int flags,void * indexPtr)
tcl_GetInt	generic/tclDecls.h	/^    int (*tcl_GetInt) (Tcl_Interp *interp, const char *src, int *intPtr); \/* 37 *\/$/;"	m	struct:TclStubs	typeref:typename:int (*)(Tcl_Interp * interp,const char * src,int * intPtr)
tcl_GetIntForIndex	generic/tclDecls.h	/^    int (*tcl_GetIntForIndex) (Tcl_Interp *interp, Tcl_Obj *objPtr, Tcl_Size endValue, Tcl_Size /;"	m	struct:TclStubs	typeref:typename:int (*)(Tcl_Interp * interp,Tcl_Obj * objPtr,Tcl_Size endValue,Tcl_Size * indexPtr)
tcl_GetIntFromObj	generic/tclDecls.h	/^    int (*tcl_GetIntFromObj) (Tcl_Interp *interp, Tcl_Obj *objPtr, int *intPtr); \/* 38 *\/$/;"	m	struct:TclStubs	typeref:typename:int (*)(Tcl_Interp * interp,Tcl_Obj * objPtr,int * intPtr)
tcl_GetInterpPath	generic/tclDecls.h	/^    int (*tcl_GetInterpPath) (Tcl_Interp *interp, Tcl_Interp *childInterp); \/* 163 *\/$/;"	m	struct:TclStubs	typeref:typename:int (*)(Tcl_Interp * interp,Tcl_Interp * childInterp)
tcl_GetInterpResolvers	generic/tclIntDecls.h	/^    int (*tcl_GetInterpResolvers) (Tcl_Interp *interp, const char *name, Tcl_ResolverInfo *resIn/;"	m	struct:TclIntStubs	typeref:typename:int (*)(Tcl_Interp * interp,const char * name,Tcl_ResolverInfo * resInfo)
tcl_GetLinkCountFromStat	generic/tclDecls.h	/^    int (*tcl_GetLinkCountFromStat) (const Tcl_StatBuf *statPtr); \/* 592 *\/$/;"	m	struct:TclStubs	typeref:typename:int (*)(const Tcl_StatBuf * statPtr)
tcl_GetLongFromObj	generic/tclDecls.h	/^    int (*tcl_GetLongFromObj) (Tcl_Interp *interp, Tcl_Obj *objPtr, long *longPtr); \/* 39 *\/$/;"	m	struct:TclStubs	typeref:typename:int (*)(Tcl_Interp * interp,Tcl_Obj * objPtr,long * longPtr)
tcl_GetModeFromStat	generic/tclDecls.h	/^    unsigned (*tcl_GetModeFromStat) (const Tcl_StatBuf *statPtr); \/* 591 *\/$/;"	m	struct:TclStubs	typeref:typename:unsigned (*)(const Tcl_StatBuf * statPtr)
tcl_GetModificationTimeFromStat	generic/tclDecls.h	/^    long long (*tcl_GetModificationTimeFromStat) (const Tcl_StatBuf *statPtr); \/* 597 *\/$/;"	m	struct:TclStubs	typeref:typename:long long (*)(const Tcl_StatBuf * statPtr)
tcl_GetNameOfExecutable	generic/tclDecls.h	/^    const char * (*tcl_GetNameOfExecutable) (void); \/* 165 *\/$/;"	m	struct:TclStubs	typeref:typename:const char * (*)(void)
tcl_GetNamespaceResolvers	generic/tclIntDecls.h	/^    int (*tcl_GetNamespaceResolvers) (Tcl_Namespace *namespacePtr, Tcl_ResolverInfo *resInfo); \//;"	m	struct:TclIntStubs	typeref:typename:int (*)(Tcl_Namespace * namespacePtr,Tcl_ResolverInfo * resInfo)
tcl_GetNamespaceUnknownHandler	generic/tclDecls.h	/^    Tcl_Obj * (*tcl_GetNamespaceUnknownHandler) (Tcl_Interp *interp, Tcl_Namespace *nsPtr); \/* /;"	m	struct:TclStubs	typeref:typename:Tcl_Obj * (*)(Tcl_Interp * interp,Tcl_Namespace * nsPtr)
tcl_GetNumber	generic/tclDecls.h	/^    int (*tcl_GetNumber) (Tcl_Interp *interp, const char *bytes, Tcl_Size numBytes, void **clien/;"	m	struct:TclStubs	typeref:typename:int (*)(Tcl_Interp * interp,const char * bytes,Tcl_Size numBytes,void ** clientDataPtr,int * typePtr)
tcl_GetNumberFromObj	generic/tclDecls.h	/^    int (*tcl_GetNumberFromObj) (Tcl_Interp *interp, Tcl_Obj *objPtr, void **clientDataPtr, int /;"	m	struct:TclStubs	typeref:typename:int (*)(Tcl_Interp * interp,Tcl_Obj * objPtr,void ** clientDataPtr,int * typePtr)
tcl_GetObjResult	generic/tclDecls.h	/^    Tcl_Obj * (*tcl_GetObjResult) (Tcl_Interp *interp); \/* 166 *\/$/;"	m	struct:TclStubs	typeref:typename:Tcl_Obj * (*)(Tcl_Interp * interp)
tcl_GetObjType	generic/tclDecls.h	/^    const Tcl_ObjType * (*tcl_GetObjType) (const char *typeName); \/* 40 *\/$/;"	m	struct:TclStubs	typeref:typename:const Tcl_ObjType * (*)(const char * typeName)
tcl_GetObjectAsClass	generic/tclOODecls.h	/^    Tcl_Class (*tcl_GetObjectAsClass) (Tcl_Object object); \/* 2 *\/$/;"	m	struct:TclOOStubs	typeref:typename:Tcl_Class (*)(Tcl_Object object)
tcl_GetObjectClassName	generic/tclOODecls.h	/^    Tcl_Obj * (*tcl_GetObjectClassName) (Tcl_Interp *interp, Tcl_Object object); \/* 31 *\/$/;"	m	struct:TclOOStubs	typeref:typename:Tcl_Obj * (*)(Tcl_Interp * interp,Tcl_Object object)
tcl_GetObjectCommand	generic/tclOODecls.h	/^    Tcl_Command (*tcl_GetObjectCommand) (Tcl_Object object); \/* 3 *\/$/;"	m	struct:TclOOStubs	typeref:typename:Tcl_Command (*)(Tcl_Object object)
tcl_GetObjectFromObj	generic/tclOODecls.h	/^    Tcl_Object (*tcl_GetObjectFromObj) (Tcl_Interp *interp, Tcl_Obj *objPtr); \/* 4 *\/$/;"	m	struct:TclOOStubs	typeref:typename:Tcl_Object (*)(Tcl_Interp * interp,Tcl_Obj * objPtr)
tcl_GetObjectName	generic/tclOODecls.h	/^    Tcl_Obj * (*tcl_GetObjectName) (Tcl_Interp *interp, Tcl_Object object); \/* 28 *\/$/;"	m	struct:TclOOStubs	typeref:typename:Tcl_Obj * (*)(Tcl_Interp * interp,Tcl_Object object)
tcl_GetObjectNamespace	generic/tclOODecls.h	/^    Tcl_Namespace * (*tcl_GetObjectNamespace) (Tcl_Object object); \/* 5 *\/$/;"	m	struct:TclOOStubs	typeref:typename:Tcl_Namespace * (*)(Tcl_Object object)
tcl_GetOpenFile	generic/tclDecls.h	/^    int (*tcl_GetOpenFile) (Tcl_Interp *interp, const char *chanID, int forWriting, int checkUsa/;"	m	struct:TclStubs	typeref:typename:int (*)(Tcl_Interp * interp,const char * chanID,int forWriting,int checkUsage,void ** filePtr)
tcl_GetParent	generic/tclDecls.h	/^    Tcl_Interp * (*tcl_GetParent) (Tcl_Interp *interp); \/* 164 *\/$/;"	m	struct:TclStubs	typeref:typename:Tcl_Interp * (*)(Tcl_Interp * interp)
tcl_GetPathType	generic/tclDecls.h	/^    Tcl_PathType (*tcl_GetPathType) (const char *path); \/* 168 *\/$/;"	m	struct:TclStubs	typeref:typename:Tcl_PathType (*)(const char * path)
tcl_GetRange	generic/tclDecls.h	/^    Tcl_Obj * (*tcl_GetRange) (Tcl_Obj *objPtr, Tcl_Size first, Tcl_Size last); \/* 672 *\/$/;"	m	struct:TclStubs	typeref:typename:Tcl_Obj * (*)(Tcl_Obj * objPtr,Tcl_Size first,Tcl_Size last)
tcl_GetRegExpFromObj	generic/tclDecls.h	/^    Tcl_RegExp (*tcl_GetRegExpFromObj) (Tcl_Interp *interp, Tcl_Obj *patObj, int flags); \/* 356/;"	m	struct:TclStubs	typeref:typename:Tcl_RegExp (*)(Tcl_Interp * interp,Tcl_Obj * patObj,int flags)
tcl_GetReturnOptions	generic/tclDecls.h	/^    Tcl_Obj * (*tcl_GetReturnOptions) (Tcl_Interp *interp, int result); \/* 539 *\/$/;"	m	struct:TclStubs	typeref:typename:Tcl_Obj * (*)(Tcl_Interp * interp,int result)
tcl_GetServiceMode	generic/tclDecls.h	/^    int (*tcl_GetServiceMode) (void); \/* 171 *\/$/;"	m	struct:TclStubs	typeref:typename:int (*)(void)
tcl_GetSizeFromStat	generic/tclDecls.h	/^    unsigned long long (*tcl_GetSizeFromStat) (const Tcl_StatBuf *statPtr); \/* 599 *\/$/;"	m	struct:TclStubs	typeref:typename:unsigned long long (*)(const Tcl_StatBuf * statPtr)
tcl_GetSizeIntFromObj	generic/tclDecls.h	/^    int (*tcl_GetSizeIntFromObj) (Tcl_Interp *interp, Tcl_Obj *objPtr, Tcl_Size *sizePtr); \/* 6/;"	m	struct:TclStubs	typeref:typename:int (*)(Tcl_Interp * interp,Tcl_Obj * objPtr,Tcl_Size * sizePtr)
tcl_GetStackedChannel	generic/tclDecls.h	/^    Tcl_Channel (*tcl_GetStackedChannel) (Tcl_Channel chan); \/* 283 *\/$/;"	m	struct:TclStubs	typeref:typename:Tcl_Channel (*)(Tcl_Channel chan)
tcl_GetStartupScript	generic/tclDecls.h	/^    Tcl_Obj * (*tcl_GetStartupScript) (const char **encodingPtr); \/* 623 *\/$/;"	m	struct:TclStubs	typeref:typename:Tcl_Obj * (*)(const char ** encodingPtr)
tcl_GetStdChannel	generic/tclDecls.h	/^    Tcl_Channel (*tcl_GetStdChannel) (int type); \/* 173 *\/$/;"	m	struct:TclStubs	typeref:typename:Tcl_Channel (*)(int type)
tcl_GetString	generic/tclDecls.h	/^    char * (*tcl_GetString) (Tcl_Obj *objPtr); \/* 340 *\/$/;"	m	struct:TclStubs	typeref:typename:char * (*)(Tcl_Obj * objPtr)
tcl_GetStringFromObj	generic/tclDecls.h	/^    char * (*tcl_GetStringFromObj) (Tcl_Obj *objPtr, Tcl_Size *lengthPtr); \/* 651 *\/$/;"	m	struct:TclStubs	typeref:typename:char * (*)(Tcl_Obj * objPtr,Tcl_Size * lengthPtr)
tcl_GetThreadData	generic/tclDecls.h	/^    void * (*tcl_GetThreadData) (Tcl_ThreadDataKey *keyPtr, Tcl_Size size); \/* 305 *\/$/;"	m	struct:TclStubs	typeref:typename:void * (*)(Tcl_ThreadDataKey * keyPtr,Tcl_Size size)
tcl_GetTime	generic/tclDecls.h	/^    void (*tcl_GetTime) (Tcl_Time *timeBuf); \/* 482 *\/$/;"	m	struct:TclStubs	typeref:typename:void (*)(Tcl_Time * timeBuf)
tcl_GetTopChannel	generic/tclDecls.h	/^    Tcl_Channel (*tcl_GetTopChannel) (Tcl_Channel chan); \/* 396 *\/$/;"	m	struct:TclStubs	typeref:typename:Tcl_Channel (*)(Tcl_Channel chan)
tcl_GetUniChar	generic/tclDecls.h	/^    int (*tcl_GetUniChar) (Tcl_Obj *objPtr, Tcl_Size index); \/* 673 *\/$/;"	m	struct:TclStubs	typeref:typename:int (*)(Tcl_Obj * objPtr,Tcl_Size index)
tcl_GetUnicodeFromObj	generic/tclDecls.h	/^    Tcl_UniChar * (*tcl_GetUnicodeFromObj) (Tcl_Obj *objPtr, Tcl_Size *lengthPtr); \/* 652 *\/$/;"	m	struct:TclStubs	typeref:typename:Tcl_UniChar * (*)(Tcl_Obj * objPtr,Tcl_Size * lengthPtr)
tcl_GetUserIdFromStat	generic/tclDecls.h	/^    int (*tcl_GetUserIdFromStat) (const Tcl_StatBuf *statPtr); \/* 593 *\/$/;"	m	struct:TclStubs	typeref:typename:int (*)(const Tcl_StatBuf * statPtr)
tcl_GetVar2	generic/tclDecls.h	/^    const char * (*tcl_GetVar2) (Tcl_Interp *interp, const char *part1, const char *part2, int f/;"	m	struct:TclStubs	typeref:typename:const char * (*)(Tcl_Interp * interp,const char * part1,const char * part2,int flags)
tcl_GetVar2Ex	generic/tclDecls.h	/^    Tcl_Obj * (*tcl_GetVar2Ex) (Tcl_Interp *interp, const char *part1, const char *part2, int fl/;"	m	struct:TclStubs	typeref:typename:Tcl_Obj * (*)(Tcl_Interp * interp,const char * part1,const char * part2,int flags)
tcl_GetVariableFullName	generic/tclIntDecls.h	/^    void (*tcl_GetVariableFullName) (Tcl_Interp *interp, Tcl_Var variable, Tcl_Obj *objPtr); \/*/;"	m	struct:TclIntStubs	typeref:typename:void (*)(Tcl_Interp * interp,Tcl_Var variable,Tcl_Obj * objPtr)
tcl_GetVersion	generic/tclDecls.h	/^    void (*tcl_GetVersion) (int *major, int *minor, int *patchLevel, int *type); \/* 279 *\/$/;"	m	struct:TclStubs	typeref:typename:void (*)(int * major,int * minor,int * patchLevel,int * type)
tcl_GetWideIntFromObj	generic/tclDecls.h	/^    int (*tcl_GetWideIntFromObj) (Tcl_Interp *interp, Tcl_Obj *objPtr, Tcl_WideInt *widePtr); \//;"	m	struct:TclStubs	typeref:typename:int (*)(Tcl_Interp * interp,Tcl_Obj * objPtr,Tcl_WideInt * widePtr)
tcl_GetWideUIntFromObj	generic/tclDecls.h	/^    int (*tcl_GetWideUIntFromObj) (Tcl_Interp *interp, Tcl_Obj *objPtr, Tcl_WideUInt *uwidePtr);/;"	m	struct:TclStubs	typeref:typename:int (*)(Tcl_Interp * interp,Tcl_Obj * objPtr,Tcl_WideUInt * uwidePtr)
tcl_Gets	generic/tclDecls.h	/^    Tcl_Size (*tcl_Gets) (Tcl_Channel chan, Tcl_DString *dsPtr); \/* 169 *\/$/;"	m	struct:TclStubs	typeref:typename:Tcl_Size (*)(Tcl_Channel chan,Tcl_DString * dsPtr)
tcl_GetsObj	generic/tclDecls.h	/^    Tcl_Size (*tcl_GetsObj) (Tcl_Channel chan, Tcl_Obj *objPtr); \/* 170 *\/$/;"	m	struct:TclStubs	typeref:typename:Tcl_Size (*)(Tcl_Channel chan,Tcl_Obj * objPtr)
tcl_HasStringRep	generic/tclDecls.h	/^    int (*tcl_HasStringRep) (Tcl_Obj *objPtr); \/* 640 *\/$/;"	m	struct:TclStubs	typeref:typename:int (*)(Tcl_Obj * objPtr)
tcl_HashStats	generic/tclDecls.h	/^    char * (*tcl_HashStats) (Tcl_HashTable *tablePtr); \/* 269 *\/$/;"	m	struct:TclStubs	typeref:typename:char * (*)(Tcl_HashTable * tablePtr)
tcl_HideCommand	generic/tclDecls.h	/^    int (*tcl_HideCommand) (Tcl_Interp *interp, const char *cmdName, const char *hiddenCmdToken)/;"	m	struct:TclStubs	typeref:typename:int (*)(Tcl_Interp * interp,const char * cmdName,const char * hiddenCmdToken)
tcl_Import	generic/tclDecls.h	/^    int (*tcl_Import) (Tcl_Interp *interp, Tcl_Namespace *nsPtr, const char *pattern, int allowO/;"	m	struct:TclStubs	typeref:typename:int (*)(Tcl_Interp * interp,Tcl_Namespace * nsPtr,const char * pattern,int allowOverwrite)
tcl_IncrRefCount	generic/tclDecls.h	/^    void (*tcl_IncrRefCount) (Tcl_Obj *objPtr); \/* 641 *\/$/;"	m	struct:TclStubs	typeref:typename:void (*)(Tcl_Obj * objPtr)
tcl_Init	generic/tclDecls.h	/^    int (*tcl_Init) (Tcl_Interp *interp); \/* 180 *\/$/;"	m	struct:TclStubs	typeref:typename:int (*)(Tcl_Interp * interp)
tcl_InitBignumFromDouble	generic/tclDecls.h	/^    int (*tcl_InitBignumFromDouble) (Tcl_Interp *interp, double initval, void *toInit); \/* 566 /;"	m	struct:TclStubs	typeref:typename:int (*)(Tcl_Interp * interp,double initval,void * toInit)
tcl_InitCustomHashTable	generic/tclDecls.h	/^    void (*tcl_InitCustomHashTable) (Tcl_HashTable *tablePtr, int keyType, const Tcl_HashKeyType/;"	m	struct:TclStubs	typeref:typename:void (*)(Tcl_HashTable * tablePtr,int keyType,const Tcl_HashKeyType * typePtr)
tcl_InitHashTable	generic/tclDecls.h	/^    void (*tcl_InitHashTable) (Tcl_HashTable *tablePtr, int keyType); \/* 181 *\/$/;"	m	struct:TclStubs	typeref:typename:void (*)(Tcl_HashTable * tablePtr,int keyType)
tcl_InitMemory	generic/tclDecls.h	/^    void (*tcl_InitMemory) (Tcl_Interp *interp); \/* 280 *\/$/;"	m	struct:TclStubs	typeref:typename:void (*)(Tcl_Interp * interp)
tcl_InitNotifier	generic/tclDecls.h	/^    void * (*tcl_InitNotifier) (void); \/* 307 *\/$/;"	m	struct:TclStubs	typeref:typename:void * (*)(void)
tcl_InitObjHashTable	generic/tclDecls.h	/^    void (*tcl_InitObjHashTable) (Tcl_HashTable *tablePtr); \/* 424 *\/$/;"	m	struct:TclStubs	typeref:typename:void (*)(Tcl_HashTable * tablePtr)
tcl_InitStringRep	generic/tclDecls.h	/^    char * (*tcl_InitStringRep) (Tcl_Obj *objPtr, const char *bytes, TCL_HASH_TYPE numBytes); \//;"	m	struct:TclStubs	typeref:typename:char * (*)(Tcl_Obj * objPtr,const char * bytes,TCL_HASH_TYPE numBytes)
tcl_InputBlocked	generic/tclDecls.h	/^    int (*tcl_InputBlocked) (Tcl_Channel chan); \/* 182 *\/$/;"	m	struct:TclStubs	typeref:typename:int (*)(Tcl_Channel chan)
tcl_InputBuffered	generic/tclDecls.h	/^    int (*tcl_InputBuffered) (Tcl_Channel chan); \/* 183 *\/$/;"	m	struct:TclStubs	typeref:typename:int (*)(Tcl_Channel chan)
tcl_InterpActive	generic/tclDecls.h	/^    int (*tcl_InterpActive) (Tcl_Interp *interp); \/* 608 *\/$/;"	m	struct:TclStubs	typeref:typename:int (*)(Tcl_Interp * interp)
tcl_InterpDeleted	generic/tclDecls.h	/^    int (*tcl_InterpDeleted) (Tcl_Interp *interp); \/* 184 *\/$/;"	m	struct:TclStubs	typeref:typename:int (*)(Tcl_Interp * interp)
tcl_InvalidateStringRep	generic/tclDecls.h	/^    void (*tcl_InvalidateStringRep) (Tcl_Obj *objPtr); \/* 42 *\/$/;"	m	struct:TclStubs	typeref:typename:void (*)(Tcl_Obj * objPtr)
tcl_IsChannelExisting	generic/tclDecls.h	/^    int (*tcl_IsChannelExisting) (const char *channelName); \/* 418 *\/$/;"	m	struct:TclStubs	typeref:typename:int (*)(const char * channelName)
tcl_IsChannelRegistered	generic/tclDecls.h	/^    int (*tcl_IsChannelRegistered) (Tcl_Interp *interp, Tcl_Channel channel); \/* 414 *\/$/;"	m	struct:TclStubs	typeref:typename:int (*)(Tcl_Interp * interp,Tcl_Channel channel)
tcl_IsChannelShared	generic/tclDecls.h	/^    int (*tcl_IsChannelShared) (Tcl_Channel channel); \/* 413 *\/$/;"	m	struct:TclStubs	typeref:typename:int (*)(Tcl_Channel channel)
tcl_IsEnsemble	generic/tclDecls.h	/^    int (*tcl_IsEnsemble) (Tcl_Command token); \/* 540 *\/$/;"	m	struct:TclStubs	typeref:typename:int (*)(Tcl_Command token)
tcl_IsSafe	generic/tclDecls.h	/^    int (*tcl_IsSafe) (Tcl_Interp *interp); \/* 185 *\/$/;"	m	struct:TclStubs	typeref:typename:int (*)(Tcl_Interp * interp)
tcl_IsShared	generic/tclDecls.h	/^    int (*tcl_IsShared) (Tcl_Obj *objPtr); \/* 643 *\/$/;"	m	struct:TclStubs	typeref:typename:int (*)(Tcl_Obj * objPtr)
tcl_IsStandardChannel	generic/tclDecls.h	/^    int (*tcl_IsStandardChannel) (Tcl_Channel channel); \/* 439 *\/$/;"	m	struct:TclStubs	typeref:typename:int (*)(Tcl_Channel channel)
tcl_JoinPath	generic/tclDecls.h	/^    char * (*tcl_JoinPath) (Tcl_Size argc, const char *const *argv, Tcl_DString *resultPtr); \/*/;"	m	struct:TclStubs	typeref:typename:char * (*)(Tcl_Size argc,const char * const * argv,Tcl_DString * resultPtr)
tcl_JoinThread	generic/tclDecls.h	/^    int (*tcl_JoinThread) (Tcl_ThreadId threadId, int *result); \/* 412 *\/$/;"	m	struct:TclStubs	typeref:typename:int (*)(Tcl_ThreadId threadId,int * result)
tcl_LimitAddHandler	generic/tclDecls.h	/^    void (*tcl_LimitAddHandler) (Tcl_Interp *interp, int type, Tcl_LimitHandlerProc *handlerProc/;"	m	struct:TclStubs	typeref:typename:void (*)(Tcl_Interp * interp,int type,Tcl_LimitHandlerProc * handlerProc,void * clientData,Tcl_LimitHandlerDeleteProc * deleteProc)
tcl_LimitCheck	generic/tclDecls.h	/^    int (*tcl_LimitCheck) (Tcl_Interp *interp); \/* 523 *\/$/;"	m	struct:TclStubs	typeref:typename:int (*)(Tcl_Interp * interp)
tcl_LimitExceeded	generic/tclDecls.h	/^    int (*tcl_LimitExceeded) (Tcl_Interp *interp); \/* 524 *\/$/;"	m	struct:TclStubs	typeref:typename:int (*)(Tcl_Interp * interp)
tcl_LimitGetCommands	generic/tclDecls.h	/^    int (*tcl_LimitGetCommands) (Tcl_Interp *interp); \/* 532 *\/$/;"	m	struct:TclStubs	typeref:typename:int (*)(Tcl_Interp * interp)
tcl_LimitGetGranularity	generic/tclDecls.h	/^    int (*tcl_LimitGetGranularity) (Tcl_Interp *interp, int type); \/* 534 *\/$/;"	m	struct:TclStubs	typeref:typename:int (*)(Tcl_Interp * interp,int type)
tcl_LimitGetTime	generic/tclDecls.h	/^    void (*tcl_LimitGetTime) (Tcl_Interp *interp, Tcl_Time *timeLimitPtr); \/* 533 *\/$/;"	m	struct:TclStubs	typeref:typename:void (*)(Tcl_Interp * interp,Tcl_Time * timeLimitPtr)
tcl_LimitReady	generic/tclDecls.h	/^    int (*tcl_LimitReady) (Tcl_Interp *interp); \/* 522 *\/$/;"	m	struct:TclStubs	typeref:typename:int (*)(Tcl_Interp * interp)
tcl_LimitRemoveHandler	generic/tclDecls.h	/^    void (*tcl_LimitRemoveHandler) (Tcl_Interp *interp, int type, Tcl_LimitHandlerProc *handlerP/;"	m	struct:TclStubs	typeref:typename:void (*)(Tcl_Interp * interp,int type,Tcl_LimitHandlerProc * handlerProc,void * clientData)
tcl_LimitSetCommands	generic/tclDecls.h	/^    void (*tcl_LimitSetCommands) (Tcl_Interp *interp, Tcl_Size commandLimit); \/* 525 *\/$/;"	m	struct:TclStubs	typeref:typename:void (*)(Tcl_Interp * interp,Tcl_Size commandLimit)
tcl_LimitSetGranularity	generic/tclDecls.h	/^    void (*tcl_LimitSetGranularity) (Tcl_Interp *interp, int type, int granularity); \/* 527 *\/$/;"	m	struct:TclStubs	typeref:typename:void (*)(Tcl_Interp * interp,int type,int granularity)
tcl_LimitSetTime	generic/tclDecls.h	/^    void (*tcl_LimitSetTime) (Tcl_Interp *interp, Tcl_Time *timeLimitPtr); \/* 526 *\/$/;"	m	struct:TclStubs	typeref:typename:void (*)(Tcl_Interp * interp,Tcl_Time * timeLimitPtr)
tcl_LimitTypeEnabled	generic/tclDecls.h	/^    int (*tcl_LimitTypeEnabled) (Tcl_Interp *interp, int type); \/* 528 *\/$/;"	m	struct:TclStubs	typeref:typename:int (*)(Tcl_Interp * interp,int type)
tcl_LimitTypeExceeded	generic/tclDecls.h	/^    int (*tcl_LimitTypeExceeded) (Tcl_Interp *interp, int type); \/* 529 *\/$/;"	m	struct:TclStubs	typeref:typename:int (*)(Tcl_Interp * interp,int type)
tcl_LimitTypeReset	generic/tclDecls.h	/^    void (*tcl_LimitTypeReset) (Tcl_Interp *interp, int type); \/* 531 *\/$/;"	m	struct:TclStubs	typeref:typename:void (*)(Tcl_Interp * interp,int type)
tcl_LimitTypeSet	generic/tclDecls.h	/^    void (*tcl_LimitTypeSet) (Tcl_Interp *interp, int type); \/* 530 *\/$/;"	m	struct:TclStubs	typeref:typename:void (*)(Tcl_Interp * interp,int type)
tcl_LinkArray	generic/tclDecls.h	/^    int (*tcl_LinkArray) (Tcl_Interp *interp, const char *varName, void *addr, int type, Tcl_Siz/;"	m	struct:TclStubs	typeref:typename:int (*)(Tcl_Interp * interp,const char * varName,void * addr,int type,Tcl_Size size)
tcl_LinkVar	generic/tclDecls.h	/^    int (*tcl_LinkVar) (Tcl_Interp *interp, const char *varName, void *addr, int type); \/* 187 /;"	m	struct:TclStubs	typeref:typename:int (*)(Tcl_Interp * interp,const char * varName,void * addr,int type)
tcl_ListObjAppendElement	generic/tclDecls.h	/^    int (*tcl_ListObjAppendElement) (Tcl_Interp *interp, Tcl_Obj *listPtr, Tcl_Obj *objPtr); \/*/;"	m	struct:TclStubs	typeref:typename:int (*)(Tcl_Interp * interp,Tcl_Obj * listPtr,Tcl_Obj * objPtr)
tcl_ListObjAppendList	generic/tclDecls.h	/^    int (*tcl_ListObjAppendList) (Tcl_Interp *interp, Tcl_Obj *listPtr, Tcl_Obj *elemListPtr); \//;"	m	struct:TclStubs	typeref:typename:int (*)(Tcl_Interp * interp,Tcl_Obj * listPtr,Tcl_Obj * elemListPtr)
tcl_ListObjGetElements	generic/tclDecls.h	/^    int (*tcl_ListObjGetElements) (Tcl_Interp *interp, Tcl_Obj *listPtr, Tcl_Size *objcPtr, Tcl_/;"	m	struct:TclStubs	typeref:typename:int (*)(Tcl_Interp * interp,Tcl_Obj * listPtr,Tcl_Size * objcPtr,Tcl_Obj *** objvPtr)
tcl_ListObjIndex	generic/tclDecls.h	/^    int (*tcl_ListObjIndex) (Tcl_Interp *interp, Tcl_Obj *listPtr, Tcl_Size index, Tcl_Obj **obj/;"	m	struct:TclStubs	typeref:typename:int (*)(Tcl_Interp * interp,Tcl_Obj * listPtr,Tcl_Size index,Tcl_Obj ** objPtrPtr)
tcl_ListObjLength	generic/tclDecls.h	/^    int (*tcl_ListObjLength) (Tcl_Interp *interp, Tcl_Obj *listPtr, Tcl_Size *lengthPtr); \/* 66/;"	m	struct:TclStubs	typeref:typename:int (*)(Tcl_Interp * interp,Tcl_Obj * listPtr,Tcl_Size * lengthPtr)
tcl_ListObjReplace	generic/tclDecls.h	/^    int (*tcl_ListObjReplace) (Tcl_Interp *interp, Tcl_Obj *listPtr, Tcl_Size first, Tcl_Size co/;"	m	struct:TclStubs	typeref:typename:int (*)(Tcl_Interp * interp,Tcl_Obj * listPtr,Tcl_Size first,Tcl_Size count,Tcl_Size objc,Tcl_Obj * const objv[])
tcl_LoadFile	generic/tclDecls.h	/^    int (*tcl_LoadFile) (Tcl_Interp *interp, Tcl_Obj *pathPtr, const char *const symv[], int fla/;"	m	struct:TclStubs	typeref:typename:int (*)(Tcl_Interp * interp,Tcl_Obj * pathPtr,const char * const symv[],int flags,void * procPtrs,Tcl_LoadHandle * handlePtr)
tcl_LogCommandInfo	generic/tclDecls.h	/^    void (*tcl_LogCommandInfo) (Tcl_Interp *interp, const char *script, const char *command, Tcl/;"	m	struct:TclStubs	typeref:typename:void (*)(Tcl_Interp * interp,const char * script,const char * command,Tcl_Size length)
tcl_MacOSXNotifierAddRunLoopMode	generic/tclPlatDecls.h	/^    void (*tcl_MacOSXNotifierAddRunLoopMode) (const void *runLoopMode); \/* 2 *\/$/;"	m	struct:TclPlatStubs	typeref:typename:void (*)(const void * runLoopMode)
tcl_MacOSXOpenVersionedBundleResources	generic/tclPlatDecls.h	/^    int (*tcl_MacOSXOpenVersionedBundleResources) (Tcl_Interp *interp, const char *bundleName, c/;"	m	struct:TclPlatStubs	typeref:typename:int (*)(Tcl_Interp * interp,const char * bundleName,const char * bundleVersion,Tcl_Size hasResourceFile,Tcl_Size maxPathLen,char * libraryPath)
tcl_MakeFileChannel	generic/tclDecls.h	/^    Tcl_Channel (*tcl_MakeFileChannel) (void *handle, int mode); \/* 189 *\/$/;"	m	struct:TclStubs	typeref:typename:Tcl_Channel (*)(void * handle,int mode)
tcl_MakeTcpClientChannel	generic/tclDecls.h	/^    Tcl_Channel (*tcl_MakeTcpClientChannel) (void *tcpSocket); \/* 191 *\/$/;"	m	struct:TclStubs	typeref:typename:Tcl_Channel (*)(void * tcpSocket)
tcl_Merge	generic/tclDecls.h	/^    char * (*tcl_Merge) (Tcl_Size argc, const char *const *argv); \/* 192 *\/$/;"	m	struct:TclStubs	typeref:typename:char * (*)(Tcl_Size argc,const char * const * argv)
tcl_MethodDeclarerClass	generic/tclOODecls.h	/^    Tcl_Class (*tcl_MethodDeclarerClass) (Tcl_Method method); \/* 6 *\/$/;"	m	struct:TclOOStubs	typeref:typename:Tcl_Class (*)(Tcl_Method method)
tcl_MethodDeclarerObject	generic/tclOODecls.h	/^    Tcl_Object (*tcl_MethodDeclarerObject) (Tcl_Method method); \/* 7 *\/$/;"	m	struct:TclOOStubs	typeref:typename:Tcl_Object (*)(Tcl_Method method)
tcl_MethodIsPrivate	generic/tclOODecls.h	/^    int (*tcl_MethodIsPrivate) (Tcl_Method method); \/* 29 *\/$/;"	m	struct:TclOOStubs	typeref:typename:int (*)(Tcl_Method method)
tcl_MethodIsPublic	generic/tclOODecls.h	/^    int (*tcl_MethodIsPublic) (Tcl_Method method); \/* 8 *\/$/;"	m	struct:TclOOStubs	typeref:typename:int (*)(Tcl_Method method)
tcl_MethodIsType	generic/tclOODecls.h	/^    int (*tcl_MethodIsType) (Tcl_Method method, const Tcl_MethodType *typePtr, void **clientData/;"	m	struct:TclOOStubs	typeref:typename:int (*)(Tcl_Method method,const Tcl_MethodType * typePtr,void ** clientDataPtr)
tcl_MethodIsType2	generic/tclOODecls.h	/^    int (*tcl_MethodIsType2) (Tcl_Method method, const Tcl_MethodType2 *typePtr, void **clientDa/;"	m	struct:TclOOStubs	typeref:typename:int (*)(Tcl_Method method,const Tcl_MethodType2 * typePtr,void ** clientDataPtr)
tcl_MethodName	generic/tclOODecls.h	/^    Tcl_Obj * (*tcl_MethodName) (Tcl_Method method); \/* 10 *\/$/;"	m	struct:TclOOStubs	typeref:typename:Tcl_Obj * (*)(Tcl_Method method)
tcl_MutexFinalize	generic/tclDecls.h	/^    void (*tcl_MutexFinalize) (Tcl_Mutex *mutex); \/* 392 *\/$/;"	m	struct:TclStubs	typeref:typename:void (*)(Tcl_Mutex * mutex)
tcl_MutexLock	generic/tclDecls.h	/^    void (*tcl_MutexLock) (Tcl_Mutex *mutexPtr); \/* 308 *\/$/;"	m	struct:TclStubs	typeref:typename:void (*)(Tcl_Mutex * mutexPtr)
tcl_MutexUnlock	generic/tclDecls.h	/^    void (*tcl_MutexUnlock) (Tcl_Mutex *mutexPtr); \/* 309 *\/$/;"	m	struct:TclStubs	typeref:typename:void (*)(Tcl_Mutex * mutexPtr)
tcl_NRAddCallback	generic/tclDecls.h	/^    void (*tcl_NRAddCallback) (Tcl_Interp *interp, Tcl_NRPostProc *postProcPtr, void *data0, voi/;"	m	struct:TclStubs	typeref:typename:void (*)(Tcl_Interp * interp,Tcl_NRPostProc * postProcPtr,void * data0,void * data1,void * data2,void * data3)
tcl_NRCallObjProc	generic/tclDecls.h	/^    int (*tcl_NRCallObjProc) (Tcl_Interp *interp, Tcl_ObjCmdProc *objProc, void *clientData, Tcl/;"	m	struct:TclStubs	typeref:typename:int (*)(Tcl_Interp * interp,Tcl_ObjCmdProc * objProc,void * clientData,Tcl_Size objc,Tcl_Obj * const objv[])
tcl_NRCallObjProc2	generic/tclDecls.h	/^    int (*tcl_NRCallObjProc2) (Tcl_Interp *interp, Tcl_ObjCmdProc2 *objProc2, void *clientData, /;"	m	struct:TclStubs	typeref:typename:int (*)(Tcl_Interp * interp,Tcl_ObjCmdProc2 * objProc2,void * clientData,Tcl_Size objc,Tcl_Obj * const objv[])
tcl_NRCmdSwap	generic/tclDecls.h	/^    int (*tcl_NRCmdSwap) (Tcl_Interp *interp, Tcl_Command cmd, Tcl_Size objc, Tcl_Obj *const obj/;"	m	struct:TclStubs	typeref:typename:int (*)(Tcl_Interp * interp,Tcl_Command cmd,Tcl_Size objc,Tcl_Obj * const objv[],int flags)
tcl_NRCreateCommand	generic/tclDecls.h	/^    Tcl_Command (*tcl_NRCreateCommand) (Tcl_Interp *interp, const char *cmdName, Tcl_ObjCmdProc /;"	m	struct:TclStubs	typeref:typename:Tcl_Command (*)(Tcl_Interp * interp,const char * cmdName,Tcl_ObjCmdProc * proc,Tcl_ObjCmdProc * nreProc,void * clientData,Tcl_CmdDeleteProc * deleteProc)
tcl_NRCreateCommand2	generic/tclDecls.h	/^    Tcl_Command (*tcl_NRCreateCommand2) (Tcl_Interp *interp, const char *cmdName, Tcl_ObjCmdProc/;"	m	struct:TclStubs	typeref:typename:Tcl_Command (*)(Tcl_Interp * interp,const char * cmdName,Tcl_ObjCmdProc2 * proc,Tcl_ObjCmdProc2 * nreProc2,void * clientData,Tcl_CmdDeleteProc * deleteProc)
tcl_NREvalObj	generic/tclDecls.h	/^    int (*tcl_NREvalObj) (Tcl_Interp *interp, Tcl_Obj *objPtr, int flags); \/* 584 *\/$/;"	m	struct:TclStubs	typeref:typename:int (*)(Tcl_Interp * interp,Tcl_Obj * objPtr,int flags)
tcl_NREvalObjv	generic/tclDecls.h	/^    int (*tcl_NREvalObjv) (Tcl_Interp *interp, Tcl_Size objc, Tcl_Obj *const objv[], int flags);/;"	m	struct:TclStubs	typeref:typename:int (*)(Tcl_Interp * interp,Tcl_Size objc,Tcl_Obj * const objv[],int flags)
tcl_NRExprObj	generic/tclDecls.h	/^    int (*tcl_NRExprObj) (Tcl_Interp *interp, Tcl_Obj *objPtr, Tcl_Obj *resultPtr); \/* 625 *\/$/;"	m	struct:TclStubs	typeref:typename:int (*)(Tcl_Interp * interp,Tcl_Obj * objPtr,Tcl_Obj * resultPtr)
tcl_NRSubstObj	generic/tclDecls.h	/^    int (*tcl_NRSubstObj) (Tcl_Interp *interp, Tcl_Obj *objPtr, int flags); \/* 626 *\/$/;"	m	struct:TclStubs	typeref:typename:int (*)(Tcl_Interp * interp,Tcl_Obj * objPtr,int flags)
tcl_NewBignumObj	generic/tclDecls.h	/^    Tcl_Obj * (*tcl_NewBignumObj) (void *value); \/* 555 *\/$/;"	m	struct:TclStubs	typeref:typename:Tcl_Obj * (*)(void * value)
tcl_NewByteArrayObj	generic/tclDecls.h	/^    Tcl_Obj * (*tcl_NewByteArrayObj) (const unsigned char *bytes, Tcl_Size numBytes); \/* 50 *\/$/;"	m	struct:TclStubs	typeref:typename:Tcl_Obj * (*)(const unsigned char * bytes,Tcl_Size numBytes)
tcl_NewDictObj	generic/tclDecls.h	/^    Tcl_Obj * (*tcl_NewDictObj) (void); \/* 503 *\/$/;"	m	struct:TclStubs	typeref:typename:Tcl_Obj * (*)(void)
tcl_NewDoubleObj	generic/tclDecls.h	/^    Tcl_Obj * (*tcl_NewDoubleObj) (double doubleValue); \/* 51 *\/$/;"	m	struct:TclStubs	typeref:typename:Tcl_Obj * (*)(double doubleValue)
tcl_NewInstanceMethod	generic/tclOODecls.h	/^    Tcl_Method (*tcl_NewInstanceMethod) (Tcl_Interp *interp, Tcl_Object object, Tcl_Obj *nameObj/;"	m	struct:TclOOStubs	typeref:typename:Tcl_Method (*)(Tcl_Interp * interp,Tcl_Object object,Tcl_Obj * nameObj,int flags,const Tcl_MethodType * typePtr,void * clientData)
tcl_NewInstanceMethod2	generic/tclOODecls.h	/^    Tcl_Method (*tcl_NewInstanceMethod2) (Tcl_Interp *interp, Tcl_Object object, Tcl_Obj *nameOb/;"	m	struct:TclOOStubs	typeref:typename:Tcl_Method (*)(Tcl_Interp * interp,Tcl_Object object,Tcl_Obj * nameObj,int flags,const Tcl_MethodType2 * typePtr,void * clientData)
tcl_NewListObj	generic/tclDecls.h	/^    Tcl_Obj * (*tcl_NewListObj) (Tcl_Size objc, Tcl_Obj *const objv[]); \/* 53 *\/$/;"	m	struct:TclStubs	typeref:typename:Tcl_Obj * (*)(Tcl_Size objc,Tcl_Obj * const objv[])
tcl_NewMethod	generic/tclOODecls.h	/^    Tcl_Method (*tcl_NewMethod) (Tcl_Interp *interp, Tcl_Class cls, Tcl_Obj *nameObj, int flags,/;"	m	struct:TclOOStubs	typeref:typename:Tcl_Method (*)(Tcl_Interp * interp,Tcl_Class cls,Tcl_Obj * nameObj,int flags,const Tcl_MethodType * typePtr,void * clientData)
tcl_NewMethod2	generic/tclOODecls.h	/^    Tcl_Method (*tcl_NewMethod2) (Tcl_Interp *interp, Tcl_Class cls, Tcl_Obj *nameObj, int flags/;"	m	struct:TclOOStubs	typeref:typename:Tcl_Method (*)(Tcl_Interp * interp,Tcl_Class cls,Tcl_Obj * nameObj,int flags,const Tcl_MethodType2 * typePtr,void * clientData)
tcl_NewObj	generic/tclDecls.h	/^    Tcl_Obj * (*tcl_NewObj) (void); \/* 55 *\/$/;"	m	struct:TclStubs	typeref:typename:Tcl_Obj * (*)(void)
tcl_NewObjInterface	generic/tclDecls.h	/^    Tcl_ObjInterface * (*tcl_NewObjInterface) (void); \/* 691 *\/$/;"	m	struct:TclStubs	typeref:typename:Tcl_ObjInterface * (*)(void)
tcl_NewObjType	generic/tclDecls.h	/^    Tcl_ObjType * (*tcl_NewObjType) (void); \/* 692 *\/$/;"	m	struct:TclStubs	typeref:typename:Tcl_ObjType * (*)(void)
tcl_NewObjectInstance	generic/tclOODecls.h	/^    Tcl_Object (*tcl_NewObjectInstance) (Tcl_Interp *interp, Tcl_Class cls, const char *nameStr,/;"	m	struct:TclOOStubs	typeref:typename:Tcl_Object (*)(Tcl_Interp * interp,Tcl_Class cls,const char * nameStr,const char * nsNameStr,Tcl_Size objc,Tcl_Obj * const * objv,Tcl_Size skip)
tcl_NewStringObj	generic/tclDecls.h	/^    Tcl_Obj * (*tcl_NewStringObj) (const char *bytes, Tcl_Size length); \/* 56 *\/$/;"	m	struct:TclStubs	typeref:typename:Tcl_Obj * (*)(const char * bytes,Tcl_Size length)
tcl_NewUnicodeObj	generic/tclDecls.h	/^    Tcl_Obj * (*tcl_NewUnicodeObj) (const Tcl_UniChar *unicode, Tcl_Size numChars); \/* 378 *\/$/;"	m	struct:TclStubs	typeref:typename:Tcl_Obj * (*)(const Tcl_UniChar * unicode,Tcl_Size numChars)
tcl_NewWideIntObj	generic/tclDecls.h	/^    Tcl_Obj * (*tcl_NewWideIntObj) (Tcl_WideInt wideValue); \/* 488 *\/$/;"	m	struct:TclStubs	typeref:typename:Tcl_Obj * (*)(Tcl_WideInt wideValue)
tcl_NewWideUIntObj	generic/tclDecls.h	/^    Tcl_Obj * (*tcl_NewWideUIntObj) (Tcl_WideUInt wideValue); \/* 688 *\/$/;"	m	struct:TclStubs	typeref:typename:Tcl_Obj * (*)(Tcl_WideUInt wideValue)
tcl_NextHashEntry	generic/tclDecls.h	/^    Tcl_HashEntry * (*tcl_NextHashEntry) (Tcl_HashSearch *searchPtr); \/* 193 *\/$/;"	m	struct:TclStubs	typeref:typename:Tcl_HashEntry * (*)(Tcl_HashSearch * searchPtr)
tcl_NotifyChannel	generic/tclDecls.h	/^    void (*tcl_NotifyChannel) (Tcl_Channel channel, int mask); \/* 194 *\/$/;"	m	struct:TclStubs	typeref:typename:void (*)(Tcl_Channel channel,int mask)
tcl_NumUtfChars	generic/tclDecls.h	/^    Tcl_Size (*tcl_NumUtfChars) (const char *src, Tcl_Size length); \/* 669 *\/$/;"	m	struct:TclStubs	typeref:typename:Tcl_Size (*)(const char * src,Tcl_Size length)
tcl_ObjGetVar2	generic/tclDecls.h	/^    Tcl_Obj * (*tcl_ObjGetVar2) (Tcl_Interp *interp, Tcl_Obj *part1Ptr, Tcl_Obj *part2Ptr, int f/;"	m	struct:TclStubs	typeref:typename:Tcl_Obj * (*)(Tcl_Interp * interp,Tcl_Obj * part1Ptr,Tcl_Obj * part2Ptr,int flags)
tcl_ObjInterfaceSetFnListAll	generic/tclDecls.h	/^    int (*tcl_ObjInterfaceSetFnListAll) (Tcl_ObjInterface *oiPtr, Tcl_ObjInterfaceListAllProc *f/;"	m	struct:TclStubs	typeref:typename:int (*)(Tcl_ObjInterface * oiPtr,Tcl_ObjInterfaceListAllProc * fnPtr)
tcl_ObjInterfaceSetFnListAppend	generic/tclDecls.h	/^    int (*tcl_ObjInterfaceSetFnListAppend) (Tcl_ObjInterface *oiPtr, Tcl_ObjInterfaceListAppendP/;"	m	struct:TclStubs	typeref:typename:int (*)(Tcl_ObjInterface * oiPtr,Tcl_ObjInterfaceListAppendProc * fnPtr)
tcl_ObjInterfaceSetFnListAppendList	generic/tclDecls.h	/^    int (*tcl_ObjInterfaceSetFnListAppendList) (Tcl_ObjInterface *oiPtr, Tcl_ObjInterfaceListApp/;"	m	struct:TclStubs	typeref:typename:int (*)(Tcl_ObjInterface * oiPtr,Tcl_ObjInterfaceListAppendlistProc fnPtr)
tcl_ObjInterfaceSetFnListContains	generic/tclDecls.h	/^    int (*tcl_ObjInterfaceSetFnListContains) (Tcl_ObjInterface *oiPtr, Tcl_ObjInterfaceListConta/;"	m	struct:TclStubs	typeref:typename:int (*)(Tcl_ObjInterface * oiPtr,Tcl_ObjInterfaceListContainsProc fnPtr)
tcl_ObjInterfaceSetFnListIndex	generic/tclDecls.h	/^    int (*tcl_ObjInterfaceSetFnListIndex) (Tcl_ObjInterface *oiPtr, Tcl_ObjInterfaceListIndexPro/;"	m	struct:TclStubs	typeref:typename:int (*)(Tcl_ObjInterface * oiPtr,Tcl_ObjInterfaceListIndexProc fnPtr)
tcl_ObjInterfaceSetFnListIndexEnd	generic/tclDecls.h	/^    int (*tcl_ObjInterfaceSetFnListIndexEnd) (Tcl_ObjInterface *oiPtr, Tcl_ObjInterfaceListIndex/;"	m	struct:TclStubs	typeref:typename:int (*)(Tcl_ObjInterface * oiPtr,Tcl_ObjInterfaceListIndexEndProc fnPtr)
tcl_ObjInterfaceSetFnListIsSorted	generic/tclDecls.h	/^    int (*tcl_ObjInterfaceSetFnListIsSorted) (Tcl_ObjInterface *oiPtr, Tcl_ObjInterfaceListIsSor/;"	m	struct:TclStubs	typeref:typename:int (*)(Tcl_ObjInterface * oiPtr,Tcl_ObjInterfaceListIsSortedProc fnPtr)
tcl_ObjInterfaceSetFnListLength	generic/tclDecls.h	/^    int (*tcl_ObjInterfaceSetFnListLength) (Tcl_ObjInterface *oiPtr, Tcl_ObjInterfaceListLengthP/;"	m	struct:TclStubs	typeref:typename:int (*)(Tcl_ObjInterface * oiPtr,Tcl_ObjInterfaceListLengthProc fnPtr)
tcl_ObjInterfaceSetFnListRange	generic/tclDecls.h	/^    int (*tcl_ObjInterfaceSetFnListRange) (Tcl_ObjInterface *oiPtr, Tcl_ObjInterfaceListRangePro/;"	m	struct:TclStubs	typeref:typename:int (*)(Tcl_ObjInterface * oiPtr,Tcl_ObjInterfaceListRangeProc fnPtr)
tcl_ObjInterfaceSetFnListRangeEnd	generic/tclDecls.h	/^    int (*tcl_ObjInterfaceSetFnListRangeEnd) (Tcl_ObjInterface *oiPtr, Tcl_ObjInterfaceListRange/;"	m	struct:TclStubs	typeref:typename:int (*)(Tcl_ObjInterface * oiPtr,Tcl_ObjInterfaceListRangeEndProc fnPtr)
tcl_ObjInterfaceSetFnListReplace	generic/tclDecls.h	/^    int (*tcl_ObjInterfaceSetFnListReplace) (Tcl_ObjInterface *oiPtr, Tcl_ObjInterfaceListReplac/;"	m	struct:TclStubs	typeref:typename:int (*)(Tcl_ObjInterface * oiPtr,Tcl_ObjInterfaceListReplaceProc fnPtr)
tcl_ObjInterfaceSetFnListReplaceList	generic/tclDecls.h	/^    int (*tcl_ObjInterfaceSetFnListReplaceList) (Tcl_ObjInterface *oiPtr, Tcl_ObjInterfaceListRe/;"	m	struct:TclStubs	typeref:typename:int (*)(Tcl_ObjInterface * oiPtr,Tcl_ObjInterfaceListReplaceListProc fnPtr)
tcl_ObjInterfaceSetFnListReverse	generic/tclDecls.h	/^    int (*tcl_ObjInterfaceSetFnListReverse) (Tcl_ObjInterface *objInterfacePtr, Tcl_ObjInterface/;"	m	struct:TclStubs	typeref:typename:int (*)(Tcl_ObjInterface * objInterfacePtr,Tcl_ObjInterfaceListReverseProc fnPtr)
tcl_ObjInterfaceSetFnListSet	generic/tclDecls.h	/^    int (*tcl_ObjInterfaceSetFnListSet) (Tcl_ObjInterface *oiPtr, Tcl_ObjInterfaceListSetProc fn/;"	m	struct:TclStubs	typeref:typename:int (*)(Tcl_ObjInterface * oiPtr,Tcl_ObjInterfaceListSetProc fnPtr)
tcl_ObjInterfaceSetFnListSetDeep	generic/tclDecls.h	/^    int (*tcl_ObjInterfaceSetFnListSetDeep) (Tcl_ObjInterface *oiPtr, Tcl_ObjInterfaceListSetDee/;"	m	struct:TclStubs	typeref:typename:int (*)(Tcl_ObjInterface * oiPtr,Tcl_ObjInterfaceListSetDeepProc fnPtr)
tcl_ObjInterfaceSetFnStringIndex	generic/tclDecls.h	/^    int (*tcl_ObjInterfaceSetFnStringIndex) (Tcl_ObjInterface *oiPtr, Tcl_ObjInterfaceStringInde/;"	m	struct:TclStubs	typeref:typename:int (*)(Tcl_ObjInterface * oiPtr,Tcl_ObjInterfaceStringIndexProc fnPtr)
tcl_ObjInterfaceSetFnStringIndexEnd	generic/tclDecls.h	/^    int (*tcl_ObjInterfaceSetFnStringIndexEnd) (Tcl_ObjInterface *oiPtr, Tcl_ObjInterfaceStringI/;"	m	struct:TclStubs	typeref:typename:int (*)(Tcl_ObjInterface * oiPtr,Tcl_ObjInterfaceStringIndexEndProc fnPtr)
tcl_ObjInterfaceSetFnStringIsEmpty	generic/tclDecls.h	/^    int (*tcl_ObjInterfaceSetFnStringIsEmpty) (Tcl_ObjInterface *oiPtr, Tcl_ObjInterfaceStringIs/;"	m	struct:TclStubs	typeref:typename:int (*)(Tcl_ObjInterface * oiPtr,Tcl_ObjInterfaceStringIsEmptyProc fnPtr)
tcl_ObjInterfaceSetFnStringLength	generic/tclDecls.h	/^    int (*tcl_ObjInterfaceSetFnStringLength) (Tcl_ObjInterface *oiPtr, Tcl_ObjInterfaceStringLen/;"	m	struct:TclStubs	typeref:typename:int (*)(Tcl_ObjInterface * oiPtr,Tcl_ObjInterfaceStringLengthProc fnPtr)
tcl_ObjInterfaceSetFnStringRange	generic/tclDecls.h	/^    int (*tcl_ObjInterfaceSetFnStringRange) (Tcl_ObjInterface *oiPtr, Tcl_ObjInterfaceStringRang/;"	m	struct:TclStubs	typeref:typename:int (*)(Tcl_ObjInterface * oiPtr,Tcl_ObjInterfaceStringRangeProc fnPtr)
tcl_ObjInterfaceSetFnStringRangeEnd	generic/tclDecls.h	/^    int (*tcl_ObjInterfaceSetFnStringRangeEnd) (Tcl_ObjInterface *oiPtr, Tcl_ObjInterfaceStringR/;"	m	struct:TclStubs	typeref:typename:int (*)(Tcl_ObjInterface * oiPtr,Tcl_ObjInterfaceStringRangeEndProc fnPtr)
tcl_ObjInterfaceSetVersion	generic/tclDecls.h	/^    int (*tcl_ObjInterfaceSetVersion) (Tcl_ObjInterface *oiPtr, int version); \/* 693 *\/$/;"	m	struct:TclStubs	typeref:typename:int (*)(Tcl_ObjInterface * oiPtr,int version)
tcl_ObjPrintf	generic/tclDecls.h	/^    Tcl_Obj * (*tcl_ObjPrintf) (const char *format, ...) TCL_FORMAT_PRINTF(1, 2); \/* 578 *\/$/;"	m	struct:TclStubs	typeref:typename:Tcl_Obj * (*)(const char * format,...)
tcl_ObjSetVar2	generic/tclDecls.h	/^    Tcl_Obj * (*tcl_ObjSetVar2) (Tcl_Interp *interp, Tcl_Obj *part1Ptr, Tcl_Obj *part2Ptr, Tcl_O/;"	m	struct:TclStubs	typeref:typename:Tcl_Obj * (*)(Tcl_Interp * interp,Tcl_Obj * part1Ptr,Tcl_Obj * part2Ptr,Tcl_Obj * newValuePtr,int flags)
tcl_ObjTypeSetDupInternalRepProc	generic/tclDecls.h	/^    int (*tcl_ObjTypeSetDupInternalRepProc) (Tcl_ObjType *otPtr, Tcl_DupInternalRepProc *dupIntR/;"	m	struct:TclStubs	typeref:typename:int (*)(Tcl_ObjType * otPtr,Tcl_DupInternalRepProc * dupIntRepProc)
tcl_ObjTypeSetFreeInternalRepProc	generic/tclDecls.h	/^    int (*tcl_ObjTypeSetFreeInternalRepProc) (Tcl_ObjType *otPtr, Tcl_FreeInternalRepProc *freeI/;"	m	struct:TclStubs	typeref:typename:int (*)(Tcl_ObjType * otPtr,Tcl_FreeInternalRepProc * freeIntRepProc)
tcl_ObjTypeSetInterface	generic/tclDecls.h	/^    int (*tcl_ObjTypeSetInterface) (Tcl_ObjType *objTypePtr, Tcl_ObjInterface *objInterfacePtr);/;"	m	struct:TclStubs	typeref:typename:int (*)(Tcl_ObjType * objTypePtr,Tcl_ObjInterface * objInterfacePtr)
tcl_ObjTypeSetName	generic/tclDecls.h	/^    int (*tcl_ObjTypeSetName) (Tcl_ObjType *objTypePtr, char *name); \/* 719 *\/$/;"	m	struct:TclStubs	typeref:typename:int (*)(Tcl_ObjType * objTypePtr,char * name)
tcl_ObjTypeSetSetFromAnyProc	generic/tclDecls.h	/^    int (*tcl_ObjTypeSetSetFromAnyProc) (Tcl_ObjType *otPtr, Tcl_SetFromAnyProc *setFromAnyProc)/;"	m	struct:TclStubs	typeref:typename:int (*)(Tcl_ObjType * otPtr,Tcl_SetFromAnyProc * setFromAnyProc)
tcl_ObjTypeSetUpdateStringProc	generic/tclDecls.h	/^    int (*tcl_ObjTypeSetUpdateStringProc) (Tcl_ObjType *otPtr, Tcl_UpdateStringProc *updateStrin/;"	m	struct:TclStubs	typeref:typename:int (*)(Tcl_ObjType * otPtr,Tcl_UpdateStringProc * updateStringProc)
tcl_ObjTypeSetVersion	generic/tclDecls.h	/^    int (*tcl_ObjTypeSetVersion) (Tcl_ObjType *otPtr, int version); \/* 698 *\/$/;"	m	struct:TclStubs	typeref:typename:int (*)(Tcl_ObjType * otPtr,int version)
tcl_ObjectContextInvokeNext	generic/tclOODecls.h	/^    int (*tcl_ObjectContextInvokeNext) (Tcl_Interp *interp, Tcl_ObjectContext context, Tcl_Size /;"	m	struct:TclOOStubs	typeref:typename:int (*)(Tcl_Interp * interp,Tcl_ObjectContext context,Tcl_Size objc,Tcl_Obj * const * objv,Tcl_Size skip)
tcl_ObjectContextIsFiltering	generic/tclOODecls.h	/^    int (*tcl_ObjectContextIsFiltering) (Tcl_ObjectContext context); \/* 15 *\/$/;"	m	struct:TclOOStubs	typeref:typename:int (*)(Tcl_ObjectContext context)
tcl_ObjectContextMethod	generic/tclOODecls.h	/^    Tcl_Method (*tcl_ObjectContextMethod) (Tcl_ObjectContext context); \/* 16 *\/$/;"	m	struct:TclOOStubs	typeref:typename:Tcl_Method (*)(Tcl_ObjectContext context)
tcl_ObjectContextObject	generic/tclOODecls.h	/^    Tcl_Object (*tcl_ObjectContextObject) (Tcl_ObjectContext context); \/* 17 *\/$/;"	m	struct:TclOOStubs	typeref:typename:Tcl_Object (*)(Tcl_ObjectContext context)
tcl_ObjectContextSkippedArgs	generic/tclOODecls.h	/^    Tcl_Size (*tcl_ObjectContextSkippedArgs) (Tcl_ObjectContext context); \/* 18 *\/$/;"	m	struct:TclOOStubs	typeref:typename:Tcl_Size (*)(Tcl_ObjectContext context)
tcl_ObjectDeleted	generic/tclOODecls.h	/^    int (*tcl_ObjectDeleted) (Tcl_Object object); \/* 14 *\/$/;"	m	struct:TclOOStubs	typeref:typename:int (*)(Tcl_Object object)
tcl_ObjectGetMetadata	generic/tclOODecls.h	/^    void * (*tcl_ObjectGetMetadata) (Tcl_Object object, const Tcl_ObjectMetadataType *typePtr); /;"	m	struct:TclOOStubs	typeref:typename:void * (*)(Tcl_Object object,const Tcl_ObjectMetadataType * typePtr)
tcl_ObjectGetMethodNameMapper	generic/tclOODecls.h	/^    Tcl_ObjectMapMethodNameProc * (*tcl_ObjectGetMethodNameMapper) (Tcl_Object object); \/* 24 */;"	m	struct:TclOOStubs	typeref:typename:Tcl_ObjectMapMethodNameProc * (*)(Tcl_Object object)
tcl_ObjectSetMetadata	generic/tclOODecls.h	/^    void (*tcl_ObjectSetMetadata) (Tcl_Object object, const Tcl_ObjectMetadataType *typePtr, voi/;"	m	struct:TclOOStubs	typeref:typename:void (*)(Tcl_Object object,const Tcl_ObjectMetadataType * typePtr,void * metadata)
tcl_ObjectSetMethodNameMapper	generic/tclOODecls.h	/^    void (*tcl_ObjectSetMethodNameMapper) (Tcl_Object object, Tcl_ObjectMapMethodNameProc *mapMe/;"	m	struct:TclOOStubs	typeref:typename:void (*)(Tcl_Object object,Tcl_ObjectMapMethodNameProc * mapMethodNameProc)
tcl_OpenCommandChannel	generic/tclDecls.h	/^    Tcl_Channel (*tcl_OpenCommandChannel) (Tcl_Interp *interp, Tcl_Size argc, const char **argv,/;"	m	struct:TclStubs	typeref:typename:Tcl_Channel (*)(Tcl_Interp * interp,Tcl_Size argc,const char ** argv,int flags)
tcl_OpenFileChannel	generic/tclDecls.h	/^    Tcl_Channel (*tcl_OpenFileChannel) (Tcl_Interp *interp, const char *fileName, const char *mo/;"	m	struct:TclStubs	typeref:typename:Tcl_Channel (*)(Tcl_Interp * interp,const char * fileName,const char * modeString,int permissions)
tcl_OpenTcpClient	generic/tclDecls.h	/^    Tcl_Channel (*tcl_OpenTcpClient) (Tcl_Interp *interp, int port, const char *address, const c/;"	m	struct:TclStubs	typeref:typename:Tcl_Channel (*)(Tcl_Interp * interp,int port,const char * address,const char * myaddr,int myport,int flags)
tcl_OpenTcpServer	generic/tclDecls.h	/^    Tcl_Channel (*tcl_OpenTcpServer) (Tcl_Interp *interp, int port, const char *host, Tcl_TcpAcc/;"	m	struct:TclStubs	typeref:typename:Tcl_Channel (*)(Tcl_Interp * interp,int port,const char * host,Tcl_TcpAcceptProc * acceptProc,void * callbackData)
tcl_OpenTcpServerEx	generic/tclDecls.h	/^    Tcl_Channel (*tcl_OpenTcpServerEx) (Tcl_Interp *interp, const char *service, const char *hos/;"	m	struct:TclStubs	typeref:typename:Tcl_Channel (*)(Tcl_Interp * interp,const char * service,const char * host,unsigned int flags,int backlog,Tcl_TcpAcceptProc * acceptProc,void * callbackData)
tcl_OutputBuffered	generic/tclDecls.h	/^    int (*tcl_OutputBuffered) (Tcl_Channel chan); \/* 479 *\/$/;"	m	struct:TclStubs	typeref:typename:int (*)(Tcl_Channel chan)
tcl_Panic	generic/tclDecls.h	/^    TCL_NORETURN1 void (*tcl_Panic) (const char *format, ...) TCL_FORMAT_PRINTF(1, 2); \/* 2 *\/$/;"	m	struct:TclStubs	typeref:typename:TCL_NORETURN1 void (*)(const char * format,...)
tcl_ParseArgsObjv	generic/tclDecls.h	/^    int (*tcl_ParseArgsObjv) (Tcl_Interp *interp, const Tcl_ArgvInfo *argTable, Tcl_Size *objcPt/;"	m	struct:TclStubs	typeref:typename:int (*)(Tcl_Interp * interp,const Tcl_ArgvInfo * argTable,Tcl_Size * objcPtr,Tcl_Obj * const * objv,Tcl_Obj *** remObjv)
tcl_ParseBraces	generic/tclDecls.h	/^    int (*tcl_ParseBraces) (Tcl_Interp *interp, const char *start, Tcl_Size numBytes, Tcl_Parse /;"	m	struct:TclStubs	typeref:typename:int (*)(Tcl_Interp * interp,const char * start,Tcl_Size numBytes,Tcl_Parse * parsePtr,int append,const char ** termPtr)
tcl_ParseCommand	generic/tclDecls.h	/^    int (*tcl_ParseCommand) (Tcl_Interp *interp, const char *start, Tcl_Size numBytes, int neste/;"	m	struct:TclStubs	typeref:typename:int (*)(Tcl_Interp * interp,const char * start,Tcl_Size numBytes,int nested,Tcl_Parse * parsePtr)
tcl_ParseExpr	generic/tclDecls.h	/^    int (*tcl_ParseExpr) (Tcl_Interp *interp, const char *start, Tcl_Size numBytes, Tcl_Parse *p/;"	m	struct:TclStubs	typeref:typename:int (*)(Tcl_Interp * interp,const char * start,Tcl_Size numBytes,Tcl_Parse * parsePtr)
tcl_ParseQuotedString	generic/tclDecls.h	/^    int (*tcl_ParseQuotedString) (Tcl_Interp *interp, const char *start, Tcl_Size numBytes, Tcl_/;"	m	struct:TclStubs	typeref:typename:int (*)(Tcl_Interp * interp,const char * start,Tcl_Size numBytes,Tcl_Parse * parsePtr,int append,const char ** termPtr)
tcl_ParseVar	generic/tclDecls.h	/^    const char * (*tcl_ParseVar) (Tcl_Interp *interp, const char *start, const char **termPtr); /;"	m	struct:TclStubs	typeref:typename:const char * (*)(Tcl_Interp * interp,const char * start,const char ** termPtr)
tcl_ParseVarName	generic/tclDecls.h	/^    int (*tcl_ParseVarName) (Tcl_Interp *interp, const char *start, Tcl_Size numBytes, Tcl_Parse/;"	m	struct:TclStubs	typeref:typename:int (*)(Tcl_Interp * interp,const char * start,Tcl_Size numBytes,Tcl_Parse * parsePtr,int append)
tcl_PkgPresentEx	generic/tclDecls.h	/^    const char * (*tcl_PkgPresentEx) (Tcl_Interp *interp, const char *name, const char *version,/;"	m	struct:TclStubs	typeref:typename:const char * (*)(Tcl_Interp * interp,const char * name,const char * version,int exact,void * clientDataPtr)
tcl_PkgProvideEx	generic/tclDecls.h	/^    int (*tcl_PkgProvideEx) (Tcl_Interp *interp, const char *name, const char *version, const vo/;"	m	struct:TclStubs	typeref:typename:int (*)(Tcl_Interp * interp,const char * name,const char * version,const void * clientData)
tcl_PkgRequireEx	generic/tclDecls.h	/^    const char * (*tcl_PkgRequireEx) (Tcl_Interp *interp, const char *name, const char *version,/;"	m	struct:TclStubs	typeref:typename:const char * (*)(Tcl_Interp * interp,const char * name,const char * version,int exact,void * clientDataPtr)
tcl_PkgRequireProc	generic/tclDecls.h	/^    int (*tcl_PkgRequireProc) (Tcl_Interp *interp, const char *name, Tcl_Size objc, Tcl_Obj *con/;"	m	struct:TclStubs	typeref:typename:int (*)(Tcl_Interp * interp,const char * name,Tcl_Size objc,Tcl_Obj * const objv[],void * clientDataPtr)
tcl_PopCallFrame	generic/tclIntDecls.h	/^    void (*tcl_PopCallFrame) (Tcl_Interp *interp); \/* 128 *\/$/;"	m	struct:TclIntStubs	typeref:typename:void (*)(Tcl_Interp * interp)
tcl_PosixError	generic/tclDecls.h	/^    const char * (*tcl_PosixError) (Tcl_Interp *interp); \/* 204 *\/$/;"	m	struct:TclStubs	typeref:typename:const char * (*)(Tcl_Interp * interp)
tcl_Preserve	generic/tclDecls.h	/^    void (*tcl_Preserve) (void *data); \/* 201 *\/$/;"	m	struct:TclStubs	typeref:typename:void (*)(void * data)
tcl_PrintDouble	generic/tclDecls.h	/^    void (*tcl_PrintDouble) (Tcl_Interp *interp, double value, char *dst); \/* 202 *\/$/;"	m	struct:TclStubs	typeref:typename:void (*)(Tcl_Interp * interp,double value,char * dst)
tcl_ProcObjCmd	generic/tclDecls.h	/^    int (*tcl_ProcObjCmd) (void *clientData, Tcl_Interp *interp, Tcl_Size objc, Tcl_Obj *const o/;"	m	struct:TclStubs	typeref:typename:int (*)(void * clientData,Tcl_Interp * interp,Tcl_Size objc,Tcl_Obj * const objv[])
tcl_PushCallFrame	generic/tclIntDecls.h	/^    int (*tcl_PushCallFrame) (Tcl_Interp *interp, Tcl_CallFrame *framePtr, Tcl_Namespace *nsPtr,/;"	m	struct:TclIntStubs	typeref:typename:int (*)(Tcl_Interp * interp,Tcl_CallFrame * framePtr,Tcl_Namespace * nsPtr,int isProcCallFrame)
tcl_PutEnv	generic/tclDecls.h	/^    int (*tcl_PutEnv) (const char *assignment); \/* 203 *\/$/;"	m	struct:TclStubs	typeref:typename:int (*)(const char * assignment)
tcl_QueryTimeProc	generic/tclDecls.h	/^    void (*tcl_QueryTimeProc) (Tcl_GetTimeProc **getProc, Tcl_ScaleTimeProc **scaleProc, void **/;"	m	struct:TclStubs	typeref:typename:void (*)(Tcl_GetTimeProc ** getProc,Tcl_ScaleTimeProc ** scaleProc,void ** clientData)
tcl_QueueEvent	generic/tclDecls.h	/^    void (*tcl_QueueEvent) (Tcl_Event *evPtr, int position); \/* 205 *\/$/;"	m	struct:TclStubs	typeref:typename:void (*)(Tcl_Event * evPtr,int position)
tcl_Read	generic/tclDecls.h	/^    Tcl_Size (*tcl_Read) (Tcl_Channel chan, char *bufPtr, Tcl_Size toRead); \/* 206 *\/$/;"	m	struct:TclStubs	typeref:typename:Tcl_Size (*)(Tcl_Channel chan,char * bufPtr,Tcl_Size toRead)
tcl_ReadChars	generic/tclDecls.h	/^    Tcl_Size (*tcl_ReadChars) (Tcl_Channel channel, Tcl_Obj *objPtr, Tcl_Size charsToRead, int a/;"	m	struct:TclStubs	typeref:typename:Tcl_Size (*)(Tcl_Channel channel,Tcl_Obj * objPtr,Tcl_Size charsToRead,int appendFlag)
tcl_ReadRaw	generic/tclDecls.h	/^    Tcl_Size (*tcl_ReadRaw) (Tcl_Channel chan, char *dst, Tcl_Size bytesToRead); \/* 394 *\/$/;"	m	struct:TclStubs	typeref:typename:Tcl_Size (*)(Tcl_Channel chan,char * dst,Tcl_Size bytesToRead)
tcl_Realloc	generic/tclDecls.h	/^    void * (*tcl_Realloc) (void *ptr, TCL_HASH_TYPE size); \/* 5 *\/$/;"	m	struct:TclStubs	typeref:typename:void * (*)(void * ptr,TCL_HASH_TYPE size)
tcl_ReapDetachedProcs	generic/tclDecls.h	/^    void (*tcl_ReapDetachedProcs) (void); \/* 207 *\/$/;"	m	struct:TclStubs	typeref:typename:void (*)(void)
tcl_RecordAndEval	generic/tclDecls.h	/^    int (*tcl_RecordAndEval) (Tcl_Interp *interp, const char *cmd, int flags); \/* 208 *\/$/;"	m	struct:TclStubs	typeref:typename:int (*)(Tcl_Interp * interp,const char * cmd,int flags)
tcl_RecordAndEvalObj	generic/tclDecls.h	/^    int (*tcl_RecordAndEvalObj) (Tcl_Interp *interp, Tcl_Obj *cmdPtr, int flags); \/* 209 *\/$/;"	m	struct:TclStubs	typeref:typename:int (*)(Tcl_Interp * interp,Tcl_Obj * cmdPtr,int flags)
tcl_RegExpCompile	generic/tclDecls.h	/^    Tcl_RegExp (*tcl_RegExpCompile) (Tcl_Interp *interp, const char *pattern); \/* 212 *\/$/;"	m	struct:TclStubs	typeref:typename:Tcl_RegExp (*)(Tcl_Interp * interp,const char * pattern)
tcl_RegExpExec	generic/tclDecls.h	/^    int (*tcl_RegExpExec) (Tcl_Interp *interp, Tcl_RegExp regexp, const char *text, const char */;"	m	struct:TclStubs	typeref:typename:int (*)(Tcl_Interp * interp,Tcl_RegExp regexp,const char * text,const char * start)
tcl_RegExpExecObj	generic/tclDecls.h	/^    int (*tcl_RegExpExecObj) (Tcl_Interp *interp, Tcl_RegExp regexp, Tcl_Obj *textObj, Tcl_Size /;"	m	struct:TclStubs	typeref:typename:int (*)(Tcl_Interp * interp,Tcl_RegExp regexp,Tcl_Obj * textObj,Tcl_Size offset,Tcl_Size nmatches,int flags)
tcl_RegExpGetInfo	generic/tclDecls.h	/^    void (*tcl_RegExpGetInfo) (Tcl_RegExp regexp, Tcl_RegExpInfo *infoPtr); \/* 377 *\/$/;"	m	struct:TclStubs	typeref:typename:void (*)(Tcl_RegExp regexp,Tcl_RegExpInfo * infoPtr)
tcl_RegExpMatch	generic/tclDecls.h	/^    int (*tcl_RegExpMatch) (Tcl_Interp *interp, const char *text, const char *pattern); \/* 214 /;"	m	struct:TclStubs	typeref:typename:int (*)(Tcl_Interp * interp,const char * text,const char * pattern)
tcl_RegExpMatchObj	generic/tclDecls.h	/^    int (*tcl_RegExpMatchObj) (Tcl_Interp *interp, Tcl_Obj *textObj, Tcl_Obj *patternObj); \/* 3/;"	m	struct:TclStubs	typeref:typename:int (*)(Tcl_Interp * interp,Tcl_Obj * textObj,Tcl_Obj * patternObj)
tcl_RegExpRange	generic/tclDecls.h	/^    void (*tcl_RegExpRange) (Tcl_RegExp regexp, Tcl_Size index, const char **startPtr, const cha/;"	m	struct:TclStubs	typeref:typename:void (*)(Tcl_RegExp regexp,Tcl_Size index,const char ** startPtr,const char ** endPtr)
tcl_RegisterChannel	generic/tclDecls.h	/^    void (*tcl_RegisterChannel) (Tcl_Interp *interp, Tcl_Channel chan); \/* 210 *\/$/;"	m	struct:TclStubs	typeref:typename:void (*)(Tcl_Interp * interp,Tcl_Channel chan)
tcl_RegisterConfig	generic/tclDecls.h	/^    void (*tcl_RegisterConfig) (Tcl_Interp *interp, const char *pkgName, const Tcl_Config *confi/;"	m	struct:TclStubs	typeref:typename:void (*)(Tcl_Interp * interp,const char * pkgName,const Tcl_Config * configuration,const char * valEncoding)
tcl_RegisterObjType	generic/tclDecls.h	/^    void (*tcl_RegisterObjType) (const Tcl_ObjType *typePtr); \/* 211 *\/$/;"	m	struct:TclStubs	typeref:typename:void (*)(const Tcl_ObjType * typePtr)
tcl_Release	generic/tclDecls.h	/^    void (*tcl_Release) (void *clientData); \/* 216 *\/$/;"	m	struct:TclStubs	typeref:typename:void (*)(void * clientData)
tcl_RemoveChannelMode	generic/tclDecls.h	/^    int (*tcl_RemoveChannelMode) (Tcl_Interp *interp, Tcl_Channel chan, int mode); \/* 682 *\/$/;"	m	struct:TclStubs	typeref:typename:int (*)(Tcl_Interp * interp,Tcl_Channel chan,int mode)
tcl_RemoveInterpResolvers	generic/tclIntDecls.h	/^    int (*tcl_RemoveInterpResolvers) (Tcl_Interp *interp, const char *name); \/* 130 *\/$/;"	m	struct:TclIntStubs	typeref:typename:int (*)(Tcl_Interp * interp,const char * name)
tcl_ResetResult	generic/tclDecls.h	/^    void (*tcl_ResetResult) (Tcl_Interp *interp); \/* 217 *\/$/;"	m	struct:TclStubs	typeref:typename:void (*)(Tcl_Interp * interp)
tcl_RestoreInterpState	generic/tclDecls.h	/^    int (*tcl_RestoreInterpState) (Tcl_Interp *interp, Tcl_InterpState state); \/* 536 *\/$/;"	m	struct:TclStubs	typeref:typename:int (*)(Tcl_Interp * interp,Tcl_InterpState state)
tcl_SaveInterpState	generic/tclDecls.h	/^    Tcl_InterpState (*tcl_SaveInterpState) (Tcl_Interp *interp, int status); \/* 535 *\/$/;"	m	struct:TclStubs	typeref:typename:Tcl_InterpState (*)(Tcl_Interp * interp,int status)
tcl_ScanCountedElement	generic/tclDecls.h	/^    Tcl_Size (*tcl_ScanCountedElement) (const char *src, Tcl_Size length, int *flagPtr); \/* 219/;"	m	struct:TclStubs	typeref:typename:Tcl_Size (*)(const char * src,Tcl_Size length,int * flagPtr)
tcl_ScanElement	generic/tclDecls.h	/^    Tcl_Size (*tcl_ScanElement) (const char *src, int *flagPtr); \/* 218 *\/$/;"	m	struct:TclStubs	typeref:typename:Tcl_Size (*)(const char * src,int * flagPtr)
tcl_Seek	generic/tclDecls.h	/^    long long (*tcl_Seek) (Tcl_Channel chan, long long offset, int mode); \/* 491 *\/$/;"	m	struct:TclStubs	typeref:typename:long long (*)(Tcl_Channel chan,long long offset,int mode)
tcl_ServiceAll	generic/tclDecls.h	/^    int (*tcl_ServiceAll) (void); \/* 221 *\/$/;"	m	struct:TclStubs	typeref:typename:int (*)(void)
tcl_ServiceEvent	generic/tclDecls.h	/^    int (*tcl_ServiceEvent) (int flags); \/* 222 *\/$/;"	m	struct:TclStubs	typeref:typename:int (*)(int flags)
tcl_ServiceModeHook	generic/tclDecls.h	/^    void (*tcl_ServiceModeHook) (int mode); \/* 344 *\/$/;"	m	struct:TclStubs	typeref:typename:void (*)(int mode)
tcl_SetAssocData	generic/tclDecls.h	/^    void (*tcl_SetAssocData) (Tcl_Interp *interp, const char *name, Tcl_InterpDeleteProc *proc, /;"	m	struct:TclStubs	typeref:typename:void (*)(Tcl_Interp * interp,const char * name,Tcl_InterpDeleteProc * proc,void * clientData)
tcl_SetBignumObj	generic/tclDecls.h	/^    void (*tcl_SetBignumObj) (Tcl_Obj *obj, void *value); \/* 557 *\/$/;"	m	struct:TclStubs	typeref:typename:void (*)(Tcl_Obj * obj,void * value)
tcl_SetByteArrayLength	generic/tclDecls.h	/^    unsigned char * (*tcl_SetByteArrayLength) (Tcl_Obj *objPtr, Tcl_Size numBytes); \/* 58 *\/$/;"	m	struct:TclStubs	typeref:typename:unsigned char * (*)(Tcl_Obj * objPtr,Tcl_Size numBytes)
tcl_SetByteArrayObj	generic/tclDecls.h	/^    void (*tcl_SetByteArrayObj) (Tcl_Obj *objPtr, const unsigned char *bytes, Tcl_Size numBytes)/;"	m	struct:TclStubs	typeref:typename:void (*)(Tcl_Obj * objPtr,const unsigned char * bytes,Tcl_Size numBytes)
tcl_SetChannelBufferSize	generic/tclDecls.h	/^    void (*tcl_SetChannelBufferSize) (Tcl_Channel chan, Tcl_Size sz); \/* 224 *\/$/;"	m	struct:TclStubs	typeref:typename:void (*)(Tcl_Channel chan,Tcl_Size sz)
tcl_SetChannelError	generic/tclDecls.h	/^    void (*tcl_SetChannelError) (Tcl_Channel chan, Tcl_Obj *msg); \/* 564 *\/$/;"	m	struct:TclStubs	typeref:typename:void (*)(Tcl_Channel chan,Tcl_Obj * msg)
tcl_SetChannelErrorInterp	generic/tclDecls.h	/^    void (*tcl_SetChannelErrorInterp) (Tcl_Interp *interp, Tcl_Obj *msg); \/* 562 *\/$/;"	m	struct:TclStubs	typeref:typename:void (*)(Tcl_Interp * interp,Tcl_Obj * msg)
tcl_SetChannelOption	generic/tclDecls.h	/^    int (*tcl_SetChannelOption) (Tcl_Interp *interp, Tcl_Channel chan, const char *optionName, c/;"	m	struct:TclStubs	typeref:typename:int (*)(Tcl_Interp * interp,Tcl_Channel chan,const char * optionName,const char * newValue)
tcl_SetCommandInfo	generic/tclDecls.h	/^    int (*tcl_SetCommandInfo) (Tcl_Interp *interp, const char *cmdName, const Tcl_CmdInfo *infoP/;"	m	struct:TclStubs	typeref:typename:int (*)(Tcl_Interp * interp,const char * cmdName,const Tcl_CmdInfo * infoPtr)
tcl_SetCommandInfoFromToken	generic/tclDecls.h	/^    int (*tcl_SetCommandInfoFromToken) (Tcl_Command token, const Tcl_CmdInfo *infoPtr); \/* 485 /;"	m	struct:TclStubs	typeref:typename:int (*)(Tcl_Command token,const Tcl_CmdInfo * infoPtr)
tcl_SetDoubleObj	generic/tclDecls.h	/^    void (*tcl_SetDoubleObj) (Tcl_Obj *objPtr, double doubleValue); \/* 60 *\/$/;"	m	struct:TclStubs	typeref:typename:void (*)(Tcl_Obj * objPtr,double doubleValue)
tcl_SetEncodingSearchPath	generic/tclDecls.h	/^    int (*tcl_SetEncodingSearchPath) (Tcl_Obj *searchPath); \/* 571 *\/$/;"	m	struct:TclStubs	typeref:typename:int (*)(Tcl_Obj * searchPath)
tcl_SetEnsembleFlags	generic/tclDecls.h	/^    int (*tcl_SetEnsembleFlags) (Tcl_Interp *interp, Tcl_Command token, int flags); \/* 546 *\/$/;"	m	struct:TclStubs	typeref:typename:int (*)(Tcl_Interp * interp,Tcl_Command token,int flags)
tcl_SetEnsembleMappingDict	generic/tclDecls.h	/^    int (*tcl_SetEnsembleMappingDict) (Tcl_Interp *interp, Tcl_Command token, Tcl_Obj *mapDict);/;"	m	struct:TclStubs	typeref:typename:int (*)(Tcl_Interp * interp,Tcl_Command token,Tcl_Obj * mapDict)
tcl_SetEnsembleParameterList	generic/tclDecls.h	/^    int (*tcl_SetEnsembleParameterList) (Tcl_Interp *interp, Tcl_Command token, Tcl_Obj *paramLi/;"	m	struct:TclStubs	typeref:typename:int (*)(Tcl_Interp * interp,Tcl_Command token,Tcl_Obj * paramList)
tcl_SetEnsembleSubcommandList	generic/tclDecls.h	/^    int (*tcl_SetEnsembleSubcommandList) (Tcl_Interp *interp, Tcl_Command token, Tcl_Obj *subcmd/;"	m	struct:TclStubs	typeref:typename:int (*)(Tcl_Interp * interp,Tcl_Command token,Tcl_Obj * subcmdList)
tcl_SetEnsembleUnknownHandler	generic/tclDecls.h	/^    int (*tcl_SetEnsembleUnknownHandler) (Tcl_Interp *interp, Tcl_Command token, Tcl_Obj *unknow/;"	m	struct:TclStubs	typeref:typename:int (*)(Tcl_Interp * interp,Tcl_Command token,Tcl_Obj * unknownList)
tcl_SetErrno	generic/tclDecls.h	/^    void (*tcl_SetErrno) (int err); \/* 227 *\/$/;"	m	struct:TclStubs	typeref:typename:void (*)(int err)
tcl_SetErrorCode	generic/tclDecls.h	/^    void (*tcl_SetErrorCode) (Tcl_Interp *interp, ...); \/* 228 *\/$/;"	m	struct:TclStubs	typeref:typename:void (*)(Tcl_Interp * interp,...)
tcl_SetErrorLine	generic/tclDecls.h	/^    void (*tcl_SetErrorLine) (Tcl_Interp *interp, int lineNum); \/* 606 *\/$/;"	m	struct:TclStubs	typeref:typename:void (*)(Tcl_Interp * interp,int lineNum)
tcl_SetListObj	generic/tclDecls.h	/^    void (*tcl_SetListObj) (Tcl_Obj *objPtr, Tcl_Size objc, Tcl_Obj *const objv[]); \/* 62 *\/$/;"	m	struct:TclStubs	typeref:typename:void (*)(Tcl_Obj * objPtr,Tcl_Size objc,Tcl_Obj * const objv[])
tcl_SetMainLoop	generic/tclDecls.h	/^    void (*tcl_SetMainLoop) (Tcl_MainLoopProc *proc); \/* 284 *\/$/;"	m	struct:TclStubs	typeref:typename:void (*)(Tcl_MainLoopProc * proc)
tcl_SetMaxBlockTime	generic/tclDecls.h	/^    void (*tcl_SetMaxBlockTime) (const Tcl_Time *timePtr); \/* 229 *\/$/;"	m	struct:TclStubs	typeref:typename:void (*)(const Tcl_Time * timePtr)
tcl_SetNamespaceResolvers	generic/tclIntDecls.h	/^    void (*tcl_SetNamespaceResolvers) (Tcl_Namespace *namespacePtr, Tcl_ResolveCmdProc *cmdProc,/;"	m	struct:TclIntStubs	typeref:typename:void (*)(Tcl_Namespace * namespacePtr,Tcl_ResolveCmdProc * cmdProc,Tcl_ResolveVarProc * varProc,Tcl_ResolveCompiledVarProc * compiledVarProc)
tcl_SetNamespaceUnknownHandler	generic/tclDecls.h	/^    int (*tcl_SetNamespaceUnknownHandler) (Tcl_Interp *interp, Tcl_Namespace *nsPtr, Tcl_Obj *ha/;"	m	struct:TclStubs	typeref:typename:int (*)(Tcl_Interp * interp,Tcl_Namespace * nsPtr,Tcl_Obj * handlerPtr)
tcl_SetNotifier	generic/tclDecls.h	/^    void (*tcl_SetNotifier) (const Tcl_NotifierProcs *notifierProcPtr); \/* 386 *\/$/;"	m	struct:TclStubs	typeref:typename:void (*)(const Tcl_NotifierProcs * notifierProcPtr)
tcl_SetObjErrorCode	generic/tclDecls.h	/^    void (*tcl_SetObjErrorCode) (Tcl_Interp *interp, Tcl_Obj *errorObjPtr); \/* 234 *\/$/;"	m	struct:TclStubs	typeref:typename:void (*)(Tcl_Interp * interp,Tcl_Obj * errorObjPtr)
tcl_SetObjLength	generic/tclDecls.h	/^    void (*tcl_SetObjLength) (Tcl_Obj *objPtr, Tcl_Size length); \/* 64 *\/$/;"	m	struct:TclStubs	typeref:typename:void (*)(Tcl_Obj * objPtr,Tcl_Size length)
tcl_SetObjResult	generic/tclDecls.h	/^    void (*tcl_SetObjResult) (Tcl_Interp *interp, Tcl_Obj *resultObjPtr); \/* 235 *\/$/;"	m	struct:TclStubs	typeref:typename:void (*)(Tcl_Interp * interp,Tcl_Obj * resultObjPtr)
tcl_SetRecursionLimit	generic/tclDecls.h	/^    Tcl_Size (*tcl_SetRecursionLimit) (Tcl_Interp *interp, Tcl_Size depth); \/* 231 *\/$/;"	m	struct:TclStubs	typeref:typename:Tcl_Size (*)(Tcl_Interp * interp,Tcl_Size depth)
tcl_SetReturnOptions	generic/tclDecls.h	/^    int (*tcl_SetReturnOptions) (Tcl_Interp *interp, Tcl_Obj *options); \/* 538 *\/$/;"	m	struct:TclStubs	typeref:typename:int (*)(Tcl_Interp * interp,Tcl_Obj * options)
tcl_SetServiceMode	generic/tclDecls.h	/^    int (*tcl_SetServiceMode) (int mode); \/* 233 *\/$/;"	m	struct:TclStubs	typeref:typename:int (*)(int mode)
tcl_SetStartupScript	generic/tclDecls.h	/^    void (*tcl_SetStartupScript) (Tcl_Obj *path, const char *encoding); \/* 622 *\/$/;"	m	struct:TclStubs	typeref:typename:void (*)(Tcl_Obj * path,const char * encoding)
tcl_SetStdChannel	generic/tclDecls.h	/^    void (*tcl_SetStdChannel) (Tcl_Channel channel, int type); \/* 236 *\/$/;"	m	struct:TclStubs	typeref:typename:void (*)(Tcl_Channel channel,int type)
tcl_SetStringObj	generic/tclDecls.h	/^    void (*tcl_SetStringObj) (Tcl_Obj *objPtr, const char *bytes, Tcl_Size length); \/* 65 *\/$/;"	m	struct:TclStubs	typeref:typename:void (*)(Tcl_Obj * objPtr,const char * bytes,Tcl_Size length)
tcl_SetSystemEncoding	generic/tclDecls.h	/^    int (*tcl_SetSystemEncoding) (Tcl_Interp *interp, const char *name); \/* 316 *\/$/;"	m	struct:TclStubs	typeref:typename:int (*)(Tcl_Interp * interp,const char * name)
tcl_SetTimeProc	generic/tclDecls.h	/^    void (*tcl_SetTimeProc) (Tcl_GetTimeProc *getProc, Tcl_ScaleTimeProc *scaleProc, void *clien/;"	m	struct:TclStubs	typeref:typename:void (*)(Tcl_GetTimeProc * getProc,Tcl_ScaleTimeProc * scaleProc,void * clientData)
tcl_SetTimer	generic/tclDecls.h	/^    void (*tcl_SetTimer) (const Tcl_Time *timePtr); \/* 11 *\/$/;"	m	struct:TclStubs	typeref:typename:void (*)(const Tcl_Time * timePtr)
tcl_SetUnicodeObj	generic/tclDecls.h	/^    void (*tcl_SetUnicodeObj) (Tcl_Obj *objPtr, const Tcl_UniChar *unicode, Tcl_Size numChars); /;"	m	struct:TclStubs	typeref:typename:void (*)(Tcl_Obj * objPtr,const Tcl_UniChar * unicode,Tcl_Size numChars)
tcl_SetVar2	generic/tclDecls.h	/^    const char * (*tcl_SetVar2) (Tcl_Interp *interp, const char *part1, const char *part2, const/;"	m	struct:TclStubs	typeref:typename:const char * (*)(Tcl_Interp * interp,const char * part1,const char * part2,const char * newValue,int flags)
tcl_SetVar2Ex	generic/tclDecls.h	/^    Tcl_Obj * (*tcl_SetVar2Ex) (Tcl_Interp *interp, const char *part1, const char *part2, Tcl_Ob/;"	m	struct:TclStubs	typeref:typename:Tcl_Obj * (*)(Tcl_Interp * interp,const char * part1,const char * part2,Tcl_Obj * newValuePtr,int flags)
tcl_SetWideIntObj	generic/tclDecls.h	/^    void (*tcl_SetWideIntObj) (Tcl_Obj *objPtr, Tcl_WideInt wideValue); \/* 489 *\/$/;"	m	struct:TclStubs	typeref:typename:void (*)(Tcl_Obj * objPtr,Tcl_WideInt wideValue)
tcl_SetWideUIntObj	generic/tclDecls.h	/^    void (*tcl_SetWideUIntObj) (Tcl_Obj *objPtr, Tcl_WideUInt uwideValue); \/* 689 *\/$/;"	m	struct:TclStubs	typeref:typename:void (*)(Tcl_Obj * objPtr,Tcl_WideUInt uwideValue)
tcl_SignalId	generic/tclDecls.h	/^    const char * (*tcl_SignalId) (int sig); \/* 239 *\/$/;"	m	struct:TclStubs	typeref:typename:const char * (*)(int sig)
tcl_SignalMsg	generic/tclDecls.h	/^    const char * (*tcl_SignalMsg) (int sig); \/* 240 *\/$/;"	m	struct:TclStubs	typeref:typename:const char * (*)(int sig)
tcl_Sleep	generic/tclDecls.h	/^    void (*tcl_Sleep) (int ms); \/* 12 *\/$/;"	m	struct:TclStubs	typeref:typename:void (*)(int ms)
tcl_SourceRCFile	generic/tclDecls.h	/^    void (*tcl_SourceRCFile) (Tcl_Interp *interp); \/* 241 *\/$/;"	m	struct:TclStubs	typeref:typename:void (*)(Tcl_Interp * interp)
tcl_SpliceChannel	generic/tclDecls.h	/^    void (*tcl_SpliceChannel) (Tcl_Channel channel); \/* 416 *\/$/;"	m	struct:TclStubs	typeref:typename:void (*)(Tcl_Channel channel)
tcl_SplitList	generic/tclDecls.h	/^    int (*tcl_SplitList) (Tcl_Interp *interp, const char *listStr, Tcl_Size *argcPtr, const char/;"	m	struct:TclStubs	typeref:typename:int (*)(Tcl_Interp * interp,const char * listStr,Tcl_Size * argcPtr,const char *** argvPtr)
tcl_SplitPath	generic/tclDecls.h	/^    void (*tcl_SplitPath) (const char *path, Tcl_Size *argcPtr, const char ***argvPtr); \/* 665 /;"	m	struct:TclStubs	typeref:typename:void (*)(const char * path,Tcl_Size * argcPtr,const char *** argvPtr)
tcl_StackChannel	generic/tclDecls.h	/^    Tcl_Channel (*tcl_StackChannel) (Tcl_Interp *interp, const Tcl_ChannelType *typePtr, void *i/;"	m	struct:TclStubs	typeref:typename:Tcl_Channel (*)(Tcl_Interp * interp,const Tcl_ChannelType * typePtr,void * instanceData,int mask,Tcl_Channel prevChan)
tcl_Stat	generic/tclDecls.h	/^    int (*tcl_Stat) (const char *path, struct stat *bufPtr); \/* 368 *\/$/;"	m	struct:TclStubs	typeref:typename:int (*)(const char * path,struct stat * bufPtr)
tcl_StoreInternalRep	generic/tclDecls.h	/^    void (*tcl_StoreInternalRep) (Tcl_Obj *objPtr, const Tcl_ObjType *typePtr, const Tcl_ObjInte/;"	m	struct:TclStubs	typeref:typename:void (*)(Tcl_Obj * objPtr,const Tcl_ObjType * typePtr,const Tcl_ObjInternalRep * irPtr)
tcl_StringCaseMatch	generic/tclDecls.h	/^    int (*tcl_StringCaseMatch) (const char *str, const char *pattern, int nocase); \/* 371 *\/$/;"	m	struct:TclStubs	typeref:typename:int (*)(const char * str,const char * pattern,int nocase)
tcl_SubstObj	generic/tclDecls.h	/^    Tcl_Obj * (*tcl_SubstObj) (Tcl_Interp *interp, Tcl_Obj *objPtr, int flags); \/* 437 *\/$/;"	m	struct:TclStubs	typeref:typename:Tcl_Obj * (*)(Tcl_Interp * interp,Tcl_Obj * objPtr,int flags)
tcl_TakeBignumFromObj	generic/tclDecls.h	/^    int (*tcl_TakeBignumFromObj) (Tcl_Interp *interp, Tcl_Obj *obj, void *value); \/* 559 *\/$/;"	m	struct:TclStubs	typeref:typename:int (*)(Tcl_Interp * interp,Tcl_Obj * obj,void * value)
tcl_Tell	generic/tclDecls.h	/^    long long (*tcl_Tell) (Tcl_Channel chan); \/* 492 *\/$/;"	m	struct:TclStubs	typeref:typename:long long (*)(Tcl_Channel chan)
tcl_ThreadAlert	generic/tclDecls.h	/^    void (*tcl_ThreadAlert) (Tcl_ThreadId threadId); \/* 318 *\/$/;"	m	struct:TclStubs	typeref:typename:void (*)(Tcl_ThreadId threadId)
tcl_ThreadQueueEvent	generic/tclDecls.h	/^    void (*tcl_ThreadQueueEvent) (Tcl_ThreadId threadId, Tcl_Event *evPtr, int position); \/* 31/;"	m	struct:TclStubs	typeref:typename:void (*)(Tcl_ThreadId threadId,Tcl_Event * evPtr,int position)
tcl_TraceCommand	generic/tclDecls.h	/^    int (*tcl_TraceCommand) (Tcl_Interp *interp, const char *varName, int flags, Tcl_CommandTrac/;"	m	struct:TclStubs	typeref:typename:int (*)(Tcl_Interp * interp,const char * varName,int flags,Tcl_CommandTraceProc * proc,void * clientData)
tcl_TraceVar2	generic/tclDecls.h	/^    int (*tcl_TraceVar2) (Tcl_Interp *interp, const char *part1, const char *part2, int flags, T/;"	m	struct:TclStubs	typeref:typename:int (*)(Tcl_Interp * interp,const char * part1,const char * part2,int flags,Tcl_VarTraceProc * proc,void * clientData)
tcl_TransferResult	generic/tclDecls.h	/^    void (*tcl_TransferResult) (Tcl_Interp *sourceInterp, int code, Tcl_Interp *targetInterp); \//;"	m	struct:TclStubs	typeref:typename:void (*)(Tcl_Interp * sourceInterp,int code,Tcl_Interp * targetInterp)
tcl_TranslateFileName	generic/tclDecls.h	/^    char * (*tcl_TranslateFileName) (Tcl_Interp *interp, const char *name, Tcl_DString *bufferPt/;"	m	struct:TclStubs	typeref:typename:char * (*)(Tcl_Interp * interp,const char * name,Tcl_DString * bufferPtr)
tcl_TruncateChannel	generic/tclDecls.h	/^    int (*tcl_TruncateChannel) (Tcl_Channel chan, long long length); \/* 560 *\/$/;"	m	struct:TclStubs	typeref:typename:int (*)(Tcl_Channel chan,long long length)
tcl_Ungets	generic/tclDecls.h	/^    Tcl_Size (*tcl_Ungets) (Tcl_Channel chan, const char *str, Tcl_Size len, int atHead); \/* 25/;"	m	struct:TclStubs	typeref:typename:Tcl_Size (*)(Tcl_Channel chan,const char * str,Tcl_Size len,int atHead)
tcl_UniCharAtIndex	generic/tclDecls.h	/^    int (*tcl_UniCharAtIndex) (const char *src, Tcl_Size index); \/* 320 *\/$/;"	m	struct:TclStubs	typeref:typename:int (*)(const char * src,Tcl_Size index)
tcl_UniCharIsAlnum	generic/tclDecls.h	/^    int (*tcl_UniCharIsAlnum) (int ch); \/* 345 *\/$/;"	m	struct:TclStubs	typeref:typename:int (*)(int ch)
tcl_UniCharIsAlpha	generic/tclDecls.h	/^    int (*tcl_UniCharIsAlpha) (int ch); \/* 346 *\/$/;"	m	struct:TclStubs	typeref:typename:int (*)(int ch)
tcl_UniCharIsControl	generic/tclDecls.h	/^    int (*tcl_UniCharIsControl) (int ch); \/* 372 *\/$/;"	m	struct:TclStubs	typeref:typename:int (*)(int ch)
tcl_UniCharIsDigit	generic/tclDecls.h	/^    int (*tcl_UniCharIsDigit) (int ch); \/* 347 *\/$/;"	m	struct:TclStubs	typeref:typename:int (*)(int ch)
tcl_UniCharIsGraph	generic/tclDecls.h	/^    int (*tcl_UniCharIsGraph) (int ch); \/* 373 *\/$/;"	m	struct:TclStubs	typeref:typename:int (*)(int ch)
tcl_UniCharIsLower	generic/tclDecls.h	/^    int (*tcl_UniCharIsLower) (int ch); \/* 348 *\/$/;"	m	struct:TclStubs	typeref:typename:int (*)(int ch)
tcl_UniCharIsPrint	generic/tclDecls.h	/^    int (*tcl_UniCharIsPrint) (int ch); \/* 374 *\/$/;"	m	struct:TclStubs	typeref:typename:int (*)(int ch)
tcl_UniCharIsPunct	generic/tclDecls.h	/^    int (*tcl_UniCharIsPunct) (int ch); \/* 375 *\/$/;"	m	struct:TclStubs	typeref:typename:int (*)(int ch)
tcl_UniCharIsSpace	generic/tclDecls.h	/^    int (*tcl_UniCharIsSpace) (int ch); \/* 349 *\/$/;"	m	struct:TclStubs	typeref:typename:int (*)(int ch)
tcl_UniCharIsUpper	generic/tclDecls.h	/^    int (*tcl_UniCharIsUpper) (int ch); \/* 350 *\/$/;"	m	struct:TclStubs	typeref:typename:int (*)(int ch)
tcl_UniCharIsWordChar	generic/tclDecls.h	/^    int (*tcl_UniCharIsWordChar) (int ch); \/* 351 *\/$/;"	m	struct:TclStubs	typeref:typename:int (*)(int ch)
tcl_UniCharLen	generic/tclDecls.h	/^    Tcl_Size (*tcl_UniCharLen) (const int *uniStr); \/* 668 *\/$/;"	m	struct:TclStubs	typeref:typename:Tcl_Size (*)(const int * uniStr)
tcl_UniCharToLower	generic/tclDecls.h	/^    int (*tcl_UniCharToLower) (int ch); \/* 321 *\/$/;"	m	struct:TclStubs	typeref:typename:int (*)(int ch)
tcl_UniCharToTitle	generic/tclDecls.h	/^    int (*tcl_UniCharToTitle) (int ch); \/* 322 *\/$/;"	m	struct:TclStubs	typeref:typename:int (*)(int ch)
tcl_UniCharToUpper	generic/tclDecls.h	/^    int (*tcl_UniCharToUpper) (int ch); \/* 323 *\/$/;"	m	struct:TclStubs	typeref:typename:int (*)(int ch)
tcl_UniCharToUtf	generic/tclDecls.h	/^    Tcl_Size (*tcl_UniCharToUtf) (int ch, char *buf); \/* 324 *\/$/;"	m	struct:TclStubs	typeref:typename:Tcl_Size (*)(int ch,char * buf)
tcl_UniCharToUtfDString	generic/tclDecls.h	/^    char * (*tcl_UniCharToUtfDString) (const int *uniStr, Tcl_Size uniLength, Tcl_DString *dsPtr/;"	m	struct:TclStubs	typeref:typename:char * (*)(const int * uniStr,Tcl_Size uniLength,Tcl_DString * dsPtr)
tcl_UnlinkVar	generic/tclDecls.h	/^    void (*tcl_UnlinkVar) (Tcl_Interp *interp, const char *varName); \/* 251 *\/$/;"	m	struct:TclStubs	typeref:typename:void (*)(Tcl_Interp * interp,const char * varName)
tcl_UnregisterChannel	generic/tclDecls.h	/^    int (*tcl_UnregisterChannel) (Tcl_Interp *interp, Tcl_Channel chan); \/* 252 *\/$/;"	m	struct:TclStubs	typeref:typename:int (*)(Tcl_Interp * interp,Tcl_Channel chan)
tcl_UnsetVar2	generic/tclDecls.h	/^    int (*tcl_UnsetVar2) (Tcl_Interp *interp, const char *part1, const char *part2, int flags); /;"	m	struct:TclStubs	typeref:typename:int (*)(Tcl_Interp * interp,const char * part1,const char * part2,int flags)
tcl_UnstackChannel	generic/tclDecls.h	/^    int (*tcl_UnstackChannel) (Tcl_Interp *interp, Tcl_Channel chan); \/* 282 *\/$/;"	m	struct:TclStubs	typeref:typename:int (*)(Tcl_Interp * interp,Tcl_Channel chan)
tcl_UntraceCommand	generic/tclDecls.h	/^    void (*tcl_UntraceCommand) (Tcl_Interp *interp, const char *varName, int flags, Tcl_CommandT/;"	m	struct:TclStubs	typeref:typename:void (*)(Tcl_Interp * interp,const char * varName,int flags,Tcl_CommandTraceProc * proc,void * clientData)
tcl_UntraceVar2	generic/tclDecls.h	/^    void (*tcl_UntraceVar2) (Tcl_Interp *interp, const char *part1, const char *part2, int flags/;"	m	struct:TclStubs	typeref:typename:void (*)(Tcl_Interp * interp,const char * part1,const char * part2,int flags,Tcl_VarTraceProc * proc,void * clientData)
tcl_UpVar2	generic/tclDecls.h	/^    int (*tcl_UpVar2) (Tcl_Interp *interp, const char *frameName, const char *part1, const char /;"	m	struct:TclStubs	typeref:typename:int (*)(Tcl_Interp * interp,const char * frameName,const char * part1,const char * part2,const char * localName,int flags)
tcl_UpdateLinkedVar	generic/tclDecls.h	/^    void (*tcl_UpdateLinkedVar) (Tcl_Interp *interp, const char *varName); \/* 257 *\/$/;"	m	struct:TclStubs	typeref:typename:void (*)(Tcl_Interp * interp,const char * varName)
tcl_UtfAtIndex	generic/tclDecls.h	/^    const char * (*tcl_UtfAtIndex) (const char *src, Tcl_Size index); \/* 671 *\/$/;"	m	struct:TclStubs	typeref:typename:const char * (*)(const char * src,Tcl_Size index)
tcl_UtfBackslash	generic/tclDecls.h	/^    Tcl_Size (*tcl_UtfBackslash) (const char *src, int *readPtr, char *dst); \/* 327 *\/$/;"	m	struct:TclStubs	typeref:typename:Tcl_Size (*)(const char * src,int * readPtr,char * dst)
tcl_UtfCharComplete	generic/tclDecls.h	/^    int (*tcl_UtfCharComplete) (const char *src, Tcl_Size length); \/* 654 *\/$/;"	m	struct:TclStubs	typeref:typename:int (*)(const char * src,Tcl_Size length)
tcl_UtfFindFirst	generic/tclDecls.h	/^    const char * (*tcl_UtfFindFirst) (const char *src, int ch); \/* 328 *\/$/;"	m	struct:TclStubs	typeref:typename:const char * (*)(const char * src,int ch)
tcl_UtfFindLast	generic/tclDecls.h	/^    const char * (*tcl_UtfFindLast) (const char *src, int ch); \/* 329 *\/$/;"	m	struct:TclStubs	typeref:typename:const char * (*)(const char * src,int ch)
tcl_UtfNcasecmp	generic/tclDecls.h	/^    int (*tcl_UtfNcasecmp) (const char *s1, const char *s2, size_t n); \/* 687 *\/$/;"	m	struct:TclStubs	typeref:typename:int (*)(const char * s1,const char * s2,size_t n)
tcl_UtfNcmp	generic/tclDecls.h	/^    int (*tcl_UtfNcmp) (const char *s1, const char *s2, size_t n); \/* 686 *\/$/;"	m	struct:TclStubs	typeref:typename:int (*)(const char * s1,const char * s2,size_t n)
tcl_UtfNext	generic/tclDecls.h	/^    const char * (*tcl_UtfNext) (const char *src); \/* 655 *\/$/;"	m	struct:TclStubs	typeref:typename:const char * (*)(const char * src)
tcl_UtfPrev	generic/tclDecls.h	/^    const char * (*tcl_UtfPrev) (const char *src, const char *start); \/* 656 *\/$/;"	m	struct:TclStubs	typeref:typename:const char * (*)(const char * src,const char * start)
tcl_UtfToChar16	generic/tclDecls.h	/^    Tcl_Size (*tcl_UtfToChar16) (const char *src, unsigned short *chPtr); \/* 336 *\/$/;"	m	struct:TclStubs	typeref:typename:Tcl_Size (*)(const char * src,unsigned short * chPtr)
tcl_UtfToChar16DString	generic/tclDecls.h	/^    unsigned short * (*tcl_UtfToChar16DString) (const char *src, Tcl_Size length, Tcl_DString *d/;"	m	struct:TclStubs	typeref:typename:unsigned short * (*)(const char * src,Tcl_Size length,Tcl_DString * dsPtr)
tcl_UtfToExternal	generic/tclDecls.h	/^    int (*tcl_UtfToExternal) (Tcl_Interp *interp, Tcl_Encoding encoding, const char *src, Tcl_Si/;"	m	struct:TclStubs	typeref:typename:int (*)(Tcl_Interp * interp,Tcl_Encoding encoding,const char * src,Tcl_Size srcLen,int flags,Tcl_EncodingState * statePtr,char * dst,Tcl_Size dstLen,int * srcReadPtr,int * dstWrotePtr,int * dstCharsPtr)
tcl_UtfToExternalDString	generic/tclDecls.h	/^    char * (*tcl_UtfToExternalDString) (Tcl_Encoding encoding, const char *src, Tcl_Size srcLen,/;"	m	struct:TclStubs	typeref:typename:char * (*)(Tcl_Encoding encoding,const char * src,Tcl_Size srcLen,Tcl_DString * dsPtr)
tcl_UtfToExternalDStringEx	generic/tclDecls.h	/^    int (*tcl_UtfToExternalDStringEx) (Tcl_Interp *interp, Tcl_Encoding encoding, const char *sr/;"	m	struct:TclStubs	typeref:typename:int (*)(Tcl_Interp * interp,Tcl_Encoding encoding,const char * src,Tcl_Size srcLen,int flags,Tcl_DString * dsPtr,Tcl_Size * errorLocationPtr)
tcl_UtfToLower	generic/tclDecls.h	/^    Tcl_Size (*tcl_UtfToLower) (char *src); \/* 334 *\/$/;"	m	struct:TclStubs	typeref:typename:Tcl_Size (*)(char * src)
tcl_UtfToTitle	generic/tclDecls.h	/^    Tcl_Size (*tcl_UtfToTitle) (char *src); \/* 335 *\/$/;"	m	struct:TclStubs	typeref:typename:Tcl_Size (*)(char * src)
tcl_UtfToUniChar	generic/tclDecls.h	/^    Tcl_Size (*tcl_UtfToUniChar) (const char *src, int *chPtr); \/* 646 *\/$/;"	m	struct:TclStubs	typeref:typename:Tcl_Size (*)(const char * src,int * chPtr)
tcl_UtfToUniCharDString	generic/tclDecls.h	/^    int * (*tcl_UtfToUniCharDString) (const char *src, Tcl_Size length, Tcl_DString *dsPtr); \/*/;"	m	struct:TclStubs	typeref:typename:int * (*)(const char * src,Tcl_Size length,Tcl_DString * dsPtr)
tcl_UtfToUpper	generic/tclDecls.h	/^    Tcl_Size (*tcl_UtfToUpper) (char *src); \/* 337 *\/$/;"	m	struct:TclStubs	typeref:typename:Tcl_Size (*)(char * src)
tcl_ValidateAllMemory	generic/tclDecls.h	/^    void (*tcl_ValidateAllMemory) (const char *file, int line); \/* 266 *\/$/;"	m	struct:TclStubs	typeref:typename:void (*)(const char * file,int line)
tcl_VarEval	generic/tclDecls.h	/^    int (*tcl_VarEval) (Tcl_Interp *interp, ...); \/* 260 *\/$/;"	m	struct:TclStubs	typeref:typename:int (*)(Tcl_Interp * interp,...)
tcl_VarTraceInfo2	generic/tclDecls.h	/^    void * (*tcl_VarTraceInfo2) (Tcl_Interp *interp, const char *part1, const char *part2, int f/;"	m	struct:TclStubs	typeref:typename:void * (*)(Tcl_Interp * interp,const char * part1,const char * part2,int flags,Tcl_VarTraceProc * procPtr,void * prevClientData)
tcl_WaitForEvent	generic/tclDecls.h	/^    int (*tcl_WaitForEvent) (const Tcl_Time *timePtr); \/* 13 *\/$/;"	m	struct:TclStubs	typeref:typename:int (*)(const Tcl_Time * timePtr)
tcl_WaitPid	generic/tclDecls.h	/^    Tcl_Pid (*tcl_WaitPid) (Tcl_Pid pid, int *statPtr, int options); \/* 277 *\/$/;"	m	struct:TclStubs	typeref:typename:Tcl_Pid (*)(Tcl_Pid pid,int * statPtr,int options)
tcl_WinConvertError	generic/tclPlatDecls.h	/^    void (*tcl_WinConvertError) (unsigned errCode); \/* 3 *\/$/;"	m	struct:TclPlatStubs	typeref:typename:void (*)(unsigned errCode)
tcl_Write	generic/tclDecls.h	/^    Tcl_Size (*tcl_Write) (Tcl_Channel chan, const char *s, Tcl_Size slen); \/* 263 *\/$/;"	m	struct:TclStubs	typeref:typename:Tcl_Size (*)(Tcl_Channel chan,const char * s,Tcl_Size slen)
tcl_WriteChars	generic/tclDecls.h	/^    Tcl_Size (*tcl_WriteChars) (Tcl_Channel chan, const char *src, Tcl_Size srcLen); \/* 338 *\/$/;"	m	struct:TclStubs	typeref:typename:Tcl_Size (*)(Tcl_Channel chan,const char * src,Tcl_Size srcLen)
tcl_WriteObj	generic/tclDecls.h	/^    Tcl_Size (*tcl_WriteObj) (Tcl_Channel chan, Tcl_Obj *objPtr); \/* 339 *\/$/;"	m	struct:TclStubs	typeref:typename:Tcl_Size (*)(Tcl_Channel chan,Tcl_Obj * objPtr)
tcl_WriteRaw	generic/tclDecls.h	/^    Tcl_Size (*tcl_WriteRaw) (Tcl_Channel chan, const char *src, Tcl_Size srcLen); \/* 395 *\/$/;"	m	struct:TclStubs	typeref:typename:Tcl_Size (*)(Tcl_Channel chan,const char * src,Tcl_Size srcLen)
tcl_WrongNumArgs	generic/tclDecls.h	/^    void (*tcl_WrongNumArgs) (Tcl_Interp *interp, Tcl_Size objc, Tcl_Obj *const objv[], const ch/;"	m	struct:TclStubs	typeref:typename:void (*)(Tcl_Interp * interp,Tcl_Size objc,Tcl_Obj * const objv[],const char * message)
tcl_ZlibAdler32	generic/tclDecls.h	/^    unsigned int (*tcl_ZlibAdler32) (unsigned int adler, const unsigned char *buf, Tcl_Size len)/;"	m	struct:TclStubs	typeref:typename:unsigned int (*)(unsigned int adler,const unsigned char * buf,Tcl_Size len)
tcl_ZlibCRC32	generic/tclDecls.h	/^    unsigned int (*tcl_ZlibCRC32) (unsigned int crc, const unsigned char *buf, Tcl_Size len); \//;"	m	struct:TclStubs	typeref:typename:unsigned int (*)(unsigned int crc,const unsigned char * buf,Tcl_Size len)
tcl_ZlibDeflate	generic/tclDecls.h	/^    int (*tcl_ZlibDeflate) (Tcl_Interp *interp, int format, Tcl_Obj *data, int level, Tcl_Obj *g/;"	m	struct:TclStubs	typeref:typename:int (*)(Tcl_Interp * interp,int format,Tcl_Obj * data,int level,Tcl_Obj * gzipHeaderDictObj)
tcl_ZlibInflate	generic/tclDecls.h	/^    int (*tcl_ZlibInflate) (Tcl_Interp *interp, int format, Tcl_Obj *data, Tcl_Size buffersize, /;"	m	struct:TclStubs	typeref:typename:int (*)(Tcl_Interp * interp,int format,Tcl_Obj * data,Tcl_Size buffersize,Tcl_Obj * gzipHeaderDictObj)
tcl_ZlibStreamChecksum	generic/tclDecls.h	/^    int (*tcl_ZlibStreamChecksum) (Tcl_ZlibStream zshandle); \/* 617 *\/$/;"	m	struct:TclStubs	typeref:typename:int (*)(Tcl_ZlibStream zshandle)
tcl_ZlibStreamClose	generic/tclDecls.h	/^    int (*tcl_ZlibStreamClose) (Tcl_ZlibStream zshandle); \/* 620 *\/$/;"	m	struct:TclStubs	typeref:typename:int (*)(Tcl_ZlibStream zshandle)
tcl_ZlibStreamEof	generic/tclDecls.h	/^    int (*tcl_ZlibStreamEof) (Tcl_ZlibStream zshandle); \/* 616 *\/$/;"	m	struct:TclStubs	typeref:typename:int (*)(Tcl_ZlibStream zshandle)
tcl_ZlibStreamGet	generic/tclDecls.h	/^    int (*tcl_ZlibStreamGet) (Tcl_ZlibStream zshandle, Tcl_Obj *data, Tcl_Size count); \/* 619 */;"	m	struct:TclStubs	typeref:typename:int (*)(Tcl_ZlibStream zshandle,Tcl_Obj * data,Tcl_Size count)
tcl_ZlibStreamGetCommandName	generic/tclDecls.h	/^    Tcl_Obj * (*tcl_ZlibStreamGetCommandName) (Tcl_ZlibStream zshandle); \/* 615 *\/$/;"	m	struct:TclStubs	typeref:typename:Tcl_Obj * (*)(Tcl_ZlibStream zshandle)
tcl_ZlibStreamInit	generic/tclDecls.h	/^    int (*tcl_ZlibStreamInit) (Tcl_Interp *interp, int mode, int format, int level, Tcl_Obj *dic/;"	m	struct:TclStubs	typeref:typename:int (*)(Tcl_Interp * interp,int mode,int format,int level,Tcl_Obj * dictObj,Tcl_ZlibStream * zshandle)
tcl_ZlibStreamPut	generic/tclDecls.h	/^    int (*tcl_ZlibStreamPut) (Tcl_ZlibStream zshandle, Tcl_Obj *data, int flush); \/* 618 *\/$/;"	m	struct:TclStubs	typeref:typename:int (*)(Tcl_ZlibStream zshandle,Tcl_Obj * data,int flush)
tcl_ZlibStreamReset	generic/tclDecls.h	/^    int (*tcl_ZlibStreamReset) (Tcl_ZlibStream zshandle); \/* 621 *\/$/;"	m	struct:TclStubs	typeref:typename:int (*)(Tcl_ZlibStream zshandle)
tcl_ZlibStreamSetCompressionDictionary	generic/tclDecls.h	/^    void (*tcl_ZlibStreamSetCompressionDictionary) (Tcl_ZlibStream zhandle, Tcl_Obj *compression/;"	m	struct:TclStubs	typeref:typename:void (*)(Tcl_ZlibStream zhandle,Tcl_Obj * compressionDictionaryObj)
tcl_endOfWord	library/word.tcl	/^proc tcl_endOfWord {str start} {$/;"	p
tcl_findLibrary	library/auto.tcl	/^proc tcl_findLibrary {basename version patch initScript enVarName varName} {$/;"	p
tcl_startOfNextWord	library/word.tcl	/^proc tcl_startOfNextWord {str start} {$/;"	p
tcl_startOfPreviousWord	library/word.tcl	/^proc tcl_startOfPreviousWord {str start} {$/;"	p
tcl_wordBreakAfter	library/word.tcl	/^proc tcl_wordBreakAfter {str start} {$/;"	p
tcl_wordBreakBefore	library/word.tcl	/^proc tcl_wordBreakBefore {str start} {$/;"	p
tclpAlloc	generic/tclIntDecls.h	/^    void * (*tclpAlloc) (TCL_HASH_TYPE size); \/* 69 *\/$/;"	m	struct:TclIntStubs	typeref:typename:void * (*)(TCL_HASH_TYPE size)
tclpCloseFile	generic/tclIntPlatDecls.h	/^    int (*tclpCloseFile) (TclFile file); \/* 1 *\/$/;"	m	struct:TclIntPlatStubs	typeref:typename:int (*)(TclFile file)
tclpCreateCommandChannel	generic/tclIntPlatDecls.h	/^    Tcl_Channel (*tclpCreateCommandChannel) (TclFile readFile, TclFile writeFile, TclFile errorF/;"	m	struct:TclIntPlatStubs	typeref:typename:Tcl_Channel (*)(TclFile readFile,TclFile writeFile,TclFile errorFile,size_t numPids,Tcl_Pid * pidPtr)
tclpCreatePipe	generic/tclIntPlatDecls.h	/^    int (*tclpCreatePipe) (TclFile *readPipe, TclFile *writePipe); \/* 3 *\/$/;"	m	struct:TclIntPlatStubs	typeref:typename:int (*)(TclFile * readPipe,TclFile * writePipe)
tclpCreateProcess	generic/tclIntPlatDecls.h	/^    int (*tclpCreateProcess) (Tcl_Interp *interp, size_t argc, const char **argv, TclFile inputF/;"	m	struct:TclIntPlatStubs	typeref:typename:int (*)(Tcl_Interp * interp,size_t argc,const char ** argv,TclFile inputFile,TclFile outputFile,TclFile errorFile,Tcl_Pid * pidPtr)
tclpCreateTempFile	generic/tclIntPlatDecls.h	/^    TclFile (*tclpCreateTempFile) (const char *contents); \/* 9 *\/$/;"	m	struct:TclIntPlatStubs	typeref:typename:TclFile (*)(const char * contents)
tclpCreateTemporaryDirectory	generic/tclIntDecls.h	/^    Tcl_Obj * (*tclpCreateTemporaryDirectory) (Tcl_Obj *dirObj, Tcl_Obj *basenameObj); \/* 219 */;"	m	struct:TclIntStubs	typeref:typename:Tcl_Obj * (*)(Tcl_Obj * dirObj,Tcl_Obj * basenameObj)
tclpFileAttrProcs	generic/tclIOUtil.c	/^MODULE_SCOPE const TclFileAttrProcs	tclpFileAttrProcs[];$/;"	v	typeref:typename:MODULE_SCOPE const TclFileAttrProcs[]
tclpFileAttrProcs	generic/tclInt.h	/^MODULE_SCOPE const TclFileAttrProcs	tclpFileAttrProcs[];$/;"	v	typeref:typename:MODULE_SCOPE const TclFileAttrProcs[]
tclpFileAttrProcs	unix/tclUnixFCmd.c	/^const TclFileAttrProcs tclpFileAttrProcs[] = {$/;"	v	typeref:typename:const TclFileAttrProcs[]
tclpFileAttrProcs	win/tclWinFCmd.c	/^const TclFileAttrProcs tclpFileAttrProcs[] = {$/;"	v	typeref:typename:const TclFileAttrProcs[]
tclpFileAttrStrings	generic/tclIOUtil.c	/^MODULE_SCOPE const char *const		tclpFileAttrStrings[];$/;"	v	typeref:typename:MODULE_SCOPE const char * const[]
tclpFileAttrStrings	generic/tclInt.h	/^MODULE_SCOPE const char *const		tclpFileAttrStrings[];$/;"	v	typeref:typename:MODULE_SCOPE const char * const[]
tclpFileAttrStrings	unix/tclUnixFCmd.c	/^const char *const tclpFileAttrStrings[] = {$/;"	v	typeref:typename:const char * const[]
tclpFileAttrStrings	win/tclWinFCmd.c	/^const char *const tclpFileAttrStrings[] = {$/;"	v	typeref:typename:const char * const[]
tclpFindExecutable	generic/tclIntDecls.h	/^    void (*tclpFindExecutable) (const char *argv0); \/* 212 *\/$/;"	m	struct:TclIntStubs	typeref:typename:void (*)(const char * argv0)
tclpFree	generic/tclIntDecls.h	/^    void (*tclpFree) (void *ptr); \/* 74 *\/$/;"	m	struct:TclIntStubs	typeref:typename:void (*)(void * ptr)
tclpGetClicks	generic/tclIntDecls.h	/^    unsigned long long (*tclpGetClicks) (void); \/* 75 *\/$/;"	m	struct:TclIntStubs	typeref:typename:unsigned long long (*)(void)
tclpGetCwd	generic/tclIntDecls.h	/^    const char * (*tclpGetCwd) (Tcl_Interp *interp, Tcl_DString *cwdPtr); \/* 141 *\/$/;"	m	struct:TclIntStubs	typeref:typename:const char * (*)(Tcl_Interp * interp,Tcl_DString * cwdPtr)
tclpGetDefaultStdChannel	generic/tclIntDecls.h	/^    Tcl_Channel (*tclpGetDefaultStdChannel) (int type); \/* 28 *\/$/;"	m	struct:TclIntStubs	typeref:typename:Tcl_Channel (*)(int type)
tclpGetPid	generic/tclIntPlatDecls.h	/^    Tcl_Size (*tclpGetPid) (Tcl_Pid pid); \/* 8 *\/$/;"	m	struct:TclIntPlatStubs	typeref:typename:Tcl_Size (*)(Tcl_Pid pid)
tclpGetSeconds	generic/tclIntDecls.h	/^    unsigned long long (*tclpGetSeconds) (void); \/* 76 *\/$/;"	m	struct:TclIntStubs	typeref:typename:unsigned long long (*)(void)
tclpGetUserHome	generic/tclIntDecls.h	/^    const char * (*tclpGetUserHome) (const char *name, Tcl_DString *bufferPtr); \/* 42 *\/$/;"	m	struct:TclIntStubs	typeref:typename:const char * (*)(const char * name,Tcl_DString * bufferPtr)
tclpIsAtty	generic/tclIntPlatDecls.h	/^    int (*tclpIsAtty) (int fd); \/* 16 *\/$/;"	m	struct:TclIntPlatStubs	typeref:typename:int (*)(int fd)
tclpMakeFile	generic/tclIntPlatDecls.h	/^    TclFile (*tclpMakeFile) (Tcl_Channel channel, int direction); \/* 6 *\/$/;"	m	struct:TclIntPlatStubs	typeref:typename:TclFile (*)(Tcl_Channel channel,int direction)
tclpObjAccess	generic/tclIntDecls.h	/^    int (*tclpObjAccess) (Tcl_Obj *pathPtr, int mode); \/* 207 *\/$/;"	m	struct:TclIntStubs	typeref:typename:int (*)(Tcl_Obj * pathPtr,int mode)
tclpObjCopyDirectory	generic/tclIntDecls.h	/^    int (*tclpObjCopyDirectory) (Tcl_Obj *srcPathPtr, Tcl_Obj *destPathPtr, Tcl_Obj **errorPtr);/;"	m	struct:TclIntStubs	typeref:typename:int (*)(Tcl_Obj * srcPathPtr,Tcl_Obj * destPathPtr,Tcl_Obj ** errorPtr)
tclpObjCopyFile	generic/tclIntDecls.h	/^    int (*tclpObjCopyFile) (Tcl_Obj *srcPathPtr, Tcl_Obj *destPathPtr); \/* 204 *\/$/;"	m	struct:TclIntStubs	typeref:typename:int (*)(Tcl_Obj * srcPathPtr,Tcl_Obj * destPathPtr)
tclpObjCreateDirectory	generic/tclIntDecls.h	/^    int (*tclpObjCreateDirectory) (Tcl_Obj *pathPtr); \/* 202 *\/$/;"	m	struct:TclIntStubs	typeref:typename:int (*)(Tcl_Obj * pathPtr)
tclpObjDeleteFile	generic/tclIntDecls.h	/^    int (*tclpObjDeleteFile) (Tcl_Obj *pathPtr); \/* 203 *\/$/;"	m	struct:TclIntStubs	typeref:typename:int (*)(Tcl_Obj * pathPtr)
tclpObjRemoveDirectory	generic/tclIntDecls.h	/^    int (*tclpObjRemoveDirectory) (Tcl_Obj *pathPtr, int recursive, Tcl_Obj **errorPtr); \/* 200/;"	m	struct:TclIntStubs	typeref:typename:int (*)(Tcl_Obj * pathPtr,int recursive,Tcl_Obj ** errorPtr)
tclpObjRenameFile	generic/tclIntDecls.h	/^    int (*tclpObjRenameFile) (Tcl_Obj *srcPathPtr, Tcl_Obj *destPathPtr); \/* 205 *\/$/;"	m	struct:TclIntStubs	typeref:typename:int (*)(Tcl_Obj * srcPathPtr,Tcl_Obj * destPathPtr)
tclpObjStat	generic/tclIntDecls.h	/^    int (*tclpObjStat) (Tcl_Obj *pathPtr, Tcl_StatBuf *buf); \/* 206 *\/$/;"	m	struct:TclIntStubs	typeref:typename:int (*)(Tcl_Obj * pathPtr,Tcl_StatBuf * buf)
tclpOpenFile	generic/tclIntPlatDecls.h	/^    TclFile (*tclpOpenFile) (const char *fname, int mode); \/* 7 *\/$/;"	m	struct:TclIntPlatStubs	typeref:typename:TclFile (*)(const char * fname,int mode)
tclpOpenFileChannel	generic/tclIntDecls.h	/^    Tcl_Channel (*tclpOpenFileChannel) (Tcl_Interp *interp, Tcl_Obj *pathPtr, int mode, int perm/;"	m	struct:TclIntStubs	typeref:typename:Tcl_Channel (*)(Tcl_Interp * interp,Tcl_Obj * pathPtr,int mode,int permissions)
tclpRealloc	generic/tclIntDecls.h	/^    void * (*tclpRealloc) (void *ptr, TCL_HASH_TYPE size); \/* 81 *\/$/;"	m	struct:TclIntStubs	typeref:typename:void * (*)(void * ptr,TCL_HASH_TYPE size)
tclpSetInitialEncodings	generic/tclIntDecls.h	/^    void (*tclpSetInitialEncodings) (void); \/* 165 *\/$/;"	m	struct:TclIntStubs	typeref:typename:void (*)(void)
tclpUtfNcmp2	generic/tclIntDecls.h	/^    int (*tclpUtfNcmp2) (const void *s1, const void *s2, size_t n); \/* 169 *\/$/;"	m	struct:TclIntStubs	typeref:typename:int (*)(const void * s1,const void * s2,size_t n)
tclsh	doc/StdChannels.3	/^.SS tclsh$/;"	S	section:Standard Channels""SHELL-SPECIFIC DETAILS
tclsh	doc/tclsh.1	/^.TH tclsh 1 "" Tcl "Tcl Applications"$/;"	t
tclsh	win/tclsh.rc	/^tclsh                      ICON    DISCARDABLE     "tclsh.ico"$/;"	i
tclsh	win/tcltest.rc	/^tclsh                      ICON    DISCARDABLE     "tclsh.ico"$/;"	i
tcltest	library/tcltest/tcltest.tcl	/^namespace eval tcltest {$/;"	n
tcltest	win/Makefile.in	/^tcltest: binaries $(TEST_EXE_FILE) $(TEST_DLL_FILE) $(CAT32) tcltest.cmd$/;"	t
tcltest-real	unix/Makefile.in	/^tcltest-real:$/;"	t
tcltest.cmd	win/Makefile.in	/^tcltest.cmd: Makefile$/;"	t
tcltest.sh	win/Makefile.in	/^tcltest.sh: tcltest.cmd$/;"	t
tclunchained	unix/tcl.spec	/^Name:          tclunchained$/;"	p
tclzipfile	unix/Makefile.in	/^tclzipfile: ${TCL_ZIP_FILE}$/;"	t
tclzipfile	win/Makefile.in	/^tclzipfile: ${TCL_ZIP_FILE}$/;"	t
tcolor	generic/regguts.h	/^#define	tcolor	/;"	d
tcpChannelType	unix/tclUnixSock.c	/^static const Tcl_ChannelType tcpChannelType = {$/;"	v	typeref:typename:const Tcl_ChannelType	file:
tcpChannelType	win/tclWinSock.c	/^static const Tcl_ChannelType tcpChannelType = {$/;"	v	typeref:typename:const Tcl_ChannelType	file:
tcrc	compat/zlib/examples/gzlog.c	/^    ulong tcrc;     \/* crc of total data *\/$/;"	m	struct:log	typeref:typename:ulong	file:
tebc	generic/tclInt.h	/^	} tebc;$/;"	m	union:CmdFrame::__anon1eb6b355020a	typeref:struct:CmdFrame::__anon1eb6b355020a::__anon1eb6b3550408
techar	generic/tclEnv.c	/^#  define techar /;"	d	file:
tell64_file_func	compat/zlib/contrib/minizip/ioapi.h	/^typedef ZPOS64_T (ZCALLBACK *tell64_file_func)    (voidpf opaque, voidpf stream);$/;"	t	typeref:typename:ZPOS64_T (ZCALLBACK *)(voidpf opaque,voidpf stream)
tell_file_func	compat/zlib/contrib/minizip/ioapi.h	/^typedef long     (ZCALLBACK *tell_file_func)      (voidpf opaque, voidpf stream);$/;"	t	typeref:typename:long (ZCALLBACK *)(voidpf opaque,voidpf stream)
tempdir_alternate	tests/tcltests.tcl	/^    proc tempdir_alternate {} {$/;"	p	namespace:::::tcltests
tens	generic/tclStrToD.c	/^static const double tens[] = {$/;"	v	typeref:typename:const double[]	file:
tenviron	generic/tclEnv.c	/^#  define tenviron /;"	d	file:
tenviron2utfdstr	generic/tclEnv.c	/^#  define tenviron2utfdstr(/;"	d	file:
term	generic/tcl.h	/^    const char *term;		\/* Points to character in string that$/;"	m	struct:Tcl_Parse	typeref:typename:const char *
term	unix/tclLoadAix.c	/^    void (*term)(void);		\/* call static destructors *\/$/;"	m	struct:__anonb87ae84e0208	typeref:typename:void (*)(void)	file:
terminate	unix/tclLoadAix.c	/^terminate(void)$/;"	f	typeref:typename:void	file:
test	compat/zlib/Makefile.in	/^test: all teststatic testshared$/;"	t
test	compat/zlib/contrib/blast/Makefile	/^test: blast$/;"	t
test	compat/zlib/contrib/delphi/zlibd32.mak	/^test: example.exe minigzip.exe$/;"	t
test	compat/zlib/contrib/minizip/Makefile	/^test:	miniunz minizip$/;"	t
test	compat/zlib/contrib/pascal/zlibd32.mak	/^test: example.exe minigzip.exe$/;"	t
test	compat/zlib/contrib/puff/Makefile	/^test: puff$/;"	t
test	macosx/GNUmakefile	/^test			: ${test}$/;"	t
test	macosx/GNUmakefile	/^test			:= ${styles:%=test-%}$/;"	m
test	tests-perf/chan.perf.tcl	/^proc test {{reptime 1000}} {$/;"	p	namespace:::::tclTestPerf-Chan
test	tests-perf/clock.perf.tcl	/^proc test {{reptime 1000}} {$/;"	p	namespace:::::tclTestPerf-TclClock
test	tests-perf/file.perf.tcl	/^proc test {{reptime 1000}} {$/;"	p	namespace:::::tclTestPerf-File
test	tests-perf/list.perf.tcl	/^proc test {{reptime 1000}} {$/;"	p	namespace:::::tclTestPerf-List
test	tests-perf/listPerf.tcl	/^    proc test {} {$/;"	p	namespace:::perf::list
test	tests-perf/timer-event.perf.tcl	/^proc test {{reptime 1000}} {$/;"	p
test	unix/Makefile.in	/^test: test-tcl test-packages$/;"	t
test	win/Makefile.in	/^test: test-tcl test-packages$/;"	t
test-${PROJECT}	macosx/GNUmakefile	/^clean-${PROJECT} distclean-${PROJECT} test-${PROJECT}: \\$/;"	t
test-${PROJECT}	macosx/GNUmakefile	/^test-${PROJECT}: %-${PROJECT}: build-${PROJECT}$/;"	t
test-%	macosx/GNUmakefile	/^test-%:			action := test-$/;"	t
test-access	tests-perf/timer-event.perf.tcl	/^proc test-access {{reptime {1000 5000}}} {$/;"	p
test-add	tests-perf/clock.perf.tcl	/^proc test-add {{reptime 1000}} {$/;"	p	namespace:::::tclTestPerf-TclClock
test-convert	tests-perf/clock.perf.tcl	/^proc test-convert {{reptime 1000}} {$/;"	p	namespace:::::tclTestPerf-TclClock
test-ensemble-perf	tests-perf/clock.perf.tcl	/^proc test-ensemble-perf {{reptime 1000}} {$/;"	p	namespace:::::tclTestPerf-TclClock
test-exec	tests-perf/timer-event.perf.tcl	/^proc test-exec {{reptime 1000}} {$/;"	p
test-file-access-regress	tests-perf/file.perf.tcl	/^proc test-file-access-regress {{reptime 1000}} {$/;"	p	namespace:::::tclTestPerf-File
test-format	tests-perf/clock.perf.tcl	/^proc test-format {{reptime 1000}} {$/;"	p	namespace:::::tclTestPerf-TclClock
test-freescan	tests-perf/clock.perf.tcl	/^proc test-freescan {{reptime 1000}} {$/;"	p	namespace:::::tclTestPerf-TclClock
test-long	tests-perf/timer-event.perf.tcl	/^proc test-long {{reptime 1000}} {$/;"	p
test-lsearch-nf-non-opti-fast	tests-perf/list.perf.tcl	/^proc test-lsearch-nf-non-opti-fast {{reptime 1000}} {$/;"	p	namespace:::::tclTestPerf-List
test-lsearch-nf-non-opti-slow	tests-perf/list.perf.tcl	/^proc test-lsearch-nf-non-opti-slow {{reptime 1000}} {$/;"	p	namespace:::::tclTestPerf-List
test-lsearch-nf-regress	tests-perf/list.perf.tcl	/^proc test-lsearch-nf-regress {{reptime 1000}} {$/;"	p	namespace:::::tclTestPerf-List
test-lsearch-regress	tests-perf/list.perf.tcl	/^proc test-lsearch-regress {{reptime 1000}} {$/;"	p	namespace:::::tclTestPerf-List
test-lseq	tests-perf/list.perf.tcl	/^proc test-lseq {{reptime 1000}} {$/;"	p	namespace:::::tclTestPerf-List
test-lseq-expr	tests-perf/list.perf.tcl	/^proc test-lseq-expr {{reptime 1000}} {$/;"	p	namespace:::::tclTestPerf-List
test-nrt-capability	tests-perf/timer-event.perf.tcl	/^proc test-nrt-capability {{reptime 1000}} {$/;"	p
test-other	tests-perf/clock.perf.tcl	/^proc test-other {{reptime 1000}} {$/;"	p	namespace:::::tclTestPerf-TclClock
test-packages	unix/Makefile.in	/^test-packages: ${TCLTEST_EXE} packages$/;"	t
test-packages	win/Makefile.in	/^test-packages: tcltest packages$/;"	t
test-queue	tests-perf/timer-event.perf.tcl	/^proc test-queue {{reptime {1000 10000}}} {$/;"	p	namespace:::::tclTestPerf-Timer-Event
test-read-regress	tests-perf/chan.perf.tcl	/^proc test-read-regress {{reptime {50000 10}}} {$/;"	p	namespace:::::tclTestPerf-Chan
test-scan	tests-perf/clock.perf.tcl	/^proc test-scan {{reptime 1000}} {$/;"	p	namespace:::::tclTestPerf-TclClock
test-tcl	unix/Makefile.in	/^test-tcl: ${TCLTEST_EXE}$/;"	t
test-tcl	win/Makefile.in	/^test-tcl: tcltest$/;"	t
test64	compat/zlib/Makefile.in	/^test64: all64$/;"	t
testISO	tools/makeTestCases.tcl	/^proc testISO { f2 G V u secs } {$/;"	p
testIndexHexTypePtr	generic/tclTestObjInterface.c	/^Tcl_ObjType *testIndexHexTypePtr;$/;"	v	typeref:typename:Tcl_ObjType *
testListIntegerType	generic/tclTestObjInterfaceInteger.c	/^static ObjectType testListIntegerType = {$/;"	v	typeref:typename:ObjectType	file:
testListIntegerTypePtr	generic/tclTestObjInterfaceInteger.c	/^Tcl_ObjType *testListIntegerTypePtr = (Tcl_ObjType *)&testListIntegerType;$/;"	v	typeref:typename:Tcl_ObjType *
testPipes	unix/tclUnixTest.c	/^static Pipe testPipes[MAX_PIPES];$/;"	v	typeref:typename:Pipe[]	file:
testReportingFilesystem	generic/tclTest.c	/^static const Tcl_Filesystem testReportingFilesystem = {$/;"	v	typeref:typename:const Tcl_Filesystem	file:
test_and_set	compat/zlib/crc32.c	/^local int test_and_set(int volatile *flag) {$/;"	f	typeref:typename:local int
test_compress	compat/zlib/contrib/pascal/example.pas	/^procedure test_compress(compr: Pointer; comprLen: LongInt;$/;"	p
test_compress	compat/zlib/test/example.c	/^static void test_compress(Byte *compr, uLong comprLen, Byte *uncompr,$/;"	f	typeref:typename:void	file:
test_deflate	compat/zlib/contrib/pascal/example.pas	/^procedure test_deflate(compr: Pointer; comprLen: LongInt);$/;"	p
test_deflate	compat/zlib/test/example.c	/^static void test_deflate(Byte *compr, uLong comprLen) {$/;"	f	typeref:typename:void	file:
test_dict_deflate	compat/zlib/contrib/pascal/example.pas	/^procedure test_dict_deflate(compr: Pointer; comprLen: LongInt);$/;"	p
test_dict_deflate	compat/zlib/test/example.c	/^static void test_dict_deflate(Byte *compr, uLong comprLen) {$/;"	f	typeref:typename:void	file:
test_dict_inflate	compat/zlib/contrib/pascal/example.pas	/^procedure test_dict_inflate(compr: Pointer; comprLen: LongInt;$/;"	p
test_dict_inflate	compat/zlib/test/example.c	/^static void test_dict_inflate(Byte *compr, uLong comprLen, Byte *uncompr,$/;"	f	typeref:typename:void	file:
test_flush	compat/zlib/contrib/pascal/example.pas	/^procedure test_flush(compr: Pointer; var comprLen : LongInt);$/;"	p
test_flush	compat/zlib/test/example.c	/^static void test_flush(Byte *compr, uLong *comprLen) {$/;"	f	typeref:typename:void	file:
test_gzio	compat/zlib/contrib/pascal/example.pas	/^procedure test_gzio(const fname: PChar; (* compressed file name *)$/;"	p
test_gzio	compat/zlib/test/example.c	/^static void test_gzio(const char *fname, Byte *uncompr, uLong uncomprLen) {$/;"	f	typeref:typename:void	file:
test_inflate	compat/zlib/contrib/pascal/example.pas	/^procedure test_inflate(compr: Pointer; comprLen : LongInt;$/;"	p
test_inflate	compat/zlib/test/example.c	/^static void test_inflate(Byte *compr, uLong comprLen, Byte *uncompr,$/;"	f	typeref:typename:void	file:
test_large_deflate	compat/zlib/contrib/pascal/example.pas	/^procedure test_large_deflate(compr: Pointer; comprLen: LongInt;$/;"	p
test_large_deflate	compat/zlib/test/example.c	/^static void test_large_deflate(Byte *compr, uLong comprLen, Byte *uncompr,$/;"	f	typeref:typename:void	file:
test_large_inflate	compat/zlib/contrib/pascal/example.pas	/^procedure test_large_inflate(compr: Pointer; comprLen: LongInt;$/;"	p
test_large_inflate	compat/zlib/test/example.c	/^static void test_large_inflate(Byte *compr, uLong comprLen, Byte *uncompr,$/;"	f	typeref:typename:void	file:
test_sync	compat/zlib/contrib/pascal/example.pas	/^procedure test_sync(compr: Pointer; comprLen: LongInt;$/;"	p
test_sync	compat/zlib/test/example.c	/^static void test_sync(Byte *compr, uLong comprLen, Byte *uncompr,$/;"	f	typeref:typename:void	file:
testcases11	tools/makeTestCases.tcl	/^proc testcases11 { f2 } {$/;"	p
testcases12	tools/makeTestCases.tcl	/^proc testcases12 { f2 } {$/;"	p
testcases14	tools/makeTestCases.tcl	/^proc testcases14 { f2 } {$/;"	p
testcases17	tools/makeTestCases.tcl	/^proc testcases17 { f2 } {$/;"	p
testcases19	tools/makeTestCases.tcl	/^proc testcases19 { f2 } {$/;"	p
testcases2	tools/makeTestCases.tcl	/^proc testcases2 { f2 } {$/;"	p
testcases22	tools/makeTestCases.tcl	/^proc testcases22 { f2 } {$/;"	p
testcases24	tools/makeTestCases.tcl	/^proc testcases24 { f2 } {$/;"	p
testcases26	tools/makeTestCases.tcl	/^proc testcases26 { f2 } {$/;"	p
testcases29	tools/makeTestCases.tcl	/^proc testcases29 { f2 } {$/;"	p
testcases3	tools/makeTestCases.tcl	/^proc testcases3 { f2 } {$/;"	p
testcases4	tools/makeTestCases.tcl	/^proc testcases4 { f2 } {$/;"	p
testcases5	tools/makeTestCases.tcl	/^proc testcases5 { f2 } {$/;"	p
testcases8	tools/makeTestCases.tcl	/^proc testcases8 { f2 } {$/;"	p
testerror_file_func	compat/zlib/contrib/minizip/ioapi.h	/^typedef int      (ZCALLBACK *testerror_file_func) (voidpf opaque, voidpf stream);$/;"	t	typeref:typename:int (ZCALLBACK *)(voidpf opaque,voidpf stream)
testnumargs	tests/tcltests.tcl	/^    proc testnumargs {cmd {fixed {}} {optional {}} args} {$/;"	p	namespace:::::tcltests
testobjCmdIndex	generic/tclTestObj.c	/^    enum testobjCmdIndex {$/;"	g	function:TestobjCmd	file:
testresults/valgrind/%.result	unix/Makefile.in	/^testresults\/valgrind\/%.result: ${TCL_EXE} ${TCLTEST_EXE}$/;"	t
testresults/valgrind/%.success	unix/Makefile.in	/^testresults\/valgrind\/%.success: testresults\/valgrind\/%.result$/;"	t
testshared	compat/zlib/Makefile.in	/^testshared: shared$/;"	t
teststatic	compat/zlib/Makefile.in	/^teststatic: static$/;"	t
text	compat/zlib/zlib.h	/^    int     text;       \/* true if compressed data believed to be text *\/$/;"	m	struct:gz_header_s	typeref:typename:int
text	generic/tclRegexp.c	/^	const char *text;$/;"	m	struct:TclRegAbout::infoname	typeref:typename:const char *	file:
text	tools/index.tcl	/^proc text string {$/;"	p
theFilesystemEpoch	generic/tclIOUtil.c	/^static size_t theFilesystemEpoch = 1;$/;"	v	typeref:typename:size_t	file:
thisPtr	generic/tclOOInt.h	/^    Object *thisPtr;		\/* Reference to the object associated with$/;"	m	struct:Class	typeref:typename:Object *
thread	generic/tclIORChan.c	/^    Tcl_ThreadId thread;	\/* Thread the 'interp' belongs to. == Handler thread *\/$/;"	m	struct:__anon92d8dd290108	typeref:typename:Tcl_ThreadId	file:
thread	generic/tclIORTrans.c	/^    Tcl_ThreadId thread;	\/* Thread the 'interp' belongs to. *\/$/;"	m	struct:__anon21e740770208	typeref:typename:Tcl_ThreadId	file:
thread	unix/tclUnixThrd.c	/^    pthread_t thread;$/;"	m	struct:PMutex	typeref:typename:pthread_t	file:
thread	win/tclWinNotify.c	/^    DWORD thread;		\/* Identifier for thread associated with this$/;"	m	struct:__anon2be3cfbd0108	typeref:typename:DWORD	file:
threadActionProc	generic/tcl.h	/^    Tcl_DriverThreadActionProc *threadActionProc;$/;"	m	struct:Tcl_ChannelType	typeref:typename:Tcl_DriverThreadActionProc *
threadId	generic/tclInt.h	/^    Tcl_ThreadId threadId;	\/* ID of thread that owns the interpreter. *\/$/;"	m	struct:Interp	typeref:typename:Tcl_ThreadId
threadId	generic/tclNotify.c	/^    Tcl_ThreadId threadId;	\/* Thread that owns this notifier instance. *\/$/;"	m	struct:ThreadSpecificData	typeref:typename:Tcl_ThreadId	file:
threadId	generic/tclThreadTest.c	/^    Tcl_ThreadId threadId;	\/* Tcl ID for this thread *\/$/;"	m	struct:ThreadSpecificData	typeref:typename:Tcl_ThreadId	file:
threadId	win/tclWinConsole.c	/^    Tcl_ThreadId threadId;	\/* Id of owning thread *\/$/;"	m	struct:ConsoleChannelInfo	typeref:typename:Tcl_ThreadId	file:
threadId	win/tclWinPipe.c	/^    Tcl_ThreadId threadId;	\/* Thread to which events should be reported.$/;"	m	struct:PipeInfo	typeref:typename:Tcl_ThreadId	file:
threadId	win/tclWinSerial.c	/^    Tcl_ThreadId threadId;	\/* Thread to which events should be reported.$/;"	m	struct:SerialInfo	typeref:typename:Tcl_ThreadId	file:
threadId	win/tclWinSock.c	/^    Tcl_ThreadId threadId;	\/* Parent thread. *\/$/;"	m	struct:__anon3aeaf8540308	typeref:typename:Tcl_ThreadId	file:
threadList	generic/tclThreadTest.c	/^static ThreadSpecificData *threadList = NULL;$/;"	v	typeref:typename:ThreadSpecificData *	file:
threadMutex	generic/tclThreadJoin.c	/^    Tcl_Mutex threadMutex;	\/* The mutex used to serialize access to this$/;"	m	struct:JoinableThread	typeref:typename:Tcl_Mutex	file:
time	compat/zlib/contrib/untgz/untgz.c	/^  time_t             time;$/;"	m	struct:attr_item	typeref:typename:time_t	file:
time	compat/zlib/zlib.h	/^    uLong   time;       \/* modification time *\/$/;"	m	struct:gz_header_s	typeref:typename:uLong
time	generic/tclGetDate.y	/^time	: tUNUMBER tMERIDIAN {$/;"	l
time	generic/tclGetDateClassic.y	/^time	: tUNUMBER tMERIDIAN {$/;"	l
time	generic/tclInt.h	/^	Tcl_Time time;		\/* Time limit for execution within the$/;"	m	struct:Interp::__anon1eb6b3550808	typeref:typename:Tcl_Time
time	generic/tclTimer.c	/^    Tcl_Time time;		\/* When timer is to fire. *\/$/;"	m	struct:TimerHandler	typeref:typename:Tcl_Time	file:
time	unix/tclSelectNotfy.c	/^    int time;			\/* Event timestamp. *\/$/;"	m	struct:__anon69aa703c0308	typeref:typename:int	file:
timeEvent	generic/tclInt.h	/^	Tcl_TimerToken timeEvent;$/;"	m	struct:Interp::__anon1eb6b3550808	typeref:typename:Tcl_TimerToken
timeGranularity	generic/tclInt.h	/^	int timeGranularity;	\/* Mod factor used to determine how often to$/;"	m	struct:Interp::__anon1eb6b3550808	typeref:typename:int
timeHandlers	generic/tclInt.h	/^	LimitHandler *timeHandlers;$/;"	m	struct:Interp::__anon1eb6b3550808	typeref:typename:LimitHandler *
timeInfo	win/tclWinTime.c	/^static TimeInfo timeInfo = {$/;"	v	typeref:typename:TimeInfo	file:
timeRateOptionsEnum	generic/tclCmdMZ.c	/^    enum timeRateOptionsEnum {$/;"	g	function:Tcl_TimeRateObjCmd	file:
timer	generic/tclIO.h	/^    Tcl_TimerToken timer;	\/* Handle to wakeup timer for this channel. *\/$/;"	m	struct:ChannelState	typeref:typename:Tcl_TimerToken
timer	generic/tclIOGT.c	/^    Tcl_TimerToken timer;	\/* Timer for automatic flushing of information$/;"	m	struct:TransformChannelData	typeref:typename:Tcl_TimerToken	file:
timer	generic/tclIORTrans.c	/^    Tcl_TimerToken timer;$/;"	m	struct:__anon21e740770208	typeref:typename:Tcl_TimerToken	file:
timer	generic/tclZlib.c	/^    Tcl_TimerToken timer;	\/* Timer used for keeping events fresh. *\/$/;"	m	struct:__anon1d0b6d960308	typeref:typename:Tcl_TimerToken	file:
timerActive	win/tclWinNotify.c	/^    int timerActive;		\/* 1 if interval timer is running. *\/$/;"	m	struct:__anon2be3cfbd0108	typeref:typename:int	file:
timerChanPtr	generic/tclIO.h	/^    Channel *timerChanPtr;	\/* Needed in order to decrement the refCount of$/;"	m	struct:ChannelState	typeref:typename:Channel *
timerPending	generic/tclTimer.c	/^    int timerPending;		\/* 1 if a timer event is in the queue. *\/$/;"	m	struct:__anone9e75be60108	typeref:typename:int	file:
timestamp	generic/tclZipfs.c	/^    int timestamp;		\/* Modification time *\/$/;"	m	struct:ZipEntry	typeref:typename:int	file:
timezone	unix/tclUnixPort.h	/^#   define timezone _timezone$/;"	d
timezone	win/tclWinPort.h	/^#	define timezone _timezone$/;"	d
timezoneObj	generic/tclClockClassic.c	/^#define timezoneObj /;"	d	file:
timezoneObj	generic/tclDate.h	/^	Tcl_Obj *timezoneObj;$/;"	m	struct:ClockClientData::__anone8f8f7280108	typeref:typename:Tcl_Obj *
timezoneObj	generic/tclDate.h	/^    Tcl_Obj *timezoneObj;	\/* Default time zone in which the time will be expressed *\/$/;"	m	struct:ClockFmtScnCmdArgs	typeref:typename:Tcl_Obj *
timezoneObj	generic/tclDate.h	/^    Tcl_Obj *timezoneObj;$/;"	m	struct:ClockLastTZOffs	typeref:typename:Tcl_Obj *
tiny	generic/tclStrToD.c	/^static double tiny = 0.0;	\/* The smallest representable double. *\/$/;"	v	typeref:typename:double	file:
tinydir_close	compat/zlib/contrib/minizip/tinydir.h	/^void tinydir_close(tinydir_dir *dir)$/;"	f	typeref:typename:_TINYDIR_FUNC void
tinydir_dir	compat/zlib/contrib/minizip/tinydir.h	/^typedef struct tinydir_dir$/;"	s
tinydir_dir	compat/zlib/contrib/minizip/tinydir.h	/^} tinydir_dir;$/;"	t	typeref:struct:tinydir_dir
tinydir_file	compat/zlib/contrib/minizip/tinydir.h	/^typedef struct tinydir_file$/;"	s
tinydir_file	compat/zlib/contrib/minizip/tinydir.h	/^} tinydir_file;$/;"	t	typeref:struct:tinydir_file
tinydir_file_open	compat/zlib/contrib/minizip/tinydir.h	/^int tinydir_file_open(tinydir_file *file, const _tinydir_char_t *path)$/;"	f	typeref:typename:_TINYDIR_FUNC int
tinydir_next	compat/zlib/contrib/minizip/tinydir.h	/^int tinydir_next(tinydir_dir *dir)$/;"	f	typeref:typename:_TINYDIR_FUNC int
tinydir_open	compat/zlib/contrib/minizip/tinydir.h	/^int tinydir_open(tinydir_dir *dir, const _tinydir_char_t *path)$/;"	f	typeref:typename:_TINYDIR_FUNC int
tinydir_open_sorted	compat/zlib/contrib/minizip/tinydir.h	/^int tinydir_open_sorted(tinydir_dir *dir, const _tinydir_char_t *path)$/;"	f	typeref:typename:_TINYDIR_FUNC int
tinydir_open_subdir_n	compat/zlib/contrib/minizip/tinydir.h	/^int tinydir_open_subdir_n(tinydir_dir *dir, size_t i)$/;"	f	typeref:typename:_TINYDIR_FUNC int
tinydir_readfile	compat/zlib/contrib/minizip/tinydir.h	/^int tinydir_readfile(const tinydir_dir *dir, tinydir_file *file)$/;"	f	typeref:typename:_TINYDIR_FUNC int
tinydir_readfile_n	compat/zlib/contrib/minizip/tinydir.h	/^int tinydir_readfile_n(const tinydir_dir *dir, tinydir_file *file, size_t i)$/;"	f	typeref:typename:_TINYDIR_FUNC int
tk	unix/tcl.m4	/^	AC_ARG_WITH(tk,$/;"	w
tk	win/tcl.m4	/^	AC_ARG_WITH(tk,$/;"	w
tlen	compat/zlib/examples/gzlog.c	/^    ulong tlen;     \/* length (modulo 2^32) of total data *\/$/;"	m	struct:log	typeref:typename:ulong	file:
tlock	unix/tclUnixThrd.c	/^    Tcl_Mutex tlock;$/;"	m	struct:__anon099381c20108	typeref:typename:Tcl_Mutex	file:
tlock	win/tclWinThrd.c	/^    Tcl_Mutex tlock;$/;"	m	struct:__anon3cc991560208	typeref:typename:Tcl_Mutex	file:
tlsKey	win/tclWinThrd.c	/^static DWORD tlsKey;$/;"	v	typeref:typename:DWORD	file:
tmKey	generic/tclClock.c	/^static Tcl_ThreadDataKey tmKey;$/;"	v	typeref:typename:Tcl_ThreadDataKey	file:
tmKey	generic/tclClockClassic.c	/^static Tcl_ThreadDataKey tmKey;$/;"	v	typeref:typename:Tcl_ThreadDataKey	file:
tm_hour	compat/zlib/contrib/minizip/unzip.h	/^    int tm_hour;            \/* hours since midnight - [0,23] *\/$/;"	m	struct:tm_unz_s	typeref:typename:int
tm_hour	compat/zlib/contrib/minizip/zip.h	/^    int tm_hour;            \/* hours since midnight - [0,23] *\/$/;"	m	struct:tm_zip_s	typeref:typename:int
tm_mday	compat/zlib/contrib/minizip/unzip.h	/^    int tm_mday;            \/* day of the month - [1,31] *\/$/;"	m	struct:tm_unz_s	typeref:typename:int
tm_mday	compat/zlib/contrib/minizip/zip.h	/^    int tm_mday;            \/* day of the month - [1,31] *\/$/;"	m	struct:tm_zip_s	typeref:typename:int
tm_min	compat/zlib/contrib/minizip/unzip.h	/^    int tm_min;             \/* minutes after the hour - [0,59] *\/$/;"	m	struct:tm_unz_s	typeref:typename:int
tm_min	compat/zlib/contrib/minizip/zip.h	/^    int tm_min;             \/* minutes after the hour - [0,59] *\/$/;"	m	struct:tm_zip_s	typeref:typename:int
tm_mon	compat/zlib/contrib/minizip/unzip.h	/^    int tm_mon;             \/* months since January - [0,11] *\/$/;"	m	struct:tm_unz_s	typeref:typename:int
tm_mon	compat/zlib/contrib/minizip/zip.h	/^    int tm_mon;             \/* months since January - [0,11] *\/$/;"	m	struct:tm_zip_s	typeref:typename:int
tm_sec	compat/zlib/contrib/minizip/unzip.h	/^    int tm_sec;             \/* seconds after the minute - [0,59] *\/$/;"	m	struct:tm_unz_s	typeref:typename:int
tm_sec	compat/zlib/contrib/minizip/zip.h	/^    int tm_sec;             \/* seconds after the minute - [0,59] *\/$/;"	m	struct:tm_zip_s	typeref:typename:int
tm_unz	compat/zlib/contrib/minizip/unzip.h	/^} tm_unz;$/;"	t	typeref:struct:tm_unz_s
tm_unz_s	compat/zlib/contrib/minizip/unzip.h	/^typedef struct tm_unz_s$/;"	s
tm_year	compat/zlib/contrib/minizip/unzip.h	/^    int tm_year;            \/* years - [1980..2044] *\/$/;"	m	struct:tm_unz_s	typeref:typename:int
tm_year	compat/zlib/contrib/minizip/zip.h	/^    int tm_year;            \/* years - [1980..2044] *\/$/;"	m	struct:tm_zip_s	typeref:typename:int
tm_zip	compat/zlib/contrib/minizip/zip.h	/^} tm_zip;$/;"	t	typeref:struct:tm_zip_s
tm_zip_s	compat/zlib/contrib/minizip/zip.h	/^typedef struct tm_zip_s$/;"	s
tmp	generic/regguts.h	/^    struct state *tmp;		\/* temporary for traversal algorithms *\/$/;"	m	struct:state	typeref:struct:state *
tmu_date	compat/zlib/contrib/minizip/unzip.h	/^    tm_unz tmu_date;$/;"	m	struct:unz_file_info64_s	typeref:typename:tm_unz
tmu_date	compat/zlib/contrib/minizip/unzip.h	/^    tm_unz tmu_date;$/;"	m	struct:unz_file_info_s	typeref:typename:tm_unz
tmz_date	compat/zlib/contrib/minizip/zip.h	/^    tm_zip      tmz_date;       \/* date in understandable format           *\/$/;"	m	struct:__anon7add25d00108	typeref:typename:tm_zip
tnext	generic/tclZipfs.c	/^    struct ZipEntry *tnext;	\/* Next top-level dir in archive *\/$/;"	m	struct:ZipEntry	typeref:struct:ZipEntry *	file:
to	generic/regguts.h	/^    size_t to;			\/* next-state number *\/$/;"	m	struct:carc	typeref:typename:size_t
to	generic/regguts.h	/^    struct state *to;		\/* where it's to *\/$/;"	m	struct:arc	typeref:struct:state *
toRead	generic/tclIO.c	/^    Tcl_WideInt toRead;		\/* Number of bytes to copy, or -1. *\/$/;"	m	struct:CopyState	typeref:typename:Tcl_WideInt	file:
toRead	generic/tclIORChan.c	/^    Tcl_Size toRead;		\/* I: #bytes to read,$/;"	m	struct:ForwardParamInput	typeref:typename:Tcl_Size	file:
toUnicode	generic/tclEncoding.c	/^    unsigned short **toUnicode;	\/* Two dimensional sparse matrix to map$/;"	m	struct:__anondb7a8e8c0208	typeref:typename:unsigned short **	file:
toUtfCmd	generic/tclTest.c	/^    char *toUtfCmd;$/;"	m	struct:__anon0e9396a50208	typeref:typename:char *	file:
toUtfProc	generic/tcl.h	/^    Tcl_EncodingConvertProc *toUtfProc;$/;"	m	struct:Tcl_EncodingType	typeref:typename:Tcl_EncodingConvertProc *
toUtfProc	generic/tclEncoding.c	/^    Tcl_EncodingConvertProc *toUtfProc;$/;"	m	struct:__anondb7a8e8c0108	typeref:typename:Tcl_EncodingConvertProc *	file:
toWrite	generic/tclIORChan.c	/^    Tcl_Size toWrite;		\/* I: #bytes to write,$/;"	m	struct:ForwardParamOutput	typeref:typename:Tcl_Size	file:
toWrite	win/tclWinPipe.c	/^    int toWrite;		\/* Current amount to be written. Access is$/;"	m	struct:PipeInfo	typeref:typename:int	file:
toWrite	win/tclWinSerial.c	/^    int toWrite;		\/* Current amount to be written. Access is$/;"	m	struct:SerialInfo	typeref:typename:int	file:
tokWord	generic/tclDate.h	/^    } tokWord;$/;"	m	struct:ClockFormatToken	typeref:struct:ClockFormatToken::__anone8f8f7280308
tokWord	generic/tclDate.h	/^    } tokWord;$/;"	m	struct:ClockScanToken	typeref:struct:ClockScanToken::__anone8f8f7280208
token	generic/tclEnsemble.c	/^    Command *token;		\/* Reference to the command for which this$/;"	m	struct:__anonb2501df00108	typeref:typename:Command *	file:
token	generic/tclInt.h	/^    Tcl_Command token;		\/* The token for the command that provides$/;"	m	struct:EnsembleConfig	typeref:typename:Tcl_Command
token	generic/tclInterp.c	/^    Tcl_Obj *token;		\/* Token for the alias command in the child$/;"	m	struct:__anon913711770108	typeref:typename:Tcl_Obj *	file:
token	generic/tclTest.c	/^    Tcl_Command token;		\/* Tcl's token for the command. *\/$/;"	m	struct:TestCommandTokenRef	typeref:typename:Tcl_Command	file:
token	generic/tclTimer.c	/^    Tcl_TimerToken token;	\/* Identifies handler so it can be deleted. *\/$/;"	m	struct:TimerHandler	typeref:typename:Tcl_TimerToken	file:
token	generic/tclTimer.c	/^    Tcl_TimerToken token;	\/* Used to cancel the "after" command. NULL$/;"	m	struct:AfterInfo	typeref:typename:Tcl_TimerToken	file:
tokenPtr	generic/tcl.h	/^    Tcl_Token *tokenPtr;	\/* Pointer to first token representing the$/;"	m	struct:Tcl_Parse	typeref:typename:Tcl_Token *
tokensAvailable	generic/tcl.h	/^    Tcl_Size tokensAvailable;	\/* Total number of tokens available at$/;"	m	struct:Tcl_Parse	typeref:typename:Tcl_Size
topChanPtr	generic/tclIO.h	/^    Channel *topChanPtr;	\/* Refers to topmost channel in a stack. Never$/;"	m	struct:ChannelState	typeref:typename:Channel *
topDirName	unix/Makefile.in	/^topDirName:$/;"	t
topEnts	generic/tclZipfs.c	/^    struct ZipEntry *topEnts;	\/* List of top-level dirs in archive *\/$/;"	m	struct:ZipFile	typeref:struct:ZipEntry *	file:
topic	win/tclWinDde.c	/^    ATOM topic;$/;"	m	struct:__anone96dc6f10108	typeref:typename:ATOM	file:
tosPtr	generic/tclInt.h	/^    Tcl_Obj **tosPtr;		\/* Where the stack top is. *\/$/;"	m	struct:ExecStack	typeref:typename:Tcl_Obj **
tostr	generic/tclDate.h	/^    const char *tostr;$/;"	m	struct:ClockFormatTokenMap	typeref:typename:const char *
tot	compat/zlib/examples/enough.c	/^    big_t tot;          \/\/ total number of codes with maximum tables size$/;"	m	struct:__anonea7b679d0208	typeref:typename:big_t	file:
total	compat/zlib/examples/gun.c	/^    unsigned long total;$/;"	m	struct:outd	typeref:typename:unsigned long	file:
total	compat/zlib/inflate.h	/^    unsigned long total;        \/* protected copy of output count *\/$/;"	m	struct:inflate_state	typeref:typename:unsigned long
total	compat/zlib/test/infcover.c	/^    size_t total, highwater;    \/* total allocations, and largest total *\/$/;"	m	struct:mem_zone	typeref:typename:size_t	file:
total	generic/tclIO.c	/^    Tcl_WideInt total;		\/* Total bytes transferred (written). *\/$/;"	m	struct:CopyState	typeref:typename:Tcl_WideInt	file:
totalAssigned	generic/tclThreadAlloc.c	/^    size_t totalAssigned;	\/* Total space assigned to bucket *\/$/;"	m	struct:__anone59fb5e80408	typeref:typename:size_t	file:
totalAssigned	generic/tclThreadAlloc.c	/^    size_t totalAssigned;	\/* Total space assigned to thread *\/$/;"	m	struct:Cache	typeref:typename:size_t	file:
totalByteCodeBytes	generic/tclInt.h	/^    double totalByteCodeBytes;	\/* Total bytes for all ByteCodes. *\/$/;"	m	struct:ByteCodeStats	typeref:typename:double
totalBytes	generic/tclUtf.c	/^static const unsigned char totalBytes[256] = {$/;"	v	typeref:typename:const unsigned char[256]	file:
totalChars	generic/tclIO.c	/^    int totalChars;		\/* The total number of UTF-8 characters$/;"	m	struct:GetsState	typeref:typename:int	file:
totalCompressedData	compat/zlib/contrib/minizip/zip.c	/^    ZPOS64_T totalCompressedData;$/;"	m	struct:__anon7add25cb0108	typeref:typename:ZPOS64_T	file:
totalLitStringBytes	generic/tclInt.h	/^    double totalLitStringBytes;	\/* Total string bytes in all literals. *\/$/;"	m	struct:ByteCodeStats	typeref:typename:double
totalSrcBytes	generic/tclInt.h	/^    double totalSrcBytes;	\/* Total source bytes ever compiled. *\/$/;"	m	struct:ByteCodeStats	typeref:typename:double
totalUncompressedData	compat/zlib/contrib/minizip/zip.c	/^    ZPOS64_T totalUncompressedData;$/;"	m	struct:__anon7add25cb0108	typeref:typename:ZPOS64_T	file:
total_frees	generic/tclCkalloc.c	/^static size_t total_frees = 0;$/;"	v	typeref:typename:size_t	file:
total_in	compat/zlib/contrib/dotzlib/DotZLib/DotZLib.cs	/^        public uint total_in;$/;"	f	struct:DotZLib.ZStream
total_in	compat/zlib/zlib.h	/^    uLong    total_in;  \/* total number of input bytes read so far *\/$/;"	m	struct:z_stream_s	typeref:typename:uLong
total_mallocs	generic/tclCkalloc.c	/^static size_t total_mallocs = 0;$/;"	v	typeref:typename:size_t	file:
total_out	compat/zlib/contrib/dotzlib/DotZLib/DotZLib.cs	/^        public uint total_out;$/;"	f	struct:DotZLib.ZStream
total_out	compat/zlib/zlib.h	/^    uLong    total_out; \/* total number of bytes output so far *\/$/;"	m	struct:z_stream_s	typeref:typename:uLong
total_out_64	compat/zlib/contrib/minizip/unzip.c	/^    ZPOS64_T total_out_64;$/;"	m	struct:__anon3259ecee0108	typeref:typename:ZPOS64_T	file:
tptr	generic/regguts.h	/^#define	tptr	/;"	d
tr_static_init	compat/zlib/trees.c	/^local void tr_static_init(void) {$/;"	f	typeref:typename:local void
trace-shell	unix/Makefile.in	/^trace-shell: ${TCL_EXE}$/;"	t
trace-test	unix/Makefile.in	/^trace-test: ${TCLTEST_EXE}$/;"	t
traceCmdInfo	generic/tclTrace.c	/^    TraceVarInfo traceCmdInfo;$/;"	m	struct:__anonfe0b53740208	typeref:typename:TraceVarInfo	file:
traceInfo	generic/tclTrace.c	/^    VarTrace traceInfo;$/;"	m	struct:__anonfe0b53740208	typeref:typename:VarTrace	file:
traceInitialized	generic/tclCompile.c	/^static int traceInitialized = 0;$/;"	v	typeref:typename:int	file:
traceOptionsEnum	generic/tclTrace.c	/^enum traceOptionsEnum {$/;"	g	file:
traceProc	generic/tclInt.h	/^    Tcl_CommandTraceProc *traceProc;$/;"	m	struct:CommandTrace	typeref:typename:Tcl_CommandTraceProc *
traceProc	generic/tclInt.h	/^    Tcl_VarTraceProc *traceProc;\/* Procedure to call when operations given by$/;"	m	struct:VarTrace	typeref:typename:Tcl_VarTraceProc *
tracePtr	generic/tclInt.h	/^    CommandTrace *tracePtr;	\/* First in list of all traces set for this$/;"	m	struct:Command	typeref:typename:CommandTrace *
tracePtr	generic/tclInt.h	/^    Trace *tracePtr;		\/* List of traces for this interpreter. *\/$/;"	m	struct:Interp	typeref:typename:Trace *
traceSubCmds	generic/tclTrace.c	/^static Tcl_TraceTypeObjCmd *const traceSubCmds[] = {$/;"	v	typeref:typename:Tcl_TraceTypeObjCmd * const[]	file:
traceTypeOptions	generic/tclTrace.c	/^static const char *const traceTypeOptions[] = {$/;"	v	typeref:typename:const char * const[]	file:
traceWrapperDelProc	generic/tclTrace.c	/^traceWrapperDelProc($/;"	f	typeref:typename:void	file:
traceWrapperProc	generic/tclTrace.c	/^traceWrapperProc($/;"	f	typeref:typename:int	file:
trace_on_at_malloc	generic/tclCkalloc.c	/^static size_t trace_on_at_malloc = 0;$/;"	v	typeref:typename:size_t	file:
tracesForbiddingInline	generic/tclInt.h	/^    Tcl_Size tracesForbiddingInline;$/;"	m	struct:Interp	typeref:typename:Tcl_Size
transform	generic/tclIORTrans.c	/^    struct ForwardParamTransform transform;$/;"	m	union:ForwardParam	typeref:struct:ForwardParamTransform	file:
transformChannelType	generic/tclIOGT.c	/^static const Tcl_ChannelType transformChannelType = {$/;"	v	typeref:typename:const Tcl_ChannelType	file:
translatedPathPtr	generic/tclPathObj.c	/^    Tcl_Obj *translatedPathPtr; \/*  If the path has been normalized (flags ==$/;"	m	struct:__anoneca7f3ad0108	typeref:typename:Tcl_Obj *	file:
tree	generic/regcomp.c	/^    struct subre *tree;		\/* subexpression tree *\/$/;"	m	struct:vars	typeref:struct:subre *	file:
tree	generic/regguts.h	/^    struct subre *tree;$/;"	m	struct:guts	typeref:struct:subre *
tree	generic/regguts.h	/^    union tree tree[NBYTS];	\/* tree top, plus fill blocks *\/$/;"	m	struct:colormap	typeref:union:tree[]
tree	generic/regguts.h	/^union tree {$/;"	u
tree_desc	compat/zlib/deflate.h	/^} FAR tree_desc;$/;"	t	typeref:struct:tree_desc_s FAR
tree_desc_s	compat/zlib/deflate.h	/^typedef struct tree_desc_s {$/;"	s
treechain	generic/regcomp.c	/^    struct subre *treechain;	\/* all tree nodes allocated *\/$/;"	m	struct:vars	typeref:struct:subre *	file:
treefree	generic/regcomp.c	/^    struct subre *treefree;	\/* any free tree nodes *\/$/;"	m	struct:vars	typeref:struct:subre *	file:
trees.$(HOST_OBJEXT)	unix/Makefile.in	/^trees.$(HOST_OBJEXT):$/;"	t
trees.$(HOST_OBJEXT)	win/Makefile.in	/^trees.$(HOST_OBJEXT):$/;"	t
trees.lo	compat/zlib/Makefile.in	/^trees.lo: $(SRCDIR)deflate.h $(SRCDIR)zutil.h $(SRCDIR)zlib.h zconf.h $(SRCDIR)trees.h$/;"	t
trees.lo	compat/zlib/Makefile.in	/^trees.lo: $(SRCDIR)trees.c$/;"	t
trees.o	compat/zlib/Makefile.in	/^trees.o: $(SRCDIR)deflate.h $(SRCDIR)zutil.h $(SRCDIR)zlib.h zconf.h $(SRCDIR)trees.h$/;"	t
trees.o	compat/zlib/Makefile.in	/^trees.o: $(SRCDIR)trees.c$/;"	t
trees.obj	compat/zlib/contrib/delphi/zlibd32.mak	/^trees.obj: trees.c zutil.h zlib.h zconf.h deflate.h trees.h$/;"	t
trees.obj	compat/zlib/contrib/pascal/zlibd32.mak	/^trees.obj: trees.c zutil.h zlib.h zconf.h deflate.h trees.h$/;"	t
trek	generic/tclGetDate.y	/^trek	: tSTARDATE INTNUM '.' tUNUMBER {$/;"	l
trek	generic/tclGetDateClassic.y	/^trek	: tSTARDATE tUNUMBER '.' tUNUMBER {$/;"	l
triggerEventFd	unix/tclEpollNotfy.c	/^    int triggerEventFd;		\/* eventfd(2) used by other threads to wake$/;"	m	struct:ThreadSpecificData	typeref:typename:int	file:
triggerFilePtr	unix/tclEpollNotfy.c	/^    FileHandler *triggerFilePtr;$/;"	m	struct:ThreadSpecificData	typeref:typename:FileHandler *	file:
triggerPipe	macosx/tclMacOSXNotify.c	/^static int triggerPipe = -1;$/;"	v	typeref:typename:int	file:
triggerPipe	unix/tclEpollNotfy.c	/^    int triggerPipe[2];		\/* pipe(2) used by other threads to wake$/;"	m	struct:ThreadSpecificData	typeref:typename:int[2]	file:
triggerPipe	unix/tclKqueueNotfy.c	/^    int triggerPipe[2];		\/* pipe(2) used by other threads to wake$/;"	m	struct:ThreadSpecificData	typeref:typename:int[2]	file:
triggerPipe	unix/tclSelectNotfy.c	/^static int triggerPipe = -1;$/;"	v	typeref:typename:int	file:
truncate	generic/tclIORChan.c	/^    struct ForwardParamTruncate truncate;$/;"	m	union:ForwardParam	typeref:struct:ForwardParamTruncate	file:
truncateProc	generic/tcl.h	/^    Tcl_DriverTruncateProc *truncateProc;$/;"	m	struct:Tcl_ChannelType	typeref:typename:Tcl_DriverTruncateProc *
try	compat/zlib/configure	/^  try()$/;"	f
try	compat/zlib/test/infcover.c	/^local int try(char *hex, char *id, int err)$/;"	f	typeref:typename:local int
tryboth	compat/zlib/configure	/^tryboth()$/;"	f
tsdGlobal	generic/tclThreadStorage.c	/^} tsdGlobal = { NULL, 0, NULL };$/;"	v	typeref:struct:__anon4d1cb8920108
tsdLock	macosx/tclMacOSXNotify.c	/^    OSSpinLock tsdLock;		\/* Must hold this lock before acessing the$/;"	m	struct:ThreadSpecificData	typeref:typename:OSSpinLock	file:
tsdLock	macosx/tclMacOSXNotify.c	/^    os_unfair_lock tsdLock;$/;"	m	struct:ThreadSpecificData	typeref:typename:os_unfair_lock	file:
tsdPerfGetObjCmd	tools/tsdPerf.c	/^tsdPerfGetObjCmd(void *cdata, Tcl_Interp *interp, int objc, Tcl_Obj *const *objv) {$/;"	f	typeref:typename:int	file:
tsdPerfSetObjCmd	tools/tsdPerf.c	/^tsdPerfSetObjCmd(void *cdata, Tcl_Interp *interp, int objc, Tcl_Obj *const *objv) {$/;"	f	typeref:typename:int	file:
tsdPtr	generic/tclOOInt.h	/^    ThreadLocalData *tsdPtr;	\/* Counter so we can allocate a unique$/;"	m	struct:Foundation	typeref:typename:ThreadLocalData *
tsdPtr	unix/tclEpollNotfy.c	/^    struct ThreadSpecificData *tsdPtr;$/;"	m	struct:PlatformEventData	typeref:struct:ThreadSpecificData *	file:
tsdPtr	unix/tclKqueueNotfy.c	/^    struct ThreadSpecificData *tsdPtr;$/;"	m	struct:PlatformEventData	typeref:struct:ThreadSpecificData *	file:
tty	generic/tclMain.c	/^    int tty;			\/* Non-zero means standard input is a$/;"	m	struct:__anonfdf182ea0308	typeref:typename:int	file:
ttyChannelType	unix/tclUnixChan.c	/^static const Tcl_ChannelType ttyChannelType = {$/;"	v	typeref:typename:const Tcl_ChannelType	file:
tv_sec	generic/tcl.h	/^	struct {long tv_sec;} st_atim;$/;"	m	struct:__anon937aefea0108::__anon937aefea0208	typeref:typename:long
tv_sec	generic/tcl.h	/^	struct {long tv_sec;} st_ctim;$/;"	m	struct:__anon937aefea0108::__anon937aefea0408	typeref:typename:long
tv_sec	generic/tcl.h	/^	struct {long tv_sec;} st_mtim;$/;"	m	struct:__anon937aefea0108::__anon937aefea0308	typeref:typename:long
twapiTlsPlus	tests/twapiTlsPlus.tcl	/^namespace eval twapiTlsPlus {$/;"	n
twoPtrValue	generic/tcl.h	/^    } twoPtrValue;$/;"	m	union:Tcl_ObjInternalRep	typeref:struct:Tcl_ObjInternalRep::__anon937aefea0508
twoPtrValue	generic/tclDTrace.d	/^	} twoPtrValue;$/;"	m	union:Tcl_Obj.__anon1	file:
txt2enc	tools/encoding/Makefile	/^txt2enc: txt2enc.c$/;"	t
type	generic/regguts.h	/^    int type;			\/* 0 if free, else an NFA arc type code *\/$/;"	m	struct:arc	typeref:typename:int
type	generic/tcl.h	/^    int type;			\/* Corresponds to bcdpfls as in 'find -t'. *\/$/;"	m	struct:Tcl_GlobTypeData	typeref:typename:int
type	generic/tcl.h	/^    int type;			\/* Indicates the option type; see below. *\/$/;"	m	struct:__anon937aefea0b08	typeref:typename:int
type	generic/tcl.h	/^    int type;			\/* Type of token, such as TCL_TOKEN_WORD; see$/;"	m	struct:Tcl_Token	typeref:typename:int
type	generic/tclCompile.h	/^    ExceptionRangeType type;	\/* The kind of ExceptionRange. *\/$/;"	m	struct:__anone79d5a530208	typeref:typename:ExceptionRangeType
type	generic/tclCompile.h	/^    const AuxDataType *type;	\/* Pointer to the AuxData type associated with$/;"	m	struct:AuxData	typeref:typename:const AuxDataType *
type	generic/tclCompile.h	/^    int type;			\/* Context type. *\/$/;"	m	struct:__anone79d5a530508	typeref:typename:int
type	generic/tclDate.c	/^    int type;$/;"	m	struct:__anone8f8f7230108	typeref:typename:int	file:
type	generic/tclDate.h	/^    unsigned short type;$/;"	m	struct:ClockFormatTokenMap	typeref:typename:unsigned short
type	generic/tclDate.h	/^    unsigned short type;$/;"	m	struct:ClockScanTokenMap	typeref:typename:unsigned short
type	generic/tclDateClassic.c	/^    int type;$/;"	m	struct:_TABLE	typeref:typename:int	file:
type	generic/tclInt.h	/^    int type;			\/* Values see below. *\/$/;"	m	struct:CmdFrame	typeref:typename:int
type	generic/tclInterp.c	/^    int type;			\/* What kind of callback is this. *\/$/;"	m	struct:__anon913711770508	typeref:typename:int	file:
type	generic/tclInterp.c	/^    long type;			\/* The type of callback that this is. *\/$/;"	m	struct:__anon913711770608	typeref:typename:long	file:
type	generic/tclLink.c	/^    int type;			\/* Type of link (TCL_LINK_INT, etc.). *\/$/;"	m	struct:__anonfc2fcf730108	typeref:typename:int	file:
type	macosx/tclMacOSXFCmd.c	/^    u_int32_t type;$/;"	m	struct:finderinfo	typeref:typename:u_int32_t	file:
type	win/tclWinPipe.c	/^    int type;			\/* One of the file types defined above. *\/$/;"	m	struct:__anon3385f2d20108	typeref:typename:int	file:
type2Ptr	generic/tclOOInt.h	/^	const Tcl_MethodType2 *type2Ptr;$/;"	m	union:Method::__anon29d79193010a	typeref:typename:const Tcl_MethodType2 *
typeName	generic/tcl.h	/^    const char *typeName;	\/* The name of the channel type in Tcl$/;"	m	struct:Tcl_ChannelType	typeref:typename:const char *
typeName	generic/tcl.h	/^    const char *typeName;	\/* The name of the filesystem. *\/$/;"	m	struct:Tcl_Filesystem	typeref:typename:const char *
typeNames	win/tclWinReg.c	/^static const char *const typeNames[] = {$/;"	v	typeref:typename:const char * const[]	file:
typePtr	generic/tcl.h	/^    const Tcl_HashKeyType *typePtr;$/;"	m	struct:Tcl_HashTable	typeref:typename:const Tcl_HashKeyType *
typePtr	generic/tcl.h	/^    const Tcl_ObjType *typePtr;	\/* Denotes the object's type. Always$/;"	m	struct:Tcl_Obj	typeref:typename:const Tcl_ObjType *
typePtr	generic/tclDTrace.d	/^    const Tcl_ObjType *typePtr;$/;"	m	struct:Tcl_Obj	file:
typePtr	generic/tclIO.h	/^    const Tcl_ChannelType *typePtr;$/;"	m	struct:Channel	typeref:typename:const Tcl_ChannelType *
typePtr	generic/tclOOInt.h	/^	const Tcl_MethodType *typePtr;$/;"	m	union:Method::__anon29d79193010a	typeref:typename:const Tcl_MethodType *
typeTable	generic/tclObj.c	/^static Tcl_HashTable typeTable;$/;"	v	typeref:typename:Tcl_HashTable	file:
typeTableInitialized	generic/tclObj.c	/^static int typeTableInitialized = 0;	\/* 0 means not yet initialized. *\/$/;"	v	typeref:typename:int	file:
typeflag	compat/zlib/contrib/untgz/untgz.c	/^  char typeflag;                \/* 156 *\/$/;"	m	struct:tar_header	typeref:typename:char	file:
tz	generic/tclClock.c	/^static ClockTzStatic tz = {	\/* Global timezone info; protected by$/;"	v	typeref:typename:ClockTzStatic	file:
tzName	generic/tclClock.c	/^	Tcl_Obj *tzName;$/;"	m	struct:ConvertLocalToUTCUsingTable::__anond46bc7710108	typeref:typename:Tcl_Obj *	file:
tzName	generic/tclClockClassic.c	/^    Tcl_Obj *tzName;		\/* Time zone name *\/$/;"	m	struct:__anondf8925f30208	typeref:typename:Tcl_Obj *	file:
tzName	generic/tclDate.h	/^    Tcl_Obj *tzName;		\/* Name (abbreviation) of this area in TZ *\/$/;"	m	struct:ClockLastTZOffs	typeref:typename:Tcl_Obj *
tzName	generic/tclDate.h	/^    Tcl_Obj *tzName;		\/* Name (or corresponding DST-abbreviation) of the$/;"	m	struct:TclDateFields	typeref:typename:Tcl_Obj *
tzOffset	generic/tclClock.c	/^	int tzOffset;$/;"	m	struct:ConvertLocalToUTCUsingTable::__anond46bc7710108	typeref:typename:int	file:
tzOffset	generic/tclClockClassic.c	/^    int tzOffset;		\/* Time zone offset in seconds east of$/;"	m	struct:__anondf8925f30208	typeref:typename:int	file:
tzOffset	generic/tclDate.h	/^    int tzOffset;		\/* Time zone offset in seconds east of$/;"	m	struct:TclDateFields	typeref:typename:int
tzOffset	generic/tclDate.h	/^    int tzOffset;$/;"	m	struct:ClockLastTZOffs	typeref:typename:int
tzdata	unix/configure.ac	/^AC_ARG_WITH(tzdata,$/;"	w
u	generic/tclThreadAlloc.c	/^	} u;$/;"	m	struct:Block::__anone59fb5e80108	typeref:union:Block::__anone59fb5e80108::__anone59fb5e8020a	file:
u03A0ObjCmd	unix/dltest/pkgπ.c	/^Pkg\\u03C0_\\u03A0ObjCmd($/;"	f	typeref:typename:int Pkg\\u03C0_\\	file:
u03C0_Init	unix/dltest/pkgπ.c	/^Pkg\\u03C0_Init($/;"	f	typeref:typename:DLLEXPORT int Pkg\\
uInt	compat/zlib/zconf.h	/^#  define uInt                  z_uInt$/;"	d
uInt	compat/zlib/zconf.h	/^typedef unsigned int   uInt;  \/* 16 bits or more *\/$/;"	t	typeref:typename:unsigned int
uInt	compat/zlib/zconf.h.in	/^#  define uInt                  z_uInt$/;"	d	file:
uInt	compat/zlib/zconf.h.in	/^typedef unsigned int   uInt;  \/* 16 bits or more *\/$/;"	t	typeref:typename:unsigned int	file:
uIntf	compat/zlib/zconf.h	/^#  define uIntf                 z_uIntf$/;"	d
uIntf	compat/zlib/zconf.h	/^typedef uInt  FAR uIntf;$/;"	t	typeref:typename:uInt FAR
uIntf	compat/zlib/zconf.h.in	/^#  define uIntf                 z_uIntf$/;"	d	file:
uIntf	compat/zlib/zconf.h.in	/^typedef uInt  FAR uIntf;$/;"	t	typeref:typename:uInt FAR	file:
uLong	compat/zlib/zconf.h	/^#  define uLong                 z_uLong$/;"	d
uLong	compat/zlib/zconf.h	/^typedef unsigned long  uLong; \/* 32 bits or more *\/$/;"	t	typeref:typename:unsigned long
uLong	compat/zlib/zconf.h.in	/^#  define uLong                 z_uLong$/;"	d	file:
uLong	compat/zlib/zconf.h.in	/^typedef unsigned long  uLong; \/* 32 bits or more *\/$/;"	t	typeref:typename:unsigned long	file:
uLongf	compat/zlib/zconf.h	/^#  define uLongf                z_uLongf$/;"	d
uLongf	compat/zlib/zconf.h	/^typedef uLong FAR uLongf;$/;"	t	typeref:typename:uLong FAR
uLongf	compat/zlib/zconf.h.in	/^#  define uLongf                z_uLongf$/;"	d	file:
uLongf	compat/zlib/zconf.h.in	/^typedef uLong FAR uLongf;$/;"	t	typeref:typename:uLong FAR	file:
u_cleanup	generic/tclIcu.c	/^#define u_cleanup        icu_fns._u_cleanup$/;"	d	file:
u_errorName	generic/tclIcu.c	/^#define u_errorName      icu_fns._u_errorName$/;"	d	file:
ubrk_close	generic/tclIcu.c	/^#define ubrk_close       icu_fns._ubrk_close$/;"	d	file:
ubrk_following	generic/tclIcu.c	/^#define ubrk_following   icu_fns._ubrk_following$/;"	d	file:
ubrk_next	generic/tclIcu.c	/^#define ubrk_next        icu_fns._ubrk_next$/;"	d	file:
ubrk_open	generic/tclIcu.c	/^#define ubrk_open        icu_fns._ubrk_open$/;"	d	file:
ubrk_preceding	generic/tclIcu.c	/^#define ubrk_preceding   icu_fns._ubrk_preceding$/;"	d	file:
ubrk_previous	generic/tclIcu.c	/^#define ubrk_previous    icu_fns._ubrk_previous$/;"	d	file:
ubrk_setText	generic/tclIcu.c	/^#define ubrk_setText     icu_fns._ubrk_setText$/;"	d	file:
ubuf	generic/tclZipfs.c	/^    unsigned char *ubuf;	\/* Pointer to the uncompressed data *\/$/;"	m	struct:ZipChannel	typeref:typename:unsigned char *	file:
ubufSize	generic/tclZipfs.c	/^    Tcl_Size ubufSize;		\/* Size of allocated ubufToFree *\/$/;"	m	struct:ZipChannel	typeref:typename:Tcl_Size	file:
ubufToFree	generic/tclZipfs.c	/^    unsigned char *ubufToFree;	\/* NULL if ubuf points to memory that does not$/;"	m	struct:ZipChannel	typeref:typename:unsigned char *	file:
uc	generic/tclLink.c	/^	unsigned char uc;$/;"	m	union:__anonfc2fcf730108::__anonfc2fcf73020a	typeref:typename:unsigned char	file:
ucPtr	generic/tclLink.c	/^	unsigned char *ucPtr;	\/* unsigned char array *\/$/;"	m	union:__anonfc2fcf730108::__anonfc2fcf73020a	typeref:typename:unsigned char *	file:
uch	compat/zlib/zutil.h	/^typedef unsigned char  uch;$/;"	t	typeref:typename:unsigned char
uchf	compat/zlib/zutil.h	/^typedef uch FAR uchf;$/;"	t	typeref:typename:uch FAR
uchr	generic/regcustom.h	/^typedef unsigned uchr;		\/* Unsigned type that will hold a chr. *\/$/;"	t	typeref:typename:unsigned
ucm	tools/ucm2tests.tcl	/^namespace eval ucm {$/;"	n
ucmConvertfromMismatches	tests/icuUcmTests.tcl	/^proc ucmConvertfromMismatches {enc map} {$/;"	p
ucmConverttoMismatches	tests/icuUcmTests.tcl	/^proc ucmConverttoMismatches {enc map} {$/;"	p
ucnv_countAliases	generic/tclIcu.c	/^#define ucnv_countAliases     icu_fns._ucnv_countAliases$/;"	d	file:
ucnv_countAvailable	generic/tclIcu.c	/^#define ucnv_countAvailable   icu_fns._ucnv_countAvailable$/;"	d	file:
ucnv_getAlias	generic/tclIcu.c	/^#define ucnv_getAlias         icu_fns._ucnv_getAlias$/;"	d	file:
ucnv_getAvailableName	generic/tclIcu.c	/^#define ucnv_getAvailableName icu_fns._ucnv_getAvailableName$/;"	d	file:
ucsdet_close	generic/tclIcu.c	/^#define ucsdet_close     icu_fns._ucsdet_close$/;"	d	file:
ucsdet_detect	generic/tclIcu.c	/^#define ucsdet_detect    icu_fns._ucsdet_detect$/;"	d	file:
ucsdet_detectAll	generic/tclIcu.c	/^#define ucsdet_detectAll icu_fns._ucsdet_detectAll$/;"	d	file:
ucsdet_getAllDetectableCharsets	generic/tclIcu.c	/^#define ucsdet_getAllDetectableCharsets icu_fns._ucsdet_getAllDetectableCharsets$/;"	d	file:
ucsdet_getName	generic/tclIcu.c	/^#define ucsdet_getName   icu_fns._ucsdet_getName$/;"	d	file:
ucsdet_open	generic/tclIcu.c	/^#define ucsdet_open      icu_fns._ucsdet_open$/;"	d	file:
ucsdet_setText	generic/tclIcu.c	/^#define ucsdet_setText   icu_fns._ucsdet_setText$/;"	d	file:
uenum_close	generic/tclIcu.c	/^#define uenum_close      icu_fns._uenum_close$/;"	d	file:
uenum_count	generic/tclIcu.c	/^#define uenum_count      icu_fns._uenum_count$/;"	d	file:
uenum_next	generic/tclIcu.c	/^#define uenum_next       icu_fns._uenum_next$/;"	d	file:
ui	generic/tclLink.c	/^	unsigned int ui;$/;"	m	union:__anonfc2fcf730108::__anonfc2fcf73020a	typeref:typename:unsigned int	file:
uiPtr	generic/tclLink.c	/^	unsigned int *uiPtr;	\/* unsigned int array *\/$/;"	m	union:__anonfc2fcf730108::__anonfc2fcf73020a	typeref:typename:unsigned int *	file:
uid	compat/zlib/contrib/untgz/untgz.c	/^  char uid[8];                  \/* 108 *\/$/;"	m	struct:tar_header	typeref:typename:char[8]	file:
uid_t	win/tclWinPort.h	/^#   define uid_t /;"	d
uint	compat/zlib/examples/gzlog.c	/^typedef unsigned int uint;$/;"	t	typeref:typename:unsigned int	file:
ul	generic/tclLink.c	/^	unsigned long ul;$/;"	m	union:__anonfc2fcf730108::__anonfc2fcf73020a	typeref:typename:unsigned long	file:
ulPtr	generic/tclLink.c	/^	unsigned long *ulPtr;	\/* unsigned long array *\/$/;"	m	union:__anonfc2fcf730108::__anonfc2fcf73020a	typeref:typename:unsigned long *	file:
ulg	compat/zlib/zutil.h	/^typedef unsigned long  ulg;$/;"	t	typeref:typename:unsigned long
ulong	compat/zlib/examples/gzlog.c	/^typedef unsigned long ulong;$/;"	t	typeref:typename:unsigned long	file:
unalign	generic/tclInt.h	/^    char unalign[8];$/;"	m	struct:TclMaxAlignment	typeref:typename:char[8]
uname	compat/zlib/contrib/untgz/untgz.c	/^  char uname[32];               \/* 265 *\/$/;"	m	struct:tar_header	typeref:typename:char[32]	file:
uncolorchain	generic/regc_color.c	/^uncolorchain($/;"	f	typeref:typename:void	file:
uncompr.$(HOST_OBJEXT)	unix/Makefile.in	/^uncompr.$(HOST_OBJEXT):$/;"	t
uncompr.$(HOST_OBJEXT)	win/Makefile.in	/^uncompr.$(HOST_OBJEXT):$/;"	t
uncompr.lo	compat/zlib/Makefile.in	/^compress.lo example.lo minigzip.lo uncompr.lo: $(SRCDIR)zlib.h zconf.h$/;"	t
uncompr.lo	compat/zlib/Makefile.in	/^uncompr.lo: $(SRCDIR)uncompr.c$/;"	t
uncompr.o	compat/zlib/Makefile.in	/^compress.o example.o minigzip.o uncompr.o: $(SRCDIR)zlib.h zconf.h$/;"	t
uncompr.o	compat/zlib/Makefile.in	/^uncompr.o: $(SRCDIR)uncompr.c$/;"	t
uncompr.obj	compat/zlib/contrib/delphi/zlibd32.mak	/^uncompr.obj: uncompr.c zlib.h zconf.h$/;"	t
uncompr.obj	compat/zlib/contrib/pascal/zlibd32.mak	/^uncompr.obj: uncompr.c zlib.h zconf.h$/;"	t
uncompress	compat/zlib/contrib/ada/zlib-thin.ads	/^   function uncompress$/;"	R
uncompress	compat/zlib/contrib/pascal/zlibpas.pas	/^function uncompress(dest: PChar; var destLen: LongInt;$/;"	f
uncompress	compat/zlib/contrib/pascal/zlibpas.pas	/^function uncompress; external;$/;"	f
uncompress	compat/zlib/uncompr.c	/^int ZEXPORT uncompress(Bytef *dest, uLongf *destLen, const Bytef *source,$/;"	f	typeref:typename:int ZEXPORT
uncompress	compat/zlib/zconf.h	/^#    define uncompress            z_uncompress$/;"	d
uncompress	compat/zlib/zconf.h.in	/^#    define uncompress            z_uncompress$/;"	d	file:
uncompress2	compat/zlib/uncompr.c	/^int ZEXPORT uncompress2(Bytef *dest, uLongf *destLen, const Bytef *source,$/;"	f	typeref:typename:int ZEXPORT
uncompress2	compat/zlib/zconf.h	/^#    define uncompress2           z_uncompress2$/;"	d
uncompress2	compat/zlib/zconf.h.in	/^#    define uncompress2           z_uncompress2$/;"	d	file:
uncompressedData	compat/zlib/contrib/dotzlib/DotZLib/UnitTests.cs	/^        private ArrayList uncompressedData = new ArrayList();$/;"	f	class:DotZLibTests.DeflateInflateTests	file:
uncompressed_size	compat/zlib/contrib/minizip/unzip.h	/^    ZPOS64_T uncompressed_size; \/* uncompressed size               8 bytes *\/$/;"	m	struct:unz_file_info64_s	typeref:typename:ZPOS64_T
uncompressed_size	compat/zlib/contrib/minizip/unzip.h	/^    uLong uncompressed_size;    \/* uncompressed size               4 bytes *\/$/;"	m	struct:unz_file_info_s	typeref:typename:uLong
underflow	compat/zlib/contrib/iostream/zfstream.cpp	/^int gzfilebuf::underflow() {$/;"	f	class:gzfilebuf	typeref:typename:int
underflow	compat/zlib/contrib/iostream3/zfstream.cc	/^gzfilebuf::underflow()$/;"	f	class:gzfilebuf	typeref:typename:gzfilebuf::int_type
uni	tools/uniParse.tcl	/^namespace eval uni {$/;"	n
unicode	generic/tclStringRep.h	/^    Tcl_UniChar unicode[TCLFLEXARRAY];	\/* The array of Tcl_UniChar units.$/;"	m	struct:__anonf2feabe80108	typeref:typename:Tcl_UniChar[]
unilen	generic/tclEncoding.c	/^unilen($/;"	f	typeref:typename:size_t	file:
unilen4	generic/tclEncoding.c	/^unilen4($/;"	f	typeref:typename:size_t	file:
uninstall	compat/zlib/Makefile.in	/^uninstall:$/;"	t
unique	generic/tclCmdIL.c	/^    int unique;$/;"	m	struct:__anond5eb1cce0308	typeref:typename:int	file:
unit	generic/tclGetDate.y	/^unit	: tSEC_UNIT {$/;"	l	typeref:typename:Number
unit	generic/tclGetDateClassic.y	/^unit	: tSEC_UNIT {$/;"	l	typeref:typename:Number
unitInd	generic/tclClock.c	/^    enum unitInd {$/;"	g	function:ClockAddObjCmd	file:
unk	generic/regerror.c	/^static const char unk[] = "*** unknown regex error code 0x%x ***";$/;"	v	typeref:typename:const char[]	file:
unknown	library/init.tcl	/^proc unknown args {$/;"	p
unknownHandler	generic/tclInt.h	/^    Tcl_Obj *unknownHandler;	\/* Script prefix used to handle the case when$/;"	m	struct:EnsembleConfig	typeref:typename:Tcl_Obj *
unknownHandlerPtr	generic/tclInt.h	/^    Tcl_Obj *unknownHandlerPtr;	\/* A script fragment to be used when command$/;"	m	struct:Namespace	typeref:typename:Tcl_Obj *
unknownMethodNameObj	generic/tclOOInt.h	/^    Tcl_Obj *unknownMethodNameObj;$/;"	m	struct:Foundation	typeref:typename:Tcl_Obj *
unlikely	generic/tclCompile.h	/^#define unlikely(/;"	d
unlink	compat/zlib/test/minigzip.c	/^#  define unlink /;"	d	file:
unloadFileProcPtr	generic/tclInt.h	/^    Tcl_FSUnloadFileProc* unloadFileProcPtr;$/;"	m	struct:Tcl_LoadHandle_	typeref:typename:Tcl_FSUnloadFileProc *
unloadOptionsEnum	generic/tclLoad.c	/^    enum unloadOptionsEnum {$/;"	g	function:Tcl_UnloadObjCmd	file:
unloadProc	generic/tclLoad.c	/^    Tcl_LibraryUnloadProc *unloadProc;$/;"	m	struct:LoadedLibrary	typeref:typename:Tcl_LibraryUnloadProc *	file:
unquote	tools/tcltk-man2html-utils.tcl	/^proc unquote arg {$/;"	p
unregister	library/http/http.tcl	/^proc http::unregister {proto} {$/;"	p	namespace:http
unreportedError	generic/tclIO.h	/^    int unreportedError;	\/* Non-zero if an error report was deferred$/;"	m	struct:ChannelState	typeref:typename:int
unreportedMsg	generic/tclIO.h	/^    Tcl_Obj *unreportedMsg;	\/* Non-NULL if an error report was deferred$/;"	m	struct:ChannelState	typeref:typename:Tcl_Obj *
unsafe	generic/tclInt.h	/^    int unsafe;			\/* Whether this command is to be hidden by$/;"	m	struct:__anon1eb6b3550708	typeref:typename:int
unsafeEnsembleCommands	generic/tclBasic.c	/^static const UnsafeEnsembleInfo unsafeEnsembleCommands[] = {$/;"	v	typeref:typename:const UnsafeEnsembleInfo[]	file:
untgz	compat/zlib/contrib/untgz/Makefile	/^untgz: untgz.o ..\/..\/libz.a$/;"	t
untgz.o	compat/zlib/contrib/untgz/Makefile	/^untgz.o: untgz.c ..\/..\/zlib.h$/;"	t
unused	compat/zlib/contrib/minizip/unzip.h	/^typedef struct TagunzFile__ { int unused; } unzFile__;$/;"	m	struct:TagunzFile__	typeref:typename:int
unused	compat/zlib/contrib/minizip/zip.c	/^  uLong  unused; \/* for future use and alignment *\/$/;"	m	struct:linkedlist_datablock_internal_s	typeref:typename:uLong	file:
unused	compat/zlib/contrib/minizip/zip.h	/^typedef struct TagzipFile__ { int unused; } zipFile__;$/;"	m	struct:TagzipFile__	typeref:typename:int
unused	generic/tclAlloc.c	/^	unsigned char unused;	\/* unused *\/$/;"	m	struct:overhead::__anon3a4776f00108	typeref:typename:unsigned char	file:
unused	generic/tclThreadAlloc.c	/^		unsigned char unused;	\/* Padding. *\/$/;"	m	struct:Block::__anone59fb5e80108::__anone59fb5e8020a::__anone59fb5e80308	typeref:typename:unsigned char	file:
unused2	generic/tclAlloc.c	/^	unsigned short unused2;	\/* padding to 8-byte align *\/$/;"	m	struct:overhead::__anon3a4776f00108	typeref:typename:unsigned short	file:
unz64_file_pos	compat/zlib/contrib/minizip/unzip.h	/^} unz64_file_pos;$/;"	t	typeref:struct:unz64_file_pos_s
unz64_file_pos_s	compat/zlib/contrib/minizip/unzip.h	/^typedef struct unz64_file_pos_s$/;"	s
unz64_s	compat/zlib/contrib/minizip/unzip.c	/^} unz64_s;$/;"	t	typeref:struct:__anon3259ecee0208	file:
unz64local_CheckCurrentFileCoherencyHeader	compat/zlib/contrib/minizip/unzip.c	/^local int unz64local_CheckCurrentFileCoherencyHeader(unz64_s* s, uInt* piSizeVar,$/;"	f	typeref:typename:local int
unz64local_DosDateToTmuDate	compat/zlib/contrib/minizip/unzip.c	/^local void unz64local_DosDateToTmuDate(ZPOS64_T ulDosDate, tm_unz* ptm) {$/;"	f	typeref:typename:local void
unz64local_GetCurrentFileInfoInternal	compat/zlib/contrib/minizip/unzip.c	/^local int unz64local_GetCurrentFileInfoInternal(unzFile file,$/;"	f	typeref:typename:local int
unz64local_SearchCentralDir	compat/zlib/contrib/minizip/unzip.c	/^local ZPOS64_T unz64local_SearchCentralDir(const zlib_filefunc64_32_def* pzlib_filefunc_def, voi/;"	f	typeref:typename:local ZPOS64_T
unz64local_SearchCentralDir64	compat/zlib/contrib/minizip/unzip.c	/^local ZPOS64_T unz64local_SearchCentralDir64(const zlib_filefunc64_32_def* pzlib_filefunc_def,$/;"	f	typeref:typename:local ZPOS64_T
unz64local_getLong	compat/zlib/contrib/minizip/unzip.c	/^local int unz64local_getLong(const zlib_filefunc64_32_def* pzlib_filefunc_def,$/;"	f	typeref:typename:local int
unz64local_getLong64	compat/zlib/contrib/minizip/unzip.c	/^local int unz64local_getLong64(const zlib_filefunc64_32_def* pzlib_filefunc_def,$/;"	f	typeref:typename:local int
unz64local_getShort	compat/zlib/contrib/minizip/unzip.c	/^local int unz64local_getShort(const zlib_filefunc64_32_def* pzlib_filefunc_def,$/;"	f	typeref:typename:local int
unzClose	compat/zlib/contrib/minizip/unzip.c	/^extern int ZEXPORT unzClose(unzFile file) {$/;"	f	typeref:typename:int ZEXPORT
unzCloseCurrentFile	compat/zlib/contrib/minizip/unzip.c	/^extern int ZEXPORT unzCloseCurrentFile(unzFile file) {$/;"	f	typeref:typename:int ZEXPORT
unzFile	compat/zlib/contrib/minizip/unzip.h	/^typedef unzFile__ *unzFile;$/;"	t	typeref:typename:unzFile__ *
unzFile__	compat/zlib/contrib/minizip/unzip.h	/^typedef struct TagunzFile__ { int unused; } unzFile__;$/;"	t	typeref:struct:TagunzFile__
unzGetCurrentFileInfo	compat/zlib/contrib/minizip/unzip.c	/^extern int ZEXPORT unzGetCurrentFileInfo(unzFile file,$/;"	f	typeref:typename:int ZEXPORT
unzGetCurrentFileInfo64	compat/zlib/contrib/minizip/unzip.c	/^extern int ZEXPORT unzGetCurrentFileInfo64(unzFile file,$/;"	f	typeref:typename:int ZEXPORT
unzGetCurrentFileZStreamPos64	compat/zlib/contrib/minizip/unzip.c	/^extern ZPOS64_T ZEXPORT unzGetCurrentFileZStreamPos64(unzFile file) {$/;"	f	typeref:typename:ZPOS64_T ZEXPORT
unzGetFilePos	compat/zlib/contrib/minizip/unzip.c	/^extern int ZEXPORT unzGetFilePos(unzFile file, unz_file_pos* file_pos) {$/;"	f	typeref:typename:int ZEXPORT
unzGetFilePos64	compat/zlib/contrib/minizip/unzip.c	/^extern int ZEXPORT unzGetFilePos64(unzFile file, unz64_file_pos* file_pos) {$/;"	f	typeref:typename:int ZEXPORT
unzGetGlobalComment	compat/zlib/contrib/minizip/unzip.c	/^extern int ZEXPORT unzGetGlobalComment(unzFile file, char * szComment, uLong uSizeBuf) {$/;"	f	typeref:typename:int ZEXPORT
unzGetGlobalInfo	compat/zlib/contrib/minizip/unzip.c	/^extern int ZEXPORT unzGetGlobalInfo(unzFile file, unz_global_info* pglobal_info32) {$/;"	f	typeref:typename:int ZEXPORT
unzGetGlobalInfo64	compat/zlib/contrib/minizip/unzip.c	/^extern int ZEXPORT unzGetGlobalInfo64(unzFile file, unz_global_info64* pglobal_info) {$/;"	f	typeref:typename:int ZEXPORT
unzGetLocalExtrafield	compat/zlib/contrib/minizip/unzip.c	/^extern int ZEXPORT unzGetLocalExtrafield(unzFile file, voidp buf, unsigned len) {$/;"	f	typeref:typename:int ZEXPORT
unzGetOffset	compat/zlib/contrib/minizip/unzip.c	/^extern uLong ZEXPORT unzGetOffset(unzFile file) {$/;"	f	typeref:typename:uLong ZEXPORT
unzGetOffset64	compat/zlib/contrib/minizip/unzip.c	/^extern ZPOS64_T ZEXPORT unzGetOffset64(unzFile file) {$/;"	f	typeref:typename:ZPOS64_T ZEXPORT
unzGoToFilePos	compat/zlib/contrib/minizip/unzip.c	/^extern int ZEXPORT unzGoToFilePos(unzFile file, unz_file_pos* file_pos) {$/;"	f	typeref:typename:int ZEXPORT
unzGoToFilePos64	compat/zlib/contrib/minizip/unzip.c	/^extern int ZEXPORT unzGoToFilePos64(unzFile file, const unz64_file_pos* file_pos) {$/;"	f	typeref:typename:int ZEXPORT
unzGoToFirstFile	compat/zlib/contrib/minizip/unzip.c	/^extern int ZEXPORT unzGoToFirstFile(unzFile file) {$/;"	f	typeref:typename:int ZEXPORT
unzGoToNextFile	compat/zlib/contrib/minizip/unzip.c	/^extern int ZEXPORT unzGoToNextFile(unzFile file) {$/;"	f	typeref:typename:int ZEXPORT
unzLocateFile	compat/zlib/contrib/minizip/unzip.c	/^extern int ZEXPORT unzLocateFile(unzFile file, const char *szFileName, int iCaseSensitivity) {$/;"	f	typeref:typename:int ZEXPORT
unzOpen	compat/zlib/contrib/minizip/unzip.c	/^extern unzFile ZEXPORT unzOpen(const char *path) {$/;"	f	typeref:typename:unzFile ZEXPORT
unzOpen2	compat/zlib/contrib/minizip/unzip.c	/^extern unzFile ZEXPORT unzOpen2(const char *path,$/;"	f	typeref:typename:unzFile ZEXPORT
unzOpen2_64	compat/zlib/contrib/minizip/unzip.c	/^extern unzFile ZEXPORT unzOpen2_64(const void *path,$/;"	f	typeref:typename:unzFile ZEXPORT
unzOpen64	compat/zlib/contrib/minizip/unzip.c	/^extern unzFile ZEXPORT unzOpen64(const void *path) {$/;"	f	typeref:typename:unzFile ZEXPORT
unzOpenCurrentFile	compat/zlib/contrib/minizip/unzip.c	/^extern int ZEXPORT unzOpenCurrentFile(unzFile file) {$/;"	f	typeref:typename:int ZEXPORT
unzOpenCurrentFile2	compat/zlib/contrib/minizip/unzip.c	/^extern int ZEXPORT unzOpenCurrentFile2(unzFile file, int* method, int* level, int raw) {$/;"	f	typeref:typename:int ZEXPORT
unzOpenCurrentFile3	compat/zlib/contrib/minizip/unzip.c	/^extern int ZEXPORT unzOpenCurrentFile3(unzFile file, int* method,$/;"	f	typeref:typename:int ZEXPORT
unzOpenCurrentFilePassword	compat/zlib/contrib/minizip/unzip.c	/^extern int ZEXPORT unzOpenCurrentFilePassword(unzFile file, const char* password) {$/;"	f	typeref:typename:int ZEXPORT
unzOpenInternal	compat/zlib/contrib/minizip/unzip.c	/^local unzFile unzOpenInternal(const void *path,$/;"	f	typeref:typename:local unzFile
unzReadCurrentFile	compat/zlib/contrib/minizip/unzip.c	/^extern int ZEXPORT unzReadCurrentFile(unzFile file, voidp buf, unsigned len) {$/;"	f	typeref:typename:int ZEXPORT
unzRepair	compat/zlib/contrib/minizip/mztools.c	/^extern int ZEXPORT unzRepair(const char* file, const char* fileOut, const char* fileOutTmp, uLon/;"	f	typeref:typename:int ZEXPORT
unzSetOffset	compat/zlib/contrib/minizip/unzip.c	/^extern int ZEXPORT unzSetOffset (unzFile file, uLong pos) {$/;"	f	typeref:typename:int ZEXPORT
unzSetOffset64	compat/zlib/contrib/minizip/unzip.c	/^extern int ZEXPORT unzSetOffset64(unzFile file, ZPOS64_T pos) {$/;"	f	typeref:typename:int ZEXPORT
unzStringFileNameCompare	compat/zlib/contrib/minizip/unzip.c	/^extern int ZEXPORT unzStringFileNameCompare (const char*  fileName1,$/;"	f	typeref:typename:int ZEXPORT
unz_copyright	compat/zlib/contrib/minizip/unzip.c	/^const char unz_copyright[] =$/;"	v	typeref:typename:const char[]
unz_file_info	compat/zlib/contrib/minizip/unzip.h	/^} unz_file_info;$/;"	t	typeref:struct:unz_file_info_s
unz_file_info64	compat/zlib/contrib/minizip/unzip.h	/^} unz_file_info64;$/;"	t	typeref:struct:unz_file_info64_s
unz_file_info64_internal	compat/zlib/contrib/minizip/unzip.c	/^} unz_file_info64_internal;$/;"	t	typeref:struct:unz_file_info64_internal_s	file:
unz_file_info64_internal_s	compat/zlib/contrib/minizip/unzip.c	/^typedef struct unz_file_info64_internal_s$/;"	s	file:
unz_file_info64_s	compat/zlib/contrib/minizip/unzip.h	/^typedef struct unz_file_info64_s$/;"	s
unz_file_info_s	compat/zlib/contrib/minizip/unzip.h	/^typedef struct unz_file_info_s$/;"	s
unz_file_pos	compat/zlib/contrib/minizip/unzip.h	/^} unz_file_pos;$/;"	t	typeref:struct:unz_file_pos_s
unz_file_pos_s	compat/zlib/contrib/minizip/unzip.h	/^typedef struct unz_file_pos_s$/;"	s
unz_global_info	compat/zlib/contrib/minizip/unzip.h	/^} unz_global_info;$/;"	t	typeref:struct:unz_global_info_s
unz_global_info64	compat/zlib/contrib/minizip/unzip.h	/^} unz_global_info64;$/;"	t	typeref:struct:unz_global_info64_s
unz_global_info64_s	compat/zlib/contrib/minizip/unzip.h	/^typedef struct unz_global_info64_s$/;"	s
unz_global_info_s	compat/zlib/contrib/minizip/unzip.h	/^typedef struct unz_global_info_s$/;"	s
unzeof	compat/zlib/contrib/minizip/unzip.c	/^extern int ZEXPORT unzeof(unzFile file) {$/;"	f	typeref:typename:int ZEXPORT
unztell	compat/zlib/contrib/minizip/unzip.c	/^extern z_off_t ZEXPORT unztell(unzFile file) {$/;"	f	typeref:typename:z_off_t ZEXPORT
unztell64	compat/zlib/contrib/minizip/unzip.c	/^extern ZPOS64_T ZEXPORT unztell64(unzFile file) {$/;"	f	typeref:typename:ZPOS64_T ZEXPORT
upChanPtr	generic/tclIO.h	/^    struct Channel *upChanPtr;	\/* Refers to the channel above stacked this$/;"	m	struct:Channel	typeref:struct:Channel *
upLiteral	generic/tclInt.h	/^    Tcl_Obj *upLiteral;		\/* "UP" literal for [info errorstack] *\/$/;"	m	struct:Interp	typeref:typename:Tcl_Obj *
updateOptionsEnum	generic/tclEvent.c	/^    enum updateOptionsEnum {OPT_IDLETASKS} optionIndex;$/;"	g	function:Tcl_UpdateObjCmd	file:
updateStringProc	generic/tcl.h	/^    Tcl_UpdateStringProc *updateStringProc;$/;"	m	struct:Tcl_ObjType	typeref:typename:Tcl_UpdateStringProc *
updateStringProc	generic/tclDTrace.d	/^    void *updateStringProc;$/;"	m	struct:Tcl_ObjType	file:
updateStringProc	generic/tclInt.h	/^    Tcl_UpdateStringProc *updateStringProc;$/;"	m	struct:ObjectType	typeref:typename:Tcl_UpdateStringProc *
update_keys	compat/zlib/contrib/minizip/crypt.h	/^static int update_keys(unsigned long* pkeys, const z_crc_t* pcrc_32_tab, int c) {$/;"	f	typeref:typename:int
updatewindow	compat/zlib/inflate.c	/^local int updatewindow(z_streamp strm, const Bytef *end, unsigned copy) {$/;"	f	typeref:typename:local int
upperCharTable	generic/regc_locale.c	/^static const chr upperCharTable[] = {$/;"	v	typeref:typename:const chr[]	file:
upperRangeTable	generic/regc_locale.c	/^static const crange upperRangeTable[] = {$/;"	v	typeref:typename:const crange[]	file:
us	generic/tclLink.c	/^	unsigned short us;$/;"	m	union:__anonfc2fcf730108::__anonfc2fcf73020a	typeref:typename:unsigned short	file:
usPtr	generic/tclLink.c	/^	unsigned short *usPtr;	\/* unsigned short array *\/$/;"	m	union:__anonfc2fcf730108::__anonfc2fcf73020a	typeref:typename:unsigned short *	file:
usec	generic/tcl.h	/^    int usec;		\/* Microseconds. *\/$/;"	m	struct:Tcl_Time	typeref:typename:int
usec	generic/tcl.h	/^    long usec;			\/* Microseconds. *\/$/;"	m	struct:Tcl_Time	typeref:typename:long
used	generic/tclBinary.c	/^    Tcl_Size used;		\/* The number of bytes used in the byte$/;"	m	struct:__anon8c3fe00a0108	typeref:typename:Tcl_Size	file:
used	generic/tclIOGT.c	/^    size_t used;		\/* Number of bytes in the buffer, no more than$/;"	m	struct:ResultBuffer	typeref:typename:size_t	file:
used	generic/tclIORTrans.c	/^    size_t used;		\/* Number of bytes in the buffer,$/;"	m	struct:__anon21e740770108	typeref:typename:size_t	file:
used	generic/tclTestObjInterfaceInteger.c	/^    int used;$/;"	m	struct:ListInteger	typeref:typename:int	file:
used	generic/tclTomMath.h	/^	int used, alloc;$/;"	m	struct:mp_int	typeref:typename:int
used	libtommath/tommath.h	/^   int used, alloc;$/;"	m	struct:mp_int	typeref:typename:int
ush	compat/zlib/zutil.h	/^typedef unsigned short ush;$/;"	t	typeref:typename:unsigned short
ushf	compat/zlib/zutil.h	/^typedef ush FAR ushf;$/;"	t	typeref:typename:ush FAR
utf2tenvirondstr	generic/tclEnv.c	/^#  define utf2tenvirondstr(/;"	d	file:
utimeProc	generic/tcl.h	/^    Tcl_FSUtimeProc *utimeProc;	\/* Called by 'Tcl_FSUtime()', by 'file$/;"	m	struct:Tcl_Filesystem	typeref:typename:Tcl_FSUtimeProc *
uw	generic/tclLink.c	/^	Tcl_WideUInt uw;$/;"	m	union:__anonfc2fcf730108::__anonfc2fcf73020a	typeref:typename:Tcl_WideUInt	file:
uwPtr	generic/tclLink.c	/^	Tcl_WideUInt *uwPtr;	\/* unsigned wide (long long) array *\/$/;"	m	union:__anonfc2fcf730108::__anonfc2fcf73020a	typeref:typename:Tcl_WideUInt *	file:
v	generic/regguts.h	/^    struct vars *v;		\/* for compile error reporting *\/$/;"	m	struct:colormap	typeref:struct:vars *
v	generic/regguts.h	/^    struct vars *v;		\/* simplifies compile error reporting *\/$/;"	m	struct:nfa	typeref:struct:vars *
v2TestListObjectType	generic/tclTestObj.c	/^static ObjectType v2TestListObjectType = {$/;"	v	typeref:typename:ObjectType	file:
v2TestListTypePtr	generic/tclTestObj.c	/^Tcl_ObjType *v2TestListTypePtr = (Tcl_ObjType *)&v2TestListObjectType;$/;"	v	typeref:typename:Tcl_ObjType *
v2UpdateString	generic/tclTestObj.c	/^void v2UpdateString(Tcl_Obj *objPtr) {$/;"	f	typeref:typename:void
v3TestListObjectType	generic/tclTestObj.c	/^static ObjectType v3TestListObjectType = {$/;"	v	typeref:typename:ObjectType	file:
v3TestListTypePtr	generic/tclTestObj.c	/^Tcl_ObjType *v3TestListTypePtr = (Tcl_ObjType *)&v3TestListObjectType;$/;"	v	typeref:typename:Tcl_ObjType *
vCopyList	generic/tclCmdAH.c	/^    Tcl_Obj **vCopyList;	\/* Copies of var name list arguments. *\/$/;"	m	struct:ForeachState	typeref:typename:Tcl_Obj **	file:
vInfo	generic/tclTest.c	/^    Tcl_ResolvedVarInfo vInfo;  \/* This must be the first element. *\/$/;"	m	struct:MyResolvedVarInfo	typeref:typename:Tcl_ResolvedVarInfo	file:
vWaitOptions	generic/tclEvent.c	/^    enum vWaitOptions {$/;"	g	function:Tcl_VwaitObjCmd	file:
val	compat/zlib/contrib/infback9/inftree9.h	/^    unsigned short val;         \/* offset in table or code value *\/$/;"	m	struct:__anon80eb2aca0108	typeref:typename:unsigned short
val	compat/zlib/contrib/iostream/zfstream.h	/^  T val;$/;"	m	class:gzomanip	typeref:typename:T
val	compat/zlib/contrib/iostream2/zstream.h	/^    struct Val { unsigned char byte; size_t word; } val;$/;"	m	class:zstringlen	typeref:struct:zstringlen::Val
val	compat/zlib/inftrees.h	/^    unsigned short val;         \/* offset in table or code value *\/$/;"	m	struct:__anon78703c4e0108	typeref:typename:unsigned short
val1	compat/zlib/contrib/iostream3/zfstream.h	/^    T1 val1;$/;"	m	class:gzomanip2	typeref:typename:T1
val2	compat/zlib/contrib/iostream3/zfstream.h	/^    T2 val2;$/;"	m	class:gzomanip2	typeref:typename:T2
valgrind	unix/Makefile.in	/^valgrind: ${TCL_EXE} ${TCLTEST_EXE}$/;"	t
valgrind_each	unix/Makefile.in	/^valgrind_each: $(addprefix testresults\/valgrind\/,$(addsuffix .success,$(notdir\\$/;"	t
valgrindshell	unix/Makefile.in	/^valgrindshell: ${TCL_EXE}$/;"	t
validMask	unix/tclUnixChan.c	/^    int validMask;		\/* OR'ed combination of TCL_READABLE,$/;"	m	struct:__anone1e2a72a0108	typeref:typename:int	file:
validMask	win/tclWinChan.c	/^    int validMask;		\/* OR'ed combination of TCL_READABLE,$/;"	m	struct:FileInfo	typeref:typename:int	file:
validMask	win/tclWinPipe.c	/^    int validMask;		\/* OR'ed combination of TCL_READABLE,$/;"	m	struct:PipeInfo	typeref:typename:int	file:
validMask	win/tclWinSerial.c	/^    int validMask;		\/* OR'ed combination of TCL_READABLE,$/;"	m	struct:SerialInfo	typeref:typename:int	file:
validMaxYear	generic/tclDate.h	/^    int validMaxYear;$/;"	m	struct:ClockClientData	typeref:typename:int
validMinYear	generic/tclDate.h	/^    int validMinYear;$/;"	m	struct:ClockClientData	typeref:typename:int
validate_memory	generic/tclCkalloc.c	/^static int validate_memory = FALSE;$/;"	v	typeref:typename:int	file:
validate_memory	generic/tclCkalloc.c	/^static int validate_memory = TRUE;$/;"	v	typeref:typename:int	file:
value	compat/zlib/contrib/iostream2/zstream.h	/^    size_t value() const { return val.word; }$/;"	f	class:zstringlen	typeref:typename:size_t
value	generic/tcl.h	/^	unsigned long value;$/;"	m	struct:Tcl_ObjInternalRep::__anon937aefea0608	typeref:typename:unsigned long
value	generic/tcl.h	/^    const char *value;		\/* The value associated with the key. System$/;"	m	struct:Tcl_Config	typeref:typename:const char *
value	generic/tclDTrace.d	/^	    unsigned long value;$/;"	m	struct:Tcl_Obj.__anon1.__anon3	file:
value	generic/tclDate.c	/^    int value;$/;"	m	struct:__anone8f8f7230108	typeref:typename:int	file:
value	generic/tclDateClassic.c	/^    time_t value;$/;"	m	struct:_TABLE	typeref:typename:time_t	file:
value	generic/tclEncoding.c	/^    int value;$/;"	m	struct:TclEncodingProfiles	typeref:typename:int	file:
value	generic/tclIORChan.c	/^    Tcl_DString *value;		\/* Result *\/$/;"	m	struct:ForwardParamGetOpt	typeref:typename:Tcl_DString *	file:
value	generic/tclIORChan.c	/^    const char *value;		\/* Value to set *\/$/;"	m	struct:ForwardParamSetOpt	typeref:typename:const char *	file:
value	generic/tclInt.h	/^    char *value;		\/* The global string value. *\/$/;"	m	struct:ProcessGlobalValue	typeref:typename:char *
value	generic/tclInt.h	/^    } value;$/;"	m	struct:Var	typeref:union:Var::__anon1eb6b355010a
value	generic/tclStrIdxTree.h	/^    void *value;$/;"	m	struct:TclStrIdx	typeref:typename:void *
value	generic/tclTest.c	/^    const char *value;$/;"	m	struct:TestCommandTokenRef	typeref:typename:const char *	file:
value	tools/tsdPerf.c	/^    Tcl_WideInt value;$/;"	m	struct:__anonbb88a94e0108	typeref:typename:Tcl_WideInt	file:
value	win/nmakehlp.c	/^    char * value;$/;"	m	struct:list_item_t	typeref:typename:char *	file:
valueVarObj	generic/tclDictObj.c	/^    Tcl_Obj *valueVarObj;	\/* The name of the variable that will have$/;"	m	struct:__anond8412d640108	typeref:typename:Tcl_Obj *	file:
values	generic/tclTestObjInterfaceInteger.c	/^    int values[1];$/;"	m	struct:ListInteger	typeref:typename:int[1]	file:
var	generic/tclInt.h	/^    Var var;			\/* "Inherit" from Var. *\/$/;"	m	struct:VarInHash	typeref:typename:Var
var	generic/tclTest.c	/^    Tcl_Var var;$/;"	m	struct:MyResolvedVarInfo	typeref:typename:Tcl_Var	file:
varFramePtr	generic/tclInt.h	/^    CallFrame *varFramePtr;	\/* Points to the call frame whose variables$/;"	m	struct:Interp	typeref:typename:CallFrame *
varFramePtr	generic/tclInt.h	/^    CallFrame *varFramePtr;	\/* See Interp.varFramePtr *\/$/;"	m	struct:CorContext	typeref:typename:CallFrame *
varIndexes	generic/tclCompile.h	/^    Tcl_Size varIndexes[TCLFLEXARRAY];$/;"	m	struct:ForeachVarList	typeref:typename:Tcl_Size[]
varIndices	generic/tclCompile.h	/^    Tcl_Size varIndices[TCLFLEXARRAY];$/;"	m	struct:__anone79d5a530708	typeref:typename:Tcl_Size[]
varLists	generic/tclCompile.h	/^    ForeachVarList *varLists[TCLFLEXARRAY];$/;"	m	struct:ForeachInfo	typeref:typename:ForeachVarList * []
varName	generic/tclLink.c	/^    Tcl_Obj *varName;		\/* Name of variable (must be global). This is$/;"	m	struct:__anonfc2fcf730108	typeref:typename:Tcl_Obj *	file:
varName0	generic/tclInt.h	/^    Tcl_Obj *varName0;		\/* First variable name. *\/$/;"	m	struct:LocalCache	typeref:typename:Tcl_Obj *
varPtr	generic/tclInt.h	/^    struct Var *varPtr;		\/* Variable that's being traced. *\/$/;"	m	struct:ActiveVarTrace	typeref:struct:Var *
varPtr	generic/tclVar.c	/^    struct Var *varPtr;		\/* Pointer to array variable that's being$/;"	m	struct:ArraySearch	typeref:struct:Var *	file:
varResProc	generic/tclInt.h	/^    Tcl_ResolveVarProc *varResProc;$/;"	m	struct:Namespace	typeref:typename:Tcl_ResolveVarProc *
varResProc	generic/tclInt.h	/^    Tcl_ResolveVarProc *varResProc;$/;"	m	struct:ResolverScheme	typeref:typename:Tcl_ResolveVarProc *
varResProc	generic/tclInt.h	/^    Tcl_ResolveVarProc *varResProc;$/;"	m	struct:Tcl_ResolverInfo	typeref:typename:Tcl_ResolveVarProc *
varSearches	generic/tclInt.h	/^    Tcl_HashTable varSearches;	\/* Hashtable holding the start of a variable's$/;"	m	struct:Interp	typeref:typename:Tcl_HashTable
varTable	generic/tclInt.h	/^    TclVarHashTable varTable;	\/* Contains all the (global) variables$/;"	m	struct:Namespace	typeref:typename:TclVarHashTable
varTablePtr	generic/tclInt.h	/^    TclVarHashTable *varTablePtr;$/;"	m	struct:CallFrame	typeref:typename:TclVarHashTable *
varTraces	generic/tclInt.h	/^    Tcl_HashTable varTraces;	\/* Hashtable holding the start of a variable's$/;"	m	struct:Interp	typeref:typename:Tcl_HashTable
varcList	generic/tclCmdAH.c	/^    Tcl_Size *varcList;		\/* # loop variables per list. *\/$/;"	m	struct:ForeachState	typeref:typename:Tcl_Size *	file:
variableObj	generic/tclOOInt.h	/^    Tcl_Obj *variableObj;	\/* Name used within methods. This is the part$/;"	m	struct:PrivateVariableMapping	typeref:typename:Tcl_Obj *
variableObj	generic/tclOOMethod.c	/^    Tcl_Obj *variableObj;	\/* The name of the variable. *\/$/;"	m	struct:OOResVarInfo	typeref:typename:Tcl_Obj *	file:
variables	generic/tclOOInt.h	/^    VariableNameList variables;$/;"	m	struct:Class	typeref:typename:VariableNameList
variables	generic/tclOOInt.h	/^    VariableNameList variables;$/;"	m	struct:Object	typeref:typename:VariableNameList
vars	generic/regcomp.c	/^struct vars {$/;"	s	file:
vars	generic/regexec.c	/^struct vars {$/;"	s	file:
varvList	generic/tclCmdAH.c	/^    Tcl_Obj ***varvList;	\/* Array of var name lists. *\/$/;"	m	struct:ForeachState	typeref:typename:Tcl_Obj ***	file:
vec	compat/zlib/examples/enough.c	/^    char *vec;              \/\/ allocated bit vector$/;"	m	struct:tab	typeref:typename:char *	file:
verbose	compat/zlib/zutil.c	/^#    define verbose /;"	d	file:
version	compat/zlib/contrib/minizip/unzip.h	/^    uLong version;              \/* version made by                 2 bytes *\/$/;"	m	struct:unz_file_info64_s	typeref:typename:uLong
version	compat/zlib/contrib/minizip/unzip.h	/^    uLong version;              \/* version made by                 2 bytes *\/$/;"	m	struct:unz_file_info_s	typeref:typename:uLong
version	compat/zlib/contrib/untgz/untgz.c	/^  char version[2];              \/* 263 *\/$/;"	m	struct:tar_header	typeref:typename:char[2]	file:
version	generic/tcl.h	/^    Tcl_ChannelTypeVersion version;$/;"	m	struct:Tcl_ChannelType	typeref:typename:Tcl_ChannelTypeVersion
version	generic/tcl.h	/^    Tcl_FSVersion version;	\/* Version of the filesystem type. *\/$/;"	m	struct:Tcl_Filesystem	typeref:typename:Tcl_FSVersion
version	generic/tcl.h	/^    int version;		\/* Version of the table. If this structure is$/;"	m	struct:Tcl_HashKeyType	typeref:typename:int
version	generic/tcl.h	/^    size_t version;		\/* Version field for future-proofing. *\/$/;"	m	struct:Tcl_ObjType	typeref:typename:size_t
version	generic/tclEvent.c	/^    const char version[256];$/;"	m	struct:__anon850510a70408	typeref:typename:const char[256]	file:
version	generic/tclInt.h	/^    int *version;$/;"	m	struct:TclObjectTypeType	typeref:typename:int *
version	generic/tclInt.h	/^    int version;$/;"	m	struct:ObjInterface	typeref:typename:int
version	generic/tclInt.h	/^    int version;$/;"	m	struct:ObjectType	typeref:typename:int
version	generic/tclOO.h	/^    int version;		\/* Structure version field. Always to be equal$/;"	m	struct:Tcl_MethodType	typeref:typename:int
version	generic/tclOO.h	/^    int version;		\/* Structure version field. Always to be equal$/;"	m	struct:Tcl_MethodType2	typeref:typename:int
version	generic/tclOO.h	/^    int version;		\/* Structure version field. Always to be equal$/;"	m	struct:Tcl_ObjectMetadataType	typeref:typename:int
version	generic/tclOOInt.h	/^    int version;		\/* Version of this structure. Currently must$/;"	m	struct:ProcedureMethod	typeref:typename:int
version	generic/tclPkg.c	/^    Tcl_Obj *version;$/;"	m	struct:__anon1f3382670108	typeref:typename:Tcl_Obj *	file:
version	generic/tclPkg.c	/^    char *version;		\/* Version string; malloc'ed. *\/$/;"	m	struct:PkgAvail	typeref:typename:char *	file:
version	generic/tclTest.c	/^static const char version[] = TCL_PATCH_LEVEL "+" STRINGIFY(TCL_VERSION_UUID)$/;"	v	typeref:typename:const char[]	file:
versionToProvide	generic/tclPkg.c	/^    char *versionToProvide;$/;"	m	struct:Require	typeref:typename:char *	file:
version_needed	compat/zlib/contrib/minizip/unzip.h	/^    uLong version_needed;       \/* version needed to extract       2 bytes *\/$/;"	m	struct:unz_file_info64_s	typeref:typename:uLong
version_needed	compat/zlib/contrib/minizip/unzip.h	/^    uLong version_needed;       \/* version needed to extract       2 bytes *\/$/;"	m	struct:unz_file_info_s	typeref:typename:uLong
voidp	compat/zlib/zconf.h	/^   typedef Byte       *voidp;$/;"	t	typeref:typename:Byte *
voidp	compat/zlib/zconf.h	/^   typedef void       *voidp;$/;"	t	typeref:typename:void *
voidp	compat/zlib/zconf.h	/^#  define voidp                 z_voidp$/;"	d
voidp	compat/zlib/zconf.h.in	/^   typedef Byte       *voidp;$/;"	t	typeref:typename:Byte *	file:
voidp	compat/zlib/zconf.h.in	/^   typedef void       *voidp;$/;"	t	typeref:typename:void *	file:
voidp	compat/zlib/zconf.h.in	/^#  define voidp                 z_voidp$/;"	d	file:
voidpc	compat/zlib/zconf.h	/^   typedef Byte const *voidpc;$/;"	t	typeref:typename:Byte const *
voidpc	compat/zlib/zconf.h	/^   typedef void const *voidpc;$/;"	t	typeref:typename:void const *
voidpc	compat/zlib/zconf.h	/^#  define voidpc                z_voidpc$/;"	d
voidpc	compat/zlib/zconf.h.in	/^   typedef Byte const *voidpc;$/;"	t	typeref:typename:Byte const *	file:
voidpc	compat/zlib/zconf.h.in	/^   typedef void const *voidpc;$/;"	t	typeref:typename:void const *	file:
voidpc	compat/zlib/zconf.h.in	/^#  define voidpc                z_voidpc$/;"	d	file:
voidpf	compat/zlib/zconf.h	/^   typedef Byte FAR   *voidpf;$/;"	t	typeref:typename:Byte FAR *
voidpf	compat/zlib/zconf.h	/^   typedef void FAR   *voidpf;$/;"	t	typeref:typename:void FAR *
voidpf	compat/zlib/zconf.h	/^#  define voidpf                z_voidpf$/;"	d
voidpf	compat/zlib/zconf.h.in	/^   typedef Byte FAR   *voidpf;$/;"	t	typeref:typename:Byte FAR *	file:
voidpf	compat/zlib/zconf.h.in	/^   typedef void FAR   *voidpf;$/;"	t	typeref:typename:void FAR *	file:
voidpf	compat/zlib/zconf.h.in	/^#  define voidpf                z_voidpf$/;"	d	file:
volumeName	win/tclWin32Dll.c	/^    WCHAR *volumeName;		\/* Native wide string volume name. *\/$/;"	m	struct:MountPointMap	typeref:typename:WCHAR *	file:
vsnprintf	compat/zlib/gzguts.h	/^#         define vsnprintf _vsnprintf$/;"	d
vsnprintf	generic/tclInt.h	/^#   define vsnprintf _vsnprintf$/;"	d
w	generic/tclLink.c	/^	Tcl_WideInt w;$/;"	m	union:__anonfc2fcf730108::__anonfc2fcf73020a	typeref:typename:Tcl_WideInt	file:
w	generic/tclStrToD.c	/^    } w;$/;"	m	union:Double	typeref:struct:Double::__anon93c67ca50108	file:
wParam	unix/tclSelectNotfy.c	/^    size_t wParam;		\/* Event-specific "word" parameter. *\/$/;"	m	struct:__anon69aa703c0308	typeref:typename:size_t	file:
wProcessorArchitecture	unix/tclUnixInit.c	/^	    int wProcessorArchitecture;$/;"	m	struct:__anonf052aa840108::__anonf052aa84020a::__anonf052aa840308	typeref:typename:int	file:
wProcessorArchitecture	win/tclWinInit.c	/^    WORD wProcessorArchitecture;$/;"	m	struct:__anon2388ba180108	typeref:typename:WORD	file:
wProcessorLevel	unix/tclUnixInit.c	/^    int wProcessorLevel;$/;"	m	struct:__anonf052aa840108	typeref:typename:int	file:
wProcessorRevision	unix/tclUnixInit.c	/^    int wProcessorRevision;$/;"	m	struct:__anonf052aa840108	typeref:typename:int	file:
wPtr	generic/tclLink.c	/^	Tcl_WideInt *wPtr;	\/* wide (long long) array *\/$/;"	m	union:__anonfc2fcf730108::__anonfc2fcf73020a	typeref:typename:Tcl_WideInt *	file:
wReserved	unix/tclUnixInit.c	/^	    int wReserved;$/;"	m	struct:__anonf052aa840108::__anonf052aa84020a::__anonf052aa840308	typeref:typename:int	file:
wReserved	win/tclWinInit.c	/^    WORD wReserved;$/;"	m	struct:__anon2388ba180108	typeref:typename:WORD	file:
w_bits	compat/zlib/deflate.h	/^    uInt  w_bits;        \/* log2(w_size)  (8..16) *\/$/;"	m	struct:internal_state	typeref:typename:uInt
w_mask	compat/zlib/deflate.h	/^    uInt  w_mask;        \/* w_size - 1 *\/$/;"	m	struct:internal_state	typeref:typename:uInt
w_size	compat/zlib/deflate.h	/^    uInt  w_size;        \/* LZ77 window size (32K by default) *\/$/;"	m	struct:internal_state	typeref:typename:uInt
waitCV	unix/tclSelectNotfy.c	/^    pthread_cond_t waitCV;	\/* Any other thread alerts a notifier that an$/;"	m	struct:ThreadSpecificData	typeref:typename:pthread_cond_t	file:
waitCVinitialized	unix/tclSelectNotfy.c	/^    int waitCVinitialized;	\/* Variable to flag initialization of the$/;"	m	struct:ThreadSpecificData	typeref:typename:int	file:
waitForEventProc	generic/tcl.h	/^    Tcl_WaitForEventProc *waitForEventProc;$/;"	m	struct:Tcl_NotifierProcs	typeref:typename:Tcl_WaitForEventProc *
waitTime	macosx/tclMacOSXNotify.c	/^    CFTimeInterval waitTime;	\/* runLoopTimer wait time when running$/;"	m	struct:ThreadSpecificData	typeref:typename:CFTimeInterval	file:
waitedUpon	generic/tclThreadJoin.c	/^    int waitedUpon;		\/* Boolean flag. Initialized to 0 and set to 1$/;"	m	struct:JoinableThread	typeref:typename:int	file:
waiters	generic/tclZipfs.c	/^    int waiters;		\/* RW lock, see below *\/$/;"	m	struct:ZipFSGlobals	typeref:typename:int	file:
waitingListPtr	macosx/tclMacOSXNotify.c	/^static ThreadSpecificData *waitingListPtr = NULL;$/;"	v	typeref:typename:ThreadSpecificData *	file:
waitingListPtr	unix/tclSelectNotfy.c	/^static ThreadSpecificData *waitingListPtr = NULL;$/;"	v	typeref:typename:ThreadSpecificData *	file:
waitpid	compat/waitpid.c	/^waitpid($/;"	f	typeref:typename:pid_t
waitpid.o	unix/Makefile.in	/^waitpid.o: $(COMPAT_DIR)\/waitpid.c$/;"	t
want	compat/zlib/gzguts.h	/^    unsigned want;          \/* requested buffer size, default is GZBUFSIZE *\/$/;"	m	struct:__anon361a15920108	typeref:typename:unsigned
warn	tests-perf/comparePerf.tcl	/^proc perf::compare::warn {message} {$/;"	p	namespace:perf::compare
warn	tools/ucm2tests.tcl	/^proc ucm::warn {msg} {$/;"	p	namespace:ucm
was	compat/zlib/inflate.h	/^    unsigned was;               \/* initial length of match *\/$/;"	m	struct:inflate_state	typeref:typename:unsigned
was	generic/tclClock.c	/^    WCHAR *was;			\/* Previous value of TZ. *\/$/;"	m	struct:ClockTzStatic	typeref:typename:WCHAR *	file:
watch	generic/tclIORChan.c	/^    struct ForwardParamWatch watch;$/;"	m	union:ForwardParam	typeref:struct:ForwardParamWatch	file:
watchEvents	win/tclWinSock.c	/^    int watchEvents;		\/* OR'ed combination of FD_READ, FD_WRITE,$/;"	m	struct:TcpState	typeref:typename:int	file:
watchMask	generic/tclIOGT.c	/^    int watchMask;		\/* Current watch\/event\/interest mask. *\/$/;"	m	struct:TransformChannelData	typeref:typename:int	file:
watchMask	win/tclWinChan.c	/^    int watchMask;		\/* OR'ed combination of TCL_READABLE,$/;"	m	struct:FileInfo	typeref:typename:int	file:
watchMask	win/tclWinConsole.c	/^    int watchMask;		\/* OR'ed combination of TCL_READABLE,$/;"	m	struct:ConsoleChannelInfo	typeref:typename:int	file:
watchMask	win/tclWinPipe.c	/^    int watchMask;		\/* OR'ed combination of TCL_READABLE,$/;"	m	struct:PipeInfo	typeref:typename:int	file:
watchMask	win/tclWinSerial.c	/^    int watchMask;		\/* OR'ed combination of TCL_READABLE,$/;"	m	struct:SerialInfo	typeref:typename:int	file:
watchProc	generic/tcl.h	/^    Tcl_DriverWatchProc *watchProc;$/;"	m	struct:Tcl_ChannelType	typeref:typename:Tcl_DriverWatchProc *
wbits	compat/zlib/inflate.h	/^    unsigned wbits;             \/* log base 2 of requested window size *\/$/;"	m	struct:inflate_state	typeref:typename:unsigned
wbits	generic/tclZlib.c	/^    int wbits;			\/* The encoded compression mode, so we can$/;"	m	struct:__anon1d0b6d960208	typeref:typename:int	file:
wcscmp	generic/tclClock.c	/^#define wcscmp /;"	d	file:
wcscmp	generic/tclClockClassic.c	/^#define wcscmp /;"	d	file:
wcscpy	generic/tclClock.c	/^#define wcscpy /;"	d	file:
wcscpy	generic/tclClockClassic.c	/^#define wcscpy /;"	d	file:
wcslen	generic/tclClock.c	/^#define wcslen /;"	d	file:
wcslen	generic/tclClockClassic.c	/^#define wcslen /;"	d	file:
whave	compat/zlib/inflate.h	/^    unsigned whave;             \/* valid bytes in the window *\/$/;"	m	struct:inflate_state	typeref:typename:unsigned
wideClick	win/tclWinTime.c	/^} wideClick = {0, 0, 0.0};$/;"	v	typeref:struct:__anon3cd8f0330208
wideSeekProc	generic/tcl.h	/^    Tcl_DriverWideSeekProc *wideSeekProc;$/;"	m	struct:Tcl_ChannelType	typeref:typename:Tcl_DriverWideSeekProc *
wideValue	generic/tcl.h	/^    Tcl_WideInt wideValue;	\/*   - an integer value >= 64bits *\/$/;"	m	union:Tcl_ObjInternalRep	typeref:typename:Tcl_WideInt
wideValue	generic/tclCmdIL.c	/^	Tcl_WideInt wideValue;$/;"	m	union:SortElement::__anond5eb1cce010a	typeref:typename:Tcl_WideInt	file:
wideValue	generic/tclDTrace.d	/^	int64_t wideValue;$/;"	m	union:Tcl_Obj.__anon1	file:
width	generic/tclDate.h	/^    unsigned short width;$/;"	m	struct:ClockFormatTokenMap	typeref:typename:unsigned short
win32_build_iowin	compat/zlib/contrib/minizip/iowin32.c	/^static voidpf win32_build_iowin(HANDLE hFile) {$/;"	f	typeref:typename:voidpf	file:
win32_close_file_func	compat/zlib/contrib/minizip/iowin32.c	/^int ZCALLBACK win32_close_file_func(voidpf opaque, voidpf stream) {$/;"	f	typeref:typename:int ZCALLBACK
win32_error_file_func	compat/zlib/contrib/minizip/iowin32.c	/^int ZCALLBACK win32_error_file_func(voidpf opaque, voidpf stream) {$/;"	f	typeref:typename:int ZCALLBACK
win32_open64_file_func	compat/zlib/contrib/minizip/iowin32.c	/^voidpf ZCALLBACK win32_open64_file_func(voidpf opaque, const void* filename, int mode) {$/;"	f	typeref:typename:voidpf ZCALLBACK
win32_open64_file_funcA	compat/zlib/contrib/minizip/iowin32.c	/^voidpf ZCALLBACK win32_open64_file_funcA(voidpf opaque, const void* filename, int mode) {$/;"	f	typeref:typename:voidpf ZCALLBACK
win32_open64_file_funcW	compat/zlib/contrib/minizip/iowin32.c	/^voidpf ZCALLBACK win32_open64_file_funcW(voidpf opaque, const void* filename, int mode) {$/;"	f	typeref:typename:voidpf ZCALLBACK
win32_open_file_func	compat/zlib/contrib/minizip/iowin32.c	/^voidpf ZCALLBACK win32_open_file_func(voidpf opaque, const char* filename, int mode) {$/;"	f	typeref:typename:voidpf ZCALLBACK
win32_read_file_func	compat/zlib/contrib/minizip/iowin32.c	/^uLong ZCALLBACK win32_read_file_func(voidpf opaque, voidpf stream, void* buf,uLong size) {$/;"	f	typeref:typename:uLong ZCALLBACK
win32_seek64_file_func	compat/zlib/contrib/minizip/iowin32.c	/^long ZCALLBACK win32_seek64_file_func(voidpf opaque, voidpf stream, ZPOS64_T offset, int origin)/;"	f	typeref:typename:long ZCALLBACK
win32_seek_file_func	compat/zlib/contrib/minizip/iowin32.c	/^long ZCALLBACK win32_seek_file_func(voidpf opaque, voidpf stream, uLong offset, int origin) {$/;"	f	typeref:typename:long ZCALLBACK
win32_tell64_file_func	compat/zlib/contrib/minizip/iowin32.c	/^ZPOS64_T ZCALLBACK win32_tell64_file_func(voidpf opaque, voidpf stream) {$/;"	f	typeref:typename:ZPOS64_T ZCALLBACK
win32_tell_file_func	compat/zlib/contrib/minizip/iowin32.c	/^long ZCALLBACK win32_tell_file_func(voidpf opaque, voidpf stream) {$/;"	f	typeref:typename:long ZCALLBACK
win32_translate_open_mode	compat/zlib/contrib/minizip/iowin32.c	/^static void win32_translate_open_mode(int mode,$/;"	f	typeref:typename:void	file:
win32_write_file_func	compat/zlib/contrib/minizip/iowin32.c	/^uLong ZCALLBACK win32_write_file_func(voidpf opaque, voidpf stream, const void* buf, uLong size)/;"	f	typeref:typename:uLong ZCALLBACK
winPathFromObj	unix/tclUnixFCmd.c	/^winPathFromObj($/;"	f	typeref:typename:WCHAR *	file:
window	compat/zlib/contrib/asm686/match.S	/^#define	window			4	\/* local copy of s->window	/;"	d	file:
window	compat/zlib/contrib/infback9/inflate9.h	/^    unsigned char FAR *window;  \/* allocated sliding window, if needed *\/$/;"	m	struct:inflate_state	typeref:typename:unsigned char FAR *
window	compat/zlib/contrib/inflate86/inffas86.c	/^\/* 56   28 *\/ unsigned char FAR *window;\/*          size of window, wsize!=0 *\/$/;"	m	struct:inflate_fast::inffast_ar	typeref:typename:unsigned char FAR *	file:
window	compat/zlib/deflate.h	/^    Bytef *window;$/;"	m	struct:internal_state	typeref:typename:Bytef *
window	compat/zlib/examples/zran.h	/^    unsigned char window[32768];    \/\/ preceding 32K of uncompressed data$/;"	m	struct:point	typeref:typename:unsigned char[32768]
window	compat/zlib/inflate.h	/^    unsigned char FAR *window;  \/* allocated sliding window, if needed *\/$/;"	m	struct:inflate_state	typeref:typename:unsigned char FAR *
windowClass	win/tclWinSock.c	/^static WNDCLASSW windowClass;$/;"	v	typeref:typename:WNDCLASSW	file:
window_ad	compat/zlib/contrib/gcc_gvmat64/gvmat64.S	/^#define window_ad /;"	d	file:
window_size	compat/zlib/contrib/gcc_gvmat64/gvmat64.S	/^#define window_size /;"	d	file:
window_size	compat/zlib/deflate.h	/^    ulg window_size;$/;"	m	struct:internal_state	typeref:typename:ulg
windowbestlen	compat/zlib/contrib/asm686/match.S	/^#define	windowbestlen	/;"	d	file:
winextensions	win/Makefile.in	/^winextensions: ${DDE_DLL_FILE} ${REG_DLL_FILE}$/;"	t
wish	doc/StdChannels.3	/^.SS wish$/;"	S	section:Standard Channels""SHELL-SPECIFIC DETAILS
wlock	win/tclWinThrd.c	/^    CRITICAL_SECTION wlock;$/;"	m	struct:__anon3cc991560208	typeref:typename:CRITICAL_SECTION	file:
wnext	compat/zlib/inflate.h	/^    unsigned wnext;             \/* window write index *\/$/;"	m	struct:inflate_state	typeref:typename:unsigned
word	compat/zlib/contrib/iostream2/zstream.h	/^    struct Val { unsigned char byte; size_t word; } val;$/;"	m	struct:zstringlen::Val	typeref:typename:size_t
word	generic/regcomp.c	/^word($/;"	f	typeref:typename:void	file:
word	generic/tclInt.h	/^    Tcl_Size word;		\/* Index of the body script in the command *\/$/;"	m	struct:ForIterData	typeref:typename:Tcl_Size
word	generic/tclInt.h	/^    Tcl_Size word;		\/* Index of the word in the command. *\/$/;"	m	struct:CFWord	typeref:typename:Tcl_Size
word	generic/tclInt.h	/^    Tcl_Size word;		\/* Index of word in$/;"	m	struct:CFWordBC	typeref:typename:Tcl_Size
word0	generic/tclStrToD.c	/^	int word0;$/;"	m	struct:Double::__anon93c67ca50108	typeref:typename:int	file:
word1	generic/tclStrToD.c	/^	int word1;$/;"	m	struct:Double::__anon93c67ca50108	typeref:typename:int	file:
wordSkip	generic/tclExecute.c	/^wordSkip($/;"	f	typeref:typename:int	file:
wordchrs	generic/regcomp.c	/^    struct state *wordchrs;	\/* state in nfa holding word-char outarcs *\/$/;"	m	struct:vars	typeref:struct:state *	file:
wordchrs	generic/regcomp.c	/^wordchrs($/;"	f	typeref:typename:void	file:
words	generic/tcl.h	/^	int words[1];		\/* Multiple integer words for key. The actual$/;"	m	union:Tcl_HashEntry::__anon937aefea080a	typeref:typename:int[1]
wordsper	generic/regexec.c	/^    size_t wordsper;		\/* length of state-set bitvectors *\/$/;"	m	struct:dfa	typeref:typename:size_t	file:
work	compat/zlib/contrib/infback9/inflate9.h	/^    unsigned short work[288];   \/* work area for code table building *\/$/;"	m	struct:inflate_state	typeref:typename:unsigned short[288]
work	compat/zlib/inflate.h	/^    unsigned short work[288];   \/* work area for code table building *\/$/;"	m	struct:inflate_state	typeref:typename:unsigned short[288]
work	generic/regexec.c	/^    unsigned *work;		\/* pointer to work area within statesarea *\/$/;"	m	struct:dfa	typeref:typename:unsigned *	file:
wrap	compat/zlib/deflate.h	/^    int   wrap;          \/* bit 0 true for zlib, bit 1 true for gzip *\/$/;"	m	struct:internal_state	typeref:typename:int
wrap	compat/zlib/inflate.h	/^    int wrap;                   \/* bit 0 true for zlib, bit 1 true for gzip,$/;"	m	struct:inflate_state	typeref:typename:int
wrapperNRObjProc	generic/tclBasic.c	/^wrapperNRObjProc($/;"	f	typeref:typename:int	file:
writable	generic/tclOOInt.h	/^    PropertyList writable;	\/* The writable properties slot. *\/$/;"	m	struct:PropertyStorage	typeref:typename:PropertyList
writable	macosx/tclMacOSXNotify.c	/^    fd_set writable;$/;"	m	struct:__anon0dc3d9d70208	typeref:typename:fd_set	file:
writable	unix/tclSelectNotfy.c	/^    fd_set writable;$/;"	m	struct:__anon69aa703c0108	typeref:typename:fd_set	file:
writable	win/tclWinPipe.c	/^    HANDLE writable;		\/* Manual-reset event to signal when the$/;"	m	struct:PipeInfo	typeref:typename:HANDLE	file:
writable	win/tclWinSerial.c	/^    int writable;		\/* Flag that the channel is writable. *\/$/;"	m	struct:SerialInfo	typeref:typename:int	file:
write	compat/zlib/contrib/inflate86/inffas86.c	/^\/* 96   52 *\/ unsigned write;           \/*          window write index *\/$/;"	m	struct:inflate_fast::inffast_ar	typeref:typename:unsigned	file:
write	compat/zlib/contrib/iostream2/zstream.h	/^        int write(const void* buf, size_t len) {$/;"	f	class:ozstream	typeref:typename:int
write	compat/zlib/contrib/iostream2/zstream.h	/^inline int write(ozstream& zs, const T* x, Items items) {$/;"	f	typeref:typename:int
write	compat/zlib/gzguts.h	/^#  define write _write$/;"	d
write	compat/zlib/test/minigzip.c	/^    int write;$/;"	m	struct:gzFile_s	typeref:typename:int	file:
write	unix/tclXtNotify.c	/^    XtInputId write;		\/* Xt write callback handle. *\/$/;"	m	struct:FileHandler	typeref:typename:XtInputId	file:
writeBuf	win/tclWinPipe.c	/^    char *writeBuf;		\/* Current background output buffer. Access is$/;"	m	struct:PipeInfo	typeref:typename:char *	file:
writeBuf	win/tclWinSerial.c	/^    char *writeBuf;		\/* Current background output buffer. Access is$/;"	m	struct:SerialInfo	typeref:typename:char *	file:
writeBufLen	win/tclWinPipe.c	/^    int writeBufLen;		\/* Size of write buffer. Access is$/;"	m	struct:PipeInfo	typeref:typename:int	file:
writeBufLen	win/tclWinSerial.c	/^    int writeBufLen;		\/* Size of write buffer. Access is$/;"	m	struct:SerialInfo	typeref:typename:int	file:
writeCount	unix/tclUnixTest.c	/^    int writeCount;		\/* Number of times the file handler for this$/;"	m	struct:__anon095e08b00108	typeref:typename:int	file:
writeError	win/tclWinPipe.c	/^    DWORD writeError;		\/* An error caused by the last background$/;"	m	struct:PipeInfo	typeref:typename:DWORD	file:
writeError	win/tclWinSerial.c	/^    DWORD writeError;		\/* An error caused by the last background$/;"	m	struct:SerialInfo	typeref:typename:DWORD	file:
writeFile	library/writefile.tcl	/^proc writeFile {args} {$/;"	p
writeFile	unix/tclUnixTest.c	/^    TclFile writeFile;		\/* File handle for writing from the pipe. *\/$/;"	m	struct:__anon095e08b00108	typeref:typename:TclFile	file:
writeFile	win/tclWinPipe.c	/^    TclFile writeFile;		\/* Input from pipe. *\/$/;"	m	struct:PipeInfo	typeref:typename:TclFile	file:
writeFlags	generic/tclIO.c	/^    int writeFlags;		\/* Original write channel flags. *\/$/;"	m	struct:CopyState	typeref:typename:int	file:
writeLinks	tools/tclZIC.tcl	/^proc writeLinks {outDir} {$/;"	p
writeOutputFile	tools/regexpTestLib.tcl	/^proc writeOutputFile {numLines fcn} {$/;"	p
writePtr	generic/tclIO.c	/^    struct Channel *writePtr;	\/* Pointer to output channel. *\/$/;"	m	struct:CopyState	typeref:struct:Channel *	file:
writeQueue	win/tclWinSerial.c	/^    int writeQueue;		\/* Number of bytes pending in output queue.$/;"	m	struct:SerialInfo	typeref:typename:int	file:
writeTI	win/tclWinPipe.c	/^    TclPipeThreadInfo *writeTI;	\/* Thread info of writer and reader, this *\/$/;"	m	struct:PipeInfo	typeref:typename:TclPipeThreadInfo *	file:
writeTI	win/tclWinSerial.c	/^    TclPipeThreadInfo *writeTI;	\/* Thread info structure of writer worker. *\/$/;"	m	struct:SerialInfo	typeref:typename:TclPipeThreadInfo *	file:
writeThread	win/tclWinPipe.c	/^    HANDLE writeThread;		\/* Handle to writer thread. *\/$/;"	m	struct:PipeInfo	typeref:typename:HANDLE	file:
writeThread	win/tclWinSerial.c	/^    HANDLE writeThread;		\/* Handle to writer thread. *\/$/;"	m	struct:SerialInfo	typeref:typename:HANDLE	file:
writeTimer	generic/tclIORChan.c	/^    Tcl_TimerToken writeTimer;  \/* A token for the timer that is scheduled in$/;"	m	struct:__anon92d8dd290108	typeref:typename:Tcl_TimerToken	file:
writeZones	tools/tclZIC.tcl	/^proc writeZones {outDir} {$/;"	p
write_file_func	compat/zlib/contrib/minizip/ioapi.h	/^typedef uLong    (ZCALLBACK *write_file_func)     (voidpf opaque, voidpf stream, const void* buf/;"	t	typeref:typename:uLong (ZCALLBACK *)(voidpf opaque,voidpf stream,const void * buf,uLong size)
write_table	compat/zlib/crc32.c	/^local void write_table(FILE *out, const z_crc_t FAR *table, int k) {$/;"	f	typeref:typename:local void
write_table32hi	compat/zlib/crc32.c	/^local void write_table32hi(FILE *out, const z_word_t FAR *table, int k) {$/;"	f	typeref:typename:local void
write_table64	compat/zlib/crc32.c	/^local void write_table64(FILE *out, const z_word_t FAR *table, int k) {$/;"	f	typeref:typename:local void
wrmax	generic/tclZipfs.c	/^    int wrmax;			\/* Maximum write size of a file; only written$/;"	m	struct:ZipFSGlobals	typeref:typename:int	file:
wsaErrorTable	win/tclWinError.c	/^static const unsigned char wsaErrorTable[] = {$/;"	v	typeref:typename:const unsigned char[]	file:
wsize	compat/zlib/contrib/inflate86/inffas86.c	/^\/* 92   48 *\/ unsigned wsize;           \/*          window size *\/$/;"	m	struct:inflate_fast::inffast_ar	typeref:typename:unsigned	file:
wsize	compat/zlib/inflate.h	/^    unsigned wsize;             \/* window size or zero if not using window *\/$/;"	m	struct:inflate_state	typeref:typename:unsigned
wuipow5	generic/tclStrToD.c	/^static const Tcl_WideUInt wuipow5[] = {$/;"	v	typeref:typename:const Tcl_WideUInt[]	file:
x	compat/zlib/gzguts.h	/^    struct gzFile_s x;      \/* "x" for exposed *\/$/;"	m	struct:__anon361a15920108	typeref:struct:gzFile_s
x	unix/tclSelectNotfy.c	/^    int x;			\/* Event location (where meaningful). *\/$/;"	m	struct:__anon69aa703c0308	typeref:typename:int	file:
x2n_table	compat/zlib/crc32.c	/^   local z_crc_t FAR x2n_table[32];$/;"	v	typeref:typename:local z_crc_t FAR[32]
x2n_table	compat/zlib/crc32.h	/^local const z_crc_t FAR x2n_table[] = {$/;"	v	typeref:typename:local const z_crc_t FAR[]
x2nmodp	compat/zlib/crc32.c	/^local z_crc_t x2nmodp(z_off64_t n, unsigned k) {$/;"	f	typeref:typename:local z_crc_t
xflags	compat/zlib/zlib.h	/^    int     xflags;     \/* extra flags (not used when writing a gzip file) *\/$/;"	m	struct:gz_header_s	typeref:typename:int
xtTestInit.o	unix/Makefile.in	/^xtTestInit.o: $(UNIX_DIR)\/tclAppInit.c ${TCL_EXE}$/;"	t
xttest	unix/Makefile.in	/^xttest:	${XTTEST_OBJS} ${TCL_LIB_FILE} ${TCL_STUB_LIB_FILE} ${BUILD_DLTEST}$/;"	t
y	unix/tclSelectNotfy.c	/^    int y;$/;"	m	struct:__anon69aa703c0308	typeref:typename:int	file:
year	generic/tclClockClassic.c	/^    int year;			\/* Year of the era *\/$/;"	m	struct:__anondf8925f30208	typeref:typename:int	file:
year	generic/tclDate.h	/^    int year;			\/* Year of the era *\/$/;"	m	struct:TclDateFields	typeref:typename:int
yearOfCenturySwitch	generic/tclDate.h	/^    int yearOfCenturySwitch;$/;"	m	struct:ClockClientData	typeref:typename:int
yieldPtr	generic/tclInt.h	/^    Tcl_Obj *yieldPtr;		\/* The command to yield to.  Stored here in$/;"	m	struct:CoroutineData	typeref:typename:Tcl_Obj *
yyDSTmode	generic/tclDate.h	/^#define yyDSTmode /;"	d
yyDSTmode	generic/tclDateClassic.c	/^#define yyDSTmode	/;"	d	file:
yyDay	generic/tclDate.h	/^#define yyDay	/;"	d
yyDay	generic/tclDateClassic.c	/^#define yyDay	/;"	d	file:
yyDayNumber	generic/tclDateClassic.c	/^#define yyDayNumber	/;"	d	file:
yyDayOfWeek	generic/tclDate.h	/^#define yyDayOfWeek /;"	d
yyDayOrdinal	generic/tclDate.h	/^#define yyDayOrdinal	/;"	d
yyDayOrdinal	generic/tclDateClassic.c	/^#define yyDayOrdinal	/;"	d	file:
yyDigitCount	generic/tclDate.h	/^#define yyDigitCount	/;"	d
yyDigitCount	generic/tclDateClassic.c	/^#define yyDigitCount	/;"	d	file:
yyHaveDate	generic/tclDateClassic.c	/^#define yyHaveDate	/;"	d	file:
yyHaveDay	generic/tclDateClassic.c	/^#define yyHaveDay	/;"	d	file:
yyHaveOrdinalMonth	generic/tclDateClassic.c	/^#define yyHaveOrdinalMonth /;"	d	file:
yyHaveRel	generic/tclDateClassic.c	/^#define yyHaveRel	/;"	d	file:
yyHaveTime	generic/tclDateClassic.c	/^#define yyHaveTime	/;"	d	file:
yyHaveZone	generic/tclDateClassic.c	/^#define yyHaveZone	/;"	d	file:
yyHour	generic/tclDate.h	/^#define yyHour	/;"	d
yyHour	generic/tclDateClassic.c	/^#define yyHour	/;"	d	file:
yyIncrFlags	generic/tclDate.c	/^#define yyIncrFlags(/;"	d	file:
yyInput	generic/tclDate.h	/^#define yyInput	/;"	d
yyInput	generic/tclDateClassic.c	/^#define yyInput	/;"	d	file:
yyMeridian	generic/tclDate.h	/^#define yyMeridian /;"	d
yyMeridian	generic/tclDateClassic.c	/^#define yyMeridian	/;"	d	file:
yyMinutes	generic/tclDate.h	/^#define yyMinutes /;"	d
yyMinutes	generic/tclDateClassic.c	/^#define yyMinutes	/;"	d	file:
yyMonth	generic/tclDate.h	/^#define yyMonth	/;"	d
yyMonth	generic/tclDateClassic.c	/^#define yyMonth	/;"	d	file:
yyMonthOrdinal	generic/tclDate.h	/^#define yyMonthOrdinal	/;"	d
yyMonthOrdinal	generic/tclDateClassic.c	/^#define yyMonthOrdinal	/;"	d	file:
yyMonthOrdinalIncr	generic/tclDate.h	/^#define yyMonthOrdinalIncr /;"	d
yyRelDay	generic/tclDate.h	/^#define yyRelDay /;"	d
yyRelDay	generic/tclDateClassic.c	/^#define yyRelDay	/;"	d	file:
yyRelMonth	generic/tclDate.h	/^#define yyRelMonth /;"	d
yyRelMonth	generic/tclDateClassic.c	/^#define yyRelMonth	/;"	d	file:
yyRelPointer	generic/tclDate.h	/^#define yyRelPointer	/;"	d
yyRelPointer	generic/tclDateClassic.c	/^#define yyRelPointer	/;"	d	file:
yyRelSeconds	generic/tclDate.h	/^#define yyRelSeconds	/;"	d
yyRelSeconds	generic/tclDateClassic.c	/^#define yyRelSeconds	/;"	d	file:
yySecondOfDay	generic/tclDate.h	/^#define yySecondOfDay /;"	d
yySeconds	generic/tclDate.h	/^#define yySeconds /;"	d
yySeconds	generic/tclDateClassic.c	/^#define yySeconds	/;"	d	file:
yySpaceCount	generic/tclDate.h	/^#define yySpaceCount	/;"	d
yyTimezone	generic/tclDate.h	/^#define yyTimezone /;"	d
yyTimezone	generic/tclDateClassic.c	/^#define yyTimezone	/;"	d	file:
yyYear	generic/tclDate.h	/^#define yyYear	/;"	d
yyYear	generic/tclDateClassic.c	/^#define yyYear	/;"	d	file:
yy_location_print_	generic/tclDate.c	/^yy_location_print_ (FILE *yyo, YYLTYPE const * const yylocp)$/;"	f	typeref:typename:YY_ATTRIBUTE_UNUSED int	file:
yy_location_print_	generic/tclDateClassic.c	/^yy_location_print_ (FILE *yyo, YYLTYPE const * const yylocp)$/;"	f	typeref:typename:YY_ATTRIBUTE_UNUSED int	file:
yy_reduce_print	generic/tclDate.c	/^yy_reduce_print (yy_state_t *yyssp, YYSTYPE *yyvsp, YYLTYPE *yylsp,$/;"	f	typeref:typename:void	file:
yy_reduce_print	generic/tclDateClassic.c	/^yy_reduce_print (yy_state_t *yyssp, YYSTYPE *yyvsp, YYLTYPE *yylsp,$/;"	f	typeref:typename:void	file:
yy_stack_print	generic/tclDate.c	/^yy_stack_print (yy_state_t *yybottom, yy_state_t *yytop)$/;"	f	typeref:typename:void	file:
yy_stack_print	generic/tclDateClassic.c	/^yy_stack_print (yy_state_t *yybottom, yy_state_t *yytop)$/;"	f	typeref:typename:void	file:
yy_state_fast_t	generic/tclDate.c	/^typedef int yy_state_fast_t;$/;"	t	typeref:typename:int	file:
yy_state_fast_t	generic/tclDateClassic.c	/^typedef int yy_state_fast_t;$/;"	t	typeref:typename:int	file:
yy_state_t	generic/tclDate.c	/^typedef yytype_int8 yy_state_t;$/;"	t	typeref:typename:yytype_int8	file:
yy_state_t	generic/tclDateClassic.c	/^typedef yytype_int8 yy_state_t;$/;"	t	typeref:typename:yytype_int8	file:
yy_symbol_print	generic/tclDate.c	/^yy_symbol_print (FILE *yyo,$/;"	f	typeref:typename:void	file:
yy_symbol_print	generic/tclDateClassic.c	/^yy_symbol_print (FILE *yyo,$/;"	f	typeref:typename:void	file:
yy_symbol_value_print	generic/tclDate.c	/^yy_symbol_value_print (FILE *yyo,$/;"	f	typeref:typename:void	file:
yy_symbol_value_print	generic/tclDateClassic.c	/^yy_symbol_value_print (FILE *yyo,$/;"	f	typeref:typename:void	file:
yyalloc	generic/tclDate.c	/^union yyalloc$/;"	u	file:
yyalloc	generic/tclDateClassic.c	/^union yyalloc$/;"	u	file:
yycheck	generic/tclDate.c	/^static const yytype_int8 yycheck[] =$/;"	v	typeref:typename:const yytype_int8[]	file:
yycheck	generic/tclDateClassic.c	/^static const yytype_int8 yycheck[] =$/;"	v	typeref:typename:const yytype_int8[]	file:
yyclearin	generic/tclDate.c	/^#define yyclearin /;"	d	file:
yyclearin	generic/tclDateClassic.c	/^#define yyclearin /;"	d	file:
yydate	generic/tclDate.h	/^#define yydate	/;"	d
yydebug	generic/tclDate.c	/^#define yydebug /;"	d	file:
yydebug	generic/tclDate.c	/^int yydebug;$/;"	v	typeref:typename:int
yydebug	generic/tclDateClassic.c	/^#define yydebug /;"	d	file:
yydebug	generic/tclDateClassic.c	/^int yydebug;$/;"	v	typeref:typename:int
yydefact	generic/tclDate.c	/^static const yytype_int8 yydefact[] =$/;"	v	typeref:typename:const yytype_int8[]	file:
yydefact	generic/tclDateClassic.c	/^static const yytype_int8 yydefact[] =$/;"	v	typeref:typename:const yytype_int8[]	file:
yydefgoto	generic/tclDate.c	/^static const yytype_int8 yydefgoto[] =$/;"	v	typeref:typename:const yytype_int8[]	file:
yydefgoto	generic/tclDateClassic.c	/^static const yytype_int8 yydefgoto[] =$/;"	v	typeref:typename:const yytype_int8[]	file:
yydestruct	generic/tclDate.c	/^yydestruct (const char *yymsg,$/;"	f	typeref:typename:void	file:
yydestruct	generic/tclDateClassic.c	/^yydestruct (const char *yymsg,$/;"	f	typeref:typename:void	file:
yyerrok	generic/tclDate.c	/^#define yyerrok /;"	d	file:
yyerrok	generic/tclDateClassic.c	/^#define yyerrok /;"	d	file:
yyerror	generic/tclDate.c	/^#define yyerror /;"	d	file:
yyerror	generic/tclDateClassic.c	/^#define yyerror /;"	d	file:
yylex	generic/tclDate.c	/^#define yylex /;"	d	file:
yylex	generic/tclDateClassic.c	/^#define yylex /;"	d	file:
yyls_alloc	generic/tclDate.c	/^  YYLTYPE yyls_alloc;$/;"	m	union:yyalloc	typeref:typename:YYLTYPE	file:
yyls_alloc	generic/tclDateClassic.c	/^  YYLTYPE yyls_alloc;$/;"	m	union:yyalloc	typeref:typename:YYLTYPE	file:
yynerrs	generic/tclDate.c	/^#define yynerrs /;"	d	file:
yypact	generic/tclDate.c	/^static const yytype_int8 yypact[] =$/;"	v	typeref:typename:const yytype_int8[]	file:
yypact	generic/tclDateClassic.c	/^static const yytype_int8 yypact[] =$/;"	v	typeref:typename:const yytype_int8[]	file:
yypact_value_is_default	generic/tclDate.c	/^#define yypact_value_is_default(/;"	d	file:
yypact_value_is_default	generic/tclDateClassic.c	/^#define yypact_value_is_default(/;"	d	file:
yyparse	generic/tclDate.c	/^#define yyparse /;"	d	file:
yyparse	generic/tclDate.c	/^yyparse (DateInfo* info)$/;"	f	typeref:typename:int
yyparse	generic/tclDateClassic.c	/^#define yyparse /;"	d	file:
yyparse	generic/tclDateClassic.c	/^yyparse (DateInfo* info)$/;"	f	typeref:typename:int
yypgoto	generic/tclDate.c	/^static const yytype_int8 yypgoto[] =$/;"	v	typeref:typename:const yytype_int8[]	file:
yypgoto	generic/tclDateClassic.c	/^static const yytype_int8 yypgoto[] =$/;"	v	typeref:typename:const yytype_int8[]	file:
yyr1	generic/tclDate.c	/^static const yytype_int8 yyr1[] =$/;"	v	typeref:typename:const yytype_int8[]	file:
yyr1	generic/tclDateClassic.c	/^static const yytype_int8 yyr1[] =$/;"	v	typeref:typename:const yytype_int8[]	file:
yyr2	generic/tclDate.c	/^static const yytype_int8 yyr2[] =$/;"	v	typeref:typename:const yytype_int8[]	file:
yyr2	generic/tclDateClassic.c	/^static const yytype_int8 yyr2[] =$/;"	v	typeref:typename:const yytype_int8[]	file:
yyrline	generic/tclDate.c	/^static const yytype_int16 yyrline[] =$/;"	v	typeref:typename:const yytype_int16[]	file:
yyrline	generic/tclDateClassic.c	/^static const yytype_int16 yyrline[] =$/;"	v	typeref:typename:const yytype_int16[]	file:
yyss_alloc	generic/tclDate.c	/^  yy_state_t yyss_alloc;$/;"	m	union:yyalloc	typeref:typename:yy_state_t	file:
yyss_alloc	generic/tclDateClassic.c	/^  yy_state_t yyss_alloc;$/;"	m	union:yyalloc	typeref:typename:yy_state_t	file:
yystos	generic/tclDate.c	/^static const yytype_int8 yystos[] =$/;"	v	typeref:typename:const yytype_int8[]	file:
yystos	generic/tclDateClassic.c	/^static const yytype_int8 yystos[] =$/;"	v	typeref:typename:const yytype_int8[]	file:
yysymbol_kind_t	generic/tclDate.c	/^enum yysymbol_kind_t$/;"	g	file:
yysymbol_kind_t	generic/tclDate.c	/^typedef enum yysymbol_kind_t yysymbol_kind_t;$/;"	t	typeref:enum:yysymbol_kind_t	file:
yysymbol_kind_t	generic/tclDateClassic.c	/^enum yysymbol_kind_t$/;"	g	file:
yysymbol_kind_t	generic/tclDateClassic.c	/^typedef enum yysymbol_kind_t yysymbol_kind_t;$/;"	t	typeref:enum:yysymbol_kind_t	file:
yysymbol_name	generic/tclDate.c	/^yysymbol_name (yysymbol_kind_t yysymbol)$/;"	f	typeref:typename:const char *	file:
yysymbol_name	generic/tclDateClassic.c	/^yysymbol_name (yysymbol_kind_t yysymbol)$/;"	f	typeref:typename:const char *	file:
yytable	generic/tclDate.c	/^static const yytype_int8 yytable[] =$/;"	v	typeref:typename:const yytype_int8[]	file:
yytable	generic/tclDateClassic.c	/^static const yytype_int8 yytable[] =$/;"	v	typeref:typename:const yytype_int8[]	file:
yytable_value_is_error	generic/tclDate.c	/^#define yytable_value_is_error(/;"	d	file:
yytable_value_is_error	generic/tclDateClassic.c	/^#define yytable_value_is_error(/;"	d	file:
yytname	generic/tclDate.c	/^static const char *const yytname[] =$/;"	v	typeref:typename:const char * const[]	file:
yytname	generic/tclDateClassic.c	/^static const char *const yytname[] =$/;"	v	typeref:typename:const char * const[]	file:
yytoken_kind_t	generic/tclDate.c	/^  typedef enum yytokentype yytoken_kind_t;$/;"	t	typeref:enum:yytokentype	file:
yytoken_kind_t	generic/tclDateClassic.c	/^  typedef enum yytokentype yytoken_kind_t;$/;"	t	typeref:enum:yytokentype	file:
yytokentype	generic/tclDate.c	/^  enum yytokentype$/;"	g	file:
yytokentype	generic/tclDateClassic.c	/^  enum yytokentype$/;"	g	file:
yytranslate	generic/tclDate.c	/^static const yytype_int8 yytranslate[] =$/;"	v	typeref:typename:const yytype_int8[]	file:
yytranslate	generic/tclDateClassic.c	/^static const yytype_int8 yytranslate[] =$/;"	v	typeref:typename:const yytype_int8[]	file:
yytype_int16	generic/tclDate.c	/^typedef __INT_LEAST16_TYPE__ yytype_int16;$/;"	t	typeref:typename:__INT_LEAST16_TYPE__	file:
yytype_int16	generic/tclDate.c	/^typedef int_least16_t yytype_int16;$/;"	t	typeref:typename:int_least16_t	file:
yytype_int16	generic/tclDate.c	/^typedef short yytype_int16;$/;"	t	typeref:typename:short	file:
yytype_int16	generic/tclDateClassic.c	/^typedef __INT_LEAST16_TYPE__ yytype_int16;$/;"	t	typeref:typename:__INT_LEAST16_TYPE__	file:
yytype_int16	generic/tclDateClassic.c	/^typedef int_least16_t yytype_int16;$/;"	t	typeref:typename:int_least16_t	file:
yytype_int16	generic/tclDateClassic.c	/^typedef short yytype_int16;$/;"	t	typeref:typename:short	file:
yytype_int8	generic/tclDate.c	/^typedef __INT_LEAST8_TYPE__ yytype_int8;$/;"	t	typeref:typename:__INT_LEAST8_TYPE__	file:
yytype_int8	generic/tclDate.c	/^typedef int_least8_t yytype_int8;$/;"	t	typeref:typename:int_least8_t	file:
yytype_int8	generic/tclDate.c	/^typedef signed char yytype_int8;$/;"	t	typeref:typename:signed char	file:
yytype_int8	generic/tclDateClassic.c	/^typedef __INT_LEAST8_TYPE__ yytype_int8;$/;"	t	typeref:typename:__INT_LEAST8_TYPE__	file:
yytype_int8	generic/tclDateClassic.c	/^typedef int_least8_t yytype_int8;$/;"	t	typeref:typename:int_least8_t	file:
yytype_int8	generic/tclDateClassic.c	/^typedef signed char yytype_int8;$/;"	t	typeref:typename:signed char	file:
yytype_uint16	generic/tclDate.c	/^typedef __UINT_LEAST16_TYPE__ yytype_uint16;$/;"	t	typeref:typename:__UINT_LEAST16_TYPE__	file:
yytype_uint16	generic/tclDate.c	/^typedef int yytype_uint16;$/;"	t	typeref:typename:int	file:
yytype_uint16	generic/tclDate.c	/^typedef uint_least16_t yytype_uint16;$/;"	t	typeref:typename:uint_least16_t	file:
yytype_uint16	generic/tclDate.c	/^typedef unsigned short yytype_uint16;$/;"	t	typeref:typename:unsigned short	file:
yytype_uint16	generic/tclDateClassic.c	/^typedef __UINT_LEAST16_TYPE__ yytype_uint16;$/;"	t	typeref:typename:__UINT_LEAST16_TYPE__	file:
yytype_uint16	generic/tclDateClassic.c	/^typedef int yytype_uint16;$/;"	t	typeref:typename:int	file:
yytype_uint16	generic/tclDateClassic.c	/^typedef uint_least16_t yytype_uint16;$/;"	t	typeref:typename:uint_least16_t	file:
yytype_uint16	generic/tclDateClassic.c	/^typedef unsigned short yytype_uint16;$/;"	t	typeref:typename:unsigned short	file:
yytype_uint8	generic/tclDate.c	/^typedef __UINT_LEAST8_TYPE__ yytype_uint8;$/;"	t	typeref:typename:__UINT_LEAST8_TYPE__	file:
yytype_uint8	generic/tclDate.c	/^typedef short yytype_uint8;$/;"	t	typeref:typename:short	file:
yytype_uint8	generic/tclDate.c	/^typedef uint_least8_t yytype_uint8;$/;"	t	typeref:typename:uint_least8_t	file:
yytype_uint8	generic/tclDate.c	/^typedef unsigned char yytype_uint8;$/;"	t	typeref:typename:unsigned char	file:
yytype_uint8	generic/tclDateClassic.c	/^typedef __UINT_LEAST8_TYPE__ yytype_uint8;$/;"	t	typeref:typename:__UINT_LEAST8_TYPE__	file:
yytype_uint8	generic/tclDateClassic.c	/^typedef short yytype_uint8;$/;"	t	typeref:typename:short	file:
yytype_uint8	generic/tclDateClassic.c	/^typedef uint_least8_t yytype_uint8;$/;"	t	typeref:typename:uint_least8_t	file:
yytype_uint8	generic/tclDateClassic.c	/^typedef unsigned char yytype_uint8;$/;"	t	typeref:typename:unsigned char	file:
yyvs_alloc	generic/tclDate.c	/^  YYSTYPE yyvs_alloc;$/;"	m	union:yyalloc	typeref:typename:YYSTYPE	file:
yyvs_alloc	generic/tclDateClassic.c	/^  YYSTYPE yyvs_alloc;$/;"	m	union:yyalloc	typeref:typename:YYSTYPE	file:
zError	compat/zlib/contrib/ada/zlib-thin.ads	/^   function zError (err : Int) return Chars_Ptr;$/;"	R
zError	compat/zlib/zconf.h	/^#  define zError                z_zError$/;"	d
zError	compat/zlib/zconf.h.in	/^#  define zError                z_zError$/;"	d	file:
zError	compat/zlib/zutil.c	/^const char * ZEXPORT zError(int err) {$/;"	f	typeref:typename:const char * ZEXPORT
z_adler32_combine	compat/zlib/zlib.h	/^#    define z_adler32_combine z_adler32_combine6/;"	d
z_const	compat/zlib/zconf.h	/^#  define z_const /;"	d
z_const	compat/zlib/zconf.h	/^#  define z_const$/;"	d
z_const	compat/zlib/zconf.h.in	/^#  define z_const /;"	d	file:
z_const	compat/zlib/zconf.h.in	/^#  define z_const$/;"	d	file:
z_crc32_combine	compat/zlib/zlib.h	/^#    define z_crc32_combine z_crc32_combine6/;"	d
z_crc32_combine_gen	compat/zlib/zlib.h	/^#    define z_crc32_combine_gen z_crc32_combine_gen6/;"	d
z_crc_t	compat/zlib/zconf.h	/^   typedef Z_U4 z_crc_t;$/;"	t	typeref:typename:Z_U4
z_crc_t	compat/zlib/zconf.h	/^   typedef unsigned long z_crc_t;$/;"	t	typeref:typename:unsigned long
z_crc_t	compat/zlib/zconf.h.in	/^   typedef Z_U4 z_crc_t;$/;"	t	typeref:typename:Z_U4	file:
z_crc_t	compat/zlib/zconf.h.in	/^   typedef unsigned long z_crc_t;$/;"	t	typeref:typename:unsigned long	file:
z_deflateInit	compat/zlib/zlib.h	/^#  define z_deflateInit(/;"	d
z_deflateInit2	compat/zlib/zlib.h	/^#  define z_deflateInit2(/;"	d
z_errmsg	compat/zlib/zutil.c	/^z_const char * const z_errmsg[10] = {$/;"	v	typeref:typename:z_const char * const[10]
z_error	compat/zlib/zutil.c	/^void ZLIB_INTERNAL z_error(char *m) {$/;"	f	typeref:typename:void ZLIB_INTERNAL
z_filefunc	compat/zlib/contrib/minizip/unzip.c	/^    zlib_filefunc64_32_def z_filefunc;$/;"	m	struct:__anon3259ecee0108	typeref:typename:zlib_filefunc64_32_def	file:
z_filefunc	compat/zlib/contrib/minizip/unzip.c	/^    zlib_filefunc64_32_def z_filefunc;$/;"	m	struct:__anon3259ecee0208	typeref:typename:zlib_filefunc64_32_def	file:
z_filefunc	compat/zlib/contrib/minizip/zip.c	/^    zlib_filefunc64_32_def z_filefunc;$/;"	m	struct:__anon7add25cb0208	typeref:typename:zlib_filefunc64_32_def	file:
z_gzgetc	compat/zlib/zlib.h	/^#  define z_gzgetc(/;"	d
z_gzoffset	compat/zlib/zlib.h	/^#    define z_gzoffset z_gzoffset6/;"	d
z_gzopen	compat/zlib/zlib.h	/^#    define z_gzopen z_gzopen6/;"	d
z_gzseek	compat/zlib/zlib.h	/^#    define z_gzseek z_gzseek6/;"	d
z_gztell	compat/zlib/zlib.h	/^#    define z_gztell z_gztell6/;"	d
z_inflateBackInit	compat/zlib/zlib.h	/^#  define z_inflateBackInit(/;"	d
z_inflateInit	compat/zlib/zlib.h	/^#  define z_inflateInit(/;"	d
z_inflateInit2	compat/zlib/zlib.h	/^#  define z_inflateInit2(/;"	d
z_longlong	compat/zlib/zconf.h	/^#  define z_longlong /;"	d
z_longlong	compat/zlib/zconf.h.in	/^#  define z_longlong /;"	d	file:
z_off64_t	compat/zlib/zconf.h	/^#    define z_off64_t /;"	d
z_off64_t	compat/zlib/zconf.h	/^#  define z_off64_t /;"	d
z_off64_t	compat/zlib/zconf.h.in	/^#    define z_off64_t /;"	d	file:
z_off64_t	compat/zlib/zconf.h.in	/^#  define z_off64_t /;"	d	file:
z_off_t	compat/zlib/zconf.h	/^#      define z_off_t /;"	d
z_off_t	compat/zlib/zconf.h	/^#  define z_off_t /;"	d
z_off_t	compat/zlib/zconf.h.in	/^#      define z_off_t /;"	d	file:
z_off_t	compat/zlib/zconf.h.in	/^#  define z_off_t /;"	d	file:
z_size_t	compat/zlib/zconf.h	/^     typedef size_t z_size_t;$/;"	t	typeref:typename:size_t
z_size_t	compat/zlib/zconf.h	/^     typedef unsigned NO_SIZE_T z_size_t;$/;"	t	typeref:typename:unsigned NO_SIZE_T
z_size_t	compat/zlib/zconf.h	/^     typedef unsigned long long z_size_t;$/;"	t	typeref:typename:unsigned long long
z_size_t	compat/zlib/zconf.h	/^     typedef unsigned long z_size_t;$/;"	t	typeref:typename:unsigned long
z_size_t	compat/zlib/zconf.h.in	/^     typedef size_t z_size_t;$/;"	t	typeref:typename:size_t	file:
z_size_t	compat/zlib/zconf.h.in	/^     typedef unsigned NO_SIZE_T z_size_t;$/;"	t	typeref:typename:unsigned NO_SIZE_T	file:
z_size_t	compat/zlib/zconf.h.in	/^     typedef unsigned long long z_size_t;$/;"	t	typeref:typename:unsigned long long	file:
z_size_t	compat/zlib/zconf.h.in	/^     typedef unsigned long z_size_t;$/;"	t	typeref:typename:unsigned long	file:
z_stream	compat/zlib/zlib.h	/^} z_stream;$/;"	t	typeref:struct:z_stream_s
z_stream_s	compat/zlib/zlib.h	/^typedef struct z_stream_s {$/;"	s
z_streamp	compat/zlib/zlib.h	/^typedef z_stream FAR *z_streamp;$/;"	t	typeref:typename:z_stream FAR *
z_verbose	compat/zlib/zutil.c	/^int ZLIB_INTERNAL z_verbose = verbose;$/;"	v	typeref:typename:int ZLIB_INTERNAL
z_word_t	compat/zlib/crc32.c	/^     typedef Z_U4 z_word_t;$/;"	t	typeref:typename:Z_U4	file:
z_word_t	compat/zlib/crc32.c	/^     typedef Z_U8 z_word_t;$/;"	t	typeref:typename:Z_U8	file:
zalloc	compat/zlib/contrib/dotzlib/DotZLib/DotZLib.cs	/^        uint zalloc;$/;"	f	struct:DotZLib.ZStream
zalloc	compat/zlib/test/example.c	/^static alloc_func zalloc = (alloc_func)0;$/;"	v	typeref:typename:alloc_func	file:
zalloc	compat/zlib/test/example.c	/^static alloc_func zalloc = myalloc;$/;"	v	typeref:typename:alloc_func	file:
zalloc	compat/zlib/zlib.h	/^    alloc_func zalloc;  \/* used to allocate the internal state *\/$/;"	m	struct:z_stream_s	typeref:typename:alloc_func
zapallsubs	generic/regexec.c	/^zapallsubs($/;"	f	typeref:typename:void	file:
zaptreesubs	generic/regexec.c	/^zaptreesubs($/;"	f	typeref:typename:void	file:
zcalloc	compat/zlib/zconf.h	/^#    define zcalloc               z_zcalloc$/;"	d
zcalloc	compat/zlib/zconf.h.in	/^#    define zcalloc               z_zcalloc$/;"	d	file:
zcalloc	compat/zlib/zutil.c	/^voidpf ZLIB_INTERNAL zcalloc(voidpf opaque, uInt items, uInt size) {$/;"	f	typeref:typename:voidpf ZLIB_INTERNAL
zcalloc	compat/zlib/zutil.c	/^voidpf ZLIB_INTERNAL zcalloc(voidpf opaque, unsigned items, unsigned size) {$/;"	f	typeref:typename:voidpf ZLIB_INTERNAL
zcfree	compat/zlib/zconf.h	/^#    define zcfree                z_zcfree$/;"	d
zcfree	compat/zlib/zconf.h.in	/^#    define zcfree                z_zcfree$/;"	d	file:
zcfree	compat/zlib/zutil.c	/^void ZLIB_INTERNAL zcfree(voidpf opaque, voidpf ptr) {$/;"	f	typeref:typename:void ZLIB_INTERNAL
zclose_file	compat/zlib/contrib/minizip/ioapi.h	/^    close_file_func     zclose_file;$/;"	m	struct:zlib_filefunc64_def_s	typeref:typename:close_file_func
zclose_file	compat/zlib/contrib/minizip/ioapi.h	/^    close_file_func     zclose_file;$/;"	m	struct:zlib_filefunc_def_s	typeref:typename:close_file_func
zconf	compat/zlib/Makefile.in	/^zconf: $(SRCDIR)zconf.h.in$/;"	t
zconf.h.cmakein	compat/zlib/Makefile.in	/^zconf.h.cmakein: $(SRCDIR)zconf.h.in$/;"	t
zdecode	compat/zlib/contrib/minizip/crypt.h	/^#define zdecode(/;"	d
zencode	compat/zlib/contrib/minizip/crypt.h	/^#define zencode(/;"	d
zero	generic/tclCmdIL.c	/^    #define zero /;"	d	file:
zerr	compat/zlib/examples/zpipe.c	/^void zerr(int ret)$/;"	f	typeref:typename:void
zerror_file	compat/zlib/contrib/minizip/ioapi.h	/^    testerror_file_func zerror_file;$/;"	m	struct:zlib_filefunc64_def_s	typeref:typename:testerror_file_func
zerror_file	compat/zlib/contrib/minizip/ioapi.h	/^    testerror_file_func zerror_file;$/;"	m	struct:zlib_filefunc_def_s	typeref:typename:testerror_file_func
zfile_func64	compat/zlib/contrib/minizip/ioapi.h	/^    zlib_filefunc64_def zfile_func64;$/;"	m	struct:zlib_filefunc64_32_def_s	typeref:typename:zlib_filefunc64_def
zfree	compat/zlib/contrib/dotzlib/DotZLib/DotZLib.cs	/^        uint zfree;$/;"	f	struct:DotZLib.ZStream
zfree	compat/zlib/test/example.c	/^static free_func zfree = (free_func)0;$/;"	v	typeref:typename:free_func	file:
zfree	compat/zlib/test/example.c	/^static free_func zfree = myfree;$/;"	v	typeref:typename:free_func	file:
zfree	compat/zlib/zlib.h	/^    free_func  zfree;   \/* used to free the internal state *\/$/;"	m	struct:z_stream_s	typeref:typename:free_func
zfstream_h	compat/zlib/contrib/iostream/zfstream.h	/^#define zfstream_h$/;"	d
zip.$(HOST_OBJEXT)	unix/Makefile.in	/^zip.$(HOST_OBJEXT):$/;"	t
zip.$(HOST_OBJEXT)	win/Makefile.in	/^zip.$(HOST_OBJEXT):$/;"	t
zip64	compat/zlib/contrib/minizip/zip.c	/^    int  zip64;               \/* Add ZIP64 extended information in the extra field *\/$/;"	m	struct:__anon7add25cb0108	typeref:typename:int	file:
zip64FlushWriteBuffer	compat/zlib/contrib/minizip/zip.c	/^local int zip64FlushWriteBuffer(zip64_internal* zi) {$/;"	f	typeref:typename:local int
zip64_internal	compat/zlib/contrib/minizip/zip.c	/^} zip64_internal;$/;"	t	typeref:struct:__anon7add25cb0208	file:
zip64local_SearchCentralDir	compat/zlib/contrib/minizip/zip.c	/^local ZPOS64_T zip64local_SearchCentralDir(const zlib_filefunc64_32_def* pzlib_filefunc_def, voi/;"	f	typeref:typename:local ZPOS64_T
zip64local_SearchCentralDir64	compat/zlib/contrib/minizip/zip.c	/^local ZPOS64_T zip64local_SearchCentralDir64(const zlib_filefunc64_32_def* pzlib_filefunc_def, v/;"	f	typeref:typename:local ZPOS64_T
zip64local_TmzDateToDosDate	compat/zlib/contrib/minizip/zip.c	/^local uLong zip64local_TmzDateToDosDate(const tm_zip* ptm) {$/;"	f	typeref:typename:local uLong
zip64local_getByte	compat/zlib/contrib/minizip/zip.c	/^local int zip64local_getByte(const zlib_filefunc64_32_def* pzlib_filefunc_def, voidpf filestream/;"	f	typeref:typename:local int
zip64local_getLong	compat/zlib/contrib/minizip/zip.c	/^local int zip64local_getLong(const zlib_filefunc64_32_def* pzlib_filefunc_def, voidpf filestream/;"	f	typeref:typename:local int
zip64local_getLong64	compat/zlib/contrib/minizip/zip.c	/^local int zip64local_getLong64(const zlib_filefunc64_32_def* pzlib_filefunc_def, voidpf filestre/;"	f	typeref:typename:local int
zip64local_getShort	compat/zlib/contrib/minizip/zip.c	/^local int zip64local_getShort(const zlib_filefunc64_32_def* pzlib_filefunc_def, voidpf filestrea/;"	f	typeref:typename:local int
zip64local_putValue	compat/zlib/contrib/minizip/zip.c	/^local int zip64local_putValue(const zlib_filefunc64_32_def* pzlib_filefunc_def, voidpf filestrea/;"	f	typeref:typename:local int
zip64local_putValue_inmemory	compat/zlib/contrib/minizip/zip.c	/^local void zip64local_putValue_inmemory (void* dest, ZPOS64_T x, int nbByte) {$/;"	f	typeref:typename:local void
zipChannelType	generic/tclZipfs.c	/^static const Tcl_ChannelType zipChannelType = {$/;"	v	typeref:typename:const Tcl_ChannelType	file:
zipClose	compat/zlib/contrib/minizip/zip.c	/^extern int ZEXPORT zipClose(zipFile file, const char* global_comment) {$/;"	f	typeref:typename:int ZEXPORT
zipCloseFileInZip	compat/zlib/contrib/minizip/zip.c	/^extern int ZEXPORT zipCloseFileInZip(zipFile file) {$/;"	f	typeref:typename:int ZEXPORT
zipCloseFileInZipRaw	compat/zlib/contrib/minizip/zip.c	/^extern int ZEXPORT zipCloseFileInZipRaw(zipFile file, uLong uncompressed_size, uLong crc32) {$/;"	f	typeref:typename:int ZEXPORT
zipCloseFileInZipRaw64	compat/zlib/contrib/minizip/zip.c	/^extern int ZEXPORT zipCloseFileInZipRaw64(zipFile file, ZPOS64_T uncompressed_size, uLong crc32)/;"	f	typeref:typename:int ZEXPORT
zipEntryPtr	generic/tclZipfs.c	/^    ZipEntry *zipEntryPtr;	\/* Pointer back to virtual file *\/$/;"	m	struct:ZipChannel	typeref:typename:ZipEntry *	file:
zipFile	compat/zlib/contrib/minizip/zip.h	/^typedef zipFile__ *zipFile;$/;"	t	typeref:typename:zipFile__ *
zipFilePtr	generic/tclZipfs.c	/^    ZipFile *zipFilePtr;	\/* The ZIP file holding this channel *\/$/;"	m	struct:ZipChannel	typeref:typename:ZipFile *	file:
zipFilePtr	generic/tclZipfs.c	/^    ZipFile *zipFilePtr;	\/* The ZIP file holding this virtual file *\/$/;"	m	struct:ZipEntry	typeref:typename:ZipFile *	file:
zipFile__	compat/zlib/contrib/minizip/zip.h	/^typedef struct TagzipFile__ { int unused; } zipFile__;$/;"	t	typeref:struct:TagzipFile__
zipHash	generic/tclZipfs.c	/^    Tcl_HashTable zipHash;	\/* Mount to ZipFile mapping *\/$/;"	m	struct:ZipFSGlobals	typeref:typename:Tcl_HashTable	file:
zipOpen	compat/zlib/contrib/minizip/zip.c	/^extern zipFile ZEXPORT zipOpen(const char* pathname, int append) {$/;"	f	typeref:typename:zipFile ZEXPORT
zipOpen2	compat/zlib/contrib/minizip/zip.c	/^extern zipFile ZEXPORT zipOpen2(const char *pathname, int append, zipcharpc* globalcomment, zlib/;"	f	typeref:typename:zipFile ZEXPORT
zipOpen2_64	compat/zlib/contrib/minizip/zip.c	/^extern zipFile ZEXPORT zipOpen2_64(const void *pathname, int append, zipcharpc* globalcomment, z/;"	f	typeref:typename:zipFile ZEXPORT
zipOpen3	compat/zlib/contrib/minizip/zip.c	/^extern zipFile ZEXPORT zipOpen3(const void *pathname, int append, zipcharpc* globalcomment, zlib/;"	f	typeref:typename:zipFile ZEXPORT
zipOpen64	compat/zlib/contrib/minizip/zip.c	/^extern zipFile ZEXPORT zipOpen64(const void* pathname, int append) {$/;"	f	typeref:typename:zipFile ZEXPORT
zipOpenNewFileInZip	compat/zlib/contrib/minizip/zip.c	/^extern int ZEXPORT zipOpenNewFileInZip(zipFile file, const char* filename, const zip_fileinfo* z/;"	f	typeref:typename:int ZEXPORT
zipOpenNewFileInZip2	compat/zlib/contrib/minizip/zip.c	/^extern int ZEXPORT zipOpenNewFileInZip2(zipFile file, const char* filename, const zip_fileinfo* /;"	f	typeref:typename:int ZEXPORT
zipOpenNewFileInZip2_64	compat/zlib/contrib/minizip/zip.c	/^extern int ZEXPORT zipOpenNewFileInZip2_64(zipFile file, const char* filename, const zip_fileinf/;"	f	typeref:typename:int ZEXPORT
zipOpenNewFileInZip3	compat/zlib/contrib/minizip/zip.c	/^extern int ZEXPORT zipOpenNewFileInZip3(zipFile file, const char* filename, const zip_fileinfo* /;"	f	typeref:typename:int ZEXPORT
zipOpenNewFileInZip3_64	compat/zlib/contrib/minizip/zip.c	/^extern int ZEXPORT zipOpenNewFileInZip3_64(zipFile file, const char* filename, const zip_fileinf/;"	f	typeref:typename:int ZEXPORT
zipOpenNewFileInZip4	compat/zlib/contrib/minizip/zip.c	/^extern int ZEXPORT zipOpenNewFileInZip4(zipFile file, const char* filename, const zip_fileinfo* /;"	f	typeref:typename:int ZEXPORT
zipOpenNewFileInZip4_64	compat/zlib/contrib/minizip/zip.c	/^extern int ZEXPORT zipOpenNewFileInZip4_64(zipFile file, const char* filename, const zip_fileinf/;"	f	typeref:typename:int ZEXPORT
zipOpenNewFileInZip64	compat/zlib/contrib/minizip/zip.c	/^extern int ZEXPORT zipOpenNewFileInZip64(zipFile file, const char* filename, const zip_fileinfo*/;"	f	typeref:typename:int ZEXPORT
zipRemoveExtraInfoBlock	compat/zlib/contrib/minizip/zip.c	/^extern int ZEXPORT zipRemoveExtraInfoBlock(char* pData, int* dataLen, short sHeader) {$/;"	f	typeref:typename:int ZEXPORT
zipWriteInFileInZip	compat/zlib/contrib/minizip/zip.c	/^extern int ZEXPORT zipWriteInFileInZip(zipFile file, const void* buf, unsigned int len) {$/;"	f	typeref:typename:int ZEXPORT
zip_copyright	compat/zlib/contrib/minizip/zip.c	/^const char zip_copyright[] =" zip 1.01 Copyright 1998-2004 Gilles Vollant - http:\/\/www.winimag/;"	v	typeref:typename:const char[]
zip_fileinfo	compat/zlib/contrib/minizip/zip.h	/^} zip_fileinfo;$/;"	t	typeref:struct:__anon7add25d00108
zipcharpc	compat/zlib/contrib/minizip/zip.h	/^typedef const char* zipcharpc;$/;"	t	typeref:typename:const char *
zipfs	unix/configure.ac	/^AC_ARG_ENABLE(zipfs,$/;"	e
zipfs	win/configure.ac	/^AC_ARG_ENABLE(zipfs,$/;"	e
zipfsFilesystem	generic/tclZipfs.c	/^static const Tcl_Filesystem zipfsFilesystem = {$/;"	v	typeref:typename:const Tcl_Filesystem	file:
zipfs_literal_tcl_library	generic/tclZipfs.c	/^static const char *zipfs_literal_tcl_library = NULL;$/;"	v	typeref:typename:const char *	file:
zlib	compat/zlib/CMakeLists.txt	/^add_library(zlib SHARED ${ZLIB_SRCS} ${ZLIB_DLL_SRCS} ${ZLIB_PUBLIC_HDRS} ${ZLIB_PRIVATE_HDRS})$/;"	t
zlib	compat/zlib/CMakeLists.txt	/^project(zlib C)$/;"	p
zlib	compat/zlib/zlib.pc.in	/^Name: zlib$/;"	N
zlib	compat/zlib/zlib.pc.in	/^Name: zlib$/;"	p
zlib Usage Example	compat/zlib/examples/zlib_how.html	/^<h2 align="center"> zlib Usage Example <\/h2>$/;"	i
zlib Usage Example	compat/zlib/examples/zlib_how.html	/^<title>zlib Usage Example<\/title>$/;"	j
zlib.3.pdf	compat/zlib/Makefile.in	/^zlib.3.pdf: $(SRCDIR)zlib.3$/;"	t
zlib1222add	compat/zlib/contrib/asm686/match.S	/^#define zlib1222add	/;"	d	file:
zlibAllocMem	compat/zlib/contrib/delphi/ZLib.pas	/^function zlibAllocMem(AppData: Pointer; Items, Size: Integer): Pointer; cdecl;$/;"	f	typeref:typename:Pointer
zlibChannelType	generic/tclZlib.c	/^static const Tcl_ChannelType zlibChannelType = {$/;"	v	typeref:typename:const Tcl_ChannelType	file:
zlibCommands	generic/tclZlib.c	/^    enum zlibCommands {$/;"	g	function:ZlibCmd	file:
zlibCompileFlags	compat/zlib/contrib/ada/zlib-thin.ads	/^   function zlibCompileFlags return ULong;$/;"	R
zlibCompileFlags	compat/zlib/contrib/dotzlib/DotZLib/DotZLib.cs	/^        private static extern uint zlibCompileFlags();$/;"	m	class:DotZLib.Info	file:
zlibCompileFlags	compat/zlib/contrib/pascal/zlibpas.pas	/^function zlibCompileFlags: LongInt;$/;"	f	typeref:typename:LongInt
zlibCompileFlags	compat/zlib/contrib/pascal/zlibpas.pas	/^function zlibCompileFlags; external;$/;"	f
zlibCompileFlags	compat/zlib/zconf.h	/^#  define zlibCompileFlags      z_zlibCompileFlags$/;"	d
zlibCompileFlags	compat/zlib/zconf.h.in	/^#  define zlibCompileFlags      z_zlibCompileFlags$/;"	d	file:
zlibCompileFlags	compat/zlib/zutil.c	/^uLong ZEXPORT zlibCompileFlags(void) {$/;"	f	typeref:typename:uLong ZEXPORT
zlibFormats	generic/tclZlib.c	/^    enum zlibFormats {$/;"	g	function:ZlibPushSubcmd	file:
zlibFormats	generic/tclZlib.c	/^    enum zlibFormats {$/;"	g	function:ZlibStreamSubcmd	file:
zlibFreeMem	compat/zlib/contrib/delphi/ZLib.pas	/^procedure zlibFreeMem(AppData, Block: Pointer); cdecl;$/;"	p
zlibStreamCommands	generic/tclZlib.c	/^    enum zlibStreamCommands {$/;"	g	function:ZlibStreamCmd	file:
zlibVersion	compat/zlib/contrib/ada/zlib-thin.ads	/^   function zlibVersion return Chars_Ptr;$/;"	R
zlibVersion	compat/zlib/contrib/dotzlib/DotZLib/DotZLib.cs	/^        private static extern string zlibVersion();$/;"	m	class:DotZLib.Info	file:
zlibVersion	compat/zlib/contrib/pascal/zlibpas.pas	/^function zlibVersion: PChar;$/;"	f	typeref:typename:PChar
zlibVersion	compat/zlib/contrib/pascal/zlibpas.pas	/^function zlibVersion; external;$/;"	f
zlibVersion	compat/zlib/zconf.h	/^#  define zlibVersion           z_zlibVersion$/;"	d
zlibVersion	compat/zlib/zconf.h.in	/^#  define zlibVersion           z_zlibVersion$/;"	d	file:
zlibVersion	compat/zlib/zutil.c	/^const char * ZEXPORT zlibVersion(void) {$/;"	f	typeref:typename:const char * ZEXPORT
zlib_filefunc64_32_def	compat/zlib/contrib/minizip/ioapi.h	/^} zlib_filefunc64_32_def;$/;"	t	typeref:struct:zlib_filefunc64_32_def_s
zlib_filefunc64_32_def_s	compat/zlib/contrib/minizip/ioapi.h	/^typedef struct zlib_filefunc64_32_def_s$/;"	s
zlib_filefunc64_def	compat/zlib/contrib/minizip/ioapi.h	/^} zlib_filefunc64_def;$/;"	t	typeref:struct:zlib_filefunc64_def_s
zlib_filefunc64_def_s	compat/zlib/contrib/minizip/ioapi.h	/^typedef struct zlib_filefunc64_def_s$/;"	s
zlib_filefunc_def	compat/zlib/contrib/minizip/ioapi.h	/^} zlib_filefunc_def;$/;"	t	typeref:struct:zlib_filefunc_def_s
zlib_filefunc_def_s	compat/zlib/contrib/minizip/ioapi.h	/^typedef struct zlib_filefunc_def_s$/;"	s
zlib_top_build	compat/zlib/contrib/minizip/Makefile.am	/^zlib_top_builddir = $(top_builddir)\/..\/..$/;"	d
zlib_top_builddir	compat/zlib/contrib/minizip/Makefile.am	/^zlib_top_builddir = $(top_builddir)\/..\/..$/;"	m
zlib_top_src	compat/zlib/contrib/minizip/Makefile.am	/^zlib_top_srcdir = $(top_srcdir)\/..\/..$/;"	d
zlib_top_srcdir	compat/zlib/contrib/minizip/Makefile.am	/^zlib_top_srcdir = $(top_srcdir)\/..\/..$/;"	m
zlib_version	compat/zlib/zlib.h	/^#define zlib_version /;"	d
zlibstatic	compat/zlib/CMakeLists.txt	/^add_library(zlibstatic STATIC ${ZLIB_SRCS} ${ZLIB_PUBLIC_HDRS} ${ZLIB_PRIVATE_HDRS})$/;"	t
zmemcmp	compat/zlib/zutil.c	/^int ZLIB_INTERNAL zmemcmp(const Bytef* s1, const Bytef* s2, uInt len) {$/;"	f	typeref:typename:int ZLIB_INTERNAL
zmemcmp	compat/zlib/zutil.h	/^#    define zmemcmp /;"	d
zmemcpy	compat/zlib/zutil.c	/^void ZLIB_INTERNAL zmemcpy(Bytef* dest, const Bytef* source, uInt len) {$/;"	f	typeref:typename:void ZLIB_INTERNAL
zmemcpy	compat/zlib/zutil.h	/^#    define zmemcpy /;"	d
zmemzero	compat/zlib/zutil.c	/^void ZLIB_INTERNAL zmemzero(Bytef* dest, uInt len) {$/;"	f	typeref:typename:void ZLIB_INTERNAL
zmemzero	compat/zlib/zutil.h	/^#    define zmemzero(/;"	d
zone	generic/tclGetDate.y	/^zone	: tZONE tDST {$/;"	l
zone	generic/tclGetDateClassic.y	/^zone	: tZONE tDST {$/;"	l
zopen32_file	compat/zlib/contrib/minizip/ioapi.h	/^    open_file_func      zopen32_file;$/;"	m	struct:zlib_filefunc64_32_def_s	typeref:typename:open_file_func
zopen64_file	compat/zlib/contrib/minizip/ioapi.h	/^    open64_file_func    zopen64_file;$/;"	m	struct:zlib_filefunc64_def_s	typeref:typename:open64_file_func
zopen_file	compat/zlib/contrib/minizip/ioapi.h	/^    open_file_func      zopen_file;$/;"	m	struct:zlib_filefunc_def_s	typeref:typename:open_file_func
zpull	compat/zlib/examples/gzjoin.c	/^local void zpull(z_streamp strm, bin *in)$/;"	f	typeref:typename:local void
zread_file	compat/zlib/contrib/minizip/ioapi.h	/^    read_file_func      zread_file;$/;"	m	struct:zlib_filefunc64_def_s	typeref:typename:read_file_func
zread_file	compat/zlib/contrib/minizip/ioapi.h	/^    read_file_func      zread_file;$/;"	m	struct:zlib_filefunc_def_s	typeref:typename:read_file_func
zs_add	generic/tclZlib.c	/^	zs_add, zs_checksum, zs_close, zs_eof, zs_finalize, zs_flush,$/;"	e	enum:ZlibStreamCmd::zlibStreamCommands	file:
zs_checksum	generic/tclZlib.c	/^	zs_add, zs_checksum, zs_close, zs_eof, zs_finalize, zs_flush,$/;"	e	enum:ZlibStreamCmd::zlibStreamCommands	file:
zs_close	generic/tclZlib.c	/^	zs_add, zs_checksum, zs_close, zs_eof, zs_finalize, zs_flush,$/;"	e	enum:ZlibStreamCmd::zlibStreamCommands	file:
zs_eof	generic/tclZlib.c	/^	zs_add, zs_checksum, zs_close, zs_eof, zs_finalize, zs_flush,$/;"	e	enum:ZlibStreamCmd::zlibStreamCommands	file:
zs_finalize	generic/tclZlib.c	/^	zs_add, zs_checksum, zs_close, zs_eof, zs_finalize, zs_flush,$/;"	e	enum:ZlibStreamCmd::zlibStreamCommands	file:
zs_flush	generic/tclZlib.c	/^	zs_add, zs_checksum, zs_close, zs_eof, zs_finalize, zs_flush,$/;"	e	enum:ZlibStreamCmd::zlibStreamCommands	file:
zs_fullflush	generic/tclZlib.c	/^	zs_fullflush, zs_get, zs_header, zs_put, zs_reset$/;"	e	enum:ZlibStreamCmd::zlibStreamCommands	file:
zs_get	generic/tclZlib.c	/^	zs_fullflush, zs_get, zs_header, zs_put, zs_reset$/;"	e	enum:ZlibStreamCmd::zlibStreamCommands	file:
zs_header	generic/tclZlib.c	/^	zs_fullflush, zs_get, zs_header, zs_put, zs_reset$/;"	e	enum:ZlibStreamCmd::zlibStreamCommands	file:
zs_put	generic/tclZlib.c	/^	zs_fullflush, zs_get, zs_header, zs_put, zs_reset$/;"	e	enum:ZlibStreamCmd::zlibStreamCommands	file:
zs_reset	generic/tclZlib.c	/^	zs_fullflush, zs_get, zs_header, zs_put, zs_reset$/;"	e	enum:ZlibStreamCmd::zlibStreamCommands	file:
zseek32_file	compat/zlib/contrib/minizip/ioapi.h	/^    seek_file_func      zseek32_file;$/;"	m	struct:zlib_filefunc64_32_def_s	typeref:typename:seek_file_func
zseek64_file	compat/zlib/contrib/minizip/ioapi.h	/^    seek64_file_func    zseek64_file;$/;"	m	struct:zlib_filefunc64_def_s	typeref:typename:seek64_file_func
zseek_file	compat/zlib/contrib/minizip/ioapi.h	/^    seek_file_func      zseek_file;$/;"	m	struct:zlib_filefunc_def_s	typeref:typename:seek_file_func
zstrerror	compat/zlib/gzguts.h	/^#    define zstrerror(/;"	d
zstrerror	compat/zlib/gzguts.h	/^#  define zstrerror(/;"	d
zstringlen	compat/zlib/contrib/iostream2/zstream.h	/^class zstringlen {$/;"	c
zstringlen	compat/zlib/contrib/iostream2/zstream.h	/^inline zstringlen::zstringlen(izstream& zs) {$/;"	f	class:zstringlen
zstringlen	compat/zlib/contrib/iostream2/zstream.h	/^inline zstringlen::zstringlen(ozstream& zs, const char* x) {$/;"	f	class:zstringlen
ztell32_file	compat/zlib/contrib/minizip/ioapi.h	/^    tell_file_func      ztell32_file;$/;"	m	struct:zlib_filefunc64_32_def_s	typeref:typename:tell_file_func
ztell64_file	compat/zlib/contrib/minizip/ioapi.h	/^    tell64_file_func    ztell64_file;$/;"	m	struct:zlib_filefunc64_def_s	typeref:typename:tell64_file_func
ztell_file	compat/zlib/contrib/minizip/ioapi.h	/^    tell_file_func      ztell_file;$/;"	m	struct:zlib_filefunc_def_s	typeref:typename:tell_file_func
zutil.$(HOST_OBJEXT)	unix/Makefile.in	/^zutil.$(HOST_OBJEXT):$/;"	t
zutil.$(HOST_OBJEXT)	win/Makefile.in	/^zutil.$(HOST_OBJEXT):$/;"	t
zutil.lo	compat/zlib/Makefile.in	/^adler32.lo zutil.lo: $(SRCDIR)zutil.h $(SRCDIR)zlib.h zconf.h$/;"	t
zutil.lo	compat/zlib/Makefile.in	/^zutil.lo: $(SRCDIR)zutil.c$/;"	t
zutil.o	compat/zlib/Makefile.in	/^adler32.o zutil.o: $(SRCDIR)zutil.h $(SRCDIR)zlib.h zconf.h$/;"	t
zutil.o	compat/zlib/Makefile.in	/^zutil.o: $(SRCDIR)zutil.c$/;"	t
zutil.obj	compat/zlib/contrib/delphi/zlibd32.mak	/^zutil.obj: zutil.c zutil.h zlib.h zconf.h$/;"	t
zutil.obj	compat/zlib/contrib/pascal/zlibd32.mak	/^zutil.obj: zutil.c zutil.h zlib.h zconf.h$/;"	t
zwrite_file	compat/zlib/contrib/minizip/ioapi.h	/^    write_file_func     zwrite_file;$/;"	m	struct:zlib_filefunc64_def_s	typeref:typename:write_file_func
zwrite_file	compat/zlib/contrib/minizip/ioapi.h	/^    write_file_func     zwrite_file;$/;"	m	struct:zlib_filefunc_def_s	typeref:typename:write_file_func
~CodecBase	compat/zlib/contrib/dotzlib/DotZLib/CodecBase.cs	/^        ~CodecBase()$/;"	m	class:DotZLib.CodecBase	file:
~GZipStream	compat/zlib/contrib/dotzlib/DotZLib/GZipStream.cs	/^        ~GZipStream()$/;"	m	class:DotZLib.GZipStream	file:
~gzfilebuf	compat/zlib/contrib/iostream/zfstream.cpp	/^gzfilebuf::~gzfilebuf() {$/;"	f	class:gzfilebuf
~gzfilebuf	compat/zlib/contrib/iostream3/zfstream.cc	/^gzfilebuf::~gzfilebuf()$/;"	f	class:gzfilebuf
~gzfilestream_common	compat/zlib/contrib/iostream/zfstream.cpp	/^gzfilestream_common::~gzfilestream_common()$/;"	f	class:gzfilestream_common
~gzifstream	compat/zlib/contrib/iostream/zfstream.cpp	/^gzifstream::~gzifstream() { }$/;"	f	class:gzifstream
~gzofstream	compat/zlib/contrib/iostream/zfstream.cpp	/^gzofstream::~gzofstream() { }$/;"	f	class:gzofstream
~izstream	compat/zlib/contrib/iostream2/zstream.h	/^        ~izstream() { close(); }$/;"	f	class:izstream
~ozstream	compat/zlib/contrib/iostream2/zstream.h	/^        ~ozstream() {$/;"	f	class:ozstream
